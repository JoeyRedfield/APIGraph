{"Functions": {"wrap(javax.microedition.khronos.opengles.GL,int,java.io.Writer)": {"Returns": [["@B_javax#microedition#khronos#opengles#GL_E@", "no returns description in source"]], "Parameters": [["@B_javax#microedition#khronos#opengles#GL_E@", "GL no parameter comment"], ["int", "int no parameter comment"], ["@B_java#io#Writer_E@", "Writer no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public static GL wrap (GL gl, int configFlags, Writer log)"}, "wrap(javax.microedition.khronos.egl.EGL,int,java.io.Writer)": {"Returns": [["@B_javax#microedition#khronos#egl#EGL_E@", "the wrapped EGL interface."]], "Parameters": [["@B_javax#microedition#khronos#egl#EGL_E@", "EGL: the existing GL interface. Must implement EGL and EGL10. May optionally implement EGL11 as well."], ["int", "int: A bitmask of error checking flags."], ["@B_java#io#Writer_E@", "Writer: - null to disable logging, non-null to enable logging."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Wrap an existing EGL interface in a new EGL interface that adds support for error checking and/or logging.", "history": "Added in API level 1", "FullName": "public static EGL wrap (EGL egl, int configFlags, Writer log)"}, "GLDebugHelper()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public GLDebugHelper ()"}}, "Inheritance": [], "ClassName": "android.opengl.GLDebugHelper", "ClassDesc": "A helper class for debugging OpenGL ES applications. Wraps the supplied GL interface with a new GL interface that adds support for error checking and logging."}