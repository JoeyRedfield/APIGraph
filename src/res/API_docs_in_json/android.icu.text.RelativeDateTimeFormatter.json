{"Functions": {"getInstance(android.icu.util.ULocale,android.icu.text.NumberFormat,android.icu.text.RelativeDateTimeFormatter.Style,android.icu.text.DisplayContext)": {"Returns": [["@B_android#icu#text#RelativeDateTimeFormatter_E@", "no returns description in source"]], "Parameters": [["@B_android#icu#util#ULocale_E@", "ULocale: the locale"], ["@B_android#icu#text#NumberFormat_E@", "NumberFormat: the number format object. It is defensively copied to ensure thread-safety and immutability of this class. May be null."], ["@B_android#icu#text#RelativeDateTimeFormatter#Style_E@", "RelativeDateTimeFormatter.Style: the style."], ["@B_android#icu#text#DisplayContext_E@", "DisplayContext: the capitalization context."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a RelativeDateTimeFormatter for a particular locale that uses a particular NumberFormat object, style, and capitalization context", "history": "Added in API level 24", "FullName": "public static RelativeDateTimeFormatter getInstance (ULocale locale, NumberFormat nf, RelativeDateTimeFormatter.Style style, DisplayContext capitalizationContext)"}, "getInstance()": {"Returns": [["@B_android#icu#text#RelativeDateTimeFormatter_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a RelativeDateTimeFormatter for the default locale.", "history": "Added in API level 24", "FullName": "public static RelativeDateTimeFormatter getInstance ()"}, "getInstance(android.icu.util.ULocale)": {"Returns": [["@B_android#icu#text#RelativeDateTimeFormatter_E@", "An instance of RelativeDateTimeFormatter."]], "Parameters": [["@B_android#icu#util#ULocale_E@", "ULocale: the locale."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a RelativeDateTimeFormatter for a particular locale.", "history": "Added in API level 24", "FullName": "public static RelativeDateTimeFormatter getInstance (ULocale locale)"}, "getInstance(android.icu.util.ULocale,android.icu.text.NumberFormat)": {"Returns": [["@B_android#icu#text#RelativeDateTimeFormatter_E@", "An instance of RelativeDateTimeFormatter."]], "Parameters": [["@B_android#icu#util#ULocale_E@", "ULocale: the locale"], ["@B_android#icu#text#NumberFormat_E@", "NumberFormat: the number format object. It is defensively copied to ensure thread-safety and immutability of this class."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a RelativeDateTimeFormatter for a particular locale that uses a particular NumberFormat object.", "history": "Added in API level 24", "FullName": "public static RelativeDateTimeFormatter getInstance (ULocale locale, NumberFormat nf)"}, "getFormatStyle()": {"Returns": [["@B_android#icu#text#RelativeDateTimeFormatter#Style_E@", "The formatting style."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return style", "history": "Added in API level 24", "FullName": "public RelativeDateTimeFormatter.Style getFormatStyle ()"}, "formatNumeric(double,android.icu.text.RelativeDateTimeFormatter.RelativeDateTimeUnit)": {"Returns": [["@B_java#lang#String_E@", "The formatted string (may be empty in case of error)"]], "Parameters": [["double", "double: The signed offset for the specified unit. This will be formatted according to this object's NumberFormat object."], ["@B_android#icu#text#RelativeDateTimeFormatter#RelativeDateTimeUnit_E@", "RelativeDateTimeFormatter.RelativeDateTimeUnit: The unit to use when formatting the relative date, e.g. RelativeDateTimeUnit.WEEK, RelativeDateTimeUnit.FRIDAY."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Format a combination of RelativeDateTimeUnit and numeric offset using a numeric style, e.g. \"1 week ago\", \"in 1 week\", \"5 weeks ago\", \"in 5 weeks\".", "history": "Added in API level 28", "FullName": "public String formatNumeric (double offset, RelativeDateTimeFormatter.RelativeDateTimeUnit unit)"}, "combineDateAndTime(java.lang.String,java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "the date and time concatenated according to the default calendar in this locale e.g 'yesterday, 3:45'"]], "Parameters": [["@B_java#lang#String_E@", "String: the relative date e.g 'yesterday'"], ["@B_java#lang#String_E@", "String: the time e.g '3:45'"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Combines a relative date string and a time string in this object's locale. This is done with the same date-time separator used for the default calendar in this locale.", "history": "Added in API level 24", "FullName": "public String combineDateAndTime (String relativeDateString, String timeString)"}, "format(double,android.icu.text.RelativeDateTimeFormatter.RelativeDateTimeUnit)": {"Returns": [["@B_java#lang#String_E@", "The formatted string (may be empty in case of error)"]], "Parameters": [["double", "double: The signed offset for the specified field."], ["@B_android#icu#text#RelativeDateTimeFormatter#RelativeDateTimeUnit_E@", "RelativeDateTimeFormatter.RelativeDateTimeUnit: The unit to use when formatting the relative date, e.g. RelativeDateTimeUnit.WEEK, RelativeDateTimeUnit.FRIDAY."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Format a combination of RelativeDateTimeUnit and numeric offset using a text style if possible, e.g. \"last week\", \"this week\", \"next week\", \"yesterday\", \"tomorrow\". Falls back to numeric style if no appropriate text term is available for the specified offset in the object\u2019s locale.", "history": "Added in API level 28", "FullName": "public String format (double offset, RelativeDateTimeFormatter.RelativeDateTimeUnit unit)"}, "getNumberFormat()": {"Returns": [["@B_android#icu#text#NumberFormat_E@", "A copy of the NumberFormat."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a copy of the NumberFormat this object is using.", "history": "Added in API level 24", "FullName": "public NumberFormat getNumberFormat ()"}, "format(double,android.icu.text.RelativeDateTimeFormatter.Direction,android.icu.text.RelativeDateTimeFormatter.RelativeUnit)": {"Returns": [["@B_java#lang#String_E@", "the formatted string"]], "Parameters": [["double", "double: The numerical amount e.g 5. This value is formatted according to this object's @B_android#icu#text#NumberFormat_E@ object."], ["@B_android#icu#text#RelativeDateTimeFormatter#Direction_E@", "RelativeDateTimeFormatter.Direction: NEXT means a future relative date; LAST means a past relative date."], ["@B_android#icu#text#RelativeDateTimeFormatter#RelativeUnit_E@", "RelativeDateTimeFormatter.RelativeUnit: the unit e.g day? month? year?"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if direction is something other than NEXT or LAST."]], "SeeAlso": [], "Permissions": [], "Description": "Formats a relative date with a quantity such as \"in 5 days\" or \"3 months ago\"", "history": "Added in API level 24", "FullName": "public String format (double quantity, RelativeDateTimeFormatter.Direction direction, RelativeDateTimeFormatter.RelativeUnit unit)"}, "format(android.icu.text.RelativeDateTimeFormatter.Direction,android.icu.text.RelativeDateTimeFormatter.AbsoluteUnit)": {"Returns": [["@B_java#lang#String_E@", "the formatted string. If direction has a value that is documented as not being fully supported in every locale (for example NEXT_2 or LAST_2) then this function may return null to signal that no formatted string is available."]], "Parameters": [["@B_android#icu#text#RelativeDateTimeFormatter#Direction_E@", "RelativeDateTimeFormatter.Direction: NEXT, LAST, THIS, etc."], ["@B_android#icu#text#RelativeDateTimeFormatter#AbsoluteUnit_E@", "RelativeDateTimeFormatter.AbsoluteUnit: e.g SATURDAY, DAY, MONTH"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the direction is incompatible with unit this can occur with NOW which can only take PLAIN."]], "SeeAlso": [], "Permissions": [], "Description": "Formats a relative date without a quantity.", "history": "Added in API level 24", "FullName": "public String format (RelativeDateTimeFormatter.Direction direction, RelativeDateTimeFormatter.AbsoluteUnit unit)"}, "getInstance(java.util.Locale,android.icu.text.NumberFormat)": {"Returns": [["@B_android#icu#text#RelativeDateTimeFormatter_E@", "An instance of RelativeDateTimeFormatter."]], "Parameters": [["@B_java#util#Locale_E@", "Locale: the @B_java#util#Locale_E@"], ["@B_android#icu#text#NumberFormat_E@", "NumberFormat: the number format object. It is defensively copied to ensure thread-safety and immutability of this class."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a RelativeDateTimeFormatter for a particular @B_java#util#Locale_E@ that uses a particular NumberFormat object.", "history": "Added in API level 24", "FullName": "public static RelativeDateTimeFormatter getInstance (Locale locale, NumberFormat nf)"}, "getCapitalizationContext()": {"Returns": [["@B_android#icu#text#DisplayContext_E@", "The capitalization context."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return capitalization context.", "history": "Added in API level 24", "FullName": "public DisplayContext getCapitalizationContext ()"}, "getInstance(java.util.Locale)": {"Returns": [["@B_android#icu#text#RelativeDateTimeFormatter_E@", "An instance of RelativeDateTimeFormatter."]], "Parameters": [["@B_java#util#Locale_E@", "Locale: the @B_java#util#Locale_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a RelativeDateTimeFormatter for a particular @B_java#util#Locale_E@.", "history": "Added in API level 24", "FullName": "public static RelativeDateTimeFormatter getInstance (Locale locale)"}}, "Inheritance": [], "ClassName": "android.icu.text.RelativeDateTimeFormatter", "ClassDesc": "Formats simple relative dates. There are two types of relative dates that it handles: relative dates with a quantity e.g \"in 5 days\" relative dates without a quantity e.g \"next Tuesday\" This API is very basic and is intended to be a building block for more fancy APIs. The caller tells it exactly what to display in a locale independent way. While this class automatically provides the correct plural forms, the grammatical form is otherwise as neutral as possible. It is the caller's responsibility to handle cut-off logic such as deciding between displaying \"in 7 days\" or \"in 1 week.\" This API supports relative dates involving one single unit. This API does not support relative dates involving compound units. e.g \"in 5 days and 4 hours\" nor does it support parsing. This class is both immutable and thread-safe. Here are some examples of use: In the future, we may add more forms, such as abbreviated/short forms (3 secs ago), and relative day periods (\"yesterday afternoon\"), etc."}