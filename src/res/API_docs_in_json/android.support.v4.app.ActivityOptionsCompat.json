{"Functions": {"makeTaskLaunchBehind()": {"Returns": [["@B_android#support#v4#app#ActivityOptionsCompat_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "If set along with Intent.FLAG_ACTIVITY_NEW_DOCUMENT then the task being launched will not be presented to the user but will instead be only available through the recents task list. In addition, the new task wil be affiliated with the launching activity's task. Affiliated tasks are grouped together in the recents task list. This behavior is not supported for activities with @B_android#R#attr#launchMode_E@ values of singleInstance or singleTask.", "history": "added in version 24.2.0", "FullName": "ActivityOptionsCompat makeTaskLaunchBehind ()"}, "ActivityOptionsCompat()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "ActivityOptionsCompat ()"}, "toBundle()": {"Returns": [["@B_android#os#Bundle_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the created options as a Bundle, which can be passed to @B_android#support#v4#content#ContextCompat#startActivity_E@. Note that the returned Bundle is still owned by the ActivityOptions object; you must not modify it, but can supply it to the startActivity methods that take an options Bundle.", "history": "added in version 22.0.0", "FullName": "Bundle toBundle ()"}, "setLaunchBounds(android.graphics.Rect)": {"Returns": [["@B_android#support#v4#app#ActivityOptionsCompat_E@", "no returns description in source"]], "Parameters": [["@B_android#graphics#Rect_E@", "Rect: Launch bounds to use for the activity or null for fullscreen."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the bounds (window size) that the activity should be launched in. Rect position should be provided in pixels and in screen coordinates. Set to null explicitly for fullscreen.", "history": "added in version 24.2.0", "FullName": "ActivityOptionsCompat setLaunchBounds (Rect screenSpacePixelRect)"}, "requestUsageTimeReport(android.app.PendingIntent)": {"Returns": [], "Parameters": [["@B_android#app#PendingIntent_E@", "PendingIntent: A broadcast receiver that will receive the report."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Ask the the system track that time the user spends in the app being launched, and report it back once done. The report will be sent to the given receiver, with the extras @B_android#support#v4#app#ActivityOptionsCompat#EXTRA_USAGE_TIME_REPORT_E@ and @B_android#support#v4#app#ActivityOptionsCompat#EXTRA_USAGE_TIME_REPORT_PACKAGES_E@ filled in. The time interval tracked is from launching this activity until the user leaves that activity's flow. They are considered to stay in the flow as long as new activities are being launched or returned to from the original flow, even if this crosses package or task boundaries. For example, if the originator starts an activity to view an image, and while there the user selects to share, which launches their email app in a new task, and they complete the share, the time during that entire operation will be included until they finally hit back from the original image viewer activity. The user is considered to complete a flow once they switch to another activity that is not part of the tracked flow. This may happen, for example, by using the notification shade, launcher, or recents to launch or switch to another app. Simply going in to these navigation elements does not break the flow (although the launcher and recents stops time tracking of the session); it is the act of going somewhere else that completes the tracking.", "history": "added in version 24.2.0", "FullName": "void requestUsageTimeReport (PendingIntent receiver)"}, "getLaunchBounds()": {"Returns": [["@B_android#graphics#Rect_E@", "Bounds used to launch the activity."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v4#app#ActivityOptionsCompat#setLaunchBounds_E@"], "Permissions": [], "Description": "Returns the bounds that should be used to launch the activity.", "history": "added in version 24.2.0", "FullName": "Rect getLaunchBounds ()"}, "makeBasic()": {"Returns": [["@B_android#support#v4#app#ActivityOptionsCompat_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a basic ActivityOptions that has no special animation associated with it. Other options can still be set.", "history": "added in version 24.2.0", "FullName": "ActivityOptionsCompat makeBasic ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v4.app.ActivityOptionsCompat", "ClassDesc": "Helper for accessing features in https:##developer#android#com@B_android#app#ActivityOptions_E@ in a backwards compatible fashion."}