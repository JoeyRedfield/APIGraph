{"Functions": {"getRunLimit()": {"Returns": [["int", "the index of the first character following the run"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the index of the first character following the run with respect to all attributes containing the current character. Any contiguous text segments having the same attributes (the same set of attribute/value pairs) are treated as separate runs if the attributes have been given to those text segments separately.", "history": "Added in API level 1", "FullName": "public abstract int getRunLimit ()"}, "getRunLimit(java.util.Set<?extendsjava.text.AttributedCharacterIterator.Attribute>)": {"Returns": [["int", "the index of the first character following the run"]], "Parameters": [["@B_java#util#Set_E@", "Set: a set of the desired attributes"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the index of the first character following the run with respect to the given attributes containing the current character.", "history": "Added in API level 1", "FullName": "public abstract int getRunLimit (Set<? extends AttributedCharacterIterator.Attribute> attributes)"}, "getRunStart()": {"Returns": [["int", "the index of the first character of the run"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the index of the first character of the run with respect to all attributes containing the current character. Any contiguous text segments having the same attributes (the same set of attribute/value pairs) are treated as separate runs if the attributes have been given to those text segments separately.", "history": "Added in API level 1", "FullName": "public abstract int getRunStart ()"}, "getAllAttributeKeys()": {"Returns": [["@B_java#util#Set_E@", "the keys of all attributes"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the keys of all attributes defined on the iterator's text range. The set is empty if no attributes are defined.", "history": "Added in API level 1", "FullName": "public abstract Set<AttributedCharacterIterator.Attribute> getAllAttributeKeys ()"}, "getRunLimit(java.text.AttributedCharacterIterator.Attribute)": {"Returns": [["int", "the index of the first character following the run"]], "Parameters": [["@B_java#text#AttributedCharacterIterator#Attribute_E@", "AttributedCharacterIterator.Attribute: the desired attribute"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the index of the first character following the run with respect to the given attribute containing the current character.", "history": "Added in API level 1", "FullName": "public abstract int getRunLimit (AttributedCharacterIterator.Attribute attribute)"}, "getAttribute(java.text.AttributedCharacterIterator.Attribute)": {"Returns": [["@B_java#lang#Object_E@", "the value of the named attribute or null"]], "Parameters": [["@B_java#text#AttributedCharacterIterator#Attribute_E@", "AttributedCharacterIterator.Attribute: the desired attribute"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of the named attribute for the current character. Returns null if the attribute is not defined.", "history": "Added in API level 1", "FullName": "public abstract Object getAttribute (AttributedCharacterIterator.Attribute attribute)"}, "getAttributes()": {"Returns": [["@B_java#util#Map_E@", "a map with the attributes defined on the current character"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a map with the attributes defined on the current character.", "history": "Added in API level 1", "FullName": "public abstract Map<AttributedCharacterIterator.Attribute, Object> getAttributes ()"}, "getRunStart(java.util.Set<?extendsjava.text.AttributedCharacterIterator.Attribute>)": {"Returns": [["int", "the index of the first character of the run"]], "Parameters": [["@B_java#util#Set_E@", "Set: a set of the desired attributes."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the index of the first character of the run with respect to the given attributes containing the current character.", "history": "Added in API level 1", "FullName": "public abstract int getRunStart (Set<? extends AttributedCharacterIterator.Attribute> attributes)"}, "getRunStart(java.text.AttributedCharacterIterator.Attribute)": {"Returns": [["int", "the index of the first character of the run"]], "Parameters": [["@B_java#text#AttributedCharacterIterator#Attribute_E@", "AttributedCharacterIterator.Attribute: the desired attribute."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the index of the first character of the run with respect to the given attribute containing the current character.", "history": "Added in API level 1", "FullName": "public abstract int getRunStart (AttributedCharacterIterator.Attribute attribute)"}}, "Inheritance": [], "ClassName": "java.text.AttributedCharacterIterator", "ClassDesc": "An AttributedCharacterIterator allows iteration through both text and related attribute information. An attribute is a key/value pair, identified by the key. No two attributes on a given character can have the same key. The values for an attribute are immutable, or must not be mutated by clients or storage. They are always passed by reference, and not cloned. A run with respect to an attribute is a maximum text range for which: the attribute is undefined or null for the entire range, or the attribute value is defined and has the same non-null value for the entire range. A run with respect to a set of attributes is a maximum text range for which this condition is met for each member attribute. When getting a run with no explicit attributes specified (i.e., calling @B_java#text#AttributedCharacterIterator#getRunStart_E@ and @B_java#text#AttributedCharacterIterator#getRunLimit_E@), any contiguous text segments having the same attributes (the same set of attribute/value pairs) are treated as separate runs if the attributes have been given to those text segments separately. The returned indexes are limited to the range of the iterator. The returned attribute information is limited to runs that contain the current character. Attribute keys are instances of @B_java#text#AttributedCharacterIterator#Attribute_E@ and its subclasses, such as @B_java#awt#font#TextAttribute_E@."}