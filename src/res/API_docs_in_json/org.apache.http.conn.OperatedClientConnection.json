{"Functions": {"opening(java.net.Socket, org.apache.http.HttpHost)": {"Returns": [], "Parameters": [["@B_java#net#Socket_E@", "the unconnected socket which is about to be connected."], ["@B_org#apache#http#HttpHost_E@", "the target host of this connection"]], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Signals that this connection is in the process of being open. By calling this method, you can provide the connection with the unconnected socket that will be connected before @B_org#apache#http#conn#OperatedClientConnection#openCompleted_E@ is called. This allows the connection to close that socket if @B_org#apache#http#HttpConnection#shutdown_E@ is called before it is open. Closing the unconnected socket will interrupt a thread that is blocked on the connect. Otherwise, that thread will either time out on the connect, or it returns successfully and then opens this connection which was just shut down. You also must call @B_org#apache#http#conn#OperatedClientConnection#openCompleted_E@ in order to complete the process", "history": "Added in API level 1", "FullName": "public abstract void opening (Socket sock, HttpHost target)"}, "getSocket()": {"Returns": [["", "the socket for communicating with the @B_org#apache#http#conn#OperatedClientConnection#getTargetHost_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtains the socket for this connection. The return value is well-defined only while the connection is open. It may change even while the connection is open, because of an @B_org#apache#http#conn#OperatedClientConnection#update_E@.", "history": "Added in API level 1", "FullName": "public abstract Socket getSocket ()"}, "openCompleted(boolean, org.apache.http.params.HttpParams)": {"Returns": [], "Parameters": [["boolean", "true if this connection is secure, for example if an SSLSocket is used, or false if it is not secure"], ["@B_org#apache#http#params#HttpParams_E@", "parameters for this connection. The parameters will be used when creating dependent objects, for example to determine buffer sizes."]], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Signals that the connection has been successfully open. An attempt to call this method on an open connection will cause an exception.", "history": "Added in API level 1", "FullName": "public abstract void openCompleted (boolean secure, HttpParams params)"}, "getTargetHost()": {"Returns": [["", "the host to which this connection is opened"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtains the target host for this connection. If the connection is to a proxy but not tunnelled, this is the proxy. If the connection is tunnelled through a proxy, this is the target of the tunnel. The return value is well-defined only while the connection is open. It may change even while the connection is open, because of an @B_org#apache#http#conn#OperatedClientConnection#update_E@.", "history": "Added in API level 1", "FullName": "public abstract HttpHost getTargetHost ()"}, "update(java.net.Socket, org.apache.http.HttpHost, boolean, org.apache.http.params.HttpParams)": {"Returns": [], "Parameters": [["@B_java#net#Socket_E@", "the new socket for communicating with the target host, or null to continue using the old socket. If null is passed, helper objects that depend on the socket should be re-used. In that case, some changes in the parameters will not take effect."], ["@B_org#apache#http#HttpHost_E@", "the new target host of this connection"], ["boolean", "true if this connection is now secure, false if it is not secure"], ["@B_org#apache#http#params#HttpParams_E@", "new parameters for this connection"]], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Updates this connection. A connection can be updated only while it is open. Updates are used for example when a tunnel has been established, or when a TLS/SSL connection has been layered on top of a plain socket connection.", "history": "Added in API level 1", "FullName": "public abstract void update (Socket sock, HttpHost target, boolean secure, HttpParams params)"}, "isSecure()": {"Returns": [["", "true if this connection is secure, false otherwise"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether this connection is secure. The return value is well-defined only while the connection is open. It may change even while the connection is open, because of an @B_org#apache#http#conn#OperatedClientConnection#update_E@.", "history": "Added in API level 1", "FullName": "public abstract boolean isSecure ()"}}, "Inheritance": [], "ClassName": "org.apache.http.conn.OperatedClientConnection", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit A client-side connection that relies on outside logic to connect sockets to the appropriate hosts. It can be operated directly by an application, or through an @B_org#apache#http#conn#ClientConnectionOperator_E@."}