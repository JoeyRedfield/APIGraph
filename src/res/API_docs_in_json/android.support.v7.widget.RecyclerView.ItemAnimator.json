{"Functions": {"setChangeDuration(long)": {"Returns": [], "Parameters": [["long", "long: The change duration"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the duration for which all change animations will run.", "history": "added in version 22.0.0", "FullName": "void setChangeDuration (long changeDuration)"}, "getAddDuration()": {"Returns": [["long", "The current add duration"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the current duration for which all add animations will run.", "history": "added in version 22.0.0", "FullName": "long getAddDuration ()"}, "setSupportsChangeAnimations(boolean)": {"Returns": [], "Parameters": [["boolean", "true if change animations are supported by this ItemAnimator, false otherwise. If the property is false, the ItemAnimator will not receive a call to @B_android#support#v7#widget#RecyclerView#ItemAnimator#animateChange_E@ when changes occur."]], "Throws": [], "SeeAlso": ["@B_android#support#v7#widget#RecyclerView#Adapter#notifyItemChanged_E@", "@B_android#support#v7#widget#RecyclerView#Adapter#notifyItemRangeChanged_E@"], "Permissions": [], "Description": "Sets whether this ItemAnimator supports animations of item change events. If you set this property to false, actions on the data set which change the contents of items will not be animated. What those animations are is left up to the discretion of the ItemAnimator subclass, in its @B_android#support#v7#widget#RecyclerView#ItemAnimator#animateChange_E@ implementation. The value of this property is true by default.", "history": "", "FullName": "public void setSupportsChangeAnimations (boolean supportsChangeAnimations)"}, "RecyclerView.ItemAnimator()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "RecyclerView.ItemAnimator ()"}, "obtainHolderInfo()": {"Returns": [["@B_android#support#v7#widget#RecyclerView#ItemAnimator#ItemHolderInfo_E@", "A new @B_android#support#v7#widget#RecyclerView#ItemAnimator#ItemHolderInfo_E@."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a new @B_android#support#v7#widget#RecyclerView#ItemAnimator#ItemHolderInfo_E@ which will be used to store information about the ViewHolder. This information will later be passed into animate** methods. You can override this method if you want to extend @B_android#support#v7#widget#RecyclerView#ItemAnimator#ItemHolderInfo_E@ and provide your own instances.", "history": "added in version 23.1.0", "FullName": "RecyclerView.ItemAnimator.ItemHolderInfo obtainHolderInfo ()"}, "endAnimations()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Method called when all item animations should be ended immediately. This could happen when other events, like scrolling, occur, so that animating views can be quickly put into their proper end locations. Implementations should ensure that any animations running on any items are canceled and affected properties are set to their end values. Also, @B_android#support#v7#widget#RecyclerView#ItemAnimator#dispatchAnimationFinished_E@ should be called for each finished animation since the animations are effectively done when this method is called.", "history": "added in version 22.0.0", "FullName": "void endAnimations ()"}, "setRemoveDuration(long)": {"Returns": [], "Parameters": [["long", "long: The remove duration"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the duration for which all remove animations will run.", "history": "added in version 22.0.0", "FullName": "void setRemoveDuration (long removeDuration)"}, "getSupportsChangeAnimations()": {"Returns": [["", "true if change animations are supported, false otherwise"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether this ItemAnimator supports animations of change events.", "history": "", "FullName": "public boolean getSupportsChangeAnimations ()"}, "getMoveDuration()": {"Returns": [["long", "The current move duration"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the current duration for which all move animations will run.", "history": "added in version 22.0.0", "FullName": "long getMoveDuration ()"}, "runPendingAnimations()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when there are pending animations waiting to be started. This state is governed by the return values from @B_android#support#v7#widget#RecyclerView#ItemAnimator#animateAppearance_E@, @B_android#support#v7#widget#RecyclerView#ItemAnimator#animateChange_E@ @B_android#support#v7#widget#RecyclerView#ItemAnimator#animatePersistence_E@, and @B_android#support#v7#widget#RecyclerView#ItemAnimator#animateDisappearance_E@, which inform the RecyclerView that the ItemAnimator wants to be called later to start the associated animations. runPendingAnimations() will be scheduled to be run on the next frame.", "history": "added in version 22.0.0", "FullName": "void runPendingAnimations ()"}, "getChangeDuration()": {"Returns": [["long", "The current change duration"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the current duration for which all change animations will run.", "history": "added in version 22.0.0", "FullName": "long getChangeDuration ()"}, "isRunning()": {"Returns": [["boolean", "true if there are any item animations currently running, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Method which returns whether there are any item animations currently running. This method can be used to determine whether to delay other actions until animations end.", "history": "added in version 22.0.0", "FullName": "boolean isRunning ()"}, "dispatchAnimationsFinished()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method should be called by ItemAnimator implementations to notify any listeners that all pending and active item animations are finished.", "history": "added in version 22.0.0", "FullName": "void dispatchAnimationsFinished ()"}, "setMoveDuration(long)": {"Returns": [], "Parameters": [["long", "long: The move duration"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the duration for which all move animations will run.", "history": "added in version 22.0.0", "FullName": "void setMoveDuration (long moveDuration)"}, "setAddDuration(long)": {"Returns": [], "Parameters": [["long", "long: The add duration"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the duration for which all add animations will run.", "history": "added in version 22.0.0", "FullName": "void setAddDuration (long addDuration)"}, "getRemoveDuration()": {"Returns": [["long", "The current remove duration"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the current duration for which all remove animations will run.", "history": "added in version 22.0.0", "FullName": "long getRemoveDuration ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v7.widget.RecyclerView.ItemAnimator", "ClassDesc": "This class defines the animations that take place on items as changes are made to the adapter. Subclasses of ItemAnimator can be used to implement custom animations for actions on ViewHolder items. The RecyclerView will manage retaining these items while they are being animated, but implementors must call @B_android#support#v7#widget#RecyclerView#ItemAnimator#dispatchAnimationFinished_E@ when a ViewHolder's animation is finished. In other words, there must be a matching @B_android#support#v7#widget#RecyclerView#ItemAnimator#dispatchAnimationFinished_E@ call for each @B_android#support#v7#widget#RecyclerView#ItemAnimator#animateAppearance_E@, @B_android#support#v7#widget#RecyclerView#ItemAnimator#animateChange_E@ @B_android#support#v7#widget#RecyclerView#ItemAnimator#animatePersistence_E@, and @B_android#support#v7#widget#RecyclerView#ItemAnimator#animateDisappearance_E@ call. By default, RecyclerView uses @B_android#support#v7#widget#DefaultItemAnimator_E@."}