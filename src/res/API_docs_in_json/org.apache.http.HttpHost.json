{"Functions": {"getSchemeName()": {"Returns": [["", "the scheme name"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the scheme name.", "history": "Added in API level 1", "FullName": "public String getSchemeName ()"}, "HttpHost(org.apache.http.HttpHost)": {"Returns": [], "Parameters": [["@B_org#apache#http#HttpHost_E@", "the HTTP host to copy details from"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Copy constructor for @B_org#apache#http#HttpHost_E@.", "history": "Added in API level 1", "FullName": "public HttpHost (HttpHost httphost)"}, "toURI()": {"Returns": [["", "the host URI"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the host URI, as a string.", "history": "Added in API level 1", "FullName": "public String toURI ()"}, "getPort()": {"Returns": [["", "the host port, or -1 if not set"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the port.", "history": "Added in API level 1", "FullName": "public int getPort ()"}, "HttpHost(java.lang.String, int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "the hostname (IP or DNS name)"], ["int", "the port number. -1 indicates the scheme default port."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new @B_org#apache#http#HttpHost_E@, with default scheme.", "history": "Added in API level 1", "FullName": "public HttpHost (String hostname, int port)"}, "toString()": {"Returns": [["", "a printable representation of this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string containing a concise, human-readable description of this object. Subclasses are encouraged to override this method and provide an implementation that takes into account the object's type and data. The default implementation is equivalent to the following expression: See toString method.", "history": "Added in API level 1", "FullName": "public String toString ()"}, "HttpHost(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "the hostname (IP or DNS name)"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new @B_org#apache#http#HttpHost_E@, with default scheme and port.", "history": "Added in API level 1", "FullName": "public HttpHost (String hostname)"}, "getHostName()": {"Returns": [["", "the host name (IP or DNS name)"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the host name.", "history": "Added in API level 1", "FullName": "public String getHostName ()"}, "toHostString()": {"Returns": [["", "the host string, for example localhost:8080"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtains the host string, without scheme prefix.", "history": "Added in API level 1", "FullName": "public String toHostString ()"}, "equals(java.lang.Object)": {"Returns": [["", "true if the specified object is equal to this Object; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "the object to compare this instance with."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Compares this instance with the specified object and indicates if they are equal. In order to be equal, o must represent the same object as this instance using a class-specific comparison. The general contract is that this comparison should be reflexive, symmetric, and transitive. Also, no object reference other than null is equal to null. The default implementation returns true only if this == o. See equals method. The general contract for the equals and @B_java#lang#Object#hashCode_E@ methods is that if equals returns true for any two objects, then hashCode() must return the same value for these objects. This means that subclasses of Object usually override either both methods or neither of them.", "history": "Added in API level 1", "FullName": "public boolean equals (Object obj)"}, "clone()": {"Returns": [["", "a copy of this object."]], "Parameters": [], "Throws": [["@B_java#lang#CloneNotSupportedException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Creates and returns a copy of this Object. The default implementation returns a so-called \"shallow\" copy: It creates a new instance of the same class and then copies the field values (including object references) from this instance to the new instance. A \"deep\" copy, in contrast, would also recursively clone nested objects. A subclass that needs to implement this kind of cloning should call super.clone() to create the new instance and then create deep copies of the nested, mutable objects.", "history": "Added in API level 1", "FullName": "public Object clone ()"}, "HttpHost(java.lang.String, int, java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "the hostname (IP or DNS name)"], ["int", "the port number. -1 indicates the scheme default port."], ["@B_java#lang#String_E@", "the name of the scheme. null indicates the @B_org#apache#http#HttpHost#DEFAULT_SCHEME_NAME_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new @B_org#apache#http#HttpHost_E@, specifying all values. Constructor for HttpHost.", "history": "Added in API level 1", "FullName": "public HttpHost (String hostname, int port, String scheme)"}, "hashCode()": {"Returns": [["", "this object's hash code."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#lang#Object#hashCode_E@"], "Permissions": [], "Description": "Returns an integer hash code for this object. By contract, any two objects for which @B_java#lang#Object#equals_E@ returns true must return the same hash code value. This means that subclasses of Object usually override both methods or neither method. Note that hash values must not change over time unless information used in equals comparisons also changes. See hashCode method.", "history": "Added in API level 1", "FullName": "public int hashCode ()"}}, "Inheritance": [], "ClassName": "org.apache.http.HttpHost", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Holds all of the variables needed to describe an HTTP connection to a host. This includes remote host name, port and scheme."}