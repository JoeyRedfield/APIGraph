{"Functions": {"failed(java.lang.Throwable,A)": {"Returns": [], "Parameters": [["@B_java#lang#Throwable_E@", "Throwable: The exception to indicate why the I/O operation failed"], ["A", "A: The object attached to the I/O operation when it was initiated."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Invoked when an operation fails.", "history": "Added in API level 26", "FullName": "public abstract void failed (Throwable exc, A attachment)"}, "completed(V,A)": {"Returns": [], "Parameters": [["V", "V: The result of the I/O operation."], ["A", "A: The object attached to the I/O operation when it was initiated."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Invoked when an operation has completed.", "history": "Added in API level 26", "FullName": "public abstract void completed (V result, A attachment)"}, "completed(V, A)": {"Returns": [], "Parameters": [["V", "V: The result of the I/O operation."], ["A", "A: The object attached to the I/O operation when it was initiated."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Invoked when an operation has completed.", "history": "added in API level 26", "FullName": "public abstract void completed (V result, A attachment)"}, "failed(java.lang.Throwable, A)": {"Returns": [], "Parameters": [["@B_java#lang#Throwable_E@", "Throwable: The exception to indicate why the I/O operation failed"], ["A", "A: The object attached to the I/O operation when it was initiated."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Invoked when an operation fails.", "history": "added in API level 26", "FullName": "public abstract void failed (Throwable exc, A attachment)"}}, "Inheritance": [], "ClassName": "java.nio.channels.CompletionHandler<V, A>", "ClassDesc": "A handler for consuming the result of an asynchronous I/O operation. The asynchronous channels defined in this package allow a completion handler to be specified to consume the result of an asynchronous operation. The @B_java#nio#channels#CompletionHandler#completed_E@ method is invoked when the I/O operation completes successfully. The @B_java#nio#channels#CompletionHandler#failed_E@ method is invoked if the I/O operations fails. The implementations of these methods should complete in a timely manner so as to avoid keeping the invoking thread from dispatching to other completion handlers."}