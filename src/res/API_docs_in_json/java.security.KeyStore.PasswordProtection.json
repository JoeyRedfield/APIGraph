{"Functions": {"KeyStore.PasswordProtection(char[],java.lang.String,java.security.spec.AlgorithmParameterSpec)": {"Returns": [], "Parameters": [["char[]", "char: the password, which may be null"], ["@B_java#lang#String_E@", "String: the encryption algorithm name, for example, PBEWithHmacSHA256AndAES_256. See the Cipher section in the Java Cryptography Architecture Standard Algorithm Name Documentation for information about standard encryption algorithm names."], ["@B_java#security#spec#AlgorithmParameterSpec_E@", "AlgorithmParameterSpec: the encryption algorithm parameter specification, which may be null"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if protectionAlgorithm is null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a password parameter and specifies the protection algorithm and associated parameters to use when encrypting a keystore entry. The specified password is cloned before it is stored in the new PasswordProtection object.", "history": "Added in API level 26", "FullName": "public KeyStore.PasswordProtection (char[] password, String protectionAlgorithm, AlgorithmParameterSpec protectionParameters)"}, "isDestroyed()": {"Returns": [["boolean", "true if the password has been cleared, false otherwise"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Determines if password has been cleared.", "history": "Added in API level 1", "FullName": "public boolean isDestroyed ()"}, "getPassword()": {"Returns": [["char[]", "the password, which may be null"]], "Parameters": [], "Throws": [["@B_java#lang#IllegalStateException_E@", "if the password has been cleared (destroyed)"]], "SeeAlso": ["@B_java#security#KeyStore#PasswordProtection#destroy_E@"], "Permissions": [], "Description": "Gets the password. Note that this method returns a reference to the password. If a clone of the array is created it is the caller's responsibility to zero out the password information after it is no longer needed.", "history": "Added in API level 1", "FullName": "public char[] getPassword ()"}, "KeyStore.PasswordProtection(char[])": {"Returns": [], "Parameters": [["char[]", "char: the password, which may be null"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a password parameter. The specified password is cloned before it is stored in the new PasswordProtection object.", "history": "Added in API level 1", "FullName": "public KeyStore.PasswordProtection (char[] password)"}, "getProtectionParameters()": {"Returns": [["@B_java#security#spec#AlgorithmParameterSpec_E@", "the algorithm parameter specification, or null, if none was set"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the parameters supplied for the protection algorithm.", "history": "Added in API level 26", "FullName": "public AlgorithmParameterSpec getProtectionParameters ()"}, "destroy()": {"Returns": [], "Parameters": [], "Throws": [["@B_javax#security#auth#DestroyFailedException_E@", "if this method was unable to clear the password"]], "SeeAlso": [], "Permissions": [], "Description": "Clears the password.", "history": "Added in API level 1", "FullName": "public void destroy ()"}, "getProtectionAlgorithm()": {"Returns": [["@B_java#lang#String_E@", "the algorithm name, or null if none was set"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the name of the protection algorithm. If none was set then the keystore provider will use its default protection algorithm. The name of the default protection algorithm for a given keystore type is set using the 'keystore.<type>.keyProtectionAlgorithm' security property. For example, the keystore.PKCS12.keyProtectionAlgorithm property stores the name of the default key protection algorithm used for PKCS12 keystores. If the security property is not set, an implementation-specific algorithm will be used.", "history": "Added in API level 26", "FullName": "public String getProtectionAlgorithm ()"}}, "Inheritance": [], "ClassName": "java.security.KeyStore.PasswordProtection", "ClassDesc": "A password-based implementation of ProtectionParameter."}