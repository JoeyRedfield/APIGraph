{"Functions": {"setDefaultTab(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the name of the default tab"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the default tab that is the first tab highlighted.", "history": "Added in API level 1 Deprecated in API level 13", "FullName": "public void setDefaultTab (String tag)"}, "onSaveInstanceState(android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: Bundle in which to place your saved state. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called to retrieve per-instance state from an activity before being killed so that the state can be restored in @B_android#app#Activity#onCreate_E@ or @B_android#app#Activity#onRestoreInstanceState_E@ (the @B_android#os#Bundle_E@ populated by this method will be passed to both). This method is called before an activity may be killed so that when it comes back some time in the future it can restore its state. For example, if activity B is launched in front of activity A, and at some point activity A is killed to reclaim resources, activity A will have a chance to save the current state of its user interface via this method so that when the user returns to activity A, the state of the user interface can be restored via @B_android#app#Activity#onCreate_E@ or @B_android#app#Activity#onRestoreInstanceState_E@. Do not confuse this method with activity lifecycle callbacks such as @B_android#app#Activity#onPause_E@, which is always called when the user no longer actively interacts with an activity, or @B_android#app#Activity#onStop_E@ which is called when activity becomes invisible. One example of when @B_android#app#Activity#onPause_E@ and @B_android#app#Activity#onStop_E@ is called and not this method is when a user navigates back from activity B to activity A: there is no need to call @B_android#app#Activity#onSaveInstanceState_E@ on B because that particular instance will never be restored, so the system avoids calling it. An example when @B_android#app#Activity#onPause_E@ is called and not @B_android#app#Activity#onSaveInstanceState_E@ is when activity B is launched in front of activity A: the system may avoid calling @B_android#app#Activity#onSaveInstanceState_E@ on activity A if it isn't killed during the lifetime of B since the state of the user interface of A will stay intact. The default implementation takes care of most of the UI per-instance state for you by calling @B_android#view#View#onSaveInstanceState_E@ on each view in the hierarchy that has an id, and by saving the id of the currently focused view (all of which is restored by the default implementation of @B_android#app#Activity#onRestoreInstanceState_E@). If you override this method to save additional information not captured by each individual view, you will likely want to call through to the default implementation, otherwise be prepared to save all of the state of each view yourself. If called, this method will occur after @B_android#app#Activity#onStop_E@ for applications targeting platforms starting with @B_android#os#Build#VERSION_CODES#P_E@. For applications targeting earlier platform versions this method will occur before @B_android#app#Activity#onStop_E@ and there are no guarantees about whether it will occur before or after @B_android#app#Activity#onPause_E@.", "history": "Added in API level 1 Deprecated in API level 13", "FullName": "protected void onSaveInstanceState (Bundle outState)"}, "onPostCreate(android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: If the activity is being re-initialized after previously being shut down then this Bundle contains the data it most recently supplied in @B_android#app#TabActivity#onSaveInstanceState_E@. Note: Otherwise it is null. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when activity start-up is complete (after @B_android#app#Activity#onStart_E@ and @B_android#app#Activity#onRestoreInstanceState_E@ have been called). Applications will generally not implement this method; it is intended for system classes to do final initialization after application code has run. Derived classes must call through to the super class's implementation of this method. If they do not, an exception will be thrown. If you override this method you must call through to the superclass implementation.", "history": "Added in API level 1 Deprecated in API level 13", "FullName": "protected void onPostCreate (Bundle icicle)"}, "setDefaultTab(int)": {"Returns": [], "Parameters": [["int", "int: the index of the default tab"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the default tab that is the first tab highlighted.", "history": "Added in API level 1 Deprecated in API level 13", "FullName": "public void setDefaultTab (int index)"}, "TabActivity()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public TabActivity ()"}, "onContentChanged()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#app#Activity#onContentChanged_E@"], "Permissions": [], "Description": "Updates the screen state (current list and other views) when the content changes.", "history": "Added in API level 1 Deprecated in API level 13", "FullName": "public void onContentChanged ()"}, "onRestoreInstanceState(android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: the data most recently supplied in @B_android#app#TabActivity#onSaveInstanceState_E@. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method is called after @B_android#app#Activity#onStart_E@ when the activity is being re-initialized from a previously saved state, given here in @B_android#app#Activity#onCreate_E@ to restore their state, but it is sometimes convenient to do it here after all of the initialization has been done or to allow subclasses to decide whether to use your default implementation. The default implementation of this method performs a restore of any view state that had previously been frozen by @B_android#app#Activity#onSaveInstanceState_E@. This method is called between @B_android#app#Activity#onStart_E@ and @B_android#app#Activity#onPostCreate_E@. This method is called only when recreating an activity; the method isn't invoked if @B_android#app#Activity#onStart_E@ is called for any other reason.", "history": "Added in API level 1 Deprecated in API level 13", "FullName": "protected void onRestoreInstanceState (Bundle state)"}, "getTabHost()": {"Returns": [["@B_android#widget#TabHost_E@", "the @B_android#widget#TabHost_E@ the activity is using to host its tabs."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#widget#TabHost_E@ the activity is using to host its tabs.", "history": "Added in API level 1 Deprecated in API level 13", "FullName": "public TabHost getTabHost ()"}, "onChildTitleChanged(android.app.Activity,java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_android#app#Activity_E@", "Activity no parameter comment"], ["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1 Deprecated in API level 13", "FullName": "protected void onChildTitleChanged (Activity childActivity, CharSequence title)"}, "getTabWidget()": {"Returns": [["@B_android#widget#TabWidget_E@", "the @B_android#widget#TabWidget_E@ the activity is using to draw the actual tabs."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#widget#TabWidget_E@ the activity is using to draw the actual tabs.", "history": "Added in API level 1 Deprecated in API level 13", "FullName": "public TabWidget getTabWidget ()"}}, "Inheritance": ["@B_android#content#Context_E@", "@B_android#content#ContextWrapper_E@", "@B_android#view#ContextThemeWrapper_E@", "@B_android#app#Activity_E@", "@B_android#app#ActivityGroup_E@"], "ClassName": "android.app.TabActivity", "ClassDesc": "New applications should use Fragments instead of this class; to continue to run on older devices, you can use the v4 support library which provides a version of the Fragment API that is compatible down to @B_android#os#Build#VERSION_CODES#DONUT_E@. For apps developing against @B_android#os#Build#VERSION_CODES#HONEYCOMB_E@ or later, tabs are typically presented in the UI using the new @B_android#app#ActionBar#newTab_E@ and related APIs for placing tabs within their action bar area."}