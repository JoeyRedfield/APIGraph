{"Functions": {"parseParameters(java.lang.String, org.apache.http.message.HeaderValueParser)": {"Returns": [["", "array holding the parameters, never null"]], "Parameters": [["@B_java#lang#String_E@", "the parameter list to parse"], ["@B_org#apache#http#message#HeaderValueParser_E@", "the parser to use, or null for default"]], "Throws": [["@B_org#apache#http#ParseException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Parses parameters with the given parser.", "history": "Added in API level 1", "FullName": "public static final NameValuePair[] parseParameters (String value, HeaderValueParser parser)"}, "parseElements(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)": {"Returns": [["", "an array holding all elements of the header value"]], "Parameters": [["@B_org#apache#http#util#CharArrayBuffer_E@", "buffer holding the header value to parse"], ["@B_org#apache#http#message#ParserCursor_E@", "the parser cursor containing the current position and the bounds within the buffer for the parsing operation"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Parses a header value into elements. Parse errors are indicated as RuntimeException. Some HTTP headers (such as the set-cookie header) have values that can be decomposed into multiple elements. In order to be processed by this parser, such headers must be in the following form: Any amount of white space is allowed between any part of the header, element or param and is ignored. A missing value in any element or param will be stored as the empty @B_java#lang#String_E@; if the \"=\" is also missing", "history": "Added in API level 1", "FullName": "public HeaderElement[] parseElements (CharArrayBuffer buffer, ParserCursor cursor)"}, "createNameValuePair(java.lang.String, java.lang.String)": {"Returns": [["", "a name-value pair representing the arguments"]], "Parameters": [["@B_java#lang#String_E@", "the name"], ["@B_java#lang#String_E@", "the value, or null"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a name-value pair. Called from @B_org#apache#http#message#BasicHeaderValueParser#parseNameValuePair_E@.", "history": "Added in API level 1", "FullName": "protected NameValuePair createNameValuePair (String name, String value)"}, "BasicHeaderValueParser()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public BasicHeaderValueParser ()"}, "parseNameValuePair(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor, char[])": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public NameValuePair parseNameValuePair (CharArrayBuffer buffer, ParserCursor cursor, char[] delimiters)"}, "parseElements(java.lang.String, org.apache.http.message.HeaderValueParser)": {"Returns": [["", "array holding the header elements, never null"]], "Parameters": [["@B_java#lang#String_E@", "the header value to parse"], ["@B_org#apache#http#message#HeaderValueParser_E@", "the parser to use, or null for default"]], "Throws": [["@B_org#apache#http#ParseException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Parses elements with the given parser.", "history": "Added in API level 1", "FullName": "public static final HeaderElement[] parseElements (String value, HeaderValueParser parser)"}, "parseHeaderElement(java.lang.String, org.apache.http.message.HeaderValueParser)": {"Returns": [["", "the parsed header element"]], "Parameters": [["@B_java#lang#String_E@", "the header element to parse"], ["@B_org#apache#http#message#HeaderValueParser_E@", "the parser to use, or null for default"]], "Throws": [["@B_org#apache#http#ParseException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Parses an element with the given parser.", "history": "Added in API level 1", "FullName": "public static final HeaderElement parseHeaderElement (String value, HeaderValueParser parser)"}, "parseNameValuePair(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)": {"Returns": [["", "the name-value pair, where the value is null if no value is specified"]], "Parameters": [["@B_org#apache#http#util#CharArrayBuffer_E@", "the buffer holding the name-value pair to parse"], ["@B_org#apache#http#message#ParserCursor_E@", "the parser cursor containing the current position and the bounds within the buffer for the parsing operation"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Parses a name=value specification, where the = and value are optional.", "history": "Added in API level 1", "FullName": "public NameValuePair parseNameValuePair (CharArrayBuffer buffer, ParserCursor cursor)"}, "parseNameValuePair(java.lang.String, org.apache.http.message.HeaderValueParser)": {"Returns": [["", "the parsed name-value pair"]], "Parameters": [["@B_java#lang#String_E@", "the NVP to parse"], ["@B_org#apache#http#message#HeaderValueParser_E@", "the parser to use, or null for default"]], "Throws": [["@B_org#apache#http#ParseException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Parses a name-value-pair with the given parser.", "history": "Added in API level 1", "FullName": "public static final NameValuePair parseNameValuePair (String value, HeaderValueParser parser)"}, "parseHeaderElement(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)": {"Returns": [["", "the parsed element"]], "Parameters": [["@B_org#apache#http#util#CharArrayBuffer_E@", "buffer holding the element to parse"], ["@B_org#apache#http#message#ParserCursor_E@", "the parser cursor containing the current position and the bounds within the buffer for the parsing operation"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Parses a single header element. A header element consist of a semicolon-separate list of name=value definitions.", "history": "Added in API level 1", "FullName": "public HeaderElement parseHeaderElement (CharArrayBuffer buffer, ParserCursor cursor)"}, "createHeaderElement(java.lang.String, java.lang.String, org.apache.http.NameValuePair[])": {"Returns": [["", "a header element representing the argument"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a header element. Called from @B_org#apache#http#message#BasicHeaderValueParser#parseHeaderElement_E@.", "history": "Added in API level 1", "FullName": "protected HeaderElement createHeaderElement (String name, String value, NameValuePair[] params)"}, "parseParameters(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)": {"Returns": [["", "an array holding all items of the name-value list"]], "Parameters": [["@B_org#apache#http#util#CharArrayBuffer_E@", "buffer holding the name-value list to parse"], ["@B_org#apache#http#message#ParserCursor_E@", "the parser cursor containing the current position and the bounds within the buffer for the parsing operation"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Parses a list of name-value pairs. These lists are used to specify parameters to a header element. Parse errors are indicated as RuntimeException. This method comforms to the generic grammar and formatting rules outlined in the The following rules are used throughout this specification to describe basic parsing constructs. The US-ASCII coded character set is defined by ANSI X3.4-1986. Many HTTP/1.1 header field values consist of words separated by LWS or special characters. These special characters MUST be in a quoted string to be used within a parameter value (as defined in section 3.6). A string of text is parsed as a single word if it is quoted using double-quote marks. The backslash character (\"\\\") MAY be used as a single-character quoting mechanism only within quoted-string and comment constructs. Parameters are in the form of attribute/value pairs.", "history": "Added in API level 1", "FullName": "public NameValuePair[] parseParameters (CharArrayBuffer buffer, ParserCursor cursor)"}}, "Inheritance": [], "ClassName": "org.apache.http.message.BasicHeaderValueParser", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Basic implementation for parsing header values into elements. Instances of this class are stateless and thread-safe. Derived classes are expected to maintain these properties."}