{"Functions": {"swipeLeft(int)": {"Returns": [["boolean", "true if successful"]], "Parameters": [["int", "int: indicates the number of injected move steps into the system. Steps are injected about 5ms apart. So a 100 steps may take about 1/2 second to complete."]], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Performs the swipe left action on the UiObject. The swipe gesture can be performed over any surface. The targeted UI element does not need to be scrollable. See also: @B_android#support#test#uiautomator#UiScrollable#scrollToBeginning_E@ @B_android#support#test#uiautomator#UiScrollable#scrollToEnd_E@ @B_android#support#test#uiautomator#UiScrollable#scrollBackward_E@ @B_android#support#test#uiautomator#UiScrollable#scrollForward_E@", "history": "", "FullName": "boolean swipeLeft (int steps)"}, "clearTextField()": {"Returns": [], "Parameters": [], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Clears the existing text contents in an editable field. The @B_android#support#test#uiautomator#UiSelector_E@ of this object must reference a UI element that is editable. When you call this method, the method sets focus on the editable field, selects all of its existing content, and clears it by sending a DELETE key press", "history": "", "FullName": "void clearTextField ()"}, "getClassName()": {"Returns": [["String", "class name of the current node represented by this UiObject"]], "Parameters": [], "Throws": [["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", "if no match was found"]], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the className property of the UI element.", "history": "", "FullName": "String getClassName ()"}, "isLongClickable()": {"Returns": [["boolean", "true if it is else false"]], "Parameters": [], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Check if the view's long-clickable property is currently true", "history": "", "FullName": "boolean isLongClickable ()"}, "getVisibleBounds()": {"Returns": [["Rect", "Rect"]], "Parameters": [], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": ["@B_android#support#test#uiautomator#UiObject#getBounds_E@"], "Permissions": [], "Description": "Returns the visible bounds of the view. If a portion of the view is visible, only the bounds of the visible portion are reported.", "history": "", "FullName": "Rect getVisibleBounds ()"}, "getSelector()": {"Returns": [["@B_android#support#test#uiautomator#UiSelector_E@", "@B_android#support#test#uiautomator#UiSelector_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Debugging helper. A test can dump the properties of a selector as a string to its logs if needed. getSelector().toString();", "history": "", "FullName": "UiSelector getSelector ()"}, "exists()": {"Returns": [["boolean", "true if the view represented by this UiObject does exist"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check if view exists. This methods performs a @B_android#support#test#uiautomator#UiObject#waitForExists_E@ with zero timeout. This basically returns immediately whether the view represented by this UiObject exists or not. If you need to wait longer for this view, then see @B_android#support#test#uiautomator#UiObject#waitForExists_E@.", "history": "", "FullName": "boolean exists ()"}, "isFocused()": {"Returns": [["boolean", "true if it is else false"]], "Parameters": [], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Check if the UI element's focused property is currently true", "history": "", "FullName": "boolean isFocused ()"}, "isChecked()": {"Returns": [["boolean", "true if it is else false"]], "Parameters": [], "Throws": [["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Check if the UI element's checked property is currently true", "history": "", "FullName": "boolean isChecked ()"}, "clickAndWaitForNewWindow(long)": {"Returns": [["boolean", "true if the event was triggered, else false"]], "Parameters": [["long", "long: timeout before giving up on waiting for a new window"]], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Performs a click at the center of the visible bounds of the UI element represented by this UiObject and waits for window transitions. This method differ from @B_android#support#test#uiautomator#UiObject#click_E@ only in that this method waits for a a new window transition as a result of the click. Some examples of a window transition: launching a new activity bringing up a pop-up menu bringing up a dialog", "history": "", "FullName": "boolean clickAndWaitForNewWindow (long timeout)"}, "dragTo(int, int, int)": {"Returns": [["boolean", "true if successful"]], "Parameters": [["int", "int: the X-axis coordinate."], ["int", "int: the Y-axis coordinate."], ["int", "int: usually 40 steps. You can increase or decrease the steps to change the speed."]], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Drags this object to arbitrary coordinates. The number of steps specified in your input parameter can influence the drag speed, and varying speeds may impact the results. Consider evaluating different speeds when using this method in your tests.", "history": "", "FullName": "boolean dragTo (int destX, int destY, int steps)"}, "clickBottomRight()": {"Returns": [["boolean", "true on success"]], "Parameters": [], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Clicks the bottom and right corner of the UI element", "history": "", "FullName": "boolean clickBottomRight ()"}, "clickAndWaitForNewWindow()": {"Returns": [["boolean", "true if the event was triggered, else false"]], "Parameters": [], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Waits for window transitions that would typically take longer than the usual default timeouts. See @B_android#support#test#uiautomator#UiObject#clickAndWaitForNewWindow_E@", "history": "", "FullName": "boolean clickAndWaitForNewWindow ()"}, "isFocusable()": {"Returns": [["boolean", "true if it is else false"]], "Parameters": [], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Check if the UI element's focusable property is currently true.", "history": "", "FullName": "boolean isFocusable ()"}, "findAccessibilityNodeInfo(long)": {"Returns": [["AccessibilityNodeInfo", "AccessibilityNodeInfo if found else null"]], "Parameters": [["long", "long: in milliseconds"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Finds a matching UI element in the accessibility hierarchy, by using the selector for this UiObject.", "history": "", "FullName": "AccessibilityNodeInfo findAccessibilityNodeInfo (long timeout)"}, "pinchOut(int, int)": {"Returns": [["boolean", "true if all touch events for this gesture are injected successfully, false otherwise"]], "Parameters": [["int", "int: percentage of the object's diagonal length for the pinch gesture"], ["int", "int: the number of steps for the gesture. Steps are injected about 5 milliseconds apart, so 100 steps may take around 0.5 seconds to complete."]], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Performs a two-pointer gesture, where each pointer moves diagonally opposite across the other, from the center out towards the edges of the this UiObject.", "history": "", "FullName": "boolean pinchOut (int percent, int steps)"}, "swipeUp(int)": {"Returns": [["boolean", "true of successful"]], "Parameters": [["int", "int: indicates the number of injected move steps into the system. Steps are injected about 5ms apart. So a 100 steps may take about 1/2 second to complete."]], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Performs the swipe up action on the UiObject. See also: @B_android#support#test#uiautomator#UiScrollable#scrollToBeginning_E@ @B_android#support#test#uiautomator#UiScrollable#scrollToEnd_E@ @B_android#support#test#uiautomator#UiScrollable#scrollBackward_E@ @B_android#support#test#uiautomator#UiScrollable#scrollForward_E@", "history": "", "FullName": "boolean swipeUp (int steps)"}, "isSelected()": {"Returns": [["boolean", "true if it is else false"]], "Parameters": [], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Checks if the UI element's selected property is currently true.", "history": "", "FullName": "boolean isSelected ()"}, "getContentDescription()": {"Returns": [["String", "value of node attribute \"content_desc\""]], "Parameters": [], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Reads the content_desc property of the UI element", "history": "", "FullName": "String getContentDescription ()"}, "pinchIn(int, int)": {"Returns": [["boolean", "true if all touch events for this gesture are injected successfully, false otherwise"]], "Parameters": [["int", "int: percentage of the object's diagonal length for the pinch gesture"], ["int", "int: the number of steps for the gesture. Steps are injected about 5 milliseconds apart, so 100 steps may take around 0.5 seconds to complete."]], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Performs a two-pointer gesture, where each pointer moves diagonally toward the other, from the edges to the center of this UiObject .", "history": "", "FullName": "boolean pinchIn (int percent, int steps)"}, "getChildCount()": {"Returns": [["int", "the count of child views."]], "Parameters": [], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Counts the child views immediately under the present UiObject.", "history": "", "FullName": "int getChildCount ()"}, "swipeDown(int)": {"Returns": [["boolean", "true if successful"]], "Parameters": [["int", "int: indicates the number of injected move steps into the system. Steps are injected about 5ms apart. So a 100 steps may take about 1/2 second to complete."]], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Performs the swipe down action on the UiObject. The swipe gesture can be performed over any surface. The targeted UI element does not need to be scrollable. See also: @B_android#support#test#uiautomator#UiScrollable#scrollToBeginning_E@ @B_android#support#test#uiautomator#UiScrollable#scrollToEnd_E@ @B_android#support#test#uiautomator#UiScrollable#scrollBackward_E@ @B_android#support#test#uiautomator#UiScrollable#scrollForward_E@", "history": "", "FullName": "boolean swipeDown (int steps)"}, "getText()": {"Returns": [["String", "text value of the current node represented by this UiObject"]], "Parameters": [], "Throws": [["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", "if no match could be found"]], "SeeAlso": [], "Permissions": [], "Description": "Reads the text property of the UI element", "history": "", "FullName": "String getText ()"}, "swipeRight(int)": {"Returns": [["boolean", "true if successful"]], "Parameters": [["int", "int: indicates the number of injected move steps into the system. Steps are injected about 5ms apart. So a 100 steps may take about 1/2 second to complete."]], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Performs the swipe right action on the UiObject. The swipe gesture can be performed over any surface. The targeted UI element does not need to be scrollable. See also: @B_android#support#test#uiautomator#UiScrollable#scrollToBeginning_E@ @B_android#support#test#uiautomator#UiScrollable#scrollToEnd_E@ @B_android#support#test#uiautomator#UiScrollable#scrollBackward_E@ @B_android#support#test#uiautomator#UiScrollable#scrollForward_E@", "history": "", "FullName": "boolean swipeRight (int steps)"}, "longClick()": {"Returns": [["boolean", "true if operation was successful"]], "Parameters": [], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Long clicks the center of the visible bounds of the UI element", "history": "", "FullName": "boolean longClick ()"}, "isClickable()": {"Returns": [["boolean", "true if it is else false"]], "Parameters": [], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Checks if the UI element's clickable property is currently true.", "history": "", "FullName": "boolean isClickable ()"}, "isEnabled()": {"Returns": [["boolean", "true if it is else false"]], "Parameters": [], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Checks if the UI element's enabled property is currently true.", "history": "", "FullName": "boolean isEnabled ()"}, "waitUntilGone(long)": {"Returns": [["boolean", "true if the element is gone before timeout elapsed, else false if timeout elapsed but a matching element is still found."]], "Parameters": [["long", "long: time to wait (in milliseconds)"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Waits a specified length of time for a view to become undetectable. This method waits until a view is no longer matchable, or until the timeout has elapsed. A view becomes undetectable when the @B_android#support#test#uiautomator#UiSelector_E@ of the object is unable to find a match because the element has either changed its state or is no longer displayed. You can use this method when attempting to wait for some long operation to compete, such as downloading a large file or connecting to a remote server.", "history": "", "FullName": "boolean waitUntilGone (long timeout)"}, "longClickBottomRight()": {"Returns": [["boolean", "true if operation was successful"]], "Parameters": [], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Long clicks bottom and right corner of the UI element", "history": "", "FullName": "boolean longClickBottomRight ()"}, "isScrollable()": {"Returns": [["boolean", "true if it is else false"]], "Parameters": [], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Check if the view's scrollable property is currently true", "history": "", "FullName": "boolean isScrollable ()"}, "isCheckable()": {"Returns": [["boolean", "true if it is else false"]], "Parameters": [], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Checks if the UI element's checkable property is currently true.", "history": "", "FullName": "boolean isCheckable ()"}, "getPackageName()": {"Returns": [["String", "true if it is else false"]], "Parameters": [], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Reads the view's package property", "history": "", "FullName": "String getPackageName ()"}, "getBounds()": {"Returns": [["Rect", "Rect"]], "Parameters": [], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Returns the view's bounds property. See @B_android#support#test#uiautomator#UiObject#getVisibleBounds_E@", "history": "", "FullName": "Rect getBounds ()"}, "longClickTopLeft()": {"Returns": [["boolean", "true if operation was successful"]], "Parameters": [], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Long clicks on the top and left corner of the UI element", "history": "", "FullName": "boolean longClickTopLeft ()"}, "clickTopLeft()": {"Returns": [["boolean", "true on success"]], "Parameters": [], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Clicks the top and left corner of the UI element", "history": "", "FullName": "boolean clickTopLeft ()"}, "setText(java.lang.String)": {"Returns": [["boolean", "true if operation is successful"]], "Parameters": [["String", "String: string to set"]], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Sets the text in an editable field, after clearing the field's content. The @B_android#support#test#uiautomator#UiSelector_E@ selector of this object must reference a UI element that is editable. When you call this method, the method sets focus on the editable field, clears its existing content, then injects your specified text into the field. If you want to capture the original contents of the field, call @B_android#support#test#uiautomator#UiObject#getText_E@ first. You can then modify the text and use this method to update the field.", "history": "", "FullName": "boolean setText (String text)"}, "click()": {"Returns": [["boolean", "true id successful else false"]], "Parameters": [], "Throws": [["", "UiObjectNotFoundException"], ["@B_android#support#test#uiautomator#UiObjectNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Performs a click at the center of the visible bounds of the UI element represented by this UiObject.", "history": "", "FullName": "boolean click ()"}, "waitForExists(long)": {"Returns": [["boolean", "true if the view is displayed, else false if timeout elapsed while waiting"]], "Parameters": [["long", "long: the amount of time to wait (in milliseconds)"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Waits a specified length of time for a view to become visible. This method waits until the view becomes visible on the display, or until the timeout has elapsed. You can use this method in situations where the content that you want to select is not immediately displayed.", "history": "", "FullName": "boolean waitForExists (long timeout)"}}, "Inheritance": ["https:##developer#android#com@B_java#lang#Object_E@"], "ClassName": "android.support.test.uiautomator.UiObject", "ClassDesc": "A UiObject is a representation of a view. It is not in any way directly bound to a view as an object reference. A UiObject contains information to help it locate a matching view at runtime based on the @B_android#support#test#uiautomator#UiSelector_E@ properties specified in its constructor. Once you create an instance of a UiObject, it can be reused for different views that match the selector criteria."}