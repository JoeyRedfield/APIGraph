{"Functions": {"onDrag(android.view.View, android.view.DragEvent)": {"Returns": [["boolean", "true if the drag event was handled successfully, or false if the drag event was not handled. Note that false will trigger the View to call its @B_android#view#View#onDragEvent_E@ handler."]], "Parameters": [["@B_android#view#View_E@", "View: The View that received the drag event."], ["@B_android#view#DragEvent_E@", "DragEvent: The @B_android#view#DragEvent_E@ object for the drag event."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a drag event is dispatched to a view. This allows listeners to get a chance to override base View behavior.", "history": "added in API level 11", "FullName": "public abstract boolean onDrag (View v, DragEvent event)"}, "onDrag(android.view.View,android.view.DragEvent)": {"Returns": [["boolean", "true if the drag event was handled successfully, or false if the drag event was not handled. Note that false will trigger the View to call its @B_android#view#View#onDragEvent_E@ handler."]], "Parameters": [["@B_android#view#View_E@", "View: The View that received the drag event."], ["@B_android#view#DragEvent_E@", "DragEvent: The @B_android#view#DragEvent_E@ object for the drag event."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a drag event is dispatched to a view. This allows listeners to get a chance to override base View behavior.", "history": "Added in API level 11", "FullName": "public abstract boolean onDrag (View v, DragEvent event)"}}, "Inheritance": [], "ClassName": "android.view.View.OnDragListener", "ClassDesc": "Interface definition for a callback to be invoked when a drag is being dispatched to this view. The callback will be invoked before the hosting view's own onDrag(event) method. If the listener wants to fall back to the hosting view's onDrag(event) behavior, it should return 'false' from this callback."}