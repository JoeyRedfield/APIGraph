{"Functions": {"onLoadVoice(java.lang.String)": {"Returns": [["int", "@B_android#speech#tts#TextToSpeech#ERROR_E@ or @B_android#speech#tts#TextToSpeech#SUCCESS_E@."]], "Parameters": [["@B_java#lang#String_E@", "String: Name of the voice."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies the engine that it should load a speech synthesis voice. There is no guarantee that this method is always called before the voice is used for synthesis. It is merely a hint to the engine that it will probably get some synthesis requests for this voice at some point in the future. Will be called only on synthesis thread. The default implementation creates a Locale from the voice name (by interpreting the name as a BCP-47 tag for the locale), and passes it to @B_android#speech#tts#TextToSpeechService#onLoadLanguage_E@.", "history": "Added in API level 21", "FullName": "public int onLoadVoice (String voiceName)"}, "onStop()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies the service that it should stop any in-progress speech synthesis. This method can be called even if no speech synthesis is currently in progress. Can be called on multiple threads, but not on the synthesis thread.", "history": "Added in API level 14", "FullName": "protected abstract void onStop ()"}, "onGetDefaultVoiceNameFor(java.lang.String,java.lang.String,java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "A name of the default voice for a given locale."]], "Parameters": [["@B_java#lang#String_E@", "String: ISO-3 language code."], ["@B_java#lang#String_E@", "String: ISO-3 country code. May be empty or null."], ["@B_java#lang#String_E@", "String: Language variant. May be empty or null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a name of the default voice for a given locale. This method provides a mapping between locales and available voices. This method is used in @B_android#speech#tts#TextToSpeech#setLanguage_E@, which calls this method and then calls @B_android#speech#tts#TextToSpeech#setVoice_E@ with the voice returned by this method. Also, it's used by @B_android#speech#tts#TextToSpeech#getDefaultVoice_E@ to find a default voice for the default locale.", "history": "Added in API level 21", "FullName": "public String onGetDefaultVoiceNameFor (String lang, String country, String variant)"}, "onDestroy()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called by the system to notify a Service that it is no longer used and is being removed. The service should clean up any resources it holds (threads, registered receivers, etc) at this point. Upon return, there will be no more calls in to this Service object and it is effectively dead. Do not call this method directly.", "history": "Added in API level 14", "FullName": "public void onDestroy ()"}, "onIsLanguageAvailable(java.lang.String,java.lang.String,java.lang.String)": {"Returns": [["int", "Code indicating the support status for the locale. One of @B_android#speech#tts#TextToSpeech#LANG_AVAILABLE_E@, @B_android#speech#tts#TextToSpeech#LANG_COUNTRY_AVAILABLE_E@, @B_android#speech#tts#TextToSpeech#LANG_COUNTRY_VAR_AVAILABLE_E@, @B_android#speech#tts#TextToSpeech#LANG_MISSING_DATA_E@ @B_android#speech#tts#TextToSpeech#LANG_NOT_SUPPORTED_E@."]], "Parameters": [["@B_java#lang#String_E@", "String: ISO-3 language code."], ["@B_java#lang#String_E@", "String: ISO-3 country code. May be empty or null."], ["@B_java#lang#String_E@", "String: Language variant. May be empty or null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether the engine supports a given language. Can be called on multiple threads. Its return values HAVE to be consistent with onLoadLanguage.", "history": "Added in API level 14", "FullName": "protected abstract int onIsLanguageAvailable (String lang, String country, String variant)"}, "TextToSpeechService()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 14", "FullName": "public TextToSpeechService ()"}, "onIsValidVoiceName(java.lang.String)": {"Returns": [["int", "@B_android#speech#tts#TextToSpeech#ERROR_E@ or @B_android#speech#tts#TextToSpeech#SUCCESS_E@."]], "Parameters": [["@B_java#lang#String_E@", "String: Name of the voice."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether the engine supports a voice with a given name. Can be called on multiple threads. The default implementation treats the voice name as a language tag, creating a Locale from the voice name, and passes it to @B_android#speech#tts#TextToSpeechService#onIsLanguageAvailable_E@.", "history": "Added in API level 21", "FullName": "public int onIsValidVoiceName (String voiceName)"}, "onBind(android.content.Intent)": {"Returns": [["@B_android#os#IBinder_E@", "Return an IBinder through which clients can call on to the service."]], "Parameters": [["@B_android#content#Intent_E@", "Intent: The Intent that was used to bind to this service, as given to @B_android#content#Context#bindService_E@. Note that any extras that were included with the Intent at that point will not be seen here."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the communication channel to the service. May return null if clients can not bind to the service. The returned @B_android#os#IBinder_E@ is usually for a complex interface that has been Note that unlike other application components, calls on to the IBinder interface returned here may not happen on the main thread of the process. More information about the main thread can be found in", "history": "Added in API level 14", "FullName": "public IBinder onBind (Intent intent)"}, "onGetFeaturesForLanguage(java.lang.String,java.lang.String,java.lang.String)": {"Returns": [["@B_java#util#Set_E@", "A list of features supported for the given language."]], "Parameters": [["@B_java#lang#String_E@", "String: ISO-3 language code."], ["@B_java#lang#String_E@", "String: ISO-3 country code. May be empty or null."], ["@B_java#lang#String_E@", "String: Language variant. May be empty or null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Queries the service for a set of features supported for a given language. Can be called on multiple threads.", "history": "Added in API level 15", "FullName": "protected Set<String> onGetFeaturesForLanguage (String lang, String country, String variant)"}, "onGetLanguage()": {"Returns": [["@B_java#lang#String_E@", "A 3-element array, containing language (ISO 3-letter code), country (ISO 3-letter code) and variant used by the engine. The country and variant may be \"\". If country is empty, then variant must be empty too."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#util#Locale#getISO3Language_E@", "@B_java#util#Locale#getISO3Country_E@", "@B_java#util#Locale#getVariant_E@"], "Permissions": [], "Description": "Returns the language, country and variant currently being used by the TTS engine. This method will be called only on Android 4.2 and before (API <= 17). In later versions this method is not called by the Android TTS framework. Can be called on multiple threads.", "history": "Added in API level 14", "FullName": "protected abstract String[] onGetLanguage ()"}, "onCreate()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called by the system when the service is first created. Do not call this method directly.", "history": "Added in API level 14", "FullName": "public void onCreate ()"}, "onGetVoices()": {"Returns": [["@B_java#util#List_E@", "A list of voices supported."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Queries the service for a set of supported voices. Can be called on multiple threads. The default implementation tries to enumerate all available locales, pass them to @B_android#speech#tts#TextToSpeechService#onIsLanguageAvailable_E@ and create Voice instances (using the locale's BCP-47 language tag as the voice name) for the ones that are supported. Note, that this implementation is suitable only for engines that don't have multiple voices for a single locale. Also, this implementation won't work with Locales not listed in the set returned by the @B_java#util#Locale#getAvailableLocales_E@ method.", "history": "Added in API level 21", "FullName": "public List<Voice> onGetVoices ()"}, "onSynthesizeText(android.speech.tts.SynthesisRequest,android.speech.tts.SynthesisCallback)": {"Returns": [], "Parameters": [["@B_android#speech#tts#SynthesisRequest_E@", "SynthesisRequest: The synthesis request."], ["@B_android#speech#tts#SynthesisCallback_E@", "SynthesisCallback: The callback that the engine must use to make data available for playback or for writing to a file."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tells the service to synthesize speech from the given text. This method should block until the synthesis is finished. Called on the synthesis thread.", "history": "Added in API level 14", "FullName": "protected abstract void onSynthesizeText (SynthesisRequest request, SynthesisCallback callback)"}, "onLoadLanguage(java.lang.String,java.lang.String,java.lang.String)": {"Returns": [["int", "Code indicating the support status for the locale. One of @B_android#speech#tts#TextToSpeech#LANG_AVAILABLE_E@, @B_android#speech#tts#TextToSpeech#LANG_COUNTRY_AVAILABLE_E@, @B_android#speech#tts#TextToSpeech#LANG_COUNTRY_VAR_AVAILABLE_E@, @B_android#speech#tts#TextToSpeech#LANG_MISSING_DATA_E@ @B_android#speech#tts#TextToSpeech#LANG_NOT_SUPPORTED_E@."]], "Parameters": [["@B_java#lang#String_E@", "String: ISO-3 language code."], ["@B_java#lang#String_E@", "String: ISO-3 country code. May be empty or null."], ["@B_java#lang#String_E@", "String: Language variant. May be empty or null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies the engine that it should load a speech synthesis language. There is no guarantee that this method is always called before the language is used for synthesis. It is merely a hint to the engine that it will probably get some synthesis requests for this language at some point in the future. Can be called on multiple threads. In <= Android 4.2 (<= API 17) can be called on main and service binder threads. In > Android 4.2 (> API 17) can be called on main and synthesis threads.", "history": "Added in API level 14", "FullName": "protected abstract int onLoadLanguage (String lang, String country, String variant)"}}, "Inheritance": ["@B_android#content#Context_E@", "@B_android#content#ContextWrapper_E@", "@B_android#app#Service_E@"], "ClassName": "android.speech.tts.TextToSpeechService", "ClassDesc": "Abstract base class for TTS engine implementations. The following methods need to be implemented: @B_android#speech#tts#TextToSpeechService#onIsLanguageAvailable_E@ @B_android#speech#tts#TextToSpeechService#onLoadLanguage_E@ @B_android#speech#tts#TextToSpeechService#onGetLanguage_E@ @B_android#speech#tts#TextToSpeechService#onSynthesizeText_E@ @B_android#speech#tts#TextToSpeechService#onStop_E@ The first three deal primarily with language management, and are used to query the engine for it's support for a given language and indicate to it that requests in a given language are imminent. @B_android#speech#tts#TextToSpeechService#onSynthesizeText_E@ is central to the engine implementation. The implementation should synthesize text as per the request parameters and return synthesized data via the supplied callback. This class and its helpers will then consume that data, which might mean queuing it for playback or writing it to a file or similar. All calls to this method will be on a single thread, which will be different from the main thread of the service. Synthesis must be synchronous which means the engine must NOT hold on to the callback or call any methods on it after the method returns. @B_android#speech#tts#TextToSpeechService#onStop_E@ tells the engine that it should stop all ongoing synthesis, if any. Any pending data from the current synthesis will be discarded. @B_android#speech#tts#TextToSpeechService#onGetLanguage_E@ is not required as of JELLYBEAN_MR2 (API 18) and later, it is only called on earlier versions of Android. API Level 20 adds support for Voice objects. Voices are an abstraction that allow the TTS service to expose multiple backends for a single locale. Each one of them can have a different features set. In order to fully take advantage of voices, an engine should implement the following methods: @B_android#speech#tts#TextToSpeechService#onGetVoices_E@ @B_android#speech#tts#TextToSpeechService#onIsValidVoiceName_E@ @B_android#speech#tts#TextToSpeechService#onLoadVoice_E@ @B_android#speech#tts#TextToSpeechService#onGetDefaultVoiceNameFor_E@ The first three methods are siblings of the @B_android#speech#tts#TextToSpeechService#onGetLanguage_E@, @B_android#speech#tts#TextToSpeechService#onIsLanguageAvailable_E@ and @B_android#speech#tts#TextToSpeechService#onLoadLanguage_E@ methods. The last one, @B_android#speech#tts#TextToSpeechService#onGetDefaultVoiceNameFor_E@ is a link between locale and voice based methods. Since API level 21 @B_android#speech#tts#TextToSpeech#setLanguage_E@ is implemented by calling @B_android#speech#tts#TextToSpeech#setVoice_E@ with the voice returned by @B_android#speech#tts#TextToSpeechService#onGetDefaultVoiceNameFor_E@. If the client uses a voice instead of a locale, @B_android#speech#tts#SynthesisRequest_E@ will contain the requested voice name. The default implementations of Voice-related methods implement them using the pre-existing locale-based implementation."}