{"Functions": {"getSchemeName()": {"Returns": [["", "the name of the given authentication scheme"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns textual designation of the given authentication scheme.", "history": "Added in API level 1", "FullName": "public abstract String getSchemeName ()"}, "getRealm()": {"Returns": [["", "the authentication realm"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns authentication realm. If the concept of an authentication realm is not applicable to the given authentication scheme, returns null.", "history": "Added in API level 1", "FullName": "public abstract String getRealm ()"}, "getParameter(java.lang.String)": {"Returns": [["", "the parameter with the given name"]], "Parameters": [["@B_java#lang#String_E@", "The name of the parameter to be returned"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns authentication parameter with the given name, if available.", "history": "Added in API level 1", "FullName": "public abstract String getParameter (String name)"}, "isComplete()": {"Returns": [["", "true if the authentication process has been completed, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Authentication process may involve a series of challenge-response exchanges. This method tests if the authorization process has been completed, either successfully or unsuccessfully, that is, all the required authorization challenges have been processed in their entirety.", "history": "Added in API level 1", "FullName": "public abstract boolean isComplete ()"}, "isConnectionBased()": {"Returns": [["", "true if the scheme is connection based, false if the scheme is request based."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tests if the authentication scheme is provides authorization on a per connection basis instead of usual per request basis", "history": "Added in API level 1", "FullName": "public abstract boolean isConnectionBased ()"}, "processChallenge(org.apache.http.Header)": {"Returns": [], "Parameters": [["@B_org#apache#http#Header_E@", "the challenge header"]], "Throws": [["@B_org#apache#http#auth#MalformedChallengeException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Processes the given challenge token. Some authentication schemes may involve multiple challenge-response exchanges. Such schemes must be able to maintain the state information when dealing with sequential challenges", "history": "Added in API level 1", "FullName": "public abstract void processChallenge (Header header)"}, "authenticate(org.apache.http.auth.Credentials, org.apache.http.HttpRequest)": {"Returns": [["", "the authorization string"]], "Parameters": [["@B_org#apache#http#auth#Credentials_E@", "The set of credentials to be used for athentication"], ["@B_org#apache#http#HttpRequest_E@", "The request being authenticated"]], "Throws": [["@B_org#apache#http#auth#AuthenticationException_E@", "if authorization string cannot be generated due to an authentication failure"]], "SeeAlso": [], "Permissions": [], "Description": "Produces an authorization string for the given set of @B_org#apache#http#auth#Credentials_E@.", "history": "Added in API level 1", "FullName": "public abstract Header authenticate (Credentials credentials, HttpRequest request)"}}, "Inheritance": [], "ClassName": "org.apache.http.auth.AuthScheme", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit This interface represents an abstract challenge-response oriented authentication scheme. An authentication scheme should be able to support the following functions: Parse and process the challenge sent by the targer server in response to request for a protected resource Provide its textual designation Provide its parameters, if available Provide the realm this authentication scheme is applicable to, if available Generate authorization string for the given set of credentials, request method and URI as specificed in the HTTP request line in response to the actual authorization challenge Authentication schemes may ignore method name and URI parameters if they are not relevant for the given authentication mechanism Authentication schemes may be stateful involving a series of challenge-response exchanges"}