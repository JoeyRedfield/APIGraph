{"Functions": {"getDevicesMatchingConnectionStates(int[])": {"Returns": [["@B_java#util#List_E@", "List of devices. The list will be empty on error."]], "Parameters": [["int[]", "int: Array of states. States can be one of @B_android#bluetooth#BluetoothProfile#STATE_CONNECTED_E@, @B_android#bluetooth#BluetoothProfile#STATE_CONNECTING_E@, @B_android#bluetooth#BluetoothProfile#STATE_DISCONNECTED_E@, @B_android#bluetooth#BluetoothProfile#STATE_DISCONNECTING_E@,"]], "Throws": [["", "java.lang.UnsupportedOperationException"]], "SeeAlso": [], "Permissions": [], "Description": "Not supported - please use @B_android#bluetooth#BluetoothManager#getDevicesMatchingConnectionStates_E@ with @B_android#bluetooth#BluetoothProfile#GATT_E@ as first argument", "history": "Added in API level 18", "FullName": "public List<BluetoothDevice> getDevicesMatchingConnectionStates (int[] states)"}, "addService(android.bluetooth.BluetoothGattService)": {"Returns": [["boolean", "true, if the request to add service has been initiated"]], "Parameters": [["@B_android#bluetooth#BluetoothGattService_E@", "BluetoothGattService: Service to be added to the list of services provided by this device."]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Add a service to the list of services to be hosted. Once a service has been addded to the list, the service and its included characteristics will be provided by the local device. If the local device has already exposed services when this function is called, a service update notification will be sent to all clients. The @B_android#bluetooth#BluetoothGattServerCallback#onServiceAdded_E@ callback will indicate whether this service has been added successfully. Do not add another service before this callback. Requires @B_android#Manifest#permission#BLUETOOTH_E@ permission.", "history": "Added in API level 18", "FullName": "public boolean addService (BluetoothGattService service)"}, "clearServices()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Remove all services from the list of provided services. Requires @B_android#Manifest#permission#BLUETOOTH_E@ permission.", "history": "Added in API level 18", "FullName": "public void clearServices ()"}, "getConnectedDevices()": {"Returns": [["@B_java#util#List_E@", "List of devices. The list will be empty on error."]], "Parameters": [], "Throws": [["", "java.lang.UnsupportedOperationException"]], "SeeAlso": [], "Permissions": [], "Description": "Not supported - please use @B_android#bluetooth#BluetoothManager#getConnectedDevices_E@ with @B_android#bluetooth#BluetoothProfile#GATT_E@ as argument", "history": "Added in API level 18", "FullName": "public List<BluetoothDevice> getConnectedDevices ()"}, "close()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Close this GATT server instance. Application should call this method as early as possible after it is done with this GATT server.", "history": "Added in API level 18", "FullName": "public void close ()"}, "getConnectionState(android.bluetooth.BluetoothDevice)": {"Returns": [["int", "State of the profile connection. One of @B_android#bluetooth#BluetoothProfile#STATE_CONNECTED_E@, @B_android#bluetooth#BluetoothProfile#STATE_CONNECTING_E@, @B_android#bluetooth#BluetoothProfile#STATE_DISCONNECTED_E@, @B_android#bluetooth#BluetoothProfile#STATE_DISCONNECTING_E@ Value is @B_android#bluetooth#BluetoothProfile#STATE_DISCONNECTED_E@, @B_android#bluetooth#BluetoothProfile#STATE_CONNECTING_E@, @B_android#bluetooth#BluetoothProfile#STATE_CONNECTED_E@, or @B_android#bluetooth#BluetoothProfile#STATE_DISCONNECTING_E@"]], "Parameters": [["@B_android#bluetooth#BluetoothDevice_E@", "BluetoothDevice: Remote bluetooth device."]], "Throws": [["", "java.lang.UnsupportedOperationException"]], "SeeAlso": [], "Permissions": [], "Description": "Not supported - please use @B_android#bluetooth#BluetoothManager#getConnectedDevices_E@ with @B_android#bluetooth#BluetoothProfile#GATT_E@ as argument", "history": "Added in API level 18", "FullName": "public int getConnectionState (BluetoothDevice device)"}, "setPreferredPhy(android.bluetooth.BluetoothDevice,int,int,int)": {"Returns": [], "Parameters": [["@B_android#bluetooth#BluetoothDevice_E@", "BluetoothDevice: The remote device to send this response to"], ["int", "int: preferred transmitter PHY. Bitwise OR of any of @B_android#bluetooth#BluetoothDevice#PHY_LE_1M_MASK_E@, @B_android#bluetooth#BluetoothDevice#PHY_LE_2M_MASK_E@, and @B_android#bluetooth#BluetoothDevice#PHY_LE_CODED_MASK_E@."], ["int", "int: preferred receiver PHY. Bitwise OR of any of @B_android#bluetooth#BluetoothDevice#PHY_LE_1M_MASK_E@, @B_android#bluetooth#BluetoothDevice#PHY_LE_2M_MASK_E@, and @B_android#bluetooth#BluetoothDevice#PHY_LE_CODED_MASK_E@."], ["int", "int: preferred coding to use when transmitting on the LE Coded PHY. Can be one of @B_android#bluetooth#BluetoothDevice#PHY_OPTION_NO_PREFERRED_E@, @B_android#bluetooth#BluetoothDevice#PHY_OPTION_S2_E@ or @B_android#bluetooth#BluetoothDevice#PHY_OPTION_S8_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the preferred connection PHY for this app. Please note that this is just a recommendation, whether the PHY change will happen depends on other applications peferences, local and remote controller capabilities. Controller can override these settings. @B_android#bluetooth#BluetoothGattServerCallback#onPhyUpdate_E@ will be triggered as a result of this call, even if no PHY change happens. It is also triggered when remote device updates the PHY.", "history": "Added in API level 26", "FullName": "public void setPreferredPhy (BluetoothDevice device, int txPhy, int rxPhy, int phyOptions)"}, "removeService(android.bluetooth.BluetoothGattService)": {"Returns": [["boolean", "true, if the service has been removed"]], "Parameters": [["@B_android#bluetooth#BluetoothGattService_E@", "BluetoothGattService: Service to be removed."]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Removes a service from the list of services to be provided. Requires @B_android#Manifest#permission#BLUETOOTH_E@ permission.", "history": "Added in API level 18", "FullName": "public boolean removeService (BluetoothGattService service)"}, "readPhy(android.bluetooth.BluetoothDevice)": {"Returns": [], "Parameters": [["@B_android#bluetooth#BluetoothDevice_E@", "BluetoothDevice: The remote device to send this response to"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Read the current transmitter PHY and receiver PHY of the connection. The values are returned in @B_android#bluetooth#BluetoothGattServerCallback#onPhyRead_E@", "history": "Added in API level 26", "FullName": "public void readPhy (BluetoothDevice device)"}, "sendResponse(android.bluetooth.BluetoothDevice,int,int,int,byte[])": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#bluetooth#BluetoothDevice_E@", "BluetoothDevice: The remote device to send this response to"], ["int", "int: The ID of the request that was received with the callback"], ["int", "int: The status of the request to be sent to the remote devices"], ["int", "int: Value offset for partial read/write response"], ["byte[]", "byte: The value of the attribute that was read/written (optional)"]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Send a response to a read or write request to a remote device. This function must be invoked in when a remote read/write request is received by one of these callback methods: @B_android#bluetooth#BluetoothGattServerCallback#onCharacteristicReadRequest_E@ @B_android#bluetooth#BluetoothGattServerCallback#onCharacteristicWriteRequest_E@ @B_android#bluetooth#BluetoothGattServerCallback#onDescriptorReadRequest_E@ @B_android#bluetooth#BluetoothGattServerCallback#onDescriptorWriteRequest_E@ Requires @B_android#Manifest#permission#BLUETOOTH_E@ permission.", "history": "Added in API level 18", "FullName": "public boolean sendResponse (BluetoothDevice device, int requestId, int status, int offset, byte[] value)"}, "connect(android.bluetooth.BluetoothDevice,boolean)": {"Returns": [["boolean", "true, if the connection attempt was initiated successfully"]], "Parameters": [["@B_android#bluetooth#BluetoothDevice_E@", "BluetoothDevice no parameter comment"], ["boolean", "boolean: Whether to directly connect to the remote device (false) or to automatically connect as soon as the remote device becomes available (true)."]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Initiate a connection to a Bluetooth GATT capable device. The connection may not be established right away, but will be completed when the remote device is available. A @B_android#bluetooth#BluetoothGattServerCallback#onConnectionStateChange_E@ callback will be invoked when the connection state changes as a result of this function. The autoConnect parameter determines whether to actively connect to the remote device, or rather passively scan and finalize the connection when the remote device is in range/available. Generally, the first ever connection to a device should be direct (autoConnect set to false) and subsequent connections to known devices should be invoked with the autoConnect parameter set to true. Requires @B_android#Manifest#permission#BLUETOOTH_E@ permission.", "history": "Added in API level 18", "FullName": "public boolean connect (BluetoothDevice device, boolean autoConnect)"}, "cancelConnection(android.bluetooth.BluetoothDevice)": {"Returns": [], "Parameters": [["@B_android#bluetooth#BluetoothDevice_E@", "BluetoothDevice: Remote device"]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Disconnects an established connection, or cancels a connection attempt currently in progress. Requires @B_android#Manifest#permission#BLUETOOTH_E@ permission.", "history": "Added in API level 18", "FullName": "public void cancelConnection (BluetoothDevice device)"}, "getServices()": {"Returns": [["@B_java#util#List_E@", "List of services. Returns an empty list if no services have been added yet."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Returns a list of GATT services offered by this device. An application must call @B_android#bluetooth#BluetoothGattServer#addService_E@ to add a serice to the list of services offered by this device. Requires @B_android#Manifest#permission#BLUETOOTH_E@ permission.", "history": "Added in API level 18", "FullName": "public List<BluetoothGattService> getServices ()"}, "notifyCharacteristicChanged(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothGattCharacteristic,boolean)": {"Returns": [["boolean", "true, if the notification has been triggered successfully"]], "Parameters": [["@B_android#bluetooth#BluetoothDevice_E@", "BluetoothDevice: The remote device to receive the notification/indication"], ["@B_android#bluetooth#BluetoothGattCharacteristic_E@", "BluetoothGattCharacteristic: The local characteristic that has been updated"], ["boolean", "boolean: true to request confirmation from the client (indication), false to send a notification"]], "Throws": [["", "java.lang.IllegalArgumentException"]], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Send a notification or indication that a local characteristic has been updated. A notification or indication is sent to the remote device to signal that the characteristic has been updated. This function should be invoked for every client that requests notifications/indications by writing to the \"Client Configuration\" descriptor for the given characteristic. Requires @B_android#Manifest#permission#BLUETOOTH_E@ permission.", "history": "Added in API level 18", "FullName": "public boolean notifyCharacteristicChanged (BluetoothDevice device, BluetoothGattCharacteristic characteristic, boolean confirm)"}, "getService(java.util.UUID)": {"Returns": [["@B_android#bluetooth#BluetoothGattService_E@", "BluetoothGattService if supported, or null if the requested service is not offered by this device."]], "Parameters": [["@B_java#util#UUID_E@", "UUID: UUID of the requested service"]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Returns a @B_android#bluetooth#BluetoothGattService_E@ from the list of services offered by this device. If multiple instances of the same service (as identified by UUID) exist, the first instance of the service is returned. Requires @B_android#Manifest#permission#BLUETOOTH_E@ permission.", "history": "Added in API level 18", "FullName": "public BluetoothGattService getService (UUID uuid)"}}, "Inheritance": [], "ClassName": "android.bluetooth.BluetoothGattServer", "ClassDesc": "Public API for the Bluetooth GATT Profile server role. This class provides Bluetooth GATT server role functionality, allowing applications to create Bluetooth Smart services and characteristics. BluetoothGattServer is a proxy object for controlling the Bluetooth Service via IPC. Use @B_android#bluetooth#BluetoothManager#openGattServer_E@ to get an instance of this class."}