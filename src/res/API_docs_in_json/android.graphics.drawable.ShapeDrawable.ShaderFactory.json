{"Functions": {"resize(int, int)": {"Returns": [["@B_android#graphics#Shader_E@", "the Shader to be drawn"]], "Parameters": [["int", "int: the width of the Drawable being drawn"], ["int", "int: the heigh of the Drawable being drawn"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the Shader to be drawn when a Drawable is drawn. The dimensions of the Drawable are passed because they may be needed to adjust how the Shader is configured for drawing. This is called by ShapeDrawable.setShape().", "history": "added in API level 1", "FullName": "public abstract Shader resize (int width, int height)"}, "resize(int,int)": {"Returns": [["@B_android#graphics#Shader_E@", "the Shader to be drawn"]], "Parameters": [["int", "int: the width of the Drawable being drawn"], ["int", "int: the heigh of the Drawable being drawn"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the Shader to be drawn when a Drawable is drawn. The dimensions of the Drawable are passed because they may be needed to adjust how the Shader is configured for drawing. This is called by ShapeDrawable.setShape().", "history": "Added in API level 1", "FullName": "public abstract Shader resize (int width, int height)"}, "ShapeDrawable.ShaderFactory()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public ShapeDrawable.ShaderFactory ()"}}, "Inheritance": [], "ClassName": "android.graphics.drawable.ShapeDrawable.ShaderFactory", "ClassDesc": "Base class defines a factory object that is called each time the drawable is resized (has a new width or height). Its resize() method returns a corresponding shader, or null. Implement this class if you'd like your ShapeDrawable to use a special @B_android#graphics#Shader_E@, such as a @B_android#graphics#LinearGradient_E@."}