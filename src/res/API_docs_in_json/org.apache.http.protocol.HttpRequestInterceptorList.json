{"Functions": {"getRequestInterceptor(int)": {"Returns": [["", "the interceptor at the given index, or null if the index is out of range"]], "Parameters": [["int", "the index of the interceptor to obtain, 0 for first"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtains a request interceptor from this list.", "history": "Added in API level 1", "FullName": "public abstract HttpRequestInterceptor getRequestInterceptor (int index)"}, "getRequestInterceptorCount()": {"Returns": [["", "the number of request interceptors in this list"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtains the current size of this list.", "history": "Added in API level 1", "FullName": "public abstract int getRequestInterceptorCount ()"}, "addRequestInterceptor(org.apache.http.HttpRequestInterceptor, int)": {"Returns": [], "Parameters": [["@B_org#apache#http#HttpRequestInterceptor_E@", "the request interceptor to add"], ["int", "the index to insert the interceptor at"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Inserts a request interceptor at the specified index.", "history": "Added in API level 1", "FullName": "public abstract void addRequestInterceptor (HttpRequestInterceptor itcp, int index)"}, "addRequestInterceptor(org.apache.http.HttpRequestInterceptor)": {"Returns": [], "Parameters": [["@B_org#apache#http#HttpRequestInterceptor_E@", "the request interceptor to add"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Appends a request interceptor to this list.", "history": "Added in API level 1", "FullName": "public abstract void addRequestInterceptor (HttpRequestInterceptor itcp)"}, "removeRequestInterceptorByClass(java.lang.Class)": {"Returns": [], "Parameters": [["@B_java#lang#Class_E@", "the class of the instances to be removed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes all request interceptor of the specified class", "history": "Added in API level 1", "FullName": "public abstract void removeRequestInterceptorByClass (Class clazz)"}, "setInterceptors(java.util.List)": {"Returns": [], "Parameters": [["@B_java#util#List_E@", "the list of request interceptors"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the request interceptors in this list. This list will be cleared and re-initialized to contain all request interceptors from the argument list. If the argument list includes elements that are not request interceptors, the behavior is implementation dependent.", "history": "Added in API level 1", "FullName": "public abstract void setInterceptors (List itcps)"}, "clearRequestInterceptors()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes all request interceptors from this list.", "history": "Added in API level 1", "FullName": "public abstract void clearRequestInterceptors ()"}}, "Inheritance": [], "ClassName": "org.apache.http.protocol.HttpRequestInterceptorList", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Provides access to an ordered list of request interceptors. Lists are expected to be built upfront and used read-only afterwards for @B_org#apache#http#protocol#HttpProcessor_E@."}