{"Functions": {"assertReadingContentUriRequiresPermission(android.net.Uri,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri: The uri that requires a permission to query."], ["@B_java#lang#String_E@", "String: The permission that should be required."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that reading from the content uri requires a particular permission by querying the uri and ensuring a @B_java#lang#SecurityException_E@ is thrown mentioning the particular permission.", "history": "Added in API level 4 Deprecated in API level 24", "FullName": "public void assertReadingContentUriRequiresPermission (Uri uri, String permission)"}, "assertActivityRequiresPermission(java.lang.String,java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The package name of the activity to launch."], ["@B_java#lang#String_E@", "String: The class of the activity to launch."], ["@B_java#lang#String_E@", "String: The name of the permission."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that launching a given activity is protected by a particular permission by attempting to start the activity and validating that a @B_java#lang#SecurityException_E@ is thrown that mentions the permission in its error message. Note that an instrumentation isn't needed because all we are looking for is a security error and we don't need to wait for the activity to launch and get a handle to the activity.", "history": "Added in API level 4 Deprecated in API level 24", "FullName": "public void assertActivityRequiresPermission (String packageName, String className, String permission)"}, "AndroidTestCase()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public AndroidTestCase ()"}, "testAndroidTestCaseSetupProperly()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public void testAndroidTestCaseSetupProperly ()"}, "tearDown()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#lang#Exception_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Tears down the fixture, for example, close a network connection. This method is called after a test is executed.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "protected void tearDown ()"}, "getContext()": {"Returns": [["@B_android#content#Context_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public Context getContext ()"}, "scrubClass(java.lang.Class<?>)": {"Returns": [], "Parameters": [["@B_java#lang#Class_E@", "Class: The class of the derived TestCase implementation."]], "Throws": [["", "java.lang.IllegalAccessException"], ["@B_java#lang#IllegalAccessException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "This function is called by various TestCase implementations, at tearDown() time, in order to scrub out any class variables. This protects against memory leaks in the case where a test case creates a non-static inner class (thus referencing the test case) and gives it to someone else to hold onto.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "protected void scrubClass (Class<?> testCaseClass)"}, "setUp()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#lang#Exception_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Sets up the fixture, for example, open a network connection. This method is called before a test is executed.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "protected void setUp ()"}, "setContext(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public void setContext (Context context)"}, "assertWritingContentUriRequiresPermission(android.net.Uri,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri: The uri that requires a permission to query."], ["@B_java#lang#String_E@", "String: The permission that should be required."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that writing to the content uri requires a particular permission by inserting into the uri and ensuring a @B_java#lang#SecurityException_E@ is thrown mentioning the particular permission.", "history": "Added in API level 4 Deprecated in API level 24", "FullName": "public void assertWritingContentUriRequiresPermission (Uri uri, String permission)"}}, "Inheritance": ["@B_junit#framework#Assert_E@", "@B_junit#framework#TestCase_E@"], "ClassName": "android.test.AndroidTestCase", "ClassDesc": "Use Extend this if you need to access Resources or other things that depend on Activity Context."}