{"Functions": {"startMainActivity(android.content.ComponentName,android.os.UserHandle)": {"Returns": [], "Parameters": [["@B_android#content#ComponentName_E@", "ComponentName: The ComponentName of the activity to launch, it must be exported and has action @B_android#content#Intent#ACTION_MAIN_E@, category @B_android#content#Intent#CATEGORY_LAUNCHER_E@. Otherwise, SecurityException will be thrown. This value must never be null."], ["@B_android#os#UserHandle_E@", "UserHandle: The UserHandle of the profile, must be one of the users returned by @B_android#content#pm#CrossProfileApps#getTargetUserProfiles_E@, otherwise a @B_java#lang#SecurityException_E@ will be thrown. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Starts the specified main activity of the caller package in the specified profile.", "history": "Added in API level 28", "FullName": "public void startMainActivity (ComponentName component, UserHandle targetUser)"}, "getProfileSwitchingIconDrawable(android.os.UserHandle)": {"Returns": [["@B_android#graphics#drawable#Drawable_E@", "an icon that calling app can show user for the semantic of launching its own activity in specified user profile. This value will never be null."]], "Parameters": [["@B_android#os#UserHandle_E@", "UserHandle: The UserHandle of the target profile, must be one of the users returned by @B_android#content#pm#CrossProfileApps#getTargetUserProfiles_E@, otherwise a @B_java#lang#SecurityException_E@ will be thrown. This value must never be null."]], "Throws": [], "SeeAlso": ["@B_android#content#pm#CrossProfileApps#startMainActivity_E@"], "Permissions": [], "Description": "Return a drawable that calling app can show to user for the semantic of profile switching -- launching its own activity in specified user profile. For example, it may return a briefcase icon if the given user handle is the managed profile one.", "history": "Added in API level 28", "FullName": "public Drawable getProfileSwitchingIconDrawable (UserHandle userHandle)"}, "getProfileSwitchingLabel(android.os.UserHandle)": {"Returns": [["@B_java#lang#CharSequence_E@", "a label that calling app can show user for the semantic of launching its own activity in the specified user profile. This value will never be null."]], "Parameters": [["@B_android#os#UserHandle_E@", "UserHandle: The UserHandle of the target profile, must be one of the users returned by @B_android#content#pm#CrossProfileApps#getTargetUserProfiles_E@, otherwise a @B_java#lang#SecurityException_E@ will be thrown. This value must never be null."]], "Throws": [], "SeeAlso": ["@B_android#content#pm#CrossProfileApps#startMainActivity_E@"], "Permissions": [], "Description": "Return a label that calling app can show to user for the semantic of profile switching -- launching its own activity in specified user profile. For example, it may return \"Switch to work\" if the given user handle is the managed profile one.", "history": "Added in API level 28", "FullName": "public CharSequence getProfileSwitchingLabel (UserHandle userHandle)"}, "getTargetUserProfiles()": {"Returns": [["@B_java#util#List_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#os#UserManager#getUserProfiles_E@"], "Permissions": [], "Description": "Return a list of user profiles that that the caller can use when calling other APIs in this class. A user profile would be considered as a valid target user profile, provided that: It gets caller app installed It is not equal to the calling user It is in the same profile group of calling user profile It is enabled", "history": "Added in API level 28", "FullName": "public List<UserHandle> getTargetUserProfiles ()"}}, "Inheritance": [], "ClassName": "android.content.pm.CrossProfileApps", "ClassDesc": "Class for handling cross profile operations. Apps can use this class to interact with its instance in any profile that is in @B_android#content#pm#CrossProfileApps#getTargetUserProfiles_E@. For example, app can use this class to start its main activity in managed profile."}