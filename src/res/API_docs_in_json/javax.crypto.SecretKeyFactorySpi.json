{"Functions": {"engineGetKeySpec(javax.crypto.SecretKey,java.lang.Class<?>)": {"Returns": [["@B_java#security#spec#KeySpec_E@", "the underlying key specification (key material) in the requested format"]], "Parameters": [["@B_javax#crypto#SecretKey_E@", "SecretKey: the key"], ["@B_java#lang#Class_E@", "Class: the requested format in which the key material shall be returned"]], "Throws": [["@B_java#security#spec#InvalidKeySpecException_E@", "if the requested key specification is inappropriate for the given key (e.g., the algorithms associated with key and keySpec do not match, or key references a key on a cryptographic hardware device whereas keySpec is the specification of a software-based key), or the given key cannot be dealt with (e.g., the given key has an algorithm or format not supported by this secret-key factory)."]], "SeeAlso": [], "Permissions": [], "Description": "Returns a specification (key material) of the given key object in the requested format.", "history": "Added in API level 1", "FullName": "protected abstract KeySpec engineGetKeySpec (SecretKey key, Class<?> keySpec)"}, "engineGenerateSecret(java.security.spec.KeySpec)": {"Returns": [["@B_javax#crypto#SecretKey_E@", "the secret key"]], "Parameters": [["@B_java#security#spec#KeySpec_E@", "KeySpec: the specification (key material) of the secret key"]], "Throws": [["@B_java#security#spec#InvalidKeySpecException_E@", "if the given key specification is inappropriate for this secret-key factory to produce a secret key."]], "SeeAlso": [], "Permissions": [], "Description": "Generates a SecretKey object from the provided key specification (key material).", "history": "Added in API level 1", "FullName": "protected abstract SecretKey engineGenerateSecret (KeySpec keySpec)"}, "SecretKeyFactorySpi()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public SecretKeyFactorySpi ()"}, "engineTranslateKey(javax.crypto.SecretKey)": {"Returns": [["@B_javax#crypto#SecretKey_E@", "the translated key"]], "Parameters": [["@B_javax#crypto#SecretKey_E@", "SecretKey: the key whose provider is unknown or untrusted"]], "Throws": [["@B_java#security#InvalidKeyException_E@", "if the given key cannot be processed by this secret-key factory."]], "SeeAlso": [], "Permissions": [], "Description": "Translates a key object, whose provider may be unknown or potentially untrusted, into a corresponding key object of this secret-key factory.", "history": "Added in API level 1", "FullName": "protected abstract SecretKey engineTranslateKey (SecretKey key)"}}, "Inheritance": [], "ClassName": "javax.crypto.SecretKeyFactorySpi", "ClassDesc": "This class defines the SecretKeyFactory class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a secret-key factory for a particular algorithm. A provider should document all the key specifications supported by its secret key factory. For example, the DES secret-key factory supplied by the \"SunJCE\" provider supports DESKeySpec as a transparent representation of DES keys, and that provider's secret-key factory for Triple DES keys supports DESedeKeySpec as a transparent representation of Triple DES keys."}