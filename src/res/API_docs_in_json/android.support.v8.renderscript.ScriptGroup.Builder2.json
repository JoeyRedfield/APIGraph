{"Functions": {"ScriptGroup.Builder2(android.support.v8.renderscript.RenderScript)": {"Returns": [], "Parameters": [["@B_android#support#v8#renderscript#RenderScript_E@", "RenderScript: the RenderScript context"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a Builder object", "history": "added in version 23.0.0", "FullName": "ScriptGroup.Builder2 (RenderScript rs)"}, "addInvoke(android.support.v8.renderscript.Script.InvokeID, java.lang.Object...)": {"Returns": [["@B_android#support#v8#renderscript#ScriptGroup#Closure_E@", "a closure"]], "Parameters": [["@B_android#support#v8#renderscript#Script#InvokeID_E@", "Script.InvokeID: Invoke ID for the invocable function"], ["@B_java#lang#Object_E@", "Object: arguments followed by bindings for global variables"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds a closure for an invocable function", "history": "added in version 23.0.0", "FullName": "ScriptGroup.Closure addInvoke (Script.InvokeID invoke, Object... argsAndBindings)"}, "addKernel(android.support.v8.renderscript.Script.KernelID, android.support.v8.renderscript.Type, java.lang.Object...)": {"Returns": [["@B_android#support#v8#renderscript#ScriptGroup#Closure_E@", "a closure"]], "Parameters": [["@B_android#support#v8#renderscript#Script#KernelID_E@", "Script.KernelID: Kernel ID for the kernel function"], ["@B_android#support#v8#renderscript#Type_E@", "Type no parameter comment"], ["@B_java#lang#Object_E@", "Object: arguments followed by bindings for global variables"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds a closure for a kernel", "history": "added in version 23.0.0", "FullName": "ScriptGroup.Closure addKernel (Script.KernelID k, Type returnType, Object... argsAndBindings)"}, "create(java.lang.String, android.support.v8.renderscript.ScriptGroup.Future...)": {"Returns": [["@B_android#support#v8#renderscript#ScriptGroup_E@", "a script group"]], "Parameters": [["@B_java#lang#String_E@", "String: name for the script group. Legal names can only contain letters, digits, '-', or '_'. The name can be no longer than 100 characters."], ["@B_android#support#v8#renderscript#ScriptGroup#Future_E@", "Future: futures intended as outputs of the script group"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a script group", "history": "added in version 23.0.0", "FullName": "ScriptGroup create (String name, Future... outputs)"}, "addInput()": {"Returns": [["@B_android#support#v8#renderscript#ScriptGroup#Input_E@", "a script group input, which can be used as an argument or a value to a global variable for creating closures"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds a script group input", "history": "added in version 23.0.0", "FullName": "ScriptGroup.Input addInput ()"}}, "Inheritance": [], "ClassName": "android.support.v8.renderscript.ScriptGroup.Builder2", "ClassDesc": "The builder class for creating script groups A script group is created using closures (see class @B_android#support#v8#renderscript#ScriptGroup#Closure_E@). A closure is a function call to a kernel or invocable function. Each function argument or global variable accessed inside the function is bound to 1) a known value, 2) a script group input (see class @B_android#support#v8#renderscript#ScriptGroup#Input_E@), or 3) a future (see class @B_android#support#v8#renderscript#ScriptGroup#Future_E@). A future is the output of a closure, either the return value of the function or a global variable written by that function. Closures are created using the @B_android#support#v8#renderscript#ScriptGroup#Builder2#addKernel_E@ or @B_android#support#v8#renderscript#ScriptGroup#Builder2#addInvoke_E@ methods. When a closure is created, futures from previously created closures can be used as its inputs. External script group inputs can be used as inputs to individual closures as well. An external script group input is created using the @B_android#support#v8#renderscript#ScriptGroup#Builder2#addInput_E@ method. A script group is created by a call to the @B_android#support#v8#renderscript#ScriptGroup#Builder2#create_E@ method, which accepts an array of futures as the outputs for the script group. Closures in a script group can be evaluated in any order as long as the following conditions are met: 1) a closure must be evaluated before any other closures that take its futures as inputs; 2) all closures added before an invoke closure must be evaluated before it; and 3) all closures added after an invoke closure must be evaluated after it. As a special case, the order that the closures are added is a legal evaluation order. However, other evaluation orders are possible, including concurrently evaluating independent closures."}