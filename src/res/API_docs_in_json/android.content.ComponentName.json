{"Functions": {"createRelative(android.content.Context,java.lang.String)": {"Returns": [["@B_android#content#ComponentName_E@", "the new ComponentName This value will never be null."]], "Parameters": [["@B_android#content#Context_E@", "Context: a Context for the package implementing the component This value must never be null."], ["@B_java#lang#String_E@", "String: the name of the class inside of pkg that implements the component This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new component identifier where the class name may be specified as either absolute or relative to the containing package. Relative package names begin with a '.' character. For a package \"com.example\" and class name \".app.MyActivity\" this method will return a ComponentName with the package \"com.example\"and class name \"com.example.app.MyActivity\". Fully qualified class names are also permitted.", "history": "Added in API level 23", "FullName": "public static ComponentName createRelative (Context pkg, String cls)"}, "ComponentName(java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The name of the package that the component exists in. Can not be null. This value must never be null."], ["@B_java#lang#String_E@", "String: The name of the class inside of pkg that implements the component. Can not be null. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new component identifier.", "history": "Added in API level 1", "FullName": "public ComponentName (String pkg, String cls)"}, "createRelative(java.lang.String, java.lang.String)": {"Returns": [["@B_android#content#ComponentName_E@", "the new ComponentName This value will never be null."]], "Parameters": [["@B_java#lang#String_E@", "String: the name of the package the component exists inThis value must never be null."], ["@B_java#lang#String_E@", "String: the name of the class inside of pkg that implements the componentThis value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new component identifier where the class name may be specified as either absolute or relative to the containing package. Relative package names begin with a '.' character. For a package \"com.example\" and class name \".app.MyActivity\" this method will return a ComponentName with the package \"com.example\"and class name \"com.example.app.MyActivity\". Fully qualified class names are also permitted.", "history": "added in API level 23", "FullName": "public static ComponentName createRelative (String pkg, String cls)"}, "getClassName()": {"Returns": [["@B_java#lang#String_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the class name of this component.", "history": "Added in API level 1", "FullName": "public String getClassName ()"}, "readFromParcel(android.os.Parcel)": {"Returns": [["@B_android#content#ComponentName_E@", "Returns a new ComponentName matching the previously written object, or null if a null had been written."]], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel from which to read the ComponentName"]], "Throws": [], "SeeAlso": ["@B_android#content#ComponentName#writeToParcel_E@"], "Permissions": [], "Description": "Read a ComponentName from a Parcel that was previously written with @B_android#content#ComponentName#writeToParcel_E@, returning either a null or new object as appropriate.", "history": "Added in API level 1", "FullName": "public static ComponentName readFromParcel (Parcel in)"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 1", "FullName": "public int describeContents ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 1", "FullName": "public void writeToParcel (Parcel out, int flags)"}, "writeToParcel(android.content.ComponentName,android.os.Parcel)": {"Returns": [], "Parameters": [["@B_android#content#ComponentName_E@", "ComponentName: The ComponentName to be written."], ["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the ComponentName will be placed."]], "Throws": [], "SeeAlso": ["@B_android#content#ComponentName#readFromParcel_E@"], "Permissions": [], "Description": "Write a ComponentName to a Parcel, handling null pointers. Must be read with @B_android#content#ComponentName#readFromParcel_E@.", "history": "Added in API level 1", "FullName": "public static void writeToParcel (ComponentName c, Parcel out)"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if this object is the same as the obj argument; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the reference object with which to compare."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether some other object is \"equal to\" this one. The equals method implements an equivalence relation on non-null object references: It is x, x.equals(x) should return true. It is x and y, x.equals(y) should return true if and only if y.equals(x) returns true. It is x, y, and z, if x.equals(y) returns true and y.equals(z) returns true, then x.equals(z) should return true. It is x and y, multiple invocations of x.equals(y) consistently return true or consistently return false, provided no information used in equals comparisons on the objects is modified. For any non-null reference value x, x.equals(null) should return false. The equals method for class Object implements the most discriminating possible equivalence relation on objects; that is, for any non-null reference values x and y, this method returns true if and only if x and y refer to the same object (x == y has the value true). Note that it is generally necessary to override the hashCode method whenever this method is overridden, so as to maintain the general contract for the hashCode method, which states that equal objects must have equal hash codes.", "history": "Added in API level 1", "FullName": "public boolean equals (Object obj)"}, "ComponentName(android.os.Parcel)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel containing the previously written ComponentName, positioned at the location in the buffer where it was written."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Instantiate a new ComponentName from the data in a Parcel that was previously written with @B_android#content#ComponentName#writeToParcel_E@. Note that you must not use this with data written by @B_android#content#ComponentName#writeToParcel_E@ since it is not possible to handle a null ComponentObject here.", "history": "Added in API level 1", "FullName": "public ComponentName (Parcel in)"}, "clone()": {"Returns": [["@B_android#content#ComponentName_E@", "a clone of this instance."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates and returns a copy of this object. The precise meaning of \"copy\" may depend on the class of the object. The general intent is that, for any object x, the expression: true, but these are not absolute requirements. While it is typically the case that: true, this is not an absolute requirement. By convention, the returned object should be obtained by calling super.clone. If a class and all of its superclasses (except Object) obey this convention, it will be the case that x.clone().getClass() == x.getClass(). By convention, the object returned by this method should be independent of this object (which is being cloned). To achieve this independence, it may be necessary to modify one or more fields of the object returned by super.clone before returning it. Typically, this means copying any mutable objects that comprise the internal \"deep structure\" of the object being cloned and replacing the references to these objects with references to the copies. If a class contains only primitive fields or references to immutable objects, then it is usually the case that no fields in the object returned by super.clone need to be modified. The method clone for class Object performs a specific cloning operation. First, if the class of this object does not implement the interface Cloneable, then a CloneNotSupportedException is thrown. Note that all arrays are considered to implement the interface Cloneable and that the return type of the clone method of an array type T[] is T[] where T is any reference or primitive type. Otherwise, this method creates a new instance of the class of this object and initializes all its fields with exactly the contents of the corresponding fields of this object, as if by assignment; the contents of the fields are not themselves cloned. Thus, this method performs a \"shallow copy\" of this object, not a \"deep copy\" operation. The class Object does not itself implement the interface Cloneable, so calling the clone method on an object whose class is Object will result in throwing an exception at run time.", "history": "Added in API level 1", "FullName": "public ComponentName clone ()"}, "hashCode()": {"Returns": [["int", "a hash code value for this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code value for the object. This method is supported for the benefit of hash tables such as those provided by @B_java#util#HashMap_E@. The general contract of hashCode is: Whenever it is invoked on the same object more than once during an execution of a Java application, the hashCode method must consistently return the same integer, provided no information used in equals comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application. If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result. It is not required that if two objects are unequal according to the @B_java#lang#Object#equals_E@ method, then calling the hashCode method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables. As much as is reasonably practical, the hashCode method defined by class Object does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the Java\u2122 programming language.)", "history": "Added in API level 1", "FullName": "public int hashCode ()"}, "createRelative(java.lang.String,java.lang.String)": {"Returns": [["@B_android#content#ComponentName_E@", "the new ComponentName This value will never be null."]], "Parameters": [["@B_java#lang#String_E@", "String: the name of the package the component exists in This value must never be null."], ["@B_java#lang#String_E@", "String: the name of the class inside of pkg that implements the component This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new component identifier where the class name may be specified as either absolute or relative to the containing package. Relative package names begin with a '.' character. For a package \"com.example\" and class name \".app.MyActivity\" this method will return a ComponentName with the package \"com.example\"and class name \"com.example.app.MyActivity\". Fully qualified class names are also permitted.", "history": "Added in API level 23", "FullName": "public static ComponentName createRelative (String pkg, String cls)"}, "ComponentName(android.content.Context,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: A Context for the package implementing the component, from which the actual package name will be retrieved. This value must never be null."], ["@B_java#lang#String_E@", "String: The name of the class inside of pkg that implements the component. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new component identifier from a Context and class name.", "history": "Added in API level 1", "FullName": "public ComponentName (Context pkg, String cls)"}, "unflattenFromString(java.lang.String)": {"Returns": [["@B_android#content#ComponentName_E@", "Returns a new ComponentName containing the package and class names that were encoded in str This value may be null."]], "Parameters": [["@B_java#lang#String_E@", "String: The String that was returned by flattenToString(). This value must never be null."]], "Throws": [], "SeeAlso": ["@B_android#content#ComponentName#flattenToString_E@"], "Permissions": [], "Description": "Recover a ComponentName from a String that was previously created with @B_android#content#ComponentName#flattenToString_E@. It splits the string at the first '/', taking the part before as the package name and the part after as the class name. As a special convenience (to use, for example, when parsing component names on the command line), if the '/' is immediately followed by a '.' then the final class name will be the concatenation of the package name with the string following the '/'. Thus \"com.foo/.Blah\" becomes package=\"com.foo\" class=\"com.foo.Blah\".", "history": "Added in API level 1", "FullName": "public static ComponentName unflattenFromString (String str)"}, "ComponentName(android.content.Context,java.lang.Class<?>)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: A Context for the package implementing the component, from which the actual package name will be retrieved. This value must never be null."], ["@B_java#lang#Class_E@", "Class: The Class object of the desired component, from which the actual class name will be retrieved. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new component identifier from a Context and Class object.", "history": "Added in API level 1", "FullName": "public ComponentName (Context pkg, Class<?> cls)"}, "flattenToString()": {"Returns": [["@B_java#lang#String_E@", "Returns a new String holding the package and class names. This is represented as the package name, concatenated with a '/' and then the class name. This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#content#ComponentName#unflattenFromString_E@"], "Permissions": [], "Description": "Return a String that unambiguously describes both the package and class names contained in the ComponentName. You can later recover the ComponentName from this string through @B_android#content#ComponentName#unflattenFromString_E@.", "history": "Added in API level 1", "FullName": "public String flattenToString ()"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 1", "FullName": "public String toString ()"}, "getPackageName()": {"Returns": [["@B_java#lang#String_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the package name of this component.", "history": "Added in API level 1", "FullName": "public String getPackageName ()"}, "toShortString()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return string representation of this class without the class's name as a prefix.", "history": "Added in API level 1", "FullName": "public String toShortString ()"}, "flattenToShortString()": {"Returns": [["@B_java#lang#String_E@", "Returns a new String holding the package and class names. This is represented as the package name, concatenated with a '/' and then the class name. This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#content#ComponentName#unflattenFromString_E@"], "Permissions": [], "Description": "The same as @B_android#content#ComponentName#flattenToString_E@, but abbreviates the class name if it is a suffix of the package. The result can still be used with @B_android#content#ComponentName#unflattenFromString_E@.", "history": "Added in API level 1", "FullName": "public String flattenToShortString ()"}, "compareTo(android.content.ComponentName)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_android#content#ComponentName_E@", "ComponentName no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 4", "FullName": "public int compareTo (ComponentName that)"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 1", "FullName": "public void writeToParcel (Parcel out, int flags)"}, "getShortClassName()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the class name, either fully qualified or in a shortened form (with a leading '.') if it is a suffix of the package.", "history": "Added in API level 1", "FullName": "public String getShortClassName ()"}, "ComponentName(java.lang.String, java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The name of the package that the component exists in. Can not be null."], ["@B_java#lang#String_E@", "String: The name of the class inside of pkg that implements the component. Can not be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new component identifier.", "history": "added in API level 1", "FullName": "public ComponentName (String pkg, String cls)"}}, "Inheritance": [], "ClassName": "android.content.ComponentName", "ClassDesc": "Identifier for a specific application component (@B_android#app#Activity_E@, @B_android#app#Service_E@, @B_android#content#BroadcastReceiver_E@, or @B_android#content#ContentProvider_E@) that is available. Two pieces of information, encapsulated here, are required to identify a component: the package (a String) it exists in, and the class (a String) name inside of that package."}