{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of this annotation"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of this annotation. The details of the representation are implementation-dependent, but the following may be regarded as typical:", "history": "Added in API level 1", "FullName": "public abstract String toString ()"}, "annotationType()": {"Returns": [["@B_java#lang#Class_E@", "the annotation type of this annotation"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the annotation type of this annotation.", "history": "Added in API level 1", "FullName": "public abstract Class<? extends Annotation> annotationType ()"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if the specified object represents an annotation that is logically equivalent to this one, otherwise false"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the reference object with which to compare."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the specified object represents an annotation that is logically equivalent to this one. In other words, returns true if the specified object is an instance of the same annotation type as this instance, all of whose members are equal to the corresponding member of this annotation, as defined below: Two corresponding primitive typed members whose values are Two corresponding Two corresponding Two corresponding Two corresponding array typed members @B_java#util#Arrays#equals_E@.", "history": "Added in API level 1", "FullName": "public abstract boolean equals (Object obj)"}, "hashCode()": {"Returns": [["int", "the hash code of this annotation"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the hash code of this annotation, as defined below: The hash code of an annotation is the sum of the hash codes of its members (including those with default values), as defined below: The hash code of an annotation member is (127 times the hash code of the member-name as computed by @B_java#lang#String#hashCode_E@) XOR the hash code of the member-value, as defined below: The hash code of a member-value depends on its type: The hash code of a primitive value @B_java#lang#Byte_E@, @B_java#lang#Character_E@, @B_java#lang#Double_E@, @B_java#lang#Float_E@, @B_java#lang#Integer_E@, @B_java#lang#Long_E@, @B_java#lang#Short_E@, or @B_java#lang#Boolean_E@). The hash code of a string, enum, class, or annotation member-value I The hash code of an array member-value is computed by calling the appropriate overloading of @B_java#util#Arrays#hashCode_E@ on the value. (There is one overloading for each primitive type, and one for object reference types.)", "history": "Added in API level 1", "FullName": "public abstract int hashCode ()"}}, "Inheritance": [], "ClassName": "java.lang.annotation.Annotation", "ClassDesc": "The common interface extended by all annotation types. Note that an interface that manually extends this one does @B_java#lang#reflect#AnnotatedElement_E@ interface discusses compatibility concerns when evolving an annotation type from being non-repeatable to being repeatable."}