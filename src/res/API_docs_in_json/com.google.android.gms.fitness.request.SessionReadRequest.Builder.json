{"Functions": {"setSessionName(java.lang.String)": {"Returns": [], "Parameters": [["String", "the name of the session we want data for"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds an optional session name to this request. If specified, only sessions with the exact name are selected. Only one session name can be specified per request. Calling this method multiple times will override the previous call.", "history": "", "FullName": "public SessionReadRequest.Builder setSessionName (String sessionName)"}, "setSessionId(java.lang.String)": {"Returns": [], "Parameters": [["String", "the ID of the session we want data for"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds an optional session identifier to this request. If specified, only the session with the exact identifier is selected. Only one session identifier can be specified per request. Calling this method multiple times will override the previous call.", "history": "", "FullName": "public SessionReadRequest.Builder setSessionId (String sessionId)"}, "read(com.google.android.gms.fitness.data.DataType)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#fitness#data#DataType_E@", "the data type we are reading"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads data from the default data source of the given dataType for each session selected by this request. The default data source may be aggregated or merged. The read data will be returned as a separate @B_com#google#android#gms#fitness#data#DataSet_E@ for each returned session. The data returned from the data type does not need to be inserted together with the session. The only requirement is that its timestamp fall within the session interval. This method can be called multiple times to read multiple data types in the request.", "history": "", "FullName": "public SessionReadRequest.Builder read (DataType dataType)"}, "read(com.google.android.gms.fitness.data.DataSource)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#fitness#data#DataSource_E@", "the data source we're reading"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads data from a given dataSource for each session selected by this request. The read data will be returned as a separate @B_com#google#android#gms#fitness#data#DataSet_E@ for each returned session. The data returned from this data source does not need to be inserted together with the session. The only requirement is that its timestamp fall within the session interval. This method can be called multiple times to read multiple data sources in the request.", "history": "", "FullName": "public SessionReadRequest.Builder read (DataSource dataSource)"}, "setTimeInterval(long, long)": {"Returns": [], "Parameters": [["long", "a start time, in milliseconds since epoch, inclusive"], ["long", "an end time, in milliseconds since epoch, inclusive"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the time range for the sessions we want to select in our query, in milliseconds since epoch. Defined start and end times are required for every read query. All sessions that fall in the specified time interval are returned. Session @B_com#google#android#gms#fitness#request#SessionReadRequest#Builder#setSessionName_E@ and @B_com#google#android#gms#fitness#request#SessionReadRequest#Builder#setSessionId_E@ can be used to further restrict the returned sessions. For a session to be returned, it has to fall completely within the interval specified in the query. Overlapping sessions with start and/or end times outside the interval will not be returned. Ongoing sessions (with no end time specified yet) whose start time falls within the interval are returned.", "history": "", "FullName": "public SessionReadRequest.Builder setTimeInterval (long startTimeMillis, long endTimeMillis)"}, "readSessionsFromAllApps()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enables reading sessions inserted by any app. If not set, only sessions added by the calling app will be returned.", "history": "", "FullName": "public SessionReadRequest.Builder readSessionsFromAllApps ()"}, "excludePackage(java.lang.String)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Exclude sessions from a particular package name from the read result. This method can be used in combination with @B_com#google#android#gms#fitness#request#SessionReadRequest#Builder#readSessionsFromAllApps_E@ to exclude sessions from apps that are not of interest (for instance, sessions you have written yourself). The method can be called multiple times to exclude more than one package from the request.", "history": "", "FullName": "public SessionReadRequest.Builder excludePackage (String appPackageName)"}, "setTimeInterval(long, long, java.util.concurrent.TimeUnit)": {"Returns": [], "Parameters": [["long", "a start time since epoch, inclusive"], ["long", "an end time since epoch, inclusive"], ["TimeUnit", "time unit for the start and end times"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the time range for the sessions we want to select in our query, in a specific @B_java#util#concurrent#TimeUnit_E@. Defined start and end times are required for every read query. All sessions that fall in the specified time interval are returned. Session For a session to be returned, it has to fall completely within the interval specified in the query. Overlapping sessions with start and/or end times outside the interval will not be returned. Ongoing sessions (with no end time specified yet) whose start time falls within the interval are returned.", "history": "", "FullName": "public SessionReadRequest.Builder setTimeInterval (long startTime, long endTime, TimeUnit timeUnit)"}, "build()": {"Returns": [], "Parameters": [], "Throws": [["IllegalArgumentException", "if the builder doesn't have valid time interval data to create a read request"], ["IllegalStateException", "if the builder doesn't have valid data type or data source to create a read request"]], "SeeAlso": [], "Permissions": [], "Description": "Finishes building and returns the request.", "history": "", "FullName": "public SessionReadRequest build ()"}, "enableServerQueries()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enable querying the Google Fit server to fetch query results, in case the local store doesn't have data for the full requested time range. Server results will be combined with local results. Note that querying the server adds latency, specially under poor network conditions. Also note that attempting to query the server when there is no network connection may result in a", "history": "", "FullName": "public SessionReadRequest.Builder enableServerQueries ()"}, "SessionReadRequest.Builder()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public SessionReadRequest.Builder ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.fitness.request.SessionReadRequest.Builder", "ClassDesc": "Builder used to create a new SessionReadRequest."}