{"Functions": {"getMimeType()": {"Returns": [["@B_java#lang#String_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The mimeType of the image.", "history": "Added in API level 28", "FullName": "public String getMimeType ()"}, "isAnimated()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Whether the image is animated. If true, @B_android#graphics#ImageDecoder#decodeDrawable_E@ will return an @B_android#graphics#drawable#AnimatedImageDrawable_E@.", "history": "Added in API level 28", "FullName": "public boolean isAnimated ()"}, "getSize()": {"Returns": [["@B_android#util#Size_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Size of the image, without scaling or cropping.", "history": "Added in API level 28", "FullName": "public Size getSize ()"}, "getColorSpace()": {"Returns": [["@B_android#graphics#ColorSpace_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "If known, the color space the decoded bitmap will have. Note that the output color space is not guaranteed to be the color space the bitmap is encoded with. If not known (when the config is @B_android#graphics#Bitmap#Config#ALPHA_8_E@ for instance), or there is an error, it is set to null.", "history": "Added in API level 28", "FullName": "public ColorSpace getColorSpace ()"}}, "Inheritance": [], "ClassName": "android.graphics.ImageDecoder.ImageInfo", "ClassDesc": "Information about an encoded image."}