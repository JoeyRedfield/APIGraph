{"Functions": {"commit()": {"Returns": [["boolean", "Returns true if the new values were successfully written to persistent storage."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Commit your preferences changes back from this Editor to the @B_android#content#SharedPreferences_E@ object it is editing. This atomically performs the requested modifications, replacing whatever is currently in the SharedPreferences. Note that when two editors are modifying preferences at the same time, the last one to call commit wins. If you don't care about the return value and you're using this from your application's main thread, consider using @B_android#content#SharedPreferences#Editor#apply_E@ instead.", "history": "Added in API level 1", "FullName": "public abstract boolean commit ()"}, "putLong(java.lang.String, long)": {"Returns": [["@B_android#content#SharedPreferences#Editor_E@", "Returns a reference to the same Editor object, so you can chain put calls together."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to modify."], ["long", "long: The new value for the preference."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a long value in the preferences editor, to be written back once @B_android#content#SharedPreferences#Editor#commit_E@ or @B_android#content#SharedPreferences#Editor#apply_E@ are called.", "history": "added in API level 1", "FullName": "public abstract SharedPreferences.Editor putLong (String key, long value)"}, "clear()": {"Returns": [["@B_android#content#SharedPreferences#Editor_E@", "Returns a reference to the same Editor object, so you can chain put calls together."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Mark in the editor to remove all values from the preferences. Once commit is called, the only remaining preferences will be any that you have defined in this editor. Note that when committing back to the preferences, the clear is done first, regardless of whether you called clear before or after put methods on this editor.", "history": "Added in API level 1", "FullName": "public abstract SharedPreferences.Editor clear ()"}, "putStringSet(java.lang.String,java.util.Set<java.lang.String>)": {"Returns": [["@B_android#content#SharedPreferences#Editor_E@", "Returns a reference to the same Editor object, so you can chain put calls together."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to modify."], ["@B_java#util#Set_E@", "Set: The set of new values for the preference. Passing null for this argument is equivalent to calling @B_android#content#SharedPreferences#Editor#remove_E@ with this key. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a set of String values in the preferences editor, to be written back once @B_android#content#SharedPreferences#Editor#commit_E@ or @B_android#content#SharedPreferences#Editor#apply_E@ is called.", "history": "Added in API level 11", "FullName": "public abstract SharedPreferences.Editor putStringSet (String key, Set<String> values)"}, "apply()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Commit your preferences changes back from this Editor to the @B_android#content#SharedPreferences_E@ object it is editing. This atomically performs the requested modifications, replacing whatever is currently in the SharedPreferences. Note that when two editors are modifying preferences at the same time, the last one to call apply wins. Unlike @B_android#content#SharedPreferences#Editor#commit_E@, which writes its preferences out to persistent storage synchronously, @B_android#content#SharedPreferences#Editor#apply_E@ commits its changes to the in-memory @B_android#content#SharedPreferences_E@ immediately but starts an asynchronous commit to disk and you won't be notified of any failures. If another editor on this @B_android#content#SharedPreferences_E@ does a regular @B_android#content#SharedPreferences#Editor#commit_E@ while a @B_android#content#SharedPreferences#Editor#apply_E@ is still outstanding, the @B_android#content#SharedPreferences#Editor#commit_E@ will block until all async commits are completed as well as the commit itself. As @B_android#content#SharedPreferences_E@ instances are singletons within a process, it's safe to replace any instance of @B_android#content#SharedPreferences#Editor#commit_E@ with @B_android#content#SharedPreferences#Editor#apply_E@ if you were already ignoring the return value. You don't need to worry about Android component lifecycles and their interaction with apply() writing to disk. The framework makes sure in-flight disk writes from apply() complete before switching states. The SharedPreferences.Editor interface isn't expected to be implemented directly. However, if you previously did implement it and are now getting errors about missing apply(), you can simply call @B_android#content#SharedPreferences#Editor#commit_E@ from apply().", "history": "Added in API level 9", "FullName": "public abstract void apply ()"}, "remove(java.lang.String)": {"Returns": [["@B_android#content#SharedPreferences#Editor_E@", "Returns a reference to the same Editor object, so you can chain put calls together."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to remove."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Mark in the editor that a preference value should be removed, which will be done in the actual preferences once @B_android#content#SharedPreferences#Editor#commit_E@ is called. Note that when committing back to the preferences, all removals are done first, regardless of whether you called remove before or after put methods on this editor.", "history": "Added in API level 1", "FullName": "public abstract SharedPreferences.Editor remove (String key)"}, "putBoolean(java.lang.String,boolean)": {"Returns": [["@B_android#content#SharedPreferences#Editor_E@", "Returns a reference to the same Editor object, so you can chain put calls together."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to modify."], ["boolean", "boolean: The new value for the preference."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a boolean value in the preferences editor, to be written back once @B_android#content#SharedPreferences#Editor#commit_E@ or @B_android#content#SharedPreferences#Editor#apply_E@ are called.", "history": "Added in API level 1", "FullName": "public abstract SharedPreferences.Editor putBoolean (String key, boolean value)"}, "putInt(java.lang.String, int)": {"Returns": [["@B_android#content#SharedPreferences#Editor_E@", "Returns a reference to the same Editor object, so you can chain put calls together."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to modify."], ["int", "int: The new value for the preference."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set an int value in the preferences editor, to be written back once @B_android#content#SharedPreferences#Editor#commit_E@ or @B_android#content#SharedPreferences#Editor#apply_E@ are called.", "history": "added in API level 1", "FullName": "public abstract SharedPreferences.Editor putInt (String key, int value)"}, "putInt(java.lang.String,int)": {"Returns": [["@B_android#content#SharedPreferences#Editor_E@", "Returns a reference to the same Editor object, so you can chain put calls together."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to modify."], ["int", "int: The new value for the preference."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set an int value in the preferences editor, to be written back once @B_android#content#SharedPreferences#Editor#commit_E@ or @B_android#content#SharedPreferences#Editor#apply_E@ are called.", "history": "Added in API level 1", "FullName": "public abstract SharedPreferences.Editor putInt (String key, int value)"}, "putString(java.lang.String, java.lang.String)": {"Returns": [["@B_android#content#SharedPreferences#Editor_E@", "Returns a reference to the same Editor object, so you can chain put calls together."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to modify."], ["@B_java#lang#String_E@", "String: The new value for the preference. Passing null for this argument is equivalent to calling @B_android#content#SharedPreferences#Editor#remove_E@ with this key."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a String value in the preferences editor, to be written back once @B_android#content#SharedPreferences#Editor#commit_E@ or @B_android#content#SharedPreferences#Editor#apply_E@ are called.", "history": "added in API level 1", "FullName": "public abstract SharedPreferences.Editor putString (String key, String value)"}, "putLong(java.lang.String,long)": {"Returns": [["@B_android#content#SharedPreferences#Editor_E@", "Returns a reference to the same Editor object, so you can chain put calls together."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to modify."], ["long", "long: The new value for the preference."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a long value in the preferences editor, to be written back once @B_android#content#SharedPreferences#Editor#commit_E@ or @B_android#content#SharedPreferences#Editor#apply_E@ are called.", "history": "Added in API level 1", "FullName": "public abstract SharedPreferences.Editor putLong (String key, long value)"}, "putBoolean(java.lang.String, boolean)": {"Returns": [["@B_android#content#SharedPreferences#Editor_E@", "Returns a reference to the same Editor object, so you can chain put calls together."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to modify."], ["boolean", "boolean: The new value for the preference."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a boolean value in the preferences editor, to be written back once @B_android#content#SharedPreferences#Editor#commit_E@ or @B_android#content#SharedPreferences#Editor#apply_E@ are called.", "history": "added in API level 1", "FullName": "public abstract SharedPreferences.Editor putBoolean (String key, boolean value)"}, "putString(java.lang.String,java.lang.String)": {"Returns": [["@B_android#content#SharedPreferences#Editor_E@", "Returns a reference to the same Editor object, so you can chain put calls together."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to modify."], ["@B_java#lang#String_E@", "String: The new value for the preference. Passing null for this argument is equivalent to calling @B_android#content#SharedPreferences#Editor#remove_E@ with this key. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a String value in the preferences editor, to be written back once @B_android#content#SharedPreferences#Editor#commit_E@ or @B_android#content#SharedPreferences#Editor#apply_E@ are called.", "history": "Added in API level 1", "FullName": "public abstract SharedPreferences.Editor putString (String key, String value)"}, "putFloat(java.lang.String,float)": {"Returns": [["@B_android#content#SharedPreferences#Editor_E@", "Returns a reference to the same Editor object, so you can chain put calls together."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to modify."], ["float", "float: The new value for the preference."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a float value in the preferences editor, to be written back once @B_android#content#SharedPreferences#Editor#commit_E@ or @B_android#content#SharedPreferences#Editor#apply_E@ are called.", "history": "Added in API level 1", "FullName": "public abstract SharedPreferences.Editor putFloat (String key, float value)"}, "putFloat(java.lang.String, float)": {"Returns": [["@B_android#content#SharedPreferences#Editor_E@", "Returns a reference to the same Editor object, so you can chain put calls together."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to modify."], ["float", "float: The new value for the preference."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a float value in the preferences editor, to be written back once @B_android#content#SharedPreferences#Editor#commit_E@ or @B_android#content#SharedPreferences#Editor#apply_E@ are called.", "history": "added in API level 1", "FullName": "public abstract SharedPreferences.Editor putFloat (String key, float value)"}}, "Inheritance": [], "ClassName": "android.content.SharedPreferences.Editor", "ClassDesc": "Interface used for modifying values in a @B_android#content#SharedPreferences_E@ object. All changes you make in an editor are batched, and not copied back to the original @B_android#content#SharedPreferences_E@ until you call @B_android#content#SharedPreferences#Editor#commit_E@ or @B_android#content#SharedPreferences#Editor#apply_E@"}