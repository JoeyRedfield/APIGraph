{"Functions": {"setTag(java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: an arbitrary Object to store with this request This value may be null."]], "Throws": [], "SeeAlso": ["@B_android#hardware#camera2#CaptureRequest#getTag_E@"], "Permissions": [], "Description": "Set a tag for this request. This tag is not used for anything by the camera device, but can be used by an application to easily identify a CaptureRequest when it is returned by @B_android#hardware#camera2#CameraCaptureSession#CaptureCallback#onCaptureCompleted_E@", "history": "Added in API level 21", "FullName": "public void setTag (Object tag)"}, "getPhysicalCameraKey(android.hardware.camera2.CaptureRequest.Key<T>,java.lang.String)": {"Returns": [["T", "The value of that key, or null if the field is not set."]], "Parameters": [["@B_android#hardware#camera2#CaptureRequest#Key_E@", "Key: The metadata field to read."], ["@B_java#lang#String_E@", "String: A valid physical camera Id. The valid camera Ids can be obtained via calls to @B_android#hardware#camera2#CameraCharacteristics#getPhysicalCameraIds_E@. This value must never be null."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the key or physical camera id were not valid"]], "SeeAlso": [], "Permissions": [], "Description": "Get a capture request field value for a specific physical camera Id. The field definitions can be found in @B_android#hardware#camera2#CaptureRequest_E@.This method can be called for logical camera devices, which are devices that have REQUEST_AVAILABLE_CAPABILITIES_LOGICAL_MULTI_CAMERA capability and calls to @B_android#hardware#camera2#CameraCharacteristics#getPhysicalCameraIds_E@ return a non-empty list of physical devices that are backing the logical camera. The camera Id included in the 'physicalCameraId' argument selects an individual physical device and returns its specific capture request field.", "history": "Added in API level 28", "FullName": "public T getPhysicalCameraKey (Key<T> key, String physicalCameraId)"}, "get(android.hardware.camera2.CaptureRequest.Key<T>)": {"Returns": [["T", "The value of that key, or null if the field is not set."]], "Parameters": [["@B_android#hardware#camera2#CaptureRequest#Key_E@", "Key: The metadata field to read."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the key was not valid"]], "SeeAlso": [], "Permissions": [], "Description": "Get a capture request field value. The field definitions can be found in @B_android#hardware#camera2#CaptureRequest_E@.", "history": "Added in API level 21", "FullName": "public T get (Key<T> key)"}, "setPhysicalCameraKey(android.hardware.camera2.CaptureRequest.Key<T>,T,java.lang.String)": {"Returns": [["@B_android#hardware#camera2#CaptureRequest#Builder_E@", "The builder object. type to the key."]], "Parameters": [["@B_android#hardware#camera2#CaptureRequest#Key_E@", "Key: The metadata field to write. This value must never be null."], ["T", "T: The value to set the field to, which must be of a matching"], ["@B_java#lang#String_E@", "String: A valid physical camera Id. The valid camera Ids can be obtained via calls to @B_android#hardware#camera2#CameraCharacteristics#getPhysicalCameraIds_E@. This value must never be null."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the physical camera id is not valid"]], "SeeAlso": [], "Permissions": [], "Description": "Set a capture request field to a value. The field definitions can be found in @B_android#hardware#camera2#CaptureRequest_E@. Setting a field to null will remove that field from the capture request. Unless the field is optional, removing it will likely produce an error from the camera device when the request is submitted.This method can be called for logical camera devices, which are devices that have REQUEST_AVAILABLE_CAPABILITIES_LOGICAL_MULTI_CAMERA capability and calls to @B_android#hardware#camera2#CameraCharacteristics#getPhysicalCameraIds_E@ return a non-empty set of physical devices that are backing the logical camera. The camera Id included in the 'physicalCameraId' argument selects an individual physical device that will receive the customized capture request field.", "history": "Added in API level 28", "FullName": "public CaptureRequest.Builder setPhysicalCameraKey (Key<T> key, T value, String physicalCameraId)"}, "addTarget(android.view.Surface)": {"Returns": [], "Parameters": [["@B_android#view#Surface_E@", "Surface: Surface to use as an output target for this request This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Add a surface to the list of targets for this request The Surface added must be one of the surfaces included in the most recent call to @B_android#hardware#camera2#CameraDevice#createCaptureSession_E@, when the request is given to the camera device. Adding a target more than once has no effect.", "history": "Added in API level 21", "FullName": "public void addTarget (Surface outputTarget)"}, "removeTarget(android.view.Surface)": {"Returns": [], "Parameters": [["@B_android#view#Surface_E@", "Surface: Surface to use as an output target for this request This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Remove a surface from the list of targets for this request. Removing a target that is not currently added has no effect.", "history": "Added in API level 21", "FullName": "public void removeTarget (Surface outputTarget)"}, "build()": {"Returns": [["@B_android#hardware#camera2#CaptureRequest_E@", "A new capture request instance, ready for submission to the camera device. This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Build a request using the current target Surfaces and settings. Note that, although it is possible to create a CaptureRequest with no target @B_android#view#Surface_E@s, passing such a request into @B_android#hardware#camera2#CameraCaptureSession#capture_E@, @B_android#hardware#camera2#CameraCaptureSession#captureBurst_E@, @B_android#hardware#camera2#CameraCaptureSession#setRepeatingBurst_E@, or @B_android#hardware#camera2#CameraCaptureSession#setRepeatingRequest_E@ will cause that method to throw an @B_java#lang#IllegalArgumentException_E@.", "history": "Added in API level 21", "FullName": "public CaptureRequest build ()"}, "set(android.hardware.camera2.CaptureRequest.Key<T>,T)": {"Returns": [], "Parameters": [["@B_android#hardware#camera2#CaptureRequest#Key_E@", "Key: The metadata field to write. This value must never be null."], ["T", "T: The value to set the field to, which must be of a matching type to the key."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a capture request field to a value. The field definitions can be found in @B_android#hardware#camera2#CaptureRequest_E@. Setting a field to null will remove that field from the capture request. Unless the field is optional, removing it will likely produce an error from the camera device when the request is submitted.", "history": "Added in API level 21", "FullName": "public void set (Key<T> key, T value)"}}, "Inheritance": [], "ClassName": "android.hardware.camera2.CaptureRequest.Builder", "ClassDesc": "A builder for capture requests. To obtain a builder instance, use the @B_android#hardware#camera2#CameraDevice#createCaptureRequest_E@ method, which initializes the request fields to one of the templates defined in @B_android#hardware#camera2#CameraDevice_E@."}