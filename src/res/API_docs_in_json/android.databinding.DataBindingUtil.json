{"Functions": {"findBinding(android.view.View)": {"Returns": [["T", "The ViewDataBinding associated with the given view or null if view is not part of a bound layout."]], "Parameters": [["@B_android#view#View_E@", "View: A View in the bound layout."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the binding responsible for the given View. If view is not a binding layout root, its parents will be searched for the binding. If there is no binding, null will be returned. This differs from @B_android#databinding#DataBindingUtil#getBinding_E@ in that findBinding takes any view in the layout and searches for the binding associated with the root. getBinding takes only the root view.", "history": "", "FullName": "T findBinding (View view)"}, "getDefaultComponent()": {"Returns": [["@B_android#databinding#DataBindingComponent_E@", "the default @B_android#databinding#DataBindingComponent_E@ used in data binding. This can be null if no default was set in @B_android#databinding#DataBindingUtil#setDefaultComponent_E@."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the default @B_android#databinding#DataBindingComponent_E@ used in data binding. This can be null if no default was set in @B_android#databinding#DataBindingUtil#setDefaultComponent_E@.", "history": "", "FullName": "DataBindingComponent getDefaultComponent ()"}, "getBinding(android.view.View)": {"Returns": [["T", "The ViewDataBinding associated with the given view or null if either the view is not a root View for a layout or view hasn't been bound."]], "Parameters": [["@B_android#view#View_E@", "View: The root View in the layout with binding."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the binding responsible for the given View layout root. If there is no binding, null will be returned. This uses the DataBindingComponent set in @B_android#databinding#DataBindingUtil#setDefaultComponent_E@.", "history": "", "FullName": "T getBinding (View view)"}, "setContentView(android.app.Activity, int)": {"Returns": [["T", "The binding associated with the inflated content view."]], "Parameters": [["@B_android#app#Activity_E@", "Activity: The Activity whose content View should change."], ["int", "int: The resource ID of the layout to be inflated, bound, and set as the Activity's content."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the Activity's content view to the given layout and return the associated binding. The given layout resource must not be a merge layout.", "history": "", "FullName": "T setContentView (Activity activity, int layoutId)"}, "bind(android.view.View)": {"Returns": [["T", "A ViewDataBinding for the given root View. If one already exists, the existing one will be returned."]], "Parameters": [["@B_android#view#View_E@", "View: The root View of the inflated binding layout."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "when root is not from an inflated binding layout."]], "SeeAlso": ["@B_android#databinding#DataBindingUtil#getBinding_E@"], "Permissions": [], "Description": "Returns the binding for the given layout root or creates a binding if one does not exist. This uses the DataBindingComponent set in @B_android#databinding#DataBindingUtil#setDefaultComponent_E@. Prefer using the generated Binding's bind method to ensure type-safe inflation when it is known that root has not yet been bound.", "history": "", "FullName": "T bind (View root)"}, "convertBrIdToString(int)": {"Returns": [["@B_java#lang#String_E@", "The name if the BR id or null if id is out of bounds."]], "Parameters": [["int", "int: The integer id, which should be a field from BR class."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Converts the given BR id to its string representation which might be useful for logging purposes.", "history": "", "FullName": "String convertBrIdToString (int id)"}}, "Inheritance": ["http:##developer#android#com@B_java#lang#Object_E@"], "ClassName": "android.databinding.DataBindingUtil", "ClassDesc": "Utility class to create @B_android#databinding#ViewDataBinding_E@ from layouts."}