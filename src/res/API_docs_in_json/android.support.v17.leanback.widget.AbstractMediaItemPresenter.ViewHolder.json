{"Functions": {"getMediaItemPausedView()": {"Returns": [["@B_android#view#View_E@", "The view rendered when the media item row is paused."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 24.2.0", "FullName": "View getMediaItemPausedView ()"}, "getMediaItemPlayingView()": {"Returns": [["@B_android#view#View_E@", "The view rendered when the media item row is playing."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 24.2.0", "FullName": "View getMediaItemPlayingView ()"}, "notifyDetailsChanged()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies the content of the media item details in a row has changed and triggers updating the UI. This causes @B_android#support#v17#leanback#widget#AbstractMediaItemPresenter#onBindMediaDetails_E@ on the user's provided presenter to be called back, allowing them to update UI accordingly.", "history": "added in version 24.0.0", "FullName": "void notifyDetailsChanged ()"}, "getMediaItemDetailsView()": {"Returns": [["@B_android#view#View_E@", "The view container of media item details"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 24.0.0", "FullName": "View getMediaItemDetailsView ()"}, "onBindRowActions()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Binds the actions in a media item row object to their views. This consists of creating (or reusing the existing) action view holders, and populating them with the actions' icons.", "history": "added in version 24.0.0", "FullName": "void onBindRowActions ()"}, "getMediaItemNumberViewFlipper()": {"Returns": [["@B_android#widget#ViewFlipper_E@", "The FlipperView responsible for flipping between different media item number views depending on the playback state"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 24.2.0", "FullName": "ViewFlipper getMediaItemNumberViewFlipper ()"}, "getMediaItemDurationView()": {"Returns": [["@B_android#widget#TextView_E@", "The TextView responsible for rendering the media item duration"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 24.0.0", "FullName": "TextView getMediaItemDurationView ()"}, "getMediaItemActionsContainer()": {"Returns": [["@B_android#view#ViewGroup_E@", "The view containing the set of custom actions"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 24.0.0", "FullName": "ViewGroup getMediaItemActionsContainer ()"}, "getMediaItemRowActions()": {"Returns": [["@B_android#support#v17#leanback#widget#MultiActionsProvider#MultiAction_E@", "Array of MultiActions displayed for this media item row"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 24.0.0", "FullName": "MultiAction[] getMediaItemRowActions ()"}, "notifyPlayStateChanged()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies the playback state of the media item row has changed. This in turn triggers updating of the UI for that media item row if corresponding views are specified for each playback state. By default, 3 views are provided for each playback state, or these views can be provided by the user.", "history": "added in version 24.2.0", "FullName": "void notifyPlayStateChanged ()"}, "getSelectorView()": {"Returns": [["@B_android#view#View_E@", "The SelectorView responsible for highlighting the in-focus view within each media item row"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 24.0.0", "FullName": "View getSelectorView ()"}, "getMediaItemRowSeparator()": {"Returns": [["@B_android#view#View_E@", "The view responsible for rendering the separator line between media rows"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 24.0.0", "FullName": "View getMediaItemRowSeparator ()"}, "getMediaItemNameView()": {"Returns": [["@B_android#widget#TextView_E@", "The TextView responsible for rendering the media item name."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the view displayed when the media item is neither playing nor paused, corresponding to the playback state of PLAY_STATE_INITIAL.", "history": "added in version 24.0.0", "FullName": "TextView getMediaItemNameView ()"}, "getMediaItemNumberView()": {"Returns": [["@B_android#widget#TextView_E@", "The TextView responsible for rendering the media item number. This view is rendered when the media item row is neither playing nor paused."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 24.0.0", "FullName": "TextView getMediaItemNumberView ()"}, "setSelectedMediaItemNumberView(int)": {"Returns": [], "Parameters": [["int", "int: The index of the child view to display."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flips to the view at index 'position'. This position corresponds to the index of a particular view within the ViewFlipper layout specified for the MediaItemNumberView (see playbackMediaItemNumberViewFlipperLayout attribute).", "history": "added in version 24.2.0", "FullName": "void setSelectedMediaItemNumberView (int position)"}}, "Inheritance": ["java.lang.Object", "@B_android#support#v17#leanback#widget#Presenter#ViewHolder_E@", "@B_android#support#v17#leanback#widget#RowPresenter#ViewHolder_E@"], "ClassName": "android.support.v17.leanback.widget.AbstractMediaItemPresenter.ViewHolder", "ClassDesc": "The ViewHolder for the @B_android#support#v17#leanback#widget#AbstractMediaItemPresenter_E@. It references different views that place different meta-data corresponding to a media item details, actions, selector, listeners, and presenters,"}