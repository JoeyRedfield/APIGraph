{"Functions": {"finish()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#util#zip#ZipException_E@", "if a ZIP file error has occurred"], ["@B_java#io#IOException_E@", "if an I/O exception has occurred"]], "SeeAlso": [], "Permissions": [], "Description": "Finishes writing the contents of the ZIP output stream without closing the underlying stream. Use this method when applying multiple filters in succession to the same output stream.", "history": "Added in API level 1", "FullName": "public void finish ()"}, "putNextEntry(java.util.zip.ZipEntry)": {"Returns": [], "Parameters": [["@B_java#util#zip#ZipEntry_E@", "ZipEntry: the ZIP entry to be written"]], "Throws": [["@B_java#util#zip#ZipException_E@", "if a ZIP format error has occurred"], ["@B_java#io#IOException_E@", "if an I/O error has occurred"]], "SeeAlso": [], "Permissions": [], "Description": "Begins writing a new ZIP file entry and positions the stream to the start of the entry data. Closes the current entry if still active. The default compression method will be used if no compression method was specified for the entry, and the current time will be used if the entry has no set modification time.", "history": "Added in API level 1", "FullName": "public void putNextEntry (ZipEntry e)"}, "ZipOutputStream(java.io.OutputStream)": {"Returns": [], "Parameters": [["@B_java#io#OutputStream_E@", "OutputStream: the actual output stream"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new ZIP output stream. The UTF-8 @B_java#nio#charset#Charset_E@ is used to encode the entry names and comments.", "history": "Added in API level 1", "FullName": "public ZipOutputStream (OutputStream out)"}, "write(byte[], int, int)": {"Returns": [], "Parameters": [["byte[]", "byte: the data to be written"], ["int", "int: the start offset in the data"], ["int", "int: the number of bytes that are written"]], "Throws": [["@B_java#util#zip#ZipException_E@", "if a ZIP file error has occurred"], ["@B_java#io#IOException_E@", "if an I/O error has occurred"]], "SeeAlso": [], "Permissions": [], "Description": "Writes an array of bytes to the current ZIP entry data. This method will block until all the bytes are written.", "history": "added in API level 1", "FullName": "public void write (byte[] b, int off, int len)"}, "ZipOutputStream(java.io.OutputStream,java.nio.charset.Charset)": {"Returns": [], "Parameters": [["@B_java#io#OutputStream_E@", "OutputStream: the actual output stream"], ["@B_java#nio#charset#Charset_E@", "Charset: the charset to be used to encode the entry names and comments"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new ZIP output stream.", "history": "Added in API level 24", "FullName": "public ZipOutputStream (OutputStream out, Charset charset)"}, "close()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#util#zip#ZipException_E@", "if a ZIP file error has occurred"], ["@B_java#io#IOException_E@", "if an I/O error has occurred"]], "SeeAlso": [], "Permissions": [], "Description": "Closes the ZIP output stream as well as the stream being filtered.", "history": "Added in API level 1", "FullName": "public void close ()"}, "setLevel(int)": {"Returns": [], "Parameters": [["int", "int: the compression level (0-9)"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the compression level is invalid"]], "SeeAlso": [], "Permissions": [], "Description": "Sets the compression level for subsequent entries which are DEFLATED. The default setting is DEFAULT_COMPRESSION.", "history": "Added in API level 1", "FullName": "public void setLevel (int level)"}, "write(byte[],int,int)": {"Returns": [], "Parameters": [["byte[]", "byte: the data to be written"], ["int", "int: the start offset in the data"], ["int", "int: the number of bytes that are written"]], "Throws": [["@B_java#util#zip#ZipException_E@", "if a ZIP file error has occurred"], ["@B_java#io#IOException_E@", "if an I/O error has occurred"]], "SeeAlso": [], "Permissions": [], "Description": "Writes an array of bytes to the current ZIP entry data. This method will block until all the bytes are written.", "history": "Added in API level 1", "FullName": "public void write (byte[] b, int off, int len)"}, "setMethod(int)": {"Returns": [], "Parameters": [["int", "int: the default compression method"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the specified compression method is invalid"]], "SeeAlso": [], "Permissions": [], "Description": "Sets the default compression method for subsequent entries. This default will be used whenever the compression method is not specified for an individual ZIP file entry, and is initially set to DEFLATED.", "history": "Added in API level 1", "FullName": "public void setMethod (int method)"}, "setComment(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the comment string"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the length of the specified ZIP file comment is greater than 0xFFFF bytes"]], "SeeAlso": [], "Permissions": [], "Description": "Sets the ZIP file comment.", "history": "Added in API level 1", "FullName": "public void setComment (String comment)"}, "closeEntry()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#util#zip#ZipException_E@", "if a ZIP format error has occurred"], ["@B_java#io#IOException_E@", "if an I/O error has occurred"]], "SeeAlso": [], "Permissions": [], "Description": "Closes the current ZIP entry and positions the stream for writing the next entry.", "history": "Added in API level 1", "FullName": "public void closeEntry ()"}}, "Inheritance": ["@B_java#io#OutputStream_E@", "@B_java#io#FilterOutputStream_E@", "@B_java#util#zip#DeflaterOutputStream_E@"], "ClassName": "java.util.zip.ZipOutputStream", "ClassDesc": "This class implements an output stream filter for writing files in the ZIP file format. Includes support for both compressed and uncompressed entries."}