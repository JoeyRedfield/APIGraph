{"Functions": {"setEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Change the enabled state of the session. This only works if the session has not been revoked.", "history": "Added in API level 3", "FullName": "public void setEnabled (boolean enabled)"}, "revokeSelf()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Revoke the session from the client. This disabled the session, and prevents it from ever being enabled again.", "history": "Added in API level 3", "FullName": "public void revokeSelf ()"}, "dispatchGenericMotionEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession.EventCallback)": {"Returns": [["void", "Whether the input method wants to handle this event."]], "Parameters": [["int", "int no parameter comment"], ["@B_android#view#MotionEvent_E@", "MotionEvent: The motion event."], ["@B_android#view#inputmethod#InputMethodSession#EventCallback_E@", "InputMethodSession.EventCallback no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Take care of dispatching incoming generic motion events to the appropriate callbacks on the service, and tell the client when this is done.", "history": "Added in API level 17", "FullName": "public void dispatchGenericMotionEvent (int seq, MotionEvent event, InputMethodSession.EventCallback callback)"}, "dispatchKeyEvent(int,android.view.KeyEvent,android.view.inputmethod.InputMethodSession.EventCallback)": {"Returns": [["void", "Whether the input method wants to handle this event."]], "Parameters": [["int", "int no parameter comment"], ["@B_android#view#KeyEvent_E@", "KeyEvent: The key event."], ["@B_android#view#inputmethod#InputMethodSession#EventCallback_E@", "InputMethodSession.EventCallback no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Take care of dispatching incoming key events to the appropriate callbacks on the service, and tell the client when this is done.", "history": "Added in API level 3", "FullName": "public void dispatchKeyEvent (int seq, KeyEvent event, InputMethodSession.EventCallback callback)"}, "isRevoked()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check whether this session has been revoked by the system. Revoked session is also always disabled, so there is generally no need to explicitly check for this.", "history": "Added in API level 3", "FullName": "public boolean isRevoked ()"}, "isEnabled()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check whether this session has been enabled by the system. If not enabled, you should not execute any calls on to it.", "history": "Added in API level 3", "FullName": "public boolean isEnabled ()"}, "dispatchTrackballEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession.EventCallback)": {"Returns": [["void", "Whether the input method wants to handle this event."]], "Parameters": [["int", "int no parameter comment"], ["@B_android#view#MotionEvent_E@", "MotionEvent: The motion event."], ["@B_android#view#inputmethod#InputMethodSession#EventCallback_E@", "InputMethodSession.EventCallback no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Take care of dispatching incoming trackball events to the appropriate callbacks on the service, and tell the client when this is done.", "history": "Added in API level 3", "FullName": "public void dispatchTrackballEvent (int seq, MotionEvent event, InputMethodSession.EventCallback callback)"}}, "Inheritance": [], "ClassName": "android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl", "ClassDesc": "Base class for derived classes to implement their @B_android#view#inputmethod#InputMethodSession_E@ interface. This takes care of basic maintenance of the session, but most behavior must be implemented in a derived class."}