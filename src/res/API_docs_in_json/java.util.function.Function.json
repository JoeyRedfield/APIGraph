{"Functions": {"andThen(java.util.function.Function<?superR,?extendsV>)": {"Returns": [["@B_java#util#function#Function_E@", "a composed function that first applies this function and then applies the after function"]], "Parameters": [["@B_java#util#function#Function_E@", "Function: the function to apply after this function is applied"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if after is null"]], "SeeAlso": ["@B_java#util#function#Function#compose_E@"], "Permissions": [], "Description": "Returns a composed function that first applies this function to its input, and then applies the after function to the result. If evaluation of either function throws an exception, it is relayed to the caller of the composed function.", "history": "Added in API level 24", "FullName": "public Function<T, V> andThen (Function<? super R, ? extends V> after)"}, "compose(java.util.function.Function<?superV,?extendsT>)": {"Returns": [["@B_java#util#function#Function_E@", "a composed function that first applies the before function and then applies this function"]], "Parameters": [["@B_java#util#function#Function_E@", "Function: the function to apply before this function is applied"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if before is null"]], "SeeAlso": ["@B_java#util#function#Function#andThen_E@"], "Permissions": [], "Description": "Returns a composed function that first applies the before function to its input, and then applies this function to the result. If evaluation of either function throws an exception, it is relayed to the caller of the composed function.", "history": "Added in API level 24", "FullName": "public Function<V, R> compose (Function<? super V, ? extends T> before)"}, "identity()": {"Returns": [["@B_java#util#function#Function_E@", "a function that always returns its input argument"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a function that always returns its input argument.", "history": "Added in API level 24", "FullName": "public static Function<T, T> identity ()"}, "apply(T)": {"Returns": [["R", "the function result"]], "Parameters": [["T", "T: the function argument"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Applies this function to the given argument.", "history": "Added in API level 24", "FullName": "public abstract R apply (T t)"}}, "Inheritance": [], "ClassName": "java.util.function.Function<T, R>", "ClassDesc": "Represents a function that accepts one argument and produces a result. This is a @B_java#util#function#Function#apply_E@."}