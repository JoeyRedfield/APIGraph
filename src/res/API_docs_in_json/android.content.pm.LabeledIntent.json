{"Functions": {"getNonLocalizedLabel()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return any concrete text that has been given for the label text.", "history": "Added in API level 5", "FullName": "public CharSequence getNonLocalizedLabel ()"}, "loadLabel(android.content.pm.PackageManager)": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [["@B_android#content#pm#PackageManager_E@", "PackageManager no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the label associated with this object. If the object does not have a label, null will be returned, in which case you will probably want to load the label from the underlying resolved info for the Intent.", "history": "Added in API level 5", "FullName": "public CharSequence loadLabel (PackageManager pm)"}, "getLabelResource()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return any resource identifier that has been given for the label text.", "history": "Added in API level 5", "FullName": "public int getLabelResource ()"}, "LabeledIntent(java.lang.String,java.lang.CharSequence,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The package in which the label and icon live."], ["@B_java#lang#CharSequence_E@", "CharSequence: Concrete text to use for the label."], ["int", "int: Resource containing the icon, or 0 if none."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a labeled intent with no intent data but supplying a textual label and icon resource for it.", "history": "Added in API level 5", "FullName": "public LabeledIntent (String sourcePackage, CharSequence nonLocalizedLabel, int icon)"}, "readFromParcel(android.os.Parcel)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 5", "FullName": "public void readFromParcel (Parcel in)"}, "getIconResource()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return any resource identifier that has been given for the label icon.", "history": "Added in API level 5", "FullName": "public int getIconResource ()"}, "LabeledIntent(java.lang.String,int,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The package in which the label and icon live."], ["int", "int: Resource containing the label, or 0 if none."], ["int", "int: Resource containing the icon, or 0 if none."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a labeled intent with no intent data but supplying the label and icon resources for it.", "history": "Added in API level 5", "FullName": "public LabeledIntent (String sourcePackage, int labelRes, int icon)"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 5", "FullName": "public void writeToParcel (Parcel dest, int parcelableFlags)"}, "loadIcon(android.content.pm.PackageManager)": {"Returns": [["@B_android#graphics#drawable#Drawable_E@", "no returns description in source"]], "Parameters": [["@B_android#content#pm#PackageManager_E@", "PackageManager no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the icon associated with this object. If the object does not have a icon, null will be returned, in which case you will probably want to load the icon from the underlying resolved info for the Intent.", "history": "Added in API level 5", "FullName": "public Drawable loadIcon (PackageManager pm)"}, "LabeledIntent(java.lang.String, int, int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The package in which the label and icon live."], ["int", "int: Resource containing the label, or 0 if none."], ["int", "int: Resource containing the icon, or 0 if none."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a labeled intent with no intent data but supplying the label and icon resources for it.", "history": "added in API level 5", "FullName": "public LabeledIntent (String sourcePackage, int labelRes, int icon)"}, "getSourcePackage()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the name of the package holding label and icon resources.", "history": "Added in API level 5", "FullName": "public String getSourcePackage ()"}, "LabeledIntent(android.content.Intent,java.lang.String,java.lang.CharSequence,int)": {"Returns": [], "Parameters": [["@B_android#content#Intent_E@", "Intent: The original Intent to copy."], ["@B_java#lang#String_E@", "String: The package in which the label and icon live."], ["@B_java#lang#CharSequence_E@", "CharSequence: Concrete text to use for the label."], ["int", "int: Resource containing the icon, or 0 if none."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a labeled intent from the given intent, supplying a textual label and icon resource for it.", "history": "Added in API level 5", "FullName": "public LabeledIntent (Intent origIntent, String sourcePackage, CharSequence nonLocalizedLabel, int icon)"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 5", "FullName": "public void writeToParcel (Parcel dest, int parcelableFlags)"}, "LabeledIntent(android.content.Intent,java.lang.String,int,int)": {"Returns": [], "Parameters": [["@B_android#content#Intent_E@", "Intent: The original Intent to copy."], ["@B_java#lang#String_E@", "String: The package in which the label and icon live."], ["int", "int: Resource containing the label, or 0 if none."], ["int", "int: Resource containing the icon, or 0 if none."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a labeled intent from the given intent, supplying the label and icon resources for it.", "history": "Added in API level 5", "FullName": "public LabeledIntent (Intent origIntent, String sourcePackage, int labelRes, int icon)"}}, "Inheritance": ["@B_android#content#Intent_E@"], "ClassName": "android.content.pm.LabeledIntent", "ClassDesc": "A special subclass of Intent that can have a custom label/icon associated with it. Primarily for use with @B_android#content#Intent#ACTION_CHOOSER_E@."}