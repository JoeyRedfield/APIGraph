{"Functions": {"startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: A search string can be pre-entered here, but this is typically null or empty."], ["boolean", "boolean: If true, the initial query will be preselected, which means that any further typing will replace it. This is useful for cases where an entire pre-formed query is being inserted. If false, the selection point will be placed at the end of the inserted query. This is useful when the inserted query is text that the user entered, and the user would expect to be able to keep typing. This parameter is only meaningful if initialQuery is a non-empty string."], ["@B_android#content#ComponentName_E@", "ComponentName: The ComponentName of the activity that has launched this search."], ["@B_android#os#Bundle_E@", "Bundle: An application can insert application-specific context here, in order to improve quality or specificity of its own searches. This data will be returned with SEARCH intent(s). Null if no extra data is required."], ["boolean", "boolean: If false, this will only launch the search that has been specifically defined by the application (which is usually defined as a local search). If no default search is defined in the current application or activity, global search will be launched. If true, this will always launch a platform-global (e.g. web-based) search instead."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Launch search UI. The search manager will open a search widget in an overlapping window, and the underlying activity may be obscured. The search entry state will remain in effect until one of the following events: The user completes the search. In most cases this will launch a search intent. The user uses the back, home, or other keys to exit the search. The application calls the @B_android#app#SearchManager#stopSearch_E@ method, which will hide the search window and return focus to the activity from which it was launched. Most applications will @B_android#app#Activity#onSearchRequested_E@ or @B_android#app#Activity#startSearch_E@.", "history": "Added in API level 1", "FullName": "public void startSearch (String initialQuery, boolean selectInitialQuery, ComponentName launchActivity, Bundle appSearchData, boolean globalSearch)"}, "getSearchableInfo(android.content.ComponentName)": {"Returns": [["@B_android#app#SearchableInfo_E@", "Searchable information, or null if the activity does not exist, or is not searchable."]], "Parameters": [["@B_android#content#ComponentName_E@", "ComponentName: The activity to get searchable information for."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets information about a searchable activity.", "history": "Added in API level 8", "FullName": "public SearchableInfo getSearchableInfo (ComponentName componentName)"}, "setOnDismissListener(android.app.SearchManager.OnDismissListener)": {"Returns": [], "Parameters": [["@B_android#app#SearchManager#OnDismissListener_E@", "SearchManager.OnDismissListener: The @B_android#app#SearchManager#OnDismissListener_E@ to use, or null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set or clear the callback that will be invoked whenever the search UI is dismissed. @B_android#content#res#Configuration#UI_MODE_TYPE_TELEVISION_E@ does not support this method.", "history": "Added in API level 1", "FullName": "public void setOnDismissListener (SearchManager.OnDismissListener listener)"}, "triggerSearch(java.lang.String,android.content.ComponentName,android.os.Bundle)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The query to trigger. If empty, request will be ignored."], ["@B_android#content#ComponentName_E@", "ComponentName: The ComponentName of the activity that has launched this search."], ["@B_android#os#Bundle_E@", "Bundle: An application can insert application-specific context here, in order to improve quality or specificity of its own searches. This data will be returned with SEARCH intent(s). Null if no extra data is required."]], "Throws": [], "SeeAlso": ["@B_android#app#SearchManager#startSearch_E@"], "Permissions": [], "Description": "Similar to @B_android#app#SearchManager#startSearch_E@ but actually fires off the search query after invoking the search dialog. Made available for testing purposes.", "history": "Added in API level 5", "FullName": "public void triggerSearch (String query, ComponentName launchActivity, Bundle appSearchData)"}, "onDismiss(android.content.DialogInterface)": {"Returns": [], "Parameters": [["@B_android#content#DialogInterface_E@", "DialogInterface: the dialog that was dismissed will be passed into the method"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method is an obsolete internal implementation detail. Do not use. This method will be invoked when the dialog is dismissed.", "history": "Added in API level 1", "FullName": "public void onDismiss (DialogInterface dialog)"}, "setOnCancelListener(android.app.SearchManager.OnCancelListener)": {"Returns": [], "Parameters": [["@B_android#app#SearchManager#OnCancelListener_E@", "SearchManager.OnCancelListener: The @B_android#app#SearchManager#OnCancelListener_E@ to use, or null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set or clear the callback that will be invoked whenever the search UI is canceled. @B_android#content#res#Configuration#UI_MODE_TYPE_TELEVISION_E@ does not support this method.", "history": "Added in API level 1", "FullName": "public void setOnCancelListener (SearchManager.OnCancelListener listener)"}, "getGlobalSearchActivity()": {"Returns": [["@B_android#content#ComponentName_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the name of the global search activity.", "history": "Added in API level 16", "FullName": "public ComponentName getGlobalSearchActivity ()"}, "stopSearch()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#app#SearchManager#startSearch_E@"], "Permissions": [], "Description": "Terminate search UI. Typically the user will terminate the search UI by launching a search or by canceling. This function allows the underlying application or activity to cancel the search prematurely (for any reason). This function can be safely called at any time (even if no search is active.) @B_android#content#res#Configuration#UI_MODE_TYPE_TELEVISION_E@ does not support this method.", "history": "Added in API level 1", "FullName": "public void stopSearch ()"}, "onCancel(android.content.DialogInterface)": {"Returns": [], "Parameters": [["@B_android#content#DialogInterface_E@", "DialogInterface: the dialog that was canceled will be passed into the method"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method is an obsolete internal implementation detail. Do not use. This method will be invoked when the dialog is canceled.", "history": "Added in API level 1", "FullName": "public void onCancel (DialogInterface dialog)"}, "getSearchablesInGlobalSearch()": {"Returns": [["@B_java#util#List_E@", "a list containing searchable information for all searchable activities that have the android:includeInGlobalSearch attribute set in their searchable meta-data."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a list of the searchable activities that can be included in global search.", "history": "Added in API level 8", "FullName": "public List<SearchableInfo> getSearchablesInGlobalSearch ()"}}, "Inheritance": [], "ClassName": "android.app.SearchManager", "ClassDesc": "This class provides access to the system search services. In practice, you won't interact with this class directly, as search services are provided through methods in @B_android#app#Activity_E@ and the @B_android#content#Intent#ACTION_SEARCH_E@ @B_android#content#Intent_E@. @B_android#content#res#Configuration#UI_MODE_TYPE_WATCH_E@ does not support this system service."}