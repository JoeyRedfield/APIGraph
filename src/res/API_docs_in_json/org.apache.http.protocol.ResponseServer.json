{"Functions": {"process(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)": {"Returns": [], "Parameters": [["@B_org#apache#http#HttpResponse_E@", "the response to postprocess"], ["@B_org#apache#http#protocol#HttpContext_E@", "the context for the request"]], "Throws": [["@B_org#apache#http#HttpException_E@", ""], ["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Processes a response. On the server side, this step is performed before the response is sent to the client. On the client side, this step is performed on incoming messages before the message body is evaluated.", "history": "Added in API level 1", "FullName": "public void process (HttpResponse response, HttpContext context)"}, "ResponseServer()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public ResponseServer ()"}}, "Inheritance": [], "ClassName": "org.apache.http.protocol.ResponseServer", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit A response interceptor that adds a Server header. For use on the server side."}