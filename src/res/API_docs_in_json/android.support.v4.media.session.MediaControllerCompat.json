{"Functions": {"isCaptioningEnabled()": {"Returns": [["boolean", "true if captioning is enabled, false if disabled or not set."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v4#media#session#MediaControllerCompat#isSessionReady_E@", "@B_android#support#v4#media#session#MediaControllerCompat#Callback#onSessionReady_E@"], "Permissions": [], "Description": "Returns whether captioning is enabled for this session. If the session is not ready, it will return a false.", "history": "added in version 25.4.0", "FullName": "public boolean isCaptioningEnabled ()"}, "getRepeatMode()": {"Returns": [["int", "The latest repeat mode set to the session, @B_android#support#v4#media#session#PlaybackStateCompat#REPEAT_MODE_NONE_E@ if not set, or @B_android#support#v4#media#session#PlaybackStateCompat#REPEAT_MODE_INVALID_E@ if the session is not ready yet."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v4#media#session#MediaControllerCompat#isSessionReady_E@", "@B_android#support#v4#media#session#MediaControllerCompat#Callback#onSessionReady_E@"], "Permissions": [], "Description": "Gets the repeat mode for this session.", "history": "added in version 26.0.0-alpha1", "FullName": "public int getRepeatMode ()"}, "getFlags()": {"Returns": [["long", "The current set of flags for the session."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the flags for this session. Flags are defined in @B_android#support#v4#media#session#MediaSessionCompat_E@.", "history": "added in version 22.1.0", "FullName": "public long getFlags ()"}, "registerCallback(android.support.v4.media.session.MediaControllerCompat.Callback,android.os.Handler)": {"Returns": [], "Parameters": [["@B_android#support#v4#media#session#MediaControllerCompat#Callback_E@", "MediaControllerCompat.Callback: The callback object, must not be null."], ["https:##developer#android#com@B_android#os#Handler_E@", "Handler: The handler to post updates on. If null the callers thread will be used."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds a callback to receive updates from the session. Updates will be posted on the specified handler's thread.", "history": "added in version 22.1.0", "FullName": "public void registerCallback (MediaControllerCompat.Callback callback, Handler handler)"}, "adjustVolume(int,int)": {"Returns": [], "Parameters": [["int", "int: The direction to adjust the volume in."], ["int", "int: Any flags to pass with the command."]], "Throws": [], "SeeAlso": ["@B_android#support#v4#media#session#MediaControllerCompat#getPlaybackInfo_E@"], "Permissions": [], "Description": "Adjusts the volume of the output this session is playing on. The direction must be one of https:##developer#android#com@B_android#media#AudioManager#ADJUST_LOWER_E@, https:##developer#android#com@B_android#media#AudioManager#ADJUST_RAISE_E@, or https:##developer#android#com@B_android#media#AudioManager#ADJUST_SAME_E@. The command will be ignored if the session does not support @B_androidx#media#VolumeProviderCompat#VOLUME_CONTROL_RELATIVE_E@ or @B_androidx#media#VolumeProviderCompat#VOLUME_CONTROL_ABSOLUTE_E@. The flags in https:##developer#android#com@B_android#media#AudioManager_E@ may be used to affect the handling.", "history": "added in version 22.1.0", "FullName": "public void adjustVolume (int direction, int flags)"}, "MediaControllerCompat(android.content.Context,android.support.v4.media.session.MediaSessionCompat.Token)": {"Returns": [], "Parameters": [["https:##developer#android#com@B_android#content#Context_E@", "Context no parameter comment"], ["@B_android#support#v4#media#session#MediaSessionCompat#Token_E@", "MediaSessionCompat.Token: The token of the session to be controlled."]], "Throws": [["https:##developer#android#com@B_android#os#RemoteException_E@", "if the session is not accessible."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a media controller from a session token which may have been obtained from another process.", "history": "added in version 22.1.0", "FullName": "public MediaControllerCompat (Context context, MediaSessionCompat.Token sessionToken)"}, "getSessionActivity()": {"Returns": [["https:##developer#android#com@B_android#app#PendingIntent_E@", "A https:##developer#android#com@B_android#app#PendingIntent_E@ to launch UI or null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets an intent for launching UI associated with this session if one exists.", "history": "added in version 22.1.0", "FullName": "public PendingIntent getSessionActivity ()"}, "isShuffleModeEnabled()": {"Returns": [["boolean", "true if the shuffle mode is enabled, false if disabled or not set."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#support#v4#media#session#MediaControllerCompat#getShuffleMode_E@ instead. Return whether the shuffle mode is enabled for this session.", "history": "added in version 25.3.0", "FullName": "boolean isShuffleModeEnabled ()"}, "getPlaybackInfo()": {"Returns": [["@B_android#support#v4#media#session#MediaControllerCompat#PlaybackInfo_E@", "The current playback info or null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the current playback info for this session.", "history": "added in version 22.1.0", "FullName": "public MediaControllerCompat.PlaybackInfo getPlaybackInfo ()"}, "registerCallback(android.support.v4.media.session.MediaControllerCompat.Callback)": {"Returns": [], "Parameters": [["@B_android#support#v4#media#session#MediaControllerCompat#Callback_E@", "MediaControllerCompat.Callback: The callback object, must not be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds a callback to receive updates from the Session. Updates will be posted on the caller's thread.", "history": "added in version 22.1.0", "FullName": "public void registerCallback (MediaControllerCompat.Callback callback)"}, "getExtras()": {"Returns": [["https:##developer#android#com@B_android#os#Bundle_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the extras for this session.", "history": "added in version 22.1.0", "FullName": "public Bundle getExtras ()"}, "getMediaController()": {"Returns": [["Object", "The underlying https:##developer#android#com@B_android#media#session#MediaController_E@ object, or null if none."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the underlying framework https:##developer#android#com@B_android#media#session#MediaController_E@ object. This method is only supported on API 21+.", "history": "added in version 22.1.0", "FullName": "public Object getMediaController ()"}, "setMediaController(android.app.Activity,android.support.v4.media.session.MediaControllerCompat)": {"Returns": [], "Parameters": [["https:##developer#android#com@B_android#app#Activity_E@", "Activity: The activity to set the mediaController in, must not be null."], ["@B_android#support#v4#media#session#MediaControllerCompat_E@", "MediaControllerCompat: The controller for the session which should receive media keys and volume changes on API 21 and later."]], "Throws": [], "SeeAlso": ["@B_android#support#v4#media#session#MediaControllerCompat#getMediaController_E@", "https:##developer#android#com@B_android#app#Activity#setMediaController_E@"], "Permissions": [], "Description": "Sets a @B_android#support#v4#media#session#MediaControllerCompat_E@ in the activity for later retrieval via @B_android#support#v4#media#session#MediaControllerCompat#getMediaController_E@. This is compatible with https:##developer#android#com@B_android#app#Activity#setMediaController_E@. If activity inherits @B_androidx#fragment#app#FragmentActivity_E@, the mediaController will be saved in the activity. In addition to that, on API 21 and later, https:##developer#android#com@B_android#app#Activity#setMediaController_E@ will be called.", "history": "added in version 26.0.0-alpha1", "FullName": "public static void setMediaController (Activity activity, MediaControllerCompat mediaController)"}, "getTransportControls()": {"Returns": [["@B_android#support#v4#media#session#MediaControllerCompat#TransportControls_E@", "A controls instance"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets a @B_android#support#v4#media#session#MediaControllerCompat#TransportControls_E@ instance for this session.", "history": "added in version 22.1.0", "FullName": "public MediaControllerCompat.TransportControls getTransportControls ()"}, "getQueue()": {"Returns": [["@B_android#support#v4#media#session#MediaSessionCompat#QueueItem_E@", "The current play queue or null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the current play queue for this session if one is set. If you only care about the current item @B_android#support#v4#media#session#MediaControllerCompat#getMetadata_E@ should be used.", "history": "added in version 22.1.0", "FullName": "public List<MediaSessionCompat.QueueItem> getQueue ()"}, "getPlaybackState()": {"Returns": [["@B_android#support#v4#media#session#PlaybackStateCompat_E@", "The current PlaybackState or null"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v4#media#session#MediaControllerCompat#isSessionReady_E@", "@B_android#support#v4#media#session#MediaControllerCompat#Callback#onSessionReady_E@"], "Permissions": [], "Description": "Gets the current playback state for this session. If the session is not ready, @B_android#support#v4#media#session#PlaybackStateCompat#getExtras_E@ on the result of this method may return null.", "history": "added in version 22.1.0", "FullName": "public PlaybackStateCompat getPlaybackState ()"}, "getShuffleMode()": {"Returns": [["int", "The latest shuffle mode set to the session, or @B_android#support#v4#media#session#PlaybackStateCompat#SHUFFLE_MODE_NONE_E@ if disabled or not set, or @B_android#support#v4#media#session#PlaybackStateCompat#SHUFFLE_MODE_INVALID_E@ if the session is not ready yet."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v4#media#session#MediaControllerCompat#isSessionReady_E@", "@B_android#support#v4#media#session#MediaControllerCompat#Callback#onSessionReady_E@"], "Permissions": [], "Description": "Gets the shuffle mode for this session.", "history": "added in version 26.1.0", "FullName": "public int getShuffleMode ()"}, "setVolumeTo(int,int)": {"Returns": [], "Parameters": [["int", "int: The value to set it to, between 0 and the reported max."], ["int", "int: Flags from https:##developer#android#com@B_android#media#AudioManager_E@ to include with the volume request."]], "Throws": [], "SeeAlso": ["@B_android#support#v4#media#session#MediaControllerCompat#getPlaybackInfo_E@"], "Permissions": [], "Description": "Sets the volume of the output this session is playing on. The command will be ignored if it does not support @B_androidx#media#VolumeProviderCompat#VOLUME_CONTROL_ABSOLUTE_E@. The flags in https:##developer#android#com@B_android#media#AudioManager_E@ may be used to affect the handling.", "history": "added in version 22.1.0", "FullName": "public void setVolumeTo (int value, int flags)"}, "addQueueItem(android.support.v4.media.MediaDescriptionCompat,int)": {"Returns": [], "Parameters": [["@B_android#support#v4#media#MediaDescriptionCompat_E@", "MediaDescriptionCompat: The @B_android#support#v4#media#MediaDescriptionCompat_E@ for creating the @B_android#support#v4#media#session#MediaSessionCompat#QueueItem_E@ to be inserted."], ["int", "int: The index at which the created @B_android#support#v4#media#session#MediaSessionCompat#QueueItem_E@ is to be inserted."]], "Throws": [["UnsupportedOperationException", "If this session doesn't support this."]], "SeeAlso": ["@B_android#support#v4#media#session#MediaControllerCompat#getFlags_E@", "@B_android#support#v4#media#session#MediaSessionCompat_E@"], "Permissions": [], "Description": "Adds a queue item from the given description at the specified position in the play queue of this session. Shifts the queue item currently at that position (if any) and any subsequent queue items to the right (adds one to their indices). Not all sessions may support this. To know whether the session supports this, get the session's flags with @B_android#support#v4#media#session#MediaControllerCompat#getFlags_E@ and check that the flag @B_android#support#v4#media#session#MediaSessionCompat#FLAG_HANDLES_QUEUE_COMMANDS_E@ is set.", "history": "added in version 25.4.0", "FullName": "public void addQueueItem (MediaDescriptionCompat description, int index)"}, "adjustVolume(int, int)": {"Returns": [], "Parameters": [["int", "int: The direction to adjust the volume in."], ["int", "int: Any flags to pass with the command."]], "Throws": [], "SeeAlso": ["@B_android#support#v4#media#session#MediaControllerCompat#getPlaybackInfo_E@"], "Permissions": [], "Description": "Adjust the volume of the output this session is playing on. The direction must be one of @B_android#media#AudioManager#ADJUST_LOWER_E@, @B_android#media#AudioManager#ADJUST_RAISE_E@, or @B_android#media#AudioManager#ADJUST_SAME_E@. The command will be ignored if the session does not support @B_android#support#v4#media#VolumeProviderCompat#VOLUME_CONTROL_RELATIVE_E@ or @B_android#support#v4#media#VolumeProviderCompat#VOLUME_CONTROL_ABSOLUTE_E@. The flags in @B_android#media#AudioManager_E@ may be used to affect the handling.", "history": "added in version 22.0.0", "FullName": "void adjustVolume (int direction, int flags)"}, "addQueueItem(android.support.v4.media.MediaDescriptionCompat)": {"Returns": [], "Parameters": [["@B_android#support#v4#media#MediaDescriptionCompat_E@", "MediaDescriptionCompat: The @B_android#support#v4#media#MediaDescriptionCompat_E@ for creating the @B_android#support#v4#media#session#MediaSessionCompat#QueueItem_E@ to be inserted."]], "Throws": [["UnsupportedOperationException", "If this session doesn't support this."]], "SeeAlso": ["@B_android#support#v4#media#session#MediaControllerCompat#getFlags_E@", "@B_android#support#v4#media#session#MediaSessionCompat_E@"], "Permissions": [], "Description": "Adds a queue item from the given description at the end of the play queue of this session. Not all sessions may support this. To know whether the session supports this, get the session's flags with @B_android#support#v4#media#session#MediaControllerCompat#getFlags_E@ and check that the flag @B_android#support#v4#media#session#MediaSessionCompat#FLAG_HANDLES_QUEUE_COMMANDS_E@ is set.", "history": "added in version 25.4.0", "FullName": "public void addQueueItem (MediaDescriptionCompat description)"}, "getQueueTitle()": {"Returns": [["CharSequence", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the queue title for this session.", "history": "added in version 22.1.0", "FullName": "public CharSequence getQueueTitle ()"}, "getSessionToken()": {"Returns": [["@B_android#support#v4#media#session#MediaSessionCompat#Token_E@", "The session's token."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the token for the session that this controller is connected to.", "history": "added in version 22.1.0", "FullName": "public MediaSessionCompat.Token getSessionToken ()"}, "removeQueueItemAt(int)": {"Returns": [], "Parameters": [["int", "int: The index of the element to be removed."]], "Throws": [["UnsupportedOperationException", "If this session doesn't support this."]], "SeeAlso": ["@B_android#support#v4#media#session#MediaControllerCompat#getFlags_E@", "@B_android#support#v4#media#session#MediaSessionCompat_E@"], "Permissions": [], "Description": "Use @B_android#support#v4#media#session#MediaControllerCompat#removeQueueItem_E@ instead. Removes an queue item at the specified position in the play queue of this session. Not all sessions may support this. To know whether the session supports this, get the session's flags with @B_android#support#v4#media#session#MediaControllerCompat#getFlags_E@ and check that the flag @B_android#support#v4#media#session#MediaSessionCompat#FLAG_HANDLES_QUEUE_COMMANDS_E@ is set.", "history": "added in version 25.4.0", "FullName": "public void removeQueueItemAt (int index)"}, "unregisterCallback(android.support.v4.media.session.MediaControllerCompat.Callback)": {"Returns": [], "Parameters": [["@B_android#support#v4#media#session#MediaControllerCompat#Callback_E@", "MediaControllerCompat.Callback: The callback to remove"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Stops receiving updates on the specified callback. If an update has already been posted you may still receive it after calling this method.", "history": "added in version 22.1.0", "FullName": "public void unregisterCallback (MediaControllerCompat.Callback callback)"}, "setVolumeTo(int, int)": {"Returns": [], "Parameters": [["int", "int: The value to set it to, between 0 and the reported max."], ["int", "int: Flags from @B_android#media#AudioManager_E@ to include with the volume request."]], "Throws": [], "SeeAlso": ["@B_android#support#v4#media#session#MediaControllerCompat#getPlaybackInfo_E@"], "Permissions": [], "Description": "Set the volume of the output this session is playing on. The command will be ignored if it does not support @B_android#support#v4#media#VolumeProviderCompat#VOLUME_CONTROL_ABSOLUTE_E@. The flags in @B_android#media#AudioManager_E@ may be used to affect the handling.", "history": "added in version 22.0.0", "FullName": "void setVolumeTo (int value, int flags)"}, "getPackageName()": {"Returns": [["String", "The package name of of the session owner."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the session owner's package name.", "history": "added in version 22.1.0", "FullName": "public String getPackageName ()"}, "removeQueueItem(android.support.v4.media.MediaDescriptionCompat)": {"Returns": [], "Parameters": [["@B_android#support#v4#media#MediaDescriptionCompat_E@", "MediaDescriptionCompat: The @B_android#support#v4#media#MediaDescriptionCompat_E@ for denoting the @B_android#support#v4#media#session#MediaSessionCompat#QueueItem_E@ to be removed."]], "Throws": [["UnsupportedOperationException", "If this session doesn't support this."]], "SeeAlso": ["@B_android#support#v4#media#session#MediaControllerCompat#getFlags_E@", "@B_android#support#v4#media#session#MediaSessionCompat_E@"], "Permissions": [], "Description": "Removes the first occurrence of the specified @B_android#support#v4#media#session#MediaSessionCompat#QueueItem_E@ with the given @B_android#support#v4#media#MediaDescriptionCompat_E@ in the play queue of the associated session. Not all sessions may support this. To know whether the session supports this, get the session's flags with @B_android#support#v4#media#session#MediaControllerCompat#getFlags_E@ and check that the flag @B_android#support#v4#media#session#MediaSessionCompat#FLAG_HANDLES_QUEUE_COMMANDS_E@ is set.", "history": "added in version 25.4.0", "FullName": "public void removeQueueItem (MediaDescriptionCompat description)"}, "getRatingType()": {"Returns": [["int", "The supported rating type, or @B_android#support#v4#media#RatingCompat#RATING_NONE_E@ if the value is not set or the session is not ready."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v4#media#session#MediaControllerCompat#isSessionReady_E@", "@B_android#support#v4#media#session#MediaControllerCompat#Callback#onSessionReady_E@"], "Permissions": [], "Description": "Gets the rating type supported by the session. One of: @B_android#support#v4#media#RatingCompat#RATING_NONE_E@ @B_android#support#v4#media#RatingCompat#RATING_HEART_E@ @B_android#support#v4#media#RatingCompat#RATING_THUMB_UP_DOWN_E@ @B_android#support#v4#media#RatingCompat#RATING_3_STARS_E@ @B_android#support#v4#media#RatingCompat#RATING_4_STARS_E@ @B_android#support#v4#media#RatingCompat#RATING_5_STARS_E@ @B_android#support#v4#media#RatingCompat#RATING_PERCENTAGE_E@ If the session is not ready, it will return @B_android#support#v4#media#RatingCompat#RATING_NONE_E@.", "history": "added in version 22.1.0", "FullName": "public int getRatingType ()"}, "dispatchMediaButtonEvent(android.view.KeyEvent)": {"Returns": [["boolean", "true if the event was sent to the session, false otherwise."]], "Parameters": [["https:##developer#android#com@B_android#view#KeyEvent_E@", "KeyEvent: The media button event to dispatch."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sends the specified media button event to the session. Only media keys can be sent by this method, other keys will be ignored.", "history": "added in version 22.1.0", "FullName": "public boolean dispatchMediaButtonEvent (KeyEvent keyEvent)"}, "MediaControllerCompat(android.content.Context,android.support.v4.media.session.MediaSessionCompat)": {"Returns": [], "Parameters": [["https:##developer#android#com@B_android#content#Context_E@", "Context no parameter comment"], ["@B_android#support#v4#media#session#MediaSessionCompat_E@", "MediaSessionCompat: The session to be controlled."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a media controller from a session.", "history": "added in version 22.1.0", "FullName": "public MediaControllerCompat (Context context, MediaSessionCompat session)"}, "getMetadata()": {"Returns": [["@B_android#support#v4#media#MediaMetadataCompat_E@", "The current MediaMetadata or null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the current metadata for this session.", "history": "added in version 22.1.0", "FullName": "public MediaMetadataCompat getMetadata ()"}, "getMediaController(android.app.Activity)": {"Returns": [["@B_android#support#v4#media#session#MediaControllerCompat_E@", "The controller which should receive events."]], "Parameters": [["https:##developer#android#com@B_android#app#Activity_E@", "Activity: The activity to get the media controller from, must not be null."]], "Throws": [], "SeeAlso": ["@B_android#support#v4#media#session#MediaControllerCompat#setMediaController_E@"], "Permissions": [], "Description": "Retrieves the @B_android#support#v4#media#session#MediaControllerCompat_E@ set in the activity by @B_android#support#v4#media#session#MediaControllerCompat#setMediaController_E@ for sending media key and volume events. This is compatible with https:##developer#android#com@B_android#app#Activity#getMediaController_E@.", "history": "added in version 26.0.0-alpha1", "FullName": "public static MediaControllerCompat getMediaController (Activity activity)"}, "sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)": {"Returns": [], "Parameters": [["String", "String: The command to send"], ["https:##developer#android#com@B_android#os#Bundle_E@", "Bundle: Any parameters to include with the command. Can be null."], ["https:##developer#android#com@B_android#os#ResultReceiver_E@", "ResultReceiver: The callback to receive the result on. Can be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sends a generic command to the session. It is up to the session creator to decide what commands and parameters they will support. As such, commands should only be sent to sessions that the controller owns.", "history": "added in version 22.1.0", "FullName": "public void sendCommand (String command, Bundle params, ResultReceiver cb)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v4.media.session.MediaControllerCompat", "ClassDesc": "Allows an app to interact with an ongoing media session. Media buttons and other commands can be sent to the session. A callback may be registered to receive updates from the session, such as metadata and play state changes. A MediaController can be created if you have a @B_android#support#v4#media#session#MediaSessionCompat#Token_E@ from the session owner. MediaController objects are thread-safe. This is a helper for accessing features in https:##developer#android#com@B_android#media#session#MediaSession_E@ introduced after API level 4 in a backwards compatible fashion. If MediaControllerCompat is created with a @B_android#support#v4#media#session#MediaSessionCompat#Token_E@ from another process, following methods will not work directly after the creation if the @B_android#support#v4#media#session#MediaSessionCompat#Token_E@ is not passed through a @B_android#support#v4#media#MediaBrowserCompat_E@: @B_android#support#v4#media#session#MediaControllerCompat#getPlaybackState_E@.@B_android#support#v4#media#session#PlaybackStateCompat#getExtras_E@ @B_android#support#v4#media#session#MediaControllerCompat#getRatingType_E@ @B_android#support#v4#media#session#MediaControllerCompat#getRepeatMode_E@ @B_android#support#v4#media#session#MediaControllerCompat#getShuffleMode_E@ @B_android#support#v4#media#session#MediaControllerCompat#isCaptioningEnabled_E@"}