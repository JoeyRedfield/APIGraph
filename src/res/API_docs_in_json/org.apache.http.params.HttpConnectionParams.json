{"Functions": {"setConnectionTimeout(org.apache.http.params.HttpParams,int)": {"Returns": [], "Parameters": [["@B_org#apache#http#params#HttpParams_E@", "HttpParams no parameter comment"], ["int", "int: Timeout in milliseconds."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the timeout until a connection is etablished. A value of zero means the timeout is not used. The default value is zero.", "history": "Added in API level 1 Deprecated in API level 22", "FullName": "public static void setConnectionTimeout (HttpParams params, int timeout)"}, "setSoTimeout(org.apache.http.params.HttpParams,int)": {"Returns": [], "Parameters": [["@B_org#apache#http#params#HttpParams_E@", "HttpParams no parameter comment"], ["int", "int: Timeout in milliseconds"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the default socket timeout (", "history": "Added in API level 1 Deprecated in API level 22", "FullName": "public static void setSoTimeout (HttpParams params, int timeout)"}, "getSoTimeout(org.apache.http.params.HttpParams)": {"Returns": [["int", "timeout in milliseconds"]], "Parameters": [["@B_org#apache#http#params#HttpParams_E@", "HttpParams no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the default socket timeout (", "history": "Added in API level 1 Deprecated in API level 22", "FullName": "public static int getSoTimeout (HttpParams params)"}, "setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)": {"Returns": [], "Parameters": [["@B_org#apache#http#params#HttpParams_E@", "HttpParams no parameter comment"], ["boolean", "boolean: true if stale connection check is to be used, false otherwise."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Defines whether stale connection check is to be used. Disabling stale connection check may result in slight performance improvement at the risk of getting an I/O error when executing a request over a connection that has been closed at the server side.", "history": "Added in API level 1 Deprecated in API level 22", "FullName": "public static void setStaleCheckingEnabled (HttpParams params, boolean value)"}, "getConnectionTimeout(org.apache.http.params.HttpParams)": {"Returns": [["int", "timeout in milliseconds."]], "Parameters": [["@B_org#apache#http#params#HttpParams_E@", "HttpParams no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the timeout until a connection is etablished. A value of zero means the timeout is not used. The default value is zero.", "history": "Added in API level 1 Deprecated in API level 22", "FullName": "public static int getConnectionTimeout (HttpParams params)"}, "setSocketBufferSize(org.apache.http.params.HttpParams,int)": {"Returns": [], "Parameters": [["@B_org#apache#http#params#HttpParams_E@", "HttpParams no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1 Deprecated in API level 22", "FullName": "public static void setSocketBufferSize (HttpParams params, int size)"}, "setTcpNoDelay(org.apache.http.params.HttpParams,boolean)": {"Returns": [], "Parameters": [["@B_org#apache#http#params#HttpParams_E@", "HttpParams no parameter comment"], ["boolean", "boolean: true if the Nagle's algorithm is to NOT be used (that is enable TCP_NODELAY), false otherwise."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Determines whether Nagle's algorithm is to be used. The Nagle's algorithm tries to conserve bandwidth by minimizing the number of segments that are sent. When applications wish to decrease network latency and increase performance, they can disable Nagle's algorithm (that is enable TCP_NODELAY). Data will be sent earlier, at the cost of an increase in bandwidth consumption.", "history": "Added in API level 1 Deprecated in API level 22", "FullName": "public static void setTcpNoDelay (HttpParams params, boolean value)"}, "setLinger(org.apache.http.params.HttpParams, int)": {"Returns": [], "Parameters": [["@B_org#apache#http#params#HttpParams_E@", "HttpParams no parameter comment"], ["int", "int: the linger-on-close timeout"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns linger-on-close timeout. This option disables/enables immediate return from a close() of a TCP Socket. Enabling this option with a non-zero Integer timeout means that a close() will block pending the transmission and acknowledgement of all data written to the peer, at which point the socket is closed gracefully. Value", "history": "added in API level 1", "FullName": "public static void setLinger (HttpParams params, int value)"}, "setLinger(org.apache.http.params.HttpParams,int)": {"Returns": [], "Parameters": [["@B_org#apache#http#params#HttpParams_E@", "HttpParams no parameter comment"], ["int", "int: the linger-on-close timeout"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns linger-on-close timeout. This option disables/enables immediate return from a close() of a TCP Socket. Enabling this option with a non-zero Integer timeout means that a close() will block pending the transmission and acknowledgement of all data written to the peer, at which point the socket is closed gracefully. Value", "history": "Added in API level 1 Deprecated in API level 22", "FullName": "public static void setLinger (HttpParams params, int value)"}, "getTcpNoDelay(org.apache.http.params.HttpParams)": {"Returns": [["boolean", "true if the Nagle's algorithm is to NOT be used (that is enable TCP_NODELAY), false otherwise."]], "Parameters": [["@B_org#apache#http#params#HttpParams_E@", "HttpParams no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tests if Nagle's algorithm is to be used.", "history": "Added in API level 1 Deprecated in API level 22", "FullName": "public static boolean getTcpNoDelay (HttpParams params)"}, "getSocketBufferSize(org.apache.http.params.HttpParams)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_org#apache#http#params#HttpParams_E@", "HttpParams no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1 Deprecated in API level 22", "FullName": "public static int getSocketBufferSize (HttpParams params)"}, "getLinger(org.apache.http.params.HttpParams)": {"Returns": [["int", "the linger-on-close timeout"]], "Parameters": [["@B_org#apache#http#params#HttpParams_E@", "HttpParams no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns linger-on-close timeout. Value", "history": "Added in API level 1 Deprecated in API level 22", "FullName": "public static int getLinger (HttpParams params)"}, "isStaleCheckingEnabled(org.apache.http.params.HttpParams)": {"Returns": [["boolean", "true if stale connection check is to be used, false otherwise."]], "Parameters": [["@B_org#apache#http#params#HttpParams_E@", "HttpParams no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tests whether stale connection check is to be used. Disabling stale connection check may result in slight performance improvement at the risk of getting an I/O error when executing a request over a connection that has been closed at the server side.", "history": "Added in API level 1 Deprecated in API level 22", "FullName": "public static boolean isStaleCheckingEnabled (HttpParams params)"}}, "Inheritance": [], "ClassName": "org.apache.http.params.HttpConnectionParams", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit An adaptor for accessing connection parameters in @B_org#apache#http#params#HttpParams_E@. Note that the @B_org#apache#http#params#CoreConnectionPNames_E@ is for compatibility with existing application code only. References to the parameter names should use the interface, not this class."}