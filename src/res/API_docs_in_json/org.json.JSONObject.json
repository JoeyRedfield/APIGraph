{"Functions": {"getDouble(java.lang.String)": {"Returns": [["double", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [["@B_org#json#JSONException_E@", "if the mapping doesn't exist or cannot be coerced to a double."]], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists and is a double or can be coerced to a double, or throws otherwise.", "history": "Added in API level 1", "FullName": "public double getDouble (String name)"}, "put(java.lang.String, double)": {"Returns": [["@B_org#json#JSONObject_E@", "this object."]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["double", "double: a finite value. May not be @B_java#lang#Double#isNaN_E@ or @B_java#lang#Double#isInfinite_E@."]], "Throws": [["@B_org#json#JSONException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Maps name to value, clobbering any existing name/value mapping with the same name.", "history": "added in API level 1", "FullName": "public JSONObject put (String name, double value)"}, "getJSONObject(java.lang.String)": {"Returns": [["@B_org#json#JSONObject_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [["@B_org#json#JSONException_E@", "if the mapping doesn't exist or is not a JSONObject."]], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists and is a JSONObject, or throws otherwise.", "history": "Added in API level 1", "FullName": "public JSONObject getJSONObject (String name)"}, "optJSONArray(java.lang.String)": {"Returns": [["@B_org#json#JSONArray_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists and is a JSONArray, or null otherwise.", "history": "Added in API level 1", "FullName": "public JSONArray optJSONArray (String name)"}, "optInt(java.lang.String,int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists and is an int or can be coerced to an int, or fallback otherwise.", "history": "Added in API level 1", "FullName": "public int optInt (String name, int fallback)"}, "JSONObject(org.json.JSONObject,java.lang.String[])": {"Returns": [], "Parameters": [["@B_org#json#JSONObject_E@", "JSONObject no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [["@B_org#json#JSONException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new JSONObject by copying mappings for the listed names from the given object. Names that aren't present in copyFrom will be skipped.", "history": "Added in API level 1", "FullName": "public JSONObject (JSONObject copyFrom, String[] names)"}, "optBoolean(java.lang.String,boolean)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists and is a boolean or can be coerced to a boolean, or fallback otherwise.", "history": "Added in API level 1", "FullName": "public boolean optBoolean (String name, boolean fallback)"}, "wrap(java.lang.Object)": {"Returns": [["@B_java#lang#Object_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Wraps the given object if necessary. If the object is null or , returns @B_org#json#JSONObject#NULL_E@. If the object is a JSONArray or JSONObject, no wrapping is necessary. If the object is NULL, no wrapping is necessary. If the object is an array or Collection, returns an equivalent JSONArray. If the object is a Map, returns an equivalent JSONObject. If the object is a primitive wrapper type or String, returns the object. Otherwise if the object is from a java package, returns the result of toString. If wrapping fails, returns null.", "history": "Added in API level 19", "FullName": "public static Object wrap (Object o)"}, "put(java.lang.String, java.lang.Object)": {"Returns": [["@B_org#json#JSONObject_E@", "this object."]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Object_E@", "Object: a @B_org#json#JSONObject_E@, @B_org#json#JSONArray_E@, String, Boolean, Integer, Long, Double, @B_org#json#JSONObject#NULL_E@, or null. May not be @B_java#lang#Double#isNaN_E@ or @B_java#lang#Double#isInfinite_E@."]], "Throws": [["@B_org#json#JSONException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Maps name to value, clobbering any existing name/value mapping with the same name. If the value is null, any existing mapping for name is removed.", "history": "added in API level 1", "FullName": "public JSONObject put (String name, Object value)"}, "optLong(java.lang.String)": {"Returns": [["long", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists and is a long or can be coerced to a long, or 0 otherwise. Note that JSON represents numbers as doubles, so this is", "history": "Added in API level 1", "FullName": "public long optLong (String name)"}, "toString(int)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["int", "int: the number of spaces to indent for each level of nesting."]], "Throws": [["@B_org#json#JSONException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Encodes this object as a human readable JSON string for debugging, such as:", "history": "Added in API level 1", "FullName": "public String toString (int indentSpaces)"}, "optBoolean(java.lang.String)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists and is a boolean or can be coerced to a boolean, or false otherwise.", "history": "Added in API level 1", "FullName": "public boolean optBoolean (String name)"}, "optString(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists, coercing it if necessary, or the empty string if no such mapping exists.", "history": "Added in API level 1", "FullName": "public String optString (String name)"}, "opt(java.lang.String)": {"Returns": [["@B_java#lang#Object_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name, or null if no such mapping exists.", "history": "Added in API level 1", "FullName": "public Object opt (String name)"}, "put(java.lang.String,int)": {"Returns": [["@B_org#json#JSONObject_E@", "this object."]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["int", "int no parameter comment"]], "Throws": [["@B_org#json#JSONException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Maps name to value, clobbering any existing name/value mapping with the same name.", "history": "Added in API level 1", "FullName": "public JSONObject put (String name, int value)"}, "optString(java.lang.String,java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists, coercing it if necessary, or fallback if no such mapping exists.", "history": "Added in API level 1", "FullName": "public String optString (String name, String fallback)"}, "names()": {"Returns": [["@B_org#json#JSONArray_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an array containing the string names in this object. This method returns null if this object contains no mappings.", "history": "Added in API level 1", "FullName": "public JSONArray names ()"}, "getInt(java.lang.String)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [["@B_org#json#JSONException_E@", "if the mapping doesn't exist or cannot be coerced to an int."]], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists and is an int or can be coerced to an int, or throws otherwise.", "history": "Added in API level 1", "FullName": "public int getInt (String name)"}, "has(java.lang.String)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this object has a mapping for name. The mapping may be @B_org#json#JSONObject#NULL_E@.", "history": "Added in API level 1", "FullName": "public boolean has (String name)"}, "get(java.lang.String)": {"Returns": [["@B_java#lang#Object_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [["@B_org#json#JSONException_E@", "if no such mapping exists."]], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name, or throws if no such mapping exists.", "history": "Added in API level 1", "FullName": "public Object get (String name)"}, "numberToString(java.lang.Number)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#Number_E@", "Number: a finite value. May not be @B_java#lang#Double#isNaN_E@ or @B_java#lang#Double#isInfinite_E@."]], "Throws": [["@B_org#json#JSONException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Encodes the number as a JSON string.", "history": "Added in API level 1", "FullName": "public static String numberToString (Number number)"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Encodes this object as a compact JSON string, such as:", "history": "Added in API level 1", "FullName": "public String toString ()"}, "optInt(java.lang.String)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists and is an int or can be coerced to an int, or 0 otherwise.", "history": "Added in API level 1", "FullName": "public int optInt (String name)"}, "optJSONObject(java.lang.String)": {"Returns": [["@B_org#json#JSONObject_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists and is a JSONObject, or null otherwise.", "history": "Added in API level 1", "FullName": "public JSONObject optJSONObject (String name)"}, "JSONObject()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a JSONObject with no name/value mappings.", "history": "Added in API level 1", "FullName": "public JSONObject ()"}, "optLong(java.lang.String, long)": {"Returns": [["long", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["long", "long no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists and is a long or can be coerced to a long, or fallback otherwise. Note that JSON represents numbers as doubles, so this is", "history": "added in API level 1", "FullName": "public long optLong (String name, long fallback)"}, "length()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of name/value mappings in this object.", "history": "Added in API level 1", "FullName": "public int length ()"}, "optLong(java.lang.String,long)": {"Returns": [["long", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["long", "long no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists and is a long or can be coerced to a long, or fallback otherwise. Note that JSON represents numbers as doubles, so this is", "history": "Added in API level 1", "FullName": "public long optLong (String name, long fallback)"}, "put(java.lang.String, long)": {"Returns": [["@B_org#json#JSONObject_E@", "this object."]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["long", "long no parameter comment"]], "Throws": [["@B_org#json#JSONException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Maps name to value, clobbering any existing name/value mapping with the same name.", "history": "added in API level 1", "FullName": "public JSONObject put (String name, long value)"}, "isNull(java.lang.String)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this object has no mapping for name or if it has a mapping whose value is @B_org#json#JSONObject#NULL_E@.", "history": "Added in API level 1", "FullName": "public boolean isNull (String name)"}, "optBoolean(java.lang.String, boolean)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists and is a boolean or can be coerced to a boolean, or fallback otherwise.", "history": "added in API level 1", "FullName": "public boolean optBoolean (String name, boolean fallback)"}, "optString(java.lang.String, java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists, coercing it if necessary, or fallback if no such mapping exists.", "history": "added in API level 1", "FullName": "public String optString (String name, String fallback)"}, "put(java.lang.String,long)": {"Returns": [["@B_org#json#JSONObject_E@", "this object."]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["long", "long no parameter comment"]], "Throws": [["@B_org#json#JSONException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Maps name to value, clobbering any existing name/value mapping with the same name.", "history": "Added in API level 1", "FullName": "public JSONObject put (String name, long value)"}, "put(java.lang.String,boolean)": {"Returns": [["@B_org#json#JSONObject_E@", "this object."]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [["@B_org#json#JSONException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Maps name to value, clobbering any existing name/value mapping with the same name.", "history": "Added in API level 1", "FullName": "public JSONObject put (String name, boolean value)"}, "JSONObject(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a JSON-encoded string containing an object."]], "Throws": [["@B_org#json#JSONException_E@", "if the parse fails or doesn't yield a JSONObject."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new JSONObject with name/value mappings from the JSON string.", "history": "Added in API level 1", "FullName": "public JSONObject (String json)"}, "optDouble(java.lang.String,double)": {"Returns": [["double", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["double", "double no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists and is a double or can be coerced to a double, or fallback otherwise.", "history": "Added in API level 1", "FullName": "public double optDouble (String name, double fallback)"}, "optDouble(java.lang.String)": {"Returns": [["double", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists and is a double or can be coerced to a double, or NaN otherwise.", "history": "Added in API level 1", "FullName": "public double optDouble (String name)"}, "putOpt(java.lang.String,java.lang.Object)": {"Returns": [["@B_org#json#JSONObject_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [["@B_org#json#JSONException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Equivalent to put(name, value) when both parameters are non-null; does nothing otherwise.", "history": "Added in API level 1", "FullName": "public JSONObject putOpt (String name, Object value)"}, "put(java.lang.String,double)": {"Returns": [["@B_org#json#JSONObject_E@", "this object."]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["double", "double: a finite value. May not be @B_java#lang#Double#isNaN_E@ or @B_java#lang#Double#isInfinite_E@."]], "Throws": [["@B_org#json#JSONException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Maps name to value, clobbering any existing name/value mapping with the same name.", "history": "Added in API level 1", "FullName": "public JSONObject put (String name, double value)"}, "getString(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [["@B_org#json#JSONException_E@", "if no such mapping exists."]], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists, coercing it if necessary, or throws if no such mapping exists.", "history": "Added in API level 1", "FullName": "public String getString (String name)"}, "toJSONArray(org.json.JSONArray)": {"Returns": [["@B_org#json#JSONArray_E@", "no returns description in source"]], "Parameters": [["@B_org#json#JSONArray_E@", "JSONArray no parameter comment"]], "Throws": [["@B_org#json#JSONException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Returns an array with the values corresponding to names. The array contains null for names that aren't mapped. This method returns null if names is either null or empty.", "history": "Added in API level 1", "FullName": "public JSONArray toJSONArray (JSONArray names)"}, "optDouble(java.lang.String, double)": {"Returns": [["double", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["double", "double no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists and is a double or can be coerced to a double, or fallback otherwise.", "history": "added in API level 1", "FullName": "public double optDouble (String name, double fallback)"}, "JSONObject(org.json.JSONTokener)": {"Returns": [], "Parameters": [["@B_org#json#JSONTokener_E@", "JSONTokener: a tokener whose nextValue() method will yield a JSONObject."]], "Throws": [["@B_org#json#JSONException_E@", "if the parse fails or doesn't yield a JSONObject."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new JSONObject with name/value mappings from the next object in the tokener.", "history": "Added in API level 1", "FullName": "public JSONObject (JSONTokener readFrom)"}, "quote(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: the string to encode. Null will be interpreted as an empty string."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Encodes data as a JSON string. This applies quotes and any necessary character escaping.", "history": "Added in API level 1", "FullName": "public static String quote (String data)"}, "optInt(java.lang.String, int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists and is an int or can be coerced to an int, or fallback otherwise.", "history": "added in API level 1", "FullName": "public int optInt (String name, int fallback)"}, "putOpt(java.lang.String, java.lang.Object)": {"Returns": [["@B_org#json#JSONObject_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [["@B_org#json#JSONException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Equivalent to put(name, value) when both parameters are non-null; does nothing otherwise.", "history": "added in API level 1", "FullName": "public JSONObject putOpt (String name, Object value)"}, "put(java.lang.String, int)": {"Returns": [["@B_org#json#JSONObject_E@", "this object."]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["int", "int no parameter comment"]], "Throws": [["@B_org#json#JSONException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Maps name to value, clobbering any existing name/value mapping with the same name.", "history": "added in API level 1", "FullName": "public JSONObject put (String name, int value)"}, "getLong(java.lang.String)": {"Returns": [["long", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [["@B_org#json#JSONException_E@", "if the mapping doesn't exist or cannot be coerced to a long."]], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists and is a long or can be coerced to a long, or throws otherwise. Note that JSON represents numbers as doubles, so this is", "history": "Added in API level 1", "FullName": "public long getLong (String name)"}, "JSONObject(java.util.Map)": {"Returns": [], "Parameters": [["@B_java#util#Map_E@", "Map: a map whose keys are of type @B_java#lang#String_E@ and whose values are of supported types."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if any of the map's keys are null."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new JSONObject by copying all name/value mappings from the given map.", "history": "Added in API level 1", "FullName": "public JSONObject (Map copyFrom)"}, "put(java.lang.String,java.lang.Object)": {"Returns": [["@B_org#json#JSONObject_E@", "this object."]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Object_E@", "Object: a @B_org#json#JSONObject_E@, @B_org#json#JSONArray_E@, String, Boolean, Integer, Long, Double, @B_org#json#JSONObject#NULL_E@, or null. May not be @B_java#lang#Double#isNaN_E@ or @B_java#lang#Double#isInfinite_E@."]], "Throws": [["@B_org#json#JSONException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Maps name to value, clobbering any existing name/value mapping with the same name. If the value is null, any existing mapping for name is removed.", "history": "Added in API level 1", "FullName": "public JSONObject put (String name, Object value)"}, "getBoolean(java.lang.String)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [["@B_org#json#JSONException_E@", "if the mapping doesn't exist or cannot be coerced to a boolean."]], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists and is a boolean or can be coerced to a boolean, or throws otherwise.", "history": "Added in API level 1", "FullName": "public boolean getBoolean (String name)"}, "remove(java.lang.String)": {"Returns": [["@B_java#lang#Object_E@", "the value previously mapped by name, or null if there was no such mapping."]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes the named mapping if it exists; does nothing otherwise.", "history": "Added in API level 1", "FullName": "public Object remove (String name)"}, "accumulate(java.lang.String, java.lang.Object)": {"Returns": [["@B_org#json#JSONObject_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Object_E@", "Object: a @B_org#json#JSONObject_E@, @B_org#json#JSONArray_E@, String, Boolean, Integer, Long, Double, @B_org#json#JSONObject#NULL_E@ or null. May not be @B_java#lang#Double#isNaN_E@ or @B_java#lang#Double#isInfinite_E@."]], "Throws": [["@B_org#json#JSONException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Appends value to the array already mapped to name. If this object has no mapping for name, this inserts a new mapping. If the mapping exists but its value is not an array, the existing and new values are inserted in order into a new array which is itself mapped to name. In aggregate, this allows values to be added to a mapping one at a time. Note that append(String, Object) provides better semantics. In particular, the mapping for name will @B_org#json#JSONArray_E@. Using accumulate will result in either a @B_org#json#JSONArray_E@ or a mapping whose type is the type of value depending on the number of calls to it.", "history": "added in API level 1", "FullName": "public JSONObject accumulate (String name, Object value)"}, "getJSONArray(java.lang.String)": {"Returns": [["@B_org#json#JSONArray_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [["@B_org#json#JSONException_E@", "if the mapping doesn't exist or is not a JSONArray."]], "SeeAlso": [], "Permissions": [], "Description": "Returns the value mapped by name if it exists and is a JSONArray, or throws otherwise.", "history": "Added in API level 1", "FullName": "public JSONArray getJSONArray (String name)"}, "accumulate(java.lang.String,java.lang.Object)": {"Returns": [["@B_org#json#JSONObject_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Object_E@", "Object: a @B_org#json#JSONObject_E@, @B_org#json#JSONArray_E@, String, Boolean, Integer, Long, Double, @B_org#json#JSONObject#NULL_E@ or null. May not be @B_java#lang#Double#isNaN_E@ or @B_java#lang#Double#isInfinite_E@."]], "Throws": [["@B_org#json#JSONException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Appends value to the array already mapped to name. If this object has no mapping for name, this inserts a new mapping. If the mapping exists but its value is not an array, the existing and new values are inserted in order into a new array which is itself mapped to name. In aggregate, this allows values to be added to a mapping one at a time. Note that append(String, Object) provides better semantics. In particular, the mapping for name will @B_org#json#JSONArray_E@. Using accumulate will result in either a @B_org#json#JSONArray_E@ or a mapping whose type is the type of value depending on the number of calls to it.", "history": "Added in API level 1", "FullName": "public JSONObject accumulate (String name, Object value)"}, "put(java.lang.String, boolean)": {"Returns": [["@B_org#json#JSONObject_E@", "this object."]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [["@B_org#json#JSONException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Maps name to value, clobbering any existing name/value mapping with the same name.", "history": "added in API level 1", "FullName": "public JSONObject put (String name, boolean value)"}, "keys()": {"Returns": [["@B_java#util#Iterator_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an iterator of the String names in this object. The returned iterator supports @B_java#util#Iterator#remove_E@, which will remove the corresponding mapping from this object. If this object is modified after the iterator is returned, the iterator's behavior is undefined. The order of the keys is undefined.", "history": "Added in API level 1", "FullName": "public Iterator<String> keys ()"}}, "Inheritance": [], "ClassName": "org.json.JSONObject", "ClassDesc": "A modifiable set of name/value mappings. Names are unique, non-null strings. Values may be any mix of @B_org#json#JSONObject_E@, @B_org#json#JSONArray_E@, Strings, Booleans, Integers, Longs, Doubles or @B_org#json#JSONObject#NULL_E@. Values may not be null, @B_java#lang#Double#isNaN_E@, @B_java#lang#Double#isInfinite_E@, or of any type not listed here. This class can coerce values to another type when requested. When the requested type is a boolean, strings will be coerced using a case-insensitive comparison to \"true\" and \"false\". When the requested type is a double, other @B_java#lang#Number_E@ types will be coerced using @B_java#lang#Number#doubleValue_E@. Strings that can be coerced using @B_java#lang#Double#valueOf_E@ will be. When the requested type is an int, other @B_java#lang#Number_E@ types will be coerced using @B_java#lang#Number#intValue_E@. Strings that can be coerced using @B_java#lang#Double#valueOf_E@ will be, and then cast to int. When the requested type is a String, other non-null values will be coerced using @B_java#lang#String#valueOf_E@. Although null cannot be coerced, the sentinel value @B_org#json#JSONObject#NULL_E@ is coerced to the string \"null\". This class can look up both mandatory and optional values: Use getType() to retrieve a mandatory value. This fails with a JSONException if the requested name has no value or if the value cannot be coerced to the requested type. Use optType() to retrieve an optional value. This returns a system- or user-supplied default if the requested name has no value or if the value cannot be coerced to the requested type. null reference, and the sentinel value @B_org#json#JSONObject#NULL_E@. In particular, calling put(name, null) removes the named entry from the object but put(name, JSONObject.NULL) stores an entry whose value is JSONObject.NULL. Instances of this class are not thread safe. Although this class is nonfinal, it was not designed for inheritance and should not be subclassed. In particular, self-use by overrideable methods is not specified. See"}