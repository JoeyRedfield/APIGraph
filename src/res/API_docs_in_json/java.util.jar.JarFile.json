{"Functions": {"JarFile(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the name of the jar file to be opened for reading"]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error has occurred"], ["@B_java#lang#SecurityException_E@", "if access to the file is denied by the SecurityManager"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new JarFile to read from the specified file name. The JarFile will be verified if it is signed.", "history": "Added in API level 1", "FullName": "public JarFile (String name)"}, "JarFile(java.io.File, boolean)": {"Returns": [], "Parameters": [["@B_java#io#File_E@", "File: the jar file to be opened for reading"], ["boolean", "boolean: whether or not to verify the jar file if it is signed."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error has occurred"], ["@B_java#lang#SecurityException_E@", "if access to the file is denied by the SecurityManager."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new JarFile to read from the specified File object.", "history": "added in API level 1", "FullName": "public JarFile (File file, boolean verify)"}, "JarFile(java.io.File,boolean,int)": {"Returns": [], "Parameters": [["@B_java#io#File_E@", "File: the jar file to be opened for reading"], ["boolean", "boolean: whether or not to verify the jar file if it is signed."], ["int", "int: the mode in which the file is to be opened"]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error has occurred"], ["@B_java#lang#IllegalArgumentException_E@", "if the mode argument is invalid"], ["@B_java#lang#SecurityException_E@", "if access to the file is denied by the SecurityManager"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new JarFile to read from the specified File object in the specified mode. The mode argument must be either", "history": "Added in API level 1", "FullName": "public JarFile (File file, boolean verify, int mode)"}, "JarFile(java.io.File, boolean, int)": {"Returns": [], "Parameters": [["@B_java#io#File_E@", "File: the jar file to be opened for reading"], ["boolean", "boolean: whether or not to verify the jar file if it is signed."], ["int", "int: the mode in which the file is to be opened"]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error has occurred"], ["@B_java#lang#IllegalArgumentException_E@", "if the mode argument is invalid"], ["@B_java#lang#SecurityException_E@", "if access to the file is denied by the SecurityManager"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new JarFile to read from the specified File object in the specified mode. The mode argument must be either", "history": "added in API level 1", "FullName": "public JarFile (File file, boolean verify, int mode)"}, "close()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", "if an error occurs."]], "SeeAlso": [], "Permissions": [], "Description": "Closes this JarFile.", "history": "Added in API level 1", "FullName": "public void close ()"}, "JarFile(java.io.File)": {"Returns": [], "Parameters": [["@B_java#io#File_E@", "File: the jar file to be opened for reading"]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error has occurred"], ["@B_java#lang#SecurityException_E@", "if access to the file is denied by the SecurityManager"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new JarFile to read from the specified File object. The JarFile will be verified if it is signed.", "history": "Added in API level 1", "FullName": "public JarFile (File file)"}, "JarFile(java.lang.String, boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the name of the jar file to be opened for reading"], ["boolean", "boolean: whether or not to verify the jar file if it is signed."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error has occurred"], ["@B_java#lang#SecurityException_E@", "if access to the file is denied by the SecurityManager"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new JarFile to read from the specified file name.", "history": "added in API level 1", "FullName": "public JarFile (String name, boolean verify)"}, "stream()": {"Returns": [["@B_java#util#stream#Stream_E@", "an ordered Stream of entries in this ZIP file"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return an ordered Stream over the ZIP file entries. Entries appear in the Stream in the order they appear in the central directory of the ZIP file.", "history": "Added in API level 26", "FullName": "public Stream<JarEntry> stream ()"}, "getManifest()": {"Returns": [["@B_java#util#jar#Manifest_E@", "the jar file manifest, or null if none"]], "Parameters": [], "Throws": [["@B_java#lang#IllegalStateException_E@", "may be thrown if the jar file has been closed"], ["@B_java#io#IOException_E@", "if an I/O error has occurred"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the jar file manifest, or null if none.", "history": "Added in API level 1", "FullName": "public Manifest getManifest ()"}, "JarFile(java.io.File,boolean)": {"Returns": [], "Parameters": [["@B_java#io#File_E@", "File: the jar file to be opened for reading"], ["boolean", "boolean: whether or not to verify the jar file if it is signed."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error has occurred"], ["@B_java#lang#SecurityException_E@", "if access to the file is denied by the SecurityManager."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new JarFile to read from the specified File object.", "history": "Added in API level 1", "FullName": "public JarFile (File file, boolean verify)"}, "getEntry(java.lang.String)": {"Returns": [["@B_java#util#zip#ZipEntry_E@", "the ZipEntry for the given entry name or null if not found"]], "Parameters": [["@B_java#lang#String_E@", "String: the jar file entry name"]], "Throws": [["@B_java#lang#IllegalStateException_E@", "may be thrown if the jar file has been closed"]], "SeeAlso": ["@B_java#util#zip#ZipEntry_E@"], "Permissions": [], "Description": "Returns the ZipEntry for the given entry name or null if not found.", "history": "Added in API level 1", "FullName": "public ZipEntry getEntry (String name)"}, "getInputStream(java.util.zip.ZipEntry)": {"Returns": [["@B_java#io#InputStream_E@", "an input stream for reading the contents of the specified zip file entry"]], "Parameters": [["@B_java#util#zip#ZipEntry_E@", "ZipEntry: the zip file entry"]], "Throws": [["@B_java#util#zip#ZipException_E@", "if a zip file format error has occurred"], ["@B_java#io#IOException_E@", "if an I/O error has occurred"], ["@B_java#lang#SecurityException_E@", "if any of the jar file entries are incorrectly signed."], ["@B_java#lang#IllegalStateException_E@", "may be thrown if the jar file has been closed"]], "SeeAlso": [], "Permissions": [], "Description": "Returns an input stream for reading the contents of the specified zip file entry.", "history": "Added in API level 1", "FullName": "public InputStream getInputStream (ZipEntry ze)"}, "JarFile(java.lang.String,boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the name of the jar file to be opened for reading"], ["boolean", "boolean: whether or not to verify the jar file if it is signed."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error has occurred"], ["@B_java#lang#SecurityException_E@", "if access to the file is denied by the SecurityManager"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new JarFile to read from the specified file name.", "history": "Added in API level 1", "FullName": "public JarFile (String name, boolean verify)"}, "entries()": {"Returns": [["@B_java#util#Enumeration_E@", "an enumeration of the ZIP file entries"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an enumeration of the zip file entries.", "history": "Added in API level 1", "FullName": "public Enumeration<JarEntry> entries ()"}, "getJarEntry(java.lang.String)": {"Returns": [["@B_java#util#jar#JarEntry_E@", "the JarEntry for the given entry name or null if not found."]], "Parameters": [["@B_java#lang#String_E@", "String: the jar file entry name"]], "Throws": [["@B_java#lang#IllegalStateException_E@", "may be thrown if the jar file has been closed"]], "SeeAlso": ["@B_java#util#jar#JarEntry_E@"], "Permissions": [], "Description": "Returns the JarEntry for the given entry name or null if not found.", "history": "Added in API level 1", "FullName": "public JarEntry getJarEntry (String name)"}}, "Inheritance": ["@B_java#util#zip#ZipFile_E@"], "ClassName": "java.util.jar.JarFile", "ClassDesc": "The JarFile class is used to read the contents of a jar file from any file that can be opened with java.io.RandomAccessFile. It extends the class java.util.zip.ZipFile with support for reading an optional Manifest entry. The Manifest can be used to specify meta-information about the jar file and its entries. Unless otherwise noted, passing a @B_java#lang#NullPointerException_E@ to be thrown. If the verify flag is on when opening a signed jar file, the content of the file is verified against its signature embedded inside the file. Please note that the verification process does not include validating the signer's certificate. A caller should inspect the return value of @B_java#util#jar#JarEntry#getCodeSigners_E@ to further determine if the signature can be trusted."}