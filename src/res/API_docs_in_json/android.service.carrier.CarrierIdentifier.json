{"Functions": {"getSpn()": {"Returns": [["@B_java#lang#String_E@", "This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the service provider name.", "history": "Added in API level 23", "FullName": "public String getSpn ()"}, "getImsi()": {"Returns": [["@B_java#lang#String_E@", "This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the international mobile subscriber identity.", "history": "Added in API level 23", "FullName": "public String getImsi ()"}, "getGid1()": {"Returns": [["@B_java#lang#String_E@", "This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the group identifier level 1.", "history": "Added in API level 23", "FullName": "public String getGid1 ()"}, "getCarrierId()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#telephony#TelephonyManager#getSimCarrierId_E@"], "Permissions": [], "Description": "Returns the carrier id.", "history": "Added in API level 29", "FullName": "public int getCarrierId ()"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 23", "FullName": "public int describeContents ()"}, "CarrierIdentifier(byte[],java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["byte[]", "byte: A 3-byte array as defined by 3GPP TS 24.008."], ["@B_java#lang#String_E@", "String: The group identifier level 1. This value may be null."], ["@B_java#lang#String_E@", "String: The group identifier level 2. This value may be null."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the length of mccMnc is not 3."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a carrier identifier instance.", "history": "Added in API level 28", "FullName": "public CarrierIdentifier (byte[] mccMnc, String gid1, String gid2)"}, "getSpecificCarrierId()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#telephony#TelephonyManager#getSimSpecificCarrierId_E@"], "Permissions": [], "Description": "A specific carrier ID returns the fine-grained carrier ID of the current subscription. It can represent the fact that a carrier may be in effect an aggregation of other carriers (ie in an MVNO type scenario) where each of these specific carriers which are used to make up the actual carrier service may have different carrier configurations. A specific carrier ID could also be used, for example, in a scenario where a carrier requires different carrier configuration for different service offering such as a prepaid plan.", "history": "Added in API level 29", "FullName": "public int getSpecificCarrierId ()"}, "getMnc()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the mobile network code.", "history": "Added in API level 23", "FullName": "public String getMnc ()"}, "getGid2()": {"Returns": [["@B_java#lang#String_E@", "This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the group identifier level 2.", "history": "Added in API level 23", "FullName": "public String getGid2 ()"}, "CarrierIdentifier(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String: This value may be null."], ["@B_java#lang#String_E@", "String: This value may be null."], ["@B_java#lang#String_E@", "String: This value may be null."], ["@B_java#lang#String_E@", "String: This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public CarrierIdentifier (String mcc, String mnc, String spn, String imsi, String gid1, String gid2)"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 23", "FullName": "public String toString ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 23", "FullName": "public void writeToParcel (Parcel out, int flags)"}, "getMcc()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the mobile country code.", "history": "Added in API level 23", "FullName": "public String getMcc ()"}, "CarrierIdentifier(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: mobile country code This value must never be null."], ["@B_java#lang#String_E@", "String: mobile network code This value must never be null."], ["@B_java#lang#String_E@", "String: service provider name This value may be null."], ["@B_java#lang#String_E@", "String: International Mobile Subscriber Identity @B_android#telephony#TelephonyManager#getSubscriberId_E@ This value may be null."], ["@B_java#lang#String_E@", "String: group id level 1 @B_android#telephony#TelephonyManager#getGroupIdLevel1_E@ This value may be null."], ["@B_java#lang#String_E@", "String: group id level 2 This value may be null."], ["int", "int: carrier unique identifier @B_android#telephony#TelephonyManager#getSimCarrierId_E@, used to uniquely identify the carrier and look up the carrier configurations."], ["int", "int: specific carrier identifier @B_android#telephony#TelephonyManager#getSimSpecificCarrierId_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 29", "FullName": "public CarrierIdentifier (String mcc, String mnc, String spn, String imsi, String gid1, String gid2, int carrierid, int specificCarrierId)"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if this object is the same as the obj argument; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the reference object with which to compare."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether some other object is \"equal to\" this one. The equals method implements an equivalence relation on non-null object references: It is x, x.equals(x) should return true. It is x and y, x.equals(y) should return true if and only if y.equals(x) returns true. It is x, y, and z, if x.equals(y) returns true and y.equals(z) returns true, then x.equals(z) should return true. It is x and y, multiple invocations of x.equals(y) consistently return true or consistently return false, provided no information used in equals comparisons on the objects is modified. For any non-null reference value x, x.equals(null) should return false. The equals method for class Object implements the most discriminating possible equivalence relation on objects; that is, for any non-null reference values x and y, this method returns true if and only if x and y refer to the same object (x == y has the value true). Note that it is generally necessary to override the hashCode method whenever this method is overridden, so as to maintain the general contract for the hashCode method, which states that equal objects must have equal hash codes.", "history": "Added in API level 23", "FullName": "public boolean equals (Object obj)"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 23", "FullName": "public void writeToParcel (Parcel out, int flags)"}, "hashCode()": {"Returns": [["int", "a hash code value for this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code value for the object. This method is supported for the benefit of hash tables such as those provided by @B_java#util#HashMap_E@. The general contract of hashCode is: Whenever it is invoked on the same object more than once during an execution of a Java application, the hashCode method must consistently return the same integer, provided no information used in equals comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application. If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result. It is not required that if two objects are unequal according to the @B_java#lang#Object#equals_E@ method, then calling the hashCode method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables. As much as is reasonably practical, the hashCode method defined by class Object does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the Java\u2122 programming language.)", "history": "Added in API level 23", "FullName": "public int hashCode ()"}}, "Inheritance": [], "ClassName": "android.service.carrier.CarrierIdentifier", "ClassDesc": "Used to pass info to CarrierConfigService implementations so they can decide what values to return. Instead of passing mcc, mnc, gid1, gid2, spn, imsi to locate carrier information, CarrierIdentifier also include carrier id @B_android#telephony#TelephonyManager#getSimCarrierId_E@, a platform-wide unique identifier for each carrier. CarrierConfigService can directly use carrier id as the key to look up the carrier info."}