{"Functions": {"setPlaybackSpeed(float)": {"Returns": [], "Parameters": [["float", "float: The playback speed"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the speed is equal to zero."]], "SeeAlso": [], "Permissions": [], "Description": "Sets the playback speed. A value of 1.0f is the default playback value, and a negative value indicates reverse playback. 0.0f is not allowed.", "history": "Added in API level 29", "FullName": "public void setPlaybackSpeed (float speed)"}, "skipToQueueItem(long)": {"Returns": [], "Parameters": [["long", "long no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Play an item with a specific id in the play queue. If you specify an id that is not in the play queue, the behavior is undefined.", "history": "Added in API level 21", "FullName": "public void skipToQueueItem (long id)"}, "prepareFromMediaId(java.lang.String,android.os.Bundle)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The id of the requested media."], ["@B_android#os#Bundle_E@", "Bundle: Optional extras that can include extra information about the media item to be prepared."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Request that the player prepare playback for a specific media id. In other words, other sessions can continue to play during the preparation of this session. This method can be used to speed up the start of the playback. Once the preparation is done, the session will change its playback state to @B_android#media#session#PlaybackState#STATE_PAUSED_E@. Afterwards, @B_android#media#session#MediaController#TransportControls#play_E@ can be called to start playback. If the preparation is not needed, @B_android#media#session#MediaController#TransportControls#playFromMediaId_E@ can be directly called without this method.", "history": "Added in API level 24", "FullName": "public void prepareFromMediaId (String mediaId, Bundle extras)"}, "prepareFromUri(android.net.Uri, android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri: The URI of the requested media."], ["@B_android#os#Bundle_E@", "Bundle: Optional extras that can include extra information about the media item to be prepared."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Request that the player prepare playback for a specific @B_android#net#Uri_E@. In other words, other sessions can continue to play during the preparation of this session. This method can be used to speed up the start of the playback. Once the preparation is done, the session will change its playback state to @B_android#media#session#PlaybackState#STATE_PAUSED_E@. Afterwards, @B_android#media#session#MediaController#TransportControls#play_E@ can be called to start playback. If the preparation is not needed, @B_android#media#session#MediaController#TransportControls#playFromUri_E@ can be directly called without this method.", "history": "added in API level 24", "FullName": "public void prepareFromUri (Uri uri, Bundle extras)"}, "sendCustomAction(java.lang.String,android.os.Bundle)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The action identifier of the @B_android#media#session#PlaybackState#CustomAction_E@ as specified by the @B_android#media#session#MediaSession_E@. This value must never be null."], ["@B_android#os#Bundle_E@", "Bundle: Optional arguments to supply to the @B_android#media#session#MediaSession_E@ for this custom action. This value may be null."]], "Throws": [], "SeeAlso": ["@B_android#media#session#MediaController#TransportControls#sendCustomAction_E@"], "Permissions": [], "Description": "Send the id and args from a custom action back for the @B_android#media#session#MediaSession_E@ to perform.", "history": "Added in API level 21", "FullName": "public void sendCustomAction (String action, Bundle args)"}, "playFromUri(android.net.Uri, android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri: The URI of the requested media."], ["@B_android#os#Bundle_E@", "Bundle: Optional extras that can include extra information about the media item to be played."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Request that the player start playback for a specific @B_android#net#Uri_E@.", "history": "added in API level 23", "FullName": "public void playFromUri (Uri uri, Bundle extras)"}, "skipToNext()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Skip to the next item.", "history": "Added in API level 21", "FullName": "public void skipToNext ()"}, "playFromMediaId(java.lang.String,android.os.Bundle)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The id of the requested media."], ["@B_android#os#Bundle_E@", "Bundle: Optional extras that can include extra information about the media item to be played."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Request that the player start playback for a specific media id.", "history": "Added in API level 21", "FullName": "public void playFromMediaId (String mediaId, Bundle extras)"}, "prepareFromUri(android.net.Uri,android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri: The URI of the requested media."], ["@B_android#os#Bundle_E@", "Bundle: Optional extras that can include extra information about the media item to be prepared."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Request that the player prepare playback for a specific @B_android#net#Uri_E@. In other words, other sessions can continue to play during the preparation of this session. This method can be used to speed up the start of the playback. Once the preparation is done, the session will change its playback state to @B_android#media#session#PlaybackState#STATE_PAUSED_E@. Afterwards, @B_android#media#session#MediaController#TransportControls#play_E@ can be called to start playback. If the preparation is not needed, @B_android#media#session#MediaController#TransportControls#playFromUri_E@ can be directly called without this method.", "history": "Added in API level 24", "FullName": "public void prepareFromUri (Uri uri, Bundle extras)"}, "sendCustomAction(android.media.session.PlaybackState.CustomAction,android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#media#session#PlaybackState#CustomAction_E@", "PlaybackState.CustomAction: The action to perform. This value must never be null."], ["@B_android#os#Bundle_E@", "Bundle: Optional arguments to supply to the @B_android#media#session#MediaSession_E@ for this custom action. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Send a custom action back for the @B_android#media#session#MediaSession_E@ to perform.", "history": "Added in API level 21", "FullName": "public void sendCustomAction (PlaybackState.CustomAction customAction, Bundle args)"}, "prepare()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Request that the player prepare its playback. In other words, other sessions can continue to play during the preparation of this session. This method can be used to speed up the start of the playback. Once the preparation is done, the session will change its playback state to @B_android#media#session#PlaybackState#STATE_PAUSED_E@. Afterwards, @B_android#media#session#MediaController#TransportControls#play_E@ can be called to start playback.", "history": "Added in API level 24", "FullName": "public void prepare ()"}, "setRating(android.media.Rating)": {"Returns": [], "Parameters": [["@B_android#media#Rating_E@", "Rating: The rating to set for the current content"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Rate the current content. This will cause the rating to be set for the current user. The Rating type must match the type returned by @B_android#media#session#MediaController#getRatingType_E@.", "history": "Added in API level 21", "FullName": "public void setRating (Rating rating)"}, "fastForward()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Start fast forwarding. If playback is already fast forwarding this may increase the rate.", "history": "Added in API level 21", "FullName": "public void fastForward ()"}, "stop()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Request that the player stop its playback; it may clear its state in whatever way is appropriate.", "history": "Added in API level 21", "FullName": "public void stop ()"}, "pause()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Request that the player pause its playback and stay at its current position.", "history": "Added in API level 21", "FullName": "public void pause ()"}, "skipToPrevious()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Skip to the previous item.", "history": "Added in API level 21", "FullName": "public void skipToPrevious ()"}, "rewind()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Start rewinding. If playback is already rewinding this may increase the rate.", "history": "Added in API level 21", "FullName": "public void rewind ()"}, "play()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Request that the player start its playback at its current position.", "history": "Added in API level 21", "FullName": "public void play ()"}, "playFromSearch(java.lang.String,android.os.Bundle)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The search query."], ["@B_android#os#Bundle_E@", "Bundle: Optional extras that can include extra information about the query."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Request that the player start playback for a specific search query. An empty or null query should be treated as a request to play any music.", "history": "Added in API level 21", "FullName": "public void playFromSearch (String query, Bundle extras)"}, "seekTo(long)": {"Returns": [], "Parameters": [["long", "long: Position to move to, in milliseconds."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Move to a new location in the media stream.", "history": "Added in API level 21", "FullName": "public void seekTo (long pos)"}, "playFromUri(android.net.Uri,android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri: The URI of the requested media."], ["@B_android#os#Bundle_E@", "Bundle: Optional extras that can include extra information about the media item to be played."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Request that the player start playback for a specific @B_android#net#Uri_E@.", "history": "Added in API level 23", "FullName": "public void playFromUri (Uri uri, Bundle extras)"}, "prepareFromSearch(java.lang.String,android.os.Bundle)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The search query."], ["@B_android#os#Bundle_E@", "Bundle: Optional extras that can include extra information about the query."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Request that the player prepare playback for a specific search query. An empty or null query should be treated as a request to prepare any music. In other words, other sessions can continue to play during the preparation of this session. This method can be used to speed up the start of the playback. Once the preparation is done, the session will change its playback state to @B_android#media#session#PlaybackState#STATE_PAUSED_E@. Afterwards, @B_android#media#session#MediaController#TransportControls#play_E@ can be called to start playback. If the preparation is not needed, @B_android#media#session#MediaController#TransportControls#playFromSearch_E@ can be directly called without this method.", "history": "Added in API level 24", "FullName": "public void prepareFromSearch (String query, Bundle extras)"}}, "Inheritance": [], "ClassName": "android.media.session.MediaController.TransportControls", "ClassDesc": "Interface for controlling media playback on a session. This allows an app to send media transport commands to the session."}