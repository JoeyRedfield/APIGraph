{"Functions": {"set(T)": {"Returns": [], "Parameters": [["T", "T no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the stored value.", "history": "", "FullName": "void set (T value)"}, "ObservableField(T)": {"Returns": [], "Parameters": [["T", "T: The value to be wrapped as an observable."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Wraps the given object and creates an observable object", "history": "", "FullName": "ObservableField (T value)"}, "get()": {"Returns": [["T", "the stored value."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "T get ()"}, "ObservableField()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an empty observable object", "history": "", "FullName": "ObservableField ()"}}, "Inheritance": ["http:##developer#android#com@B_java#lang#Object_E@", "@B_android#databinding#BaseObservable_E@"], "ClassName": "android.databinding.ObservableField<T>", "ClassDesc": "An object wrapper to make it observable. Observable field classes may be used instead of creating an Observable object. It can also create a calculated field, depending on other fields:"}