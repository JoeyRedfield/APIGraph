{"Functions": {"setPhy(int)": {"Returns": [["@B_android#bluetooth#le#ScanSettings#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: Can be one of @B_android#bluetooth#BluetoothDevice#PHY_LE_1M_E@, @B_android#bluetooth#BluetoothDevice#PHY_LE_CODED_E@ or @B_android#bluetooth#le#ScanSettings#PHY_LE_ALL_SUPPORTED_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the Physical Layer to use during this scan. This is used only if @B_android#bluetooth#le#ScanSettings#Builder#setLegacy_E@ is set to false. @B_android#bluetooth#BluetoothAdapter#isLeCodedPhySupported_E@ may be used to check whether LE Coded phy is supported by calling @B_android#bluetooth#BluetoothAdapter#isLeCodedPhySupported_E@. Selecting an unsupported phy will result in failure to start scan.", "history": "Added in API level 26", "FullName": "public ScanSettings.Builder setPhy (int phy)"}, "setLegacy(boolean)": {"Returns": [["@B_android#bluetooth#le#ScanSettings#Builder_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean: true if only legacy advertisements will be returned"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set whether only legacy advertisments should be returned in scan results. Legacy advertisements include advertisements as specified by the Bluetooth core specification 4.2 and below. This is true by default for compatibility with older apps.", "history": "Added in API level 26", "FullName": "public ScanSettings.Builder setLegacy (boolean legacy)"}, "setScanMode(int)": {"Returns": [["@B_android#bluetooth#le#ScanSettings#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: The scan mode can be one of @B_android#bluetooth#le#ScanSettings#SCAN_MODE_LOW_POWER_E@, @B_android#bluetooth#le#ScanSettings#SCAN_MODE_BALANCED_E@ or @B_android#bluetooth#le#ScanSettings#SCAN_MODE_LOW_LATENCY_E@."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the scanMode is invalid."]], "SeeAlso": [], "Permissions": [], "Description": "Set scan mode for Bluetooth LE scan.", "history": "Added in API level 21", "FullName": "public ScanSettings.Builder setScanMode (int scanMode)"}, "ScanSettings.Builder()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 21", "FullName": "public ScanSettings.Builder ()"}, "setNumOfMatches(int)": {"Returns": [["@B_android#bluetooth#le#ScanSettings#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: The num of matches can be one of @B_android#bluetooth#le#ScanSettings#MATCH_NUM_ONE_ADVERTISEMENT_E@ or @B_android#bluetooth#le#ScanSettings#MATCH_NUM_FEW_ADVERTISEMENT_E@ or @B_android#bluetooth#le#ScanSettings#MATCH_NUM_MAX_ADVERTISEMENT_E@"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the matchMode is invalid."]], "SeeAlso": [], "Permissions": [], "Description": "Set the number of matches for Bluetooth LE scan filters hardware match", "history": "Added in API level 23", "FullName": "public ScanSettings.Builder setNumOfMatches (int numOfMatches)"}, "setMatchMode(int)": {"Returns": [["@B_android#bluetooth#le#ScanSettings#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: The match mode can be one of @B_android#bluetooth#le#ScanSettings#MATCH_MODE_AGGRESSIVE_E@ or @B_android#bluetooth#le#ScanSettings#MATCH_MODE_STICKY_E@"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the matchMode is invalid."]], "SeeAlso": [], "Permissions": [], "Description": "Set match mode for Bluetooth LE scan filters hardware match", "history": "Added in API level 23", "FullName": "public ScanSettings.Builder setMatchMode (int matchMode)"}, "setCallbackType(int)": {"Returns": [["@B_android#bluetooth#le#ScanSettings#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: The callback type flags for the scan."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the callbackType is invalid."]], "SeeAlso": [], "Permissions": [], "Description": "Set callback type for Bluetooth LE scan.", "history": "Added in API level 23", "FullName": "public ScanSettings.Builder setCallbackType (int callbackType)"}, "build()": {"Returns": [["@B_android#bluetooth#le#ScanSettings_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Build @B_android#bluetooth#le#ScanSettings_E@.", "history": "Added in API level 21", "FullName": "public ScanSettings build ()"}, "setReportDelay(long)": {"Returns": [["@B_android#bluetooth#le#ScanSettings#Builder_E@", "no returns description in source"]], "Parameters": [["long", "long: Delay of report in milliseconds. Set to 0 to be notified of results immediately. Values > 0 causes the scan results to be queued up and delivered after the requested delay or when the internal buffers fill up."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If reportDelayMillis < 0."]], "SeeAlso": [], "Permissions": [], "Description": "Set report delay timestamp for Bluetooth LE scan.", "history": "Added in API level 21", "FullName": "public ScanSettings.Builder setReportDelay (long reportDelayMillis)"}}, "Inheritance": [], "ClassName": "android.bluetooth.le.ScanSettings.Builder", "ClassDesc": "Builder for @B_android#bluetooth#le#ScanSettings_E@."}