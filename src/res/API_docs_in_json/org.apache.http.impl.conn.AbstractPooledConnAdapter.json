{"Functions": {"AbstractPooledConnAdapter(org.apache.http.conn.ClientConnectionManager, org.apache.http.impl.conn.AbstractPoolEntry)": {"Returns": [], "Parameters": [["@B_org#apache#http#conn#ClientConnectionManager_E@", "the connection manager"], ["@B_org#apache#http#impl#conn#AbstractPoolEntry_E@", "the pool entry for the connection being wrapped"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new connection adapter.", "history": "Added in API level 1", "FullName": "protected AbstractPooledConnAdapter (ClientConnectionManager manager, AbstractPoolEntry entry)"}, "getState()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public Object getState ()"}, "close()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public void close ()"}, "setState(java.lang.Object)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public void setState (Object state)"}, "tunnelTarget(boolean, org.apache.http.params.HttpParams)": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public void tunnelTarget (boolean secure, HttpParams params)"}, "shutdown()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public void shutdown ()"}, "assertAttached()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#lang#IllegalStateException_E@", "if it is @B_org#apache#http#impl#conn#AbstractPooledConnAdapter#detach_E@ed"]], "SeeAlso": [], "Permissions": [], "Description": "Asserts that this adapter is still attached.", "history": "Added in API level 1", "FullName": "protected final void assertAttached ()"}, "getRoute()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public HttpRoute getRoute ()"}, "tunnelProxy(org.apache.http.HttpHost, boolean, org.apache.http.params.HttpParams)": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public void tunnelProxy (HttpHost next, boolean secure, HttpParams params)"}, "layerProtocol(org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams)": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public void layerProtocol (HttpContext context, HttpParams params)"}, "detach()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Detaches this adapter from the wrapped connection. This adapter becomes useless.", "history": "Added in API level 1", "FullName": "protected void detach ()"}, "open(org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams)": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public void open (HttpRoute route, HttpContext context, HttpParams params)"}}, "Inheritance": ["@B_org#apache#http#impl#conn#AbstractClientConnAdapter_E@"], "ClassName": "org.apache.http.impl.conn.AbstractPooledConnAdapter", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Abstract adapter from pool @B_org#apache#http#impl#conn#AbstractPoolEntry_E@ to @B_org#apache#http#conn#ManagedClientConnection_E@ client connections. The connection in the pool entry is used to initialize the base class. In addition, methods to establish a route are delegated to the pool entry. @B_org#apache#http#impl#conn#AbstractPooledConnAdapter#shutdown_E@ and @B_org#apache#http#impl#conn#AbstractPooledConnAdapter#close_E@ will clear the tracked route in the pool entry and call the respective method of the wrapped connection."}