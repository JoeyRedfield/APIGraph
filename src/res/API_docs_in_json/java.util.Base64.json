{"Functions": {"getUrlDecoder()": {"Returns": [["@B_java#util#Base64#Decoder_E@", "A Base64 decoder."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_java#util#Base64#Decoder_E@ that decodes using the", "history": "Added in API level 26", "FullName": "public static Base64.Decoder getUrlDecoder ()"}, "getMimeEncoder(int, byte[])": {"Returns": [["@B_java#util#Base64#Encoder_E@", "A Base64 encoder."]], "Parameters": [["int", "int: the length of each output line (rounded down to nearest multiple of 4). If lineLength <= 0 the output will not be separated in lines"], ["byte[]", "byte: the line separator for each output line"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if lineSeparator includes any character of \"The Base64 Alphabet\" as specified in Table 1 of RFC 2045."]], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_java#util#Base64#Encoder_E@ that encodes using the", "history": "added in API level 26", "FullName": "public static Base64.Encoder getMimeEncoder (int lineLength, byte[] lineSeparator)"}, "getDecoder()": {"Returns": [["@B_java#util#Base64#Decoder_E@", "A Base64 decoder."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_java#util#Base64#Decoder_E@ that decodes using the", "history": "Added in API level 26", "FullName": "public static Base64.Decoder getDecoder ()"}, "getMimeEncoder(int,byte[])": {"Returns": [["@B_java#util#Base64#Encoder_E@", "A Base64 encoder."]], "Parameters": [["int", "int: the length of each output line (rounded down to nearest multiple of 4). If lineLength <= 0 the output will not be separated in lines"], ["byte[]", "byte: the line separator for each output line"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if lineSeparator includes any character of \"The Base64 Alphabet\" as specified in Table 1 of RFC 2045."]], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_java#util#Base64#Encoder_E@ that encodes using the", "history": "Added in API level 26", "FullName": "public static Base64.Encoder getMimeEncoder (int lineLength, byte[] lineSeparator)"}, "getUrlEncoder()": {"Returns": [["@B_java#util#Base64#Encoder_E@", "A Base64 encoder."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_java#util#Base64#Encoder_E@ that encodes using the", "history": "Added in API level 26", "FullName": "public static Base64.Encoder getUrlEncoder ()"}, "getMimeDecoder()": {"Returns": [["@B_java#util#Base64#Decoder_E@", "A Base64 decoder."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_java#util#Base64#Decoder_E@ that decodes using the", "history": "Added in API level 26", "FullName": "public static Base64.Decoder getMimeDecoder ()"}, "getEncoder()": {"Returns": [["@B_java#util#Base64#Encoder_E@", "A Base64 encoder."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_java#util#Base64#Encoder_E@ that encodes using the", "history": "Added in API level 26", "FullName": "public static Base64.Encoder getEncoder ()"}, "getMimeEncoder()": {"Returns": [["@B_java#util#Base64#Encoder_E@", "A Base64 encoder."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_java#util#Base64#Encoder_E@ that encodes using the", "history": "Added in API level 26", "FullName": "public static Base64.Encoder getMimeEncoder ()"}}, "Inheritance": [], "ClassName": "java.util.Base64", "ClassDesc": "This class consists exclusively of static methods for obtaining encoders and decoders for the Base64 encoding scheme. The implementation of this class supports the following types of Base64 as specified in Uses \"The Base64 Alphabet\" as specified in Table 1 of RFC 4648 and RFC 2045 for encoding and decoding operation. The encoder does not add any line feed (line separator) character. The decoder rejects data that contains characters outside the base64 alphabet. Uses the \"URL and Filename safe Base64 Alphabet\" as specified in Table 2 of RFC 4648 for encoding and decoding. The encoder does not add any line feed (line separator) character. The decoder rejects data that contains characters outside the base64 alphabet. Uses the \"The Base64 Alphabet\" as specified in Table 1 of RFC 2045 for encoding and decoding operation. The encoded output must be represented in lines of no more than 76 characters each and uses a carriage return '\\r' followed immediately by a linefeed '\\n' as the line separator. No line separator is added to the end of the encoded output. All line separators or other characters not found in the base64 alphabet table are ignored in decoding operation. Unless otherwise noted, passing a null argument to a method of this class will cause a @B_java#lang#NullPointerException_E@ to be thrown."}