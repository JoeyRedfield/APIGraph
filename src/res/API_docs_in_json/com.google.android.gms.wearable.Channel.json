{"Functions": {"removeListener(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.wearable.ChannelApi.ChannelListener)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "a connected client"], ["@B_com#google#android#gms#wearable#ChannelApi#ChannelListener_E@", "a listener which was added using @B_com#google#android#gms#wearable#Channel#addListener_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes a listener which was previously added through @B_com#google#android#gms#wearable#Channel#addListener_E@.", "history": "", "FullName": "public abstract PendingResult<Status> removeListener (GoogleApiClient client, ChannelApi.ChannelListener listener)"}, "close(com.google.android.gms.common.api.GoogleApiClient)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "a connected client"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Closes this channel, making any future operations on it invalid. This method behaves like @B_com#google#android#gms#wearable#Channel#close_E@, with errorCode == 0.", "history": "", "FullName": "public abstract PendingResult<Status> close (GoogleApiClient client)"}, "getOutputStream(com.google.android.gms.common.api.GoogleApiClient)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "a connected client"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Opens the output side of the channel to send data to the remote node. Methods on the returned output stream may throw @B_com#google#android#gms#wearable#ChannelIOException_E@. See @B_com#google#android#gms#wearable#Channel#GetOutputStreamResult#getOutputStream_E@ This method should only be used once on any channel, and once it was called, @B_com#google#android#gms#wearable#Channel#sendFile_E@ cannot be used.", "history": "", "FullName": "public abstract PendingResult<Channel.GetOutputStreamResult> getOutputStream (GoogleApiClient client)"}, "close(com.google.android.gms.common.api.GoogleApiClient, int)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "a connected client"], ["int", "an app-defined error code to pass to the remote node"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Closes this channel, passing an application-defined error code to the remote node. The error code will be passed to @B_com#google#android#gms#wearable#ChannelApi#ChannelListener#onChannelClosed_E@, and will cause remote reads and writes to the channel to fail with @B_com#google#android#gms#wearable#ChannelIOException_E@. The @B_java#io#InputStream_E@ and @B_java#io#OutputStream_E@ returned from @B_com#google#android#gms#wearable#Channel#getInputStream_E@ or @B_com#google#android#gms#wearable#Channel#getOutputStream_E@ should be closed prior to calling this method. If they are not, both streams will throw @B_com#google#android#gms#wearable#ChannelIOException_E@ on the next read or write operation. errorCode == 0 is used to indicate that no error occurred.", "history": "", "FullName": "public abstract PendingResult<Status> close (GoogleApiClient client, int errorCode)"}, "sendFile(com.google.android.gms.common.api.GoogleApiClient, android.net.Uri, long, long)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "a connected client"], ["Uri", "URI of the file from which data should be read. This should be a @B_android#net#Uri#fromFile_E@ for a file which is accessible to the current process for reading."], ["long", "byte offset from which to start reading"], ["long", "maximum number of bytes to read from the file, or -1 if the file should be read to its end. If the file doesn't contain enough bytes to reach length, fewer bytes will be read."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads from a file into the output side of the channel. This is equivalent to calling @B_com#google#android#gms#wearable#Channel#getOutputStream_E@, reading from a file and writing into the @B_java#io#OutputStream_E@, but is implemented more efficiently. Reading from the file will be done in a background process owned by Google Play Services. This method should only be used once on any channel, and once it was called, @B_com#google#android#gms#wearable#Channel#getOutputStream_E@ cannot be used. The channel should not be immediately closed after calling this method. To be notified when the file has been sent, install a @B_com#google#android#gms#wearable#ChannelApi#ChannelListener_E@, with an implementation of @B_com#google#android#gms#wearable#ChannelApi#ChannelListener#onOutputClosed_E@.", "history": "", "FullName": "public abstract PendingResult<Status> sendFile (GoogleApiClient client, Uri uri, long startOffset, long length)"}, "addListener(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.wearable.ChannelApi.ChannelListener)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "a connected client"], ["@B_com#google#android#gms#wearable#ChannelApi#ChannelListener_E@", "a listener which will be notified of changes to the specified stream"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers a listener to be notified of events for this channel. This is the same as @B_com#google#android#gms#wearable#ChannelApi#addListener_E@, but the listener will only be notified of events for this channel. The listener will not receive @B_com#google#android#gms#wearable#ChannelApi#ChannelListener#onChannelOpened_E@ events. Calls to this method should balanced with @B_com#google#android#gms#wearable#Channel#removeListener_E@ to avoid leaking resources.", "history": "", "FullName": "public abstract PendingResult<Status> addListener (GoogleApiClient client, ChannelApi.ChannelListener listener)"}, "receiveFile(com.google.android.gms.common.api.GoogleApiClient, android.net.Uri, boolean)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "a connected client"], ["Uri", "URI of the file into which data should be written. This should be a @B_android#net#Uri#fromFile_E@ for a file which is accessible to the current process for writing."], ["boolean", "if true, data from the channel will be appended to the file, instead of overwriting it."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads input from this channel into a file. This is equivalent to calling @B_com#google#android#gms#wearable#Channel#getInputStream_E@, reading from the input stream and writing it to a file, but is implemented more efficiently. Writing to the file will be done in a background process owned by Google Play Services. This method should only be used once on any channel, and once it was called, @B_com#google#android#gms#wearable#Channel#getInputStream_E@ cannot be used. The channel should not be immediately closed after calling this method. To be notified when the file is ready, install a @B_com#google#android#gms#wearable#ChannelApi#ChannelListener_E@, with an implementation of @B_com#google#android#gms#wearable#ChannelApi#ChannelListener#onInputClosed_E@.", "history": "", "FullName": "public abstract PendingResult<Status> receiveFile (GoogleApiClient client, Uri uri, boolean append)"}, "getInputStream(com.google.android.gms.common.api.GoogleApiClient)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "a connected client"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Opens the input side of the channel to receive data from the remote node. Methods on the returned input stream may throw @B_com#google#android#gms#wearable#ChannelIOException_E@. See @B_com#google#android#gms#wearable#Channel#GetInputStreamResult#getInputStream_E@ This method should only be used once on any channel, and once it was called, @B_com#google#android#gms#wearable#Channel#receiveFile_E@ cannot be used.", "history": "", "FullName": "public abstract PendingResult<Channel.GetInputStreamResult> getInputStream (GoogleApiClient client)"}, "sendFile(com.google.android.gms.common.api.GoogleApiClient, android.net.Uri)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "a connected client"], ["Uri", "URI of the file from which data should be read. This should be a @B_android#net#Uri#fromFile_E@ for a file which is accessible to the current process for reading."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads from a file into the output side of the channel. This is equivalent to calling @B_com#google#android#gms#wearable#Channel#getOutputStream_E@, reading from a file and writing into the @B_java#io#OutputStream_E@, but is implemented more efficiently. Reading from the file will be done in a background process owned by Google Play Services. This method should only be used once on any channel, and once it was called, @B_com#google#android#gms#wearable#Channel#getOutputStream_E@ cannot be used. The channel should not be immediately closed after calling this method. To be notified when the file has been sent, install a @B_com#google#android#gms#wearable#ChannelApi#ChannelListener_E@, with an implementation of @B_com#google#android#gms#wearable#ChannelApi#ChannelListener#onOutputClosed_E@. This method is identical to calling @B_com#google#android#gms#wearable#Channel#sendFile_E@ with offset == 0 and length == -1.", "history": "", "FullName": "public abstract PendingResult<Status> sendFile (GoogleApiClient client, Uri uri)"}, "getPath()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the path that was used to open the channel.", "history": "", "FullName": "public abstract String getPath ()"}, "getNodeId()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the node ID of the node on the other side of the channel.", "history": "", "FullName": "public abstract String getNodeId ()"}}, "Inheritance": [], "ClassName": "com.google.android.gms.wearable.Channel", "ClassDesc": "A channel created through @B_com#google#android#gms#wearable#ChannelApi#openChannel_E@. The implementation of this interface is parcelable and immutable, and implements reasonable @B_java#lang#Object#equals_E@ and @B_java#lang#Object#hashCode_E@ methods, so can be used in collections."}