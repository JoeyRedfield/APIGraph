{"Functions": {"getDefaultParseOptions()": {"Returns": [["@B_java#util#EnumSet_E@", "the default parse options."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#ParseOption_E@"], "Permissions": [], "Description": "Returns the default parse options used by this TimeZoneFormat instance.", "history": "Added in API level 24", "FullName": "public EnumSet<TimeZoneFormat.ParseOption> getDefaultParseOptions ()"}, "TimeZoneFormat(android.icu.util.ULocale)": {"Returns": [], "Parameters": [["@B_android#icu#util#ULocale_E@", "ULocale: the locale"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The protected constructor for subclassing.", "history": "Added in API level 24", "FullName": "protected TimeZoneFormat (ULocale locale)"}, "formatOffsetLocalizedGMT(int)": {"Returns": [["@B_java#lang#String_E@", "the localized GMT format string"]], "Parameters": [["int", "int: the offset from GMT(UTC) in milliseconds."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the specified offset is out of supported range (-24 hours < offset < +24 hours)."]], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#parseOffsetLocalizedGMT_E@"], "Permissions": [], "Description": "Returns the localized GMT(UTC) offset format for the given offset. The localized GMT offset is defined by; GMT format pattern (e.g. \"GMT {0}\" - see @B_android#icu#text#TimeZoneFormat#getGMTPattern_E@) Offset time pattern (e.g. \"+HH:mm\" - see @B_android#icu#text#TimeZoneFormat#getGMTOffsetPattern_E@) Offset digits (e.g. \"0123456789\" - see @B_android#icu#text#TimeZoneFormat#getGMTOffsetDigits_E@) GMT zero format (e.g. \"GMT\" - see @B_android#icu#text#TimeZoneFormat#getGMTZeroFormat_E@) This format always uses 2 digit hours and minutes. When the given offset has non-zero seconds, 2 digit seconds field will be appended. For example, GMT+05:00 and GMT+05:28:06.", "history": "Added in API level 24", "FullName": "public String formatOffsetLocalizedGMT (int offset)"}, "formatOffsetISO8601Basic(int,boolean,boolean,boolean)": {"Returns": [["@B_java#lang#String_E@", "the ISO 8601 basic format."]], "Parameters": [["int", "int: the offset from GMT(UTC) in milliseconds."], ["boolean", "boolean: true if ISO 8601 UTC indicator \"Z\" is used when the offset is 0."], ["boolean", "boolean: true if shortest form is used."], ["boolean", "boolean: true if non-zero offset seconds is appended."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the specified offset is out of supported range (-24 hours < offset < +24 hours)."]], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#formatOffsetISO8601Extended_E@", "@B_android#icu#text#TimeZoneFormat#parseOffsetISO8601_E@"], "Permissions": [], "Description": "Returns the ISO 8601 basic time zone string for the given offset. For example, \"-08\", \"-0830\" and \"Z\"", "history": "Added in API level 24", "FullName": "public final String formatOffsetISO8601Basic (int offset, boolean useUtcIndicator, boolean isShort, boolean ignoreSeconds)"}, "setGMTPattern(java.lang.String)": {"Returns": [["@B_android#icu#text#TimeZoneFormat_E@", "this object."]], "Parameters": [["@B_java#lang#String_E@", "String: the localized GMT format pattern string"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "when the pattern string does not contain \"{0}\""], ["@B_java#lang#UnsupportedOperationException_E@", "when this object is frozen."]], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#getGMTPattern_E@"], "Permissions": [], "Description": "Sets the localized GMT format pattern. The pattern must contain a single argument {0}, for example \"GMT {0}\".", "history": "Added in API level 24", "FullName": "public TimeZoneFormat setGMTPattern (String pattern)"}, "getGMTOffsetPattern(android.icu.text.TimeZoneFormat.GMTOffsetPatternType)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["@B_android#icu#text#TimeZoneFormat#GMTOffsetPatternType_E@", "TimeZoneFormat.GMTOffsetPatternType: the offset pattern enum"]], "Throws": [], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#setGMTOffsetPattern_E@"], "Permissions": [], "Description": "Returns the offset pattern used for localized GMT format.", "history": "Added in API level 24", "FullName": "public String getGMTOffsetPattern (TimeZoneFormat.GMTOffsetPatternType type)"}, "setTimeZoneNames(android.icu.text.TimeZoneNames)": {"Returns": [["@B_android#icu#text#TimeZoneFormat_E@", "this object."]], "Parameters": [["@B_android#icu#text#TimeZoneNames_E@", "TimeZoneNames: the time zone display name data."]], "Throws": [["@B_java#lang#UnsupportedOperationException_E@", "when this object is frozen."]], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#getTimeZoneNames_E@"], "Permissions": [], "Description": "Sets the time zone display name data to this instance.", "history": "Added in API level 24", "FullName": "public TimeZoneFormat setTimeZoneNames (TimeZoneNames tznames)"}, "getGMTPattern()": {"Returns": [["@B_java#lang#String_E@", "the localized GMT format pattern."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#setGMTPattern_E@"], "Permissions": [], "Description": "Returns the localized GMT format pattern.", "history": "Added in API level 24", "FullName": "public String getGMTPattern ()"}, "getGMTOffsetDigits()": {"Returns": [["@B_java#lang#String_E@", "the decimal digits for localized GMT format."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#setGMTOffsetDigits_E@"], "Permissions": [], "Description": "Returns the decimal digit characters used for localized GMT format in a single string containing from 0 to 9 in the ascending order.", "history": "Added in API level 24", "FullName": "public String getGMTOffsetDigits ()"}, "setGMTOffsetPattern(android.icu.text.TimeZoneFormat.GMTOffsetPatternType,java.lang.String)": {"Returns": [["@B_android#icu#text#TimeZoneFormat_E@", "this object."]], "Parameters": [["@B_android#icu#text#TimeZoneFormat#GMTOffsetPatternType_E@", "TimeZoneFormat.GMTOffsetPatternType: the offset pattern."], ["@B_java#lang#String_E@", "String: the pattern string."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "when the pattern string does not have required time field letters."], ["@B_java#lang#UnsupportedOperationException_E@", "when this object is frozen."]], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#getGMTOffsetPattern_E@"], "Permissions": [], "Description": "Sets the offset pattern for the given offset type.", "history": "Added in API level 24", "FullName": "public TimeZoneFormat setGMTOffsetPattern (TimeZoneFormat.GMTOffsetPatternType type, String pattern)"}, "format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)": {"Returns": [["@B_java#lang#StringBuffer_E@", "the string buffer passed in as toAppendTo, with formatted text appended"]], "Parameters": [["@B_java#lang#Object_E@", "Object: The object to format"], ["@B_java#lang#StringBuffer_E@", "StringBuffer: where the text is to be appended"], ["@B_java#text#FieldPosition_E@", "FieldPosition: A FieldPosition identifying a field in the formatted text"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Formats an object and appends the resulting text to a given string buffer. If the pos argument identifies a field used by the format, then its indices are set to the beginning and end of the first such field encountered.", "history": "Added in API level 24", "FullName": "public StringBuffer format (Object obj, StringBuffer toAppendTo, FieldPosition pos)"}, "parse(java.lang.String)": {"Returns": [["@B_android#icu#util#TimeZone_E@", "A TimeZone."]], "Parameters": [["@B_java#lang#String_E@", "String: the time zone string"]], "Throws": [["@B_java#text#ParseException_E@", "when the input could not be parsed as a time zone string."]], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#parse_E@"], "Permissions": [], "Description": "Returns a TimeZone for the given text. @B_android#icu#text#TimeZoneFormat#parse_E@.", "history": "Added in API level 24", "FullName": "public final TimeZone parse (String text)"}, "parse(android.icu.text.TimeZoneFormat.Style,java.lang.String,java.text.ParsePosition,android.icu.util.Output<android.icu.text.TimeZoneFormat.TimeType>)": {"Returns": [["@B_android#icu#util#TimeZone_E@", "A TimeZone, or null if the input could not be parsed."]], "Parameters": [["@B_android#icu#text#TimeZoneFormat#Style_E@", "TimeZoneFormat.Style: the format style"], ["@B_java#lang#String_E@", "String: the text contains a time zone string at the position."], ["@B_java#text#ParsePosition_E@", "ParsePosition: the position."], ["@B_android#icu#util#Output_E@", "Output: The output argument for receiving the time type (standard/daylight/unknown), or specify null if the information is not necessary."]], "Throws": [], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#Style_E@", "@B_android#icu#text#TimeZoneFormat#parse_E@", "@B_android#icu#text#TimeZoneFormat#format_E@", "@B_android#icu#text#TimeZoneFormat#setDefaultParseOptions_E@"], "Permissions": [], "Description": "Returns a TimeZone by parsing the time zone string according to the parse position, the style and the default parse options. @B_android#icu#text#TimeZoneFormat#parse_E@.", "history": "Added in API level 24", "FullName": "public TimeZone parse (TimeZoneFormat.Style style, String text, ParsePosition pos, Output<TimeZoneFormat.TimeType> timeType)"}, "setGMTZeroFormat(java.lang.String)": {"Returns": [["@B_android#icu#text#TimeZoneFormat_E@", "this object."]], "Parameters": [["@B_java#lang#String_E@", "String: the localized GMT format string for GMT(UTC)."]], "Throws": [["@B_java#lang#UnsupportedOperationException_E@", "when this object is frozen."]], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#getGMTZeroFormat_E@"], "Permissions": [], "Description": "Sets the localized GMT format string for GMT(UTC) itself (GMT offset is 0).", "history": "Added in API level 24", "FullName": "public TimeZoneFormat setGMTZeroFormat (String gmtZeroFormat)"}, "format(android.icu.text.TimeZoneFormat.Style,android.icu.util.TimeZone,long,android.icu.util.Output<android.icu.text.TimeZoneFormat.TimeType>)": {"Returns": [["@B_java#lang#String_E@", "the display name of the time zone."]], "Parameters": [["@B_android#icu#text#TimeZoneFormat#Style_E@", "TimeZoneFormat.Style: the style enum (e.g. GENERIC_LONG, LOCALIZED_GMT...)"], ["@B_android#icu#util#TimeZone_E@", "TimeZone: the time zone."], ["long", "long: the date."], ["@B_android#icu#util#Output_E@", "Output: the output argument for receiving the time type (standard/daylight/unknown) used for the display name, or specify null if the information is not necessary."]], "Throws": [], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#Style_E@", "@B_android#icu#text#TimeZoneFormat#format_E@"], "Permissions": [], "Description": "Returns the display name of the time zone at the given date for the style. This method takes an extra argument Output<TimeType> timeType in addition to the argument list of @B_android#icu#text#TimeZoneFormat#format_E@. The argument is used for receiving the time type (standard time or daylight saving time, or unknown) actually used for the display name.", "history": "Added in API level 24", "FullName": "public String format (TimeZoneFormat.Style style, TimeZone tz, long date, Output<TimeZoneFormat.TimeType> timeType)"}, "isFrozen()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Determines whether the object has been frozen or not.", "history": "Added in API level 24", "FullName": "public boolean isFrozen ()"}, "formatOffsetShortLocalizedGMT(int)": {"Returns": [["@B_java#lang#String_E@", "the short localized GMT format string"]], "Parameters": [["int", "int: the offset from GMT(UTC) in milliseconds."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the specified offset is out of supported range (-24 hours < offset < +24 hours)."]], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#parseOffsetLocalizedGMT_E@"], "Permissions": [], "Description": "Returns the short localized GMT(UTC) offset format for the given offset. The short localized GMT offset is defined by; GMT format pattern (e.g. \"GMT {0}\" - see @B_android#icu#text#TimeZoneFormat#getGMTPattern_E@) Offset time pattern (e.g. \"+HH:mm\" - see @B_android#icu#text#TimeZoneFormat#getGMTOffsetPattern_E@) Offset digits (e.g. \"0123456789\" - see @B_android#icu#text#TimeZoneFormat#getGMTOffsetDigits_E@) GMT zero format (e.g. \"GMT\" - see @B_android#icu#text#TimeZoneFormat#getGMTZeroFormat_E@) This format uses the shortest representation of offset. The hours field does not have leading zero and lower fields with zero will be truncated. For example, GMT+5 and GMT+530.", "history": "Added in API level 24", "FullName": "public String formatOffsetShortLocalizedGMT (int offset)"}, "setDefaultParseOptions(java.util.EnumSet<android.icu.text.TimeZoneFormat.ParseOption>)": {"Returns": [["@B_android#icu#text#TimeZoneFormat_E@", "this object."]], "Parameters": [["@B_java#util#EnumSet_E@", "EnumSet: the default parse options."]], "Throws": [], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#ParseOption_E@"], "Permissions": [], "Description": "Sets the default parse options. TimeZoneFormat created by @B_android#icu#text#TimeZoneFormat#getInstance_E@ has no parse options set.", "history": "Added in API level 24", "FullName": "public TimeZoneFormat setDefaultParseOptions (EnumSet<TimeZoneFormat.ParseOption> options)"}, "parse(android.icu.text.TimeZoneFormat.Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet<android.icu.text.TimeZoneFormat.ParseOption>,android.icu.util.Output<android.icu.text.TimeZoneFormat.TimeType>)": {"Returns": [["@B_android#icu#util#TimeZone_E@", "A TimeZone, or null if the input could not be parsed."]], "Parameters": [["@B_android#icu#text#TimeZoneFormat#Style_E@", "TimeZoneFormat.Style: the format style."], ["@B_java#lang#String_E@", "String: the text contains a time zone string at the position."], ["@B_java#text#ParsePosition_E@", "ParsePosition: the position."], ["@B_java#util#EnumSet_E@", "EnumSet: the parse options."], ["@B_android#icu#util#Output_E@", "Output: The output argument for receiving the time type (standard/daylight/unknown), or specify null if the information is not necessary."]], "Throws": [], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#Style_E@", "@B_android#icu#text#TimeZoneFormat#format_E@"], "Permissions": [], "Description": "Returns a TimeZone by parsing the time zone string according to the parse position, the style and the parse options.", "history": "Added in API level 24", "FullName": "public TimeZone parse (TimeZoneFormat.Style style, String text, ParsePosition pos, EnumSet<TimeZoneFormat.ParseOption> options, Output<TimeZoneFormat.TimeType> timeType)"}, "parse(java.lang.String, java.text.ParsePosition)": {"Returns": [["@B_android#icu#util#TimeZone_E@", "A TimeZone, or null if the input could not be parsed."]], "Parameters": [["@B_java#lang#String_E@", "String: the text contains a time zone string at the position."], ["@B_java#text#ParsePosition_E@", "ParsePosition: the position."]], "Throws": [], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#parse_E@"], "Permissions": [], "Description": "Returns a TimeZone by parsing the time zone string according to the given parse position. @B_android#icu#text#TimeZoneFormat#parse_E@.", "history": "added in API level 24", "FullName": "public final TimeZone parse (String text, ParsePosition pos)"}, "cloneAsThawed()": {"Returns": [["@B_android#icu#text#TimeZoneFormat_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Provides for the clone operation. Any clone is initially unfrozen.", "history": "Added in API level 24", "FullName": "public TimeZoneFormat cloneAsThawed ()"}, "getInstance(android.icu.util.ULocale)": {"Returns": [["@B_android#icu#text#TimeZoneFormat_E@", "a frozen instance of TimeZoneFormat for the given locale."]], "Parameters": [["@B_android#icu#util#ULocale_E@", "ULocale: the locale."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a frozen instance of TimeZoneFormat for the given locale. @B_android#icu#text#TimeZoneFormat#cloneAsThawed_E@ to get a thawed copy first.", "history": "Added in API level 24", "FullName": "public static TimeZoneFormat getInstance (ULocale locale)"}, "parseObject(java.lang.String,java.text.ParsePosition)": {"Returns": [["@B_java#lang#Object_E@", "An Object parsed from the string. In case of error, returns null."]], "Parameters": [["@B_java#lang#String_E@", "String: A String, part of which should be parsed."], ["@B_java#text#ParsePosition_E@", "ParsePosition: A ParsePosition object with index and error index information as described above."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Parses text from a string to produce an object. The method attempts to parse text starting at the index given by pos. If parsing succeeds, then the index of pos is updated to the index after the last character used (parsing does not necessarily use all characters up to the end of the string), and the parsed object is returned. The updated pos can be used to indicate the starting point for the next call to this method. If an error occurs, then the index of pos is not changed, the error index of pos is set to the index of the character where the error occurred, and null is returned.", "history": "Added in API level 24", "FullName": "public Object parseObject (String source, ParsePosition pos)"}, "parseOffsetISO8601(java.lang.String,java.text.ParsePosition)": {"Returns": [["int", "the offset from GMT(UTC) in milliseconds for the given ISO 8601 style time zone string."]], "Parameters": [["@B_java#lang#String_E@", "String: the text contains ISO 8601 style time zone string (e.g. \"-08\", \"-0800\", \"-08:00\", and \"Z\") at the position."], ["@B_java#text#ParsePosition_E@", "ParsePosition: the position."]], "Throws": [], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#formatOffsetISO8601Basic_E@", "@B_android#icu#text#TimeZoneFormat#formatOffsetISO8601Extended_E@"], "Permissions": [], "Description": "Returns offset from GMT(UTC) in milliseconds for the given ISO 8601 basic or extended time zone string. When the given string is not an ISO 8601 time zone string, this method sets the current position as the error index to ParsePosition pos and returns 0.", "history": "Added in API level 24", "FullName": "public final int parseOffsetISO8601 (String text, ParsePosition pos)"}, "getTimeZoneNames()": {"Returns": [["@B_android#icu#text#TimeZoneNames_E@", "the time zone display name data."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#setTimeZoneNames_E@"], "Permissions": [], "Description": "Returns the time zone display name data used by this instance.", "history": "Added in API level 24", "FullName": "public TimeZoneNames getTimeZoneNames ()"}, "freeze()": {"Returns": [["@B_android#icu#text#TimeZoneFormat_E@", "the object itself."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Freezes the object.", "history": "Added in API level 24", "FullName": "public TimeZoneFormat freeze ()"}, "setGMTOffsetDigits(java.lang.String)": {"Returns": [["@B_android#icu#text#TimeZoneFormat_E@", "this object."]], "Parameters": [["@B_java#lang#String_E@", "String: a string contains the decimal digit characters from 0 to 9 n the ascending order."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "when the string did not contain ten characters."], ["@B_java#lang#UnsupportedOperationException_E@", "when this object is frozen."]], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#getGMTOffsetDigits_E@"], "Permissions": [], "Description": "Sets the decimal digit characters used for localized GMT format.", "history": "Added in API level 24", "FullName": "public TimeZoneFormat setGMTOffsetDigits (String digits)"}, "parseOffsetShortLocalizedGMT(java.lang.String,java.text.ParsePosition)": {"Returns": [["int", "the offset from GMT(UTC) in milliseconds for the given short localized GMT offset format string."]], "Parameters": [["@B_java#lang#String_E@", "String: the text contains a short localized GMT offset string at the position."], ["@B_java#text#ParsePosition_E@", "ParsePosition: the position."]], "Throws": [], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#formatOffsetShortLocalizedGMT_E@"], "Permissions": [], "Description": "Returns offset from GMT(UTC) in milliseconds for the given short localized GMT offset format string. When the given string cannot be parsed, this method sets the current position as the error index to ParsePosition pos and returns 0.", "history": "Added in API level 24", "FullName": "public int parseOffsetShortLocalizedGMT (String text, ParsePosition pos)"}, "parseOffsetLocalizedGMT(java.lang.String,java.text.ParsePosition)": {"Returns": [["int", "the offset from GMT(UTC) in milliseconds for the given localized GMT offset format string."]], "Parameters": [["@B_java#lang#String_E@", "String: the text contains a localized GMT offset string at the position."], ["@B_java#text#ParsePosition_E@", "ParsePosition: the position."]], "Throws": [], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#formatOffsetLocalizedGMT_E@"], "Permissions": [], "Description": "Returns offset from GMT(UTC) in milliseconds for the given localized GMT offset format string. When the given string cannot be parsed, this method sets the current position as the error index to ParsePosition pos and returns 0.", "history": "Added in API level 24", "FullName": "public int parseOffsetLocalizedGMT (String text, ParsePosition pos)"}, "formatToCharacterIterator(java.lang.Object)": {"Returns": [["@B_java#text#AttributedCharacterIterator_E@", "AttributedCharacterIterator describing the formatted value."]], "Parameters": [["@B_java#lang#Object_E@", "Object: The object to format"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Formats an Object producing an AttributedCharacterIterator. You can use the returned AttributedCharacterIterator to build the resulting String, as well as to determine information about the resulting String. Each attribute key of the AttributedCharacterIterator will be of type Field. It is up to each Format implementation to define what the legal values are for each attribute in the AttributedCharacterIterator, but typically the attribute key is also used as the attribute value. The default implementation creates an AttributedCharacterIterator with no attributes. Subclasses that support fields should override this and create an AttributedCharacterIterator with meaningful attributes.", "history": "Added in API level 24", "FullName": "public AttributedCharacterIterator formatToCharacterIterator (Object obj)"}, "format(android.icu.text.TimeZoneFormat.Style,android.icu.util.TimeZone,long)": {"Returns": [["@B_java#lang#String_E@", "the display name of the time zone."]], "Parameters": [["@B_android#icu#text#TimeZoneFormat#Style_E@", "TimeZoneFormat.Style: the style enum (e.g. GENERIC_LONG, LOCALIZED_GMT...)"], ["@B_android#icu#util#TimeZone_E@", "TimeZone: the time zone."], ["long", "long: the date."]], "Throws": [], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#Style_E@", "@B_android#icu#text#TimeZoneFormat#format_E@"], "Permissions": [], "Description": "Returns the display name of the time zone at the given date for the style. GENERIC_LONG is requested, but there is no display name data available for GENERIC_LONG style, the implementation may use GENERIC_LOCATION or LOCALIZED_GMT. See UTS#35 UNICODE LOCALE DATA MARKUP LANGUAGE (LDML)", "history": "Added in API level 24", "FullName": "public final String format (TimeZoneFormat.Style style, TimeZone tz, long date)"}, "formatOffsetISO8601Extended(int,boolean,boolean,boolean)": {"Returns": [["@B_java#lang#String_E@", "the ISO 8601 extended format."]], "Parameters": [["int", "int: the offset from GMT(UTC) in milliseconds."], ["boolean", "boolean: true if ISO 8601 UTC indicator \"Z\" is used when the offset is 0."], ["boolean", "boolean: true if shortest form is used."], ["boolean", "boolean: true if non-zero offset seconds is appended."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the specified offset is out of supported range (-24 hours < offset < +24 hours)."]], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#formatOffsetISO8601Basic_E@", "@B_android#icu#text#TimeZoneFormat#parseOffsetISO8601_E@"], "Permissions": [], "Description": "Returns the ISO 8601 extended time zone string for the given offset. For example, \"-08:00\", \"-08:30\" and \"Z\"", "history": "Added in API level 24", "FullName": "public final String formatOffsetISO8601Extended (int offset, boolean useUtcIndicator, boolean isShort, boolean ignoreSeconds)"}, "parse(java.lang.String,java.text.ParsePosition)": {"Returns": [["@B_android#icu#util#TimeZone_E@", "A TimeZone, or null if the input could not be parsed."]], "Parameters": [["@B_java#lang#String_E@", "String: the text contains a time zone string at the position."], ["@B_java#text#ParsePosition_E@", "ParsePosition: the position."]], "Throws": [], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#parse_E@"], "Permissions": [], "Description": "Returns a TimeZone by parsing the time zone string according to the given parse position. @B_android#icu#text#TimeZoneFormat#parse_E@.", "history": "Added in API level 24", "FullName": "public final TimeZone parse (String text, ParsePosition pos)"}, "getInstance(java.util.Locale)": {"Returns": [["@B_android#icu#text#TimeZoneFormat_E@", "a frozen instance of TimeZoneFormat for the given locale."]], "Parameters": [["@B_java#util#Locale_E@", "Locale: the @B_java#util#Locale_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a frozen instance of TimeZoneFormat for the given @B_java#util#Locale_E@. @B_android#icu#text#TimeZoneFormat#cloneAsThawed_E@ to get a thawed copy first.", "history": "Added in API level 24", "FullName": "public static TimeZoneFormat getInstance (Locale locale)"}, "getGMTZeroFormat()": {"Returns": [["@B_java#lang#String_E@", "the localized GMT string string for GMT(UTC) itself."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#icu#text#TimeZoneFormat#setGMTZeroFormat_E@"], "Permissions": [], "Description": "Returns the localized GMT format string for GMT(UTC) itself (GMT offset is 0).", "history": "Added in API level 24", "FullName": "public String getGMTZeroFormat ()"}}, "Inheritance": ["@B_java#text#Format_E@", "@B_android#icu#text#UFormat_E@"], "ClassName": "android.icu.text.TimeZoneFormat", "ClassDesc": "TimeZoneFormat supports time zone display name formatting and parsing. An instance of TimeZoneFormat works as a subformatter of @B_android#icu#text#SimpleDateFormat_E@, but you can also directly get a new instance of TimeZoneFormat and formatting/parsing time zone display names. ICU implements the time zone display names defined by @B_android#icu#text#TimeZoneNames_E@ represents the time zone display name data model and this class implements the algorithm for actual formatting and parsing."}