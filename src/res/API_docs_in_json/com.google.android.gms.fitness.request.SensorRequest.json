{"Functions": {"getFastestRate(java.util.concurrent.TimeUnit)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the fastest rate for this request, in the given time unit.", "history": "", "FullName": "public long getFastestRate (TimeUnit timeUnit)"}, "toString()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public String toString ()"}, "fromLocationRequest(com.google.android.gms.fitness.data.DataSource, com.google.android.gms.location.LocationRequest)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#fitness#data#DataSource_E@", "The DataSource that will provide location."], ["@B_com#google#android#gms#location#LocationRequest_E@", "Request defining parameters for location updates."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a SensorRequest for location updates corresponding to the given LocationRequest.", "history": "", "FullName": "public static SensorRequest fromLocationRequest (DataSource dataSource, LocationRequest locationRequest)"}, "getDataType()": {"Returns": [["", "the specified data type, or null if only a data source was specified"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the specified data type for this request.", "history": "", "FullName": "public DataType getDataType ()"}, "getDataSource()": {"Returns": [["", "the specified data source, or null if only a data type was specified"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the specified data source for this request.", "history": "", "FullName": "public DataSource getDataSource ()"}, "equals(java.lang.Object)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public boolean equals (Object that)"}, "getSamplingRate(java.util.concurrent.TimeUnit)": {"Returns": [["", "the sampling rate, negative if unspecified"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the sampling rate for this request, in the given time unit.", "history": "", "FullName": "public long getSamplingRate (TimeUnit timeUnit)"}, "getMaxDeliveryLatency(java.util.concurrent.TimeUnit)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the max delivery latency for this request, in the given time unit.", "history": "", "FullName": "public long getMaxDeliveryLatency (TimeUnit timeUnit)"}, "getAccuracyMode()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the accuracy mode for this request.", "history": "", "FullName": "public int getAccuracyMode ()"}, "hashCode()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int hashCode ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.fitness.request.SensorRequest", "ClassDesc": "Request for registering for live updates from a @B_com#google#android#gms#fitness#data#DataSource_E@. Use this request to specify the data source or data type to register to, the sampling rate, the fastest reporting interval, and the maximum desired delivery latency. Example usage: Registration will automatically expire after a timeout. Apps can change the default timeout by using @B_com#google#android#gms#fitness#request#SensorRequest#Builder#setTimeout_E@"}