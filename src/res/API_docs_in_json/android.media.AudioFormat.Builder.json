{"Functions": {"setChannelMask(int)": {"Returns": [["@B_android#media#AudioFormat#Builder_E@", "the same Builder instance. This value will never be null."]], "Parameters": [], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the channel mask is invalid or if both channel index mask and channel position mask are specified but do not have the same channel count."]], "SeeAlso": [], "Permissions": [], "Description": "Sets the channel position mask. The channel position mask specifies the association between audio samples in a frame with named endpoint channels. The samples in the frame correspond to the named set bits in the channel position mask, in ascending bit order. See @B_android#media#AudioFormat#Builder#setChannelIndexMask_E@ to specify channels based on endpoint numbered channels. This", "history": "Added in API level 21", "FullName": "public AudioFormat.Builder setChannelMask (int channelMask)"}, "AudioFormat.Builder(android.media.AudioFormat)": {"Returns": [], "Parameters": [["@B_android#media#AudioFormat_E@", "AudioFormat: the @B_android#media#AudioFormat_E@ object whose data will be reused in the new Builder."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new Builder from a given @B_android#media#AudioFormat_E@.", "history": "Added in API level 21", "FullName": "public AudioFormat.Builder (AudioFormat af)"}, "setEncoding(int)": {"Returns": [["@B_android#media#AudioFormat#Builder_E@", "the same Builder instance."]], "Parameters": [["int", "int: the specified encoding or default. Value is @B_android#media#AudioFormat#ENCODING_DEFAULT_E@, @B_android#media#AudioFormat#ENCODING_PCM_16BIT_E@, @B_android#media#AudioFormat#ENCODING_PCM_8BIT_E@, @B_android#media#AudioFormat#ENCODING_PCM_FLOAT_E@, @B_android#media#AudioFormat#ENCODING_AC3_E@, @B_android#media#AudioFormat#ENCODING_E_AC3_E@, @B_android#media#AudioFormat#ENCODING_DTS_E@, @B_android#media#AudioFormat#ENCODING_DTS_HD_E@, @B_android#media#AudioFormat#ENCODING_MP3_E@, @B_android#media#AudioFormat#ENCODING_AAC_LC_E@, @B_android#media#AudioFormat#ENCODING_AAC_HE_V1_E@, @B_android#media#AudioFormat#ENCODING_AAC_HE_V2_E@, @B_android#media#AudioFormat#ENCODING_IEC61937_E@, @B_android#media#AudioFormat#ENCODING_DOLBY_TRUEHD_E@, @B_android#media#AudioFormat#ENCODING_AAC_ELD_E@, @B_android#media#AudioFormat#ENCODING_AAC_XHE_E@, @B_android#media#AudioFormat#ENCODING_AC4_E@, @B_android#media#AudioFormat#ENCODING_E_AC3_JOC_E@, or @B_android#media#AudioFormat#ENCODING_DOLBY_MAT_E@"]], "Throws": [["", "java.lang.IllegalArgumentException"], ["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Sets the data encoding format.", "history": "Added in API level 21", "FullName": "public AudioFormat.Builder setEncoding (int encoding)"}, "setChannelIndexMask(int)": {"Returns": [["@B_android#media#AudioFormat#Builder_E@", "the same Builder instance. This value will never be null."]], "Parameters": [["int", "int: describes the configuration of the audio channels. For output, the channelIndexMask is an OR-ed combination of bits representing the mapping of AudioTrack write samples to output sink channels. For example, a mask of 0xa, or binary 1010, means the AudioTrack write frame consists of two samples, which are routed to the second and the fourth channels of the output sink. Unmatched output sink channels are zero filled and unmatched AudioTrack write samples are dropped. For input, the channelIndexMask is an OR-ed combination of bits representing the mapping of input source channels to AudioRecord read samples. For example, a mask of 0x5, or binary 101, will read from the first and third channel of the input source device and store them in the first and second sample of the AudioRecord read frame. Unmatched input source channels are dropped and unmatched AudioRecord read samples are zero filled."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the channel index mask is invalid or if both channel index mask and channel position mask are specified but do not have the same channel count."]], "SeeAlso": [], "Permissions": [], "Description": "Sets the channel index mask. A channel index mask specifies the association of audio samples in the frame with numbered endpoint channels. The i-th bit in the channel index mask corresponds to the i-th endpoint channel. For example, an endpoint with four channels is represented as index mask bits 0 through 3. This Both @B_android#media#AudioTrack_E@ and @B_android#media#AudioRecord_E@ support a channel index mask. If a channel index mask is specified it is used, otherwise the channel position mask specified by setChannelMask is used. For AudioTrack and AudioRecord, a channel position mask is not required if a channel index mask is specified.", "history": "Added in API level 23", "FullName": "public AudioFormat.Builder setChannelIndexMask (int channelIndexMask)"}, "setSampleRate(int)": {"Returns": [["@B_android#media#AudioFormat#Builder_E@", "the same Builder instance."]], "Parameters": [["int", "int: the sample rate expressed in Hz"]], "Throws": [["", "java.lang.IllegalArgumentException"], ["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Sets the sample rate.", "history": "Added in API level 21", "FullName": "public AudioFormat.Builder setSampleRate (int sampleRate)"}, "AudioFormat.Builder()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new Builder with none of the format characteristics set.", "history": "Added in API level 21", "FullName": "public AudioFormat.Builder ()"}, "build()": {"Returns": [["@B_android#media#AudioFormat_E@", "a new @B_android#media#AudioFormat_E@ object"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Combines all of the format characteristics that have been set and return a new @B_android#media#AudioFormat_E@ object.", "history": "Added in API level 21", "FullName": "public AudioFormat build ()"}}, "Inheritance": [], "ClassName": "android.media.AudioFormat.Builder", "ClassDesc": "Builder class for @B_android#media#AudioFormat_E@ objects. Use this class to configure and create an AudioFormat instance. By setting format characteristics such as audio encoding, channel mask or sample rate, you indicate which of those are to vary from the default behavior on this device wherever this audio format is used. See @B_android#media#AudioFormat_E@ for a complete description of the different parameters that can be used to configure an AudioFormat instance. @B_android#media#AudioFormat_E@ is for instance used in @B_android#media#AudioTrack#AudioTrack_E@. In this constructor, every format characteristic set on the Builder (e.g. with @B_android#media#AudioFormat#Builder#setSampleRate_E@) will alter the default values used by an AudioTrack. In this case for audio playback with AudioTrack, the sample rate set in the Builder would override the platform output sample rate which would otherwise be selected by default."}