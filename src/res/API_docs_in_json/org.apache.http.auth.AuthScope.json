{"Functions": {"AuthScope(java.lang.String, int, java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "the host the credentials apply to. May be set to null if credenticals are applicable to any host."], ["int", "the port the credentials apply to. May be set to negative value if credenticals are applicable to any port."], ["@B_java#lang#String_E@", "the realm the credentials apply to. May be set to null if credenticals are applicable to any realm."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new credentials scope for the given", "history": "Added in API level 1", "FullName": "public AuthScope (String host, int port, String realm)"}, "getRealm()": {"Returns": [["", "the realm name"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public String getRealm ()"}, "AuthScope(java.lang.String, int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "the host the credentials apply to. May be set to null if credenticals are applicable to any host."], ["int", "the port the credentials apply to. May be set to negative value if credenticals are applicable to any port."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new credentials scope for the given", "history": "Added in API level 1", "FullName": "public AuthScope (String host, int port)"}, "getScheme()": {"Returns": [["", "the scheme type"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public String getScheme ()"}, "getPort()": {"Returns": [["", "the port"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public int getPort ()"}, "match(org.apache.http.auth.AuthScope)": {"Returns": [["", "the match factor. Negative value signifies no match. Non-negative signifies a match. The greater the returned value the closer the match."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tests if the authentication scopes match.", "history": "Added in API level 1", "FullName": "public int match (AuthScope that)"}, "toString()": {"Returns": [["", "a printable representation of this object."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#lang#Object#toString_E@"], "Permissions": [], "Description": "Returns a string containing a concise, human-readable description of this object. Subclasses are encouraged to override this method and provide an implementation that takes into account the object's type and data. The default implementation is equivalent to the following expression: See toString method.", "history": "Added in API level 1", "FullName": "public String toString ()"}, "AuthScope(java.lang.String, int, java.lang.String, java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "the host the credentials apply to. May be set to null if credenticals are applicable to any host."], ["int", "the port the credentials apply to. May be set to negative value if credenticals are applicable to any port."], ["@B_java#lang#String_E@", "the realm the credentials apply to. May be set to null if credenticals are applicable to any realm."], ["@B_java#lang#String_E@", "the authentication scheme the credentials apply to. May be set to null if credenticals are applicable to any authentication scheme."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new credentials scope for the given", "history": "Added in API level 1", "FullName": "public AuthScope (String host, int port, String realm, String scheme)"}, "AuthScope(org.apache.http.auth.AuthScope)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a copy of the given credentials scope.", "history": "Added in API level 1", "FullName": "public AuthScope (AuthScope authscope)"}, "equals(java.lang.Object)": {"Returns": [["", "true if the specified object is equal to this Object; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "the object to compare this instance with."]], "Throws": [], "SeeAlso": ["@B_java#lang#Object#equals_E@"], "Permissions": [], "Description": "Compares this instance with the specified object and indicates if they are equal. In order to be equal, o must represent the same object as this instance using a class-specific comparison. The general contract is that this comparison should be reflexive, symmetric, and transitive. Also, no object reference other than null is equal to null. The default implementation returns true only if this == o. See equals method. The general contract for the equals and @B_java#lang#Object#hashCode_E@ methods is that if equals returns true for any two objects, then hashCode() must return the same value for these objects. This means that subclasses of Object usually override either both methods or neither of them.", "history": "Added in API level 1", "FullName": "public boolean equals (Object o)"}, "getHost()": {"Returns": [["", "the host"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public String getHost ()"}, "hashCode()": {"Returns": [["", "this object's hash code."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#lang#Object#hashCode_E@"], "Permissions": [], "Description": "Returns an integer hash code for this object. By contract, any two objects for which @B_java#lang#Object#equals_E@ returns true must return the same hash code value. This means that subclasses of Object usually override both methods or neither method. Note that hash values must not change over time unless information used in equals comparisons also changes. See hashCode method.", "history": "Added in API level 1", "FullName": "public int hashCode ()"}}, "Inheritance": [], "ClassName": "org.apache.http.auth.AuthScope", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit The class represents an authentication scope consisting of a host name, a port number, a realm name and an authentication scheme name which @B_org#apache#http#auth#Credentials_E@ apply to."}