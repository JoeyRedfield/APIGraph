{"Functions": {"getCookieSpec(java.lang.String, org.apache.http.params.HttpParams)": {"Returns": [["", "@B_org#apache#http#cookie#CookieSpec_E@"]], "Parameters": [["@B_java#lang#String_E@", "the @B_org#apache#http#cookie#CookieSpec_E@ identifier"], ["@B_org#apache#http#params#HttpParams_E@", "the @B_org#apache#http#params#HttpParams_E@ for the cookie specification."]], "Throws": [["@B_java#lang#IllegalStateException_E@", "if a policy with the given name cannot be found"]], "SeeAlso": [], "Permissions": [], "Description": "Gets the @B_org#apache#http#cookie#CookieSpec_E@ with the given ID.", "history": "Added in API level 1", "FullName": "public synchronized CookieSpec getCookieSpec (String name, HttpParams params)"}, "getCookieSpec(java.lang.String)": {"Returns": [["", "@B_org#apache#http#cookie#CookieSpec_E@"]], "Parameters": [["@B_java#lang#String_E@", "the @B_org#apache#http#cookie#CookieSpec_E@ identifier"]], "Throws": [["@B_java#lang#IllegalStateException_E@", "if a policy with the given name cannot be found"]], "SeeAlso": [], "Permissions": [], "Description": "Gets the @B_org#apache#http#cookie#CookieSpec_E@ with the given name.", "history": "Added in API level 1", "FullName": "public synchronized CookieSpec getCookieSpec (String name)"}, "CookieSpecRegistry()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public CookieSpecRegistry ()"}, "register(java.lang.String, org.apache.http.cookie.CookieSpecFactory)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "the identifier for this specification"], ["@B_org#apache#http#cookie#CookieSpecFactory_E@", "the @B_org#apache#http#cookie#CookieSpecFactory_E@ class to register"]], "Throws": [], "SeeAlso": ["@B_org#apache#http#cookie#CookieSpecRegistry#getCookieSpec_E@"], "Permissions": [], "Description": "Registers a @B_org#apache#http#cookie#CookieSpecFactory_E@ with the given identifier. If a specification with the given name already exists it will be overridden. This nameis the same one used to retrieve the @B_org#apache#http#cookie#CookieSpecFactory_E@ from @B_org#apache#http#cookie#CookieSpecRegistry#getCookieSpec_E@.", "history": "Added in API level 1", "FullName": "public synchronized void register (String name, CookieSpecFactory factory)"}, "getSpecNames()": {"Returns": [["", "list of registered cookie spec names"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtains a list containing names of all registered @B_org#apache#http#cookie#CookieSpec_E@ in their default order. Note that the DEFAULT policy (if present) is likely to be the same as one of the other policies, but does not have to be.", "history": "Added in API level 1", "FullName": "public synchronized List<String> getSpecNames ()"}, "unregister(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "the identifier of the @B_org#apache#http#cookie#CookieSpec_E@ to unregister"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Unregisters the @B_org#apache#http#cookie#CookieSpecFactory_E@ with the given ID.", "history": "Added in API level 1", "FullName": "public synchronized void unregister (String id)"}, "setItems(java.util.Map<java.lang.String, org.apache.http.cookie.CookieSpecFactory>)": {"Returns": [], "Parameters": [["@B_java#util#Map_E@", "cookie specs"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Populates the internal collection of registered @B_org#apache#http#cookie#CookieSpec_E@ with the content of the map passed as a parameter.", "history": "Added in API level 1", "FullName": "public synchronized void setItems (Map<String, CookieSpecFactory> map)"}}, "Inheritance": [], "ClassName": "org.apache.http.cookie.CookieSpecRegistry", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Cookie specification registry that can be used to obtain the corresponding cookie specification implementation for a given type of type or version of cookie."}