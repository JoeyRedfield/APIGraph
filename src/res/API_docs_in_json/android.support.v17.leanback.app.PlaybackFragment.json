{"Functions": {"notifyPlaybackRowChanged()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Updates the ui when the row data changes.", "history": "added in version 25.1.0", "FullName": "void notifyPlaybackRowChanged ()"}, "onError(int, java.lang.CharSequence)": {"Returns": [], "Parameters": [["int", "int: Optional error code for specific implementation."], ["@B_java#lang#CharSequence_E@", "CharSequence: Optional error message for specific implementation."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when media has error. App may override.", "history": "added in version 26.0.0-beta1", "FullName": "void onError (int errorCode, CharSequence errorMessage)"}, "setSelectedPosition(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the selected row position with smooth animation.", "history": "added in version 25.1.0", "FullName": "void setSelectedPosition (int position)"}, "onPause()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the Fragment is no longer resumed. This is generally tied to @B_android#app#Activity#onPause_E@ of the containing Activity's lifecycle.", "history": "", "FullName": "void onPause ()"}, "onDestroyView()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the view previously created by @B_android#app#Fragment#onCreateView_E@ has been detached from the fragment. The next time the fragment needs to be displayed, a new view will be created. This is called after @B_android#app#Fragment#onStop_E@ and before @B_android#app#Fragment#onDestroy_E@. It is called regardless of whether @B_android#app#Fragment#onCreateView_E@ returned a non-null view. Internally it is called after the view's state has been saved but before it has been removed from its parent.", "history": "", "FullName": "void onDestroyView ()"}, "getAdapter()": {"Returns": [["@B_android#support#v17#leanback#widget#ObjectAdapter_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 25.1.0", "FullName": "ObjectAdapter getAdapter ()"}, "onStart()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the Fragment is visible to the user. This is generally tied to @B_android#app#Activity#onStart_E@ of the containing Activity's lifecycle.", "history": "", "FullName": "void onStart ()"}, "PlaybackFragment()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 25.1.0", "FullName": "PlaybackFragment ()"}, "onVideoSizeChanged(int, int)": {"Returns": [], "Parameters": [["int", "int: Intrinsic width of video"], ["int", "int: Intrinsic height of video"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when size of the video changes. App may override.", "history": "added in version 26.0.0-beta1", "FullName": "void onVideoSizeChanged (int videoWidth, int videoHeight)"}, "tickle()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tickles the playback controls. Fades in the view if it was faded out. @B_android#support#v17#leanback#app#PlaybackFragment#tickle_E@ will also kill the timer created by @B_android#support#v17#leanback#app#PlaybackFragment#setControlsOverlayAutoHideEnabled_E@. When next time fragment is resumed, the timer will be started again if @B_android#support#v17#leanback#app#PlaybackFragment#isControlsOverlayAutoHideEnabled_E@ is true. In most cases app does not need call this method, tickling on input events is handled by the fragment.", "history": "added in version 25.1.0", "FullName": "void tickle ()"}, "setControlsOverlayAutoHideEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enables or disables auto hiding controls overlay after a short delay fragment is resumed. If enabled and fragment is resumed, the view will fade out after a time period. @B_android#support#v17#leanback#app#PlaybackFragment#tickle_E@ will kill the timer, next time fragment is resumed, the timer will be started again if @B_android#support#v17#leanback#app#PlaybackFragment#isControlsOverlayAutoHideEnabled_E@ is true.", "history": "added in version 26.0.0-beta1", "FullName": "void setControlsOverlayAutoHideEnabled (boolean enabled)"}, "isFadingEnabled()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Uses @B_android#support#v17#leanback#app#PlaybackFragment#isControlsOverlayAutoHideEnabled_E@", "history": "added in version 25.1.0", "FullName": "boolean isFadingEnabled ()"}, "onStop()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the Fragment is no longer started. This is generally tied to @B_android#app#Activity#onStop_E@ of the containing Activity's lifecycle.", "history": "", "FullName": "void onStop ()"}, "onResume()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the fragment is visible to the user and actively running. This is generally tied to @B_android#app#Activity#onResume_E@ of the containing Activity's lifecycle.", "history": "", "FullName": "void onResume ()"}, "onDestroy()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the fragment is no longer in use. This is called after @B_android#app#Fragment#onStop_E@ and before @B_android#app#Fragment#onDetach_E@.", "history": "", "FullName": "void onDestroy ()"}, "getProgressBarManager()": {"Returns": [["@B_android#support#v17#leanback#app#ProgressBarManager_E@", "The ProgressBarManager that will show or hide progress bar in @B_android#support#v17#leanback#app#PlaybackFragment#onBufferingStateChanged_E@."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the ProgressBarManager that will show or hide progress bar in @B_android#support#v17#leanback#app#PlaybackFragment#onBufferingStateChanged_E@.", "history": "added in version 26.0.0-beta1", "FullName": "ProgressBarManager getProgressBarManager ()"}, "getBackgroundType()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the background type.", "history": "added in version 25.1.0", "FullName": "int getBackgroundType ()"}, "hideControlsOverlay(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: True to run animation, false otherwise."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Hide controls overlay.", "history": "added in version 26.0.0-beta1", "FullName": "void hideControlsOverlay (boolean runAnimation)"}, "showControlsOverlay(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: True to run animation, false otherwise."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Show controls overlay.", "history": "added in version 26.0.0-beta1", "FullName": "void showControlsOverlay (boolean runAnimation)"}, "isControlsOverlayVisible()": {"Returns": [["boolean", "True if controls overlay is visible, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v17#leanback#app#PlaybackFragment#showControlsOverlay_E@", "@B_android#support#v17#leanback#app#PlaybackFragment#hideControlsOverlay_E@"], "Permissions": [], "Description": "Returns true if controls overlay is visible, false otherwise.", "history": "added in version 26.0.0-beta1", "FullName": "boolean isControlsOverlayVisible ()"}, "setBackgroundType(int)": {"Returns": [], "Parameters": [["int", "int: One of BG_LIGHT, BG_DARK, or BG_NONE."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the background type.", "history": "added in version 25.1.0", "FullName": "void setBackgroundType (int type)"}, "fadeOut()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Call @B_android#support#v17#leanback#app#PlaybackFragment#hideControlsOverlay_E@ Fades out the playback overlay immediately.", "history": "added in version 25.1.0", "FullName": "void fadeOut ()"}, "setFadingEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Uses @B_android#support#v17#leanback#app#PlaybackFragment#setControlsOverlayAutoHideEnabled_E@", "history": "added in version 25.1.0", "FullName": "void setFadingEnabled (boolean enabled)"}, "onBufferingStateChanged(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: True for buffering start, false otherwise."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when media has start or stop buffering. App may override. The default initial state is not buffering.", "history": "added in version 26.0.0-beta1", "FullName": "void onBufferingStateChanged (boolean start)"}, "isControlsOverlayAutoHideEnabled()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if controls will be auto hidden after a delay when fragment is resumed.", "history": "added in version 26.0.0-beta1", "FullName": "boolean isControlsOverlayAutoHideEnabled ()"}, "setSelectedPosition(int, boolean)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the selected row position.", "history": "added in version 25.1.0", "FullName": "void setSelectedPosition (int position, boolean smooth)"}, "onCreate(android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: If the fragment is being re-created from a previous saved state, this is the state."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called to do initial creation of a fragment. This is called after @B_android#app#Fragment#onAttach_E@ and before @B_android#app#Fragment#onCreateView_E@, but is not called if the fragment instance is retained across Activity re-creation (see @B_android#app#Fragment#setRetainInstance_E@). Note that this can be called while the fragment's activity is still in the process of being created. As such, you can not rely on things like the activity's content view hierarchy being initialized at this point. If you want to do work once the activity itself is created, see @B_android#app#Fragment#onActivityCreated_E@. If your app's targetSdkVersion is @B_android#os#Build#VERSION_CODES#M_E@ or lower, child fragments being restored from the savedInstanceState are restored after onCreate returns. When targeting @B_android#os#Build#VERSION_CODES#N_E@ or above and running on an N or newer platform version they are restored by Fragment.onCreate.", "history": "", "FullName": "void onCreate (Bundle savedInstanceState)"}}, "Inheritance": ["java.lang.Object", "https:##developer#android#com@B_android#app#Fragment_E@"], "ClassName": "android.support.v17.leanback.app.PlaybackFragment", "ClassDesc": "use @B_android#support#v17#leanback#app#PlaybackSupportFragment_E@ A fragment for displaying playback controls and related content. A PlaybackFragment renders the elements of its @B_android#support#v17#leanback#widget#ObjectAdapter_E@ as a set of rows in a vertical list. The Adapter's @B_android#support#v17#leanback#widget#PresenterSelector_E@ must maintain subclasses of @B_android#support#v17#leanback#widget#RowPresenter_E@. A playback row is a row rendered by @B_android#support#v17#leanback#widget#PlaybackRowPresenter_E@. App can call @B_android#support#v17#leanback#app#PlaybackFragment#setPlaybackRow_E@ to set playback row for the first element of adapter. App can call @B_android#support#v17#leanback#app#PlaybackFragment#setPlaybackRowPresenter_E@ to set presenter for it. @B_android#support#v17#leanback#app#PlaybackFragment#setPlaybackRow_E@ and @B_android#support#v17#leanback#app#PlaybackFragment#setPlaybackRowPresenter_E@ are optional, app can pass playback row and PlaybackRowPresenter in the adapter using @B_android#support#v17#leanback#app#PlaybackFragment#setAdapter_E@. Auto hide controls upon playing: best practice is calling @B_android#support#v17#leanback#app#PlaybackFragment#setControlsOverlayAutoHideEnabled_E@ upon play/pause. The auto hiding timer will be cancelled upon @B_android#support#v17#leanback#app#PlaybackFragment#tickle_E@ triggered by input event."}