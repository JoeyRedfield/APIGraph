{"Functions": {"setHour(int)": {"Returns": [], "Parameters": [["int", "int: the hour to set, in the range (0-23) Value is between 0 and 23 inclusive"]], "Throws": [], "SeeAlso": ["@B_android#widget#TimePicker#getHour_E@"], "Permissions": [], "Description": "Sets the currently selected hour using 24-hour time.", "history": "Added in API level 23", "FullName": "public void setHour (int hour)"}, "getCurrentHour()": {"Returns": [["@B_java#lang#Integer_E@", "the currently selected hour, in the range (0-23) This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#widget#TimePicker#getHour_E@", "history": "Added in API level 1 Deprecated in API level 23", "FullName": "public Integer getCurrentHour ()"}, "dispatchProvideAutofillStructure(android.view.ViewStructure,int)": {"Returns": [], "Parameters": [["@B_android#view#ViewStructure_E@", "ViewStructure: fill in with structured view data for autofill purposes. This value must never be null."], ["int", "int: Value is either 0 or @B_android#view#View#AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Dispatches creation of a @B_android#view#ViewStructure_E@s for autofill purposes down the hierarchy, when an Assist structure is being created as part of an autofill request. The default implementation does the following: Sets the @B_android#view#autofill#AutofillId_E@ in the structure. Calls @B_android#view#View#onProvideAutofillStructure_E@. Calls @B_android#view#View#onProvideAutofillVirtualStructure_E@. Typically, this method should only be overridden by subclasses that provide a view hierarchy (such as @B_android#view#ViewGroup_E@) - other classes should override @B_android#view#View#onProvideAutofillStructure_E@ or @B_android#view#View#onProvideAutofillVirtualStructure_E@ instead. When overridden, it must: Either call super.dispatchProvideAutofillStructure(structure, flags) or explicitly set the @B_android#view#autofill#AutofillId_E@ in the structure (for example, by calling structure.setAutofillId(getAutofillId())). Decide how to handle the @B_android#view#View#AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS_E@ flag - when set, all views in the structure should be considered important for autofill, regardless of what @B_android#view#View#isImportantForAutofill_E@ returns. We encourage you to respect this flag to provide a better user experience - this flag is typically used when an user explicitly requested autofill. If the flag is not set, then only views marked as important for autofill should be included in the structure - skipping non-important views optimizes the overall autofill performance. This implementation adds in all child views of the view group, in addition to calling the default @B_android#view#View_E@ implementation.", "history": "Added in API level 26", "FullName": "public void dispatchProvideAutofillStructure (ViewStructure structure, int flags)"}, "TimePicker(android.content.Context,android.util.AttributeSet,int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"], ["@B_android#util#AttributeSet_E@", "AttributeSet no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public TimePicker (Context context, AttributeSet attrs, int defStyleAttr)"}, "is24HourView()": {"Returns": [["boolean", "true if this widget displays time in 24-hour mode, false otherwise}"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#widget#TimePicker#setIs24HourView_E@"], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public boolean is24HourView ()"}, "setOnTimeChangedListener(android.widget.TimePicker.OnTimeChangedListener)": {"Returns": [], "Parameters": [["@B_android#widget#TimePicker#OnTimeChangedListener_E@", "TimePicker.OnTimeChangedListener: the callback, should not be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the callback that indicates the time has been adjusted by the user.", "history": "Added in API level 1", "FullName": "public void setOnTimeChangedListener (TimePicker.OnTimeChangedListener onTimeChangedListener)"}, "TimePicker(android.content.Context,android.util.AttributeSet,int,int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"], ["@B_android#util#AttributeSet_E@", "AttributeSet no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 21", "FullName": "public TimePicker (Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes)"}, "setIs24HourView(java.lang.Boolean)": {"Returns": [], "Parameters": [["@B_java#lang#Boolean_E@", "Boolean: true to display in 24-hour mode, false for 12-hour mode with AM/PM This value must never be null."]], "Throws": [], "SeeAlso": ["@B_android#widget#TimePicker#is24HourView_E@"], "Permissions": [], "Description": "Sets whether this widget displays time in 24-hour mode or 12-hour mode with an AM/PM picker.", "history": "Added in API level 1", "FullName": "public void setIs24HourView (Boolean is24HourView)"}, "setEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: True if this view is enabled, false otherwise."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the enabled state of this view. The interpretation of the enabled state varies by subclass.", "history": "Added in API level 1", "FullName": "public void setEnabled (boolean enabled)"}, "getBaseline()": {"Returns": [["int", "the offset of the baseline within the widget's bounds or -1 if baseline alignment is not supported"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the offset of the widget's text baseline from the widget's top boundary. If this widget does not support baseline alignment, this method returns -1.", "history": "Added in API level 1", "FullName": "public int getBaseline ()"}, "TimePicker(android.content.Context,android.util.AttributeSet)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"], ["@B_android#util#AttributeSet_E@", "AttributeSet no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public TimePicker (Context context, AttributeSet attrs)"}, "onRestoreInstanceState(android.os.Parcelable)": {"Returns": [], "Parameters": [["@B_android#os#Parcelable_E@", "Parcelable: The frozen state that had previously been returned by @B_android#widget#TimePicker#onSaveInstanceState_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Hook allowing a view to re-apply a representation of its internal state that had previously been generated by @B_android#view#View#onSaveInstanceState_E@. This function will never be called with a null state. If you override this method you must call through to the superclass implementation.", "history": "Added in API level 1", "FullName": "protected void onRestoreInstanceState (Parcelable state)"}, "autofill(android.view.autofill.AutofillValue)": {"Returns": [], "Parameters": [["@B_android#view#autofill#AutofillValue_E@", "AutofillValue: value to be autofilled."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Automatically fills the content of this view with the value. Views support the Autofill Framework mainly by: Providing the metadata defining what the view means and how it can be autofilled. Implementing the methods that autofill the view. @B_android#view#View#onProvideAutofillStructure_E@ is responsible for the former, this method is responsible for latter. This method does nothing by default, but when overridden it typically: For example, a text-field view could implement the method this way: If the value is updated asynchronously, the next call to @B_android#view#autofill#AutofillManager#notifyValueChanged_E@ must happen @B_android#view#View#getAutofillValue_E@ must be equal to the value passed to it, otherwise the view will not be highlighted as autofilled.", "history": "Added in API level 26", "FullName": "public void autofill (AutofillValue value)"}, "TimePicker(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public TimePicker (Context context)"}, "isEnabled()": {"Returns": [["boolean", "True if this view is enabled, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the enabled status for this view. The interpretation of the enabled state varies by subclass.", "history": "Added in API level 1", "FullName": "public boolean isEnabled ()"}, "setCurrentHour(java.lang.Integer)": {"Returns": [], "Parameters": [["@B_java#lang#Integer_E@", "Integer: the hour to set, in the range (0-23) This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#widget#TimePicker#setHour_E@ Sets the currently selected hour using 24-hour time.", "history": "Added in API level 1 Deprecated in API level 23", "FullName": "public void setCurrentHour (Integer currentHour)"}, "getAutofillType()": {"Returns": [["int", "Value is @B_android#view#View#AUTOFILL_TYPE_NONE_E@, @B_android#view#View#AUTOFILL_TYPE_TEXT_E@, @B_android#view#View#AUTOFILL_TYPE_TOGGLE_E@, @B_android#view#View#AUTOFILL_TYPE_LIST_E@, or @B_android#view#View#AUTOFILL_TYPE_DATE_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describes the autofill type of this view, so an @B_android#service#autofill#AutofillService_E@ can create the proper @B_android#view#autofill#AutofillValue_E@ when autofilling the view. By default returns @B_android#view#View#AUTOFILL_TYPE_NONE_E@, but views should override it to properly support the Autofill Framework.", "history": "Added in API level 26", "FullName": "public int getAutofillType ()"}, "setMinute(int)": {"Returns": [], "Parameters": [["int", "int: the minute to set, in the range (0-59) Value is between 0 and 59 inclusive"]], "Throws": [], "SeeAlso": ["@B_android#widget#TimePicker#getMinute_E@"], "Permissions": [], "Description": "Sets the currently selected minute.", "history": "Added in API level 23", "FullName": "public void setMinute (int minute)"}, "onSaveInstanceState()": {"Returns": [["@B_android#os#Parcelable_E@", "Returns a Parcelable object containing the view's current dynamic state, or null if there is nothing interesting to save."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Hook allowing a view to generate a representation of its internal state that can later be used to create a new instance with that same state. This state should only contain information that is not persistent or can not be reconstructed later. For example, you will never store your current position on screen because that will be computed again when a new instance of the view is placed in its view hierarchy. Some examples of things you may store here: the current cursor position in a text view (but usually not the text itself since that is stored in a content provider or other persistent storage), the currently selected item in a list view. If you override this method you must call through to the superclass implementation.", "history": "Added in API level 1", "FullName": "protected Parcelable onSaveInstanceState ()"}, "getAutofillValue()": {"Returns": [["@B_android#view#autofill#AutofillValue_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the @B_android#view#View_E@'s current autofill value. By default returns null, but subclasses should override it and return an appropriate value to properly support the Autofill Framework.", "history": "Added in API level 26", "FullName": "public AutofillValue getAutofillValue ()"}, "validateInput()": {"Returns": [["boolean", "true if the input is valid, false otherwise"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Validates whether current input by the user is a valid time based on the locale. TimePicker will show an error message to the user if the time is not valid.", "history": "Added in API level 26", "FullName": "public boolean validateInput ()"}, "getCurrentMinute()": {"Returns": [["@B_java#lang#Integer_E@", "the currently selected minute, in the range (0-59) This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#widget#TimePicker#getMinute_E@", "history": "Added in API level 1 Deprecated in API level 23", "FullName": "public Integer getCurrentMinute ()"}, "getHour()": {"Returns": [["int", "the currently selected hour, in the range (0-23)"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#widget#TimePicker#setHour_E@"], "Permissions": [], "Description": "Returns the currently selected hour using 24-hour time.", "history": "Added in API level 23", "FullName": "public int getHour ()"}, "getAccessibilityClassName()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the class name of this object to be used for accessibility purposes. Subclasses should only override this if they are implementing something that should be seen as a completely new class of view when used by accessibility, unrelated to the class it is deriving from. This is used to fill in @B_android#view#accessibility#AccessibilityNodeInfo#setClassName_E@.", "history": "Added in API level 23", "FullName": "public CharSequence getAccessibilityClassName ()"}, "setCurrentMinute(java.lang.Integer)": {"Returns": [], "Parameters": [["@B_java#lang#Integer_E@", "Integer: the minute to set, in the range (0-59) This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#widget#TimePicker#setMinute_E@ Sets the currently selected minute.", "history": "Added in API level 1 Deprecated in API level 23", "FullName": "public void setCurrentMinute (Integer currentMinute)"}, "getMinute()": {"Returns": [["int", "the currently selected minute, in the range (0-59)"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#widget#TimePicker#setMinute_E@"], "Permissions": [], "Description": "Returns the currently selected minute.", "history": "Added in API level 23", "FullName": "public int getMinute ()"}}, "Inheritance": ["@B_android#view#View_E@", "@B_android#view#ViewGroup_E@", "@B_android#widget#FrameLayout_E@"], "ClassName": "android.widget.TimePicker", "ClassDesc": "A widget for selecting the time of day, in either 24-hour or AM/PM mode. For a dialog using this view, see @B_android#app#TimePickerDialog_E@. See the"}