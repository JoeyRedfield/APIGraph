{"Functions": {"SQLException(java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a description of the exception"], ["@B_java#lang#String_E@", "String: an XOPEN or SQL:2003 code identifying the exception"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a SQLException object with a given reason and SQLState. The cause is not initialized, and may subsequently be initialized by a call to the @B_java#lang#Throwable#initCause_E@ method. The vendor code is initialized to 0.", "history": "Added in API level 1", "FullName": "public SQLException (String reason, String SQLState)"}, "SQLException(java.lang.String, java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a description of the exception"], ["@B_java#lang#String_E@", "String: an XOPEN or SQL:2003 code identifying the exception"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a SQLException object with a given reason and SQLState. The cause is not initialized, and may subsequently be initialized by a call to the @B_java#lang#Throwable#initCause_E@ method. The vendor code is initialized to 0.", "history": "added in API level 1", "FullName": "public SQLException (String reason, String SQLState)"}, "getErrorCode()": {"Returns": [["int", "the vendor's error code"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the vendor-specific exception code for this SQLException object.", "history": "Added in API level 1", "FullName": "public int getErrorCode ()"}, "SQLException(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a description of the exception"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a SQLException object with a given reason. The SQLState is initialized to null and the vender code is initialized to 0. The cause is not initialized, and may subsequently be initialized by a call to the @B_java#lang#Throwable#initCause_E@ method.", "history": "Added in API level 1", "FullName": "public SQLException (String reason)"}, "getSQLState()": {"Returns": [["@B_java#lang#String_E@", "the SQLState value"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the SQLState for this SQLException object.", "history": "Added in API level 1", "FullName": "public String getSQLState ()"}, "getNextException()": {"Returns": [["@B_java#sql#SQLException_E@", "the next SQLException object in the chain; null if there are none"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#sql#SQLException#setNextException_E@"], "Permissions": [], "Description": "Retrieves the exception chained to this SQLException object by setNextException(SQLException ex).", "history": "Added in API level 1", "FullName": "public SQLException getNextException ()"}, "setNextException(java.sql.SQLException)": {"Returns": [], "Parameters": [["@B_java#sql#SQLException_E@", "SQLException: the new exception that will be added to the end of the SQLException chain"]], "Throws": [], "SeeAlso": ["@B_java#sql#SQLException#getNextException_E@"], "Permissions": [], "Description": "Adds an SQLException object to the end of the chain.", "history": "Added in API level 1", "FullName": "public void setNextException (SQLException ex)"}, "SQLException(java.lang.String,java.lang.String,java.lang.Throwable)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a description of the exception."], ["@B_java#lang#String_E@", "String: an XOPEN or SQL:2003 code identifying the exception"], ["@B_java#lang#Throwable_E@", "Throwable: the underlying reason for this SQLException (which is saved for later retrieval by the getCause() method); may be null indicating the cause is non-existent or unknown."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a SQLException object with a given reason, SQLState and cause. The vendor code is initialized to 0.", "history": "Added in API level 9", "FullName": "public SQLException (String reason, String sqlState, Throwable cause)"}, "SQLException(java.lang.String,java.lang.Throwable)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a description of the exception."], ["@B_java#lang#Throwable_E@", "Throwable: the underlying reason for this SQLException (which is saved for later retrieval by the getCause() method); may be null indicating the cause is non-existent or unknown."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a SQLException object with a given reason and cause. The SQLState is initialized to null and the vendor code is initialized to 0.", "history": "Added in API level 9", "FullName": "public SQLException (String reason, Throwable cause)"}, "SQLException(java.lang.String,java.lang.String,int,java.lang.Throwable)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a description of the exception"], ["@B_java#lang#String_E@", "String: an XOPEN or SQL:2003 code identifying the exception"], ["int", "int: a database vendor-specific exception code"], ["@B_java#lang#Throwable_E@", "Throwable: the underlying reason for this SQLException (which is saved for later retrieval by the getCause() method); may be null indicating the cause is non-existent or unknown."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a SQLException object with a given reason, SQLState, vendorCode and cause.", "history": "Added in API level 9", "FullName": "public SQLException (String reason, String sqlState, int vendorCode, Throwable cause)"}, "iterator()": {"Returns": [["@B_java#util#Iterator_E@", "an iterator over the chained SQLExceptions and causes in the proper order"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an iterator over the chained SQLExceptions. The iterator will be used to iterate over each SQLException and its underlying cause (if any).", "history": "Added in API level 9", "FullName": "public Iterator<Throwable> iterator ()"}, "SQLException()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a SQLException object. The reason, SQLState are initialized to null and the vendor code is initialized to 0. The cause is not initialized, and may subsequently be initialized by a call to the @B_java#lang#Throwable#initCause_E@ method.", "history": "Added in API level 1", "FullName": "public SQLException ()"}, "SQLException(java.lang.Throwable)": {"Returns": [], "Parameters": [["@B_java#lang#Throwable_E@", "Throwable: the underlying reason for this SQLException (which is saved for later retrieval by the getCause() method); may be null indicating the cause is non-existent or unknown."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a SQLException object with a given cause. The SQLState is initialized to null and the vendor code is initialized to 0. The reason is initialized to null if cause==null or to cause.toString() if cause!=null.", "history": "Added in API level 9", "FullName": "public SQLException (Throwable cause)"}, "SQLException(java.lang.String,java.lang.String,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a description of the exception"], ["@B_java#lang#String_E@", "String: an XOPEN or SQL:2003 code identifying the exception"], ["int", "int: a database vendor-specific exception code"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a SQLException object with a given reason, SQLState and vendorCode. The cause is not initialized, and may subsequently be initialized by a call to the @B_java#lang#Throwable#initCause_E@ method.", "history": "Added in API level 1", "FullName": "public SQLException (String reason, String SQLState, int vendorCode)"}}, "Inheritance": ["@B_java#lang#Throwable_E@", "@B_java#lang#Exception_E@"], "ClassName": "java.sql.SQLException", "ClassDesc": "An exception that provides information on a database access error or other errors. Each SQLException provides several kinds of information: a string describing the error. This is used as the Java Exception message, available via the method getMesasge. a \"SQLstate\" string, which follows either the XOPEN SQLstate conventions or the SQL:2003 conventions. The values of the SQLState string are described in the appropriate spec. The DatabaseMetaData method getSQLStateType can be used to discover whether the driver returns the XOPEN type or the SQL:2003 type. an integer error code that is specific to each vendor. Normally this will be the actual error code returned by the underlying database. a chain to a next Exception. This can be used to provide additional error information. the causal relationship, if any for this SQLException."}