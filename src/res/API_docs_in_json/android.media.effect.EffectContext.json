{"Functions": {"getFactory()": {"Returns": [["@B_android#media#effect#EffectFactory_E@", "The EffectFactory instance for this context."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the EffectFactory for this context. The EffectFactory returned from this method allows instantiating new effects within this context.", "history": "Added in API level 14", "FullName": "public EffectFactory getFactory ()"}, "createWithCurrentGlContext()": {"Returns": [["@B_android#media#effect#EffectContext_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a context within the current GL context. Binds the EffectContext to the current OpenGL context. All subsequent calls to the EffectContext must be made in the GL context that was active during creation. When you have finished using a context, you must call @B_android#media#effect#EffectContext#release_E@. to dispose of all resources associated with this context.", "history": "Added in API level 14", "FullName": "public static EffectContext createWithCurrentGlContext ()"}, "release()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Releases the context. Releases all the resources and effects associated with the EffectContext. This renders the context and all the effects bound to this context invalid. You must no longer use the context or any of its bound effects after calling release(). Note that this method must be called with the proper EGL context made current, as the EffectContext and its effects may release internal GL resources.", "history": "Added in API level 14", "FullName": "public void release ()"}}, "Inheritance": [], "ClassName": "android.media.effect.EffectContext", "ClassDesc": "An EffectContext keeps all necessary state information to run Effects within a Open GL ES 2.0 context. Every EffectContext is bound to one GL context. The application is responsible for creating this EGL context, and making it current before applying any effect. If your EGL context is destroyed, the EffectContext becomes invalid and any effects bound to this context can no longer be used. If you switch to another EGL context, you must create a new EffectContext. Each Effect is bound to a single EffectContext, and can only be executed in that context."}