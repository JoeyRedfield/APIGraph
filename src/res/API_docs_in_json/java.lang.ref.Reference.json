{"Functions": {"clear()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Clears this reference object. Invoking this method will not cause this object to be enqueued. This method is invoked only by Java code; when the garbage collector clears references it does so directly, without invoking this method.", "history": "Added in API level 1", "FullName": "public void clear ()"}, "enqueue()": {"Returns": [["boolean", "true if this reference object was successfully enqueued; false if it was already enqueued or if it was not registered with a queue when it was created"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds this reference object to the queue with which it is registered, if any. This method is invoked only by Java code; when the garbage collector enqueues references it does so directly, without invoking this method.", "history": "Added in API level 1", "FullName": "public boolean enqueue ()"}, "get()": {"Returns": [["T", "The object to which this reference refers, or null if this reference object has been cleared"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns this reference object's referent. If this reference object has been cleared, either by the program or by the garbage collector, then this method returns null.", "history": "Added in API level 1", "FullName": "public T get ()"}, "isEnqueued()": {"Returns": [["boolean", "true if and only if this reference object has been enqueued"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tells whether or not this reference object has been enqueued, either by the program or by the garbage collector. If this reference object was not registered with a queue when it was created, then this method will always return false.", "history": "Added in API level 1", "FullName": "public boolean isEnqueued ()"}, "reachabilityFence(java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: the reference. If null, this method has no effect."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Ensures that the object referenced by the given reference remains This method establishes an ordering for synchronized blocks or methods, or using other synchronization facilities are not possible or do not provide the desired control. This method is applicable only when reclamation may have visible effects, which is possible for objects with finalizers (See", "history": "Added in API level 28", "FullName": "public static void reachabilityFence (Object ref)"}}, "Inheritance": [], "ClassName": "java.lang.ref.Reference<T>", "ClassDesc": "Abstract base class for reference objects. This class defines the operations common to all reference objects. Because reference objects are implemented in close cooperation with the garbage collector, this class may not be subclassed directly."}