{"Functions": {"equals(java.lang.Object)": {"Returns": [["boolean", "true if this object is the same as the obj argument; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the reference object with which to compare."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether some other object is \"equal to\" this one. The equals method implements an equivalence relation on non-null object references: It is x, x.equals(x) should return true. It is x and y, x.equals(y) should return true if and only if y.equals(x) returns true. It is x, y, and z, if x.equals(y) returns true and y.equals(z) returns true, then x.equals(z) should return true. It is x and y, multiple invocations of x.equals(y) consistently return true or consistently return false, provided no information used in equals comparisons on the objects is modified. For any non-null reference value x, x.equals(null) should return false. The equals method for class Object implements the most discriminating possible equivalence relation on objects; that is, for any non-null reference values x and y, this method returns true if and only if x and y refer to the same object (x == y has the value true). Note that it is generally necessary to override the hashCode method whenever this method is overridden, so as to maintain the general contract for the hashCode method, which states that equal objects must have equal hash codes.", "history": "", "FullName": "boolean equals (Object o)"}, "getSessionTokenFromIntent(android.content.Intent)": {"Returns": [["@B_android#support#customtabs#CustomTabsSessionToken_E@", "The token that was generated."]], "Parameters": [["@B_android#content#Intent_E@", "Intent: The intent to generate the token from. This has to include an extra for @B_android#support#customtabs#CustomTabsIntent#EXTRA_SESSION_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtain a @B_android#support#customtabs#CustomTabsSessionToken_E@ from an intent. See @B_android#support#customtabs#CustomTabsIntent#Builder_E@ for ways to generate an intent for custom tabs.", "history": "added in version 23.1.0", "FullName": "CustomTabsSessionToken getSessionTokenFromIntent (Intent intent)"}, "getCallback()": {"Returns": [["@B_android#support#customtabs#CustomTabsCallback_E@", "@B_android#support#customtabs#CustomTabsCallback_E@ corresponding to this session if there was any non-null callbacks passed by the client."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 23.0.0", "FullName": "CustomTabsCallback getCallback ()"}, "hashCode()": {"Returns": [["int", "a hash code value for this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code value for the object. This method is supported for the benefit of hash tables such as those provided by @B_java#util#HashMap_E@. The general contract of hashCode is: Whenever it is invoked on the same object more than once during an execution of a Java application, the hashCode method must consistently return the same integer, provided no information used in equals comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application. If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result. It is not required that if two objects are unequal according to the @B_java#lang#Object#equals_E@ method, then calling the hashCode method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables. As much as is reasonably practical, the hashCode method defined by class Object does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the Java\u2122 programming language.)", "history": "", "FullName": "int hashCode ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.customtabs.CustomTabsSessionToken", "ClassDesc": "Wrapper class that can be used as a unique identifier for a session. Also contains an accessor for the @B_android#support#customtabs#CustomTabsCallback_E@ for the session if there was any."}