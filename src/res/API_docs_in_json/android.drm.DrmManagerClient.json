{"Functions": {"checkRightsStatus(android.net.Uri,int)": {"Returns": [["int", "An int representing the @B_android#drm#DrmStore#RightsStatus_E@ of the content."]], "Parameters": [["@B_android#net#Uri_E@", "Uri: URI for the rights-protected content."], ["int", "int: The @B_android#drm#DrmStore#Action_E@ to perform."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether the given rights-protected content has valid rights for the specified @B_android#drm#DrmStore#Action_E@.", "history": "Added in API level 11", "FullName": "public int checkRightsStatus (Uri uri, int action)"}, "removeAllRights()": {"Returns": [["int", "ERROR_NONE for success; ERROR_UNKNOWN for failure."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes all the rights information of every DRM plug-in (agent) associated with the DRM framework. Will be used during a master reset.", "history": "Added in API level 11", "FullName": "public int removeAllRights ()"}, "getConstraints(android.net.Uri, int)": {"Returns": [["@B_android#content#ContentValues_E@", "A @B_android#content#ContentValues_E@ instance that contains key-value pairs representing the constraints. Null in case of failure."]], "Parameters": [["@B_android#net#Uri_E@", "Uri: URI for the content from which you are retrieving DRM constraints."], ["int", "int: Action defined in @B_android#drm#DrmStore#Action_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves constraint information for rights-protected content.", "history": "added in API level 11", "FullName": "public ContentValues getConstraints (Uri uri, int action)"}, "canHandle(java.lang.String,java.lang.String)": {"Returns": [["boolean", "True if the given MIME type or path can be handled; false if they cannot be handled."]], "Parameters": [["@B_java#lang#String_E@", "String: Path of the content to be handled."], ["@B_java#lang#String_E@", "String: MIME type of the object to be handled."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether the given MIME type or path can be handled.", "history": "Added in API level 11", "FullName": "public boolean canHandle (String path, String mimeType)"}, "DrmManagerClient(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: Context of the caller."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a DrmManagerClient.", "history": "Added in API level 11", "FullName": "public DrmManagerClient (Context context)"}, "checkRightsStatus(java.lang.String,int)": {"Returns": [["int", "An int representing the @B_android#drm#DrmStore#RightsStatus_E@ of the content."]], "Parameters": [["@B_java#lang#String_E@", "String: Path to the rights-protected content."], ["int", "int: The @B_android#drm#DrmStore#Action_E@ to perform."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether the given rights-protected content has valid rights for the specified @B_android#drm#DrmStore#Action_E@.", "history": "Added in API level 11", "FullName": "public int checkRightsStatus (String path, int action)"}, "getAvailableDrmEngines()": {"Returns": [["@B_java#lang#String_E@", "A String array of DRM plug-in descriptions."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves information about all the DRM plug-ins (agents) that are registered with the DRM framework.", "history": "Added in API level 11", "FullName": "public String[] getAvailableDrmEngines ()"}, "getConstraints(android.net.Uri,int)": {"Returns": [["@B_android#content#ContentValues_E@", "A @B_android#content#ContentValues_E@ instance that contains key-value pairs representing the constraints. Null in case of failure."]], "Parameters": [["@B_android#net#Uri_E@", "Uri: URI for the content from which you are retrieving DRM constraints."], ["int", "int: Action defined in @B_android#drm#DrmStore#Action_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves constraint information for rights-protected content.", "history": "Added in API level 11", "FullName": "public ContentValues getConstraints (Uri uri, int action)"}, "convertData(int,byte[])": {"Returns": [["@B_android#drm#DrmConvertedStatus_E@", "A @B_android#drm#DrmConvertedStatus_E@ object that contains the status of the data conversion, the converted data, and offset for the header and body signature. An application can ignore the offset because it is only relevant to the @B_android#drm#DrmManagerClient#closeConvertSession_E@ method."]], "Parameters": [["int", "int: Handle for the conversion session."], ["byte[]", "byte: Input data that needs to be converted."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Converts the input data (content) that is part of a rights-protected file. The converted data and status is returned in a @B_android#drm#DrmConvertedStatus_E@ object. This method should be called each time there is a new block of data received by the application.", "history": "Added in API level 11", "FullName": "public DrmConvertedStatus convertData (int convertId, byte[] inputData)"}, "convertData(int, byte[])": {"Returns": [["@B_android#drm#DrmConvertedStatus_E@", "A @B_android#drm#DrmConvertedStatus_E@ object that contains the status of the data conversion, the converted data, and offset for the header and body signature. An application can ignore the offset because it is only relevant to the @B_android#drm#DrmManagerClient#closeConvertSession_E@ method."]], "Parameters": [["int", "int: Handle for the conversion session."], ["byte[]", "byte: Input data that needs to be converted."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Converts the input data (content) that is part of a rights-protected file. The converted data and status is returned in a @B_android#drm#DrmConvertedStatus_E@ object. This method should be called each time there is a new block of data received by the application.", "history": "added in API level 11", "FullName": "public DrmConvertedStatus convertData (int convertId, byte[] inputData)"}, "close()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Releases resources associated with the current session of DrmManagerClient. It is considered good practice to call this method when the @B_android#drm#DrmManagerClient_E@ object is no longer needed in your application. After this method is called, @B_android#drm#DrmManagerClient_E@ is no longer usable since it has lost all of its required resource. This method was added in API 24. In API versions 16 through 23, release() should be called instead. There is no need to do anything for API versions prior to 16.", "history": "Added in API level 24", "FullName": "public void close ()"}, "canHandle(android.net.Uri, java.lang.String)": {"Returns": [["boolean", "True if the given MIME type or URI can be handled; false if they cannot be handled."]], "Parameters": [["@B_android#net#Uri_E@", "Uri: URI for the content to be handled."], ["@B_java#lang#String_E@", "String: MIME type of the object to be handled"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether the given MIME type or URI can be handled.", "history": "added in API level 11", "FullName": "public boolean canHandle (Uri uri, String mimeType)"}, "getOriginalMimeType(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "The MIME type of the original content, such as video/mpeg."]], "Parameters": [["@B_java#lang#String_E@", "String: Path to the rights-protected content."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the MIME type embedded in the original content.", "history": "Added in API level 11", "FullName": "public String getOriginalMimeType (String path)"}, "checkRightsStatus(java.lang.String, int)": {"Returns": [["int", "An int representing the @B_android#drm#DrmStore#RightsStatus_E@ of the content."]], "Parameters": [["@B_java#lang#String_E@", "String: Path to the rights-protected content."], ["int", "int: The @B_android#drm#DrmStore#Action_E@ to perform."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether the given rights-protected content has valid rights for the specified @B_android#drm#DrmStore#Action_E@.", "history": "added in API level 11", "FullName": "public int checkRightsStatus (String path, int action)"}, "getDrmObjectType(java.lang.String,java.lang.String)": {"Returns": [["int", "An int that corresponds to a @B_android#drm#DrmStore#DrmObjectType_E@."]], "Parameters": [["@B_java#lang#String_E@", "String: Path to the content or null."], ["@B_java#lang#String_E@", "String: MIME type of the content or null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the type of rights-protected object (for example, content object, rights object, and so on) using the specified path or MIME type. At least one parameter must be specified to retrieve the DRM object type.", "history": "Added in API level 11", "FullName": "public int getDrmObjectType (String path, String mimeType)"}, "checkRightsStatus(android.net.Uri)": {"Returns": [["int", "An int representing the @B_android#drm#DrmStore#RightsStatus_E@ of the content."]], "Parameters": [["@B_android#net#Uri_E@", "Uri: URI of the rights-protected content."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check whether the given content has valid rights.", "history": "Added in API level 11", "FullName": "public int checkRightsStatus (Uri uri)"}, "checkRightsStatus(android.net.Uri, int)": {"Returns": [["int", "An int representing the @B_android#drm#DrmStore#RightsStatus_E@ of the content."]], "Parameters": [["@B_android#net#Uri_E@", "Uri: URI for the rights-protected content."], ["int", "int: The @B_android#drm#DrmStore#Action_E@ to perform."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether the given rights-protected content has valid rights for the specified @B_android#drm#DrmStore#Action_E@.", "history": "added in API level 11", "FullName": "public int checkRightsStatus (Uri uri, int action)"}, "openConvertSession(java.lang.String)": {"Returns": [["int", "A convert ID that is used used to maintain the conversion session."]], "Parameters": [["@B_java#lang#String_E@", "String: MIME type of the input data packet."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Initiates a new conversion session. An application must initiate a conversion session with this method each time it downloads a rights-protected file that needs to be converted. This method applies only to forward-locking (copy protection) DRM schemes.", "history": "Added in API level 11", "FullName": "public int openConvertSession (String mimeType)"}, "setOnEventListener(android.drm.DrmManagerClient.OnEventListener)": {"Returns": [], "Parameters": [["@B_android#drm#DrmManagerClient#OnEventListener_E@", "DrmManagerClient.OnEventListener: Interface definition for the callback."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers an @B_android#drm#DrmManagerClient#OnEventListener_E@ callback, which is invoked when the DRM framework sends information about DRM processing.", "history": "Added in API level 11", "FullName": "public void setOnEventListener (DrmManagerClient.OnEventListener eventListener)"}, "getConstraints(java.lang.String, int)": {"Returns": [["@B_android#content#ContentValues_E@", "A @B_android#content#ContentValues_E@ instance that contains key-value pairs representing the constraints. Null in case of failure. The keys are defined in @B_android#drm#DrmStore#ConstraintsColumns_E@."]], "Parameters": [["@B_java#lang#String_E@", "String: Path to the content from which you are retrieving DRM constraints."], ["int", "int: Action defined in @B_android#drm#DrmStore#Action_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves constraint information for rights-protected content.", "history": "added in API level 11", "FullName": "public ContentValues getConstraints (String path, int action)"}, "saveRights(android.drm.DrmRights,java.lang.String,java.lang.String)": {"Returns": [["int", "ERROR_NONE for success; ERROR_UNKNOWN for failure."]], "Parameters": [["@B_android#drm#DrmRights_E@", "DrmRights: The @B_android#drm#DrmRights_E@ to be saved."], ["@B_java#lang#String_E@", "String: File path where rights will be saved."], ["@B_java#lang#String_E@", "String: File path where content is saved."]], "Throws": [["@B_java#io#IOException_E@", "If the call failed to save rights information at the given rightsPath."]], "SeeAlso": [], "Permissions": [], "Description": "Saves rights to a specified path and associates that path with the content path. rightsPath and contentPath can be null.", "history": "Added in API level 11", "FullName": "public int saveRights (DrmRights drmRights, String rightsPath, String contentPath)"}, "setOnInfoListener(android.drm.DrmManagerClient.OnInfoListener)": {"Returns": [], "Parameters": [["@B_android#drm#DrmManagerClient#OnInfoListener_E@", "DrmManagerClient.OnInfoListener: Interface definition for the callback."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers an @B_android#drm#DrmManagerClient#OnInfoListener_E@ callback, which is invoked when the DRM framework sends status or warning information during registration or rights acquisition.", "history": "Added in API level 11", "FullName": "public void setOnInfoListener (DrmManagerClient.OnInfoListener infoListener)"}, "getConstraints(java.lang.String,int)": {"Returns": [["@B_android#content#ContentValues_E@", "A @B_android#content#ContentValues_E@ instance that contains key-value pairs representing the constraints. Null in case of failure. The keys are defined in @B_android#drm#DrmStore#ConstraintsColumns_E@."]], "Parameters": [["@B_java#lang#String_E@", "String: Path to the content from which you are retrieving DRM constraints."], ["int", "int: Action defined in @B_android#drm#DrmStore#Action_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves constraint information for rights-protected content.", "history": "Added in API level 11", "FullName": "public ContentValues getConstraints (String path, int action)"}, "closeConvertSession(int)": {"Returns": [["@B_android#drm#DrmConvertedStatus_E@", "A @B_android#drm#DrmConvertedStatus_E@ object that contains the status of the data conversion, the converted data, and the offset for the header and body signature."]], "Parameters": [["int", "int: Handle for the conversion session."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Informs the DRM plug-in (agent) that there is no more data to convert or that an error has occurred. Upon successful conversion of the data, the DRM agent will provide an offset value indicating where the header and body signature should be added. Appending the signature is necessary to protect the integrity of the converted file.", "history": "Added in API level 11", "FullName": "public DrmConvertedStatus closeConvertSession (int convertId)"}, "checkRightsStatus(java.lang.String)": {"Returns": [["int", "An int representing the @B_android#drm#DrmStore#RightsStatus_E@ of the content."]], "Parameters": [["@B_java#lang#String_E@", "String: Path to the rights-protected content."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether the given content has valid rights.", "history": "Added in API level 11", "FullName": "public int checkRightsStatus (String path)"}, "getMetadata(android.net.Uri)": {"Returns": [["@B_android#content#ContentValues_E@", "A @B_android#content#ContentValues_E@ instance that contains key-value pairs representing the constraints. Null in case of failure."]], "Parameters": [["@B_android#net#Uri_E@", "Uri: URI for the content from which you are retrieving metadata information."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves metadata information for rights-protected content.", "history": "Added in API level 11", "FullName": "public ContentValues getMetadata (Uri uri)"}, "acquireRights(android.drm.DrmInfoRequest)": {"Returns": [["int", "ERROR_NONE for success; ERROR_UNKNOWN for failure."]], "Parameters": [["@B_android#drm#DrmInfoRequest_E@", "DrmInfoRequest: The @B_android#drm#DrmInfoRequest_E@ used to acquire the rights."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Processes a given @B_android#drm#DrmInfoRequest_E@ and returns the rights information asynchronously. This is a utility method that consists of an @B_android#drm#DrmManagerClient#acquireDrmInfo_E@ and a @B_android#drm#DrmManagerClient#processDrmInfo_E@ method call. This utility method can be used only if the selected DRM plug-in (agent) supports this sequence of calls. Some DRM agents, such as OMA, do not support this utility method, in which case an application must invoke @B_android#drm#DrmManagerClient#acquireDrmInfo_E@ and @B_android#drm#DrmManagerClient#processDrmInfo_E@ separately.", "history": "Added in API level 11", "FullName": "public int acquireRights (DrmInfoRequest drmInfoRequest)"}, "canHandle(android.net.Uri,java.lang.String)": {"Returns": [["boolean", "True if the given MIME type or URI can be handled; false if they cannot be handled."]], "Parameters": [["@B_android#net#Uri_E@", "Uri: URI for the content to be handled."], ["@B_java#lang#String_E@", "String: MIME type of the object to be handled"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether the given MIME type or URI can be handled.", "history": "Added in API level 11", "FullName": "public boolean canHandle (Uri uri, String mimeType)"}, "canHandle(java.lang.String, java.lang.String)": {"Returns": [["boolean", "True if the given MIME type or path can be handled; false if they cannot be handled."]], "Parameters": [["@B_java#lang#String_E@", "String: Path of the content to be handled."], ["@B_java#lang#String_E@", "String: MIME type of the object to be handled."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether the given MIME type or path can be handled.", "history": "added in API level 11", "FullName": "public boolean canHandle (String path, String mimeType)"}, "getDrmObjectType(android.net.Uri,java.lang.String)": {"Returns": [["int", "An int that corresponds to a @B_android#drm#DrmStore#DrmObjectType_E@."]], "Parameters": [["@B_android#net#Uri_E@", "Uri: URI for the content or null."], ["@B_java#lang#String_E@", "String: MIME type of the content or null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the type of rights-protected object (for example, content object, rights object, and so on) using the specified URI or MIME type. At least one parameter must be specified to retrieve the DRM object type.", "history": "Added in API level 11", "FullName": "public int getDrmObjectType (Uri uri, String mimeType)"}, "release()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "replaced by @B_android#drm#DrmManagerClient#close_E@.", "history": "Added in API level 16 Deprecated in API level 24", "FullName": "public void release ()"}, "removeRights(java.lang.String)": {"Returns": [["int", "ERROR_NONE for success; ERROR_UNKNOWN for failure."]], "Parameters": [["@B_java#lang#String_E@", "String: Path to the rights-protected content."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes the rights associated with the given rights-protected content.", "history": "Added in API level 11", "FullName": "public int removeRights (String path)"}, "processDrmInfo(android.drm.DrmInfo)": {"Returns": [["int", "ERROR_NONE for success; ERROR_UNKNOWN for failure."]], "Parameters": [["@B_android#drm#DrmInfo_E@", "DrmInfo: The @B_android#drm#DrmInfo_E@ to be processed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Processes the given DRM information based on the information type.", "history": "Added in API level 11", "FullName": "public int processDrmInfo (DrmInfo drmInfo)"}, "finalize()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#lang#Throwable_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Called by the garbage collector on an object when garbage collection determines that there are no more references to the object. A subclass overrides the finalize method to dispose of system resources or to perform other cleanup. The general contract of finalize is that it is invoked if and when the Java\u2122 virtual machine has determined that there is no longer any means by which this object can be accessed by any thread that has not yet died, except as a result of an action taken by the finalization of some other object or class which is ready to be finalized. The finalize method may take any action, including making this object available again to other threads; the usual purpose of finalize, however, is to perform cleanup actions before the object is irrevocably discarded. For example, the finalize method for an object that represents an input/output connection might perform explicit I/O transactions to break the connection before the object is permanently discarded. The finalize method of class Object performs no special action; it simply returns normally. Subclasses of Object may override this definition. The Java programming language does not guarantee which thread will invoke the finalize method for any given object. It is guaranteed, however, that the thread that invokes finalize will not be holding any user-visible synchronization locks when finalize is invoked. If an uncaught exception is thrown by the finalize method, the exception is ignored and finalization of that object terminates. After the finalize method has been invoked for an object, no further action is taken until the Java virtual machine has again determined that there is no longer any means by which this object can be accessed by any thread that has not yet died, including possible actions by other objects or classes which are ready to be finalized, at which point the object may be discarded. The finalize method is never invoked more than once by a Java virtual machine for any given object. Any exception thrown by the finalize method causes the finalization of this object to be halted, but is otherwise ignored.", "history": "Added in API level 11", "FullName": "protected void finalize ()"}, "getOriginalMimeType(android.net.Uri)": {"Returns": [["@B_java#lang#String_E@", "MIME type of the original content, such as video/mpeg."]], "Parameters": [["@B_android#net#Uri_E@", "Uri: URI of the rights-protected content."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the MIME type embedded in the original content.", "history": "Added in API level 11", "FullName": "public String getOriginalMimeType (Uri uri)"}, "getMetadata(java.lang.String)": {"Returns": [["@B_android#content#ContentValues_E@", "A @B_android#content#ContentValues_E@ instance that contains key-value pairs representing the metadata. Null in case of failure."]], "Parameters": [["@B_java#lang#String_E@", "String: Path to the content from which you are retrieving metadata information."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves metadata information for rights-protected content.", "history": "Added in API level 11", "FullName": "public ContentValues getMetadata (String path)"}, "setOnErrorListener(android.drm.DrmManagerClient.OnErrorListener)": {"Returns": [], "Parameters": [["@B_android#drm#DrmManagerClient#OnErrorListener_E@", "DrmManagerClient.OnErrorListener: Interface definition for the callback."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers an @B_android#drm#DrmManagerClient#OnErrorListener_E@ callback, which is invoked when the DRM framework sends error information.", "history": "Added in API level 11", "FullName": "public void setOnErrorListener (DrmManagerClient.OnErrorListener errorListener)"}, "acquireDrmInfo(android.drm.DrmInfoRequest)": {"Returns": [["@B_android#drm#DrmInfo_E@", "A @B_android#drm#DrmInfo_E@ instance."]], "Parameters": [["@B_android#drm#DrmInfoRequest_E@", "DrmInfoRequest: The @B_android#drm#DrmInfoRequest_E@ that specifies the type of DRM information being retrieved."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves information for registering, unregistering, or acquiring rights.", "history": "Added in API level 11", "FullName": "public DrmInfo acquireDrmInfo (DrmInfoRequest drmInfoRequest)"}, "removeRights(android.net.Uri)": {"Returns": [["int", "ERROR_NONE for success; ERROR_UNKNOWN for failure."]], "Parameters": [["@B_android#net#Uri_E@", "Uri: URI for the rights-protected content."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes the rights associated with the given rights-protected content.", "history": "Added in API level 11", "FullName": "public int removeRights (Uri uri)"}}, "Inheritance": [], "ClassName": "android.drm.DrmManagerClient", "ClassDesc": "The main programming interface for the DRM framework. An application must instantiate this class to access DRM agents through the DRM framework."}