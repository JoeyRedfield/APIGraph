{"Functions": {"isNewUser(com.google.android.gms.common.api.GoogleApiClient, int)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "An instance of @B_com#google#android#gms#common#api#GoogleApiClient_E@ configured to use the Wallet API"], ["int", "will be passed back in onActivityResult where you can retrieve the result via @B_com#google#android#gms#wallet#WalletConstants#EXTRA_IS_NEW_USER_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks if this is a new user, i.e. if they have used Instant Buy to make a purchase for your app before or not. If the user has multiple accounts on the device, each will be checked. If any of the accounts has been used to make an Instant Buy purchase with your app, then false will be returned. True is only returned if none of the accounts on the device have used Instant Buy to make a purchase with your app.", "history": "", "FullName": "public abstract void isNewUser (GoogleApiClient googleApiClient, int requestCode)"}, "changeMaskedWallet(com.google.android.gms.common.api.GoogleApiClient, java.lang.String, java.lang.String, int)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "An instance of @B_com#google#android#gms#common#api#GoogleApiClient_E@ configured to use the Wallet API"], ["String", "Required field. Must be identical to the value returned in an earlier @B_com#google#android#gms#wallet#MaskedWallet_E@ in the same transaction."], ["String", "Optional merchant identifier for the transaction. The value will be echoed back in @B_com#google#android#gms#wallet#MaskedWallet_E@, but is not otherwise used by the Wallet API. To omit, pass null"], ["int", "will be passed back in onActivityResult where you can retrieve the result via @B_com#google#android#gms#wallet#WalletConstants#EXTRA_MASKED_WALLET_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method brings up a Google Wallet selector screen to allow your customer to select a new payment instrument or shipping address from their Google Wallet.", "history": "", "FullName": "public abstract void changeMaskedWallet (GoogleApiClient googleApiClient, String googleTransactionId, String merchantTransactionId, int requestCode)"}, "loadMaskedWallet(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.wallet.MaskedWalletRequest, int)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "An instance of @B_com#google#android#gms#common#api#GoogleApiClient_E@ configured to use the Wallet API"], ["int", "will be passed back in onActivityResult where you can retrieve the result via @B_com#google#android#gms#wallet#WalletConstants#EXTRA_MASKED_WALLET_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "If an application has authorization, loadMaskedWallet() allows you to skip the Google Wallet selector and directly request the masked payment credentials. This provides a more seamless purchase experience for your customers. When you call this method, the Google Wallet selector will be shown only if necessary. Either way, you can retrieve the @B_com#google#android#gms#wallet#MaskedWallet_E@ in onActivityResult using the specified requestCode.", "history": "", "FullName": "public abstract void loadMaskedWallet (GoogleApiClient googleApiClient, MaskedWalletRequest request, int requestCode)"}, "notifyTransactionStatus(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.wallet.NotifyTransactionStatusRequest)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "An instance of @B_com#google#android#gms#common#api#GoogleApiClient_E@ configured to use the Wallet API"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sends a notification to Google on whether the transaction succeeded or failed. This should always be called after payment processing as well as any failed validation checks.", "history": "", "FullName": "public abstract void notifyTransactionStatus (GoogleApiClient googleApiClient, NotifyTransactionStatusRequest request)"}, "checkForPreAuthorization(com.google.android.gms.common.api.GoogleApiClient, int)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "An instance of @B_com#google#android#gms#common#api#GoogleApiClient_E@ configured to use the Wallet API"], ["int", "will be passed back in onActivityResult where you can retrieve the result via @B_com#google#android#gms#wallet#WalletConstants#EXTRA_IS_USER_PREAUTHORIZED_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This API checks to see if a user has previously authorized the application to access their Wallet account.", "history": "", "FullName": "public abstract void checkForPreAuthorization (GoogleApiClient googleApiClient, int requestCode)"}, "loadFullWallet(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.wallet.FullWalletRequest, int)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "An instance of @B_com#google#android#gms#common#api#GoogleApiClient_E@ configured to use the Wallet API"], ["int", "will be passed back in onActivityResult where you can retrieve the result via @B_com#google#android#gms#wallet#WalletConstants#EXTRA_FULL_WALLET_E@ or @B_com#google#android#gms#wallet#WalletConstants#EXTRA_MASKED_WALLET_E@ if the user had to make new selections."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Requests a @B_com#google#android#gms#wallet#FullWallet_E@, which contains the payment credentials. You can retrieve the @B_com#google#android#gms#wallet#FullWallet_E@ in onActivityResult using the requestCode that you provide to this method. If there is a problem with the transaction then the Google Wallet selector will be shown and a @B_com#google#android#gms#wallet#MaskedWallet_E@ will be returned to reflect new selections by the user. This function should only be called when the customer confirms the purchase. Important: Because the credentials are in plain text it is important to transfer the payment credentials following", "history": "", "FullName": "public abstract void loadFullWallet (GoogleApiClient googleApiClient, FullWalletRequest request, int requestCode)"}}, "Inheritance": [], "ClassName": "com.google.android.gms.wallet.Payments", "ClassDesc": "Entry point for interacting with Wallet buyflow APIs. To allow the user to select and change the account associated with the transaction and Google transaction ID, use null or simply do not set it using @B_com#google#android#gms#common#api#GoogleApiClient#Builder#setAccountName_E@. No special action is required when a user changes the selected account through the UI in this case, and the Google transaction ID associated with the transaction can continue to be used. To specify the account and prevent the user from selecting another account, set the account using @B_com#google#android#gms#common#api#GoogleApiClient#Builder#setAccountName_E@. To change the account, construct a new GoogleApiClient with the new account and do not reuse the Google transaction ID associated with the old account - this is a new transaction. We recommend that you apply for API access at @B_com#google#android#gms#wallet#WalletConstants#ENVIRONMENT_SANDBOX_E@ using @B_com#google#android#gms#wallet#Wallet#WalletOptions#Builder#setEnvironment_E@. For production access, you must specify @B_com#google#android#gms#wallet#WalletConstants#ENVIRONMENT_PRODUCTION_E@."}