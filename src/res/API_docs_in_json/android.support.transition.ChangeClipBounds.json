{"Functions": {"ChangeClipBounds()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 26.0.0-beta1", "FullName": "ChangeClipBounds ()"}, "getTransitionProperties()": {"Returns": [["@B_java#lang#String_E@", "An array of property names as described in the class documentation for @B_android#support#transition#TransitionValues_E@. The default implementation returns null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the set of property names used stored in the @B_android#support#transition#TransitionValues_E@ object passed into @B_android#support#transition#Transition#captureStartValues_E@ that this transition cares about for the purposes of canceling overlapping animations. When any transition is started on a given scene root, all transitions currently running on that same scene root are checked to see whether the properties on which they based their animations agree with the end values of the same properties in the new transition. If the end values are not equal, then the old animation is canceled since the new transition will start a new animation to these new values. If the values are equal, the old animation is allowed to continue and no new animation is started for that transition. A transition does not need to override this method. However, not doing so will mean that the cancellation logic outlined in the previous paragraph will be skipped for that transition, possibly leading to artifacts as old transitions and new transitions on the same targets run in parallel, animating views toward potentially different end values.", "history": "added in version 26.0.0-beta1", "FullName": "String[] getTransitionProperties ()"}}, "Inheritance": ["java.lang.Object", "@B_android#support#transition#Transition_E@"], "ClassName": "android.support.transition.ChangeClipBounds", "ClassDesc": "ChangeClipBounds captures the https:##developer#android#com@B_android#view#View#getClipBounds_E@ before and after the scene change and animates those changes during the transition. Prior to API 18 this does nothing."}