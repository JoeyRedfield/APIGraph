{"Functions": {"get(android.nfc.Tag)": {"Returns": [["@B_android#nfc#tech#NfcF_E@", "NFC-F object"]], "Parameters": [["@B_android#nfc#Tag_E@", "Tag: an NFC-F compatible tag"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get an instance of @B_android#nfc#tech#NfcF_E@ for the given tag. Returns null if @B_android#nfc#tech#NfcF_E@ was not enumerated in @B_android#nfc#Tag#getTechList_E@. This indicates the tag does not support NFC-F. Does not cause any RF activity and does not block.", "history": "Added in API level 10", "FullName": "public static NfcF get (Tag tag)"}, "isConnected()": {"Returns": [["boolean", "true if I/O operations should be possible"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Helper to indicate if I/O operations should be possible. Returns true if @B_android#nfc#tech#TagTechnology#connect_E@ has completed, and @B_android#nfc#tech#TagTechnology#close_E@ has not been called, and the @B_android#nfc#Tag_E@ is not known to be out of range. Does not cause RF activity, and does not block.", "history": "added in API level 10", "FullName": "public boolean isConnected ()"}, "setTimeout(int)": {"Returns": [], "Parameters": [["int", "int: timeout value in milliseconds"]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#NFC_E@"], "Description": "Set the @B_android#nfc#tech#NfcF#transceive_E@ timeout in milliseconds. The timeout only applies to @B_android#nfc#tech#NfcF#transceive_E@ on this object, and is reset to a default value when @B_android#nfc#tech#NfcF#close_E@ is called. Setting a longer timeout may be useful when performing transactions that require a long processing time on the tag such as key generation. Requires the @B_android#Manifest#permission#NFC_E@ permission.", "history": "Added in API level 14", "FullName": "public void setTimeout (int timeout)"}, "getMaxTransceiveLength()": {"Returns": [["int", "the maximum number of bytes that can be sent with @B_android#nfc#tech#NfcF#transceive_E@."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the maximum number of bytes that can be sent with @B_android#nfc#tech#NfcF#transceive_E@.", "history": "Added in API level 14", "FullName": "public int getMaxTransceiveLength ()"}, "connect()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#NFC_E@"], "Description": "Enable I/O operations to the tag from this @B_android#nfc#tech#TagTechnology_E@ object. May cause RF activity and may block. Must not be called from the main application thread. A blocked call will be canceled with @B_java#io#IOException_E@ by calling @B_android#nfc#tech#TagTechnology#close_E@ from another thread. Only one @B_android#nfc#tech#TagTechnology_E@ object can be connected to a @B_android#nfc#Tag_E@ at a time. Applications must call @B_android#nfc#tech#TagTechnology#close_E@ when I/O operations are complete. Requires the @B_android#Manifest#permission#NFC_E@ permission.", "history": "added in API level 10", "FullName": "public void connect ()"}, "getSystemCode()": {"Returns": [["byte[]", "System Code bytes"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the System Code bytes from tag discovery. Does not cause any RF activity and does not block.", "history": "Added in API level 10", "FullName": "public byte[] getSystemCode ()"}, "getManufacturer()": {"Returns": [["byte[]", "Manufacturer bytes"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the Manufacturer bytes from tag discovery. Does not cause any RF activity and does not block.", "history": "Added in API level 10", "FullName": "public byte[] getManufacturer ()"}, "getTimeout()": {"Returns": [["int", "timeout value in milliseconds"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#NFC_E@"], "Description": "Get the current @B_android#nfc#tech#NfcF#transceive_E@ timeout in milliseconds. Requires the @B_android#Manifest#permission#NFC_E@ permission.", "history": "Added in API level 14", "FullName": "public int getTimeout ()"}, "transceive(byte[])": {"Returns": [["byte[]", "bytes received in response"]], "Parameters": [["byte[]", "byte: bytes to send"]], "Throws": [["", "if the tag leaves the field"], ["@B_java#io#IOException_E@", "if there is an I/O failure, or this operation is canceled"]], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#NFC_E@"], "Description": "Send raw NFC-F commands to the tag and receive the response. Applications must not prefix the SoD (preamble and sync code) and/or append the EoD (CRC) to the payload, it will be automatically calculated. A typical NFC-F frame for this method looks like: Use @B_android#nfc#tech#NfcF#getMaxTransceiveLength_E@ to retrieve the maximum amount of bytes that can be sent with @B_android#nfc#tech#NfcF#transceive_E@. This is an I/O operation and will block until complete. It must not be called from the main application thread. A blocked call will be canceled with @B_java#io#IOException_E@ if @B_android#nfc#tech#NfcF#close_E@ is called from another thread. Requires the @B_android#Manifest#permission#NFC_E@ permission.", "history": "Added in API level 10", "FullName": "public byte[] transceive (byte[] data)"}, "close()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#NFC_E@"], "Description": "Disable I/O operations to the tag from this @B_android#nfc#tech#TagTechnology_E@ object, and release resources. Also causes all blocked I/O operations on other thread to be canceled and return with @B_java#io#IOException_E@. Requires the @B_android#Manifest#permission#NFC_E@ permission.", "history": "added in API level 10", "FullName": "public void close ()"}, "getTag()": {"Returns": [["@B_android#nfc#Tag_E@", "the @B_android#nfc#Tag_E@ backing this @B_android#nfc#tech#TagTechnology_E@ object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the @B_android#nfc#Tag_E@ object backing this @B_android#nfc#tech#TagTechnology_E@ object.", "history": "added in API level 10", "FullName": "public Tag getTag ()"}}, "Inheritance": [], "ClassName": "android.nfc.tech.NfcF", "ClassDesc": "Provides access to NFC-F (JIS 6319-4) properties and I/O operations on a @B_android#nfc#Tag_E@. Acquire a @B_android#nfc#tech#NfcF_E@ object using @B_android#nfc#tech#NfcF#get_E@. The primary NFC-F I/O operation is @B_android#nfc#tech#NfcF#transceive_E@. Applications must implement their own protocol stack on top of @B_android#nfc#tech#NfcF#transceive_E@. @B_android#Manifest#permission#NFC_E@ permission."}