{"Functions": {"range(E, E)": {"Returns": [["@B_java#util#EnumSet_E@", "an enum set initially containing all of the elements in the range defined by the two specified endpoints"]], "Parameters": [["E", "E: the first element in the range"], ["E", "E: the last element in the range"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if from or to are null"], ["@B_java#lang#IllegalArgumentException_E@", "if from.compareTo(to) > 0"]], "SeeAlso": [], "Permissions": [], "Description": "Creates an enum set initially containing all of the elements in the range defined by the two specified endpoints. The returned set will contain the endpoints themselves, which may be identical but must not be out of order.", "history": "added in API level 1", "FullName": "public static EnumSet<E> range (E from, E to)"}, "of(E,E,E,E)": {"Returns": [["@B_java#util#EnumSet_E@", "an enum set initially containing the specified elements"]], "Parameters": [["E", "E: an element that this set is to contain initially"], ["E", "E: another element that this set is to contain initially"], ["E", "E: another element that this set is to contain initially"], ["E", "E: another element that this set is to contain initially"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if any parameters are null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates an enum set initially containing the specified elements. Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.", "history": "Added in API level 1", "FullName": "public static EnumSet<E> of (E e1, E e2, E e3, E e4)"}, "range(E,E)": {"Returns": [["@B_java#util#EnumSet_E@", "an enum set initially containing all of the elements in the range defined by the two specified endpoints"]], "Parameters": [["E", "E: the first element in the range"], ["E", "E: the last element in the range"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if from or to are null"], ["@B_java#lang#IllegalArgumentException_E@", "if from.compareTo(to) > 0"]], "SeeAlso": [], "Permissions": [], "Description": "Creates an enum set initially containing all of the elements in the range defined by the two specified endpoints. The returned set will contain the endpoints themselves, which may be identical but must not be out of order.", "history": "Added in API level 1", "FullName": "public static EnumSet<E> range (E from, E to)"}, "of(E,E)": {"Returns": [["@B_java#util#EnumSet_E@", "an enum set initially containing the specified elements"]], "Parameters": [["E", "E: an element that this set is to contain initially"], ["E", "E: another element that this set is to contain initially"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if any parameters are null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates an enum set initially containing the specified elements. Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.", "history": "Added in API level 1", "FullName": "public static EnumSet<E> of (E e1, E e2)"}, "allOf(java.lang.Class<E>)": {"Returns": [["@B_java#util#EnumSet_E@", "An enum set containing all the elements in the specified type."]], "Parameters": [["@B_java#lang#Class_E@", "Class: the class object of the element type for this enum set"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if elementType is null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates an enum set containing all of the elements in the specified element type.", "history": "Added in API level 1", "FullName": "public static EnumSet<E> allOf (Class<E> elementType)"}, "of(E)": {"Returns": [["@B_java#util#EnumSet_E@", "an enum set initially containing the specified element"]], "Parameters": [["E", "E: the element that this set is to contain initially"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if e is null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates an enum set initially containing the specified element. Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.", "history": "Added in API level 1", "FullName": "public static EnumSet<E> of (E e)"}, "of(E, E, E, E)": {"Returns": [["@B_java#util#EnumSet_E@", "an enum set initially containing the specified elements"]], "Parameters": [["E", "E: an element that this set is to contain initially"], ["E", "E: another element that this set is to contain initially"], ["E", "E: another element that this set is to contain initially"], ["E", "E: another element that this set is to contain initially"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if any parameters are null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates an enum set initially containing the specified elements. Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.", "history": "added in API level 1", "FullName": "public static EnumSet<E> of (E e1, E e2, E e3, E e4)"}, "of(E,E...)": {"Returns": [["@B_java#util#EnumSet_E@", "an enum set initially containing the specified elements"]], "Parameters": [["E", "E: an element that the set is to contain initially"], ["E...", "E: the remaining elements the set is to contain initially"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if any of the specified elements are null, or if rest is null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates an enum set initially containing the specified elements. This factory, whose parameter list uses the varargs feature, may be used to create an enum set initially containing an arbitrary number of elements, but it is likely to run slower than the overloadings that do not use varargs.", "history": "Added in API level 1", "FullName": "public static EnumSet<E> of (E first, E... rest)"}, "of(E, E...)": {"Returns": [["@B_java#util#EnumSet_E@", "an enum set initially containing the specified elements"]], "Parameters": [["E", "E: an element that the set is to contain initially"], ["E...", "E: the remaining elements the set is to contain initially"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if any of the specified elements are null, or if rest is null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates an enum set initially containing the specified elements. This factory, whose parameter list uses the varargs feature, may be used to create an enum set initially containing an arbitrary number of elements, but it is likely to run slower than the overloadings that do not use varargs.", "history": "added in API level 1", "FullName": "public static EnumSet<E> of (E first, E... rest)"}, "of(E, E, E)": {"Returns": [["@B_java#util#EnumSet_E@", "an enum set initially containing the specified elements"]], "Parameters": [["E", "E: an element that this set is to contain initially"], ["E", "E: another element that this set is to contain initially"], ["E", "E: another element that this set is to contain initially"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if any parameters are null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates an enum set initially containing the specified elements. Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.", "history": "added in API level 1", "FullName": "public static EnumSet<E> of (E e1, E e2, E e3)"}, "complementOf(java.util.EnumSet<E>)": {"Returns": [["@B_java#util#EnumSet_E@", "The complement of the specified set in this set"]], "Parameters": [["@B_java#util#EnumSet_E@", "EnumSet: the enum set from whose complement to initialize this enum set"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if s is null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates an enum set with the same element type as the specified enum set, initially containing all the elements of this type that are", "history": "Added in API level 1", "FullName": "public static EnumSet<E> complementOf (EnumSet<E> s)"}, "noneOf(java.lang.Class<E>)": {"Returns": [["@B_java#util#EnumSet_E@", "An empty enum set of the specified type."]], "Parameters": [["@B_java#lang#Class_E@", "Class: the class object of the element type for this enum set"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if elementType is null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates an empty enum set with the specified element type.", "history": "Added in API level 1", "FullName": "public static EnumSet<E> noneOf (Class<E> elementType)"}, "of(E,E,E,E,E)": {"Returns": [["@B_java#util#EnumSet_E@", "an enum set initially containing the specified elements"]], "Parameters": [["E", "E: an element that this set is to contain initially"], ["E", "E: another element that this set is to contain initially"], ["E", "E: another element that this set is to contain initially"], ["E", "E: another element that this set is to contain initially"], ["E", "E: another element that this set is to contain initially"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if any parameters are null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates an enum set initially containing the specified elements. Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.", "history": "Added in API level 1", "FullName": "public static EnumSet<E> of (E e1, E e2, E e3, E e4, E e5)"}, "copyOf(java.util.EnumSet<E>)": {"Returns": [["@B_java#util#EnumSet_E@", "A copy of the specified enum set."]], "Parameters": [["@B_java#util#EnumSet_E@", "EnumSet: the enum set from which to initialize this enum set"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if s is null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates an enum set with the same element type as the specified enum set, initially containing the same elements (if any).", "history": "Added in API level 1", "FullName": "public static EnumSet<E> copyOf (EnumSet<E> s)"}, "copyOf(java.util.Collection<E>)": {"Returns": [["@B_java#util#EnumSet_E@", "An enum set initialized from the given collection."]], "Parameters": [["@B_java#util#Collection_E@", "Collection: the collection from which to initialize this enum set"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if c is not an EnumSet instance and contains no elements"], ["@B_java#lang#NullPointerException_E@", "if c is null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates an enum set initialized from the specified collection. If the specified collection is an @B_java#util#EnumSet#copyOf_E@. Otherwise, the specified collection must contain at least one element (in order to determine the new enum set's element type).", "history": "Added in API level 1", "FullName": "public static EnumSet<E> copyOf (Collection<E> c)"}, "of(E,E,E)": {"Returns": [["@B_java#util#EnumSet_E@", "an enum set initially containing the specified elements"]], "Parameters": [["E", "E: an element that this set is to contain initially"], ["E", "E: another element that this set is to contain initially"], ["E", "E: another element that this set is to contain initially"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if any parameters are null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates an enum set initially containing the specified elements. Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.", "history": "Added in API level 1", "FullName": "public static EnumSet<E> of (E e1, E e2, E e3)"}, "of(E, E)": {"Returns": [["@B_java#util#EnumSet_E@", "an enum set initially containing the specified elements"]], "Parameters": [["E", "E: an element that this set is to contain initially"], ["E", "E: another element that this set is to contain initially"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if any parameters are null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates an enum set initially containing the specified elements. Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.", "history": "added in API level 1", "FullName": "public static EnumSet<E> of (E e1, E e2)"}, "clone()": {"Returns": [["@B_java#util#EnumSet_E@", "a copy of this set"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a copy of this set.", "history": "Added in API level 1", "FullName": "public EnumSet<E> clone ()"}, "of(E, E, E, E, E)": {"Returns": [["@B_java#util#EnumSet_E@", "an enum set initially containing the specified elements"]], "Parameters": [["E", "E: an element that this set is to contain initially"], ["E", "E: another element that this set is to contain initially"], ["E", "E: another element that this set is to contain initially"], ["E", "E: another element that this set is to contain initially"], ["E", "E: another element that this set is to contain initially"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if any parameters are null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates an enum set initially containing the specified elements. Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.", "history": "added in API level 1", "FullName": "public static EnumSet<E> of (E e1, E e2, E e3, E e4, E e5)"}}, "Inheritance": ["@B_java#util#AbstractCollection_E@", "@B_java#util#AbstractSet_E@"], "ClassName": "@B_java#lang#Enum_E@", "ClassDesc": "A specialized @B_java#util#Set_E@ implementation for use with enum types. All of the elements in an enum set must come from a single enum type that is specified, explicitly or implicitly, when the set is created. Enum sets are represented internally as bit vectors. This representation is extremely compact and efficient. The space and time performance of this class should be good enough to allow its use as a high-quality, typesafe alternative to traditional The iterator returned by the @B_java#util#ConcurrentModificationException_E@ and it may or may not show the effects of any modifications to the set that occur while the iteration is in progress. Null elements are not permitted. Attempts to insert a null element will throw @B_java#lang#NullPointerException_E@. Attempts to test for the presence of a null element or to remove one will, however, function properly. Like most collection implementations, @B_java#util#Collections#synchronizedSet_E@ method. This is best done at creation time, to prevent accidental unsynchronized access: Implementation note: All basic operations execute in constant time. They are likely (though not guaranteed) to be much faster than their @B_java#util#HashSet_E@ counterparts. Even bulk operations execute in constant time if their argument is also an enum set. This class is a member of the"}