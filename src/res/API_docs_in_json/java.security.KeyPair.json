{"Functions": {"KeyPair(java.security.PublicKey,java.security.PrivateKey)": {"Returns": [], "Parameters": [["@B_java#security#PublicKey_E@", "PublicKey: the public key."], ["@B_java#security#PrivateKey_E@", "PrivateKey: the private key."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a key pair from the given public key and private key. Note that this constructor only stores references to the public and private key components in the generated key pair. This is safe, because Key objects are immutable.", "history": "Added in API level 1", "FullName": "public KeyPair (PublicKey publicKey, PrivateKey privateKey)"}, "getPrivate()": {"Returns": [["@B_java#security#PrivateKey_E@", "a reference to the private key."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a reference to the private key component of this key pair.", "history": "Added in API level 1", "FullName": "public PrivateKey getPrivate ()"}, "getPublic()": {"Returns": [["@B_java#security#PublicKey_E@", "a reference to the public key."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a reference to the public key component of this key pair.", "history": "Added in API level 1", "FullName": "public PublicKey getPublic ()"}}, "Inheritance": [], "ClassName": "java.security.KeyPair", "ClassDesc": "This class is a simple holder for a key pair (a public key and a private key). It does not enforce any security, and, when initialized, should be treated like a PrivateKey."}