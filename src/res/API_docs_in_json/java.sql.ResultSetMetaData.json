{"Functions": {"getTableName(int)": {"Returns": [["@B_java#lang#String_E@", "table name or \"\" if not applicable"]], "Parameters": [["int", "int: the first column is 1, the second is 2, ..."]], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Gets the designated column's table name.", "history": "Added in API level 1", "FullName": "public abstract String getTableName (int column)"}, "getColumnLabel(int)": {"Returns": [["@B_java#lang#String_E@", "the suggested column title"]], "Parameters": [["int", "int: the first column is 1, the second is 2, ..."]], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Gets the designated column's suggested title for use in printouts and displays. The suggested title is usually specified by the SQL AS clause. If a SQL AS is not specified, the value returned from getColumnLabel will be the same as the value returned by the getColumnName method.", "history": "Added in API level 1", "FullName": "public abstract String getColumnLabel (int column)"}, "isSigned(int)": {"Returns": [["boolean", "true if so; false otherwise"]], "Parameters": [["int", "int: the first column is 1, the second is 2, ..."]], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether values in the designated column are signed numbers.", "history": "Added in API level 1", "FullName": "public abstract boolean isSigned (int column)"}, "getScale(int)": {"Returns": [["int", "scale"]], "Parameters": [["int", "int: the first column is 1, the second is 2, ..."]], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Gets the designated column's number of digits to right of the decimal point. 0 is returned for data types where the scale is not applicable.", "history": "Added in API level 1", "FullName": "public abstract int getScale (int column)"}, "getColumnCount()": {"Returns": [["int", "the number of columns"]], "Parameters": [], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of columns in this ResultSet object.", "history": "Added in API level 1", "FullName": "public abstract int getColumnCount ()"}, "isReadOnly(int)": {"Returns": [["boolean", "true if so; false otherwise"]], "Parameters": [["int", "int: the first column is 1, the second is 2, ..."]], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether the designated column is definitely not writable.", "history": "Added in API level 1", "FullName": "public abstract boolean isReadOnly (int column)"}, "isCaseSensitive(int)": {"Returns": [["boolean", "true if so; false otherwise"]], "Parameters": [["int", "int: the first column is 1, the second is 2, ..."]], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether a column's case matters.", "history": "Added in API level 1", "FullName": "public abstract boolean isCaseSensitive (int column)"}, "isDefinitelyWritable(int)": {"Returns": [["boolean", "true if so; false otherwise"]], "Parameters": [["int", "int: the first column is 1, the second is 2, ..."]], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether a write on the designated column will definitely succeed.", "history": "Added in API level 1", "FullName": "public abstract boolean isDefinitelyWritable (int column)"}, "isCurrency(int)": {"Returns": [["boolean", "true if so; false otherwise"]], "Parameters": [["int", "int: the first column is 1, the second is 2, ..."]], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether the designated column is a cash value.", "history": "Added in API level 1", "FullName": "public abstract boolean isCurrency (int column)"}, "getSchemaName(int)": {"Returns": [["@B_java#lang#String_E@", "schema name or \"\" if not applicable"]], "Parameters": [["int", "int: the first column is 1, the second is 2, ..."]], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Get the designated column's table's schema.", "history": "Added in API level 1", "FullName": "public abstract String getSchemaName (int column)"}, "isSearchable(int)": {"Returns": [["boolean", "true if so; false otherwise"]], "Parameters": [["int", "int: the first column is 1, the second is 2, ..."]], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether the designated column can be used in a where clause.", "history": "Added in API level 1", "FullName": "public abstract boolean isSearchable (int column)"}, "getColumnTypeName(int)": {"Returns": [["@B_java#lang#String_E@", "type name used by the database. If the column type is a user-defined type, then a fully-qualified type name is returned."]], "Parameters": [["int", "int: the first column is 1, the second is 2, ..."]], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the designated column's database-specific type name.", "history": "Added in API level 1", "FullName": "public abstract String getColumnTypeName (int column)"}, "getColumnDisplaySize(int)": {"Returns": [["int", "the normal maximum number of characters allowed as the width of the designated column"]], "Parameters": [["int", "int: the first column is 1, the second is 2, ..."]], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Indicates the designated column's normal maximum width in characters.", "history": "Added in API level 1", "FullName": "public abstract int getColumnDisplaySize (int column)"}, "getColumnName(int)": {"Returns": [["@B_java#lang#String_E@", "column name"]], "Parameters": [["int", "int: the first column is 1, the second is 2, ..."]], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Get the designated column's name.", "history": "Added in API level 1", "FullName": "public abstract String getColumnName (int column)"}, "getColumnClassName(int)": {"Returns": [["@B_java#lang#String_E@", "the fully-qualified name of the class in the Java programming language that would be used by the method ResultSet.getObject to retrieve the value in the specified column. This is the class name used for custom mapping."]], "Parameters": [["int", "int: the first column is 1, the second is 2, ..."]], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the fully-qualified name of the Java class whose instances are manufactured if the method ResultSet.getObject is called to retrieve a value from the column. ResultSet.getObject may return a subclass of the class returned by this method.", "history": "Added in API level 1", "FullName": "public abstract String getColumnClassName (int column)"}, "getPrecision(int)": {"Returns": [["int", "precision"]], "Parameters": [["int", "int: the first column is 1, the second is 2, ..."]], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Get the designated column's specified column size. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. 0 is returned for data types where the column size is not applicable.", "history": "Added in API level 1", "FullName": "public abstract int getPrecision (int column)"}, "getCatalogName(int)": {"Returns": [["@B_java#lang#String_E@", "the name of the catalog for the table in which the given column appears or \"\" if not applicable"]], "Parameters": [["int", "int: the first column is 1, the second is 2, ..."]], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Gets the designated column's table's catalog name.", "history": "Added in API level 1", "FullName": "public abstract String getCatalogName (int column)"}, "isWritable(int)": {"Returns": [["boolean", "true if so; false otherwise"]], "Parameters": [["int", "int: the first column is 1, the second is 2, ..."]], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether it is possible for a write on the designated column to succeed.", "history": "Added in API level 1", "FullName": "public abstract boolean isWritable (int column)"}, "isNullable(int)": {"Returns": [["int", "the nullability status of the given column; one of columnNoNulls, columnNullable or columnNullableUnknown"]], "Parameters": [["int", "int: the first column is 1, the second is 2, ..."]], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Indicates the nullability of values in the designated column.", "history": "Added in API level 1", "FullName": "public abstract int isNullable (int column)"}, "getColumnType(int)": {"Returns": [["int", "SQL type from java.sql.Types"]], "Parameters": [["int", "int: the first column is 1, the second is 2, ..."]], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": ["@B_java#sql#Types_E@"], "Permissions": [], "Description": "Retrieves the designated column's SQL type.", "history": "Added in API level 1", "FullName": "public abstract int getColumnType (int column)"}, "isAutoIncrement(int)": {"Returns": [["boolean", "true if so; false otherwise"]], "Parameters": [["int", "int: the first column is 1, the second is 2, ..."]], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether the designated column is automatically numbered.", "history": "Added in API level 1", "FullName": "public abstract boolean isAutoIncrement (int column)"}}, "Inheritance": [], "ClassName": "java.sql.ResultSetMetaData", "ClassDesc": "An object that can be used to get information about the types and properties of the columns in a ResultSet object. The following code fragment creates the ResultSet object rs, creates the ResultSetMetaData object rsmd, and uses rsmd to find out how many columns rs has and whether the first column in rs can be used in a WHERE clause."}