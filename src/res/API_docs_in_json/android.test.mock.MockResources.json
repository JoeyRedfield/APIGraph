{"Functions": {"getIntArray(int)": {"Returns": [["int[]", "The int array associated with the resource. This value will never be null."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Return the int array associated with a particular resource ID.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public int[] getIntArray (int id)"}, "getMovie(int)": {"Returns": [["@B_android#graphics#Movie_E@", "no returns description in source"]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Prefer @B_android#graphics#drawable#AnimatedImageDrawable_E@. Return a movie object associated with the particular resource ID.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public Movie getMovie (int id)"}, "updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)": {"Returns": [], "Parameters": [["@B_android#content#res#Configuration_E@", "Configuration no parameter comment"], ["@B_android#util#DisplayMetrics_E@", "DisplayMetrics no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "See @B_android#content#Context#createConfigurationContext_E@. Store the newly updated configuration.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public void updateConfiguration (Configuration config, DisplayMetrics metrics)"}, "getQuantityString(int, int)": {"Returns": [["@B_java#lang#String_E@", "String The string data associated with the resource, stripped of styled text information."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."], ["int", "int: The number used to get the correct string for the current language's plural rules."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Returns the string necessary for grammatically correct pluralization of the given resource ID for the given quantity. Note that the string is selected based solely on grammatical necessity, and that such rules differ between languages. Do not assume you know which string will be returned for a given quantity. See", "history": "added in API level 1", "FullName": "public String getQuantityString (int id, int quantity)"}, "getText(int,java.lang.CharSequence)": {"Returns": [["@B_java#lang#CharSequence_E@", "CharSequence The string data associated with the resource, plus possibly styled text information, or def if id is 0 or not found."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."], ["@B_java#lang#CharSequence_E@", "CharSequence: The default CharSequence to return."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the string value associated with a particular resource ID. The returned object will be a String if this is a plain string; it will be some other type of CharSequence if it is styled.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public CharSequence getText (int id, CharSequence def)"}, "openRawResource(int)": {"Returns": [["@B_java#io#InputStream_E@", "InputStream Access to the resource data. This value will never be null."]], "Parameters": [["int", "int: The resource identifier to open, as generated by the aapt tool."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Open a data stream for reading a raw resource. This can only be used with resources whose value is the name of an asset files -- that is, it can be used to open drawable, sound, and raw resources; it will fail on string and color resources.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public InputStream openRawResource (int id)"}, "getResourceName(int)": {"Returns": [["@B_java#lang#String_E@", "A string holding the name of the resource."]], "Parameters": [["int", "int: The resource identifier whose name is to be retrieved."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Return the full name for a given resource identifier. This name is a single string of the form \"package:type/entry\".", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public String getResourceName (int resid)"}, "getStringArray(int)": {"Returns": [["@B_java#lang#String_E@", "The string array associated with the resource. This value will never be null."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Return the string array associated with a particular resource ID.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public String[] getStringArray (int id)"}, "getDimension(int)": {"Returns": [["float", "Resource dimension value multiplied by the appropriate metric to convert to pixels."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Retrieve a dimensional for a particular resource ID. Unit conversions are based on the current @B_android#util#DisplayMetrics_E@ associated with the resources.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public float getDimension (int id)"}, "getTextArray(int)": {"Returns": [["@B_java#lang#CharSequence_E@", "The styled text array associated with the resource. This value will never be null."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Return the styled text array associated with a particular resource ID.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public CharSequence[] getTextArray (int id)"}, "MockResources()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public MockResources ()"}, "getQuantityText(int,int)": {"Returns": [["@B_java#lang#CharSequence_E@", "CharSequence The string data associated with the resource, plus possibly styled text information. This value will never be null."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."], ["int", "int: The number used to get the correct string for the current language's plural rules."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Returns the character sequence necessary for grammatically correct pluralization of the given resource ID for the given quantity. Note that the character sequence is selected based solely on grammatical necessity, and that such rules differ between languages. Do not assume you know which string will be returned for a given quantity. See", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public CharSequence getQuantityText (int id, int quantity)"}, "getXml(int)": {"Returns": [["@B_android#content#res#XmlResourceParser_E@", "A new parser object through which you can read the XML data. This value will never be null."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Return an XmlResourceParser through which you can read a generic XML resource for the given resource ID. The XmlPullParser implementation returned here has some limited functionality. In particular, you can't change its input, and only high-level parsing events are available (since the document was pre-parsed for you at build time, which involved merging text and stripping comments).", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public XmlResourceParser getXml (int id)"}, "getIdentifier(java.lang.String,java.lang.String,java.lang.String)": {"Returns": [["int", "int The associated resource identifier. Returns 0 if no such resource was found. (0 is not a valid resource ID.)"]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the desired resource."], ["@B_java#lang#String_E@", "String: Optional default resource type to find, if \"type/\" is not included in the name. Can be null to require an explicit type."], ["@B_java#lang#String_E@", "String: Optional default package to find, if \"package:\" is not included in the name. Can be null to require an explicit package."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a resource identifier for the given resource name. A fully qualified resource name is of the form \"package:type/entry\". The first two components (package and type) are optional if defType and defPackage, respectively, are specified here. Note: use of this function is discouraged. It is much more efficient to retrieve resources by identifier than by name.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public int getIdentifier (String name, String defType, String defPackage)"}, "getString(int)": {"Returns": [["@B_java#lang#String_E@", "String The string data associated with the resource, stripped of styled text information. This value will never be null."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Return the string value associated with a particular resource ID. It will be stripped of any styled text information.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public String getString (int id)"}, "getDimensionPixelOffset(int)": {"Returns": [["int", "Resource dimension value multiplied by the appropriate metric and truncated to integer pixels."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Retrieve a dimensional for a particular resource ID for use as an offset in raw pixels. This is the same as @B_android#content#res#Resources#getDimension_E@, except the returned value is converted to integer pixels for you. An offset conversion involves simply truncating the base value to an integer.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public int getDimensionPixelOffset (int id)"}, "getValue(java.lang.String,android.util.TypedValue,boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The name of the desired resource. This is passed to getIdentifier() with a default type of \"string\"."], ["@B_android#util#TypedValue_E@", "TypedValue: Object in which to place the resource data."], ["boolean", "boolean: If true, a resource that is a reference to another resource will be followed so that you receive the actual final resource data. If false, the TypedValue will be filled in with the reference itself."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Return the raw data associated with a particular resource ID. See getIdentifier() for information on how names are mapped to resource IDs, and getString(int) for information on how string resources are retrieved. Note: use of this function is discouraged. It is much more efficient to retrieve resources by identifier than by name.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public void getValue (String name, TypedValue outValue, boolean resolveRefs)"}, "getResourcePackageName(int)": {"Returns": [["@B_java#lang#String_E@", "A string holding the package name of the resource."]], "Parameters": [["int", "int: The resource identifier whose package name is to be retrieved."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Return the package name for a given resource identifier.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public String getResourcePackageName (int resid)"}, "getText(int, java.lang.CharSequence)": {"Returns": [["@B_java#lang#CharSequence_E@", "CharSequence The string data associated with the resource, plus possibly styled text information, or def if id is 0 or not found."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."], ["@B_java#lang#CharSequence_E@", "CharSequence: The default CharSequence to return."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the string value associated with a particular resource ID. The returned object will be a String if this is a plain string; it will be some other type of CharSequence if it is styled.", "history": "added in API level 1", "FullName": "public CharSequence getText (int id, CharSequence def)"}, "obtainTypedArray(int)": {"Returns": [["@B_android#content#res#TypedArray_E@", "Returns a TypedArray holding an array of the array values. Be sure to call @B_android#content#res#TypedArray#recycle_E@ when done with it. This value will never be null."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Return an array of heterogeneous values.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public TypedArray obtainTypedArray (int id)"}, "getQuantityText(int, int)": {"Returns": [["@B_java#lang#CharSequence_E@", "CharSequence The string data associated with the resource, plus possibly styled text information."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."], ["int", "int: The number used to get the correct string for the current language's plural rules."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Returns the character sequence necessary for grammatically correct pluralization of the given resource ID for the given quantity. Note that the character sequence is selected based solely on grammatical necessity, and that such rules differ between languages. Do not assume you know which string will be returned for a given quantity. See", "history": "added in API level 1", "FullName": "public CharSequence getQuantityText (int id, int quantity)"}, "getColorStateList(int)": {"Returns": [["@B_android#content#res#ColorStateList_E@", "A ColorStateList object containing either a single solid color or multiple colors that can be selected based on a state. This value will never be null."]], "Parameters": [["int", "int: The desired resource identifier of a @B_android#content#res#ColorStateList_E@, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#content#res#Resources#getColorStateList_E@ instead. Returns a color state list associated with a particular resource ID. The resource may contain either a single raw color value or a complex @B_android#content#res#ColorStateList_E@ holding multiple possible colors.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public ColorStateList getColorStateList (int id)"}, "getString(int, java.lang.Object...)": {"Returns": [["@B_java#lang#String_E@", "String The string data associated with the resource, stripped of styled text information."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."], ["@B_java#lang#Object_E@", "Object: The format arguments that will be used for substitution."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Return the string value associated with a particular resource ID, substituting the format arguments as defined in @B_java#util#Formatter_E@ and @B_java#lang#String#format_E@. It will be stripped of any styled text information.", "history": "added in API level 1", "FullName": "public String getString (int id, Object... formatArgs)"}, "getValue(int, android.util.TypedValue, boolean)": {"Returns": [], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."], ["@B_android#util#TypedValue_E@", "TypedValue: Object in which to place the resource data."], ["boolean", "boolean: If true, a resource that is a reference to another resource will be followed so that you receive the actual final resource data. If false, the TypedValue will be filled in with the reference itself."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Return the raw data associated with a particular resource ID.", "history": "added in API level 1", "FullName": "public void getValue (int id, TypedValue outValue, boolean resolveRefs)"}, "getText(int)": {"Returns": [["@B_java#lang#CharSequence_E@", "CharSequence The string data associated with the resource, plus possibly styled text information. This value will never be null."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Return the string value associated with a particular resource ID. The returned object will be a String if this is a plain string; it will be some other type of CharSequence if it is styled.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public CharSequence getText (int id)"}, "getAnimation(int)": {"Returns": [["@B_android#content#res#XmlResourceParser_E@", "A new parser object through which you can read the XML data. This value will never be null."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Return an XmlResourceParser through which you can read an animation description for the given resource ID. This parser has limited functionality -- in particular, you can't change its input, and only the high-level events are available. This function is really a simple wrapper for calling @B_android#content#res#Resources#getXml_E@ with an animation resource.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public XmlResourceParser getAnimation (int id)"}, "obtainAttributes(android.util.AttributeSet, int[])": {"Returns": [["@B_android#content#res#TypedArray_E@", "Returns a TypedArray holding an array of the attribute values. Be sure to call @B_android#content#res#TypedArray#recycle_E@ when done with it."]], "Parameters": [["@B_android#util#AttributeSet_E@", "AttributeSet: The current attribute values to retrieve."], ["int[]", "int: The specific attributes to be retrieved. These attribute IDs must be sorted in ascending order."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve a set of basic attribute values from an AttributeSet, not performing styling of them using a theme and/or style resources.", "history": "added in API level 1", "FullName": "public TypedArray obtainAttributes (AttributeSet set, int[] attrs)"}, "obtainAttributes(android.util.AttributeSet,int[])": {"Returns": [["@B_android#content#res#TypedArray_E@", "Returns a TypedArray holding an array of the attribute values. Be sure to call @B_android#content#res#TypedArray#recycle_E@ when done with it."]], "Parameters": [["@B_android#util#AttributeSet_E@", "AttributeSet: The current attribute values to retrieve."], ["int[]", "int: The specific attributes to be retrieved. These attribute IDs must be sorted in ascending order."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve a set of basic attribute values from an AttributeSet, not performing styling of them using a theme and/or style resources.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public TypedArray obtainAttributes (AttributeSet set, int[] attrs)"}, "getResourceTypeName(int)": {"Returns": [["@B_java#lang#String_E@", "A string holding the type name of the resource."]], "Parameters": [["int", "int: The resource identifier whose type name is to be retrieved."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Return the type name for a given resource identifier.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public String getResourceTypeName (int resid)"}, "getDimensionPixelSize(int)": {"Returns": [["int", "Resource dimension value multiplied by the appropriate metric and truncated to integer pixels."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Retrieve a dimensional for a particular resource ID for use as a size in raw pixels. This is the same as @B_android#content#res#Resources#getDimension_E@, except the returned value is converted to integer pixels for use as a size. A size conversion involves rounding the base value, and ensuring that a non-zero base value is at least one pixel in size.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public int getDimensionPixelSize (int id)"}, "getResourceEntryName(int)": {"Returns": [["@B_java#lang#String_E@", "A string holding the entry name of the resource."]], "Parameters": [["int", "int: The resource identifier whose entry name is to be retrieved."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Return the entry name for a given resource identifier.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public String getResourceEntryName (int resid)"}, "getQuantityString(int,int)": {"Returns": [["@B_java#lang#String_E@", "String The string data associated with the resource, stripped of styled text information. This value will never be null."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."], ["int", "int: The number used to get the correct string for the current language's plural rules."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Returns the string necessary for grammatically correct pluralization of the given resource ID for the given quantity. Note that the string is selected based solely on grammatical necessity, and that such rules differ between languages. Do not assume you know which string will be returned for a given quantity. See", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public String getQuantityString (int id, int quantity)"}, "getString(int,java.lang.Object...)": {"Returns": [["@B_java#lang#String_E@", "String The string data associated with the resource, stripped of styled text information. This value will never be null."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."], ["@B_java#lang#Object_E@", "Object: The format arguments that will be used for substitution."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Return the string value associated with a particular resource ID, substituting the format arguments as defined in @B_java#util#Formatter_E@ and @B_java#lang#String#format_E@. It will be stripped of any styled text information.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public String getString (int id, Object... formatArgs)"}, "getColor(int)": {"Returns": [["int", "A single color value in the form 0xAARRGGBB."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#content#res#Resources#getColor_E@ instead. Returns a color integer associated with a particular resource ID. If the resource holds a complex @B_android#content#res#ColorStateList_E@, then the default color from the set is returned.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public int getColor (int id)"}, "getInteger(int)": {"Returns": [["int", "Returns the integer value contained in the resource."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Return an integer associated with a particular resource ID.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public int getInteger (int id)"}, "getQuantityString(int,int,java.lang.Object...)": {"Returns": [["@B_java#lang#String_E@", "String The string data associated with the resource, stripped of styled text information. This value will never be null."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."], ["int", "int: The number used to get the correct string for the current language's plural rules."], ["@B_java#lang#Object_E@", "Object: The format arguments that will be used for substitution."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Formats the string necessary for grammatically correct pluralization of the given resource ID for the given quantity, using the given arguments. Note that the string is selected based solely on grammatical necessity, and that such rules differ between languages. Do not assume you know which string will be returned for a given quantity. See Substitution of format arguments works as if using @B_java#util#Formatter_E@ and @B_java#lang#String#format_E@. The resulting string will be stripped of any styled text information.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public String getQuantityString (int id, int quantity, Object... formatArgs)"}, "openRawResourceFd(int)": {"Returns": [["@B_android#content#res#AssetFileDescriptor_E@", "AssetFileDescriptor A new file descriptor you can use to read the resource. This includes the file descriptor itself, as well as the offset and length of data where the resource appears in the file. A null is returned if the file exists but is compressed."]], "Parameters": [["int", "int: The resource identifier to open, as generated by the aapt tool."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Open a file descriptor for reading a raw resource. This can only be used with resources whose value is the name of an asset files -- that is, it can be used to open drawable, sound, and raw resources; it will fail on string and color resources. This function only works for resources that are stored in the package as uncompressed data, which typically includes things like mp3 files and png images.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public AssetFileDescriptor openRawResourceFd (int id)"}, "getDrawable(int)": {"Returns": [["@B_android#graphics#drawable#Drawable_E@", "Drawable An object that can be used to draw this resource."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#content#res#Resources#getDrawable_E@ instead. Return a drawable object associated with a particular resource ID. Various types of objects will be returned depending on the underlying resource -- for example, a solid color, PNG image, scalable image, etc. The Drawable API hides these implementation details. @B_android#os#Build#VERSION_CODES#JELLY_BEAN_E@, this function would not correctly retrieve the final configuration density when the resource ID passed here is an alias to another Drawable resource. This means that if the density configuration of the alias resource is different than the actual resource, the density of the returned Drawable would be incorrect, resulting in bad scaling. To work around this, you can instead manually resolve the aliased reference by using @B_android#content#res#Resources#getValue_E@ and passing true for resolveRefs. The resulting @B_android#util#TypedValue#resourceId_E@ value may be passed to this method. @B_android#content#Context#getDrawable_E@ or @B_android#content#res#Resources#getDrawable_E@ passing the desired theme.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public Drawable getDrawable (int id)"}, "getConfiguration()": {"Returns": [["@B_android#content#res#Configuration_E@", "The resource's current configuration."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the current configuration that is in effect for this resource object. The returned object should be treated as read-only.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public Configuration getConfiguration ()"}, "getDisplayMetrics()": {"Returns": [["@B_android#util#DisplayMetrics_E@", "The resource's current display metrics."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the current display metrics that are in effect for this resource object. The returned object should be treated as read-only.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public DisplayMetrics getDisplayMetrics ()"}, "getQuantityString(int, int, java.lang.Object...)": {"Returns": [["@B_java#lang#String_E@", "String The string data associated with the resource, stripped of styled text information."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."], ["int", "int: The number used to get the correct string for the current language's plural rules."], ["@B_java#lang#Object_E@", "Object: The format arguments that will be used for substitution."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Formats the string necessary for grammatically correct pluralization of the given resource ID for the given quantity, using the given arguments. Note that the string is selected based solely on grammatical necessity, and that such rules differ between languages. Do not assume you know which string will be returned for a given quantity. See Substitution of format arguments works as if using @B_java#util#Formatter_E@ and @B_java#lang#String#format_E@. The resulting string will be stripped of any styled text information.", "history": "added in API level 1", "FullName": "public String getQuantityString (int id, int quantity, Object... formatArgs)"}, "getLayout(int)": {"Returns": [["@B_android#content#res#XmlResourceParser_E@", "A new parser object through which you can read the XML data. This value will never be null."]], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Return an XmlResourceParser through which you can read a view layout description for the given resource ID. This parser has limited functionality -- in particular, you can't change its input, and only the high-level events are available. This function is really a simple wrapper for calling @B_android#content#res#Resources#getXml_E@ with a layout resource.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public XmlResourceParser getLayout (int id)"}, "getValue(int,android.util.TypedValue,boolean)": {"Returns": [], "Parameters": [["int", "int: The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier."], ["@B_android#util#TypedValue_E@", "TypedValue: Object in which to place the resource data."], ["boolean", "boolean: If true, a resource that is a reference to another resource will be followed so that you receive the actual final resource data. If false, the TypedValue will be filled in with the reference itself."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Return the raw data associated with a particular resource ID.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public void getValue (int id, TypedValue outValue, boolean resolveRefs)"}}, "Inheritance": ["@B_android#content#res#Resources_E@"], "ClassName": "android.test.mock.MockResources", "ClassDesc": "Use a mocking framework like A mock @B_android#content#res#Resources_E@ class. All methods are non-functional and throw @B_java#lang#UnsupportedOperationException_E@. Override it to provide the operations that you need."}