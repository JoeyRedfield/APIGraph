{"Functions": {"initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)": {"Returns": [], "Parameters": [["@B_java#security#spec#AlgorithmParameterSpec_E@", "AlgorithmParameterSpec: the parameter set used to generate the keys."], ["@B_java#security#SecureRandom_E@", "SecureRandom: the source of randomness for this generator."]], "Throws": [["@B_java#security#InvalidAlgorithmParameterException_E@", "if the given parameters are inappropriate for this key pair generator."]], "SeeAlso": [], "Permissions": [], "Description": "Initializes the key pair generator using the specified parameter set and user-provided source of randomness. This concrete method has been added to this previously-defined abstract class. (For backwards compatibility, it cannot be abstract.) It may be overridden by a provider to initialize the key pair generator. Such an override is expected to throw an InvalidAlgorithmParameterException if a parameter is inappropriate for this key pair generator. If this method is not overridden, it always throws an UnsupportedOperationException.", "history": "Added in API level 1", "FullName": "public void initialize (AlgorithmParameterSpec params, SecureRandom random)"}, "initialize(int,java.security.SecureRandom)": {"Returns": [], "Parameters": [["int", "int: the keysize. This is an algorithm-specific metric, such as modulus length, specified in number of bits."], ["@B_java#security#SecureRandom_E@", "SecureRandom: the source of randomness for this generator."]], "Throws": [["@B_java#security#InvalidParameterException_E@", "if the keysize is not supported by this KeyPairGeneratorSpi object."]], "SeeAlso": [], "Permissions": [], "Description": "Initializes the key pair generator for a certain keysize, using the default parameter set.", "history": "Added in API level 1", "FullName": "public abstract void initialize (int keysize, SecureRandom random)"}, "KeyPairGeneratorSpi()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public KeyPairGeneratorSpi ()"}, "generateKeyPair()": {"Returns": [["@B_java#security#KeyPair_E@", "the newly generated KeyPair"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Generates a key pair. Unless an initialization method is called using a KeyPairGenerator interface, algorithm-specific defaults will be used. This will generate a new key pair every time it is called.", "history": "Added in API level 1", "FullName": "public abstract KeyPair generateKeyPair ()"}, "initialize(int, java.security.SecureRandom)": {"Returns": [], "Parameters": [["int", "int: the keysize. This is an algorithm-specific metric, such as modulus length, specified in number of bits."], ["@B_java#security#SecureRandom_E@", "SecureRandom: the source of randomness for this generator."]], "Throws": [["@B_java#security#InvalidParameterException_E@", "if the keysize is not supported by this KeyPairGeneratorSpi object."]], "SeeAlso": [], "Permissions": [], "Description": "Initializes the key pair generator for a certain keysize, using the default parameter set.", "history": "added in API level 1", "FullName": "public abstract void initialize (int keysize, SecureRandom random)"}}, "Inheritance": [], "ClassName": "java.security.KeyPairGeneratorSpi", "ClassDesc": "This class defines the KeyPairGenerator class, which is used to generate pairs of public and private keys. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a key pair generator for a particular algorithm. In case the client does not explicitly initialize the KeyPairGenerator (via a call to an initialize method), each provider must supply (and document) a default initialization. For example, the"}