{"Functions": {"addChild(int,android.service.autofill.Transformation)": {"Returns": [["@B_android#service#autofill#CustomDescription#Builder_E@", "this builder. This value will never be null."]], "Parameters": [["int", "int: view id of the children view."], ["@B_android#service#autofill#Transformation_E@", "Transformation: an implementation provided by the Android System. This value must never be null."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if transformation is not a class provided by the Android System."], ["@B_java#lang#IllegalStateException_E@", "if @B_android#service#autofill#CustomDescription#Builder#build_E@ was already called."]], "SeeAlso": [], "Permissions": [], "Description": "Adds a transformation to replace the value of a child view with the fields in the screen. When multiple transformations are added for the same child view, they will be applied in the same order as added.", "history": "Added in API level 27", "FullName": "public CustomDescription.Builder addChild (int id, Transformation transformation)"}, "addOnClickAction(int,android.service.autofill.OnClickAction)": {"Returns": [["@B_android#service#autofill#CustomDescription#Builder_E@", "this builder This value will never be null."]], "Parameters": [["int", "int: resource id of the child view."], ["@B_android#service#autofill#OnClickAction_E@", "OnClickAction: action to be performed. Must be an an implementation provided by the Android System. This value must never be null."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if action is not a class provided by the Android System."], ["@B_java#lang#IllegalStateException_E@", "if @B_android#service#autofill#CustomDescription#Builder#build_E@ was already called."]], "SeeAlso": [], "Permissions": [], "Description": "Sets an action to be applied to the @B_android#widget#RemoteViews_E@ when the child view with the given id is clicked. Typically used when the presentation uses a masked field (like ****) for sensitive fields like passwords or credit cards numbers, but offers a an icon that the user can tap to show the value for that field. Example: id, only the last call will be used.", "history": "Added in API level 29", "FullName": "public CustomDescription.Builder addOnClickAction (int id, OnClickAction action)"}, "batchUpdate(android.service.autofill.Validator,android.service.autofill.BatchUpdates)": {"Returns": [["@B_android#service#autofill#CustomDescription#Builder_E@", "this builder This value will never be null."]], "Parameters": [["@B_android#service#autofill#Validator_E@", "Validator: condition used to trigger the updates. This value must never be null."], ["@B_android#service#autofill#BatchUpdates_E@", "BatchUpdates: actions to be applied to the @B_android#service#autofill#CustomDescription#Builder#CustomDescription#Builder_E@ when the condition is satisfied. This value must never be null."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if condition is not a class provided by the Android System."], ["@B_java#lang#IllegalStateException_E@", "if @B_android#service#autofill#CustomDescription#Builder#build_E@ was already called."]], "SeeAlso": [], "Permissions": [], "Description": "Updates the @B_android#widget#RemoteViews_E@ when a condition is satisfied by applying a series of remote view operations. This allows dynamic customization of the portion of the save UI that is controlled by the autofill service. Such dynamic customization is based on the content of target views. The updates are applied in the sequence they are added, after the @B_android#service#autofill#CustomDescription#Builder#addChild_E@ are applied to the children views. For example, to make children views visible when fields are not empty: Another approach is to add a child first, then apply the transformations. Example:", "history": "Added in API level 28", "FullName": "public CustomDescription.Builder batchUpdate (Validator condition, BatchUpdates updates)"}, "build()": {"Returns": [["@B_android#service#autofill#CustomDescription_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new @B_android#service#autofill#CustomDescription_E@ instance.", "history": "Added in API level 27", "FullName": "public CustomDescription build ()"}, "CustomDescription.Builder(android.widget.RemoteViews)": {"Returns": [], "Parameters": [["@B_android#widget#RemoteViews_E@", "RemoteViews: template presentation with (optional) children views. This value must never be null."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if parentPresentation is null (on Android @B_android#os#Build#VERSION_CODES#P_E@ or higher)."]], "SeeAlso": [], "Permissions": [], "Description": "Default constructor. @B_android#widget#RemoteViews#setOnClickPendingIntent_E@, such @B_android#app#PendingIntent_E@ must follow the restrictions below, otherwise it might not be triggered or the autofill save UI might not be shown when its activity is finished: It cannot be created with the @B_android#app#PendingIntent#FLAG_IMMUTABLE_E@ flag. It must be a PendingIntent for an @B_android#app#Activity_E@. The activity must call @B_android#app#Activity#finish_E@ when done. The activity should not launch other activities.", "history": "Added in API level 27", "FullName": "public CustomDescription.Builder (RemoteViews parentPresentation)"}}, "Inheritance": [], "ClassName": "android.service.autofill.CustomDescription.Builder", "ClassDesc": "Builder for @B_android#service#autofill#CustomDescription_E@ objects."}