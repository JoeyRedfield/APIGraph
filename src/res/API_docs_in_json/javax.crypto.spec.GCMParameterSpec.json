{"Functions": {"GCMParameterSpec(int,byte[])": {"Returns": [], "Parameters": [["int", "int: the authentication tag length (in bits)"], ["byte[]", "byte: the IV source buffer. The contents of the buffer are copied to protect against subsequent modification."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if tLen is negative, or src is null."]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a GCMParameterSpec using the specified authentication tag bit-length and IV buffer.", "history": "Added in API level 19", "FullName": "public GCMParameterSpec (int tLen, byte[] src)"}, "getIV()": {"Returns": [["byte[]", "the IV. Creates a new array each time this method is called."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the Initialization Vector (IV).", "history": "Added in API level 19", "FullName": "public byte[] getIV ()"}, "GCMParameterSpec(int, byte[], int, int)": {"Returns": [], "Parameters": [["int", "int: the authentication tag length (in bits)"], ["byte[]", "byte: the IV source buffer. The contents of the buffer are copied to protect against subsequent modification."], ["int", "int: the offset in src where the IV starts"], ["int", "int: the number of IV bytes"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if tLen is negative, src is null, len or offset is negative, or the sum of offset and len is greater than the length of the src byte array."]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a GCMParameterSpec object using the specified authentication tag bit-length and a subset of the specified buffer as the IV.", "history": "added in API level 19", "FullName": "public GCMParameterSpec (int tLen, byte[] src, int offset, int len)"}, "GCMParameterSpec(int, byte[])": {"Returns": [], "Parameters": [["int", "int: the authentication tag length (in bits)"], ["byte[]", "byte: the IV source buffer. The contents of the buffer are copied to protect against subsequent modification."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if tLen is negative, or src is null."]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a GCMParameterSpec using the specified authentication tag bit-length and IV buffer.", "history": "added in API level 19", "FullName": "public GCMParameterSpec (int tLen, byte[] src)"}, "getTLen()": {"Returns": [["int", "the authentication tag length (in bits)"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the authentication tag length.", "history": "Added in API level 19", "FullName": "public int getTLen ()"}, "GCMParameterSpec(int,byte[],int,int)": {"Returns": [], "Parameters": [["int", "int: the authentication tag length (in bits)"], ["byte[]", "byte: the IV source buffer. The contents of the buffer are copied to protect against subsequent modification."], ["int", "int: the offset in src where the IV starts"], ["int", "int: the number of IV bytes"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if tLen is negative, src is null, len or offset is negative, or the sum of offset and len is greater than the length of the src byte array."]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a GCMParameterSpec object using the specified authentication tag bit-length and a subset of the specified buffer as the IV.", "history": "Added in API level 19", "FullName": "public GCMParameterSpec (int tLen, byte[] src, int offset, int len)"}}, "Inheritance": [], "ClassName": "javax.crypto.spec.GCMParameterSpec", "ClassDesc": "Specifies the set of parameters required by a @B_javax#crypto#Cipher_E@ using the Galois/Counter Mode (GCM) mode. Simple block cipher modes (such as CBC) generally require only an initialization vector (such as IvParameterSpec), but GCM needs these parameters: IV: Initialization Vector (IV) tLen: length (in bits) of authentication tag T In addition to the parameters described here, other GCM inputs/output (Additional Authenticated Data (AAD), Keys, block ciphers, plain/ciphertext and authentication tags) are handled in the Cipher class. Please see The GCM specification states that tLen may only have the values {128, 120, 112, 104, 96}, or {64, 32} for certain applications. Other values can be specified for this class, but not all CSP implementations will support them."}