{"Functions": {"getPrimeSize()": {"Returns": [["int", "the size in bits of the prime modulus"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the size in bits of the prime modulus.", "history": "Added in API level 1", "FullName": "public int getPrimeSize ()"}, "getExponentSize()": {"Returns": [["int", "the size in bits of the random exponent (private value)"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the size in bits of the random exponent (private value).", "history": "Added in API level 1", "FullName": "public int getExponentSize ()"}, "DHGenParameterSpec(int,int)": {"Returns": [], "Parameters": [["int", "int: the size (in bits) of the prime modulus."], ["int", "int: the size (in bits) of the random exponent."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a parameter set for the generation of Diffie-Hellman (system) parameters. The constructed parameter set can be used to initialize an @B_java#security#AlgorithmParameterGenerator_E@ object for the generation of Diffie-Hellman parameters.", "history": "Added in API level 1", "FullName": "public DHGenParameterSpec (int primeSize, int exponentSize)"}, "DHGenParameterSpec(int, int)": {"Returns": [], "Parameters": [["int", "int: the size (in bits) of the prime modulus."], ["int", "int: the size (in bits) of the random exponent."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a parameter set for the generation of Diffie-Hellman (system) parameters. The constructed parameter set can be used to initialize an @B_java#security#AlgorithmParameterGenerator_E@ object for the generation of Diffie-Hellman parameters.", "history": "added in API level 1", "FullName": "public DHGenParameterSpec (int primeSize, int exponentSize)"}}, "Inheritance": [], "ClassName": "javax.crypto.spec.DHGenParameterSpec", "ClassDesc": "This class specifies the set of parameters used for generating Diffie-Hellman (system) parameters for use in Diffie-Hellman key agreement. This is typically done by a central authority. The central authority, after computing the parameters, must send this information to the parties looking to agree on a secret key."}