{"Functions": {"surfaceDestroyed(android.view.SurfaceHolder)": {"Returns": [], "Parameters": [["@B_android#view#SurfaceHolder_E@", "SurfaceHolder: The SurfaceHolder whose surface is being destroyed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This is called immediately before a surface is being destroyed. After returning from this call, you should no longer try to access this surface. If you have a rendering thread that directly accesses the surface, you must ensure that thread is no longer touching the Surface before returning from this function.", "history": "Added in API level 1", "FullName": "public abstract void surfaceDestroyed (SurfaceHolder holder)"}, "surfaceCreated(android.view.SurfaceHolder)": {"Returns": [], "Parameters": [["@B_android#view#SurfaceHolder_E@", "SurfaceHolder: The SurfaceHolder whose surface is being created."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This is called immediately after the surface is first created. Implementations of this should start up whatever rendering code they desire. Note that only one thread can ever draw into a @B_android#view#Surface_E@, so you should not draw into the Surface here if your normal rendering will be in another thread.", "history": "Added in API level 1", "FullName": "public abstract void surfaceCreated (SurfaceHolder holder)"}, "surfaceChanged(android.view.SurfaceHolder,int,int,int)": {"Returns": [], "Parameters": [["@B_android#view#SurfaceHolder_E@", "SurfaceHolder: The SurfaceHolder whose surface has changed."], ["int", "int: The new PixelFormat of the surface."], ["int", "int: The new width of the surface."], ["int", "int: The new height of the surface."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This is called immediately after any structural changes (format or size) have been made to the surface. You should at this point update the imagery in the surface. This method is always called at least once, after @B_android#view#SurfaceHolder#Callback#surfaceCreated_E@.", "history": "Added in API level 1", "FullName": "public abstract void surfaceChanged (SurfaceHolder holder, int format, int width, int height)"}}, "Inheritance": [], "ClassName": "android.view.SurfaceHolder.Callback", "ClassDesc": "A client may implement this interface to receive information about changes to the surface. When used with a @B_android#view#SurfaceView_E@, the Surface being held is only available between calls to @B_android#view#SurfaceHolder#Callback#surfaceCreated_E@ and @B_android#view#SurfaceHolder#Callback#surfaceDestroyed_E@. The Callback is set with @B_android#view#SurfaceHolder#addCallback_E@ method."}