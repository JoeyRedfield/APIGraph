{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "the string representation of this StringJoiner"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current value, consisting of the prefix, the values added so far separated by the delimiter, and the suffix, unless no elements have been added in which case, the prefix + suffix or the emptyValue characters are returned", "history": "Added in API level 24", "FullName": "public String toString ()"}, "add(java.lang.CharSequence)": {"Returns": [["@B_java#util#StringJoiner_E@", "a reference to this StringJoiner"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: The element to add"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds a copy of the given CharSequence value as the next element of the StringJoiner value. If newElement is null, then \"null\" is added.", "history": "Added in API level 24", "FullName": "public StringJoiner add (CharSequence newElement)"}, "StringJoiner(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: the sequence of characters to be used between each element added to the StringJoiner"], ["@B_java#lang#CharSequence_E@", "CharSequence: the sequence of characters to be used at the beginning"], ["@B_java#lang#CharSequence_E@", "CharSequence: the sequence of characters to be used at the end"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if prefix, delimiter, or suffix is null"]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a StringJoiner with no characters in it using copies of the supplied prefix, delimiter and suffix. If no characters are added to the StringJoiner and methods accessing the string value of it are invoked, it will return the prefix + suffix (or properties thereof) in the result, unless setEmptyValue has first been called.", "history": "Added in API level 24", "FullName": "public StringJoiner (CharSequence delimiter, CharSequence prefix, CharSequence suffix)"}, "length()": {"Returns": [["int", "the length of the current value of StringJoiner"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the length of the String representation of this StringJoiner. Note that if no add methods have been called, then the length of the String representation (either prefix + suffix or emptyValue) will be returned. The value should be equivalent to toString().length().", "history": "Added in API level 24", "FullName": "public int length ()"}, "setEmptyValue(java.lang.CharSequence)": {"Returns": [["@B_java#util#StringJoiner_E@", "this StringJoiner itself so the calls may be chained"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: the characters to return as the value of an empty StringJoiner"]], "Throws": [["@B_java#lang#NullPointerException_E@", "when the emptyValue parameter is null"]], "SeeAlso": [], "Permissions": [], "Description": "Sets the sequence of characters to be used when determining the string representation of this StringJoiner and no elements have been added yet, that is, when it is empty. A copy of the emptyValue parameter is made for this purpose. Note that once an add method has been called, the StringJoiner is no longer considered empty, even if the element(s) added correspond to the empty String.", "history": "Added in API level 24", "FullName": "public StringJoiner setEmptyValue (CharSequence emptyValue)"}, "StringJoiner(java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: the sequence of characters to be used between each element added to the StringJoiner value"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if delimiter is null"]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a StringJoiner with no characters in it, with no prefix or suffix, and a copy of the supplied delimiter. If no characters are added to the StringJoiner and methods accessing the value of it are invoked, it will not return a prefix or suffix (or properties thereof) in the result, unless setEmptyValue has first been called.", "history": "Added in API level 24", "FullName": "public StringJoiner (CharSequence delimiter)"}, "merge(java.util.StringJoiner)": {"Returns": [["@B_java#util#StringJoiner_E@", "This StringJoiner"]], "Parameters": [["@B_java#util#StringJoiner_E@", "StringJoiner: The StringJoiner whose contents should be merged into this one"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if the other StringJoiner is null"]], "SeeAlso": [], "Permissions": [], "Description": "Adds the contents of the given StringJoiner without prefix and suffix as the next element if it is non-empty. If the given StringJoiner is empty, the call has no effect. A StringJoiner is empty if @B_java#util#StringJoiner#add_E@ has never been called, and if merge() has never been called with a non-empty StringJoiner argument. If the other StringJoiner is using a different delimiter, then elements from the other StringJoiner are concatenated with that delimiter and the result is appended to this StringJoiner as a single element.", "history": "Added in API level 24", "FullName": "public StringJoiner merge (StringJoiner other)"}}, "Inheritance": [], "ClassName": "java.util.StringJoiner", "ClassDesc": "StringJoiner is used to construct a sequence of characters separated by a delimiter and optionally starting with a supplied prefix and ending with a supplied suffix. Prior to adding something to the StringJoiner, its sj.toString() method will, by default, return prefix + suffix. However, if the setEmptyValue method is called, the emptyValue supplied will be returned instead. This can be used, for example, when creating a string using set notation to indicate an empty set, i.e. \"{}\", where the prefix is \"{\", the suffix is \"}\" and nothing has been added to the StringJoiner."}