{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 16", "FullName": "public String toString ()"}, "setPattern(android.media.MediaCodec.CryptoInfo.Pattern)": {"Returns": [], "Parameters": [["@B_android#media#MediaCodec#CryptoInfo#Pattern_E@", "MediaCodec.CryptoInfo.Pattern no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the encryption pattern on a @B_android#media#MediaCodec#CryptoInfo_E@ instance. See @B_android#media#MediaCodec#CryptoInfo#Pattern_E@.", "history": "Added in API level 24", "FullName": "public void setPattern (MediaCodec.CryptoInfo.Pattern newPattern)"}, "MediaCodec.CryptoInfo()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 16", "FullName": "public MediaCodec.CryptoInfo ()"}, "set(int,int[],int[],byte[],byte[],int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int[]", "int: This value must never be null."], ["int[]", "int: This value must never be null."], ["byte[]", "byte: This value must never be null."], ["byte[]", "byte: This value must never be null."], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the subsample count, clear/encrypted sizes, key, IV and mode fields of a @B_android#media#MediaCodec#CryptoInfo_E@ instance.", "history": "Added in API level 16", "FullName": "public void set (int newNumSubSamples, int[] newNumBytesOfClearData, int[] newNumBytesOfEncryptedData, byte[] newKey, byte[] newIV, int newMode)"}, "set(int, int[], int[], byte[], byte[], int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int[]", "int no parameter comment This value must never be null."], ["int[]", "int no parameter comment This value must never be null."], ["byte[]", "byte no parameter comment This value must never be null."], ["byte[]", "byte no parameter comment This value must never be null."], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the subsample count, clear/encrypted sizes, key, IV and mode fields of a @B_android#media#MediaCodec#CryptoInfo_E@ instance.", "history": "added in API level 16", "FullName": "public void set (int newNumSubSamples, int[] newNumBytesOfClearData, int[] newNumBytesOfEncryptedData, byte[] newKey, byte[] newIV, int newMode)"}}, "Inheritance": [], "ClassName": "android.media.MediaCodec.CryptoInfo", "ClassDesc": "Metadata describing the structure of an encrypted input sample. A buffer's data is considered to be partitioned into \"subSamples\". Each subSample starts with a run of plain, unencrypted bytes followed by a run of encrypted bytes. Either of these runs may be empty. If pattern encryption applies, each of the encrypted runs is encrypted only partly, according to a repeating pattern of \"encrypt\" and \"skip\" blocks. @B_android#media#MediaCodec#CryptoInfo#numBytesOfClearData_E@ can be null to indicate that all data is encrypted, and @B_android#media#MediaCodec#CryptoInfo#numBytesOfEncryptedData_E@ can be null to indicate that all data is clear. At least one of @B_android#media#MediaCodec#CryptoInfo#numBytesOfClearData_E@ and @B_android#media#MediaCodec#CryptoInfo#numBytesOfEncryptedData_E@ must be non-null. This information encapsulates per-sample metadata as outlined in ISO/IEC FDIS 23001-7:2016 \"Common encryption in ISO base media file format files\". CryptoInfo, the scheme is selected implicitly by the combination of the @B_android#media#MediaCodec#CryptoInfo#mode_E@ field and the value set with @B_android#media#MediaCodec#CryptoInfo#setPattern_E@. For the pattern, setting the pattern to all zeroes (that is, both blocksToEncrypt and blocksToSkip are zero) is interpreted as turning patterns off completely. A scheme that does not use patterns will be selected, either cenc or cbc1. Setting the pattern to any nonzero value will choose one of the pattern-supporting schemes, cens or cbcs. The default pattern if @B_android#media#MediaCodec#CryptoInfo#setPattern_E@ is never called is all zeroes. @B_android#media#MediaCodec#CryptoInfo#setPattern_E@ is used to set the pattern to all zeroes, this will be interpreted as selecting the cbc1 scheme. The cbc1 scheme cannot successfully decrypt HLS SAMPLE-AES audio because of differences in how the IVs are handled. For this reason, it is recommended that a pattern of 1 encrypted block and 0 skip blocks be used with HLS SAMPLE-AES audio. This will trigger decryption to use cbcs mode while still decrypting every block."}