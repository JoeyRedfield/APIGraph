{"Functions": {"getStatus()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int getStatus ()"}, "toString()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public String toString ()"}, "getAutoMatchCriteria()": {"Returns": [["", "A bundle containing the automatch criteria for this room."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the automatch criteria used to create or join this room, if any. May be null if the room has no automatch properties.", "history": "", "FullName": "public Bundle getAutoMatchCriteria ()"}, "getCreatorId()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public String getCreatorId ()"}, "getDescription()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public String getDescription ()"}, "getParticipantId(java.lang.String)": {"Returns": [["", "The participant ID corresponding to given player, or null if none found."]], "Parameters": [["String", "Player ID to find participant ID for."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the participant ID for a given player. This will only return a non-null ID if the player is actually a participant in the room and that player's identity is visible to the current player. Note that this will always return non-null for the current player.", "history": "", "FullName": "public String getParticipantId (String playerId)"}, "getAutoMatchWaitEstimateSeconds()": {"Returns": [["", "The estimated wait time in seconds, or -1 if the room is not automatching or no estimate could be provided."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the estimated wait time for automatching to finish for players who are not automatched immediately, as measured from the time that the room entered the automatching pool.", "history": "", "FullName": "public int getAutoMatchWaitEstimateSeconds ()"}, "describeContents()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int describeContents ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getVariant()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int getVariant ()"}, "getRoomId()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public String getRoomId ()"}, "getDescription(android.database.CharArrayBuffer)": {"Returns": [], "Parameters": [["CharArrayBuffer", "The buffer to load the data into."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Loads the room description into the given @B_android#database#CharArrayBuffer_E@.", "history": "", "FullName": "public void getDescription (CharArrayBuffer dataOut)"}, "isDataValid()": {"Returns": [["", "whether or not the object is valid for use."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check to see if this object is valid for use. If the object is still volatile, this method will indicate whether or not the object can be safely used. The output of a call to @B_com#google#android#gms#common#data#Freezable#freeze_E@ will always be valid.", "history": "", "FullName": "public boolean isDataValid ()"}, "getParticipantIds()": {"Returns": [["", "The IDs of the participants in this room. These are returned in the participant order of the room. Note that these are not stable across rooms."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the IDs of the participants of the given room.", "history": "", "FullName": "public ArrayList<String> getParticipantIds ()"}, "getParticipant(java.lang.String)": {"Returns": [["", "The participant corresponding to the given ID."]], "Parameters": [["String", "Match-local ID of the participant to retrieve status for."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get a participant in a room by its ID. Note that the participant ID must correspond to a participant in this match, or this method will throw an exception.", "history": "", "FullName": "public Participant getParticipant (String participantId)"}, "getParticipantStatus(java.lang.String)": {"Returns": [["", "The current status of the participant in this room. One of @B_com#google#android#gms#games#multiplayer#Participant#STATUS_INVITED_E@, @B_com#google#android#gms#games#multiplayer#Participant#STATUS_JOINED_E@, @B_com#google#android#gms#games#multiplayer#Participant#STATUS_DECLINED_E@, or @B_com#google#android#gms#games#multiplayer#Participant#STATUS_LEFT_E@."]], "Parameters": [["String", "Room-local ID of the participant to retrieve status for."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the status of a participant in a room. Note that the participant ID must correspond to a participant in this room, or this method will throw an exception.", "history": "", "FullName": "public int getParticipantStatus (String participantId)"}, "hashCode()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int hashCode ()"}, "getCreationTimestamp()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public long getCreationTimestamp ()"}, "freeze()": {"Returns": [["", "A concrete implementation of the data object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Freeze a volatile representation into an immutable representation. Objects returned from this call are safe to cache. Note that the output of freeze may not be identical to the parent object, but should be equal. In other words:", "history": "", "FullName": "public Room freeze ()"}, "equals(java.lang.Object)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public boolean equals (Object obj)"}, "getParticipants()": {"Returns": [["", "A list of @B_com#google#android#gms#games#multiplayer#Participant_E@s for this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the @B_com#google#android#gms#games#multiplayer#Participant_E@s for this object. This is a list of all Participants applicable to the given object.", "history": "", "FullName": "public ArrayList<Participant> getParticipants ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.games.multiplayer.realtime.RoomEntity", "ClassDesc": "Data object representing the data for a room. This is immutable, andtherefore safe to cache or store. Note, however, that the data it represents may grow stale. This class exists solely to support parceling these objects and should not be used directly."}