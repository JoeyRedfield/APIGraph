{"Functions": {"getLength()": {"Returns": [["int", "The number of attributes in the list."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the number of attributes in this list. The SAX parser may provide attributes in any arbitrary order, regardless of the order in which they were declared or specified. The number of attributes may be zero.", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public abstract int getLength ()"}, "getType(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "The attribute type as a string, or null if no such attribute exists."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the attribute."]], "Throws": [], "SeeAlso": ["@B_org#xml#sax#AttributeList#getType_E@"], "Permissions": [], "Description": "Return the type of an attribute in the list (by name). The return value is the same as the return value for getType(int). If the attribute name has a namespace prefix in the document, the application must include the prefix here.", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public abstract String getType (String name)"}, "getValue(int)": {"Returns": [["@B_java#lang#String_E@", "The attribute value as a string, or null if the index is out of range."]], "Parameters": [["int", "int: The index of the attribute in the list (starting at 0)."]], "Throws": [], "SeeAlso": ["@B_org#xml#sax#AttributeList#getLength_E@", "@B_org#xml#sax#AttributeList#getValue_E@"], "Permissions": [], "Description": "Return the value of an attribute in the list (by position). If the attribute value is a list of tokens (IDREFS, ENTITIES, or NMTOKENS), the tokens will be concatenated into a single string separated by whitespace.", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public abstract String getValue (int i)"}, "getType(int)": {"Returns": [["@B_java#lang#String_E@", "The attribute type as a string, or null if the index is out of range."]], "Parameters": [["int", "int: The index of the attribute in the list (starting at 0)."]], "Throws": [], "SeeAlso": ["@B_org#xml#sax#AttributeList#getLength_E@", "@B_org#xml#sax#AttributeList#getType_E@"], "Permissions": [], "Description": "Return the type of an attribute in the list (by position). The attribute type is one of the strings \"CDATA\", \"ID\", \"IDREF\", \"IDREFS\", \"NMTOKEN\", \"NMTOKENS\", \"ENTITY\", \"ENTITIES\", or \"NOTATION\" (always in upper case). If the parser has not read a declaration for the attribute, or if the parser does not report attribute types, then it must return the value \"CDATA\" as stated in the XML 1.0 Recommentation (clause 3.3.3, \"Attribute-Value Normalization\"). For an enumerated attribute that is not a notation, the parser will report the type as \"NMTOKEN\".", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public abstract String getType (int i)"}, "getName(int)": {"Returns": [["@B_java#lang#String_E@", "The name of the indexed attribute, or null if the index is out of range."]], "Parameters": [["int", "int: The index of the attribute in the list (starting at 0)."]], "Throws": [], "SeeAlso": ["@B_org#xml#sax#AttributeList#getLength_E@"], "Permissions": [], "Description": "Return the name of an attribute in this list (by position). The names must be unique: the SAX parser shall not include the same attribute twice. Attributes without values (those declared #IMPLIED without a value specified in the start tag) will be omitted from the list. If the attribute name has a namespace prefix, the prefix will still be attached.", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public abstract String getName (int i)"}, "getValue(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "The attribute value as a string, or null if no such attribute exists."]], "Parameters": [["@B_java#lang#String_E@", "String: the name of the attribute to return"]], "Throws": [], "SeeAlso": ["@B_org#xml#sax#AttributeList#getValue_E@"], "Permissions": [], "Description": "Return the value of an attribute in the list (by name). The return value is the same as the return value for getValue(int). If the attribute name has a namespace prefix in the document, the application must include the prefix here.", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public abstract String getValue (String name)"}}, "Inheritance": [], "ClassName": "org.xml.sax.AttributeList", "ClassDesc": "This interface has been replaced by the SAX2 @B_org#xml#sax#Attributes_E@ interface, which includes Namespace support. Interface for an element's attribute specifications. This is the original SAX1 interface for reporting an element's attributes. Unlike the new @B_org#xml#sax#Attributes_E@ interface, it does not support Namespace-related information. When an attribute list is supplied as part of a @B_org#xml#sax#DocumentHandler#startElement_E@ event, the list will return valid results only during the scope of the event; once the event handler returns control to the parser, the attribute list is invalid. To save a persistent copy of the attribute list, use the SAX1 @B_org#xml#sax#helpers#AttributeListImpl_E@ helper class. An attribute list includes only attributes that have been specified or defaulted: #IMPLIED attributes will not be included. There are two ways for the SAX application to obtain information from the AttributeList. First, it can iterate through the entire list: (Note that the result of getLength() will be zero if there are no attributes.) As an alternative, the application can request the value or type of specific attributes:"}