{"Functions": {"unsubscribe(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.fitness.data.DataType)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "an existing GoogleApiClient. Must be connected at the time of this call."], ["@B_com#google#android#gms#fitness#data#DataType_E@", "the @B_com#google#android#gms#fitness#data#DataType_E@ to remove. All subscriptions to the particular data type will be removed"]], "Throws": [["IllegalStateException", "if client is not connected"]], "SeeAlso": [], "Permissions": [], "Description": "Unsubscribes from background data collection for the current application for a particular data type. Should be called when the application no longer wishes to record data.", "history": "", "FullName": "public abstract PendingResult<Status> unsubscribe (GoogleApiClient client, DataType dataType)"}, "unsubscribe(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.fitness.data.Subscription)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "an existing GoogleApiClient. Must be connected at the time of this call."], ["@B_com#google#android#gms#fitness#data#Subscription_E@", "the @B_com#google#android#gms#fitness#data#Subscription_E@ to remove"]], "Throws": [["IllegalStateException", "if client is not connected"]], "SeeAlso": [], "Permissions": [], "Description": "Unsubscribes from background data collection for the current application. Should be called when the application no longer wishes to record data.", "history": "", "FullName": "public abstract PendingResult<Status> unsubscribe (GoogleApiClient client, Subscription subscription)"}, "listSubscriptions(com.google.android.gms.common.api.GoogleApiClient)": {"Returns": [["", "a pending result containing the found subscriptions."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "an existing GoogleApiClient. It does not need to be connected at the time of this call, but the list operation will be delayed until the connection is complete."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads all existing subscriptions for the current application.", "history": "", "FullName": "public abstract PendingResult<ListSubscriptionsResult> listSubscriptions (GoogleApiClient client)"}, "subscribe(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.fitness.data.DataType)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "an existing GoogleApiClient. It does not need to be connected at the time of this call, but the subscribe operation will be delayed until the connection is complete."], ["@B_com#google#android#gms#fitness#data#DataType_E@", "the @B_com#google#android#gms#fitness#data#DataType_E@ to subscribe to."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Subscribe to background collection of data of a specific type on behalf of the current application. Specifying a @B_com#google#android#gms#fitness#data#DataType_E@ instead of a @B_com#google#android#gms#fitness#data#DataSource_E@ means that the default data source will be used to serve this request. The default is based on the data type and the available data sources. The default data source could be a combined data source, and its data might be averaged or filtered. As new data sources for the data type become available, the default data source might change. After the subscription is successfully added, new data points in the requested data stream are persisted to the Google Fit store, and can be queried via the @B_com#google#android#gms#fitness#HistoryApi_E@. Note that not all data sources are available at all times (external devices may go offline, for instance). If no data sources matching the subscription are currently available, the request will succeed silently and @B_com#google#android#gms#fitness#FitnessStatusCodes#SUCCESS_NO_DATA_SOURCES_E@ will be returned. Once data sources become available, recording of data will start. If after the subscription is added the data source becomes unavailable, the subscription remains active, and recording resumes once the data source becomes available again. Data points from the time interval when the data source was unavailable may or may not be recorded, depending on whether batching is supported. If the requested subscription already exists, the request will be a no-op and @B_com#google#android#gms#fitness#FitnessStatusCodes#SUCCESS_ALREADY_SUBSCRIBED_E@ will be returned.", "history": "", "FullName": "public abstract PendingResult<Status> subscribe (GoogleApiClient client, DataType dataType)"}, "subscribe(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.fitness.data.DataSource)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "an existing GoogleApiClient. It does not need to be connected at the time of this call, but the subscribe operation will be delayed until the connection is complete."], ["@B_com#google#android#gms#fitness#data#DataSource_E@", "the @B_com#google#android#gms#fitness#data#DataSource_E@ to subscribe to."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Subscribe to background collection of data from a specific source on behalf of the current application. After the subscription is successfully added, new data points in the requested data stream are persisted to the Google Fit store, and can be queried via the @B_com#google#android#gms#fitness#HistoryApi_E@. If after the subscription is added the data source becomes unavailable (it may be disconnected or disabled, for instance), the subscription remains active. Once the data source becomes available again, new data points (and any data points that were batched while disconnected) are inserted.", "history": "", "FullName": "public abstract PendingResult<Status> subscribe (GoogleApiClient client, DataSource dataSource)"}, "unsubscribe(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.fitness.data.DataSource)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "an existing GoogleApiClient. Must be connected at the time of this call."], ["@B_com#google#android#gms#fitness#data#DataSource_E@", "the @B_com#google#android#gms#fitness#data#DataSource_E@ to unsubscribe from"]], "Throws": [["IllegalStateException", "if client is not connected"]], "SeeAlso": [], "Permissions": [], "Description": "Unsubscribes from background data collection for the current application for a particular data source. Should be called when the application no longer wishes to record data.", "history": "", "FullName": "public abstract PendingResult<Status> unsubscribe (GoogleApiClient client, DataSource dataSource)"}, "listSubscriptions(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.fitness.data.DataType)": {"Returns": [["", "a pending result containing the found subscriptions."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "an existing GoogleApiClient. It does not need to be connected at the time of this call, but the list operation will be delayed until the connection is complete."], ["@B_com#google#android#gms#fitness#data#DataType_E@", "list only subscriptions to this @B_com#google#android#gms#fitness#data#DataType_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads all existing subscriptions for the current application to a particular data type.", "history": "", "FullName": "public abstract PendingResult<ListSubscriptionsResult> listSubscriptions (GoogleApiClient client, DataType dataType)"}}, "Inheritance": [], "ClassName": "com.google.android.gms.fitness.RecordingApi", "ClassDesc": "API which enables low-power, always-on background collection of sensor data into the Google Fit store. Sensor @B_com#google#android#gms#fitness#data#Subscription_E@ are active when the requesting app is not running, and persisted through system restarts. Collected data can be queried using the @B_com#google#android#gms#fitness#HistoryApi_E@. Unlike the @B_com#google#android#gms#fitness#SensorsApi_E@, the Recording API does not support delivery of live sensor events. When live data is needed (such as when the app is open in the foreground), a listener should be added with the Sensors API. An app can have both an active subscription and an active listener at the same time. Unlike listeners, subscriptions don't need to be removed and re-added periodically. The Recording API should be accessed from the @B_com#google#android#gms#fitness#Fitness_E@ entry point. Example:"}