{"Functions": {"syncPeriodic(long,long)": {"Returns": [["@B_android#content#SyncRequest#Builder_E@", "no returns description in source"]], "Parameters": [["long", "long: the amount of time in seconds that you wish to elapse between periodic syncs. A minimum period of 1 hour is enforced."], ["long", "long: the amount of flex time in seconds before pollFrequency that you permit for the sync to take place. Must be less than pollFrequency and greater than MAX(5% of pollFrequency, 5 minutes)"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Build a periodic sync. Either this or syncOnce() @B_android#provider#package-summary_E@ and by the contents of the extras bundle. You cannot reuse the same builder for one-time syncs after having specified a periodic sync (by calling this function). If you do, an IllegalArgumentException will be thrown. The bundle for a periodic sync can be queried by applications with the correct permissions using @B_android#content#ContentResolver#getPeriodicSyncs_E@, so no sensitive data should be transferred here. Example usage. @B_android#content#ContentResolver#SYNC_EXTRAS_DO_NOT_RETRY_E@, @B_android#content#ContentResolver#SYNC_EXTRAS_IGNORE_BACKOFF_E@, @B_android#content#ContentResolver#SYNC_EXTRAS_IGNORE_SETTINGS_E@, @B_android#content#ContentResolver#SYNC_EXTRAS_INITIALIZE_E@, @B_android#content#ContentResolver#SYNC_EXTRAS_FORCE_E@, @B_android#content#ContentResolver#SYNC_EXTRAS_EXPEDITED_E@, @B_android#content#ContentResolver#SYNC_EXTRAS_MANUAL_E@ set to true. If any are supplied then an IllegalArgumentException will be thrown.", "history": "Added in API level 19", "FullName": "public SyncRequest.Builder syncPeriodic (long pollFrequency, long beforeSeconds)"}, "syncOnce()": {"Returns": [["@B_android#content#SyncRequest#Builder_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Request that a sync occur immediately. Example", "history": "Added in API level 19", "FullName": "public SyncRequest.Builder syncOnce ()"}, "setNoRetry(boolean)": {"Returns": [["@B_android#content#SyncRequest#Builder_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean: true to not retry a failed sync. Default false."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Convenience function for setting @B_android#content#ContentResolver#SYNC_EXTRAS_DO_NOT_RETRY_E@. A one-off sync operation that fails will be retried with exponential back-off unless this is set to false. Not valid for periodic sync and will throw an IllegalArgumentException in build().", "history": "Added in API level 19", "FullName": "public SyncRequest.Builder setNoRetry (boolean noRetry)"}, "setIgnoreSettings(boolean)": {"Returns": [["@B_android#content#SyncRequest#Builder_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean: true to ignore the sync automatically settings. Default false."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Convenience function for setting @B_android#content#ContentResolver#SYNC_EXTRAS_IGNORE_SETTINGS_E@. Not valid for periodic sync and will throw an IllegalArgumentException in @B_android#content#SyncRequest#Builder#build_E@. Throws IllegalArgumentException if called and @B_android#content#SyncRequest#Builder#setDisallowMetered_E@ has been set.", "history": "Added in API level 19", "FullName": "public SyncRequest.Builder setIgnoreSettings (boolean ignoreSettings)"}, "setDisallowMetered(boolean)": {"Returns": [["@B_android#content#SyncRequest#Builder_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean: true to allow this transfer on metered networks. Default false."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Will throw an IllegalArgumentException if called and @B_android#content#SyncRequest#Builder#setIgnoreSettings_E@ has already been called.", "history": "Added in API level 19", "FullName": "public SyncRequest.Builder setDisallowMetered (boolean disallow)"}, "setSyncAdapter(android.accounts.Account,java.lang.String)": {"Returns": [["@B_android#content#SyncRequest#Builder_E@", "no returns description in source"]], "Parameters": [["@B_android#accounts#Account_E@", "Account: Account to sync. Can be null unless this is a periodic sync, for which verification by the ContentResolver will fail. If a sync is performed without an account, the"], ["@B_java#lang#String_E@", "String: A String identifying the content provider to be synced."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Specify an authority and account for this transfer.", "history": "Added in API level 19", "FullName": "public SyncRequest.Builder setSyncAdapter (Account account, String authority)"}, "setRequiresCharging(boolean)": {"Returns": [["@B_android#content#SyncRequest#Builder_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean: true if sync requires the phone to be plugged in. Default false."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Specify whether the sync requires the phone to be plugged in.", "history": "Added in API level 24", "FullName": "public SyncRequest.Builder setRequiresCharging (boolean requiresCharging)"}, "syncPeriodic(long, long)": {"Returns": [["@B_android#content#SyncRequest#Builder_E@", "no returns description in source"]], "Parameters": [["long", "long: the amount of time in seconds that you wish to elapse between periodic syncs. A minimum period of 1 hour is enforced."], ["long", "long: the amount of flex time in seconds before pollFrequency that you permit for the sync to take place. Must be less than pollFrequency and greater than MAX(5% of pollFrequency, 5 minutes)"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Build a periodic sync. Either this or syncOnce() @B_android#provider#package-summary_E@ and by the contents of the extras bundle. You cannot reuse the same builder for one-time syncs after having specified a periodic sync (by calling this function). If you do, an IllegalArgumentException will be thrown. The bundle for a periodic sync can be queried by applications with the correct permissions using @B_android#content#ContentResolver#getPeriodicSyncs_E@, so no sensitive data should be transferred here. Example usage. @B_android#content#ContentResolver#SYNC_EXTRAS_DO_NOT_RETRY_E@, @B_android#content#ContentResolver#SYNC_EXTRAS_IGNORE_BACKOFF_E@, @B_android#content#ContentResolver#SYNC_EXTRAS_IGNORE_SETTINGS_E@, @B_android#content#ContentResolver#SYNC_EXTRAS_INITIALIZE_E@, @B_android#content#ContentResolver#SYNC_EXTRAS_FORCE_E@, @B_android#content#ContentResolver#SYNC_EXTRAS_EXPEDITED_E@, @B_android#content#ContentResolver#SYNC_EXTRAS_MANUAL_E@ set to true. If any are supplied then an IllegalArgumentException will be thrown.", "history": "added in API level 19", "FullName": "public SyncRequest.Builder syncPeriodic (long pollFrequency, long beforeSeconds)"}, "setExpedited(boolean)": {"Returns": [["@B_android#content#SyncRequest#Builder_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean: whether to run expedited. Default false."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "An expedited sync runs immediately and can preempt other non-expedited running syncs. Not valid for periodic sync and will throw an IllegalArgumentException in @B_android#content#SyncRequest#Builder#build_E@.", "history": "Added in API level 19", "FullName": "public SyncRequest.Builder setExpedited (boolean expedited)"}, "setExtras(android.os.Bundle)": {"Returns": [["@B_android#content#SyncRequest#Builder_E@", "no returns description in source"]], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: extras bundle to set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Developer-provided extras handed back when sync actually occurs. This bundle is copied into the SyncRequest returned by @B_android#content#SyncRequest#Builder#build_E@. Example: Integer Long Boolean Float Double String Account null If any data is present in the bundle not of this type, build() will throw a runtime exception.", "history": "Added in API level 19", "FullName": "public SyncRequest.Builder setExtras (Bundle bundle)"}, "setManual(boolean)": {"Returns": [["@B_android#content#SyncRequest#Builder_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean: User-initiated sync or not. Default false."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Convenience function for setting @B_android#content#ContentResolver#SYNC_EXTRAS_MANUAL_E@. Not valid for periodic sync and will throw an IllegalArgumentException in @B_android#content#SyncRequest#Builder#build_E@.", "history": "Added in API level 19", "FullName": "public SyncRequest.Builder setManual (boolean isManual)"}, "setIgnoreBackoff(boolean)": {"Returns": [["@B_android#content#SyncRequest#Builder_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean: ignore back off settings. Default false."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Convenience function for setting @B_android#content#ContentResolver#SYNC_EXTRAS_IGNORE_BACKOFF_E@. Ignoring back-off will force the sync scheduling process to ignore any back-off that was the result of a failed sync, as well as to invalidate any @B_android#content#SyncResult#delayUntil_E@ value that may have been set by the adapter. Successive failures will not honor this flag. Not valid for periodic sync and will throw an IllegalArgumentException in @B_android#content#SyncRequest#Builder#build_E@.", "history": "Added in API level 19", "FullName": "public SyncRequest.Builder setIgnoreBackoff (boolean ignoreBackoff)"}, "build()": {"Returns": [["@B_android#content#SyncRequest_E@", "a SyncRequest with the information contained within this builder."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Performs validation over the request and throws the runtime exception IllegalArgumentException if this validation fails.", "history": "Added in API level 19", "FullName": "public SyncRequest build ()"}, "SyncRequest.Builder()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 19", "FullName": "public SyncRequest.Builder ()"}}, "Inheritance": [], "ClassName": "android.content.SyncRequest.Builder", "ClassDesc": "Builder class for a @B_android#content#SyncRequest_E@. As you build your SyncRequest this class will also perform validation."}