{"Functions": {"isActivated()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this node has currently been activated by the user.", "history": "Added in API level 23", "FullName": "public boolean isActivated ()"}, "isContextClickable()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this node is something the user can perform a context click on.", "history": "Added in API level 23", "FullName": "public boolean isContextClickable ()"}, "getClassName()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the class name of the node's implementation, indicating its behavior. For example, a button will report \"android.widget.Button\" meaning it behaves like a @B_android#widget#Button_E@.", "history": "Added in API level 23", "FullName": "public String getClassName ()"}, "getTextBackgroundColor()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "If @B_android#app#assist#AssistStructure#ViewNode#getText_E@ is non-null, this is the main text background color associated with it. If there is no text background color, @B_android#app#assist#AssistStructure#ViewNode#TEXT_COLOR_UNDEFINED_E@ is returned. Note that the text may also contain style spans that modify the color of specific parts of the text. It's only relevant when the @B_android#app#assist#AssistStructure_E@ is used for assist purposes, not for autofill purposes.", "history": "Added in API level 23", "FullName": "public int getTextBackgroundColor ()"}, "isEnabled()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this node is in an enabled state.", "history": "Added in API level 23", "FullName": "public boolean isEnabled ()"}, "getMaxTextLength()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the maximum length of the text associated with this node node, or -1 if not supported by the node or not set. It's only relevant when the @B_android#app#assist#AssistStructure_E@ is used for autofill purposes, not for assist purposes.", "history": "Added in API level 28", "FullName": "public int getMaxTextLength ()"}, "getTextLineBaselines()": {"Returns": [["int[]", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return per-line baselines into the text returned by @B_android#app#assist#AssistStructure#ViewNode#getText_E@. Each entry in the array is a formatted line of text, and the value it contains is the baseline where that text appears in the view. May return null if there is no line information. It's only relevant when the @B_android#app#assist#AssistStructure_E@ is used for assist purposes, not for autofill purposes.", "history": "Added in API level 23", "FullName": "public int[] getTextLineBaselines ()"}, "isLongClickable()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this node is something the user can perform a long click/press on.", "history": "Added in API level 23", "FullName": "public boolean isLongClickable ()"}, "getElevation()": {"Returns": [["float", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the visual elevation of the view, used for shadowing and other visual characterstics, as set by @B_android#view#ViewStructure#setElevation_E@. It's only relevant when the @B_android#app#assist#AssistStructure_E@ is used for assist purposes, not for autofill purposes.", "history": "Added in API level 23", "FullName": "public float getElevation ()"}, "getScrollX()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current X scroll offset of this view, as per @B_android#view#View#getScrollX_E@.", "history": "Added in API level 23", "FullName": "public int getScrollX ()"}, "getIdType()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "If @B_android#app#assist#AssistStructure#ViewNode#getId_E@ is a resource identifier, this is the type name of that identifier. See @B_android#view#ViewStructure#setId_E@ for more information.", "history": "Added in API level 23", "FullName": "public String getIdType ()"}, "getInputType()": {"Returns": [["int", "bits as defined by @B_android#text#InputType_E@."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the @B_android#text#InputType_E@ bits of this structure.", "history": "Added in API level 26", "FullName": "public int getInputType ()"}, "isFocusable()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this node can take input focus.", "history": "Added in API level 23", "FullName": "public boolean isFocusable ()"}, "getAutofillValue()": {"Returns": [["@B_android#view#autofill#AutofillValue_E@", "the autofill value of this view, or null if the structure was created for assist purposes."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the value of this view. It's only relevant when the @B_android#app#assist#AssistStructure_E@ is used for autofill purposes, not for assist purposes.", "history": "Added in API level 26", "FullName": "public AutofillValue getAutofillValue ()"}, "getId()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the ID associated with this view, as per @B_android#view#View#getId_E@.", "history": "Added in API level 23", "FullName": "public int getId ()"}, "isAccessibilityFocused()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this node currently had accessibility focus at the time that the structure was collected.", "history": "Added in API level 23", "FullName": "public boolean isAccessibilityFocused ()"}, "isSelected()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this node has currently been selected by the user.", "history": "Added in API level 23", "FullName": "public boolean isSelected ()"}, "getTop()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the top edge of this view, in pixels, relative to the top edge of its parent.", "history": "Added in API level 23", "FullName": "public int getTop ()"}, "getExtras()": {"Returns": [["@B_android#os#Bundle_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a Bundle containing optional vendor-specific extension information.", "history": "Added in API level 23", "FullName": "public Bundle getExtras ()"}, "isClickable()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this node is clickable by the user.", "history": "Added in API level 23", "FullName": "public boolean isClickable ()"}, "getTextSelectionEnd()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "If @B_android#app#assist#AssistStructure#ViewNode#getText_E@ is non-null, this is where the current selection starts. If there is no selection, returns the same value as @B_android#app#assist#AssistStructure#ViewNode#getTextSelectionStart_E@, indicating the cursor position. It's only relevant when the @B_android#app#assist#AssistStructure_E@ is used for assist purposes, not for autofill purposes.", "history": "Added in API level 23", "FullName": "public int getTextSelectionEnd ()"}, "getMaxTextEms()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the maximum width in ems of the text associated with this node, or -1 if not supported by the node. It's only relevant when the @B_android#app#assist#AssistStructure_E@ is used for autofill purposes, not for assist purposes.", "history": "Added in API level 28", "FullName": "public int getMaxTextEms ()"}, "getHeight()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the height of this view, in pixels.", "history": "Added in API level 23", "FullName": "public int getHeight ()"}, "getWebDomain()": {"Returns": [["@B_java#lang#String_E@", "domain-only part of the document. For example, if the full URL is https://example.com/login?user=my_user, it returns example.com. This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the domain of the HTML document represented by this view. Typically used when the view associated with the view is a container for an HTML document. @B_android#service#autofill#AutofillService_E@ for more details.", "history": "Added in API level 26", "FullName": "public String getWebDomain ()"}, "getWidth()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the width of this view, in pixels.", "history": "Added in API level 23", "FullName": "public int getWidth ()"}, "getAutofillOptions()": {"Returns": [["@B_java#lang#CharSequence_E@", "the options that can be used to autofill this view, or null if the structure was created for assist purposes."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the options that can be used to autofill this view. Typically used by nodes whose @B_android#view#View#getAutofillType_E@ is a list to indicate the meaning of each possible value in the list. It's relevant when the @B_android#app#assist#AssistStructure_E@ is used for autofill purposes, not for assist purposes.", "history": "Added in API level 26", "FullName": "public CharSequence[] getAutofillOptions ()"}, "getAutofillHints()": {"Returns": [["@B_java#lang#String_E@", "The autofill hints for this view, or null if the structure was created for assist purposes."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describes the content of a view so that a autofill service can fill in the appropriate data. It's only relevant when the @B_android#app#assist#AssistStructure_E@ is used for autofill purposes, not for Assist - see @B_android#view#View#getAutofillHints_E@ for more info.", "history": "Added in API level 26", "FullName": "public String[] getAutofillHints ()"}, "getScrollY()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current Y scroll offset of this view, as per @B_android#view#View#getScrollX_E@.", "history": "Added in API level 23", "FullName": "public int getScrollY ()"}, "getWebScheme()": {"Returns": [["@B_java#lang#String_E@", "scheme-only part of the document. For example, if the full URL is https://example.com/login?user=my_user, it returns https. This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the scheme of the HTML document represented by this view. Typically used when the view associated with the view is a container for an HTML document.", "history": "Added in API level 28", "FullName": "public String getWebScheme ()"}, "isOpaque()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this node is opaque.", "history": "Added in API level 26", "FullName": "public boolean isOpaque ()"}, "getContentDescription()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns any content description associated with the node, which semantically describes its purpose for accessibility and other uses.", "history": "Added in API level 23", "FullName": "public CharSequence getContentDescription ()"}, "getChildAt(int)": {"Returns": [["@B_android#app#assist#AssistStructure#ViewNode_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a child of this node, given an index value from 0 to @B_android#app#assist#AssistStructure#ViewNode#getChildCount_E@-1.", "history": "Added in API level 23", "FullName": "public AssistStructure.ViewNode getChildAt (int index)"}, "getTextIdEntry()": {"Returns": [["@B_java#lang#String_E@", "This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the identifier used to set the text associated with this view. It's only relevant when the @B_android#app#assist#AssistStructure_E@ is used for autofill purposes, not for assist purposes.", "history": "Added in API level 28", "FullName": "public String getTextIdEntry ()"}, "getHint()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return additional hint text associated with the node; this is typically used with a node that takes user input, describing to the user what the input means.", "history": "Added in API level 23", "FullName": "public String getHint ()"}, "getTextColor()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "If @B_android#app#assist#AssistStructure#ViewNode#getText_E@ is non-null, this is the main text color associated with it. If there is no text color, @B_android#app#assist#AssistStructure#ViewNode#TEXT_COLOR_UNDEFINED_E@ is returned. Note that the text may also contain style spans that modify the color of specific parts of the text.", "history": "Added in API level 23", "FullName": "public int getTextColor ()"}, "isChecked()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this node is currently in a checked state.", "history": "Added in API level 23", "FullName": "public boolean isChecked ()"}, "getTextSelectionStart()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "If @B_android#app#assist#AssistStructure#ViewNode#getText_E@ is non-null, this is where the current selection starts. It's only relevant when the @B_android#app#assist#AssistStructure_E@ is used for assist purposes, not for autofill purposes.", "history": "Added in API level 23", "FullName": "public int getTextSelectionStart ()"}, "getVisibility()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the visibility mode of this view, as per @B_android#view#View#getVisibility_E@.", "history": "Added in API level 23", "FullName": "public int getVisibility ()"}, "isFocused()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this node currently had input focus at the time that the structure was collected.", "history": "Added in API level 23", "FullName": "public boolean isFocused ()"}, "getAlpha()": {"Returns": [["float", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the alpha transformation of the view, used to reduce the overall opacity of the view's contents, as set by @B_android#view#ViewStructure#setAlpha_E@. It's only relevant when the @B_android#app#assist#AssistStructure_E@ is used for assist purposes, not for autofill purposes.", "history": "Added in API level 23", "FullName": "public float getAlpha ()"}, "getChildCount()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the number of children this node has.", "history": "Added in API level 23", "FullName": "public int getChildCount ()"}, "getMinTextEms()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the minimum width in ems of the text associated with this node, or -1 if not supported by the node. It's only relevant when the @B_android#app#assist#AssistStructure_E@ is used for autofill purposes, not for assist purposes.", "history": "Added in API level 28", "FullName": "public int getMinTextEms ()"}, "getHtmlInfo()": {"Returns": [["@B_android#view#ViewStructure#HtmlInfo_E@", "the HTML properties associated with this view, or null if the structure was created for assist purposes."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the HTML properties associated with this view. It's only relevant when the @B_android#app#assist#AssistStructure_E@ is used for autofill purposes, not for assist purposes.", "history": "Added in API level 26", "FullName": "public ViewStructure.HtmlInfo getHtmlInfo ()"}, "getIdPackage()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "If @B_android#app#assist#AssistStructure#ViewNode#getId_E@ is a resource identifier, this is the package name of that identifier. See @B_android#view#ViewStructure#setId_E@ for more information.", "history": "Added in API level 23", "FullName": "public String getIdPackage ()"}, "getLocaleList()": {"Returns": [["@B_android#os#LocaleList_E@", "This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the list of locales associated with this view.", "history": "Added in API level 26", "FullName": "public LocaleList getLocaleList ()"}, "isCheckable()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this node represents something that is checkable by the user.", "history": "Added in API level 23", "FullName": "public boolean isCheckable ()"}, "getTextSize()": {"Returns": [["float", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "If @B_android#app#assist#AssistStructure#ViewNode#getText_E@ is non-null, this is the main text size (in pixels) associated with it. Note that the text may also contain style spans that modify the size of specific parts of the text. It's only relevant when the @B_android#app#assist#AssistStructure_E@ is used for assist purposes, not for autofill purposes.", "history": "Added in API level 23", "FullName": "public float getTextSize ()"}, "isAssistBlocked()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if assist data has been blocked starting at this node in the hierarchy.", "history": "Added in API level 23", "FullName": "public boolean isAssistBlocked ()"}, "getTransformation()": {"Returns": [["@B_android#graphics#Matrix_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the transformation that has been applied to this view, such as a translation or scaling. The returned Matrix object is owned by ViewNode; do not modify it. Returns null if there is no transformation applied to the view. It's only relevant when the @B_android#app#assist#AssistStructure_E@ is used for assist purposes, not for autofill purposes.", "history": "Added in API level 23", "FullName": "public Matrix getTransformation ()"}, "getLeft()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the left edge of this view, in pixels, relative to the left edge of its parent.", "history": "Added in API level 23", "FullName": "public int getLeft ()"}, "getText()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns any text associated with the node that is displayed to the user, or null if there is none.", "history": "Added in API level 23", "FullName": "public CharSequence getText ()"}, "getAutofillType()": {"Returns": [["int", "autofill type as defined by @B_android#view#View#getAutofillType_E@, or @B_android#view#View#AUTOFILL_TYPE_NONE_E@ if the structure was created for assist purposes. Value is @B_android#view#View#AUTOFILL_TYPE_NONE_E@, @B_android#view#View#AUTOFILL_TYPE_TEXT_E@, @B_android#view#View#AUTOFILL_TYPE_TOGGLE_E@, @B_android#view#View#AUTOFILL_TYPE_LIST_E@, or @B_android#view#View#AUTOFILL_TYPE_DATE_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the type of value that can be used to autofill the view contents. It's only relevant when the @B_android#app#assist#AssistStructure_E@ is used for autofill purposes.", "history": "Added in API level 26", "FullName": "public int getAutofillType ()"}, "getAutofillId()": {"Returns": [["@B_android#view#autofill#AutofillId_E@", "id that can be used to autofill the view contents, or null if the structure was created for assist purposes."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the id that can be used to autofill the view contents. It's only relevant when the @B_android#app#assist#AssistStructure_E@ is used for autofill purposes.", "history": "Added in API level 26", "FullName": "public AutofillId getAutofillId ()"}, "getIdEntry()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "If @B_android#app#assist#AssistStructure#ViewNode#getId_E@ is a resource identifier, this is the entry name of that identifier. See @B_android#view#ViewStructure#setId_E@ for more information.", "history": "Added in API level 23", "FullName": "public String getIdEntry ()"}, "getTextLineCharOffsets()": {"Returns": [["int[]", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return per-line offsets into the text returned by @B_android#app#assist#AssistStructure#ViewNode#getText_E@. Each entry in the array is a formatted line of text, and the value it contains is the offset into the text string where that line starts. May return null if there is no line information. It's only relevant when the @B_android#app#assist#AssistStructure_E@ is used for assist purposes, not for autofill purposes.", "history": "Added in API level 23", "FullName": "public int[] getTextLineCharOffsets ()"}, "getImportantForAutofill()": {"Returns": [["int", "Value is @B_android#view#View#IMPORTANT_FOR_AUTOFILL_AUTO_E@, @B_android#view#View#IMPORTANT_FOR_AUTOFILL_YES_E@, @B_android#view#View#IMPORTANT_FOR_AUTOFILL_NO_E@, @B_android#view#View#IMPORTANT_FOR_AUTOFILL_YES_EXCLUDE_DESCENDANTS_E@, or @B_android#view#View#IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the @B_android#view#View#setImportantForAutofill_E@ of the view associated with this node. It's only relevant when the @B_android#app#assist#AssistStructure_E@ is used for autofill purposes.", "history": "Added in API level 28", "FullName": "public int getImportantForAutofill ()"}, "getTextStyle()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "If @B_android#app#assist#AssistStructure#ViewNode#getText_E@ is non-null, this is the main text style associated with it, containing a bit mask of @B_android#app#assist#AssistStructure#ViewNode#TEXT_STYLE_BOLD_E@, @B_android#app#assist#AssistStructure#ViewNode#TEXT_STYLE_BOLD_E@, @B_android#app#assist#AssistStructure#ViewNode#TEXT_STYLE_STRIKE_THRU_E@, and/or @B_android#app#assist#AssistStructure#ViewNode#TEXT_STYLE_UNDERLINE_E@. Note that the text may also contain style spans that modify the style of specific parts of the text. It's only relevant when the @B_android#app#assist#AssistStructure_E@ is used for assist purposes, not for autofill purposes.", "history": "Added in API level 23", "FullName": "public int getTextStyle ()"}}, "Inheritance": [], "ClassName": "android.app.assist.AssistStructure.ViewNode", "ClassDesc": "Describes a single view in the assist data."}