{"Functions": {"unregisterQuestUpdateListener(com.google.android.gms.common.api.GoogleApiClient)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Unregisters this client's quest update listener, if any. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract void unregisterQuestUpdateListener (GoogleApiClient apiClient)"}, "accept(com.google.android.gms.common.api.GoogleApiClient, java.lang.String)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "The quest ID of the quest to accept."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asynchronously accept the quest. This enters the player into an @B_com#google#android#gms#games#quest#Quest#STATE_OPEN_E@ quest and will start tracking their progress towards the milestone goal. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract PendingResult<Quests.AcceptQuestResult> accept (GoogleApiClient apiClient, String questId)"}, "showStateChangedPopup(com.google.android.gms.common.api.GoogleApiClient, java.lang.String)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "The ID of the quest to fetch assets from for the popup (name and images)."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Display a popup based on the current state of the quest. Popups are only displayed for quests in @B_com#google#android#gms#games#quest#Quest#STATE_ACCEPTED_E@. If the quest is in any other state, no popup will be displayed. Call this from the onAccepted callbacks to show a popup for accepting a quest. This method should generally be invoked at the point of quest acceptance (after the callback from @B_com#google#android#gms#games#quest#Quests#accept_E@ returns). Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract void showStateChangedPopup (GoogleApiClient apiClient, String questId)"}, "loadByIds(com.google.android.gms.common.api.GoogleApiClient, boolean, java.lang.String...)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["boolean", "If true, this call will clear any locally cached data and attempt to fetch the latest data from the server. This would commonly be used for something like a user-initiated refresh. Normally, this should be set to false to gain advantages of data caching."], ["String...", "The IDs of quests to retrieve."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asynchronously load single quest data for the currently signed-in player and game. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract PendingResult<Quests.LoadQuestsResult> loadByIds (GoogleApiClient apiClient, boolean forceReload, String... questIds)"}, "getQuestsIntent(com.google.android.gms.common.api.GoogleApiClient, int[])": {"Returns": [["", "An @B_android#content#Intent_E@ that can be started to view the list of quests."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["int[]", "Array of quest selectors to include in the list of quests. Valid values include: @B_com#google#android#gms#games#quest#Quests#SELECT_UPCOMING_E@, @B_com#google#android#gms#games#quest#Quests#SELECT_OPEN_E@, @B_com#google#android#gms#games#quest#Quests#SELECT_ACCEPTED_E@, @B_com#google#android#gms#games#quest#Quests#SELECT_ENDING_SOON_E@, @B_com#google#android#gms#games#quest#Quests#SELECT_COMPLETED_E@, @B_com#google#android#gms#games#quest#Quests#SELECT_COMPLETED_UNCLAIMED_E@, @B_com#google#android#gms#games#quest#Quests#SELECT_EXPIRED_E@, @B_com#google#android#gms#games#quest#Quests#SELECT_FAILED_E@, or @B_com#google#android#gms#games#quest#Quests#SELECT_RECENTLY_FAILED_E@. Use @B_com#google#android#gms#games#quest#Quests#SELECT_ALL_QUESTS_E@ to view all quests."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get an intent to view a list of quests. Note that this must be invoked using @B_android#app#Activity#startActivityForResult_E@ so that the identity of the calling package can be established. Quests that are open will contain an \"Accept\" button, while quests that are completed with unclaimed milestone rewards will have a \"Claim Reward\" button. Buttons will not be shown for quests in other states. If the user clicks the \"Accept\" button on a quest, @B_com#google#android#gms#games#quest#Quests#accept_E@ will be called. If the quest is successfully accepted, the activity will close with @B_android#app#Activity#RESULT_OK_E@, and the data intent will contain a parcelable object in @B_com#google#android#gms#games#quest#Quests#EXTRA_QUEST_E@ indicating the accepted quest. If the user clicks the \"Claim Reward\" button on a quest, the activity will close with @B_android#app#Activity#RESULT_OK_E@, and the data intent will contain a parcelable object in @B_com#google#android#gms#games#quest#Quests#EXTRA_QUEST_E@ indicating the quest the user would like to claim a reward for. The caller is responsible for examining the state of this returned quest. If the quest state is @B_com#google#android#gms#games#quest#Quest#STATE_COMPLETED_E@, the caller should invoke @B_com#google#android#gms#games#quest#Quests#claim_E@. If the claim succeeds, the caller should then give the reward to the player. If the user canceled, the result will be @B_android#app#Activity#RESULT_CANCELED_E@. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract Intent getQuestsIntent (GoogleApiClient apiClient, int[] questSelectors)"}, "getQuestIntent(com.google.android.gms.common.api.GoogleApiClient, java.lang.String)": {"Returns": [["", "An @B_android#content#Intent_E@ that can be started to view the quest."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "The ID of the quest to display."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get an intent to view a single quest. Note that this must be invoked using @B_android#app#Activity#startActivityForResult_E@ so that the identity of the calling package can be established. The functionality of this activity is identical to @B_com#google#android#gms#games#quest#Quests#getQuestsIntent_E@, the only difference being this activity displays a single quest rather than a list of quests. See @B_com#google#android#gms#games#quest#Quests#getQuestsIntent_E@ for usage details and behavior. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract Intent getQuestIntent (GoogleApiClient apiClient, String questId)"}, "load(com.google.android.gms.common.api.GoogleApiClient, int[], int, boolean)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["int[]", "An array of quest selectors to indicate which quest states to include. Valid values include: @B_com#google#android#gms#games#quest#Quests#SELECT_UPCOMING_E@, @B_com#google#android#gms#games#quest#Quests#SELECT_OPEN_E@, @B_com#google#android#gms#games#quest#Quests#SELECT_ACCEPTED_E@, @B_com#google#android#gms#games#quest#Quests#SELECT_ENDING_SOON_E@, @B_com#google#android#gms#games#quest#Quests#SELECT_COMPLETED_E@, @B_com#google#android#gms#games#quest#Quests#SELECT_COMPLETED_UNCLAIMED_E@, @B_com#google#android#gms#games#quest#Quests#SELECT_EXPIRED_E@, @B_com#google#android#gms#games#quest#Quests#SELECT_FAILED_E@, or @B_com#google#android#gms#games#quest#Quests#SELECT_RECENTLY_FAILED_E@. Use @B_com#google#android#gms#games#quest#Quests#SELECT_ALL_QUESTS_E@ to view all quests."], ["int", "The sort order to use for sorting the quests. Must be either @B_com#google#android#gms#games#quest#Quests#SORT_ORDER_ENDING_SOON_FIRST_E@ or @B_com#google#android#gms#games#quest#Quests#SORT_ORDER_RECENTLY_UPDATED_FIRST_E@."], ["boolean", "If true, this call will clear any locally cached data and attempt to fetch the latest data from the server. This would commonly be used for something like a user-initiated refresh. Normally, this should be set to false to gain advantages of data caching."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asynchronously load the quest data for the currently signed-in player and game into a single result, including only quests in the provided state array. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract PendingResult<Quests.LoadQuestsResult> load (GoogleApiClient apiClient, int[] questSelectors, int sortOrder, boolean forceReload)"}, "claim(com.google.android.gms.common.api.GoogleApiClient, java.lang.String, java.lang.String)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "The parent quest ID."], ["String", "The ID of the milestone to claim."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asynchronously claim the milestone. This method informs Google Play Games services that the player has completed the milestone on this device, and prevents the milestone from being claimed on another device by the same user. If the method call returns @B_com#google#android#gms#games#GamesStatusCodes#STATUS_OK_E@, your app should reward the player based on the CompletionRewardData of the milestone. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract PendingResult<Quests.ClaimMilestoneResult> claim (GoogleApiClient apiClient, String questId, String milestoneId)"}, "registerQuestUpdateListener(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.games.quest.QuestUpdateListener)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["@B_com#google#android#gms#games#quest#QuestUpdateListener_E@", "The listener that is called when the quest state changes."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Register a listener to listen for updates on @B_com#google#android#gms#games#quest#Quest_E@ instances. Note that only one quest listener may be active at a time. Calling this method while another quest listener was previously registered will replace the original listener with the new one. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract void registerQuestUpdateListener (GoogleApiClient apiClient, QuestUpdateListener listener)"}}, "Inheritance": [], "ClassName": "com.google.android.gms.games.quest.Quests", "ClassDesc": "Entry point for Quest functionality."}