{"Functions": {"getInterruptionFilter()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the interruption filter that is applied when this rule is active.", "history": "Added in API level 24", "FullName": "public int getInterruptionFilter ()"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 24", "FullName": "public int describeContents ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 24", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "AutomaticZenRule(java.lang.String,android.content.ComponentName,android.content.ComponentName,android.net.Uri,android.service.notification.ZenPolicy,int,boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The name of the rule. This value must never be null."], ["@B_android#content#ComponentName_E@", "ComponentName: The Condition Provider service that owns this rule. This can be null if you're using @B_android#app#NotificationManager#setAutomaticZenRuleState_E@ instead of @B_android#service#notification#ConditionProviderService_E@. This value may be null."], ["@B_android#content#ComponentName_E@", "ComponentName: An activity that handles @B_android#app#NotificationManager#ACTION_AUTOMATIC_ZEN_RULE_E@ that shows the user more information about this rule and/or allows them to configure it. This is required if you are not using a @B_android#service#notification#ConditionProviderService_E@. If you are, it overrides the information specified in your manifest. This value may be null."], ["@B_android#net#Uri_E@", "Uri: A representation of the state that should cause your app to apply the given interruption filter. This value must never be null."], ["@B_android#service#notification#ZenPolicy_E@", "ZenPolicy: The policy defines which notifications are allowed to interrupt the user while this rule is active. This overrides the global policy while this rule is action (@B_android#service#notification#Condition#STATE_TRUE_E@). This value may be null."], ["int", "int: The interruption filter defines which notifications are allowed to interrupt the user (e.g. via sound & vibration) while this rule is active."], ["boolean", "boolean: Whether the rule is enabled."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an automatic zen rule.", "history": "Added in API level 29", "FullName": "public AutomaticZenRule (String name, ComponentName owner, ComponentName configurationActivity, Uri conditionId, ZenPolicy policy, int interruptionFilter, boolean enabled)"}, "getConfigurationActivity()": {"Returns": [["@B_android#content#ComponentName_E@", "This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#content#ComponentName_E@ of the activity that shows configuration options for this rule.", "history": "Added in API level 29", "FullName": "public ComponentName getConfigurationActivity ()"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if this object is the same as the obj argument; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the reference object with which to compare."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether some other object is \"equal to\" this one. The equals method implements an equivalence relation on non-null object references: It is x, x.equals(x) should return true. It is x and y, x.equals(y) should return true if and only if y.equals(x) returns true. It is x, y, and z, if x.equals(y) returns true and y.equals(z) returns true, then x.equals(z) should return true. It is x and y, multiple invocations of x.equals(y) consistently return true or consistently return false, provided no information used in equals comparisons on the objects is modified. For any non-null reference value x, x.equals(null) should return false. The equals method for class Object implements the most discriminating possible equivalence relation on objects; that is, for any non-null reference values x and y, this method returns true if and only if x and y refer to the same object (x == y has the value true). Note that it is generally necessary to override the hashCode method whenever this method is overridden, so as to maintain the general contract for the hashCode method, which states that equal objects must have equal hash codes.", "history": "Added in API level 24", "FullName": "public boolean equals (Object o)"}, "getConditionId()": {"Returns": [["@B_android#net#Uri_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the representation of the state that causes this rule to become active.", "history": "Added in API level 24", "FullName": "public Uri getConditionId ()"}, "getName()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the name of this rule.", "history": "Added in API level 24", "FullName": "public String getName ()"}, "setConditionId(android.net.Uri)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the representation of the state that causes this rule to become active.", "history": "Added in API level 24", "FullName": "public void setConditionId (Uri conditionId)"}, "setEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enables this rule.", "history": "Added in API level 24", "FullName": "public void setEnabled (boolean enabled)"}, "AutomaticZenRule(android.os.Parcel)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 24", "FullName": "public AutomaticZenRule (Parcel source)"}, "getOwner()": {"Returns": [["@B_android#content#ComponentName_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#content#ComponentName_E@ of the condition provider service that owns this rule.", "history": "Added in API level 24", "FullName": "public ComponentName getOwner ()"}, "setZenPolicy(android.service.notification.ZenPolicy)": {"Returns": [], "Parameters": [["@B_android#service#notification#ZenPolicy_E@", "ZenPolicy no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the zen policy.", "history": "Added in API level 29", "FullName": "public void setZenPolicy (ZenPolicy zenPolicy)"}, "isEnabled()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether this rule is enabled.", "history": "Added in API level 24", "FullName": "public boolean isEnabled ()"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 24", "FullName": "public String toString ()"}, "AutomaticZenRule(java.lang.String,android.content.ComponentName,android.net.Uri,int,boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The name of the rule."], ["@B_android#content#ComponentName_E@", "ComponentName: The Condition Provider service that owns this rule."], ["@B_android#net#Uri_E@", "Uri no parameter comment"], ["int", "int: The interruption filter defines which notifications are allowed to interrupt the user (e.g. via sound & vibration) while this rule is active."], ["boolean", "boolean: Whether the rule is enabled."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "use @B_android#app#AutomaticZenRule#AutomaticZenRule_E@. Creates an automatic zen rule.", "history": "Added in API level 24", "FullName": "public AutomaticZenRule (String name, ComponentName owner, Uri conditionId, int interruptionFilter, boolean enabled)"}, "setConfigurationActivity(android.content.ComponentName)": {"Returns": [], "Parameters": [["@B_android#content#ComponentName_E@", "ComponentName: This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the configuration activity - an activity that handles @B_android#app#NotificationManager#ACTION_AUTOMATIC_ZEN_RULE_E@ that shows the user more information about this rule and/or allows them to configure it. This is required to be non-null for rules that are not backed by @B_android#service#notification#ConditionProviderService_E@.", "history": "Added in API level 29", "FullName": "public void setConfigurationActivity (ComponentName componentName)"}, "setInterruptionFilter(int)": {"Returns": [], "Parameters": [["int", "int: The do not disturb mode to enter when this rule is active. Value is @B_android#app#NotificationManager#INTERRUPTION_FILTER_NONE_E@, @B_android#app#NotificationManager#INTERRUPTION_FILTER_PRIORITY_E@, @B_android#app#NotificationManager#INTERRUPTION_FILTER_ALARMS_E@, @B_android#app#NotificationManager#INTERRUPTION_FILTER_ALL_E@, or @B_android#app#NotificationManager#INTERRUPTION_FILTER_UNKNOWN_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the interruption filter that is applied when this rule is active.", "history": "Added in API level 24", "FullName": "public void setInterruptionFilter (int interruptionFilter)"}, "setName(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the name of this rule.", "history": "Added in API level 24", "FullName": "public void setName (String name)"}, "getCreationTime()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the time this rule was created, represented as milliseconds since the epoch.", "history": "Added in API level 24", "FullName": "public long getCreationTime ()"}, "hashCode()": {"Returns": [["int", "a hash code value for this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code value for the object. This method is supported for the benefit of hash tables such as those provided by @B_java#util#HashMap_E@. The general contract of hashCode is: Whenever it is invoked on the same object more than once during an execution of a Java application, the hashCode method must consistently return the same integer, provided no information used in equals comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application. If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result. It is not required that if two objects are unequal according to the @B_java#lang#Object#equals_E@ method, then calling the hashCode method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables. As much as is reasonably practical, the hashCode method defined by class Object does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the Java\u2122 programming language.)", "history": "Added in API level 24", "FullName": "public int hashCode ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 24", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getZenPolicy()": {"Returns": [["@B_android#service#notification#ZenPolicy_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the zen policy.", "history": "Added in API level 29", "FullName": "public ZenPolicy getZenPolicy ()"}}, "Inheritance": [], "ClassName": "android.app.AutomaticZenRule", "ClassDesc": "Rule instance information for zen mode."}