{"Functions": {"MediaBrowser(android.content.Context,android.content.ComponentName,android.media.browse.MediaBrowser.ConnectionCallback,android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The context."], ["@B_android#content#ComponentName_E@", "ComponentName: The component name of the media browser service."], ["@B_android#media#browse#MediaBrowser#ConnectionCallback_E@", "MediaBrowser.ConnectionCallback: The connection callback."], ["@B_android#os#Bundle_E@", "Bundle: An optional bundle of service-specific arguments to send to the media browser service when connecting and retrieving the root id for browsing, or null if none. The contents of this bundle may affect the information returned when browsing."]], "Throws": [], "SeeAlso": ["@B_android#service#media#MediaBrowserService#BrowserRoot_E@"], "Permissions": [], "Description": "Creates a media browser for the specified media browser service.", "history": "Added in API level 21", "FullName": "public MediaBrowser (Context context, ComponentName serviceComponent, MediaBrowser.ConnectionCallback callback, Bundle rootHints)"}, "subscribe(java.lang.String,android.os.Bundle,android.media.browse.MediaBrowser.SubscriptionCallback)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The id of the parent media item whose list of children will be subscribed. This value must never be null."], ["@B_android#os#Bundle_E@", "Bundle: The bundle of service-specific arguments to send to the media browser service. The contents of this bundle may affect the information returned when browsing. This value must never be null."], ["@B_android#media#browse#MediaBrowser#SubscriptionCallback_E@", "MediaBrowser.SubscriptionCallback: The callback to receive the list of children. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Queries with service-specific arguments for information about the media items that are contained within the specified id and subscribes to receive updates when they change. The list of subscriptions is maintained even when not connected and is restored after the reconnection. It is ok to subscribe while not connected but the results will not be returned until the connection completes. If the id is already subscribed with a different callback then the new callback will replace the previous one and the child data will be reloaded.", "history": "Added in API level 24", "FullName": "public void subscribe (String parentId, Bundle options, MediaBrowser.SubscriptionCallback callback)"}, "getServiceComponent()": {"Returns": [["@B_android#content#ComponentName_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the service component that the media browser is connected to.", "history": "Added in API level 21", "FullName": "public ComponentName getServiceComponent ()"}, "isConnected()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether the browser is connected to the service.", "history": "Added in API level 21", "FullName": "public boolean isConnected ()"}, "connect()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Connects to the media browser service. The connection callback specified in the constructor will be invoked when the connection completes or fails.", "history": "Added in API level 21", "FullName": "public void connect ()"}, "getSessionToken()": {"Returns": [["@B_android#media#session#MediaSession#Token_E@", "The session token for the browser, never null."]], "Parameters": [], "Throws": [["@B_java#lang#IllegalStateException_E@", "if not connected."]], "SeeAlso": [], "Permissions": [], "Description": "Gets the media session token associated with the media browser. Note that the session token may become invalid or change when the browser is disconnected.", "history": "Added in API level 21", "FullName": "public MediaSession.Token getSessionToken ()"}, "unsubscribe(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The id of the parent media item whose list of children will be unsubscribed. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Unsubscribes for changes to the children of the specified media id. The query callback will no longer be invoked for results associated with this id once this method returns.", "history": "Added in API level 21", "FullName": "public void unsubscribe (String parentId)"}, "disconnect()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Disconnects from the media browser service. After this, no more callbacks will be received.", "history": "Added in API level 21", "FullName": "public void disconnect ()"}, "getRoot()": {"Returns": [["@B_java#lang#String_E@", "This value will never be null."]], "Parameters": [], "Throws": [["@B_java#lang#IllegalStateException_E@", "if not connected."]], "SeeAlso": [], "Permissions": [], "Description": "Gets the root id. Note that the root id may become invalid or change when the browser is disconnected.", "history": "Added in API level 21", "FullName": "public String getRoot ()"}, "getExtras()": {"Returns": [["@B_android#os#Bundle_E@", "This value may be null."]], "Parameters": [], "Throws": [["@B_java#lang#IllegalStateException_E@", "if not connected."]], "SeeAlso": [], "Permissions": [], "Description": "Gets any extras for the media service.", "history": "Added in API level 21", "FullName": "public Bundle getExtras ()"}, "unsubscribe(java.lang.String,android.media.browse.MediaBrowser.SubscriptionCallback)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The id of the parent media item whose list of children will be unsubscribed. This value must never be null."], ["@B_android#media#browse#MediaBrowser#SubscriptionCallback_E@", "MediaBrowser.SubscriptionCallback: A callback sent to the media browser service to subscribe. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Unsubscribes for changes to the children of the specified media id through a callback. The query callback will no longer be invoked for results associated with this id once this method returns.", "history": "Added in API level 24", "FullName": "public void unsubscribe (String parentId, MediaBrowser.SubscriptionCallback callback)"}, "subscribe(java.lang.String,android.media.browse.MediaBrowser.SubscriptionCallback)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The id of the parent media item whose list of children will be subscribed. This value must never be null."], ["@B_android#media#browse#MediaBrowser#SubscriptionCallback_E@", "MediaBrowser.SubscriptionCallback: The callback to receive the list of children. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Queries for information about the media items that are contained within the specified id and subscribes to receive updates when they change. The list of subscriptions is maintained even when not connected and is restored after the reconnection. It is ok to subscribe while not connected but the results will not be returned until the connection completes. If the id is already subscribed with a different callback then the new callback will replace the previous one and the child data will be reloaded.", "history": "Added in API level 21", "FullName": "public void subscribe (String parentId, MediaBrowser.SubscriptionCallback callback)"}, "getItem(java.lang.String,android.media.browse.MediaBrowser.ItemCallback)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The id of the item to retrieve. This value must never be null."], ["@B_android#media#browse#MediaBrowser#ItemCallback_E@", "MediaBrowser.ItemCallback: The callback to receive the result on. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves a specific @B_android#media#browse#MediaBrowser#MediaItem_E@ from the connected service. Not all services may support this, so falling back to subscribing to the parent's id should be used when unavailable.", "history": "Added in API level 23", "FullName": "public void getItem (String mediaId, MediaBrowser.ItemCallback cb)"}}, "Inheritance": [], "ClassName": "android.media.browse.MediaBrowser", "ClassDesc": "Browses media content offered by a link MediaBrowserService. This object is not thread-safe. All calls should happen on the thread on which the browser was constructed. These are the current standard fields that can be used as extra data via @B_android#media#browse#MediaBrowser#subscribe_E@, @B_android#media#browse#MediaBrowser#unsubscribe_E@, and @B_android#media#browse#MediaBrowser#SubscriptionCallback#onChildrenLoaded_E@. @B_android#media#browse#MediaBrowser#EXTRA_PAGE_E@ @B_android#media#browse#MediaBrowser#EXTRA_PAGE_SIZE_E@"}