{"Functions": {"addMediaSize(android.print.PrintAttributes.MediaSize,boolean)": {"Returns": [["@B_android#print#PrinterCapabilitiesInfo#Builder_E@", "This builder. This value will never be null."]], "Parameters": [["@B_android#print#PrintAttributes#MediaSize_E@", "PrintAttributes.MediaSize: A media size. This value must never be null."], ["boolean", "boolean: Whether this is the default."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If set as default and there is already a default."]], "SeeAlso": ["@B_android#print#PrintAttributes#MediaSize_E@"], "Permissions": [], "Description": "Adds a supported media size.", "history": "Added in API level 19", "FullName": "public PrinterCapabilitiesInfo.Builder addMediaSize (PrintAttributes.MediaSize mediaSize, boolean isDefault)"}, "setColorModes(int, int)": {"Returns": [["@B_android#print#PrinterCapabilitiesInfo#Builder_E@", "This builder. Note: On platform version 19 (Kitkat) specifying only PrintAttributes#COLOR_MODE_MONOCHROME leads to a print spooler crash. Hence, you should declare either both color modes or PrintAttributes#COLOR_MODE_COLOR. This value will never be null."]], "Parameters": [["int", "int: The color mode bit mask.Value is either 0 or combination of COLOR_MODE_MONOCHROME or COLOR_MODE_COLOR."], ["int", "int: The default color mode.Value is either 0 or combination of COLOR_MODE_MONOCHROME or COLOR_MODE_COLOR."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If color modes contains an invalid mode bit or if the default color mode is invalid."]], "SeeAlso": ["@B_android#print#PrintAttributes_E@"], "Permissions": [], "Description": "Sets the color modes.", "history": "added in API level 19", "FullName": "public PrinterCapabilitiesInfo.Builder setColorModes (int colorModes, int defaultColorMode)"}, "PrinterCapabilitiesInfo.Builder(android.print.PrinterId)": {"Returns": [], "Parameters": [["@B_android#print#PrinterId_E@", "PrinterId: The printer id. Cannot be null. This value must never be null."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the printer id is null."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new instance.", "history": "Added in API level 19", "FullName": "public PrinterCapabilitiesInfo.Builder (PrinterId printerId)"}, "addResolution(android.print.PrintAttributes.Resolution,boolean)": {"Returns": [["@B_android#print#PrinterCapabilitiesInfo#Builder_E@", "This builder. This value will never be null."]], "Parameters": [["@B_android#print#PrintAttributes#Resolution_E@", "PrintAttributes.Resolution: A resolution. This value must never be null."], ["boolean", "boolean: Whether this is the default."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If set as default and there is already a default."]], "SeeAlso": ["@B_android#print#PrintAttributes#Resolution_E@"], "Permissions": [], "Description": "Adds a supported resolution.", "history": "Added in API level 19", "FullName": "public PrinterCapabilitiesInfo.Builder addResolution (PrintAttributes.Resolution resolution, boolean isDefault)"}, "setDuplexModes(int, int)": {"Returns": [["@B_android#print#PrinterCapabilitiesInfo#Builder_E@", "This builder.This value will never be null."]], "Parameters": [["int", "int: The duplex mode bit mask.Value is either 0 or combination of DUPLEX_MODE_NONE, DUPLEX_MODE_LONG_EDGE or DUPLEX_MODE_SHORT_EDGE."], ["int", "int: The default duplex mode.Value is either 0 or combination of DUPLEX_MODE_NONE, DUPLEX_MODE_LONG_EDGE or DUPLEX_MODE_SHORT_EDGE."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If duplex modes contains an invalid mode bit or if the default duplex mode is invalid."]], "SeeAlso": ["@B_android#print#PrintAttributes_E@"], "Permissions": [], "Description": "Sets the duplex modes.", "history": "added in API level 23", "FullName": "public PrinterCapabilitiesInfo.Builder setDuplexModes (int duplexModes, int defaultDuplexMode)"}, "setMinMargins(android.print.PrintAttributes.Margins)": {"Returns": [["@B_android#print#PrinterCapabilitiesInfo#Builder_E@", "This builder."]], "Parameters": [["@B_android#print#PrintAttributes#Margins_E@", "PrintAttributes.Margins: The margins. This value must never be null."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If margins are null."]], "SeeAlso": ["@B_android#print#PrintAttributes#Margins_E@"], "Permissions": [], "Description": "Sets the minimal margins. These are the minimal margins the printer physically supports.", "history": "Added in API level 19", "FullName": "public PrinterCapabilitiesInfo.Builder setMinMargins (PrintAttributes.Margins margins)"}, "build()": {"Returns": [["@B_android#print#PrinterCapabilitiesInfo_E@", "A new @B_android#print#PrinterCapabilitiesInfo_E@. This value will never be null."]], "Parameters": [], "Throws": [["@B_java#lang#IllegalStateException_E@", "If a required attribute was not specified."]], "SeeAlso": [], "Permissions": [], "Description": "Crates a new @B_android#print#PrinterCapabilitiesInfo_E@ enforcing that all required properties have been specified. See individual methods in this class for reference about required attributes. @B_android#print#PrintAttributes#DUPLEX_MODE_NONE_E@ will set as the only supported mode and also as the default duplex mode.", "history": "Added in API level 19", "FullName": "public PrinterCapabilitiesInfo build ()"}, "setDuplexModes(int,int)": {"Returns": [["@B_android#print#PrinterCapabilitiesInfo#Builder_E@", "This builder. This value will never be null."]], "Parameters": [["int", "int: The duplex mode bit mask. Value is either 0 or a combination of @B_android#print#PrintAttributes#DUPLEX_MODE_NONE_E@, @B_android#print#PrintAttributes#DUPLEX_MODE_LONG_EDGE_E@, and @B_android#print#PrintAttributes#DUPLEX_MODE_SHORT_EDGE_E@"], ["int", "int: The default duplex mode. Value is either 0 or a combination of @B_android#print#PrintAttributes#DUPLEX_MODE_NONE_E@, @B_android#print#PrintAttributes#DUPLEX_MODE_LONG_EDGE_E@, and @B_android#print#PrintAttributes#DUPLEX_MODE_SHORT_EDGE_E@"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If duplex modes contains an invalid mode bit or if the default duplex mode is invalid."]], "SeeAlso": ["@B_android#print#PrintAttributes_E@"], "Permissions": [], "Description": "Sets the duplex modes.", "history": "Added in API level 23", "FullName": "public PrinterCapabilitiesInfo.Builder setDuplexModes (int duplexModes, int defaultDuplexMode)"}, "setColorModes(int,int)": {"Returns": [["@B_android#print#PrinterCapabilitiesInfo#Builder_E@", "This builder. Note: On platform version 19 (Kitkat) specifying only PrintAttributes#COLOR_MODE_MONOCHROME leads to a print spooler crash. Hence, you should declare either both color modes or PrintAttributes#COLOR_MODE_COLOR. This value will never be null."]], "Parameters": [["int", "int: The color mode bit mask. Value is either 0 or a combination of @B_android#print#PrintAttributes#COLOR_MODE_MONOCHROME_E@, and @B_android#print#PrintAttributes#COLOR_MODE_COLOR_E@"], ["int", "int: The default color mode. Value is either 0 or a combination of @B_android#print#PrintAttributes#COLOR_MODE_MONOCHROME_E@, and @B_android#print#PrintAttributes#COLOR_MODE_COLOR_E@"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If color modes contains an invalid mode bit or if the default color mode is invalid."]], "SeeAlso": ["@B_android#print#PrintAttributes_E@"], "Permissions": [], "Description": "Sets the color modes.", "history": "Added in API level 19", "FullName": "public PrinterCapabilitiesInfo.Builder setColorModes (int colorModes, int defaultColorMode)"}}, "Inheritance": [], "ClassName": "android.print.PrinterCapabilitiesInfo.Builder", "ClassDesc": "Builder for creating of a @B_android#print#PrinterCapabilitiesInfo_E@. This class is responsible to enforce that all required attributes have at least one default value. In other words, this class creates only well-formed @B_android#print#PrinterCapabilitiesInfo_E@s. Look at the individual methods for a reference whether a property is required or if it is optional."}