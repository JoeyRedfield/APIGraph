{"Functions": {"buildChildDocumentsUri(java.lang.String,java.lang.String)": {"Returns": [["@B_android#net#Uri_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String: the document to return children for, which must be a directory with MIME type of @B_android#provider#DocumentsContract#Document#MIME_TYPE_DIR_E@."]], "Throws": [], "SeeAlso": ["@B_android#provider#DocumentsProvider#queryChildDocuments_E@", "@B_android#provider#DocumentsContract#getDocumentId_E@"], "Permissions": [], "Description": "Build URI representing the children of the target directory in a document provider. When queried, a provider will return zero or more rows with columns defined by @B_android#provider#DocumentsContract#Document_E@.", "history": "Added in API level 19", "FullName": "public static Uri buildChildDocumentsUri (String authority, String parentDocumentId)"}, "buildSearchDocumentsUri(java.lang.String,java.lang.String,java.lang.String)": {"Returns": [["@B_android#net#Uri_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#provider#DocumentsProvider#querySearchDocuments_E@", "@B_android#provider#DocumentsContract#getRootId_E@", "@B_android#provider#DocumentsContract#getSearchDocumentsQuery_E@"], "Permissions": [], "Description": "Build URI representing a search for matching documents under a specific root in a document provider. When queried, a provider will return zero or more rows with columns defined by @B_android#provider#DocumentsContract#Document_E@.", "history": "Added in API level 19", "FullName": "public static Uri buildSearchDocumentsUri (String authority, String rootId, String query)"}, "getDocumentMetadata(android.content.ContentResolver,android.net.Uri)": {"Returns": [["@B_android#os#Bundle_E@", "a Bundle of Bundles. This value may be null."]], "Parameters": [["@B_android#content#ContentResolver_E@", "ContentResolver: This value must never be null."], ["@B_android#net#Uri_E@", "Uri: a Document URI This value must never be null."]], "Throws": [["@B_java#io#FileNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Returns metadata associated with the document. The type of metadata returned is specific to the document type. For example the data returned for an image file will likely consist primarily or solely of EXIF metadata. The returned @B_android#os#Bundle_E@ will contain zero or more entries depending on the type of data supported by the document provider. Example:", "history": "Added in API level 29", "FullName": "public static Bundle getDocumentMetadata (ContentResolver content, Uri documentUri)"}, "buildRootsUri(java.lang.String)": {"Returns": [["@B_android#net#Uri_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#provider#DocumentsProvider#queryRoots_E@"], "Permissions": [], "Description": "Build URI representing the roots of a document provider. When queried, a provider will return one or more rows with columns defined by @B_android#provider#DocumentsContract#Root_E@.", "history": "Added in API level 19", "FullName": "public static Uri buildRootsUri (String authority)"}, "copyDocument(android.content.ContentResolver,android.net.Uri,android.net.Uri)": {"Returns": [["@B_android#net#Uri_E@", "the copied document, or null if failed."]], "Parameters": [["@B_android#content#ContentResolver_E@", "ContentResolver: This value must never be null."], ["@B_android#net#Uri_E@", "Uri: document with @B_android#provider#DocumentsContract#Document#FLAG_SUPPORTS_COPY_E@ This value must never be null."], ["@B_android#net#Uri_E@", "Uri: document which will become a parent of the source document's copy. This value must never be null."]], "Throws": [["@B_java#io#FileNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Copies the given document.", "history": "Added in API level 24", "FullName": "public static Uri copyDocument (ContentResolver content, Uri sourceDocumentUri, Uri targetParentDocumentUri)"}, "removeDocument(android.content.ContentResolver,android.net.Uri,android.net.Uri)": {"Returns": [["boolean", "true if the document was removed successfully."]], "Parameters": [["@B_android#content#ContentResolver_E@", "ContentResolver: This value must never be null."], ["@B_android#net#Uri_E@", "Uri: document with @B_android#provider#DocumentsContract#Document#FLAG_SUPPORTS_REMOVE_E@ This value must never be null."], ["@B_android#net#Uri_E@", "Uri: parent document of the document to remove. This value must never be null."]], "Throws": [["@B_java#io#FileNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Removes the given document from a parent directory. In contrast to @B_android#provider#DocumentsContract#deleteDocument_E@ it requires specifying the parent. This method is especially useful if the document can be in multiple parents.", "history": "Added in API level 24", "FullName": "public static boolean removeDocument (ContentResolver content, Uri documentUri, Uri parentDocumentUri)"}, "createDocument(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String)": {"Returns": [["@B_android#net#Uri_E@", "newly created document, or null if failed"]], "Parameters": [["@B_android#content#ContentResolver_E@", "ContentResolver: This value must never be null."], ["@B_android#net#Uri_E@", "Uri: directory with @B_android#provider#DocumentsContract#Document#FLAG_DIR_SUPPORTS_CREATE_E@ This value must never be null."], ["@B_java#lang#String_E@", "String: MIME type of new document This value must never be null."], ["@B_java#lang#String_E@", "String: name of new document This value must never be null."]], "Throws": [["@B_java#io#FileNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Create a new document with given MIME type and display name.", "history": "Added in API level 21", "FullName": "public static Uri createDocument (ContentResolver content, Uri parentDocumentUri, String mimeType, String displayName)"}, "moveDocument(android.content.ContentResolver,android.net.Uri,android.net.Uri,android.net.Uri)": {"Returns": [["@B_android#net#Uri_E@", "the moved document, or null if failed."]], "Parameters": [["@B_android#content#ContentResolver_E@", "ContentResolver: This value must never be null."], ["@B_android#net#Uri_E@", "Uri: document with @B_android#provider#DocumentsContract#Document#FLAG_SUPPORTS_MOVE_E@ This value must never be null."], ["@B_android#net#Uri_E@", "Uri: parent document of the document to move. This value must never be null."], ["@B_android#net#Uri_E@", "Uri: document which will become a new parent of the source document. This value must never be null."]], "Throws": [["@B_java#io#FileNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Moves the given document under a new parent.", "history": "Added in API level 24", "FullName": "public static Uri moveDocument (ContentResolver content, Uri sourceDocumentUri, Uri sourceParentDocumentUri, Uri targetParentDocumentUri)"}, "isRootsUri(android.content.Context,android.net.Uri)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#content#Context_E@", "Context: This value must never be null."], ["@B_android#net#Uri_E@", "Uri: This value may be null."]], "Throws": [], "SeeAlso": ["@B_android#provider#DocumentsContract#buildRootsUri_E@"], "Permissions": [], "Description": "Test if the given URI represents all roots of the authority backed by @B_android#provider#DocumentsProvider_E@.", "history": "Added in API level 29", "FullName": "public static boolean isRootsUri (Context context, Uri uri)"}, "buildRootUri(java.lang.String, java.lang.String)": {"Returns": [["@B_android#net#Uri_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#provider#DocumentsContract#getRootId_E@"], "Permissions": [], "Description": "Build URI representing the given @B_android#provider#DocumentsContract#Root#COLUMN_ROOT_ID_E@ in a document provider.", "history": "added in API level 19", "FullName": "public static Uri buildRootUri (String authority, String rootId)"}, "isChildDocument(android.content.ContentResolver,android.net.Uri,android.net.Uri)": {"Returns": [["boolean", "if given document is a descendant of the given parent."]], "Parameters": [["@B_android#content#ContentResolver_E@", "ContentResolver: This value must never be null."], ["@B_android#net#Uri_E@", "Uri: parent to verify against. This value must never be null."], ["@B_android#net#Uri_E@", "Uri: child to verify. This value must never be null."]], "Throws": [["@B_java#io#FileNotFoundException_E@", ""]], "SeeAlso": ["@B_android#provider#DocumentsContract#Root_E@"], "Permissions": [], "Description": "Test if a document is descendant (child, grandchild, etc) from the given parent.", "history": "Added in API level 29", "FullName": "public static boolean isChildDocument (ContentResolver content, Uri parentDocumentUri, Uri childDocumentUri)"}, "deleteDocument(android.content.ContentResolver,android.net.Uri)": {"Returns": [["boolean", "if the document was deleted successfully."]], "Parameters": [["@B_android#content#ContentResolver_E@", "ContentResolver: This value must never be null."], ["@B_android#net#Uri_E@", "Uri: document with @B_android#provider#DocumentsContract#Document#FLAG_SUPPORTS_DELETE_E@ This value must never be null."]], "Throws": [["@B_java#io#FileNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Delete the given document.", "history": "Added in API level 19", "FullName": "public static boolean deleteDocument (ContentResolver content, Uri documentUri)"}, "buildDocumentUri(java.lang.String,java.lang.String)": {"Returns": [["@B_android#net#Uri_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#provider#DocumentsProvider#queryDocument_E@", "@B_android#provider#DocumentsContract#getDocumentId_E@"], "Permissions": [], "Description": "Build URI representing the target @B_android#provider#DocumentsContract#Document#COLUMN_DOCUMENT_ID_E@ in a document provider. When queried, a provider will return a single row with columns defined by @B_android#provider#DocumentsContract#Document_E@.", "history": "Added in API level 19", "FullName": "public static Uri buildDocumentUri (String authority, String documentId)"}, "createWebLinkIntent(android.content.ContentResolver,android.net.Uri,android.os.Bundle)": {"Returns": [["@B_android#content#IntentSender_E@", "an intent sender to obtain the web link, or null if the document is not linkable, or creating the intent sender failed."]], "Parameters": [["@B_android#content#ContentResolver_E@", "ContentResolver: This value must never be null."], ["@B_android#net#Uri_E@", "Uri: uri for the document to create a link to. This value must never be null."], ["@B_android#os#Bundle_E@", "Bundle: Extra information for generating the link. This value may be null."]], "Throws": [["@B_java#io#FileNotFoundException_E@", ""]], "SeeAlso": ["@B_android#provider#DocumentsProvider#createWebLinkIntent_E@", "@B_android#content#Intent_E@"], "Permissions": [], "Description": "Creates an intent for obtaining a web link for the specified document. Note, that due to internal limitations, if there is already a web link intent created for the specified document but with different options, then it may be overridden. Providers are required to show confirmation UI for all new permissions granted for the linked document. If list of recipients is known, then it should be passed in options as @B_android#content#Intent#EXTRA_EMAIL_E@ as a list of email addresses. Note, that this is just a hint for the provider, which can ignore the list. In either case the provider is required to show a UI for letting the user confirm any new permission grants. Note, that the entire options bundle will be sent to the provider backing the passed uri. Make sure that you trust the provider before passing any sensitive information. Since this API may show a UI, it cannot be called from background. In order to obtain the Web Link use code like this:", "history": "Added in API level 26", "FullName": "public static IntentSender createWebLinkIntent (ContentResolver content, Uri uri, Bundle options)"}, "getTreeDocumentId(android.net.Uri)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["@B_android#net#Uri_E@", "Uri no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Extract the via @B_android#provider#DocumentsContract#Document#COLUMN_DOCUMENT_ID_E@ from the given URI.", "history": "Added in API level 21", "FullName": "public static String getTreeDocumentId (Uri documentUri)"}, "isTreeUri(android.net.Uri)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#net#Uri_E@", "Uri no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#provider#DocumentsContract#buildTreeDocumentUri_E@", "@B_android#provider#DocumentsContract#getTreeDocumentId_E@"], "Permissions": [], "Description": "Test if the given URI represents a @B_android#provider#DocumentsContract#Document_E@ tree.", "history": "Added in API level 24", "FullName": "public static boolean isTreeUri (Uri uri)"}, "buildChildDocumentsUriUsingTree(android.net.Uri,java.lang.String)": {"Returns": [["@B_android#net#Uri_E@", "no returns description in source"]], "Parameters": [["@B_android#net#Uri_E@", "Uri: the subtree to leverage to gain access to the target document. The target directory must be a descendant of this subtree."], ["@B_java#lang#String_E@", "String: the document to return children for, which the caller may not have direct access to, and which must be a directory with MIME type of @B_android#provider#DocumentsContract#Document#MIME_TYPE_DIR_E@."]], "Throws": [], "SeeAlso": ["@B_android#content#Intent_E@", "@B_android#provider#DocumentsProvider#isChildDocument_E@", "@B_android#provider#DocumentsContract#buildChildDocumentsUri_E@"], "Permissions": [], "Description": "Build URI representing the children of the target directory in a document provider. When queried, a provider will return zero or more rows with columns defined by @B_android#provider#DocumentsContract#Document_E@. However, instead of directly accessing the target directory, the returned URI will leverage access granted through a subtree URI, typically returned by @B_android#content#Intent#ACTION_OPEN_DOCUMENT_TREE_E@. The target directory must be a descendant (child, grandchild, etc) of the subtree. This is typically used to access documents under a user-selected directory tree, since it doesn't require the user to separately confirm each new document access.", "history": "Added in API level 21", "FullName": "public static Uri buildChildDocumentsUriUsingTree (Uri treeUri, String parentDocumentId)"}, "renameDocument(android.content.ContentResolver,android.net.Uri,java.lang.String)": {"Returns": [["@B_android#net#Uri_E@", "the existing or new document after the rename, or null if failed."]], "Parameters": [["@B_android#content#ContentResolver_E@", "ContentResolver: This value must never be null."], ["@B_android#net#Uri_E@", "Uri: document with @B_android#provider#DocumentsContract#Document#FLAG_SUPPORTS_RENAME_E@ This value must never be null."], ["@B_java#lang#String_E@", "String: updated name for document This value must never be null."]], "Throws": [["@B_java#io#FileNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Change the display name of an existing document. If the underlying provider needs to create a new @B_android#provider#DocumentsContract#Document#COLUMN_DOCUMENT_ID_E@ to represent the updated display name, that new document is returned and the original document is no longer valid. Otherwise, the original document is returned.", "history": "Added in API level 21", "FullName": "public static Uri renameDocument (ContentResolver content, Uri documentUri, String displayName)"}, "isRootUri(android.content.Context,android.net.Uri)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#content#Context_E@", "Context: This value must never be null."], ["@B_android#net#Uri_E@", "Uri: This value may be null."]], "Throws": [], "SeeAlso": ["@B_android#provider#DocumentsContract#buildRootUri_E@"], "Permissions": [], "Description": "Test if the given URI represents specific root backed by @B_android#provider#DocumentsProvider_E@.", "history": "Added in API level 29", "FullName": "public static boolean isRootUri (Context context, Uri uri)"}, "buildTreeDocumentUri(java.lang.String,java.lang.String)": {"Returns": [["@B_android#net#Uri_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#provider#DocumentsContract#getTreeDocumentId_E@"], "Permissions": [], "Description": "Build URI representing access to descendant documents of the given @B_android#provider#DocumentsContract#Document#COLUMN_DOCUMENT_ID_E@.", "history": "Added in API level 21", "FullName": "public static Uri buildTreeDocumentUri (String authority, String documentId)"}, "ejectRoot(android.content.ContentResolver,android.net.Uri)": {"Returns": [], "Parameters": [["@B_android#content#ContentResolver_E@", "ContentResolver: This value must never be null."], ["@B_android#net#Uri_E@", "Uri: root with @B_android#provider#DocumentsContract#Root#FLAG_SUPPORTS_EJECT_E@ to be ejected This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Ejects the given root. It throws @B_java#lang#IllegalStateException_E@ when ejection failed.", "history": "Added in API level 26", "FullName": "public static void ejectRoot (ContentResolver content, Uri rootUri)"}, "buildRootUri(java.lang.String,java.lang.String)": {"Returns": [["@B_android#net#Uri_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#provider#DocumentsContract#getRootId_E@"], "Permissions": [], "Description": "Build URI representing the given @B_android#provider#DocumentsContract#Root#COLUMN_ROOT_ID_E@ in a document provider.", "history": "Added in API level 19", "FullName": "public static Uri buildRootUri (String authority, String rootId)"}, "getRootId(android.net.Uri)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["@B_android#net#Uri_E@", "Uri no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Extract the @B_android#provider#DocumentsContract#Root#COLUMN_ROOT_ID_E@ from the given URI.", "history": "Added in API level 19", "FullName": "public static String getRootId (Uri rootUri)"}, "buildDocumentUriUsingTree(android.net.Uri,java.lang.String)": {"Returns": [["@B_android#net#Uri_E@", "no returns description in source"]], "Parameters": [["@B_android#net#Uri_E@", "Uri: the subtree to leverage to gain access to the target document. The target directory must be a descendant of this subtree."], ["@B_java#lang#String_E@", "String: the target document, which the caller may not have direct access to."]], "Throws": [], "SeeAlso": ["@B_android#content#Intent_E@", "@B_android#provider#DocumentsProvider#isChildDocument_E@", "@B_android#provider#DocumentsContract#buildDocumentUri_E@"], "Permissions": [], "Description": "Build URI representing the target @B_android#provider#DocumentsContract#Document#COLUMN_DOCUMENT_ID_E@ in a document provider. When queried, a provider will return a single row with columns defined by @B_android#provider#DocumentsContract#Document_E@. However, instead of directly accessing the target document, the returned URI will leverage access granted through a subtree URI, typically returned by @B_android#content#Intent#ACTION_OPEN_DOCUMENT_TREE_E@. The target document must be a descendant (child, grandchild, etc) of the subtree. This is typically used to access documents under a user-selected directory tree, since it doesn't require the user to separately confirm each new document access.", "history": "Added in API level 21", "FullName": "public static Uri buildDocumentUriUsingTree (Uri treeUri, String documentId)"}, "isDocumentUri(android.content.Context,android.net.Uri)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"], ["@B_android#net#Uri_E@", "Uri: This value may be null."]], "Throws": [], "SeeAlso": ["@B_android#provider#DocumentsContract#buildDocumentUri_E@", "@B_android#provider#DocumentsContract#buildDocumentUriUsingTree_E@"], "Permissions": [], "Description": "Test if the given URI represents a @B_android#provider#DocumentsContract#Document_E@ backed by a @B_android#provider#DocumentsProvider_E@.", "history": "Added in API level 19", "FullName": "public static boolean isDocumentUri (Context context, Uri uri)"}, "getSearchDocumentsQuery(android.net.Uri)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["@B_android#net#Uri_E@", "Uri no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Extract the search query from a URI built by @B_android#provider#DocumentsContract#buildSearchDocumentsUri_E@.", "history": "Added in API level 19", "FullName": "public static String getSearchDocumentsQuery (Uri searchDocumentsUri)"}, "getDocumentThumbnail(android.content.ContentResolver,android.net.Uri,android.graphics.Point,android.os.CancellationSignal)": {"Returns": [["@B_android#graphics#Bitmap_E@", "decoded thumbnail, or null if problem was encountered."]], "Parameters": [["@B_android#content#ContentResolver_E@", "ContentResolver: This value must never be null."], ["@B_android#net#Uri_E@", "Uri: document to return thumbnail for, which must have @B_android#provider#DocumentsContract#Document#FLAG_SUPPORTS_THUMBNAIL_E@ set. This value must never be null."], ["@B_android#graphics#Point_E@", "Point: optimal thumbnail size desired. A provider may return a thumbnail of a different size, but never more than double the requested size. This value must never be null."], ["@B_android#os#CancellationSignal_E@", "CancellationSignal: signal used to indicate if caller is no longer interested in the thumbnail. This value may be null."]], "Throws": [["@B_java#io#FileNotFoundException_E@", ""]], "SeeAlso": ["@B_android#provider#DocumentsProvider#openDocumentThumbnail_E@"], "Permissions": [], "Description": "Return thumbnail representing the document at the given URI. Callers are responsible for their own in-memory caching.", "history": "Added in API level 19", "FullName": "public static Bitmap getDocumentThumbnail (ContentResolver content, Uri documentUri, Point size, CancellationSignal signal)"}, "buildRecentDocumentsUri(java.lang.String,java.lang.String)": {"Returns": [["@B_android#net#Uri_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#provider#DocumentsProvider#queryRecentDocuments_E@", "@B_android#provider#DocumentsContract#getRootId_E@"], "Permissions": [], "Description": "Build URI representing the recently modified documents of a specific root in a document provider. When queried, a provider will return zero or more rows with columns defined by @B_android#provider#DocumentsContract#Document_E@.", "history": "Added in API level 19", "FullName": "public static Uri buildRecentDocumentsUri (String authority, String rootId)"}, "findDocumentPath(android.content.ContentResolver,android.net.Uri)": {"Returns": [["@B_android#provider#DocumentsContract#Path_E@", "the path of the document, or null if failed."]], "Parameters": [["@B_android#content#ContentResolver_E@", "ContentResolver: This value must never be null."], ["@B_android#net#Uri_E@", "Uri: treeUri of the document which path is requested. This value must never be null."]], "Throws": [["@B_java#io#FileNotFoundException_E@", ""]], "SeeAlso": ["@B_android#provider#DocumentsProvider#findDocumentPath_E@"], "Permissions": [], "Description": "Finds the canonical path from the top of the document tree. The @B_android#provider#DocumentsContract#Path#getPath_E@ of the return value contains the document ID of all documents along the path from the top the document tree to the requested document, both inclusive. The @B_android#provider#DocumentsContract#Path#getRootId_E@ of the return value returns null.", "history": "Added in API level 26", "FullName": "public static DocumentsContract.Path findDocumentPath (ContentResolver content, Uri treeUri)"}, "getDocumentId(android.net.Uri)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["@B_android#net#Uri_E@", "Uri no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#provider#DocumentsContract#isDocumentUri_E@"], "Permissions": [], "Description": "Extract the @B_android#provider#DocumentsContract#Document#COLUMN_DOCUMENT_ID_E@ from the given URI.", "history": "Added in API level 19", "FullName": "public static String getDocumentId (Uri documentUri)"}}, "Inheritance": [], "ClassName": "android.provider.DocumentsContract", "ClassDesc": "Defines the contract between a documents provider and the platform. To create a document provider, extend @B_android#provider#DocumentsProvider_E@, which provides a foundational implementation of this contract. All client apps must hold a valid URI permission grant to access documents, typically issued when a user makes a selection through @B_android#content#Intent#ACTION_OPEN_DOCUMENT_E@, @B_android#content#Intent#ACTION_CREATE_DOCUMENT_E@, or @B_android#content#Intent#ACTION_OPEN_DOCUMENT_TREE_E@."}