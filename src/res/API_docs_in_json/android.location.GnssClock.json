{"Functions": {"getFullBiasNanos()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the difference between hardware clock (@B_android#location#GnssClock#getTimeNanos_E@) inside GPS receiver and the true GPS time since 0000Z, January 6, 1980, in nanoseconds. This value is available if the receiver has estimated GPS time. If the computed time is for a non-GPS constellation, the time offset of that constellation to GPS has to be applied to fill this value. The value is only available if @B_android#location#GnssClock#hasFullBiasNanos_E@ is true. The error estimate for the sum of this field and @B_android#location#GnssClock#getBiasNanos_E@ is @B_android#location#GnssClock#getBiasUncertaintyNanos_E@. The sign of the value is defined by the following equation:", "history": "Added in API level 24", "FullName": "public long getFullBiasNanos ()"}, "getElapsedRealtimeNanos()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the elapsed real-time of this clock since system boot, in nanoseconds. The value is only available if @B_android#location#GnssClock#hasElapsedRealtimeNanos_E@ is true.", "history": "Added in API level 29", "FullName": "public long getElapsedRealtimeNanos ()"}, "hasElapsedRealtimeNanos()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if @B_android#location#GnssClock#getElapsedRealtimeNanos_E@ is available, false otherwise.", "history": "Added in API level 29", "FullName": "public boolean hasElapsedRealtimeNanos ()"}, "getTimeUncertaintyNanos()": {"Returns": [["double", "Value is 0.0f or greater"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the clock's time Uncertainty (1-Sigma) in nanoseconds. The uncertainty is represented as an absolute (single sided) value. The value is only available if @B_android#location#GnssClock#hasTimeUncertaintyNanos_E@ is true. This value is often effectively zero (it is the reference clock by which all other times and time uncertainties are measured), and thus this field may often be 0, or not provided.", "history": "Added in API level 24", "FullName": "public double getTimeUncertaintyNanos ()"}, "getDriftNanosPerSecond()": {"Returns": [["double", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the clock's Drift in nanoseconds per second. This value is the instantaneous time-derivative of the value provided by @B_android#location#GnssClock#getBiasNanos_E@. A positive value indicates that the frequency is higher than the nominal (e.g. GPS master clock) frequency. The error estimate for this reported drift is @B_android#location#GnssClock#getDriftUncertaintyNanosPerSecond_E@. The value is only available if @B_android#location#GnssClock#hasDriftNanosPerSecond_E@ is true.", "history": "Added in API level 24", "FullName": "public double getDriftNanosPerSecond ()"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 24", "FullName": "public int describeContents ()"}, "getBiasNanos()": {"Returns": [["double", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the clock's sub-nanosecond bias. See the description of how this field is part of converting from hardware clock time, to GPS time, in @B_android#location#GnssClock#getFullBiasNanos_E@. The error estimate for the sum of this field and @B_android#location#GnssClock#getFullBiasNanos_E@ is @B_android#location#GnssClock#getBiasUncertaintyNanos_E@. The value is only available if @B_android#location#GnssClock#hasBiasNanos_E@ is true.", "history": "Added in API level 24", "FullName": "public double getBiasNanos ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 24", "FullName": "public void writeToParcel (Parcel parcel, int flags)"}, "getLeapSecond()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the leap second associated with the clock's time. The sign of the value is defined by the following equation: The value is only available if @B_android#location#GnssClock#hasLeapSecond_E@ is true.", "history": "Added in API level 24", "FullName": "public int getLeapSecond ()"}, "hasBiasNanos()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if @B_android#location#GnssClock#getBiasNanos_E@ is available, false otherwise.", "history": "Added in API level 24", "FullName": "public boolean hasBiasNanos ()"}, "hasLeapSecond()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if @B_android#location#GnssClock#getLeapSecond_E@ is available, false otherwise.", "history": "Added in API level 24", "FullName": "public boolean hasLeapSecond ()"}, "getElapsedRealtimeUncertaintyNanos()": {"Returns": [["double", "Value is 0.0f or greater"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the estimate of the relative precision of the alignment of the @B_android#location#GnssClock#getElapsedRealtimeNanos_E@ timestamp, with the reported measurements in nanoseconds (68% confidence). The value is only available if @B_android#location#GnssClock#hasElapsedRealtimeUncertaintyNanos_E@ is true.", "history": "Added in API level 29", "FullName": "public double getElapsedRealtimeUncertaintyNanos ()"}, "hasDriftNanosPerSecond()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if @B_android#location#GnssClock#getDriftNanosPerSecond_E@ is available, false otherwise.", "history": "Added in API level 24", "FullName": "public boolean hasDriftNanosPerSecond ()"}, "hasTimeUncertaintyNanos()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if @B_android#location#GnssClock#getTimeUncertaintyNanos_E@ is available, false otherwise.", "history": "Added in API level 24", "FullName": "public boolean hasTimeUncertaintyNanos ()"}, "getTimeNanos()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the GNSS receiver internal hardware clock value in nanoseconds. This value is expected to be monotonically increasing while the hardware clock remains powered on. For the case of a hardware clock that is not continuously on, see the @B_android#location#GnssClock#getHardwareClockDiscontinuityCount_E@ field. The GPS time can be derived by subtracting the sum of @B_android#location#GnssClock#getFullBiasNanos_E@ and @B_android#location#GnssClock#getBiasNanos_E@ (when they are available) from this value. Sub-nanosecond accuracy can be provided by means of @B_android#location#GnssClock#getBiasNanos_E@. The error estimate for this value (if applicable) is @B_android#location#GnssClock#getTimeUncertaintyNanos_E@.", "history": "Added in API level 24", "FullName": "public long getTimeNanos ()"}, "hasBiasUncertaintyNanos()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if @B_android#location#GnssClock#getBiasUncertaintyNanos_E@ is available, false otherwise.", "history": "Added in API level 24", "FullName": "public boolean hasBiasUncertaintyNanos ()"}, "getHardwareClockDiscontinuityCount()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets count of hardware clock discontinuities. When this value stays the same, vs. a value in a previously reported @B_android#location#GnssClock_E@, it can be safely assumed that the TimeNanos value has been derived from a clock that has been running continuously - e.g. a single continuously powered crystal oscillator, and thus the (FullBiasNanos + BiasNanos) offset can be modelled with traditional clock bias & drift models. Each time this value changes, vs. the value in a previously reported @B_android#location#GnssClock_E@, that suggests the hardware clock may have experienced a discontinuity (e.g. a power cycle or other anomaly), so that any assumptions about modelling a smoothly changing (FullBiasNanos + BiasNanos) offset, and a smoothly growing (TimeNanos) between this and the previously reported GnssClock, should be reset.", "history": "Added in API level 24", "FullName": "public int getHardwareClockDiscontinuityCount ()"}, "hasFullBiasNanos()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if @B_android#location#GnssClock#getFullBiasNanos_E@ is available, false otherwise.", "history": "Added in API level 24", "FullName": "public boolean hasFullBiasNanos ()"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 24", "FullName": "public String toString ()"}, "getBiasUncertaintyNanos()": {"Returns": [["double", "Value is 0.0f or greater"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the clock's Bias Uncertainty (1-Sigma) in nanoseconds. See the description of how this field provides the error estimate in the conversion from hardware clock time, to GPS time, in @B_android#location#GnssClock#getFullBiasNanos_E@. The value is only available if @B_android#location#GnssClock#hasBiasUncertaintyNanos_E@ is true.", "history": "Added in API level 24", "FullName": "public double getBiasUncertaintyNanos ()"}, "hasDriftUncertaintyNanosPerSecond()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if @B_android#location#GnssClock#getDriftUncertaintyNanosPerSecond_E@ is available, false otherwise.", "history": "Added in API level 24", "FullName": "public boolean hasDriftUncertaintyNanosPerSecond ()"}, "hasElapsedRealtimeUncertaintyNanos()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if @B_android#location#GnssClock#getElapsedRealtimeUncertaintyNanos_E@ is available, false otherwise.", "history": "Added in API level 29", "FullName": "public boolean hasElapsedRealtimeUncertaintyNanos ()"}, "getDriftUncertaintyNanosPerSecond()": {"Returns": [["double", "Value is 0.0f or greater"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the clock's Drift Uncertainty (1-Sigma) in nanoseconds per second. The value is only available if @B_android#location#GnssClock#hasDriftUncertaintyNanosPerSecond_E@ is true.", "history": "Added in API level 24", "FullName": "public double getDriftUncertaintyNanosPerSecond ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 24", "FullName": "public void writeToParcel (Parcel parcel, int flags)"}}, "Inheritance": [], "ClassName": "android.location.GnssClock", "ClassDesc": "A class containing a GPS clock timestamp. It represents a measurement of the GPS receiver's clock."}