{"Functions": {"process(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)": {"Returns": [], "Parameters": [["@B_org#apache#http#HttpResponse_E@", "the response to postprocess"], ["@B_org#apache#http#protocol#HttpContext_E@", "the context for the request"]], "Throws": [["@B_java#io#IOException_E@", "in case of an IO problem"], ["@B_org#apache#http#HttpException_E@", "in case of a protocol or other problem"]], "SeeAlso": [], "Permissions": [], "Description": "Processes a response. On the server side, this step is performed before the response is sent to the client. On the client side, this step is performed on incoming messages before the message body is evaluated.", "history": "Added in API level 1", "FullName": "public abstract void process (HttpResponse response, HttpContext context)"}}, "Inheritance": [], "ClassName": "org.apache.http.HttpResponseInterceptor", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Processes a response. Provides the ability to process a response before it is sent to the client or after it has been received on the client side."}