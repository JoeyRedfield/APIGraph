{"Functions": {"getColor()": {"Returns": [["", "the color in ARGB format."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the color of this polyline.", "history": "", "FullName": "public int getColor ()"}, "setColor(int)": {"Returns": [], "Parameters": [["int", "the color in ARGB format"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the color of this polyline.", "history": "", "FullName": "public void setColor (int color)"}, "Polyline(com.google.android.gms.maps.model.internal.IPolylineDelegate)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public Polyline (IPolylineDelegate delegate)"}, "remove()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes this polyline from the map. After a polyline has been removed, the behavior of all its methods is undefined.", "history": "", "FullName": "public void remove ()"}, "setWidth(float)": {"Returns": [], "Parameters": [["float", "the width in screen pixels"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the width of this polyline.", "history": "", "FullName": "public void setWidth (float width)"}, "getPoints()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a snapshot of the vertices of this polyline at this time . The list returned is a copy of the list of vertices and so changes to the polyline's vertices will not be reflected by this list, nor will changes to this list be reflected by the polyline. To change the vertices of the polyline, call @B_com#google#android#gms#maps#model#Polyline#setPoints_E@.", "history": "", "FullName": "public List<LatLng> getPoints ()"}, "setZIndex(float)": {"Returns": [], "Parameters": [["float", "the zIndex of this polyline."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the zIndex of this polyline. Polylines with higher zIndices are drawn above those with lower indices.", "history": "", "FullName": "public void setZIndex (float zIndex)"}, "isVisible()": {"Returns": [["", "this polyline's visibility."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the visibility of this polyline.", "history": "", "FullName": "public boolean isVisible ()"}, "setPoints(java.util.List<com.google.android.gms.maps.model.LatLng>)": {"Returns": [], "Parameters": [["List", "an list of @B_com#google#android#gms#maps#model#LatLng_E@s that are the vertices of the polyline."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the points of this polyline. This method will take a copy of the points, so further mutations to points will have no effect on this polyline.", "history": "", "FullName": "public void setPoints (List<LatLng> points)"}, "setGeodesic(boolean)": {"Returns": [], "Parameters": [["boolean", "if true, then each segment is drawn as a geodesic; if false, each segment is drawn as a straight line on the Mercator projection."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether to draw each segment of the line as a geodesic or not.", "history": "", "FullName": "public void setGeodesic (boolean geodesic)"}, "isGeodesic()": {"Returns": [["", "true if each segment is drawn as a geodesic; false if each segment is drawn as a straight line on the Mercator projection."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets whether each segment of the line is drawn as a geodesic or not.", "history": "", "FullName": "public boolean isGeodesic ()"}, "getZIndex()": {"Returns": [["", "the zIndex of the polyline."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the zIndex of this polyline.", "history": "", "FullName": "public float getZIndex ()"}, "getId()": {"Returns": [["", "this polyline's id."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets this polyline's id. The id will be unique amongst all Polylines on a map.", "history": "", "FullName": "public String getId ()"}, "getWidth()": {"Returns": [["", "the width in screen pixels."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the width of this polyline.", "history": "", "FullName": "public float getWidth ()"}, "setVisible(boolean)": {"Returns": [], "Parameters": [["boolean", "if true, then the polyline is visible; if false, it is not."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the visibility of this polyline. When not visible, a polyline is not drawn, but it keeps all its other properties.", "history": "", "FullName": "public void setVisible (boolean visible)"}, "equals(java.lang.Object)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public boolean equals (Object other)"}, "hashCode()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int hashCode ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.maps.model.Polyline", "ClassDesc": "A polyline is a list of points, where line segments are drawn between consecutive points. A polyline has the following properties: Methods that modify a Polyline must be called on the main thread. If not, an @B_java#lang#IllegalStateException_E@ will be thrown at runtime. For more information, read the"}