{"Functions": {"process(org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)": {"Returns": [], "Parameters": [["@B_org#apache#http#HttpRequest_E@", "the request to preprocess"], ["@B_org#apache#http#protocol#HttpContext_E@", "the context for the request"]], "Throws": [["@B_java#io#IOException_E@", "in case of an IO problem"], ["@B_org#apache#http#HttpException_E@", "in case of a protocol or other problem"]], "SeeAlso": [], "Permissions": [], "Description": "Processes a request. On the client side, this step is performed before the request is sent to the server. On the server side, this step is performed on incoming messages before the message body is evaluated.", "history": "Added in API level 1", "FullName": "public abstract void process (HttpRequest request, HttpContext context)"}}, "Inheritance": [], "ClassName": "org.apache.http.HttpRequestInterceptor", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Processes a request. Provides the ability to process a request before it is sent to the server or after it has received on the server side."}