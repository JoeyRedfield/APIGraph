{"Functions": {"onStop()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void onStop ()"}, "onUpdateAmbient()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the system is updating the display for ambient mode. Activities may use this opportunity to update or invalidate views.", "history": "", "FullName": "void onUpdateAmbient ()"}, "onEnterAmbient(android.os.Bundle)": {"Returns": [], "Parameters": [["Bundle", "Bundle: bundle containing information about the display being used. It includes information about low-bit color and burn-in protection."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when an activity is entering ambient mode. This event is sent while an activity is running (after onResume, before onPause). All drawing should complete by the conclusion of this method. Note that invalidate() calls will be executed before resuming lower-power mode. Derived classes must call through to the super class's implementation of this method. If they do not, an exception will be thrown.", "history": "", "FullName": "void onEnterAmbient (Bundle ambientDetails)"}, "onResume()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void onResume ()"}, "WearableActivity()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "WearableActivity ()"}, "isAmbient()": {"Returns": [["boolean", "true if the activity is currently in ambient."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "boolean isAmbient ()"}, "setAmbientEnabled()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets that this activity should remain displayed when the system enters ambient mode. The default is false. In this case, the activity is stopped when the system enters ambient mode.", "history": "", "FullName": "void setAmbientEnabled ()"}, "onCreate(android.os.Bundle)": {"Returns": [], "Parameters": [["Bundle", "Bundle no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void onCreate (Bundle savedInstanceState)"}, "onPause()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void onPause ()"}, "onExitAmbient()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when an activity should exit ambient mode. This event is sent while an activity is running (after onResume, before onPause). Derived classes must call through to the super class's implementation of this method. If they do not, an exception will be thrown.", "history": "", "FullName": "void onExitAmbient ()"}, "onDestroy()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void onDestroy ()"}}, "Inheritance": ["http:##developer#android#com@B_java#lang#Object_E@", "http:##developer#android#com@B_android#content#Context_E@", "http:##developer#android#com@B_android#content#ContextWrapper_E@", "http:##developer#android#com@B_android#view#ContextThemeWrapper_E@", "http:##developer#android#com@B_android#app#Activity_E@"], "ClassName": "android.support.wearable.activity.WearableActivity", "ClassDesc": "Base activity class for use on wearables. Provides compatibility for Ambient mode support. If this library is passed through proguard optimization, make sure to add the com.google.android.wearable:wearable jar to the list of proguard library jars. Using gradle this can be accomplished by adding the following dependency line:"}