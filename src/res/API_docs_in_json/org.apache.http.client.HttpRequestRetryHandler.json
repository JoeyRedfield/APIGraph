{"Functions": {"retryRequest(java.io.IOException, int, org.apache.http.protocol.HttpContext)": {"Returns": [["", "true if the method should be retried, false otherwise"]], "Parameters": [["@B_java#io#IOException_E@", "the exception that occurred"], ["int", "the number of times this method has been unsuccessfully executed"], ["@B_org#apache#http#protocol#HttpContext_E@", "the context for the request execution"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Determines if a method should be retried after an IOException occurs during execution.", "history": "Added in API level 1", "FullName": "public abstract boolean retryRequest (IOException exception, int executionCount, HttpContext context)"}}, "Inheritance": [], "ClassName": "org.apache.http.client.HttpRequestRetryHandler", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit A handler for determining if an HttpRequest should be retried after a recoverable exception during execution. Classes implementing this interface must synchronize access to shared data as methods of this interfrace may be executed from multiple threads"}