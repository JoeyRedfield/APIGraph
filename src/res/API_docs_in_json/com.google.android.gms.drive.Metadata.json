{"Functions": {"isStarred()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this resource is starred by the user.", "history": "", "FullName": "public boolean isStarred ()"}, "isTrashable()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this resource can be trashed by this user.", "history": "", "FullName": "public boolean isTrashable ()"}, "getCreatedDate()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the create time for this resource.", "history": "", "FullName": "public Date getCreatedDate ()"}, "getFileSize()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The size of the file in bytes. Will return 0 for a folder. This is only populated for files with content stored in Drive.", "history": "", "FullName": "public long getFileSize ()"}, "getModifiedDate()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the last time this resource was modified by anyone.", "history": "", "FullName": "public Date getModifiedDate ()"}, "getCustomProperties()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets all custom properties and their associated values.", "history": "", "FullName": "public Map<CustomPropertyKey, String> getCustomProperties ()"}, "getSharedWithMeDate()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the time at which this resource was shared with the user or null if the user is the owner of this resource.", "history": "", "FullName": "public Date getSharedWithMeDate ()"}, "isShared()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this resource is a shared resource.", "history": "", "FullName": "public boolean isShared ()"}, "isFolder()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this Metadata is for a folder.", "history": "", "FullName": "public boolean isFolder ()"}, "getLastViewedByMeDate()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the last time this resource was viewed by the user or null if the user never viewed this resource.", "history": "", "FullName": "public Date getLastViewedByMeDate ()"}, "isPinned()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this resource has been pinned (a request has been made to make the content available offline).", "history": "", "FullName": "public boolean isPinned ()"}, "isViewed()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Whether this file has been viewed by this user.", "history": "", "FullName": "public boolean isViewed ()"}, "isRestricted()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Whether viewers are prevented from downloading this file.", "history": "", "FullName": "public boolean isRestricted ()"}, "getWebContentLink()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "A link for downloading the content of the file in a browser using cookie based authentication.", "history": "", "FullName": "public String getWebContentLink ()"}, "isInAppFolder()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this resource is in the Application Folder. The App Folder contains hidden files stored in a user's Drive that are only accessible to the creating app. @see", "history": "", "FullName": "public boolean isInAppFolder ()"}, "isTrashed()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this resource has been trashed.", "history": "", "FullName": "public boolean isTrashed ()"}, "isEditable()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this resource can be edited by the current user.", "history": "", "FullName": "public boolean isEditable ()"}, "getEmbedLink()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "A link for embedding the file.", "history": "", "FullName": "public String getEmbedLink ()"}, "getDriveId()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the id of the resource", "history": "", "FullName": "public DriveId getDriveId ()"}, "isPinnable()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the resource can be pinned. Folders and some shortcut app MIME types are pinnable.", "history": "", "FullName": "public boolean isPinnable ()"}, "isExplicitlyTrashed()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this resource has been explicitly trashed, as opposed to recursively trashed. This will return false if the file is not trashed.", "history": "", "FullName": "public boolean isExplicitlyTrashed ()"}, "getOriginalFilename()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The original filename if the file was uploaded manually, or the original title if the file was inserted through the API.", "history": "", "FullName": "public String getOriginalFilename ()"}, "Metadata()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public Metadata ()"}, "getWebViewLink()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting.", "history": "", "FullName": "public String getWebViewLink ()"}, "getModifiedByMeDate()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the last time this resource was modified by the user or null if the user never modified this resource.", "history": "", "FullName": "public Date getModifiedByMeDate ()"}, "getQuotaBytesUsed()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The number of quota bytes used by this file. Will return 0 for a folder.", "history": "", "FullName": "public long getQuotaBytesUsed ()"}, "getDescription()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "A short description of the resource.", "history": "", "FullName": "public String getDescription ()"}, "getTitle()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the title of the resource", "history": "", "FullName": "public String getTitle ()"}, "getContentAvailability()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns @B_com#google#android#gms#drive#Metadata#CONTENT_NOT_AVAILABLE_LOCALLY_E@ when the content is not available on the device or @B_com#google#android#gms#drive#Metadata#CONTENT_AVAILABLE_LOCALLY_E@ when the content is available on the device.", "history": "", "FullName": "public int getContentAvailability ()"}, "getMimeType()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the MIME type of the resource", "history": "", "FullName": "public String getMimeType ()"}, "getAlternateLink()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a link for opening the file using a relevant Google editor or viewer.", "history": "", "FullName": "public String getAlternateLink ()"}, "getFileExtension()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The file extension used when downloading this file.", "history": "", "FullName": "public String getFileExtension ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.drive.Metadata", "ClassDesc": "The details of a Drive file or folder."}