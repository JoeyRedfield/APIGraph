{"Functions": {"setChar(java.lang.Object,int,char)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index into the array"], ["char", "char: the new value of the indexed component"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object argument is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object argument is not an array, or if the specified value cannot be converted to the underlying array's component type by an identity or a primitive widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#set_E@"], "Permissions": [], "Description": "Sets the value of the indexed component of the specified array object to the specified char value.", "history": "Added in API level 1", "FullName": "public static void setChar (Object array, int index, char c)"}, "getLong(java.lang.Object,int)": {"Returns": [["long", "the value of the indexed component in the specified array"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object is not an array, or if the indexed element cannot be converted to the return type by an identity or widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#get_E@"], "Permissions": [], "Description": "Returns the value of the indexed component in the specified array object, as a long.", "history": "Added in API level 1", "FullName": "public static long getLong (Object array, int index)"}, "setLong(java.lang.Object,int,long)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index into the array"], ["long", "long: the new value of the indexed component"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object argument is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object argument is not an array, or if the specified value cannot be converted to the underlying array's component type by an identity or a primitive widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#set_E@"], "Permissions": [], "Description": "Sets the value of the indexed component of the specified array object to the specified long value.", "history": "Added in API level 1", "FullName": "public static void setLong (Object array, int index, long l)"}, "setDouble(java.lang.Object, int, double)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index into the array"], ["double", "double: the new value of the indexed component"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object argument is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object argument is not an array, or if the specified value cannot be converted to the underlying array's component type by an identity or a primitive widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#set_E@"], "Permissions": [], "Description": "Sets the value of the indexed component of the specified array object to the specified double value.", "history": "added in API level 1", "FullName": "public static void setDouble (Object array, int index, double d)"}, "getChar(java.lang.Object,int)": {"Returns": [["char", "the value of the indexed component in the specified array"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object is not an array, or if the indexed element cannot be converted to the return type by an identity or widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#get_E@"], "Permissions": [], "Description": "Returns the value of the indexed component in the specified array object, as a char.", "history": "Added in API level 1", "FullName": "public static char getChar (Object array, int index)"}, "setDouble(java.lang.Object,int,double)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index into the array"], ["double", "double: the new value of the indexed component"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object argument is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object argument is not an array, or if the specified value cannot be converted to the underlying array's component type by an identity or a primitive widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#set_E@"], "Permissions": [], "Description": "Sets the value of the indexed component of the specified array object to the specified double value.", "history": "Added in API level 1", "FullName": "public static void setDouble (Object array, int index, double d)"}, "newInstance(java.lang.Class<?>,int)": {"Returns": [["@B_java#lang#Object_E@", "the new array"]], "Parameters": [["@B_java#lang#Class_E@", "Class: the Class object representing the component type of the new array"], ["int", "int: the length of the new array"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if the specified componentType parameter is null"], ["@B_java#lang#IllegalArgumentException_E@", "if componentType is @B_java#lang#Void#TYPE_E@ or if the number of dimensions of the requested array instance exceed 255."], ["@B_java#lang#NegativeArraySizeException_E@", "if the specified length is negative"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new array with the specified component type and length. Invoking this method is equivalent to creating an array as follows: The number of dimensions of the new array must not exceed 255.", "history": "Added in API level 1", "FullName": "public static Object newInstance (Class<?> componentType, int length)"}, "getByte(java.lang.Object,int)": {"Returns": [["byte", "the value of the indexed component in the specified array"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object is not an array, or if the indexed element cannot be converted to the return type by an identity or widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#get_E@"], "Permissions": [], "Description": "Returns the value of the indexed component in the specified array object, as a byte.", "history": "Added in API level 1", "FullName": "public static byte getByte (Object array, int index)"}, "setLong(java.lang.Object, int, long)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index into the array"], ["long", "long: the new value of the indexed component"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object argument is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object argument is not an array, or if the specified value cannot be converted to the underlying array's component type by an identity or a primitive widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#set_E@"], "Permissions": [], "Description": "Sets the value of the indexed component of the specified array object to the specified long value.", "history": "added in API level 1", "FullName": "public static void setLong (Object array, int index, long l)"}, "setFloat(java.lang.Object, int, float)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index into the array"], ["float", "float: the new value of the indexed component"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object argument is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object argument is not an array, or if the specified value cannot be converted to the underlying array's component type by an identity or a primitive widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#set_E@"], "Permissions": [], "Description": "Sets the value of the indexed component of the specified array object to the specified float value.", "history": "added in API level 1", "FullName": "public static void setFloat (Object array, int index, float f)"}, "setFloat(java.lang.Object,int,float)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index into the array"], ["float", "float: the new value of the indexed component"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object argument is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object argument is not an array, or if the specified value cannot be converted to the underlying array's component type by an identity or a primitive widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#set_E@"], "Permissions": [], "Description": "Sets the value of the indexed component of the specified array object to the specified float value.", "history": "Added in API level 1", "FullName": "public static void setFloat (Object array, int index, float f)"}, "getDouble(java.lang.Object, int)": {"Returns": [["double", "the value of the indexed component in the specified array"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object is not an array, or if the indexed element cannot be converted to the return type by an identity or widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#get_E@"], "Permissions": [], "Description": "Returns the value of the indexed component in the specified array object, as a double.", "history": "added in API level 1", "FullName": "public static double getDouble (Object array, int index)"}, "setInt(java.lang.Object,int,int)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index into the array"], ["int", "int: the new value of the indexed component"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object argument is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object argument is not an array, or if the specified value cannot be converted to the underlying array's component type by an identity or a primitive widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#set_E@"], "Permissions": [], "Description": "Sets the value of the indexed component of the specified array object to the specified int value.", "history": "Added in API level 1", "FullName": "public static void setInt (Object array, int index, int i)"}, "getDouble(java.lang.Object,int)": {"Returns": [["double", "the value of the indexed component in the specified array"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object is not an array, or if the indexed element cannot be converted to the return type by an identity or widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#get_E@"], "Permissions": [], "Description": "Returns the value of the indexed component in the specified array object, as a double.", "history": "Added in API level 1", "FullName": "public static double getDouble (Object array, int index)"}, "getChar(java.lang.Object, int)": {"Returns": [["char", "the value of the indexed component in the specified array"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object is not an array, or if the indexed element cannot be converted to the return type by an identity or widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#get_E@"], "Permissions": [], "Description": "Returns the value of the indexed component in the specified array object, as a char.", "history": "added in API level 1", "FullName": "public static char getChar (Object array, int index)"}, "getBoolean(java.lang.Object,int)": {"Returns": [["boolean", "the value of the indexed component in the specified array"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object is not an array, or if the indexed element cannot be converted to the return type by an identity or widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#get_E@"], "Permissions": [], "Description": "Returns the value of the indexed component in the specified array object, as a boolean.", "history": "Added in API level 1", "FullName": "public static boolean getBoolean (Object array, int index)"}, "newInstance(java.lang.Class<?>, int)": {"Returns": [["@B_java#lang#Object_E@", "the new array"]], "Parameters": [["@B_java#lang#Class_E@", "Class: the Class object representing the component type of the new array"], ["int", "int: the length of the new array"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if the specified componentType parameter is null"], ["@B_java#lang#IllegalArgumentException_E@", "if componentType is @B_java#lang#Void#TYPE_E@ or if the number of dimensions of the requested array instance exceed 255."], ["@B_java#lang#NegativeArraySizeException_E@", "if the specified length is negative"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new array with the specified component type and length. Invoking this method is equivalent to creating an array as follows: The number of dimensions of the new array must not exceed 255.", "history": "added in API level 1", "FullName": "public static Object newInstance (Class<?> componentType, int length)"}, "getLong(java.lang.Object, int)": {"Returns": [["long", "the value of the indexed component in the specified array"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object is not an array, or if the indexed element cannot be converted to the return type by an identity or widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#get_E@"], "Permissions": [], "Description": "Returns the value of the indexed component in the specified array object, as a long.", "history": "added in API level 1", "FullName": "public static long getLong (Object array, int index)"}, "setShort(java.lang.Object, int, short)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index into the array"], ["short", "short: the new value of the indexed component"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object argument is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object argument is not an array, or if the specified value cannot be converted to the underlying array's component type by an identity or a primitive widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#set_E@"], "Permissions": [], "Description": "Sets the value of the indexed component of the specified array object to the specified short value.", "history": "added in API level 1", "FullName": "public static void setShort (Object array, int index, short s)"}, "set(java.lang.Object,int,java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index into the array"], ["@B_java#lang#Object_E@", "Object: the new value of the indexed component"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object argument is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object argument is not an array, or if the array component type is primitive and an unwrapping conversion fails"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": [], "Permissions": [], "Description": "Sets the value of the indexed component of the specified array object to the specified new value. The new value is first automatically unwrapped if the array has a primitive component type.", "history": "Added in API level 1", "FullName": "public static void set (Object array, int index, Object value)"}, "setByte(java.lang.Object,int,byte)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index into the array"], ["byte", "byte: the new value of the indexed component"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object argument is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object argument is not an array, or if the specified value cannot be converted to the underlying array's component type by an identity or a primitive widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#set_E@"], "Permissions": [], "Description": "Sets the value of the indexed component of the specified array object to the specified byte value.", "history": "Added in API level 1", "FullName": "public static void setByte (Object array, int index, byte b)"}, "getLength(java.lang.Object)": {"Returns": [["int", "the length of the array"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the object argument is not an array"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the length of the specified array object, as an int.", "history": "Added in API level 1", "FullName": "public static int getLength (Object array)"}, "setInt(java.lang.Object, int, int)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index into the array"], ["int", "int: the new value of the indexed component"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object argument is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object argument is not an array, or if the specified value cannot be converted to the underlying array's component type by an identity or a primitive widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#set_E@"], "Permissions": [], "Description": "Sets the value of the indexed component of the specified array object to the specified int value.", "history": "added in API level 1", "FullName": "public static void setInt (Object array, int index, int i)"}, "get(java.lang.Object, int)": {"Returns": [["@B_java#lang#Object_E@", "the (possibly wrapped) value of the indexed component in the specified array"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object is not an array"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of the indexed component in the specified array object. The value is automatically wrapped in an object if it has a primitive type.", "history": "added in API level 1", "FullName": "public static Object get (Object array, int index)"}, "getFloat(java.lang.Object,int)": {"Returns": [["float", "the value of the indexed component in the specified array"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object is not an array, or if the indexed element cannot be converted to the return type by an identity or widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#get_E@"], "Permissions": [], "Description": "Returns the value of the indexed component in the specified array object, as a float.", "history": "Added in API level 1", "FullName": "public static float getFloat (Object array, int index)"}, "getFloat(java.lang.Object, int)": {"Returns": [["float", "the value of the indexed component in the specified array"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object is not an array, or if the indexed element cannot be converted to the return type by an identity or widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#get_E@"], "Permissions": [], "Description": "Returns the value of the indexed component in the specified array object, as a float.", "history": "added in API level 1", "FullName": "public static float getFloat (Object array, int index)"}, "getInt(java.lang.Object, int)": {"Returns": [["int", "the value of the indexed component in the specified array"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object is not an array, or if the indexed element cannot be converted to the return type by an identity or widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#get_E@"], "Permissions": [], "Description": "Returns the value of the indexed component in the specified array object, as an int.", "history": "added in API level 1", "FullName": "public static int getInt (Object array, int index)"}, "setShort(java.lang.Object,int,short)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index into the array"], ["short", "short: the new value of the indexed component"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object argument is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object argument is not an array, or if the specified value cannot be converted to the underlying array's component type by an identity or a primitive widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#set_E@"], "Permissions": [], "Description": "Sets the value of the indexed component of the specified array object to the specified short value.", "history": "Added in API level 1", "FullName": "public static void setShort (Object array, int index, short s)"}, "set(java.lang.Object, int, java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index into the array"], ["@B_java#lang#Object_E@", "Object: the new value of the indexed component"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object argument is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object argument is not an array, or if the array component type is primitive and an unwrapping conversion fails"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": [], "Permissions": [], "Description": "Sets the value of the indexed component of the specified array object to the specified new value. The new value is first automatically unwrapped if the array has a primitive component type.", "history": "added in API level 1", "FullName": "public static void set (Object array, int index, Object value)"}, "getByte(java.lang.Object, int)": {"Returns": [["byte", "the value of the indexed component in the specified array"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object is not an array, or if the indexed element cannot be converted to the return type by an identity or widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#get_E@"], "Permissions": [], "Description": "Returns the value of the indexed component in the specified array object, as a byte.", "history": "added in API level 1", "FullName": "public static byte getByte (Object array, int index)"}, "getShort(java.lang.Object, int)": {"Returns": [["short", "the value of the indexed component in the specified array"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object is not an array, or if the indexed element cannot be converted to the return type by an identity or widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#get_E@"], "Permissions": [], "Description": "Returns the value of the indexed component in the specified array object, as a short.", "history": "added in API level 1", "FullName": "public static short getShort (Object array, int index)"}, "newInstance(java.lang.Class<?>,int...)": {"Returns": [["@B_java#lang#Object_E@", "the new array"]], "Parameters": [["@B_java#lang#Class_E@", "Class: the Class object representing the component type of the new array"], ["int...", "int: an array of int representing the dimensions of the new array"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if the specified componentType argument is null"], ["@B_java#lang#IllegalArgumentException_E@", "if the specified dimensions argument is a zero-dimensional array, if componentType is @B_java#lang#Void#TYPE_E@, or if the number of dimensions of the requested array instance exceed 255."], ["@B_java#lang#NegativeArraySizeException_E@", "if any of the components in the specified dimensions argument is negative."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new array with the specified component type and dimensions. If componentType represents a non-array class or interface, the new array has dimensions.length dimensions and componentType as its component type. If componentType represents an array class, the number of dimensions of the new array is equal to the sum of dimensions.length and the number of dimensions of componentType. In this case, the component type of the new array is the component type of componentType. The number of dimensions of the new array must not exceed 255.", "history": "Added in API level 1", "FullName": "public static Object newInstance (Class<?> componentType, int... dimensions)"}, "getShort(java.lang.Object,int)": {"Returns": [["short", "the value of the indexed component in the specified array"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object is not an array, or if the indexed element cannot be converted to the return type by an identity or widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#get_E@"], "Permissions": [], "Description": "Returns the value of the indexed component in the specified array object, as a short.", "history": "Added in API level 1", "FullName": "public static short getShort (Object array, int index)"}, "getInt(java.lang.Object,int)": {"Returns": [["int", "the value of the indexed component in the specified array"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object is not an array, or if the indexed element cannot be converted to the return type by an identity or widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#get_E@"], "Permissions": [], "Description": "Returns the value of the indexed component in the specified array object, as an int.", "history": "Added in API level 1", "FullName": "public static int getInt (Object array, int index)"}, "setChar(java.lang.Object, int, char)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index into the array"], ["char", "char: the new value of the indexed component"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object argument is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object argument is not an array, or if the specified value cannot be converted to the underlying array's component type by an identity or a primitive widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#set_E@"], "Permissions": [], "Description": "Sets the value of the indexed component of the specified array object to the specified char value.", "history": "added in API level 1", "FullName": "public static void setChar (Object array, int index, char c)"}, "getBoolean(java.lang.Object, int)": {"Returns": [["boolean", "the value of the indexed component in the specified array"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object is not an array, or if the indexed element cannot be converted to the return type by an identity or widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#get_E@"], "Permissions": [], "Description": "Returns the value of the indexed component in the specified array object, as a boolean.", "history": "added in API level 1", "FullName": "public static boolean getBoolean (Object array, int index)"}, "setBoolean(java.lang.Object,int,boolean)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index into the array"], ["boolean", "boolean: the new value of the indexed component"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object argument is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object argument is not an array, or if the specified value cannot be converted to the underlying array's component type by an identity or a primitive widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#set_E@"], "Permissions": [], "Description": "Sets the value of the indexed component of the specified array object to the specified boolean value.", "history": "Added in API level 1", "FullName": "public static void setBoolean (Object array, int index, boolean z)"}, "setByte(java.lang.Object, int, byte)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index into the array"], ["byte", "byte: the new value of the indexed component"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object argument is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object argument is not an array, or if the specified value cannot be converted to the underlying array's component type by an identity or a primitive widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#set_E@"], "Permissions": [], "Description": "Sets the value of the indexed component of the specified array object to the specified byte value.", "history": "added in API level 1", "FullName": "public static void setByte (Object array, int index, byte b)"}, "get(java.lang.Object,int)": {"Returns": [["@B_java#lang#Object_E@", "the (possibly wrapped) value of the indexed component in the specified array"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object is not an array"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of the indexed component in the specified array object. The value is automatically wrapped in an object if it has a primitive type.", "history": "Added in API level 1", "FullName": "public static Object get (Object array, int index)"}, "setBoolean(java.lang.Object, int, boolean)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: the array"], ["int", "int: the index into the array"], ["boolean", "boolean: the new value of the indexed component"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If the specified object argument is null"], ["@B_java#lang#IllegalArgumentException_E@", "If the specified object argument is not an array, or if the specified value cannot be converted to the underlying array's component type by an identity or a primitive widening conversion"], ["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array"]], "SeeAlso": ["@B_java#lang#reflect#Array#set_E@"], "Permissions": [], "Description": "Sets the value of the indexed component of the specified array object to the specified boolean value.", "history": "added in API level 1", "FullName": "public static void setBoolean (Object array, int index, boolean z)"}, "newInstance(java.lang.Class<?>, int...)": {"Returns": [["@B_java#lang#Object_E@", "the new array"]], "Parameters": [["@B_java#lang#Class_E@", "Class: the Class object representing the component type of the new array"], ["int...", "int: an array of int representing the dimensions of the new array"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if the specified componentType argument is null"], ["@B_java#lang#IllegalArgumentException_E@", "if the specified dimensions argument is a zero-dimensional array, if componentType is @B_java#lang#Void#TYPE_E@, or if the number of dimensions of the requested array instance exceed 255."], ["@B_java#lang#NegativeArraySizeException_E@", "if any of the components in the specified dimensions argument is negative."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new array with the specified component type and dimensions. If componentType represents a non-array class or interface, the new array has dimensions.length dimensions and componentType as its component type. If componentType represents an array class, the number of dimensions of the new array is equal to the sum of dimensions.length and the number of dimensions of componentType. In this case, the component type of the new array is the component type of componentType. The number of dimensions of the new array must not exceed 255.", "history": "added in API level 9", "FullName": "public static Object newInstance (Class<?> componentType, int... dimensions)"}}, "Inheritance": [], "ClassName": "java.lang.reflect.Array", "ClassDesc": "The Array class provides static methods to dynamically create and access Java arrays. Array permits widening conversions to occur during a get or set operation, but throws an IllegalArgumentException if a narrowing conversion would occur."}