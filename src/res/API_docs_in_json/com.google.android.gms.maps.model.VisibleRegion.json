{"Functions": {"writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public void writeToParcel (Parcel out, int flags)"}, "toString()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public String toString ()"}, "equals(java.lang.Object)": {"Returns": [], "Parameters": [["Object", "an @B_java#lang#Object_E@. Return true if both objects are the same object, or if all four corners and the bounds of the two objects are the same. Return false otherwise."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Compares this @B_com#google#android#gms#maps#model#VisibleRegion_E@ to another object. If the other object is actually a pointer to this object, or if all four corners and the bounds of the two objects are the same, this method returns true. Otherwise, this method returns false.", "history": "", "FullName": "public boolean equals (Object o)"}, "describeContents()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int describeContents ()"}, "VisibleRegion(com.google.android.gms.maps.model.LatLng, com.google.android.gms.maps.model.LatLng, com.google.android.gms.maps.model.LatLng, com.google.android.gms.maps.model.LatLng, com.google.android.gms.maps.model.LatLngBounds)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#maps#model#LatLng_E@", "a @B_com#google#android#gms#maps#model#LatLng_E@ object containing the latitude and longitude of the near left corner of the region."], ["@B_com#google#android#gms#maps#model#LatLng_E@", "a @B_com#google#android#gms#maps#model#LatLng_E@ object containing the latitude and longitude of the near right corner of the region."], ["@B_com#google#android#gms#maps#model#LatLng_E@", "a @B_com#google#android#gms#maps#model#LatLng_E@ object containing the latitude and longitude of the far left corner of the region."], ["@B_com#google#android#gms#maps#model#LatLng_E@", "a @B_com#google#android#gms#maps#model#LatLng_E@ object containing the latitude and longitude of the far right corner of the region."], ["@B_com#google#android#gms#maps#model#LatLngBounds_E@", "the smallest bounding box that includes the visible region defined in this class. If this box crosses the 180&deg meridian (the vertical line from north to south), the longitude in farRight will be negative and the longitude in farLeft will be positive. Same applies to nearRight and nearLeft."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new VisibleRegion given the four corners of the camera. The LatLng parameters must define a convex shape (the edges of the resulting shape mustn't cross). No bounds checking is performed at runtime.", "history": "", "FullName": "public VisibleRegion (LatLng nearLeft, LatLng nearRight, LatLng farLeft, LatLng farRight, LatLngBounds latLngBounds)"}, "hashCode()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int hashCode ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.maps.model.VisibleRegion", "ClassDesc": "Contains the four points defining the four-sided polygon that is visible in a map's camera. This polygon can be a trapezoid instead of a rectangle, because a camera can have tilt. If the camera is directly over the center of the camera, the shape is rectangular, but if the camera is tilted, the shape will appear to be a trapezoid whose smallest side is closest to the point of view."}