{"Functions": {"RecognitionService()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 8", "FullName": "public RecognitionService ()"}, "onDestroy()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called by the system to notify a Service that it is no longer used and is being removed. The service should clean up any resources it holds (threads, registered receivers, etc) at this point. Upon return, there will be no more calls in to this Service object and it is effectively dead. Do not call this method directly.", "history": "Added in API level 8", "FullName": "public void onDestroy ()"}, "onCancel(android.speech.RecognitionService.Callback)": {"Returns": [], "Parameters": [["@B_android#speech#RecognitionService#Callback_E@", "RecognitionService.Callback no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies the service that it should cancel the speech recognition.", "history": "Added in API level 8", "FullName": "protected abstract void onCancel (RecognitionService.Callback listener)"}, "onStopListening(android.speech.RecognitionService.Callback)": {"Returns": [], "Parameters": [["@B_android#speech#RecognitionService#Callback_E@", "RecognitionService.Callback no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies the service that it should stop listening for speech. Speech captured so far should be recognized as if the user had stopped speaking at this point. This method is only called if the application calls it explicitly.", "history": "Added in API level 8", "FullName": "protected abstract void onStopListening (RecognitionService.Callback listener)"}, "onStartListening(android.content.Intent,android.speech.RecognitionService.Callback)": {"Returns": [], "Parameters": [["@B_android#content#Intent_E@", "Intent: contains parameters for the recognition to be performed. The intent may also contain optional extras, see @B_android#speech#RecognizerIntent_E@. If these values are not set explicitly, default values should be used by the recognizer."], ["@B_android#speech#RecognitionService#Callback_E@", "RecognitionService.Callback: that will receive the service's callbacks"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies the service that it should start listening for speech.", "history": "Added in API level 8", "FullName": "protected abstract void onStartListening (Intent recognizerIntent, RecognitionService.Callback listener)"}, "onBind(android.content.Intent)": {"Returns": [["@B_android#os#IBinder_E@", "Return an IBinder through which clients can call on to the service."]], "Parameters": [["@B_android#content#Intent_E@", "Intent: The Intent that was used to bind to this service, as given to @B_android#content#Context#bindService_E@. Note that any extras that were included with the Intent at that point will not be seen here."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the communication channel to the service. May return null if clients can not bind to the service. The returned @B_android#os#IBinder_E@ is usually for a complex interface that has been Note that unlike other application components, calls on to the IBinder interface returned here may not happen on the main thread of the process. More information about the main thread can be found in", "history": "Added in API level 8", "FullName": "public final IBinder onBind (Intent intent)"}}, "Inheritance": ["@B_android#content#Context_E@", "@B_android#content#ContextWrapper_E@", "@B_android#app#Service_E@"], "ClassName": "android.speech.RecognitionService", "ClassDesc": "This class provides a base class for recognition service implementations. This class should be extended only in case you wish to implement a new speech recognizer. Please note that the implementation of this service is stateless."}