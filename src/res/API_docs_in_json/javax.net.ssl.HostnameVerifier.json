{"Functions": {"verify(java.lang.String,javax.net.ssl.SSLSession)": {"Returns": [["boolean", "true if the host name is acceptable"]], "Parameters": [["@B_java#lang#String_E@", "String: the host name"], ["@B_javax#net#ssl#SSLSession_E@", "SSLSession: SSLSession used on the connection to host"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Verify that the host name is an acceptable match with the server's authentication scheme.", "history": "Added in API level 1", "FullName": "public abstract boolean verify (String hostname, SSLSession session)"}, "verify(java.lang.String, javax.net.ssl.SSLSession)": {"Returns": [["boolean", "true if the host name is acceptable"]], "Parameters": [["@B_java#lang#String_E@", "String: the host name"], ["@B_javax#net#ssl#SSLSession_E@", "SSLSession: SSLSession used on the connection to host"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Verify that the host name is an acceptable match with the server's authentication scheme.", "history": "added in API level 1", "FullName": "public abstract boolean verify (String hostname, SSLSession session)"}}, "Inheritance": [], "ClassName": "javax.net.ssl.HostnameVerifier", "ClassDesc": "This class is the base interface for hostname verification. During handshaking, the verification mechanism can call back to implementers of this interface to determine if this connection should be allowed. For more information of the use of this interface on Android, see @B_javax#net#ssl#HttpsURLConnection#setDefaultHostnameVerifier_E@. The policies can be certificate-based or may depend on other authentication schemes."}