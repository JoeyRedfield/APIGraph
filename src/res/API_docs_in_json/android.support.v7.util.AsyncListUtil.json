{"Functions": {"onRangeChanged()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Updates the currently visible item range. Identifies the data items that have not been loaded yet and initiates loading them in the background. Should be called from the view's scroll listener (such as @B_android#support#v7#widget#RecyclerView#OnScrollListener#onScrolled_E@).", "history": "added in version 23.0.0", "FullName": "void onRangeChanged ()"}, "getItem(int)": {"Returns": [["T", "The data item at the given position or null if it has not been loaded yet."]], "Parameters": [["int", "int: Item position."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the data item at the given position or null if it has not been loaded yet. If this method has been called for a specific position and returned null, then @B_android#support#v7#util#AsyncListUtil#ViewCallback#onItemLoaded_E@ will be called when it finally loads. Note that if this position stays outside of the cached item range (as defined by @B_android#support#v7#util#AsyncListUtil#ViewCallback#extendRangeInto_E@ method), then the callback will never be called for this position.", "history": "added in version 23.0.0", "FullName": "T getItem (int position)"}, "getItemCount()": {"Returns": [["int", "Number of items."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of items in the data set. This is the number returned by a recent call to @B_android#support#v7#util#AsyncListUtil#DataCallback#refreshData_E@.", "history": "added in version 23.0.0", "FullName": "int getItemCount ()"}, "refresh()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Forces reloading the data. Discards all the cached data and reloads all required data items for the currently visible range. To be called when the data item count and/or contents has changed.", "history": "added in version 23.0.0", "FullName": "void refresh ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v7.util.AsyncListUtil<T>", "ClassDesc": "A utility class that supports asynchronous content loading. It can be used to load Cursor data in chunks without querying the Cursor on the UI Thread while keeping UI and cache synchronous for better user experience. It loads the data on a background thread and keeps only a limited number of fixed sized chunks in memory at all times. @B_android#support#v7#util#AsyncListUtil_E@ queries the currently visible range through @B_android#support#v7#util#AsyncListUtil#ViewCallback_E@, loads the required data items in the background through @B_android#support#v7#util#AsyncListUtil#DataCallback_E@, and notifies a @B_android#support#v7#util#AsyncListUtil#ViewCallback_E@ when the data is loaded. It may load some extra items for smoother scrolling. Note that this class uses a single thread to load the data, so it suitable to load data from secondary storage such as disk, but not from network. This class is designed to work with @B_android#support#v7#widget#RecyclerView_E@, but it does not depend on it and can be used with other list views."}