{"Functions": {"publish(java.util.logging.LogRecord)": {"Returns": [], "Parameters": [["@B_java#util#logging#LogRecord_E@", "LogRecord: description of the log event. A null record is silently ignored and is not published"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Publish a The logging request was made initially to a", "history": "Added in API level 1", "FullName": "public void publish (LogRecord record)"}, "ConsoleHandler()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a The", "history": "Added in API level 1", "FullName": "public ConsoleHandler ()"}, "close()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override", "history": "Added in API level 1", "FullName": "public void close ()"}}, "Inheritance": ["@B_java#util#logging#Handler_E@", "@B_java#util#logging#StreamHandler_E@"], "ClassName": "java.util.logging.ConsoleHandler", "ClassDesc": "This <handler-name> refers to the fully-qualified class name of the handler. If properties are not defined (or have invalid values) then the specified default values are used. <handler-name>.level specifies the default level for the <handler-name>.filter specifies the name of a <handler-name>.formatter specifies the name of a <handler-name>.encoding the name of the character set encoding to use (defaults to the default platform encoding). For example, the properties for ConsoleHandler would be: java.util.logging.ConsoleHandler.level=INFO java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter For a custom handler, e.g. com.foo.MyHandler, the properties would be: com.foo.MyHandler.level=INFO com.foo.MyHandler.formatter=java.util.logging.SimpleFormatter"}