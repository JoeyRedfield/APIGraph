{"Functions": {"getHeadersCount()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public int getHeadersCount ()"}, "areAllItemsEnabled()": {"Returns": [["boolean", "True if all items are enabled, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether all the items in this adapter are enabled. If the value returned by this method changes over time, there is no guarantee it will take effect. If true, it means all items are selectable and clickable (there is no separator.)", "history": "Added in API level 1", "FullName": "public boolean areAllItemsEnabled ()"}, "getWrappedAdapter()": {"Returns": [["@B_android#widget#ListAdapter_E@", "The @B_android#widget#ListAdapter_E@ wrapped by this adapter."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the adapter wrapped by this list adapter.", "history": "Added in API level 1", "FullName": "public ListAdapter getWrappedAdapter ()"}, "getFootersCount()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public int getFootersCount ()"}, "getViewTypeCount()": {"Returns": [["int", "The number of types of Views that will be created by this adapter"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of types of Views that will be created by @B_android#widget#Adapter#getView_E@. Each type represents a set of views that can be converted in @B_android#widget#Adapter#getView_E@. If the adapter always returns the same type of View for all items, this method should return 1. This method will only be called when the adapter is set on the @B_android#widget#AdapterView_E@.", "history": "Added in API level 1", "FullName": "public int getViewTypeCount ()"}, "removeFooter(android.view.View)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#view#View_E@", "View no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public boolean removeFooter (View v)"}, "removeHeader(android.view.View)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#view#View_E@", "View no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public boolean removeHeader (View v)"}, "getCount()": {"Returns": [["int", "Count of items."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "How many items are in the data set represented by this Adapter.", "history": "Added in API level 1", "FullName": "public int getCount ()"}, "isEnabled(int)": {"Returns": [["boolean", "True if the item is not a separator"]], "Parameters": [["int", "int: Index of the item"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the item at the specified position is not a separator. (A separator is a non-selectable, non-clickable item). The result is unspecified if position is invalid. An @B_java#lang#ArrayIndexOutOfBoundsException_E@ should be thrown in that case for fast failure.", "history": "Added in API level 1", "FullName": "public boolean isEnabled (int position)"}, "getItem(int)": {"Returns": [["@B_java#lang#Object_E@", "The data at the specified position."]], "Parameters": [["int", "int: Position of the item whose data we want within the adapter's data set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the data item associated with the specified position in the data set.", "history": "Added in API level 1", "FullName": "public Object getItem (int position)"}, "getFilter()": {"Returns": [["@B_android#widget#Filter_E@", "a filter used to constrain data"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a filter that can be used to constrain data with a filtering pattern. This method is usually implemented by @B_android#widget#Adapter_E@ classes.", "history": "Added in API level 1", "FullName": "public Filter getFilter ()"}, "getItemId(int)": {"Returns": [["long", "The id of the item at the specified position."]], "Parameters": [["int", "int: The position of the item within the adapter's data set whose row id we want."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the row id associated with the specified position in the list.", "history": "Added in API level 1", "FullName": "public long getItemId (int position)"}, "isEmpty()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public boolean isEmpty ()"}, "unregisterDataSetObserver(android.database.DataSetObserver)": {"Returns": [], "Parameters": [["@B_android#database#DataSetObserver_E@", "DataSetObserver: the object to unregister."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Unregister an observer that has previously been registered with this adapter via @B_android#widget#Adapter#registerDataSetObserver_E@.", "history": "Added in API level 1", "FullName": "public void unregisterDataSetObserver (DataSetObserver observer)"}, "HeaderViewListAdapter(java.util.ArrayList<android.widget.ListView.FixedViewInfo>,java.util.ArrayList<android.widget.ListView.FixedViewInfo>,android.widget.ListAdapter)": {"Returns": [], "Parameters": [["@B_java#util#ArrayList_E@", "ArrayList no parameter comment"], ["@B_java#util#ArrayList_E@", "ArrayList no parameter comment"], ["@B_android#widget#ListAdapter_E@", "ListAdapter no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public HeaderViewListAdapter (ArrayList<ListView.FixedViewInfo> headerViewInfos, ArrayList<ListView.FixedViewInfo> footerViewInfos, ListAdapter adapter)"}, "getView(int,android.view.View,android.view.ViewGroup)": {"Returns": [["@B_android#view#View_E@", "A View corresponding to the data at the specified position."]], "Parameters": [["int", "int: The position of the item within the adapter's data set of the item whose view we want."], ["@B_android#view#View_E@", "View: The old view to reuse, if possible. Note: You should check that this view is non-null and of an appropriate type before using. If it is not possible to convert this view to display the correct data, this method can create a new view. Heterogeneous lists can specify their number of view types, so that this View is always of the right type (see @B_android#widget#HeaderViewListAdapter#getViewTypeCount_E@ and @B_android#widget#HeaderViewListAdapter#getItemViewType_E@)."], ["@B_android#view#ViewGroup_E@", "ViewGroup: The parent that this view will eventually be attached to"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get a View that displays the data at the specified position in the data set. You can either create a View manually or inflate it from an XML layout file. When the View is inflated, the parent View (GridView, ListView...) will apply default layout parameters unless you use @B_android#view#LayoutInflater#inflate_E@ to specify a root view and to prevent attachment to the root.", "history": "Added in API level 1", "FullName": "public View getView (int position, View convertView, ViewGroup parent)"}, "registerDataSetObserver(android.database.DataSetObserver)": {"Returns": [], "Parameters": [["@B_android#database#DataSetObserver_E@", "DataSetObserver: the object that gets notified when the data set changes."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Register an observer that is called when changes happen to the data used by this adapter.", "history": "Added in API level 1", "FullName": "public void registerDataSetObserver (DataSetObserver observer)"}, "getItemViewType(int)": {"Returns": [["int", "An integer representing the type of View. Two views should share the same type if one can be converted to the other in @B_android#widget#Adapter#getView_E@. Note: Integers must be in the range 0 to @B_android#widget#Adapter#getViewTypeCount_E@ - 1. @B_android#widget#Adapter#IGNORE_ITEM_VIEW_TYPE_E@ can also be returned."]], "Parameters": [["int", "int: The position of the item within the adapter's data set whose view type we want."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the type of View that will be created by @B_android#widget#Adapter#getView_E@ for the specified item.", "history": "Added in API level 1", "FullName": "public int getItemViewType (int position)"}, "hasStableIds()": {"Returns": [["boolean", "True if the same id always refers to the same object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether the item ids are stable across changes to the underlying data.", "history": "Added in API level 1", "FullName": "public boolean hasStableIds ()"}}, "Inheritance": [], "ClassName": "android.widget.HeaderViewListAdapter", "ClassDesc": "ListAdapter used when a ListView has header views. This ListAdapter wraps another one and also keeps track of the header views and their associated data objects. This is intended as a base class; you will probably not need to use this class directly in your own code."}