{"Functions": {"hasNotificationAccess(android.content.ComponentName)": {"Returns": [["boolean", "whether the given component has the notification listener permission"]], "Parameters": [["@B_android#content#ComponentName_E@", "ComponentName: the name of the component"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check whether the given component can access the notifications via a @B_android#service#notification#NotificationListenerService_E@ Your app must have an association with a device before calling this API Calling this API requires a uses-feature @B_android#content#pm#PackageManager#FEATURE_COMPANION_DEVICE_SETUP_E@ declaration in the manifest", "history": "Added in API level 26", "FullName": "public boolean hasNotificationAccess (ComponentName component)"}, "associate(android.companion.AssociationRequest,android.companion.CompanionDeviceManager.Callback,android.os.Handler)": {"Returns": [], "Parameters": [["@B_android#companion#AssociationRequest_E@", "AssociationRequest: specific details about this request This value must never be null."], ["@B_android#companion#CompanionDeviceManager#Callback_E@", "CompanionDeviceManager.Callback: will be called once there's at least one device found for user to choose from This value must never be null."], ["@B_android#os#Handler_E@", "Handler: A handler to control which thread the callback will be delivered on, or null, to deliver it on main thread This value may be null."]], "Throws": [], "SeeAlso": ["@B_android#companion#AssociationRequest_E@"], "Permissions": ["@B_android#Manifest#permission#REQUEST_COMPANION_RUN_IN_BACKGROUND_E@", "@B_android#Manifest#permission#REQUEST_COMPANION_USE_DATA_IN_BACKGROUND_E@"], "Description": "Associate this app with a companion device, selected by user Once at least one appropriate device is found, callback will be called with a @B_android#app#PendingIntent_E@ that can be used to show the list of available devices for the user to select. It should be started for result (i.e. using @B_android#app#Activity#startIntentSenderForResult_E@), as the resulting @B_android#content#Intent_E@ will contain extra @B_android#companion#CompanionDeviceManager#EXTRA_DEVICE_E@, with the selected device. (e.g. @B_android#bluetooth#BluetoothDevice_E@) If your app needs to be excluded from battery optimizations (run in the background) or to have unrestricted data access (use data in the background) you can declare that you use the @B_android#Manifest#permission#REQUEST_COMPANION_RUN_IN_BACKGROUND_E@ and @B_android#Manifest#permission#REQUEST_COMPANION_USE_DATA_IN_BACKGROUND_E@ respectively. Note that these special capabilities have a negative effect on the device's battery and user's data usage, therefore you should requested them when absolutely necessary. You can call @B_android#companion#CompanionDeviceManager#getAssociations_E@ to get the list of currently associated devices, and @B_android#companion#CompanionDeviceManager#disassociate_E@ to remove an association. Consider doing so when the association is no longer relevant to avoid unnecessary battery and/or data drain resulting from special privileges that the association provides Calling this API requires a uses-feature @B_android#content#pm#PackageManager#FEATURE_COMPANION_DEVICE_SETUP_E@ declaration in the manifest", "history": "Added in API level 26", "FullName": "public void associate (AssociationRequest request, CompanionDeviceManager.Callback callback, Handler handler)"}, "requestNotificationAccess(android.content.ComponentName)": {"Returns": [], "Parameters": [["@B_android#content#ComponentName_E@", "ComponentName no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Request notification access for the given component. The given component must follow the protocol specified in @B_android#service#notification#NotificationListenerService_E@ Only components from the same @B_android#content#ComponentName#getPackageName_E@ as the calling app are allowed. Your app must have an association with a device before calling this API Calling this API requires a uses-feature @B_android#content#pm#PackageManager#FEATURE_COMPANION_DEVICE_SETUP_E@ declaration in the manifest", "history": "Added in API level 26", "FullName": "public void requestNotificationAccess (ComponentName component)"}, "getAssociations()": {"Returns": [["@B_java#util#List_E@", "a list of MAC addresses of devices that have been previously associated with the current app. You can use these with @B_android#companion#CompanionDeviceManager#disassociate_E@ This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Calling this API requires a uses-feature @B_android#content#pm#PackageManager#FEATURE_COMPANION_DEVICE_SETUP_E@ declaration in the manifest", "history": "Added in API level 26", "FullName": "public List<String> getAssociations ()"}, "disassociate(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the MAC address of device to disassociate from this app This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Remove the association between this app and the device with the given mac address. Any privileges provided via being associated with a given device will be revoked Consider doing so when the association is no longer relevant to avoid unnecessary battery and/or data drain resulting from special privileges that the association provides Calling this API requires a uses-feature @B_android#content#pm#PackageManager#FEATURE_COMPANION_DEVICE_SETUP_E@ declaration in the manifest", "history": "Added in API level 26", "FullName": "public void disassociate (String deviceMacAddress)"}}, "Inheritance": [], "ClassName": "android.companion.CompanionDeviceManager", "ClassDesc": "System level service for managing companion devices To obtain an instance call @B_android#content#Context#getSystemService_E@(@B_android#content#Context#COMPANION_DEVICE_SERVICE_E@) Then, call @B_android#companion#CompanionDeviceManager#associate_E@ to initiate the flow of associating current package with a device selected by user."}