{"Functions": {"getStartTime(java.util.concurrent.TimeUnit)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the start time for our query, in the given time unit", "history": "", "FullName": "public long getStartTime (TimeUnit timeUnit)"}, "toString()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public String toString ()"}, "getExcludedPackages()": {"Returns": [["", "the list of excluded packages, empty if none"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns any app package names that were excluded from the request.", "history": "", "FullName": "public List<String> getExcludedPackages ()"}, "getSessionId()": {"Returns": [["", "the specified session identifier, or null if unspecified"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the session id we are requesting data for.", "history": "", "FullName": "public String getSessionId ()"}, "describeContents()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int describeContents ()"}, "getSessionName()": {"Returns": [["", "the specified session name, or null if unspecified"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the session name we are requesting data for.", "history": "", "FullName": "public String getSessionName ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getDataTypes()": {"Returns": [["", "the specified data types, empty if none"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the data types for which default data sources should be read in this request.", "history": "", "FullName": "public List<DataType> getDataTypes ()"}, "equals(java.lang.Object)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public boolean equals (Object o)"}, "includeSessionsFromAllApps()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the read data should include sessions from other apps.", "history": "", "FullName": "public boolean includeSessionsFromAllApps ()"}, "getDataSources()": {"Returns": [["", "the specified data sources, empty if none"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the data sources to be read in this request.", "history": "", "FullName": "public List<DataSource> getDataSources ()"}, "getEndTime(java.util.concurrent.TimeUnit)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the end time for our query, in the given time unit", "history": "", "FullName": "public long getEndTime (TimeUnit timeUnit)"}, "hashCode()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int hashCode ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.fitness.request.SessionReadRequest", "ClassDesc": "Request for reading @B_com#google#android#gms#fitness#data#Session_E@ data from Google Fit. Use this request to specify the sessions to read, as well as Example usage for reading all sessions during a time interval, as well as location data points for each session: A valid time interval is mandatory for the request. Session name and identifier are optional fields that can be used to further filter out the returned result. By default, only sessions created by the calling app will be returned. To get sessions created by other apps, use @B_com#google#android#gms#fitness#request#SessionReadRequest#Builder#readSessionsFromAllApps_E@} An app can only read public data types or custom data created by itself. Custom data types created by another app cannot be read."}