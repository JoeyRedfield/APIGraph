{"Functions": {"atPosition(java.lang.Integer)": {"Returns": [["@B_android#support#test#espresso#DataInteraction_E@", "no returns description in source"]], "Parameters": [["Integer", "Integer no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Selects the view which matches the nth position on the adapter based on the data matcher.", "history": "", "FullName": "DataInteraction atPosition (Integer atPosition)"}, "check(android.support.test.espresso.ViewAssertion)": {"Returns": [["@B_android#support#test#espresso#ViewInteraction_E@", "an @B_android#support#test#espresso#ViewInteraction_E@ for more assertions or actions."]], "Parameters": [["@B_android#support#test#espresso#ViewAssertion_E@", "ViewAssertion no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Performs an assertion on the state of the view after we force the data to be loaded.", "history": "", "FullName": "ViewInteraction check (ViewAssertion assertion)"}}, "Inheritance": ["https:##developer#android#com@B_java#lang#Object_E@"], "ClassName": "android.support.test.espresso.DataInteraction", "ClassDesc": "An interface to interact with data displayed in AdapterViews. This interface builds on top of @B_android#support#test#espresso#ViewInteraction_E@ and should be the preferred way to interact with elements displayed inside AdapterViews. This is necessary because an AdapterView may not load all the data held by its Adapter into the view hierarchy until a user interaction makes it necessary. Also it is more fluent / less brittle to match upon the data object being rendered into the display then the rendering itself. By default, a DataInteraction takes place against any AdapterView found within the current screen, if you have multiple AdapterView objects displayed, you will need to narrow the selection by using the inAdapterView method. The check and perform method operate on the top level child of the adapter view, if you need to operate on a subview (eg: a Button within the list) use the onChildView method before calling perform or check."}