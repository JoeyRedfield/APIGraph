{"Functions": {"FragmentManager()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "FragmentManager ()"}, "findFragmentById(int)": {"Returns": [["@B_android#support#v4#app#Fragment_E@", "The fragment if found or null otherwise."]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Finds a fragment that was identified by the given id either when inflated from XML or as the container ID when added in a transaction. This first searches through fragments that are currently added to the manager's activity; if no such fragment is found, then all fragments currently on the back stack associated with this ID are searched.", "history": "added in version 22.0.0", "FullName": "Fragment findFragmentById (int id)"}, "getBackStackEntryAt(int)": {"Returns": [["@B_android#support#v4#app#FragmentManager#BackStackEntry_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the BackStackEntry at index", "history": "added in version 22.0.0", "FullName": "FragmentManager.BackStackEntry getBackStackEntryAt (int index)"}, "isStateSaved()": {"Returns": [["boolean", "true if this FragmentManager's state has already been saved by its host"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the FragmentManager's state has already been saved by its host. Any operations that would change saved state should not be performed if this method returns true. For example, any popBackStack() method, such as @B_android#support#v4#app#FragmentManager#popBackStackImmediate_E@ or any FragmentTransaction using @B_android#support#v4#app#FragmentTransaction#commit_E@ instead of @B_android#support#v4#app#FragmentTransaction#commitAllowingStateLoss_E@ will change the state and will result in an error.", "history": "added in version 26.0.0-beta1", "FullName": "boolean isStateSaved ()"}, "popBackStackImmediate()": {"Returns": [["boolean", "Returns true if there was something popped, else false."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Like @B_android#support#v4#app#FragmentManager#popBackStack_E@, but performs the operation immediately inside of the call. This is like calling @B_android#support#v4#app#FragmentManager#executePendingTransactions_E@ afterwards without forcing the start of postponed Transactions.", "history": "added in version 22.0.0", "FullName": "boolean popBackStackImmediate ()"}, "getBackStackEntryCount()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the number of entries currently in the back stack.", "history": "added in version 22.0.0", "FullName": "int getBackStackEntryCount ()"}, "popBackStack()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Pop the top state off the back stack. Returns true if there was one to pop, else false. This function is asynchronous -- it enqueues the request to pop, but the action will not be performed until the application returns to its event loop.", "history": "added in version 22.0.0", "FullName": "void popBackStack ()"}, "getPrimaryNavigationFragment()": {"Returns": [["@B_android#support#v4#app#Fragment_E@", "the fragment designated as the primary navigation fragment"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the currently active primary navigation fragment for this FragmentManager. The primary navigation fragment is set by fragment transactions using @B_android#support#v4#app#FragmentTransaction#setPrimaryNavigationFragment_E@. The primary navigation fragment's @B_android#support#v4#app#Fragment#getChildFragmentManager_E@ will be called first to process delegated navigation actions such as @B_android#support#v4#app#FragmentManager#popBackStack_E@ if no ID or transaction name is provided to pop to.", "history": "added in version 26.0.0-alpha1", "FullName": "Fragment getPrimaryNavigationFragment ()"}, "executePendingTransactions()": {"Returns": [["boolean", "Returns true if there were any pending transactions to be executed."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "After a @B_android#support#v4#app#FragmentTransaction_E@ is committed with @B_android#support#v4#app#FragmentTransaction#commit_E@, it is scheduled to be executed asynchronously on the process's main thread. If you want to immediately executing any such pending operations, you can call this function (only from the main thread) to do so. Note that all callbacks and other related behavior will be done from within this call, so be careful about where this is called from. If you are committing a single transaction that does not modify the fragment back stack, strongly consider using @B_android#support#v4#app#FragmentTransaction#commitNow_E@ instead. This can help avoid unwanted side effects when other code in your app has pending committed transactions that expect different timing. This also forces the start of any postponed Transactions where @B_android#support#v4#app#Fragment#postponeEnterTransition_E@ has been called.", "history": "added in version 22.0.0", "FullName": "boolean executePendingTransactions ()"}, "beginTransaction()": {"Returns": [["@B_android#support#v4#app#FragmentTransaction_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Start a series of edit operations on the Fragments associated with this FragmentManager. Note: A fragment transaction can only be created/committed prior to an activity saving its state. If you try to commit a transaction after @B_android#support#v4#app#FragmentActivity#onSaveInstanceState_E@ (and prior to a following @B_android#support#v4#app#FragmentActivity#onStart_E@ or @B_android#support#v4#app#FragmentActivity#onResume_E@, you will get an error. This is because the framework takes care of saving your current fragments in the state, and if changes are made after the state is saved then they will be lost.", "history": "added in version 22.0.0", "FullName": "FragmentTransaction beginTransaction ()"}, "popBackStack(java.lang.String, int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: If non-null, this is the name of a previous back state to look for; if found, all states up to that state will be popped. The @B_android#support#v4#app#FragmentManager#POP_BACK_STACK_INCLUSIVE_E@ flag can be used to control whether the named state itself is popped. If null, only the top state is popped."], ["int", "int: Either 0 or @B_android#support#v4#app#FragmentManager#POP_BACK_STACK_INCLUSIVE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Pop the last fragment transition from the manager's fragment back stack. If there is nothing to pop, false is returned. This function is asynchronous -- it enqueues the request to pop, but the action will not be performed until the application returns to its event loop.", "history": "added in version 22.0.0", "FullName": "void popBackStack (String name, int flags)"}, "popBackStackImmediate(java.lang.String, int)": {"Returns": [["boolean", "Returns true if there was something popped, else false."]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Like @B_android#support#v4#app#FragmentManager#popBackStack_E@, but performs the operation immediately inside of the call. This is like calling @B_android#support#v4#app#FragmentManager#executePendingTransactions_E@ afterwards without forcing the start of postponed Transactions.", "history": "added in version 22.0.0", "FullName": "boolean popBackStackImmediate (String name, int flags)"}, "enableDebugLogging(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Control whether the framework's internal fragment manager debugging logs are turned on. If enabled, you will see output in logcat as the framework performs fragment operations.", "history": "added in version 22.0.0", "FullName": "void enableDebugLogging (boolean enabled)"}, "popBackStack(int, int)": {"Returns": [], "Parameters": [["int", "int: Identifier of the stated to be popped. If no identifier exists, false is returned. The identifier is the number returned by @B_android#support#v4#app#FragmentTransaction#commit_E@. The @B_android#support#v4#app#FragmentManager#POP_BACK_STACK_INCLUSIVE_E@ flag can be used to control whether the named state itself is popped."], ["int", "int: Either 0 or @B_android#support#v4#app#FragmentManager#POP_BACK_STACK_INCLUSIVE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Pop all back stack states up to the one with the given identifier. This function is asynchronous -- it enqueues the request to pop, but the action will not be performed until the application returns to its event loop.", "history": "added in version 22.0.0", "FullName": "void popBackStack (int id, int flags)"}, "getFragment(android.os.Bundle, java.lang.String)": {"Returns": [["@B_android#support#v4#app#Fragment_E@", "Returns the current Fragment instance that is associated with the given reference."]], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: The bundle from which to retrieve the fragment reference."], ["@B_java#lang#String_E@", "String: The name of the entry in the bundle."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the current Fragment instance for a reference previously placed with @B_android#support#v4#app#FragmentManager#putFragment_E@.", "history": "added in version 22.0.0", "FullName": "Fragment getFragment (Bundle bundle, String key)"}, "findFragmentByTag(java.lang.String)": {"Returns": [["@B_android#support#v4#app#Fragment_E@", "The fragment if found or null otherwise."]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Finds a fragment that was identified by the given tag either when inflated from XML or as supplied when added in a transaction. This first searches through fragments that are currently added to the manager's activity; if no such fragment is found, then all fragments currently on the back stack are searched.", "history": "added in version 22.0.0", "FullName": "Fragment findFragmentByTag (String tag)"}, "isDestroyed()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the final @B_android#app#Activity#onDestroy_E@ call has been made on the FragmentManager's Activity, so this instance is now dead.", "history": "added in version 22.0.0", "FullName": "boolean isDestroyed ()"}, "popBackStackImmediate(int, int)": {"Returns": [["boolean", "Returns true if there was something popped, else false."]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Like @B_android#support#v4#app#FragmentManager#popBackStack_E@, but performs the operation immediately inside of the call. This is like calling @B_android#support#v4#app#FragmentManager#executePendingTransactions_E@ afterwards without forcing the start of postponed Transactions.", "history": "added in version 22.0.0", "FullName": "boolean popBackStackImmediate (int id, int flags)"}, "getFragments()": {"Returns": [["@B_java#util#List_E@", "A list of all fragments that are added to the FragmentManager."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get a list of all fragments that are currently added to the FragmentManager. This may include those that are hidden as well as those that are shown. This will not include any fragments only in the back stack, or fragments that are detached or removed. The order of the fragments in the list is the order in which they were added or attached.", "history": "added in version 25.4.0", "FullName": "List<Fragment> getFragments ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v4.app.FragmentManager", "ClassDesc": "Static library support version of the framework's https:##developer#android#com@B_android#app#FragmentManager_E@. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework @B_android#support#v4#app#FragmentManager_E@ documentation for a class overview. Your activity must derive from @B_android#support#v4#app#FragmentActivity_E@ to use this. From such an activity, you can acquire the @B_android#support#v4#app#FragmentManager_E@ by calling @B_android#support#v4#app#FragmentActivity#getSupportFragmentManager_E@."}