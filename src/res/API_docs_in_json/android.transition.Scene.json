{"Functions": {"Scene(android.view.ViewGroup, android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#ViewGroup_E@", "ViewGroup: The root of the hierarchy in which scene changes and transitions will take place."], ["@B_android#view#View_E@", "View: The view hierarchy of this scene, added as a child of sceneRoot when this scene is entered."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a Scene which, when entered, will remove any children from the sceneRoot container and add the layout object as a new child of that container.", "history": "added in API level 21", "FullName": "public Scene (ViewGroup sceneRoot, View layout)"}, "Scene(android.view.ViewGroup,android.view.ViewGroup)": {"Returns": [], "Parameters": [["@B_android#view#ViewGroup_E@", "ViewGroup no parameter comment"], ["@B_android#view#ViewGroup_E@", "ViewGroup no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "use @B_android#transition#Scene#Scene_E@.", "history": "Added in API level 19", "FullName": "public Scene (ViewGroup sceneRoot, ViewGroup layout)"}, "setExitAction(java.lang.Runnable)": {"Returns": [], "Parameters": [["@B_java#lang#Runnable_E@", "Runnable no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#transition#Scene#setEnterAction_E@", "@B_android#transition#Scene#Scene_E@"], "Permissions": [], "Description": "Scenes that are not defined with layout resources or hierarchies, or which need to perform additional steps after those hierarchies are changed to, should set an enter action, and possibly an exit action as well. An exit action will cause Scene to call back into application code to do anything the application needs to do after applicable transitions have captured pre-change values, but before any other scene changes have been applied, such as the new layout (if any) being added to the view hierarchy. After this method is called, the next scene will be entered, including a call to @B_android#transition#Scene#setEnterAction_E@ if an enter action is set.", "history": "Added in API level 19", "FullName": "public void setExitAction (Runnable action)"}, "setEnterAction(java.lang.Runnable)": {"Returns": [], "Parameters": [["@B_java#lang#Runnable_E@", "Runnable: The runnable whose @B_java#lang#Runnable#run_E@ method will be called when this scene is entered"]], "Throws": [], "SeeAlso": ["@B_android#transition#Scene#setExitAction_E@", "@B_android#transition#Scene#Scene_E@"], "Permissions": [], "Description": "Scenes that are not defined with layout resources or hierarchies, or which need to perform additional steps after those hierarchies are changed to, should set an enter action, and possibly an exit action as well. An enter action will cause Scene to call back into application code to do anything else the application needs after transitions have captured pre-change values and after any other scene changes have been applied, such as the layout (if any) being added to the view hierarchy. After this method is called, Transitions will be played.", "history": "Added in API level 19", "FullName": "public void setEnterAction (Runnable action)"}, "enter()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enters this scene, which entails changing all values that are specified by this scene. These may be values associated with a layout view group or layout resource file which will now be added to the scene root, or it may be values changed by an @B_android#transition#Scene#setEnterAction_E@ enter action}, or a combination of the these. No transition will be run when the scene is entered. To get transition behavior in scene changes, use one of the methods in @B_android#transition#TransitionManager_E@ instead.", "history": "Added in API level 19", "FullName": "public void enter ()"}, "getCurrentScene(android.view.ViewGroup)": {"Returns": [["@B_android#transition#Scene_E@", "The current Scene set on this ViewGroup. A value of null indicates that no Scene is currently set."]], "Parameters": [["@B_android#view#ViewGroup_E@", "ViewGroup: The ViewGroup on which the current scene will be returned This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the current @B_android#transition#Scene_E@ set on the given ViewGroup. A scene is set on a ViewGroup only if that ViewGroup is the scene root.", "history": "Added in API level 29", "FullName": "public static Scene getCurrentScene (ViewGroup sceneRoot)"}, "Scene(android.view.ViewGroup)": {"Returns": [], "Parameters": [["@B_android#view#ViewGroup_E@", "ViewGroup: The root of the hierarchy in which scene changes and transitions will take place."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a Scene with no information about how values will change when this scene is applied. This constructor might be used when a Scene is created with the intention of being dynamically configured, through setting @B_android#transition#Scene#setEnterAction_E@ and possibly @B_android#transition#Scene#setExitAction_E@.", "history": "Added in API level 19", "FullName": "public Scene (ViewGroup sceneRoot)"}, "getSceneRoot()": {"Returns": [["@B_android#view#ViewGroup_E@", "The root of the view hierarchy affected by this scene."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the root of the scene, which is the root of the view hierarchy affected by changes due to this scene, and which will be animated when this scene is entered.", "history": "Added in API level 19", "FullName": "public ViewGroup getSceneRoot ()"}, "getSceneForLayout(android.view.ViewGroup,int,android.content.Context)": {"Returns": [["@B_android#transition#Scene_E@", "The scene for the given root and layout id"]], "Parameters": [["@B_android#view#ViewGroup_E@", "ViewGroup: The root of the hierarchy in which scene changes and transitions will take place."], ["int", "int: The id of a standard layout resource file."], ["@B_android#content#Context_E@", "Context: The context used in the process of inflating the layout resource."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a Scene described by the resource file associated with the given layoutId parameter. If such a Scene has already been created for the given sceneRoot, that same Scene will be returned. This caching of layoutId-based scenes enables sharing of common scenes between those created in code and those referenced by @B_android#transition#TransitionManager_E@ XML resource files.", "history": "Added in API level 19", "FullName": "public static Scene getSceneForLayout (ViewGroup sceneRoot, int layoutId, Context context)"}, "exit()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Exits this scene, if it is the current scene on the scene's @B_android#transition#Scene#getSceneRoot_E@. The current scene is set when @B_android#transition#Scene#enter_E@ a scene. Exiting a scene runs the @B_android#transition#Scene#setExitAction_E@ if there is one.", "history": "Added in API level 19", "FullName": "public void exit ()"}, "Scene(android.view.ViewGroup,android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#ViewGroup_E@", "ViewGroup: The root of the hierarchy in which scene changes and transitions will take place."], ["@B_android#view#View_E@", "View: The view hierarchy of this scene, added as a child of sceneRoot when this scene is entered."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a Scene which, when entered, will remove any children from the sceneRoot container and add the layout object as a new child of that container.", "history": "Added in API level 21", "FullName": "public Scene (ViewGroup sceneRoot, View layout)"}}, "Inheritance": [], "ClassName": "android.transition.Scene", "ClassDesc": "A scene represents the collection of values that various properties in the View hierarchy will have when the scene is applied. A Scene can be configured to automatically run a Transition when it is applied, which will animate the various property changes that take place during the scene change."}