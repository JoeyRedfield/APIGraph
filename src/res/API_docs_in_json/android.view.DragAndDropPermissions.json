{"Functions": {"describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 24", "FullName": "public int describeContents ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 24", "FullName": "public void writeToParcel (Parcel destination, int flags)"}, "release()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Revoke permissions explicitly.", "history": "Added in API level 24", "FullName": "public void release ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 24", "FullName": "public void writeToParcel (Parcel destination, int flags)"}}, "Inheritance": [], "ClassName": "android.view.DragAndDropPermissions", "ClassDesc": "@B_android#view#DragAndDropPermissions_E@ controls the access permissions for the content URIs associated with a @B_android#view#DragEvent_E@. Permission are granted when this object is created by @B_android#app#Activity#requestDragAndDropPermissions_E@. Which permissions are granted is defined by the set of flags passed to @B_android#view#View#startDragAndDrop_E@ by the app that started the drag operation. The lifecycle of the permissions is bound to the activity used to call @B_android#app#Activity#requestDragAndDropPermissions_E@. The permissions are revoked when this activity is destroyed, or when @B_android#view#DragAndDropPermissions#release_E@ is called, whichever occurs first. If you anticipate that your application will receive a large number of drops (e.g. document editor), you should try to call @B_android#view#DragAndDropPermissions#release_E@ on the obtained permissions as soon as they are no longer required. Permissions can be added to your activity's @B_android#app#Activity#onSaveInstanceState_E@ bundle and later retrieved in order to manually release the permissions once they are no longer needed. Learn more about"}