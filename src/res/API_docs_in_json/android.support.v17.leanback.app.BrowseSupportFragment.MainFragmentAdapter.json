{"Functions": {"onTransitionEnd()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Callback indicating transition end.", "history": "added in version 24.0.0", "FullName": "void onTransitionEnd ()"}, "setAlignment(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the window alignment and also the pivots for scale operation.", "history": "added in version 24.0.0", "FullName": "void setAlignment (int windowAlignOffsetFromTop)"}, "BrowseSupportFragment.MainFragmentAdapter(T)": {"Returns": [], "Parameters": [["T", "T no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 24.0.0", "FullName": "BrowseSupportFragment.MainFragmentAdapter (T fragment)"}, "getFragment()": {"Returns": [["T", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 24.0.0", "FullName": "T getFragment ()"}, "isScrolling()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether its scrolling.", "history": "added in version 24.0.0", "FullName": "boolean isScrolling ()"}, "isScalingEnabled()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether row scaling is enabled.", "history": "added in version 24.0.0", "FullName": "boolean isScalingEnabled ()"}, "setScalingEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the row scaling property.", "history": "added in version 24.0.0", "FullName": "void setScalingEnabled (boolean scalingEnabled)"}, "getFragmentHost()": {"Returns": [["@B_android#support#v17#leanback#app#BrowseSupportFragment#FragmentHost_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current host interface so that main fragment can interact with @B_android#support#v17#leanback#app#BrowseSupportFragment_E@.", "history": "added in version 24.0.0", "FullName": "BrowseSupportFragment.FragmentHost getFragmentHost ()"}, "onTransitionPrepare()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Callback indicating transition prepare start.", "history": "added in version 24.0.0", "FullName": "boolean onTransitionPrepare ()"}, "setEntranceTransitionState(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "For rows that willing to participate entrance transition, this function hide views if afterTransition is true, show views if afterTransition is false.", "history": "added in version 24.0.0", "FullName": "void setEntranceTransitionState (boolean state)"}, "onTransitionStart()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Callback indicating transition start.", "history": "added in version 24.0.0", "FullName": "void onTransitionStart ()"}, "setExpand(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the visibility of titles/hovercard of browse rows.", "history": "added in version 24.0.0", "FullName": "void setExpand (boolean expand)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "@B_android#support#v4#app#Fragment_E@", "ClassDesc": "Interface that defines the interaction between @B_android#support#v17#leanback#app#BrowseSupportFragment_E@ and its main content fragment. The key method is @B_android#support#v17#leanback#app#BrowseSupportFragment#MainFragmentAdapter#getFragment_E@, it will be used to get the fragment to be shown in the content section. Clients can provide any implementation of fragment and customize its interaction with @B_android#support#v17#leanback#app#BrowseSupportFragment_E@ by overriding the necessary methods. Clients are expected to provide an instance of @B_android#support#v17#leanback#app#BrowseSupportFragment#MainFragmentAdapterRegistry_E@ which will be responsible for providing implementations of @B_android#support#v17#leanback#app#BrowseSupportFragment#MainFragmentAdapter_E@ for given content types. Currently we support different types of content - @B_android#support#v17#leanback#widget#ListRow_E@, @B_android#support#v17#leanback#widget#PageRow_E@ or any subtype of @B_android#support#v17#leanback#widget#Row_E@. We provide an out of the box adapter implementation for any rows other than @B_android#support#v17#leanback#widget#PageRow_E@ - @B_android#support#v17#leanback#app#RowsSupportFragment#MainFragmentAdapter_E@. @B_android#support#v17#leanback#widget#PageRow_E@ is intended to give full flexibility to developers in terms of Fragment design. Users will have to provide an implementation of @B_android#support#v17#leanback#app#BrowseSupportFragment#MainFragmentAdapter_E@ and provide that through @B_android#support#v17#leanback#app#BrowseSupportFragment#MainFragmentAdapterRegistry_E@. @B_android#support#v17#leanback#app#BrowseSupportFragment#MainFragmentAdapter_E@ implementation can supply any fragment and override just those interactions that makes sense."}