{"Functions": {"setLUT(android.renderscript.Allocation)": {"Returns": [], "Parameters": [["@B_android#renderscript#Allocation_E@", "Allocation no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the @B_android#renderscript#Allocation_E@ to be used as the lookup table. The lookup table must use the same @B_android#renderscript#Element_E@ as the intrinsic.", "history": "Added in API level 18", "FullName": "public void setLUT (Allocation lut)"}, "forEach(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)": {"Returns": [], "Parameters": [["@B_android#renderscript#Allocation_E@", "Allocation: Input allocation"], ["@B_android#renderscript#Allocation_E@", "Allocation: Output allocation"], ["@B_android#renderscript#Script#LaunchOptions_E@", "Script.LaunchOptions: Launch options for kernel"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Invoke the kernel and apply the lookup to each cell of ain and copy to aout.", "history": "Added in API level 21", "FullName": "public void forEach (Allocation ain, Allocation aout, Script.LaunchOptions opt)"}, "getKernelID()": {"Returns": [["@B_android#renderscript#Script#KernelID_E@", "Script.KernelID The KernelID object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get a KernelID for this intrinsic kernel.", "history": "Added in API level 18", "FullName": "public Script.KernelID getKernelID ()"}, "forEach(android.renderscript.Allocation,android.renderscript.Allocation)": {"Returns": [], "Parameters": [["@B_android#renderscript#Allocation_E@", "Allocation: Input allocation"], ["@B_android#renderscript#Allocation_E@", "Allocation: Output allocation"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Invoke the kernel and apply the lookup to each cell of ain and copy to aout.", "history": "Added in API level 18", "FullName": "public void forEach (Allocation ain, Allocation aout)"}, "create(android.renderscript.RenderScript,android.renderscript.Element)": {"Returns": [["@B_android#renderscript#ScriptIntrinsic3DLUT_E@", "ScriptIntrinsic3DLUT"]], "Parameters": [["@B_android#renderscript#RenderScript_E@", "RenderScript: The RenderScript context"], ["@B_android#renderscript#Element_E@", "Element: Element type for intputs and outputs"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Supported elements types are @B_android#renderscript#Element#U8_4_E@ The defaults tables are identity.", "history": "Added in API level 18", "FullName": "public static ScriptIntrinsic3DLUT create (RenderScript rs, Element e)"}}, "Inheritance": ["@B_android#renderscript#BaseObj_E@", "@B_android#renderscript#Script_E@", "@B_android#renderscript#ScriptIntrinsic_E@"], "ClassName": "android.renderscript.ScriptIntrinsic3DLUT", "ClassDesc": "Intrinsic for converting RGB to RGBA by using a 3D lookup table. The incoming r,g,b values are use as normalized x,y,z coordinates into a 3D allocation. The 8 nearest values are sampled and linearly interpolated. The result is placed in the output."}