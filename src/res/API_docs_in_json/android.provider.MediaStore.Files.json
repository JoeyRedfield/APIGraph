{"Functions": {"getContentUri(java.lang.String, long)": {"Returns": [["@B_android#net#Uri_E@", "the URI to the files table on the given volume"]], "Parameters": [["@B_java#lang#String_E@", "String: the name of the volume to get the URI for"], ["long", "long: the file to get the URI for"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the content:// style URI for a single row in the files table on the given volume.", "history": "added in API level 11", "FullName": "public static Uri getContentUri (String volumeName, long rowId)"}, "getContentUri(java.lang.String,long)": {"Returns": [["@B_android#net#Uri_E@", "the URI to the files table on the given volume"]], "Parameters": [["@B_java#lang#String_E@", "String: the name of the volume to get the URI for"], ["long", "long: the file to get the URI for"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the content:// style URI for a single row in the files table on the given volume.", "history": "Added in API level 11", "FullName": "public static Uri getContentUri (String volumeName, long rowId)"}, "MediaStore.Files()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 11", "FullName": "public MediaStore.Files ()"}, "getContentUri(java.lang.String)": {"Returns": [["@B_android#net#Uri_E@", "the URI to the files table on the given volume"]], "Parameters": [["@B_java#lang#String_E@", "String: the name of the volume to get the URI for"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the content:// style URI for the files table on the given volume.", "history": "Added in API level 11", "FullName": "public static Uri getContentUri (String volumeName)"}}, "Inheritance": [], "ClassName": "android.provider.MediaStore.Files", "ClassDesc": "Media provider table containing an index of all files in the media storage, including non-media files. This should be used by applications that work with non-media file types (text, HTML, PDF, etc) as well as applications that need to work with multiple media file types in a single query."}