{"Functions": {"getUserForAncestralSerialNumber(long)": {"Returns": [["@B_android#os#UserHandle_E@", "no returns description in source"]], "Parameters": [["long", "long no parameter comment"]], "Throws": [], "SeeAlso": ["_E@"], "Permissions": [], "Description": "Returns a @B_android#os#UserHandle_E@ for the user that has ancestralSerialNumber as the serial number of the its ancestral work profile or null if there is none. The ancestral serial number will have a corresponding @B_android#os#UserHandle_E@ if the device has a work profile that was restored from another work profile with serial number ancestralSerialNumber.", "history": "Added in API level 29", "FullName": "public UserHandle getUserForAncestralSerialNumber (long ancestralSerialNumber)"}, "dataChanged()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies the Android backup system that your application wishes to back up new changes to its data. A backup operation using your application's @B_android#app#backup#BackupAgent_E@ subclass will be scheduled when you call this method.", "history": "Added in API level 8", "FullName": "public void dataChanged ()"}, "requestRestore(android.app.backup.RestoreObserver)": {"Returns": [["int", "Zero on success; nonzero on error."]], "Parameters": [["@B_android#app#backup#RestoreObserver_E@", "RestoreObserver: The @B_android#app#backup#RestoreObserver_E@ to receive callbacks during the restore operation. This must not be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Applications shouldn't request a restore operation using this method. In Android P and later, this method is a no-op. Restore the calling application from backup. The data will be restored from the current backup dataset if the application has stored data there, or from the dataset used during the last full device setup operation if the current backup dataset has no matching data. If no backup data exists for this application in either source, a non-zero value is returned. If this method returns zero (meaning success), the OS attempts to retrieve a backed-up dataset from the remote transport, instantiate the application's backup agent, and pass the dataset to the agent's @B_android#app#backup#BackupAgent#onRestore_E@ method. Unlike other restore operations, this method doesn't terminate the application after the restore. The application continues running to receive the @B_android#app#backup#RestoreObserver_E@ callbacks on the observer argument. Full backups use an @B_android#app#Application_E@ base class while key-value backups use the application subclass declared in the AndroidManifest.xml <application> tag.", "history": "Added in API level 8 Deprecated in API level 28", "FullName": "public int requestRestore (RestoreObserver observer)"}, "dataChanged(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The package name identifying the application to back up."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Convenience method for callers who need to indicate that some other package needs a backup pass. This can be useful in the case of groups of packages that share a uid. This method requires that the application hold the \"android.permission.BACKUP\" permission if the package named in the argument does not run under the same uid as the caller.", "history": "Added in API level 8", "FullName": "public static void dataChanged (String packageName)"}, "BackupManager(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The @B_android#content#Context_E@ that was provided when one of your application's @B_android#app#Activity_E@ was created."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a BackupManager object through which the application can communicate with the Android backup system.", "history": "Added in API level 8", "FullName": "public BackupManager (Context context)"}}, "Inheritance": [], "ClassName": "android.app.backup.BackupManager", "ClassDesc": "The interface through which an application interacts with the Android backup service to request backup and restore operations. Applications instantiate it using the constructor and issue calls through that instance. When an application has made changes to data which should be backed up, a call to @B_android#app#backup#BackupManager#dataChanged_E@ will notify the backup service. The system will then schedule a backup operation to occur in the near future. Repeated calls to @B_android#app#backup#BackupManager#dataChanged_E@ have no further effect until the backup operation actually occurs. A backup or restore operation for your application begins when the system launches the @B_android#app#backup#BackupAgent_E@ subclass you've declared in your manifest. See the documentation for @B_android#app#backup#BackupAgent_E@ for a detailed description of how the operation then proceeds. Several attributes affecting the operation of the backup and restore mechanism can be set on the #guide#topics#manifest#application-element_E@ tag in your application's AndroidManifest.xml file."}