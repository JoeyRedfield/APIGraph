{"Functions": {"getTitle(android.database.CharArrayBuffer)": {"Returns": [], "Parameters": [["CharArrayBuffer", "The buffer to load the data into."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Loads the player's title into the given @B_android#database#CharArrayBuffer_E@.", "history": "", "FullName": "public void getTitle (CharArrayBuffer dataOut)"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "isDataValid()": {"Returns": [["", "whether or not the object is valid for use."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check to see if this object is valid for use. If the object is still volatile, this method will indicate whether or not the object can be safely used. The output of a call to @B_com#google#android#gms#common#data#Freezable#freeze_E@ will always be valid.", "history": "", "FullName": "public boolean isDataValid ()"}, "getRetrievedTimestamp()": {"Returns": [["", "The timestamp (in ms since epoch) at which the player data was last updated locally."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the timestamp at which this player record was last updated locally.", "history": "", "FullName": "public long getRetrievedTimestamp ()"}, "freeze()": {"Returns": [["", "A concrete implementation of the data object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Freeze a volatile representation into an immutable representation. Objects returned from this call are safe to cache. Note that the output of freeze may not be identical to the parent object, but should be equal. In other words:", "history": "", "FullName": "public Player freeze ()"}, "getPlayerId()": {"Returns": [["", "The player ID."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the ID of this player.", "history": "", "FullName": "public String getPlayerId ()"}, "describeContents()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int describeContents ()"}, "toString()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public String toString ()"}, "getLastPlayedWithTimestamp()": {"Returns": [["", "The timestamp (in ms since epoch) at which the player last played a multiplayer game with the currently signed in user."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the timestamp at which this player last played a multiplayer game with the currently signed in user. If the timestamp is not found, this method returns @B_com#google#android#gms#games#Player#TIMESTAMP_UNKNOWN_E@.", "history": "", "FullName": "public long getLastPlayedWithTimestamp ()"}, "getTitle()": {"Returns": [["", "The player's title, or null if this player has no title."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the title of the player. This is based on the player's gameplay activity in apps using Google Play Games services. Note that not all players have titles, and that a player's title may change over time.", "history": "", "FullName": "public String getTitle ()"}, "getHiResImageUri()": {"Returns": [["", "The image URI for the player's hi-res profile image, or null if the player has none."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the URI for loading this player's hi-res profile image. Returns null if the player has no profile image. To retrieve the Image from the @B_android#net#Uri_E@, use @B_com#google#android#gms#common#images#ImageManager_E@.", "history": "", "FullName": "public Uri getHiResImageUri ()"}, "getLevelInfo()": {"Returns": [["", "The @B_com#google#android#gms#games#PlayerLevelInfo_E@ associated with this player, if any."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the player level associated information if any exists. If no level information exists for this player, this method will return null.", "history": "", "FullName": "public PlayerLevelInfo getLevelInfo ()"}, "getDisplayName()": {"Returns": [["", "The player's display name."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the display name for this player.", "history": "", "FullName": "public String getDisplayName ()"}, "equals(java.lang.Object)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public boolean equals (Object obj)"}, "getIconImageUri()": {"Returns": [["", "The image URI for the player's icon-size profile image, or null if the player has none."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the URI for loading this player's icon-size profile image. Returns null if the player has no profile image. To retrieve the Image from the @B_android#net#Uri_E@, use @B_com#google#android#gms#common#images#ImageManager_E@.", "history": "", "FullName": "public Uri getIconImageUri ()"}, "hashCode()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int hashCode ()"}, "getDisplayName(android.database.CharArrayBuffer)": {"Returns": [], "Parameters": [["CharArrayBuffer", "The buffer to load the data into."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Loads the player's display name into the given @B_android#database#CharArrayBuffer_E@.", "history": "", "FullName": "public void getDisplayName (CharArrayBuffer dataOut)"}, "hasIconImage()": {"Returns": [["", "Whether the player has an icon-size profile image to display."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether this player has an icon-size profile image to display.", "history": "", "FullName": "public boolean hasIconImage ()"}, "hasHiResImage()": {"Returns": [["", "Whether the player has a hi-res profile image to display."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether this player has a hi-res profile image to display.", "history": "", "FullName": "public boolean hasHiResImage ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.games.PlayerEntity", "ClassDesc": "Data object representing a set of Player data. This is immutable, and therefore safe to cache or store. Note, however, that the data it represents may grow stale. This class exists solely to support parceling these objects and should not be used directly."}