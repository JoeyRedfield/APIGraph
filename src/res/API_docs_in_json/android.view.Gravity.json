{"Functions": {"isHorizontal(int)": {"Returns": [["boolean", "true if the supplied gravity has an horizontal pull"]], "Parameters": [["int", "int: the gravity to check for horizontal pull"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicate whether the supplied gravity has an horizontal pull.", "history": "Added in API level 1", "FullName": "public static boolean isHorizontal (int gravity)"}, "apply(int,int,int,android.graphics.Rect,android.graphics.Rect)": {"Returns": [], "Parameters": [["int", "int: The desired placement of the object, as defined by the constants in this class."], ["int", "int: The horizontal size of the object."], ["int", "int: The vertical size of the object."], ["@B_android#graphics#Rect_E@", "Rect: The frame of the containing space, in which the object will be placed. Should be large enough to contain the width and height of the object."], ["@B_android#graphics#Rect_E@", "Rect: Receives the computed frame of the object in its container."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Apply a gravity constant to an object. This supposes that the layout direction is LTR.", "history": "Added in API level 1", "FullName": "public static void apply (int gravity, int w, int h, Rect container, Rect outRect)"}, "Gravity()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public Gravity ()"}, "isVertical(int)": {"Returns": [["boolean", "true if the supplied gravity has a vertical pull"]], "Parameters": [["int", "int: the gravity to check for vertical pull"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicate whether the supplied gravity has a vertical pull.", "history": "Added in API level 1", "FullName": "public static boolean isVertical (int gravity)"}, "applyDisplay(int,android.graphics.Rect,android.graphics.Rect)": {"Returns": [], "Parameters": [["int", "int: Gravity constants to modify the placement within the display."], ["@B_android#graphics#Rect_E@", "Rect: The rectangle of the display in which the object is being placed."], ["@B_android#graphics#Rect_E@", "Rect: Supplies the current object position; returns with it modified if needed to fit in the display."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Apply additional gravity behavior based on the overall \"display\" that an object exists in. This can be used after @B_android#view#Gravity#apply_E@ to place the object within a visible display. By default this moves or clips the object to be visible in the display; the gravity flags @B_android#view#Gravity#DISPLAY_CLIP_HORIZONTAL_E@ and @B_android#view#Gravity#DISPLAY_CLIP_VERTICAL_E@ can be used to change this behavior.", "history": "Added in API level 3", "FullName": "public static void applyDisplay (int gravity, Rect display, Rect inoutObj)"}, "applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)": {"Returns": [], "Parameters": [["int", "int: Gravity constants to modify the placement within the display."], ["@B_android#graphics#Rect_E@", "Rect: The rectangle of the display in which the object is being placed."], ["@B_android#graphics#Rect_E@", "Rect: Supplies the current object position; returns with it modified if needed to fit in the display."], ["int", "int: The layout direction."]], "Throws": [], "SeeAlso": ["@B_android#view#View_E@"], "Permissions": [], "Description": "Apply additional gravity behavior based on the overall \"display\" that an object exists in. This can be used after @B_android#view#Gravity#apply_E@ to place the object within a visible display. By default this moves or clips the object to be visible in the display; the gravity flags @B_android#view#Gravity#DISPLAY_CLIP_HORIZONTAL_E@ and @B_android#view#Gravity#DISPLAY_CLIP_VERTICAL_E@ can be used to change this behavior.", "history": "Added in API level 17", "FullName": "public static void applyDisplay (int gravity, Rect display, Rect inoutObj, int layoutDirection)"}, "getAbsoluteGravity(int,int)": {"Returns": [["int", "gravity converted to absolute (horizontal) values."]], "Parameters": [["int", "int: The gravity to convert to absolute (horizontal) values."], ["int", "int: The layout direction."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Convert script specific gravity to absolute horizontal value. if horizontal direction is LTR, then START will set LEFT and END will set RIGHT. if horizontal direction is RTL, then START will set RIGHT and END will set LEFT.", "history": "Added in API level 14", "FullName": "public static int getAbsoluteGravity (int gravity, int layoutDirection)"}, "getAbsoluteGravity(int, int)": {"Returns": [["int", "gravity converted to absolute (horizontal) values."]], "Parameters": [["int", "int: The gravity to convert to absolute (horizontal) values."], ["int", "int: The layout direction."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Convert script specific gravity to absolute horizontal value. if horizontal direction is LTR, then START will set LEFT and END will set RIGHT. if horizontal direction is RTL, then START will set RIGHT and END will set LEFT.", "history": "added in API level 14", "FullName": "public static int getAbsoluteGravity (int gravity, int layoutDirection)"}, "apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect)": {"Returns": [], "Parameters": [["int", "int: The desired placement of the object, as defined by the constants in this class."], ["int", "int: The horizontal size of the object."], ["int", "int: The vertical size of the object."], ["@B_android#graphics#Rect_E@", "Rect: The frame of the containing space, in which the object will be placed. Should be large enough to contain the width and height of the object."], ["int", "int: Offset to apply to the X axis. If gravity is LEFT this pushes it to the right; if gravity is RIGHT it pushes it to the left; if gravity is CENTER_HORIZONTAL it pushes it to the right or left; otherwise it is ignored."], ["int", "int: Offset to apply to the Y axis. If gravity is TOP this pushes it down; if gravity is BOTTOM it pushes it up; if gravity is CENTER_VERTICAL it pushes it down or up; otherwise it is ignored."], ["@B_android#graphics#Rect_E@", "Rect: Receives the computed frame of the object in its container."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Apply a gravity constant to an object.", "history": "Added in API level 1", "FullName": "public static void apply (int gravity, int w, int h, Rect container, int xAdj, int yAdj, Rect outRect)"}, "apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)": {"Returns": [], "Parameters": [["int", "int: The desired placement of the object, as defined by the constants in this class."], ["int", "int: The horizontal size of the object."], ["int", "int: The vertical size of the object."], ["@B_android#graphics#Rect_E@", "Rect: The frame of the containing space, in which the object will be placed. Should be large enough to contain the width and height of the object."], ["int", "int: Offset to apply to the X axis. If gravity is LEFT this pushes it to the right; if gravity is RIGHT it pushes it to the left; if gravity is CENTER_HORIZONTAL it pushes it to the right or left; otherwise it is ignored."], ["int", "int: Offset to apply to the Y axis. If gravity is TOP this pushes it down; if gravity is BOTTOM it pushes it up; if gravity is CENTER_VERTICAL it pushes it down or up; otherwise it is ignored."], ["@B_android#graphics#Rect_E@", "Rect: Receives the computed frame of the object in its container."], ["int", "int: The layout direction."]], "Throws": [], "SeeAlso": ["@B_android#view#View_E@"], "Permissions": [], "Description": "Apply a gravity constant to an object.", "history": "Added in API level 17", "FullName": "public static void apply (int gravity, int w, int h, Rect container, int xAdj, int yAdj, Rect outRect, int layoutDirection)"}, "apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)": {"Returns": [], "Parameters": [["int", "int: The desired placement of the object, as defined by the constants in this class."], ["int", "int: The horizontal size of the object."], ["int", "int: The vertical size of the object."], ["@B_android#graphics#Rect_E@", "Rect: The frame of the containing space, in which the object will be placed. Should be large enough to contain the width and height of the object."], ["@B_android#graphics#Rect_E@", "Rect: Receives the computed frame of the object in its container."], ["int", "int: The layout direction."]], "Throws": [], "SeeAlso": ["@B_android#view#View_E@"], "Permissions": [], "Description": "Apply a gravity constant to an object and take care if layout direction is RTL or not.", "history": "Added in API level 17", "FullName": "public static void apply (int gravity, int w, int h, Rect container, Rect outRect, int layoutDirection)"}}, "Inheritance": [], "ClassName": "android.view.Gravity", "ClassDesc": "Standard constants and tools for placing an object within a potentially larger container."}