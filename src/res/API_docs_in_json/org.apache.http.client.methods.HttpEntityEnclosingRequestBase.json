{"Functions": {"HttpEntityEnclosingRequestBase()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public HttpEntityEnclosingRequestBase ()"}, "getEntity()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public HttpEntity getEntity ()"}, "clone()": {"Returns": [["", "a copy of this object."]], "Parameters": [], "Throws": [["@B_java#lang#CloneNotSupportedException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Creates and returns a copy of this Object. The default implementation returns a so-called \"shallow\" copy: It creates a new instance of the same class and then copies the field values (including object references) from this instance to the new instance. A \"deep\" copy, in contrast, would also recursively clone nested objects. A subclass that needs to implement this kind of cloning should call super.clone() to create the new instance and then create deep copies of the nested, mutable objects.", "history": "Added in API level 1", "FullName": "public Object clone ()"}, "expectContinue()": {"Returns": [["", "true if the expect continue handshake should be used, false if not."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tells if this request should use the expect-continue handshake. The expect continue handshake gives the server a chance to decide whether to accept the entity enclosing request before the possibly lengthy entity is sent across the wire.", "history": "Added in API level 1", "FullName": "public boolean expectContinue ()"}, "setEntity(org.apache.http.HttpEntity)": {"Returns": [], "Parameters": [["@B_org#apache#http#HttpEntity_E@", "the entity to send."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Hands the entity to the request.", "history": "Added in API level 1", "FullName": "public void setEntity (HttpEntity entity)"}}, "Inheritance": ["@B_org#apache#http#message#AbstractHttpMessage_E@", "@B_org#apache#http#client#methods#HttpRequestBase_E@"], "ClassName": "org.apache.http.client.methods.HttpEntityEnclosingRequestBase", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Basic implementation of an HTTP request that can be modified."}