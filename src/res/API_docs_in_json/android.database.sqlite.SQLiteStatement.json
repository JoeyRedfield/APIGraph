{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 1", "FullName": "public String toString ()"}, "simpleQueryForString()": {"Returns": [["@B_java#lang#String_E@", "The result of the query."]], "Parameters": [], "Throws": [["@B_android#database#sqlite#SQLiteDoneException_E@", "if the query returns zero rows"]], "SeeAlso": [], "Permissions": [], "Description": "Execute a statement that returns a 1 by 1 table with a text value. For example, SELECT COUNT(*) FROM table;", "history": "Added in API level 1", "FullName": "public String simpleQueryForString ()"}, "simpleQueryForBlobFileDescriptor()": {"Returns": [["@B_android#os#ParcelFileDescriptor_E@", "A read-only file descriptor for a copy of the blob value, or null if the value is null or could not be read for some reason."]], "Parameters": [], "Throws": [["@B_android#database#sqlite#SQLiteDoneException_E@", "if the query returns zero rows"]], "SeeAlso": [], "Permissions": [], "Description": "Executes a statement that returns a 1 by 1 table with a blob value.", "history": "Added in API level 11", "FullName": "public ParcelFileDescriptor simpleQueryForBlobFileDescriptor ()"}, "simpleQueryForLong()": {"Returns": [["long", "The result of the query."]], "Parameters": [], "Throws": [["@B_android#database#sqlite#SQLiteDoneException_E@", "if the query returns zero rows"]], "SeeAlso": [], "Permissions": [], "Description": "Execute a statement that returns a 1 by 1 table with a numeric value. For example, SELECT COUNT(*) FROM table;", "history": "Added in API level 1", "FullName": "public long simpleQueryForLong ()"}, "executeUpdateDelete()": {"Returns": [["int", "the number of rows affected by this SQL statement execution."]], "Parameters": [], "Throws": [["@B_android#database#SQLException_E@", "If the SQL string is invalid for some reason"]], "SeeAlso": [], "Permissions": [], "Description": "Execute this SQL statement, if the number of rows affected by execution of this SQL statement is of any importance to the caller - for example, UPDATE / DELETE SQL statements.", "history": "Added in API level 11", "FullName": "public int executeUpdateDelete ()"}, "executeInsert()": {"Returns": [["long", "the row ID of the last row inserted, if this insert is successful. -1 otherwise."]], "Parameters": [], "Throws": [["@B_android#database#SQLException_E@", "If the SQL string is invalid for some reason"]], "SeeAlso": [], "Permissions": [], "Description": "Execute this SQL statement and return the ID of the row inserted due to this call. The SQL statement should be an INSERT for this to be a useful call.", "history": "Added in API level 1", "FullName": "public long executeInsert ()"}, "execute()": {"Returns": [], "Parameters": [], "Throws": [["@B_android#database#SQLException_E@", "If the SQL string is invalid for some reason"]], "SeeAlso": [], "Permissions": [], "Description": "Execute this SQL statement, if it is not a SELECT / INSERT / DELETE / UPDATE, for example CREATE / DROP table, view, trigger, index etc.", "history": "Added in API level 1", "FullName": "public void execute ()"}}, "Inheritance": ["@B_android#database#sqlite#SQLiteClosable_E@", "@B_android#database#sqlite#SQLiteProgram_E@"], "ClassName": "android.database.sqlite.SQLiteStatement", "ClassDesc": "Represents a statement that can be executed against a database. The statement cannot return multiple rows or columns, but single value (1 x 1) result sets are supported. This class is not thread-safe."}