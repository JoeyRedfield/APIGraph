{"Functions": {"cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: The cursor to read from"], ["@B_java#lang#String_E@", "String: The TEXT field to read"], ["@B_android#content#ContentValues_E@", "ContentValues: The @B_android#content#ContentValues_E@ to put the value into, with the field as the key"], ["@B_java#lang#String_E@", "String: The key to store the value with in the map"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads a String out of a field in a Cursor and writes it to a Map.", "history": "Added in API level 1", "FullName": "public static void cursorStringToContentValues (Cursor cursor, String field, ContentValues values, String key)"}, "queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)": {"Returns": [["long", "the number of rows in the table filtered by the selection"]], "Parameters": [["@B_android#database#sqlite#SQLiteDatabase_E@", "SQLiteDatabase: the database the table is in"], ["@B_java#lang#String_E@", "String: the name of the table to query"], ["@B_java#lang#String_E@", "String: A filter declaring which rows to return, formatted as an SQL WHERE clause (excluding the WHERE itself). Passing null will count all rows for the given table"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Query the table for the number of rows in the table.", "history": "Added in API level 11", "FullName": "public static long queryNumEntries (SQLiteDatabase db, String table, String selection)"}, "cursorDoubleToCursorValues(android.database.Cursor,java.lang.String,android.content.ContentValues)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: The cursor to read from"], ["@B_java#lang#String_E@", "String: The REAL field to read"], ["@B_android#content#ContentValues_E@", "ContentValues: The @B_android#content#ContentValues_E@ to put the value into"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads a Double out of a field in a Cursor and writes it to a Map.", "history": "Added in API level 1", "FullName": "public static void cursorDoubleToCursorValues (Cursor cursor, String field, ContentValues values)"}, "cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: The cursor to read from"], ["@B_android#content#ContentValues_E@", "ContentValues: The @B_android#content#ContentValues_E@ to put the value into"], ["@B_java#lang#String_E@", "String: The column to read"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads a Long out of a column in a Cursor and writes it to a ContentValues. Adds nothing to the ContentValues if the column isn't present or if its value is null.", "history": "Added in API level 8", "FullName": "public static void cursorLongToContentValuesIfPresent (Cursor cursor, ContentValues values, String column)"}, "queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)": {"Returns": [["long", "the number of rows in the table"]], "Parameters": [["@B_android#database#sqlite#SQLiteDatabase_E@", "SQLiteDatabase: the database the table is in"], ["@B_java#lang#String_E@", "String: the name of the table to query"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Query the table for the number of rows in the table.", "history": "Added in API level 1", "FullName": "public static long queryNumEntries (SQLiteDatabase db, String table)"}, "readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel no parameter comment"]], "Throws": [["@B_java#io#FileNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public static void readExceptionWithFileNotFoundExceptionFromParcel (Parcel reply)"}, "longForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])": {"Returns": [["long", "no returns description in source"]], "Parameters": [["@B_android#database#sqlite#SQLiteStatement_E@", "SQLiteStatement no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Utility method to run the pre-compiled query and return the value in the first column of the first row.", "history": "Added in API level 1", "FullName": "public static long longForQuery (SQLiteStatement prog, String[] selectionArgs)"}, "queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String[])": {"Returns": [["long", "the number of rows in the table filtered by the selection"]], "Parameters": [["@B_android#database#sqlite#SQLiteDatabase_E@", "SQLiteDatabase: the database the table is in"], ["@B_java#lang#String_E@", "String: the name of the table to query"], ["@B_java#lang#String_E@", "String: A filter declaring which rows to return, formatted as an SQL WHERE clause (excluding the WHERE itself). Passing null will count all rows for the given table"], ["@B_java#lang#String_E@", "String: You may include ?s in selection, which will be replaced by the values from selectionArgs, in order that they appear in the selection. The values will be bound as Strings."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Query the table for the number of rows in the table.", "history": "Added in API level 11", "FullName": "public static long queryNumEntries (SQLiteDatabase db, String table, String selection, String[] selectionArgs)"}, "getCollationKey(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "the collation key"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "return the collation key", "history": "Added in API level 1", "FullName": "public static String getCollationKey (String name)"}, "cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: The cursor to read from"], ["@B_java#lang#String_E@", "String: The INTEGER field to read"], ["@B_android#content#ContentValues_E@", "ContentValues: The @B_android#content#ContentValues_E@ to put the value into, with the field as the key"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads an Integer out of a field in a Cursor and writes it to a Map.", "history": "Added in API level 1", "FullName": "public static void cursorIntToContentValues (Cursor cursor, String field, ContentValues values)"}, "dumpCursor(android.database.Cursor)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: the cursor to print"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Prints the contents of a Cursor to System.out. The position is restored after printing.", "history": "Added in API level 1", "FullName": "public static void dumpCursor (Cursor cursor)"}, "cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: The cursor to read from"], ["@B_java#lang#String_E@", "String: The INTEGER field to read"], ["@B_android#content#ContentValues_E@", "ContentValues: The @B_android#content#ContentValues_E@ to put the value into, with the field as the key"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads a Long out of a field in a Cursor and writes it to a Map.", "history": "Added in API level 1", "FullName": "public static void cursorLongToContentValues (Cursor cursor, String field, ContentValues values)"}, "blobFileDescriptorForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])": {"Returns": [["@B_android#os#ParcelFileDescriptor_E@", "A read-only file descriptor for a copy of the blob value."]], "Parameters": [["@B_android#database#sqlite#SQLiteDatabase_E@", "SQLiteDatabase no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Utility method to run the query on the db and return the blob value in the first column of the first row.", "history": "Added in API level 11", "FullName": "public static ParcelFileDescriptor blobFileDescriptorForQuery (SQLiteDatabase db, String query, String[] selectionArgs)"}, "readExceptionWithOperationApplicationExceptionFromParcel(android.os.Parcel)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel no parameter comment"]], "Throws": [["@B_android#content#OperationApplicationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 5", "FullName": "public static void readExceptionWithOperationApplicationExceptionFromParcel (Parcel reply)"}, "cursorRowToContentValues(android.database.Cursor,android.content.ContentValues)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: the cursor to read from."], ["@B_android#content#ContentValues_E@", "ContentValues: the @B_android#content#ContentValues_E@ to put the row into."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Read the entire contents of a cursor row and store them in a ContentValues.", "history": "Added in API level 1", "FullName": "public static void cursorRowToContentValues (Cursor cursor, ContentValues values)"}, "createDbFromSqlStatements(android.content.Context,java.lang.String,int,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: the context to use to create the db"], ["@B_java#lang#String_E@", "String: the name of the db to create"], ["int", "int: the version to set on the db"], ["@B_java#lang#String_E@", "String: the statements to use to populate the db. This should be a single string of the form returned by sqlite3's .dump command (statements separated by semicolons)"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a db and populates it with the sql statements in sqlStatements.", "history": "Added in API level 1", "FullName": "public static void createDbFromSqlStatements (Context context, String dbName, int dbVersion, String sqlStatements)"}, "writeExceptionToParcel(android.os.Parcel,java.lang.Exception)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: Parcel to write to"], ["@B_java#lang#Exception_E@", "Exception: The Exception to be written."]], "Throws": [], "SeeAlso": ["@B_android#os#Parcel#writeNoException_E@", "@B_android#os#Parcel#writeException_E@"], "Permissions": [], "Description": "Special function for writing an exception result at the header of a parcel, to be used when returning an exception from a transaction. exception will be re-thrown by the function in another process", "history": "Added in API level 1", "FullName": "public static final void writeExceptionToParcel (Parcel reply, Exception e)"}, "dumpCursor(android.database.Cursor,java.io.PrintStream)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: the cursor to print"], ["@B_java#io#PrintStream_E@", "PrintStream: the stream to print to"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Prints the contents of a Cursor to a PrintSteam. The position is restored after printing.", "history": "Added in API level 1", "FullName": "public static void dumpCursor (Cursor cursor, PrintStream stream)"}, "appendSelectionArgs(java.lang.String[],java.lang.String[])": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Appends one set of selection args to another. This is useful when adding a selection argument to a user provided set.", "history": "Added in API level 11", "FullName": "public static String[] appendSelectionArgs (String[] originalValues, String[] newValues)"}, "stringForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["@B_android#database#sqlite#SQLiteStatement_E@", "SQLiteStatement no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Utility method to run the pre-compiled query and return the value in the first column of the first row.", "history": "Added in API level 1", "FullName": "public static String stringForQuery (SQLiteStatement prog, String[] selectionArgs)"}, "readExceptionFromParcel(android.os.Parcel)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: Parcel to read from"]], "Throws": [], "SeeAlso": ["@B_android#os#Parcel#writeNoException_E@", "@B_android#os#Parcel#readException_E@"], "Permissions": [], "Description": "Special function for reading an exception result from the header of a parcel, to be used after receiving the result of a transaction. This will throw the exception for you if it had been written to the Parcel, otherwise return and let you read the normal result data from the Parcel.", "history": "Added in API level 1", "FullName": "public static final void readExceptionFromParcel (Parcel reply)"}, "appendEscapedSQLString(java.lang.StringBuilder,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#StringBuilder_E@", "StringBuilder: the StringBuilder that the SQL string will be appended to"], ["@B_java#lang#String_E@", "String: the raw string to be appended, which may contain single quotes"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Appends an SQL string to the given StringBuilder, including the opening and closing single quotes. Any single quotes internal to sqlString will be escaped. This method is deprecated because we want to encourage everyone to use the \"?\" binding form. However, when implementing a ContentProvider, one may want to add WHERE clauses that were not provided by the caller. Since \"?\" is a positional form, using it in this case could break the caller because the indexes would be shifted to accomodate the ContentProvider's internal bindings. In that case, it may be necessary to construct a WHERE clause manually. This method is useful for those cases.", "history": "Added in API level 1", "FullName": "public static void appendEscapedSQLString (StringBuilder sb, String sqlString)"}, "cursorDoubleToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: The cursor to read from"], ["@B_android#content#ContentValues_E@", "ContentValues: The @B_android#content#ContentValues_E@ to put the value into"], ["@B_java#lang#String_E@", "String: The column to read"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads a Double out of a column in a Cursor and writes it to a ContentValues. Adds nothing to the ContentValues if the column isn't present or if its value is null.", "history": "Added in API level 8", "FullName": "public static void cursorDoubleToContentValuesIfPresent (Cursor cursor, ContentValues values, String column)"}, "cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: The cursor to read from"], ["@B_android#content#ContentValues_E@", "ContentValues: The @B_android#content#ContentValues_E@ to put the value into"], ["@B_java#lang#String_E@", "String: The column to read"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads a String out of a column in a Cursor and writes it to a ContentValues. Adds nothing to the ContentValues if the column isn't present or if its value is null.", "history": "Added in API level 8", "FullName": "public static void cursorStringToContentValuesIfPresent (Cursor cursor, ContentValues values, String column)"}, "getHexCollationKey(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "the collation key in hex format"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "return the collation key in hex format", "history": "Added in API level 1", "FullName": "public static String getHexCollationKey (String name)"}, "concatenateWhere(java.lang.String,java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Concatenates two SQL WHERE clauses, handling empty or null values.", "history": "Added in API level 11", "FullName": "public static String concatenateWhere (String a, String b)"}, "dumpCursorToString(android.database.Cursor)": {"Returns": [["@B_java#lang#String_E@", "a String that contains the dumped cursor"]], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: the cursor to print"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Prints the contents of a Cursor to a String. The position is restored after printing.", "history": "Added in API level 1", "FullName": "public static String dumpCursorToString (Cursor cursor)"}, "dumpCurrentRow(android.database.Cursor,java.lang.StringBuilder)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: the cursor to print"], ["@B_java#lang#StringBuilder_E@", "StringBuilder: the StringBuilder to print to"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Prints the contents of a Cursor's current row to a StringBuilder.", "history": "Added in API level 1", "FullName": "public static void dumpCurrentRow (Cursor cursor, StringBuilder sb)"}, "longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])": {"Returns": [["long", "no returns description in source"]], "Parameters": [["@B_android#database#sqlite#SQLiteDatabase_E@", "SQLiteDatabase no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Utility method to run the query on the db and return the value in the first column of the first row.", "history": "Added in API level 1", "FullName": "public static long longForQuery (SQLiteDatabase db, String query, String[] selectionArgs)"}, "cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: The cursor to read from"], ["@B_java#lang#String_E@", "String: The TEXT field to read"], ["@B_android#content#ContentValues_E@", "ContentValues: The @B_android#content#ContentValues_E@ to put the value into, with the field as the key"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads a String out of a field in a Cursor and writes it to a Map.", "history": "Added in API level 1", "FullName": "public static void cursorStringToContentValues (Cursor cursor, String field, ContentValues values)"}, "cursorDoubleToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: The cursor to read from"], ["@B_java#lang#String_E@", "String: The REAL field to read"], ["@B_android#content#ContentValues_E@", "ContentValues: The @B_android#content#ContentValues_E@ to put the value into"], ["@B_java#lang#String_E@", "String: The key to store the value with in the map"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads a Double out of a field in a Cursor and writes it to a Map.", "history": "Added in API level 1", "FullName": "public static void cursorDoubleToContentValues (Cursor cursor, String field, ContentValues values, String key)"}, "cursorStringToInsertHelper(android.database.Cursor,java.lang.String,android.database.DatabaseUtils.InsertHelper,int)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: The cursor to read from"], ["@B_java#lang#String_E@", "String: The TEXT field to read"], ["@B_android#database#DatabaseUtils#InsertHelper_E@", "DatabaseUtils.InsertHelper: The InsertHelper to bind into"], ["int", "int: the index of the bind entry in the InsertHelper"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads a String out of a field in a Cursor and writes it to an InsertHelper.", "history": "Added in API level 1", "FullName": "public static void cursorStringToInsertHelper (Cursor cursor, String field, DatabaseUtils.InsertHelper inserter, int index)"}, "dumpCursor(android.database.Cursor,java.lang.StringBuilder)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: the cursor to print"], ["@B_java#lang#StringBuilder_E@", "StringBuilder: the StringBuilder to print to"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Prints the contents of a Cursor to a StringBuilder. The position is restored after printing.", "history": "Added in API level 1", "FullName": "public static void dumpCursor (Cursor cursor, StringBuilder sb)"}, "sqlEscapeString(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "SQL-escape a string.", "history": "Added in API level 1", "FullName": "public static String sqlEscapeString (String value)"}, "stringForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["@B_android#database#sqlite#SQLiteDatabase_E@", "SQLiteDatabase no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Utility method to run the query on the db and return the value in the first column of the first row.", "history": "Added in API level 1", "FullName": "public static String stringForQuery (SQLiteDatabase db, String query, String[] selectionArgs)"}, "dumpCurrentRow(android.database.Cursor,java.io.PrintStream)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: the cursor to print"], ["@B_java#io#PrintStream_E@", "PrintStream: the stream to print to"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Prints the contents of a Cursor's current row to a PrintSteam.", "history": "Added in API level 1", "FullName": "public static void dumpCurrentRow (Cursor cursor, PrintStream stream)"}, "cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: The cursor to read from"], ["@B_android#content#ContentValues_E@", "ContentValues: The @B_android#content#ContentValues_E@ to put the value into"], ["@B_java#lang#String_E@", "String: The column to read"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads a Integer out of a column in a Cursor and writes it to a ContentValues. Adds nothing to the ContentValues if the column isn't present or if its value is null.", "history": "Added in API level 8", "FullName": "public static void cursorIntToContentValuesIfPresent (Cursor cursor, ContentValues values, String column)"}, "getSqlStatementType(java.lang.String)": {"Returns": [["int", "one of the values listed above"]], "Parameters": [["@B_java#lang#String_E@", "String: the SQL statement whose type is returned by this method"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns one of the following which represent the type of the given SQL statement.", "history": "Added in API level 11", "FullName": "public static int getSqlStatementType (String sql)"}, "blobFileDescriptorForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])": {"Returns": [["@B_android#os#ParcelFileDescriptor_E@", "A read-only file descriptor for a copy of the blob value."]], "Parameters": [["@B_android#database#sqlite#SQLiteStatement_E@", "SQLiteStatement no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Utility method to run the pre-compiled query and return the blob value in the first column of the first row.", "history": "Added in API level 11", "FullName": "public static ParcelFileDescriptor blobFileDescriptorForQuery (SQLiteStatement prog, String[] selectionArgs)"}, "cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: The cursor to read from"], ["@B_java#lang#String_E@", "String: The INTEGER field to read"], ["@B_android#content#ContentValues_E@", "ContentValues: The @B_android#content#ContentValues_E@ to put the value into, with the field as the key"], ["@B_java#lang#String_E@", "String: The key to store the value with in the map"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads a Integer out of a field in a Cursor and writes it to a Map.", "history": "Added in API level 1", "FullName": "public static void cursorIntToContentValues (Cursor cursor, String field, ContentValues values, String key)"}, "appendValueToSql(java.lang.StringBuilder,java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#StringBuilder_E@", "StringBuilder no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Appends an Object to an SQL string with the proper escaping, etc.", "history": "Added in API level 1", "FullName": "public static final void appendValueToSql (StringBuilder sql, Object value)"}, "cursorShortToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: The cursor to read from"], ["@B_android#content#ContentValues_E@", "ContentValues: The @B_android#content#ContentValues_E@ to put the value into"], ["@B_java#lang#String_E@", "String: The column to read"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads a Short out of a column in a Cursor and writes it to a ContentValues. Adds nothing to the ContentValues if the column isn't present or if its value is null.", "history": "Added in API level 8", "FullName": "public static void cursorShortToContentValuesIfPresent (Cursor cursor, ContentValues values, String column)"}, "cursorFloatToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: The cursor to read from"], ["@B_android#content#ContentValues_E@", "ContentValues: The @B_android#content#ContentValues_E@ to put the value into"], ["@B_java#lang#String_E@", "String: The column to read"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads a Float out of a column in a Cursor and writes it to a ContentValues. Adds nothing to the ContentValues if the column isn't present or if its value is null.", "history": "Added in API level 8", "FullName": "public static void cursorFloatToContentValuesIfPresent (Cursor cursor, ContentValues values, String column)"}, "cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: The cursor to read from"], ["@B_java#lang#String_E@", "String: The INTEGER field to read"], ["@B_android#content#ContentValues_E@", "ContentValues: The @B_android#content#ContentValues_E@ to put the value into"], ["@B_java#lang#String_E@", "String: The key to store the value with in the map"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads a Long out of a field in a Cursor and writes it to a Map.", "history": "Added in API level 1", "FullName": "public static void cursorLongToContentValues (Cursor cursor, String field, ContentValues values, String key)"}, "bindObjectToProgram(android.database.sqlite.SQLiteProgram,int,java.lang.Object)": {"Returns": [], "Parameters": [["@B_android#database#sqlite#SQLiteProgram_E@", "SQLiteProgram: the program to bind the object to"], ["int", "int: the 1-based index to bind at"], ["@B_java#lang#Object_E@", "Object: the value to bind"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Binds the given Object to the given SQLiteProgram using the proper typing. For example, bind numbers as longs/doubles, and everything else as a string by call toString() on it.", "history": "Added in API level 1", "FullName": "public static void bindObjectToProgram (SQLiteProgram prog, int index, Object value)"}, "dumpCurrentRowToString(android.database.Cursor)": {"Returns": [["@B_java#lang#String_E@", "a String that contains the dumped cursor row"]], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: the cursor to print"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Dump the contents of a Cursor's current row to a String.", "history": "Added in API level 1", "FullName": "public static String dumpCurrentRowToString (Cursor cursor)"}, "DatabaseUtils()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public DatabaseUtils ()"}, "dumpCurrentRow(android.database.Cursor)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: the cursor to print from"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Prints the contents of a Cursor's current row to System.out.", "history": "Added in API level 1", "FullName": "public static void dumpCurrentRow (Cursor cursor)"}}, "Inheritance": [], "ClassName": "android.database.DatabaseUtils", "ClassDesc": "Static utility methods for dealing with databases and @B_android#database#Cursor_E@s."}