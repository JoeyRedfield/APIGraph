{"Functions": {"scanFile(java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the path to the file to be scanned."], ["@B_java#lang#String_E@", "String: an optional mimeType for the file. If mimeType is null, then the mimeType will be inferred from the file extension."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Requests the media scanner to scan a file. Success or failure of the scanning operation cannot be determined until @B_android#media#MediaScannerConnection#MediaScannerConnectionClient#onScanCompleted_E@ is called.", "history": "Added in API level 1", "FullName": "public void scanFile (String path, String mimeType)"}, "isConnected()": {"Returns": [["boolean", "true if we are connected, false otherwise"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether we are connected to the media scanner service", "history": "Added in API level 1", "FullName": "public boolean isConnected ()"}, "scanFile(java.lang.String, java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the path to the file to be scanned."], ["@B_java#lang#String_E@", "String: an optional mimeType for the file. If mimeType is null, then the mimeType will be inferred from the file extension."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Requests the media scanner to scan a file. Success or failure of the scanning operation cannot be determined until @B_android#media#MediaScannerConnection#MediaScannerConnectionClient#onScanCompleted_E@ is called.", "history": "added in API level 1", "FullName": "public void scanFile (String path, String mimeType)"}, "onServiceDisconnected(android.content.ComponentName)": {"Returns": [], "Parameters": [["@B_android#content#ComponentName_E@", "ComponentName: The concrete component name of the service whose connection has been lost."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Part of the ServiceConnection interface. Do not call.", "history": "Added in API level 1", "FullName": "public void onServiceDisconnected (ComponentName className)"}, "connect()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Initiates a connection to the media scanner service. @B_android#media#MediaScannerConnection#MediaScannerConnectionClient#onMediaScannerConnected_E@ will be called when the connection is established.", "history": "Added in API level 1", "FullName": "public void connect ()"}, "MediaScannerConnection(android.content.Context,android.media.MediaScannerConnection.MediaScannerConnectionClient)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: the Context object, required for establishing a connection to the media scanner service."], ["@B_android#media#MediaScannerConnection#MediaScannerConnectionClient_E@", "MediaScannerConnection.MediaScannerConnectionClient: an optional object implementing the MediaScannerConnectionClient interface, for receiving notifications from the media scanner."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new MediaScannerConnection object.", "history": "Added in API level 1", "FullName": "public MediaScannerConnection (Context context, MediaScannerConnection.MediaScannerConnectionClient client)"}, "scanFile(android.content.Context,java.lang.String[],java.lang.String[],android.media.MediaScannerConnection.OnScanCompletedListener)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The caller's Context, required for establishing a connection to the media scanner service. Success or failure of the scanning operation cannot be determined until @B_android#media#MediaScannerConnection#MediaScannerConnectionClient#onScanCompleted_E@ is called."], ["@B_java#lang#String_E@", "String: Array of paths to be scanned."], ["@B_java#lang#String_E@", "String: Optional array of MIME types for each path. If mimeType is null, then the mimeType will be inferred from the file extension."], ["@B_android#media#MediaScannerConnection#OnScanCompletedListener_E@", "MediaScannerConnection.OnScanCompletedListener: Optional callback through which you can receive the scanned URI and MIME type; If null, the file will be scanned but you will not get a result back."]], "Throws": [], "SeeAlso": ["@B_android#media#MediaScannerConnection#scanFile_E@"], "Permissions": [], "Description": "Convenience for constructing a @B_android#media#MediaScannerConnection_E@, calling @B_android#media#MediaScannerConnection#connect_E@ on it, and calling @B_android#media#MediaScannerConnection#scanFile_E@ with the given", "history": "Added in API level 8", "FullName": "public static void scanFile (Context context, String[] paths, String[] mimeTypes, MediaScannerConnection.OnScanCompletedListener callback)"}, "disconnect()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Releases the connection to the media scanner service.", "history": "Added in API level 1", "FullName": "public void disconnect ()"}, "onServiceConnected(android.content.ComponentName,android.os.IBinder)": {"Returns": [], "Parameters": [["@B_android#content#ComponentName_E@", "ComponentName: The concrete component name of the service that has been connected."], ["@B_android#os#IBinder_E@", "IBinder: The IBinder of the Service's communication channel, which you can now make calls on."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Part of the ServiceConnection interface. Do not call.", "history": "Added in API level 1", "FullName": "public void onServiceConnected (ComponentName className, IBinder service)"}}, "Inheritance": [], "ClassName": "android.media.MediaScannerConnection", "ClassDesc": "MediaScannerConnection provides a way for applications to pass a newly created or downloaded media file to the media scanner service. The media scanner service will read metadata from the file and add the file to the media content provider. The MediaScannerConnectionClient provides an interface for the media scanner service to return the Uri for a newly scanned file to the client of the MediaScannerConnection class."}