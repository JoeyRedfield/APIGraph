{"Functions": {"getPoolEntry(long, java.util.concurrent.TimeUnit)": {"Returns": [["", "pool entry holding a connection for the route"]], "Parameters": [["long", "the timeout, 0 or negative for no timeout"], ["@B_java#util#concurrent#TimeUnit_E@", "the unit for the timeout, may be null only if there is no timeout"]], "Throws": [["@B_org#apache#http#conn#ConnectionPoolTimeoutException_E@", "if the timeout expired"], ["@B_java#lang#InterruptedException_E@", "if the calling thread was interrupted or the request was aborted"]], "SeeAlso": [], "Permissions": [], "Description": "Obtains a pool entry with a connection within the given timeout. If @B_org#apache#http#impl#conn#tsccm#PoolEntryRequest#abortRequest_E@ is called before this completes an @B_java#lang#InterruptedException_E@ is thrown.", "history": "Added in API level 1", "FullName": "public abstract BasicPoolEntry getPoolEntry (long timeout, TimeUnit tunit)"}, "abortRequest()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Aborts the active or next call to @B_org#apache#http#impl#conn#tsccm#PoolEntryRequest#getPoolEntry_E@.", "history": "Added in API level 1", "FullName": "public abstract void abortRequest ()"}}, "Inheritance": [], "ClassName": "org.apache.http.impl.conn.tsccm.PoolEntryRequest", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Encapsulates a request for a @B_org#apache#http#impl#conn#tsccm#BasicPoolEntry_E@."}