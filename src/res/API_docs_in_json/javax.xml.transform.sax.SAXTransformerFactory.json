{"Functions": {"newXMLFilter(javax.xml.transform.Source)": {"Returns": [["@B_org#xml#sax#XMLFilter_E@", "An XMLFilter object, or null if this feature is not supported."]], "Parameters": [["@B_javax#xml#transform#Source_E@", "Source: The Source of the transformation instructions."]], "Throws": [["@B_javax#xml#transform#TransformerConfigurationException_E@", "If for some reason the TemplatesHandler cannot be created."]], "SeeAlso": [], "Permissions": [], "Description": "Create an XMLFilter that uses the given Source as the transformation instructions.", "history": "Added in API level 8", "FullName": "public abstract XMLFilter newXMLFilter (Source src)"}, "newTransformerHandler(javax.xml.transform.Source)": {"Returns": [["@B_javax#xml#transform#sax#TransformerHandler_E@", "TransformerHandler ready to transform SAX events."]], "Parameters": [["@B_javax#xml#transform#Source_E@", "Source: The Source of the transformation instructions."]], "Throws": [["@B_javax#xml#transform#TransformerConfigurationException_E@", "If for some reason the TransformerHandler can not be created."]], "SeeAlso": [], "Permissions": [], "Description": "Get a TransformerHandler object that can process SAX ContentHandler events into a Result, based on the transformation instructions specified by the argument.", "history": "Added in API level 8", "FullName": "public abstract TransformerHandler newTransformerHandler (Source src)"}, "newTemplatesHandler()": {"Returns": [["@B_javax#xml#transform#sax#TemplatesHandler_E@", "A non-null reference to a TransformerHandler, that may be used as a ContentHandler for SAX parse events."]], "Parameters": [], "Throws": [["@B_javax#xml#transform#TransformerConfigurationException_E@", "If for some reason the TemplatesHandler cannot be created."]], "SeeAlso": [], "Permissions": [], "Description": "Get a TemplatesHandler object that can process SAX ContentHandler events into a Templates object.", "history": "Added in API level 8", "FullName": "public abstract TemplatesHandler newTemplatesHandler ()"}, "newXMLFilter(javax.xml.transform.Templates)": {"Returns": [["@B_org#xml#sax#XMLFilter_E@", "An XMLFilter object, or null if this feature is not supported."]], "Parameters": [["@B_javax#xml#transform#Templates_E@", "Templates: The compiled transformation instructions."]], "Throws": [["@B_javax#xml#transform#TransformerConfigurationException_E@", "If for some reason the TemplatesHandler cannot be created."]], "SeeAlso": [], "Permissions": [], "Description": "Create an XMLFilter, based on the Templates argument..", "history": "Added in API level 8", "FullName": "public abstract XMLFilter newXMLFilter (Templates templates)"}, "newTransformerHandler(javax.xml.transform.Templates)": {"Returns": [["@B_javax#xml#transform#sax#TransformerHandler_E@", "TransformerHandler ready to transform SAX events."]], "Parameters": [["@B_javax#xml#transform#Templates_E@", "Templates: The compiled transformation instructions."]], "Throws": [["@B_javax#xml#transform#TransformerConfigurationException_E@", "If for some reason the TransformerHandler can not be created."]], "SeeAlso": [], "Permissions": [], "Description": "Get a TransformerHandler object that can process SAX ContentHandler events into a Result, based on the Templates argument.", "history": "Added in API level 8", "FullName": "public abstract TransformerHandler newTransformerHandler (Templates templates)"}, "SAXTransformerFactory()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The default constructor is protected on purpose.", "history": "Added in API level 8", "FullName": "protected SAXTransformerFactory ()"}, "newTransformerHandler()": {"Returns": [["@B_javax#xml#transform#sax#TransformerHandler_E@", "A non-null reference to a TransformerHandler, that may be used as a ContentHandler for SAX parse events."]], "Parameters": [], "Throws": [["@B_javax#xml#transform#TransformerConfigurationException_E@", "If for some reason the TransformerHandler cannot be created."]], "SeeAlso": [], "Permissions": [], "Description": "Get a TransformerHandler object that can process SAX ContentHandler events into a Result. The transformation is defined as an identity (or copy) transformation, for example to copy a series of SAX parse events into a DOM tree.", "history": "Added in API level 8", "FullName": "public abstract TransformerHandler newTransformerHandler ()"}}, "Inheritance": ["@B_javax#xml#transform#TransformerFactory_E@"], "ClassName": "javax.xml.transform.sax.SAXTransformerFactory", "ClassDesc": "This class extends TransformerFactory to provide SAX-specific factory methods. It provides two types of ContentHandlers, one for creating Transformers, the other for creating Templates objects. If an application wants to set the ErrorHandler or EntityResolver for an XMLReader used during a transformation, it should use a URIResolver to return the SAXSource which provides (with getXMLReader) a reference to the XMLReader."}