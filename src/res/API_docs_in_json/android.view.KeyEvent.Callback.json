{"Functions": {"onKeyDown(int, android.view.KeyEvent)": {"Returns": [["boolean", "If you handled the event, return true. If you want to allow the event to be handled by the next receiver, return false."]], "Parameters": [["int", "int: The value in event.getKeyCode()."], ["@B_android#view#KeyEvent_E@", "KeyEvent: Description of the key event."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a key down event has occurred. If you return true, you can first call @B_android#view#KeyEvent#startTracking_E@ to have the framework track the event through its @B_android#view#KeyEvent#Callback#onKeyUp_E@ and also call your @B_android#view#KeyEvent#Callback#onKeyLongPress_E@ if it occurs.", "history": "added in API level 1", "FullName": "public abstract boolean onKeyDown (int keyCode, KeyEvent event)"}, "onKeyMultiple(int,int,android.view.KeyEvent)": {"Returns": [["boolean", "If you handled the event, return true. If you want to allow the event to be handled by the next receiver, return false."]], "Parameters": [["int", "int: The value in event.getKeyCode()."], ["int", "int: Number of pairs as returned by event.getRepeatCount()."], ["@B_android#view#KeyEvent_E@", "KeyEvent: Description of the key event."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a user's interaction with an analog control, such as flinging a trackball, generates simulated down/up events for the same key multiple times in quick succession.", "history": "Added in API level 1", "FullName": "public abstract boolean onKeyMultiple (int keyCode, int count, KeyEvent event)"}, "onKeyUp(int,android.view.KeyEvent)": {"Returns": [["boolean", "If you handled the event, return true. If you want to allow the event to be handled by the next receiver, return false."]], "Parameters": [["int", "int: The value in event.getKeyCode()."], ["@B_android#view#KeyEvent_E@", "KeyEvent: Description of the key event."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a key up event has occurred.", "history": "Added in API level 1", "FullName": "public abstract boolean onKeyUp (int keyCode, KeyEvent event)"}, "onKeyUp(int, android.view.KeyEvent)": {"Returns": [["boolean", "If you handled the event, return true. If you want to allow the event to be handled by the next receiver, return false."]], "Parameters": [["int", "int: The value in event.getKeyCode()."], ["@B_android#view#KeyEvent_E@", "KeyEvent: Description of the key event."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a key up event has occurred.", "history": "added in API level 1", "FullName": "public abstract boolean onKeyUp (int keyCode, KeyEvent event)"}, "onKeyDown(int,android.view.KeyEvent)": {"Returns": [["boolean", "If you handled the event, return true. If you want to allow the event to be handled by the next receiver, return false."]], "Parameters": [["int", "int: The value in event.getKeyCode()."], ["@B_android#view#KeyEvent_E@", "KeyEvent: Description of the key event."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a key down event has occurred. If you return true, you can first call @B_android#view#KeyEvent#startTracking_E@ to have the framework track the event through its @B_android#view#KeyEvent#Callback#onKeyUp_E@ and also call your @B_android#view#KeyEvent#Callback#onKeyLongPress_E@ if it occurs.", "history": "Added in API level 1", "FullName": "public abstract boolean onKeyDown (int keyCode, KeyEvent event)"}, "onKeyLongPress(int,android.view.KeyEvent)": {"Returns": [["boolean", "If you handled the event, return true. If you want to allow the event to be handled by the next receiver, return false."]], "Parameters": [["int", "int: The value in event.getKeyCode()."], ["@B_android#view#KeyEvent_E@", "KeyEvent: Description of the key event."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a long press has occurred. If you return true, the final key up will have @B_android#view#KeyEvent#FLAG_CANCELED_E@ and @B_android#view#KeyEvent#FLAG_CANCELED_LONG_PRESS_E@ set. Note that in order to receive this callback, someone in the event change must return true from @B_android#view#KeyEvent#Callback#onKeyDown_E@ and call @B_android#view#KeyEvent#startTracking_E@ on the event.", "history": "Added in API level 5", "FullName": "public abstract boolean onKeyLongPress (int keyCode, KeyEvent event)"}, "onKeyLongPress(int, android.view.KeyEvent)": {"Returns": [["boolean", "If you handled the event, return true. If you want to allow the event to be handled by the next receiver, return false."]], "Parameters": [["int", "int: The value in event.getKeyCode()."], ["@B_android#view#KeyEvent_E@", "KeyEvent: Description of the key event."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a long press has occurred. If you return true, the final key up will have @B_android#view#KeyEvent#FLAG_CANCELED_E@ and @B_android#view#KeyEvent#FLAG_CANCELED_LONG_PRESS_E@ set. Note that in order to receive this callback, someone in the event change must return true from @B_android#view#KeyEvent#Callback#onKeyDown_E@ and call @B_android#view#KeyEvent#startTracking_E@ on the event.", "history": "added in API level 5", "FullName": "public abstract boolean onKeyLongPress (int keyCode, KeyEvent event)"}, "onKeyMultiple(int, int, android.view.KeyEvent)": {"Returns": [["boolean", "If you handled the event, return true. If you want to allow the event to be handled by the next receiver, return false."]], "Parameters": [["int", "int: The value in event.getKeyCode()."], ["int", "int: Number of pairs as returned by event.getRepeatCount()."], ["@B_android#view#KeyEvent_E@", "KeyEvent: Description of the key event."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a user's interaction with an analog control, such as flinging a trackball, generates simulated down/up events for the same key multiple times in quick succession.", "history": "added in API level 1", "FullName": "public abstract boolean onKeyMultiple (int keyCode, int count, KeyEvent event)"}}, "Inheritance": [], "ClassName": "android.view.KeyEvent.Callback", "ClassDesc": ""}