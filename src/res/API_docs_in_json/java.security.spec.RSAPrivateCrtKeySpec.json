{"Functions": {"getPrimeExponentP()": {"Returns": [["@B_java#math#BigInteger_E@", "the primeExponentP"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the primeExponentP.", "history": "Added in API level 1", "FullName": "public BigInteger getPrimeExponentP ()"}, "getPublicExponent()": {"Returns": [["@B_java#math#BigInteger_E@", "the public exponent"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the public exponent.", "history": "Added in API level 1", "FullName": "public BigInteger getPublicExponent ()"}, "RSAPrivateCrtKeySpec(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)": {"Returns": [], "Parameters": [["@B_java#math#BigInteger_E@", "BigInteger: the modulus n"], ["@B_java#math#BigInteger_E@", "BigInteger: the public exponent e"], ["@B_java#math#BigInteger_E@", "BigInteger: the private exponent d"], ["@B_java#math#BigInteger_E@", "BigInteger: the prime factor p of n"], ["@B_java#math#BigInteger_E@", "BigInteger: the prime factor q of n"], ["@B_java#math#BigInteger_E@", "BigInteger: this is d mod (p-1)"], ["@B_java#math#BigInteger_E@", "BigInteger: this is d mod (q-1)"], ["@B_java#math#BigInteger_E@", "BigInteger: the Chinese Remainder Theorem coefficient q-1 mod p"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new RSAPrivateCrtKeySpec given the modulus, publicExponent, privateExponent, primeP, primeQ, primeExponentP, primeExponentQ, and crtCoefficient as defined in PKCS#1.", "history": "Added in API level 1", "FullName": "public RSAPrivateCrtKeySpec (BigInteger modulus, BigInteger publicExponent, BigInteger privateExponent, BigInteger primeP, BigInteger primeQ, BigInteger primeExponentP, BigInteger primeExponentQ, BigInteger crtCoefficient)"}, "getPrimeP()": {"Returns": [["@B_java#math#BigInteger_E@", "the primeP"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the primeP.", "history": "Added in API level 1", "FullName": "public BigInteger getPrimeP ()"}, "getPrimeExponentQ()": {"Returns": [["@B_java#math#BigInteger_E@", "the primeExponentQ"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the primeExponentQ.", "history": "Added in API level 1", "FullName": "public BigInteger getPrimeExponentQ ()"}, "getCrtCoefficient()": {"Returns": [["@B_java#math#BigInteger_E@", "the crtCoefficient"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the crtCoefficient.", "history": "Added in API level 1", "FullName": "public BigInteger getCrtCoefficient ()"}, "getPrimeQ()": {"Returns": [["@B_java#math#BigInteger_E@", "the primeQ"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the primeQ.", "history": "Added in API level 1", "FullName": "public BigInteger getPrimeQ ()"}}, "Inheritance": ["@B_java#security#spec#RSAPrivateKeySpec_E@"], "ClassName": "java.security.spec.RSAPrivateCrtKeySpec", "ClassDesc": "This class specifies an RSA private key, as defined in the PKCS#1 standard, using the Chinese Remainder Theorem (CRT) information values for efficiency."}