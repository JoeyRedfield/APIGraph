{"Functions": {"getParsedString()": {"Returns": [["@B_java#lang#String_E@", "the string that was being parsed, should not be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the string that was being parsed.", "history": "Added in API level 26", "FullName": "public String getParsedString ()"}, "DateTimeParseException(java.lang.String,java.lang.CharSequence,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the message to use for this exception, may be null"], ["@B_java#lang#CharSequence_E@", "CharSequence: the parsed text, should not be null"], ["int", "int: the index in the parsed string that was invalid, should be a valid index"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new exception with the specified message.", "history": "Added in API level 26", "FullName": "public DateTimeParseException (String message, CharSequence parsedData, int errorIndex)"}, "getErrorIndex()": {"Returns": [["int", "the index in the parsed string that was invalid, should be a valid index"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the index where the error was found.", "history": "Added in API level 26", "FullName": "public int getErrorIndex ()"}, "DateTimeParseException(java.lang.String,java.lang.CharSequence,int,java.lang.Throwable)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the message to use for this exception, may be null"], ["@B_java#lang#CharSequence_E@", "CharSequence: the parsed text, should not be null"], ["int", "int: the index in the parsed string that was invalid, should be a valid index"], ["@B_java#lang#Throwable_E@", "Throwable: the cause exception, may be null"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new exception with the specified message and cause.", "history": "Added in API level 26", "FullName": "public DateTimeParseException (String message, CharSequence parsedData, int errorIndex, Throwable cause)"}}, "Inheritance": ["@B_java#lang#Throwable_E@", "@B_java#lang#Exception_E@", "@B_java#lang#RuntimeException_E@", "@B_java#time#DateTimeException_E@"], "ClassName": "java.time.format.DateTimeParseException", "ClassDesc": "An exception thrown when an error occurs during parsing. This exception includes the text being parsed and the error index."}