{"Functions": {"GuardedObject(java.lang.Object,java.security.Guard)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: the object to be guarded."], ["@B_java#security#Guard_E@", "Guard: the Guard object that guards access to the object."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a GuardedObject using the specified object and guard. If the Guard object is null, then no restrictions will be placed on who can access the object.", "history": "Added in API level 1", "FullName": "public GuardedObject (Object object, Guard guard)"}, "getObject()": {"Returns": [["@B_java#lang#Object_E@", "the guarded object."]], "Parameters": [], "Throws": [["@B_java#lang#SecurityException_E@", "if access to the guarded object is denied."]], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the guarded object, or throws an exception if access to the guarded object is denied by the guard.", "history": "Added in API level 1", "FullName": "public Object getObject ()"}}, "Inheritance": [], "ClassName": "java.security.GuardedObject", "ClassDesc": "A GuardedObject is an object that is used to protect access to another object. A GuardedObject encapsulates a target object and a Guard object, such that access to the target object is possible only if the Guard object allows it. Once an object is encapsulated by a GuardedObject, access to that object is controlled by the getObject method, which invokes the checkGuard method on the Guard object that is guarding access. If access is not allowed, an exception is thrown."}