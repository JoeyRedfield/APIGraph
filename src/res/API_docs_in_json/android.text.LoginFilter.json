{"Functions": {"filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["@B_android#text#Spanned_E@", "Spanned no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method is called when the buffer is going to replace the range dstart \u2026 dend of dest with the new text from the range start \u2026 end of source. Returns the CharSequence that we want placed there instead, including an empty string if appropriate, or null to accept the original replacement. Be careful to not to reject 0-length replacements, as this is what happens when you delete text.", "history": "Added in API level 1", "FullName": "public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend)"}, "onStop()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when we're done processing filter", "history": "Added in API level 1", "FullName": "public void onStop ()"}, "isAllowed(char)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["char", "char no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether or not we allow character c. Subclasses must override this method.", "history": "Added in API level 1", "FullName": "public abstract boolean isAllowed (char c)"}, "onInvalidCharacter(char)": {"Returns": [], "Parameters": [["char", "char: the invalid character"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called whenever we encounter an invalid character.", "history": "Added in API level 1", "FullName": "public void onInvalidCharacter (char c)"}, "onStart()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when we start processing filter.", "history": "Added in API level 1", "FullName": "public void onStart ()"}}, "Inheritance": [], "ClassName": "android.text.LoginFilter", "ClassDesc": "Abstract class for filtering login-related text (user names and passwords)"}