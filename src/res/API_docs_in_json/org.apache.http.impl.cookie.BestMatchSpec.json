{"Functions": {"match(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)": {"Returns": [["", "true if the cookie should be submitted with a request with given attributes, false otherwise."]], "Parameters": [["@B_org#apache#http#cookie#Cookie_E@", "the Cookie to be matched"], ["@B_org#apache#http#cookie#CookieOrigin_E@", "the target to test against"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Determines if a Cookie matches the target location.", "history": "Added in API level 1", "FullName": "public boolean match (Cookie cookie, CookieOrigin origin)"}, "BestMatchSpec(java.lang.String[], boolean)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public BestMatchSpec (String[] datepatterns, boolean oneHeader)"}, "getVersionHeader()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a request header identifying what version of the state management specification is understood. May be null if the cookie specification does not support", "history": "Added in API level 1", "FullName": "public Header getVersionHeader ()"}, "parse(org.apache.http.Header, org.apache.http.cookie.CookieOrigin)": {"Returns": [["", "an array of Cookies parsed from the header"]], "Parameters": [["@B_org#apache#http#Header_E@", "the Set-Cookie received from the server"], ["@B_org#apache#http#cookie#CookieOrigin_E@", "details of the cookie origin"]], "Throws": [["@B_org#apache#http#cookie#MalformedCookieException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Parse the This method will not perform the validation of the resultant @B_org#apache#http#cookie#Cookie_E@s", "history": "Added in API level 1", "FullName": "public List<Cookie> parse (Header header, CookieOrigin origin)"}, "BestMatchSpec()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public BestMatchSpec ()"}, "validate(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)": {"Returns": [], "Parameters": [["@B_org#apache#http#cookie#Cookie_E@", "the Cookie to validate"], ["@B_org#apache#http#cookie#CookieOrigin_E@", "details of the cookie origin"]], "Throws": [["@B_org#apache#http#cookie#MalformedCookieException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Validate the cookie according to validation rules defined by the cookie specification.", "history": "Added in API level 1", "FullName": "public void validate (Cookie cookie, CookieOrigin origin)"}, "getVersion()": {"Returns": [["", "version of the state management specification"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns version of the state management this cookie specification conforms to.", "history": "Added in API level 1", "FullName": "public int getVersion ()"}, "formatCookies(java.util.List<org.apache.http.cookie.Cookie>)": {"Returns": [["", "a Header for the given Cookies."]], "Parameters": [["@B_java#util#List_E@", "the Cookies format into a Cookie header"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create", "history": "Added in API level 1", "FullName": "public List<Header> formatCookies (List<Cookie> cookies)"}}, "Inheritance": [], "ClassName": "org.apache.http.impl.cookie.BestMatchSpec", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit 'Meta' cookie specification that selects a cookie policy depending on the format of the cookie(s)"}