{"Functions": {"compare(boolean, boolean)": {"Returns": [["int", "the value 0 if x == y; a value less than 0 if !x && y; and a value greater than 0 if x && !y"]], "Parameters": [["boolean", "boolean: the first boolean to compare"], ["boolean", "boolean: the second boolean to compare"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Compares two boolean values. The value returned is identical to what would be returned by:", "history": "added in API level 19", "FullName": "public static int compare (boolean x, boolean y)"}, "toString(boolean)": {"Returns": [["@B_java#lang#String_E@", "the string representation of the specified boolean"]], "Parameters": [["boolean", "boolean: the boolean to be converted"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a String object representing the specified boolean. If the specified boolean is true, then the string \"true\" will be returned, otherwise the string \"false\" will be returned.", "history": "Added in API level 1", "FullName": "public static String toString (boolean b)"}, "logicalXor(boolean, boolean)": {"Returns": [["boolean", "the logical XOR of a and b"]], "Parameters": [["boolean", "boolean: the first operand"], ["boolean", "boolean: the second operand"]], "Throws": [], "SeeAlso": ["@B_java#util#function#BinaryOperator_E@"], "Permissions": [], "Description": "Returns the result of applying the logical XOR operator to the specified boolean operands.", "history": "added in API level 24", "FullName": "public static boolean logicalXor (boolean a, boolean b)"}, "Boolean(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the string to be converted to a Boolean."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Allocates a Boolean object representing the value true if the string argument is not null and is equal, ignoring case, to the string \"true\". Otherwise, allocate a Boolean object representing the value false. Examples: new Boolean(\"True\") produces a Boolean object that represents true. new Boolean(\"yes\") produces a Boolean object that represents false.", "history": "Added in API level 1", "FullName": "public Boolean (String s)"}, "compareTo(java.lang.Boolean)": {"Returns": [["int", "zero if this object represents the same boolean value as the argument; a positive value if this object represents true and the argument represents false; and a negative value if this object represents false and the argument represents true"]], "Parameters": [["@B_java#lang#Boolean_E@", "Boolean: the Boolean instance to be compared"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if the argument is null"]], "SeeAlso": ["@B_java#lang#Comparable_E@"], "Permissions": [], "Description": "Compares this Boolean instance with another.", "history": "Added in API level 1", "FullName": "public int compareTo (Boolean b)"}, "logicalOr(boolean,boolean)": {"Returns": [["boolean", "the logical OR of a and b"]], "Parameters": [["boolean", "boolean: the first operand"], ["boolean", "boolean: the second operand"]], "Throws": [], "SeeAlso": ["@B_java#util#function#BinaryOperator_E@"], "Permissions": [], "Description": "Returns the result of applying the logical OR operator to the specified boolean operands.", "history": "Added in API level 24", "FullName": "public static boolean logicalOr (boolean a, boolean b)"}, "booleanValue()": {"Returns": [["boolean", "the primitive boolean value of this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of this Boolean object as a boolean primitive.", "history": "Added in API level 1", "FullName": "public boolean booleanValue ()"}, "getBoolean(java.lang.String)": {"Returns": [["boolean", "the boolean value of the system property."]], "Parameters": [["@B_java#lang#String_E@", "String: the system property name."]], "Throws": [["@B_java#lang#SecurityException_E@", "for the same reasons as @B_java#lang#System#getProperty_E@"]], "SeeAlso": ["@B_java#lang#System#getProperty_E@"], "Permissions": [], "Description": "Returns true if and only if the system property named by the argument exists and is equal to the string \"true\". (Beginning with version 1.0.2 of the JavagetProperty, a method defined by the System class. If there is no property with the specified name, or if the specified name is empty or null, then false is returned.", "history": "Added in API level 1", "FullName": "public static boolean getBoolean (String name)"}, "logicalAnd(boolean, boolean)": {"Returns": [["boolean", "the logical AND of a and b"]], "Parameters": [["boolean", "boolean: the first operand"], ["boolean", "boolean: the second operand"]], "Throws": [], "SeeAlso": ["@B_java#util#function#BinaryOperator_E@"], "Permissions": [], "Description": "Returns the result of applying the logical AND operator to the specified boolean operands.", "history": "added in API level 24", "FullName": "public static boolean logicalAnd (boolean a, boolean b)"}, "hashCode(boolean)": {"Returns": [["int", "a hash code value for a boolean value."]], "Parameters": [["boolean", "boolean: the value to hash"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code for a boolean value; compatible with Boolean.hashCode().", "history": "Added in API level 24", "FullName": "public static int hashCode (boolean value)"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a String object representing this Boolean's value. If this object represents the value true, a string equal to \"true\" is returned. Otherwise, a string equal to \"false\" is returned.", "history": "Added in API level 1", "FullName": "public String toString ()"}, "parseBoolean(java.lang.String)": {"Returns": [["boolean", "the boolean represented by the string argument"]], "Parameters": [["@B_java#lang#String_E@", "String: the String containing the boolean representation to be parsed"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Parses the string argument as a boolean. The boolean returned represents the value true if the string argument is not null and is equal, ignoring case, to the string \"true\". Example: Boolean.parseBoolean(\"True\") returns true. Example: Boolean.parseBoolean(\"yes\") returns false.", "history": "Added in API level 1", "FullName": "public static boolean parseBoolean (String s)"}, "logicalAnd(boolean,boolean)": {"Returns": [["boolean", "the logical AND of a and b"]], "Parameters": [["boolean", "boolean: the first operand"], ["boolean", "boolean: the second operand"]], "Throws": [], "SeeAlso": ["@B_java#util#function#BinaryOperator_E@"], "Permissions": [], "Description": "Returns the result of applying the logical AND operator to the specified boolean operands.", "history": "Added in API level 24", "FullName": "public static boolean logicalAnd (boolean a, boolean b)"}, "valueOf(java.lang.String)": {"Returns": [["@B_java#lang#Boolean_E@", "the Boolean value represented by the string."]], "Parameters": [["@B_java#lang#String_E@", "String: a string."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a Boolean with a value represented by the specified string. The Boolean returned represents a true value if the string argument is not null and is equal, ignoring case, to the string \"true\".", "history": "Added in API level 1", "FullName": "public static Boolean valueOf (String s)"}, "compare(boolean,boolean)": {"Returns": [["int", "the value 0 if x == y; a value less than 0 if !x && y; and a value greater than 0 if x && !y"]], "Parameters": [["boolean", "boolean: the first boolean to compare"], ["boolean", "boolean: the second boolean to compare"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Compares two boolean values. The value returned is identical to what would be returned by:", "history": "Added in API level 19", "FullName": "public static int compare (boolean x, boolean y)"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if the Boolean objects represent the same value; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the object to compare with."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if and only if the argument is not null and is a Boolean object that represents the same boolean value as this object.", "history": "Added in API level 1", "FullName": "public boolean equals (Object obj)"}, "Boolean(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: the value of the Boolean."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Allocates a Boolean object representing the value argument.", "history": "Added in API level 1", "FullName": "public Boolean (boolean value)"}, "hashCode()": {"Returns": [["int", "the integer 1231 if this object represents true; returns the integer 1237 if this object represents false."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code for this Boolean object.", "history": "Added in API level 1", "FullName": "public int hashCode ()"}, "logicalOr(boolean, boolean)": {"Returns": [["boolean", "the logical OR of a and b"]], "Parameters": [["boolean", "boolean: the first operand"], ["boolean", "boolean: the second operand"]], "Throws": [], "SeeAlso": ["@B_java#util#function#BinaryOperator_E@"], "Permissions": [], "Description": "Returns the result of applying the logical OR operator to the specified boolean operands.", "history": "added in API level 24", "FullName": "public static boolean logicalOr (boolean a, boolean b)"}, "valueOf(boolean)": {"Returns": [["@B_java#lang#Boolean_E@", "a Boolean instance representing b."]], "Parameters": [["boolean", "boolean: a boolean value."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a Boolean instance representing the specified boolean value. If the specified boolean value is true, this method returns Boolean.TRUE; if it is false, this method returns Boolean.FALSE. If a new Boolean instance is not required, this method should generally be used in preference to the constructor @B_java#lang#Boolean#Boolean_E@, as this method is likely to yield significantly better space and time performance.", "history": "Added in API level 1", "FullName": "public static Boolean valueOf (boolean b)"}, "logicalXor(boolean,boolean)": {"Returns": [["boolean", "the logical XOR of a and b"]], "Parameters": [["boolean", "boolean: the first operand"], ["boolean", "boolean: the second operand"]], "Throws": [], "SeeAlso": ["@B_java#util#function#BinaryOperator_E@"], "Permissions": [], "Description": "Returns the result of applying the logical XOR operator to the specified boolean operands.", "history": "Added in API level 24", "FullName": "public static boolean logicalXor (boolean a, boolean b)"}}, "Inheritance": [], "ClassName": "java.lang.Boolean", "ClassDesc": "The Boolean class wraps a value of the primitive type boolean in an object. An object of type Boolean contains a single field whose type is boolean. In addition, this class provides many methods for converting a boolean to a String and a String to a boolean, as well as other constants and methods useful when dealing with a boolean."}