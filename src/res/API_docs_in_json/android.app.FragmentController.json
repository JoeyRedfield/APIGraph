{"Functions": {"dispatchMultiWindowModeChanged(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#app#Fragment#onMultiWindowModeChanged_E@"], "Permissions": [], "Description": "use @B_android#app#FragmentController#dispatchMultiWindowModeChanged_E@ Lets all Fragments managed by the controller's FragmentManager know the multi-window mode of the activity changed. Call when the multi-window mode of the activity changed.", "history": "Added in API level 24 Deprecated in API level 26", "FullName": "public void dispatchMultiWindowModeChanged (boolean isInMultiWindowMode)"}, "attachHost(android.app.Fragment)": {"Returns": [], "Parameters": [["@B_android#app#Fragment_E@", "Fragment no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Attaches the host to the FragmentManager for this controller. The host must be attached before the FragmentManager can be used to manage Fragments.", "history": "added in API level 23", "FullName": "public void attachHost (Fragment parent)"}, "reportLoaderStart()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Lets the loaders know the host is ready to receive notifications.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public void reportLoaderStart ()"}, "dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#io#FileDescriptor_E@", "FileDescriptor no parameter comment"], ["@B_java#io#PrintWriter_E@", "PrintWriter no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Dumps the current state of the loaders.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public void dumpLoaders (String prefix, FileDescriptor fd, PrintWriter writer, String[] args)"}, "dispatchOptionsItemSelected(android.view.MenuItem)": {"Returns": [["boolean", "true if the options menu selection event was consumed"]], "Parameters": [["@B_android#view#MenuItem_E@", "MenuItem no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#app#Fragment#onOptionsItemSelected_E@"], "Permissions": [], "Description": "Sends an option item selection event to the Fragments managed by the controller's FragmentManager. Once the event has been consumed, no additional handling will be performed. Call immediately after an options menu item has been selected", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public boolean dispatchOptionsItemSelected (MenuItem item)"}, "dispatchPause()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#app#Fragment#onPause_E@"], "Permissions": [], "Description": "Moves all Fragments managed by the controller's FragmentManager into the pause state. Call when Fragments should be paused.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public void dispatchPause ()"}, "dispatchPictureInPictureModeChanged(boolean,android.content.res.Configuration)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"], ["@B_android#content#res#Configuration_E@", "Configuration no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#app#Fragment#onPictureInPictureModeChanged_E@"], "Permissions": [], "Description": "Lets all Fragments managed by the controller's FragmentManager know the picture-in-picture mode of the activity changed. Call when the picture-in-picture mode of the activity changed.", "history": "Added in API level 26 Deprecated in API level 28", "FullName": "public void dispatchPictureInPictureModeChanged (boolean isInPictureInPictureMode, Configuration newConfig)"}, "dispatchStop()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#app#Fragment#onStop_E@"], "Permissions": [], "Description": "Moves all Fragments managed by the controller's FragmentManager into the stop state. Call when Fragments should be stopped.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public void dispatchStop ()"}, "dispatchConfigurationChanged(android.content.res.Configuration)": {"Returns": [], "Parameters": [["@B_android#content#res#Configuration_E@", "Configuration no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#app#Fragment#onConfigurationChanged_E@"], "Permissions": [], "Description": "Lets all Fragments managed by the controller's FragmentManager know a configuration change occurred. Call when there is a configuration change.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public void dispatchConfigurationChanged (Configuration newConfig)"}, "dispatchPictureInPictureModeChanged(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#app#Fragment#onPictureInPictureModeChanged_E@"], "Permissions": [], "Description": "use @B_android#app#FragmentController#dispatchPictureInPictureModeChanged_E@ Lets all Fragments managed by the controller's FragmentManager know the picture-in-picture mode of the activity changed. Call when the picture-in-picture mode of the activity changed.", "history": "Added in API level 24 Deprecated in API level 26", "FullName": "public void dispatchPictureInPictureModeChanged (boolean isInPictureInPictureMode)"}, "onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)": {"Returns": [["@B_android#view#View_E@", "view the newly created view"]], "Parameters": [["@B_android#view#View_E@", "View: The parent that the created view will be placed in; note that this may be null."], ["@B_java#lang#String_E@", "String: Tag name to be inflated."], ["@B_android#content#Context_E@", "Context: The context the view is being created in."], ["@B_android#util#AttributeSet_E@", "AttributeSet: Inflation attributes as specified in XML file."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Instantiates a Fragment's view.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public View onCreateView (View parent, String name, Context context, AttributeSet attrs)"}, "doLoaderStart()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Starts the loaders.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public void doLoaderStart ()"}, "dispatchPrepareOptionsMenu(android.view.Menu)": {"Returns": [["boolean", "true if the options menu contains items to display"]], "Parameters": [["@B_android#view#Menu_E@", "Menu no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#app#Fragment#onPrepareOptionsMenu_E@"], "Permissions": [], "Description": "Lets all Fragments managed by the controller's FragmentManager know they should prepare their options menu for display. Call immediately before displaying the Fragment's options menu.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public boolean dispatchPrepareOptionsMenu (Menu menu)"}, "dispatchLowMemory()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#app#Fragment#onLowMemory_E@"], "Permissions": [], "Description": "Lets all Fragments managed by the controller's FragmentManager know the device is in a low memory condition. Call when the device is low on memory and Fragment's should trim their memory usage.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public void dispatchLowMemory ()"}, "getFragmentManager()": {"Returns": [["@B_android#app#FragmentManager_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_android#app#FragmentManager_E@ for this controller.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public FragmentManager getFragmentManager ()"}, "retainLoaderNonConfig()": {"Returns": [["@B_android#util#ArrayMap_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a list of LoaderManagers that have opted to retain their instance across configuration changes.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public ArrayMap<String, LoaderManager> retainLoaderNonConfig ()"}, "dispatchTrimMemory(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#app#Fragment#onTrimMemory_E@"], "Permissions": [], "Description": "Lets all Fragments managed by the controller's FragmentManager know they should trim their memory usage. Call when the Fragment can release allocated memory [such as if the Fragment is in the background].", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public void dispatchTrimMemory (int level)"}, "dispatchActivityCreated()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#app#Fragment#onActivityCreated_E@"], "Permissions": [], "Description": "Moves all Fragments managed by the controller's FragmentManager into the activity created state. Call when Fragments should be informed their host has been created.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public void dispatchActivityCreated ()"}, "createController(android.app.FragmentHostCallback<?>)": {"Returns": [["@B_android#app#FragmentController_E@", "no returns description in source"]], "Parameters": [["@B_android#app#FragmentHostCallback_E@", "FragmentHostCallback no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_android#app#FragmentController_E@.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public static final FragmentController createController (FragmentHostCallback<?> callbacks)"}, "restoreLoaderNonConfig(android.util.ArrayMap<java.lang.String,android.app.LoaderManager>)": {"Returns": [], "Parameters": [["@B_android#util#ArrayMap_E@", "ArrayMap no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#app#FragmentController#retainLoaderNonConfig_E@"], "Permissions": [], "Description": "Restores the saved state for all LoaderManagers. The given LoaderManager list are LoaderManager instances retained across configuration changes.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public void restoreLoaderNonConfig (ArrayMap<String, LoaderManager> loaderManagers)"}, "restoreAllState(android.os.Parcelable,java.util.List<android.app.Fragment>)": {"Returns": [], "Parameters": [["@B_android#os#Parcelable_E@", "Parcelable no parameter comment"], ["@B_java#util#List_E@", "List no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#app#FragmentController#retainNonConfig_E@"], "Permissions": [], "Description": "use @B_android#app#FragmentController#restoreAllState_E@ Restores the saved state for all Fragments. The given Fragment list are Fragment instances retained across configuration changes.", "history": "Added in API level 23 Deprecated in API level 24", "FullName": "public void restoreAllState (Parcelable state, List<Fragment> nonConfigList)"}, "retainNonConfig()": {"Returns": [["@B_java#util#List_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "use @B_android#app#FragmentController#retainNestedNonConfig_E@ to also track retained nested child fragments Returns a list of Fragments that have opted to retain their instance across configuration changes.", "history": "Added in API level 23 Deprecated in API level 24", "FullName": "public List<Fragment> retainNonConfig ()"}, "noteStateNotSaved()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Marks the fragment state as unsaved. This allows for \"state loss\" detection.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public void noteStateNotSaved ()"}, "dispatchMultiWindowModeChanged(boolean,android.content.res.Configuration)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"], ["@B_android#content#res#Configuration_E@", "Configuration no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#app#Fragment#onMultiWindowModeChanged_E@"], "Permissions": [], "Description": "Lets all Fragments managed by the controller's FragmentManager know the multi-window mode of the activity changed. Call when the multi-window mode of the activity changed.", "history": "Added in API level 26 Deprecated in API level 28", "FullName": "public void dispatchMultiWindowModeChanged (boolean isInMultiWindowMode, Configuration newConfig)"}, "dispatchStart()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#app#Fragment#onStart_E@"], "Permissions": [], "Description": "Moves all Fragments managed by the controller's FragmentManager into the start state. Call when Fragments should be started.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public void dispatchStart ()"}, "saveAllState()": {"Returns": [["@B_android#os#Parcelable_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Saves the state for all Fragments.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public Parcelable saveAllState ()"}, "dispatchCreate()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#app#Fragment#onCreate_E@"], "Permissions": [], "Description": "Moves all Fragments managed by the controller's FragmentManager into the create state. Call when Fragments should be created.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public void dispatchCreate ()"}, "dispatchDestroy()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#app#Fragment#onDestroy_E@"], "Permissions": [], "Description": "Moves all Fragments managed by the controller's FragmentManager into the destroy state. Call when Fragments should be destroyed.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public void dispatchDestroy ()"}, "dispatchResume()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#app#Fragment#onResume_E@"], "Permissions": [], "Description": "Moves all Fragments managed by the controller's FragmentManager into the resume state. Call when Fragments should be resumed.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public void dispatchResume ()"}, "dispatchContextItemSelected(android.view.MenuItem)": {"Returns": [["boolean", "true if the context menu selection event was consumed"]], "Parameters": [["@B_android#view#MenuItem_E@", "MenuItem no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#app#Fragment#onContextItemSelected_E@"], "Permissions": [], "Description": "Sends a context item selection event to the Fragments managed by the controller's FragmentManager. Once the event has been consumed, no additional handling will be performed. Call immediately after an options menu item has been selected", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public boolean dispatchContextItemSelected (MenuItem item)"}, "retainNestedNonConfig()": {"Returns": [["@B_android#app#FragmentManagerNonConfig_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a nested tree of Fragments that have opted to retain their instance across configuration changes.", "history": "Added in API level 24 Deprecated in API level 28", "FullName": "public FragmentManagerNonConfig retainNestedNonConfig ()"}, "execPendingActions()": {"Returns": [["boolean", "true if queued actions were performed"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Execute any pending actions for the Fragments managed by the controller's FragmentManager. Call when queued actions can be performed [eg when the Fragment moves into a start or resume state].", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public boolean execPendingActions ()"}, "dispatchDestroyView()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#app#Fragment#onDestroyView_E@"], "Permissions": [], "Description": "Moves all Fragments managed by the controller's FragmentManager into the destroy view state. Call when the Fragment's views should be destroyed.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public void dispatchDestroyView ()"}, "doLoaderDestroy()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Destroys the loaders and, if their state is not being retained, removes them.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public void doLoaderDestroy ()"}, "dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)": {"Returns": [["boolean", "true if the options menu contains items to display"]], "Parameters": [["@B_android#view#Menu_E@", "Menu no parameter comment"], ["@B_android#view#MenuInflater_E@", "MenuInflater no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#app#Fragment#onCreateOptionsMenu_E@"], "Permissions": [], "Description": "Lets all Fragments managed by the controller's FragmentManager know they should create an options menu. Call when the Fragment should create an options menu.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public boolean dispatchCreateOptionsMenu (Menu menu, MenuInflater inflater)"}, "restoreAllState(android.os.Parcelable,android.app.FragmentManagerNonConfig)": {"Returns": [], "Parameters": [["@B_android#os#Parcelable_E@", "Parcelable no parameter comment"], ["@B_android#app#FragmentManagerNonConfig_E@", "FragmentManagerNonConfig no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#app#FragmentController#retainNestedNonConfig_E@"], "Permissions": [], "Description": "Restores the saved state for all Fragments. The given FragmentManagerNonConfig are Fragment instances retained across configuration changes, including nested fragments", "history": "Added in API level 24 Deprecated in API level 28", "FullName": "public void restoreAllState (Parcelable state, FragmentManagerNonConfig nonConfig)"}, "dispatchOptionsMenuClosed(android.view.Menu)": {"Returns": [], "Parameters": [["@B_android#view#Menu_E@", "Menu no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#app#Fragment#onOptionsMenuClosed_E@"], "Permissions": [], "Description": "Lets all Fragments managed by the controller's FragmentManager know their options menu has closed. Call immediately after closing the Fragment's options menu.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public void dispatchOptionsMenuClosed (Menu menu)"}, "doLoaderStop(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: When true, the loaders aren't stopped, but, their instances are retained in a started state"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Stops the loaders, optionally retaining their state. This is useful for keeping the loader state across configuration changes.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public void doLoaderStop (boolean retain)"}, "getLoaderManager()": {"Returns": [["@B_android#app#LoaderManager_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_android#app#LoaderManager_E@.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public LoaderManager getLoaderManager ()"}, "findFragmentByWho(java.lang.String)": {"Returns": [["@B_android#app#Fragment_E@", "This value may be null."]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a fragment with the given identifier.", "history": "Added in API level 23 Deprecated in API level 28", "FullName": "public Fragment findFragmentByWho (String who)"}}, "Inheritance": [], "ClassName": "android.app.FragmentController", "ClassDesc": "Use the https:##developer#android#com@B_android#support#v4#app#FragmentController_E@ Provides integration points with a @B_android#app#FragmentManager_E@ for a fragment host. It is the responsibility of the host to take care of the Fragment's lifecycle. The methods provided by @B_android#app#FragmentController_E@ are for that purpose."}