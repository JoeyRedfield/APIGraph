{"Functions": {"setCursor(android.database.Cursor)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: the new cursor to use as the data set"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets a new cursor as the data set and resets the cache of indices.", "history": "Added in API level 3", "FullName": "public void setCursor (Cursor cursor)"}, "AlphabetIndexer(android.database.Cursor,int,java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: the cursor containing the data set"], ["int", "int: the column number in the cursor that is sorted alphabetically"], ["@B_java#lang#CharSequence_E@", "CharSequence: string containing the alphabet, with space as the first character. For example, use the string \" ABCDEFGHIJKLMNOPQRSTUVWXYZ\" for English indexing. The characters must be uppercase and be sorted in ascii/unicode order. Basically characters in the alphabet will show up as preview letters."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs the indexer.", "history": "Added in API level 3", "FullName": "public AlphabetIndexer (Cursor cursor, int sortedColumnIndex, CharSequence alphabet)"}, "onChanged()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method is called when the entire data set has changed, most likely through a call to @B_android#database#Cursor#requery_E@ on a @B_android#database#Cursor_E@.", "history": "Added in API level 3", "FullName": "public void onChanged ()"}, "getPositionForSection(int)": {"Returns": [["int", "the row index of the first occurrence, or the nearest next letter. For instance, if searching for \"T\" and no \"T\" is found, then the first row starting with \"U\" or any higher letter is returned. If there is no data following \"T\" at all, then the list size is returned."]], "Parameters": [["int", "int: the section to search for"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Performs a binary search or cache lookup to find the first row that matches a given section's starting letter.", "history": "Added in API level 3", "FullName": "public int getPositionForSection (int sectionIndex)"}, "compare(java.lang.String, java.lang.String)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Default implementation compares the first character of word with letter.", "history": "added in API level 3", "FullName": "protected int compare (String word, String letter)"}, "getSectionForPosition(int)": {"Returns": [["int", "the index of the corresponding section within the array of section objects, constrained to fall within the array bounds"]], "Parameters": [["int", "int: the position within the adapter for which to return the corresponding section index"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the section index for a given position in the list by querying the item and comparing it with all items in the section array.", "history": "Added in API level 3", "FullName": "public int getSectionForPosition (int position)"}, "onInvalidated()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method is called when the entire data becomes invalid, most likely through a call to @B_android#database#Cursor#deactivate_E@ or @B_android#database#Cursor#close_E@ on a @B_android#database#Cursor_E@.", "history": "Added in API level 3", "FullName": "public void onInvalidated ()"}, "compare(java.lang.String,java.lang.String)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Default implementation compares the first character of word with letter.", "history": "Added in API level 3", "FullName": "protected int compare (String word, String letter)"}, "getSections()": {"Returns": [["@B_java#lang#Object_E@", "the section array"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the section array constructed from the alphabet provided in the constructor.", "history": "Added in API level 3", "FullName": "public Object[] getSections ()"}}, "Inheritance": ["@B_android#database#DataSetObserver_E@"], "ClassName": "android.widget.AlphabetIndexer", "ClassDesc": "A helper class for adapters that implement the SectionIndexer interface. If the items in the adapter are sorted by simple alphabet-based sorting, then this class provides a way to do fast indexing of large lists using binary search. It caches the indices that have been determined through the binary search and also invalidates the cache if changes occur in the cursor. Your adapter is responsible for updating the cursor by calling @B_android#widget#AlphabetIndexer#setCursor_E@ if the cursor changes. @B_android#widget#AlphabetIndexer#getPositionForSection_E@ method does the binary search for the starting index of a given section (alphabet)."}