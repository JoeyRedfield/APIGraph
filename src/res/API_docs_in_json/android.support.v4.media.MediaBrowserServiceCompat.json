{"Functions": {"getBrowserRootHints()": {"Returns": [["@B_android#os#Bundle_E@", "no returns description in source"]], "Parameters": [], "Throws": [["@B_java#lang#IllegalStateException_E@", "If this method is called outside of @B_android#support#v4#media#MediaBrowserServiceCompat#onLoadChildren_E@, @B_android#support#v4#media#MediaBrowserServiceCompat#onLoadItem_E@ or @B_android#support#v4#media#MediaBrowserServiceCompat#onSearch_E@."]], "SeeAlso": ["@B_android#support#v4#media#MediaBrowserServiceCompat#BrowserRoot_E@"], "Permissions": [], "Description": "Gets the root hints sent from the currently connected @B_android#support#v4#media#MediaBrowserCompat_E@. The root hints are service-specific arguments included in an optional bundle sent to the media browser service when connecting and retrieving the root id for browsing, or null if none. The contents of this bundle may affect the information returned when browsing. Note that this will return null when connected to @B_android#media#browse#MediaBrowser_E@ and running on API 23 or lower.", "history": "added in version 24.0.0", "FullName": "Bundle getBrowserRootHints ()"}, "MediaBrowserServiceCompat()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 23.2.0", "FullName": "MediaBrowserServiceCompat ()"}, "onCreate()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called by the system when the service is first created. Do not call this method directly.", "history": "", "FullName": "void onCreate ()"}, "getSessionToken()": {"Returns": [["@B_android#support#v4#media#session#MediaSessionCompat#Token_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the session token, or null if it has not yet been created or if it has been destroyed.", "history": "added in version 23.2.0", "FullName": "MediaSessionCompat.Token getSessionToken ()"}, "notifyChildrenChanged(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The id of the parent media item whose children changed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies all connected media browsers that the children of the specified parent id have changed in some way. This will cause browsers to fetch subscribed content again.", "history": "added in version 23.2.0", "FullName": "void notifyChildrenChanged (String parentId)"}, "onBind(android.content.Intent)": {"Returns": [["@B_android#os#IBinder_E@", "Return an IBinder through which clients can call on to the service."]], "Parameters": [["@B_android#content#Intent_E@", "Intent: The Intent that was used to bind to this service, as given to @B_android#content#Context#bindService_E@. Note that any extras that were included with the Intent at that point will not be seen here."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the communication channel to the service. May return null if clients can not bind to the service. The returned @B_android#os#IBinder_E@ is usually for a complex interface that has been Note that unlike other application components, calls on to the IBinder interface returned here may not happen on the main thread of the process. More information about the main thread can be found in", "history": "added in version 23.2.0", "FullName": "IBinder onBind (Intent intent)"}}, "Inheritance": ["java.lang.Object", "https:##developer#android#com@B_android#content#Context_E@", "https:##developer#android#com@B_android#content#ContextWrapper_E@", "https:##developer#android#com@B_android#app#Service_E@"], "ClassName": "android.support.v4.media.MediaBrowserServiceCompat", "ClassDesc": "Base class for media browse services. Media browse services enable applications to browse media content provided by an application and ask the application to start playing it. They may also be used to control content that is already playing by way of a @B_android#support#v4#media#session#MediaSessionCompat_E@. To extend this class, you must declare the service in your manifest file with an intent filter with the @B_android#support#v4#media#MediaBrowserServiceCompat#SERVICE_INTERFACE_E@ action. For example:"}