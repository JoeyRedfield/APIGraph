{"Functions": {"setEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void setEnabled (boolean enabled)"}, "ActionChooserView(android.content.Context)": {"Returns": [], "Parameters": [["Context", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "ActionChooserView (Context context)"}, "onLayout(boolean, int, int, int, int)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void onLayout (boolean changed, int left, int top, int right, int bottom)"}, "onTouchEvent(android.view.MotionEvent)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["MotionEvent", "MotionEvent no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "boolean onTouchEvent (MotionEvent event)"}, "canScrollHorizontally(int)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "boolean canScrollHorizontally (int direction)"}, "onDetachedFromWindow()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void onDetachedFromWindow ()"}, "performSelectOption(int)": {"Returns": [], "Parameters": [["int", "int: The option to select, either @B_android#support#wearable#view#ActionChooserView#OPTION_START_E@ or @B_android#support#wearable#view#ActionChooserView#OPTION_END_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Selects the provided option, animating the option's icon to the center of the view and triggering the appropriate callbacks.", "history": "", "FullName": "void performSelectOption (int option)"}, "onAttachedToWindow()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void onAttachedToWindow ()"}, "onDraw(android.graphics.Canvas)": {"Returns": [], "Parameters": [["Canvas", "Canvas no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void onDraw (Canvas canvas)"}}, "Inheritance": ["http:##developer#android#com@B_java#lang#Object_E@", "http:##developer#android#com@B_android#view#View_E@"], "ClassName": "android.support.wearable.view.ActionChooserView", "ClassDesc": "this approach is no longer preferred. Consider using regular Android classes instead, such as dialogs (eg. http:##developer#android#com@B_android#app#AlertDialog_E@) The action chooser view allows the user to select from two options that are presented in the sides of the view. The view background is transparent so that it may be populated by the containing parent. You can add this view to your layout as follows: To set the properties of either option, you can call https:##developer#android#com@B_android#support#wearable#view#ActionChooserView#setOption_E@, specifying https:##developer#android#com@B_android#support#wearable#view#ActionChooserView#OPTION_START_E@ for the option at the start and https:##developer#android#com@B_android#support#wearable#view#ActionChooserView#OPTION_END_E@ for the option at the end: mChooserView.setOption(ActionChooserView.OPTION_START, acceptIcon, getResources().getColor( R.color.option_color));"}