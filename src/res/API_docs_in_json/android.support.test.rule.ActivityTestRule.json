{"Functions": {"getActivity()": {"Returns": [["T", "The activity under test."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "T getActivity ()"}, "launchActivity(android.content.Intent)": {"Returns": [["T", "the Activity launched by this rule."]], "Parameters": [["Intent", "Intent: The Intent that will be used to start the Activity under test. If startIntent is null, the Intent returned by @B_android#support#test#rule#ActivityTestRule#getActivityIntent_E@ is used."]], "Throws": [], "SeeAlso": ["@B_android#support#test#rule#ActivityTestRule#getActivityIntent_E@"], "Permissions": [], "Description": "Launches the Activity under test. Don't call this method directly, unless you explicitly requested not to lazily launch the Activity manually using the launchActivity flag in @B_android#support#test#rule#ActivityTestRule#ActivityTestRule_E@. Usage:", "history": "", "FullName": "T launchActivity (Intent startIntent)"}, "ActivityTestRule(java.lang.Class<T>, boolean)": {"Returns": [], "Parameters": [["Class", "Class: The activity under test. This must be a class in the instrumentation targetPackage specified in the AndroidManifest.xml"], ["boolean", "boolean: true if the Activity should be placed into \"touch mode\" when started"]], "Throws": [], "SeeAlso": ["@B_android#support#test#rule#ActivityTestRule#ActivityTestRule_E@"], "Permissions": [], "Description": "Similar to @B_android#support#test#rule#ActivityTestRule#ActivityTestRule_E@ but defaults to launch the activity under test once per", "history": "", "FullName": "ActivityTestRule (Class<T> activityClass, boolean initialTouchMode)"}, "ActivityTestRule(java.lang.Class<T>)": {"Returns": [], "Parameters": [["Class", "Class: The activity under test. This must be a class in the instrumentation targetPackage specified in the AndroidManifest.xml"]], "Throws": [], "SeeAlso": ["@B_android#support#test#rule#ActivityTestRule#ActivityTestRule_E@"], "Permissions": [], "Description": "Similar to @B_android#support#test#rule#ActivityTestRule#ActivityTestRule_E@ but with \"touch mode\" disabled.", "history": "", "FullName": "ActivityTestRule (Class<T> activityClass)"}, "beforeActivityLaunched()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override this method to execute any code that should run before your @B_android#app#Activity_E@ is created and launched. This method is called before each test method, including any method annotated with", "history": "", "FullName": "void beforeActivityLaunched ()"}, "afterActivityLaunched()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override this method to execute any code that should run after your @B_android#app#Activity_E@ is launched, but before any test code is run including any method annotated with Prefer", "history": "", "FullName": "void afterActivityLaunched ()"}, "afterActivityFinished()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override this method to execute any code that should run after your @B_android#app#Activity_E@ is finished. This method is called after each test method, including any method annotated with", "history": "", "FullName": "void afterActivityFinished ()"}, "getActivityIntent()": {"Returns": [["Intent", "The Intent as if supplied to @B_android#content#Context#startActivity_E@."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override this method to set up Intent as if supplied to @B_android#content#Context#startActivity_E@. The default Intent (if this method returns null or is not overwritten) is: action = @B_android#content#Intent#ACTION_MAIN_E@ flags = @B_android#content#Intent#FLAG_ACTIVITY_NEW_TASK_E@ All other intent fields are null or empty.", "history": "", "FullName": "Intent getActivityIntent ()"}}, "Inheritance": ["https:##developer#android#com@B_java#lang#Object_E@"], "ClassName": "https:##developer#android#com@B_android#app#Activity_E@", "ClassDesc": "This rule provides functional testing of a single https:##developer#android#com@B_android#app#Activity_E@. When launchActivity is set to true in the constructor, the Activity under test will be launched before each test annotated with The Activity can be manually launched with @B_android#support#test#rule#ActivityTestRule#launchActivity_E@, and manually finished with @B_android#support#test#rule#ActivityTestRule#finishActivity_E@. If the Activity is running at the end of the test, the test rule will finish it. During the duration of the test you will be able to manipulate your Activity directly using the reference obtained from @B_android#support#test#rule#ActivityTestRule#getActivity_E@. If the Activity is finished and relaunched, the reference returned by @B_android#support#test#rule#ActivityTestRule#getActivity_E@ will always point to the current instance of the Activity."}