{"Functions": {"overridesItemVisibility()": {"Returns": [["boolean", "true if this ActionProvider overrides the visibility of the MenuItem it is bound to, false otherwise. The default implementation returns false."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#view#ActionProvider#isVisible_E@"], "Permissions": [], "Description": "The result of this method determines whether or not @B_android#view#ActionProvider#isVisible_E@ will be used by the @B_android#view#MenuItem_E@ this ActionProvider is bound to help determine its visibility.", "history": "Added in API level 16", "FullName": "public boolean overridesItemVisibility ()"}, "onPerformDefaultAction()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Performs an optional default action. For the case of an action provider placed in a menu item not shown as an action this method is invoked if previous callbacks for processing menu selection has handled the event. A menu item selection is processed in the following order: Receiving a call to @B_android#view#MenuItem#OnMenuItemClickListener#onMenuItemClick_E@. Receiving a call to @B_android#app#Activity#onOptionsItemSelected_E@ Receiving a call to @B_android#app#Fragment#onOptionsItemSelected_E@ Launching the @B_android#content#Intent_E@ set via @B_android#view#MenuItem#setIntent_E@ Invoking this method. The default implementation does not perform any action and returns false.", "history": "Added in API level 14", "FullName": "public boolean onPerformDefaultAction ()"}, "onPrepareSubMenu(android.view.SubMenu)": {"Returns": [], "Parameters": [["@B_android#view#SubMenu_E@", "SubMenu: Submenu that will be displayed"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called to prepare an associated submenu for the menu item backed by this ActionProvider. if @B_android#view#ActionProvider#hasSubMenu_E@ returns true, this method will be called when the menu item is selected to prepare the submenu for presentation to the user. Apps may use this to create or alter submenu content right before display.", "history": "Added in API level 14", "FullName": "public void onPrepareSubMenu (SubMenu subMenu)"}, "onCreateActionView(android.view.MenuItem)": {"Returns": [["@B_android#view#View_E@", "the new action view"]], "Parameters": [["@B_android#view#MenuItem_E@", "MenuItem: MenuItem to create the action view for"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Factory method called by the Android framework to create new action views. This method returns a new action view for the given MenuItem. If your ActionProvider implementation overrides the deprecated no-argument overload @B_android#view#ActionProvider#onCreateActionView_E@, overriding this method for devices running API 16 or later is recommended but optional. The default implementation calls @B_android#view#ActionProvider#onCreateActionView_E@ for compatibility with applications written for older platform versions.", "history": "Added in API level 16", "FullName": "public View onCreateActionView (MenuItem forItem)"}, "refreshVisibility()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "If this ActionProvider is associated with an item in a menu, refresh the visibility of the item based on @B_android#view#ActionProvider#overridesItemVisibility_E@ and @B_android#view#ActionProvider#isVisible_E@. If @B_android#view#ActionProvider#overridesItemVisibility_E@ returns false, this call will have no effect.", "history": "Added in API level 16", "FullName": "public void refreshVisibility ()"}, "ActionProvider(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: Context for accessing resources."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new instance. ActionProvider classes should always implement a constructor that takes a single Context parameter for inflating from menu XML.", "history": "Added in API level 14", "FullName": "public ActionProvider (Context context)"}, "hasSubMenu()": {"Returns": [["boolean", "true if the item backed by this provider should have an associated submenu"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Determines if this ActionProvider has a submenu associated with it. Associated submenus will be shown when an action view is not. This provider instance will receive a call to @B_android#view#ActionProvider#onPrepareSubMenu_E@ after the call to @B_android#view#ActionProvider#onPerformDefaultAction_E@ and before a submenu is displayed to the user.", "history": "Added in API level 14", "FullName": "public boolean hasSubMenu ()"}, "isVisible()": {"Returns": [["boolean", "true if the MenuItem this ActionProvider is bound to is visible, false if it is invisible. The default implementation returns true."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "If @B_android#view#ActionProvider#overridesItemVisibility_E@ returns true, the return value of this method will help determine the visibility of the @B_android#view#MenuItem_E@ this ActionProvider is bound to. If the MenuItem's visibility is explicitly set to false by the application, the MenuItem will not be shown, even if this method returns true.", "history": "Added in API level 16", "FullName": "public boolean isVisible ()"}, "setVisibilityListener(android.view.ActionProvider.VisibilityListener)": {"Returns": [], "Parameters": [["@B_android#view#ActionProvider#VisibilityListener_E@", "ActionProvider.VisibilityListener: listener to set"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a listener to be notified when this ActionProvider's overridden visibility changes. This should only be used by MenuItem implementations.", "history": "Added in API level 16", "FullName": "public void setVisibilityListener (ActionProvider.VisibilityListener listener)"}, "onCreateActionView()": {"Returns": [["@B_android#view#View_E@", "A new action view."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "use @B_android#view#ActionProvider#onCreateActionView_E@ Factory method called by the Android framework to create new action views. This method has been deprecated in favor of @B_android#view#ActionProvider#onCreateActionView_E@. Newer apps that wish to support platform versions prior to API 16 should also implement this method to return a valid action view.", "history": "Added in API level 14 Deprecated in API level 16", "FullName": "public abstract View onCreateActionView ()"}}, "Inheritance": [], "ClassName": "android.view.ActionProvider", "ClassDesc": "An ActionProvider defines rich menu interaction in a single component. ActionProvider can generate action views for use in the action bar, dynamically populate submenus of a MenuItem, and handle default menu item invocations. An ActionProvider can be optionally specified for a @B_android#view#MenuItem_E@ and will be responsible for creating the action view that appears in the @B_android#app#ActionBar_E@ in place of a simple button in the bar. When the menu item is presented in a way that does not allow custom action views, (e.g. in an overflow menu,) the ActionProvider can perform a default action. There are two ways to use an action provider: Set the action provider on a @B_android#view#MenuItem_E@ directly by calling @B_android#view#MenuItem#setActionProvider_E@. Declare the action provider in an XML menu resource. For example:"}