{"Functions": {"writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public void writeToParcel (Parcel parcel, int flags)"}, "toString()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public String toString ()"}, "getUid()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the serial number or other unique ID for the hardware", "history": "", "FullName": "public String getUid ()"}, "getModel()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the end-user-visible model name for the device.", "history": "", "FullName": "public String getModel ()"}, "describeContents()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int describeContents ()"}, "getType()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the constant representing the type of the device. This will usually be one of the values from the type constants in this class, but it's not required to be. Any other value should be treated as @B_com#google#android#gms#fitness#data#Device#TYPE_UNKNOWN_E@.", "history": "", "FullName": "public int getType ()"}, "equals(java.lang.Object)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public boolean equals (Object that)"}, "Device(java.lang.String, java.lang.String, java.lang.String, int)": {"Returns": [], "Parameters": [["String", "the manufacturer of the product/hardware"], ["String", "the end-user-visible name for the end product"], ["String", "a serial number or other unique identifier for the particular device hardware"], ["int", "the type of device. One of the type constants."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new device.", "history": "", "FullName": "public Device (String manufacturer, String model, String uid, int type)"}, "getManufacturer()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the manufacturer of the product/hardware.", "history": "", "FullName": "public String getManufacturer ()"}, "getLocalDevice(android.content.Context)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the Device representation of the local device, which can be used when defining local data sources.", "history": "", "FullName": "public static Device getLocalDevice (Context context)"}, "hashCode()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int hashCode ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.fitness.data.Device", "ClassDesc": "Representation of an integrated device (such as a phone or a wearable) that can hold sensors. Each sensor is exposed as a @B_com#google#android#gms#fitness#data#DataSource_E@. The main purpose of the Device information contained in this class is to identify the hardware of a particular data source. This can be useful in different ways, including: distinguishing two similar sensors on different devices (the step counter on two nexus 5 phones, for instance) display the source of data to the user (by using the device make / model) treat data differently depending on sensor type (accelerometers on a watch may give different patterns than those on a phone) build different analysis models for each device/version."}