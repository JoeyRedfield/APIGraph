{"Functions": {"setOption(int, java.lang.Object)": {"Returns": [], "Parameters": [["int", "int: identifies the option"], ["@B_java#lang#Object_E@", "Object: the parameter of the socket option"]], "Throws": [["@B_java#net#SocketException_E@", "if the option is unrecognized, the socket is closed, or some low-level error occurred"]], "SeeAlso": ["@B_java#net#SocketOptions#getOption_E@"], "Permissions": [], "Description": "Enable/disable the option specified by Any option can be disabled using this method with a Boolean(false): For an option that has a notion of on and off, and requires a non-boolean parameter, setting its value to anything other than Throws SocketException if the option is unrecognized, the socket is closed, or some low-level error occurred", "history": "added in API level 1", "FullName": "public abstract void setOption (int optID, Object value)"}, "getOption(int)": {"Returns": [["@B_java#lang#Object_E@", "the value of the option"]], "Parameters": [["int", "int: an int identifying the option to fetch"]], "Throws": [["@B_java#net#SocketException_E@", "if the socket is closed"], ["@B_java#net#SocketException_E@", "if optID is unknown along the protocol stack (including the SocketImpl)"]], "SeeAlso": ["@B_java#net#SocketOptions#setOption_E@"], "Permissions": [], "Description": "Fetch the value of an option. Binary options will return java.lang.Boolean(true) if enabled, java.lang.Boolean(false) if disabled, e.g.: For options that take a particular type as a parameter, getOption(int) will return the parameter's value, else it will return java.lang.Boolean(false):", "history": "Added in API level 1", "FullName": "public abstract Object getOption (int optID)"}, "setOption(int,java.lang.Object)": {"Returns": [], "Parameters": [["int", "int: identifies the option"], ["@B_java#lang#Object_E@", "Object: the parameter of the socket option"]], "Throws": [["@B_java#net#SocketException_E@", "if the option is unrecognized, the socket is closed, or some low-level error occurred"]], "SeeAlso": ["@B_java#net#SocketOptions#getOption_E@"], "Permissions": [], "Description": "Enable/disable the option specified by Any option can be disabled using this method with a Boolean(false): For an option that has a notion of on and off, and requires a non-boolean parameter, setting its value to anything other than Throws SocketException if the option is unrecognized, the socket is closed, or some low-level error occurred", "history": "Added in API level 1", "FullName": "public abstract void setOption (int optID, Object value)"}}, "Inheritance": [], "ClassName": "java.net.SocketOptions", "ClassDesc": "Interface of methods to get/set socket options. This interface is implemented by: The methods and constants which specify options in this interface are for implementation only. If you're not subclassing SocketImpl or DatagramSocketImpl,"}