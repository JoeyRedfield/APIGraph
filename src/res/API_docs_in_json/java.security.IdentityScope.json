{"Functions": {"getIdentity(java.security.PublicKey)": {"Returns": [["@B_java#security#Identity_E@", "the identity with the given key, or null if there are no identities in this scope with that key."]], "Parameters": [["@B_java#security#PublicKey_E@", "PublicKey: the public key for the identity to be returned."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the identity with the specified public key.", "history": "Added in API level 1 Deprecated in API level 3", "FullName": "public abstract Identity getIdentity (PublicKey key)"}, "getIdentity(java.security.Principal)": {"Returns": [["@B_java#security#Identity_E@", "the identity whose name is the same as that of the principal, or null if there are no identities of the same name in this scope."]], "Parameters": [["@B_java#security#Principal_E@", "Principal: the principal corresponding to the identity to be retrieved."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the identity whose name is the same as that of the specified principal. (Note: Identity implements Principal.)", "history": "Added in API level 1 Deprecated in API level 3", "FullName": "public Identity getIdentity (Principal principal)"}, "size()": {"Returns": [["int", "the number of identities within this identity scope."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of identities within this identity scope.", "history": "Added in API level 1 Deprecated in API level 3", "FullName": "public abstract int size ()"}, "IdentityScope(java.lang.String,java.security.IdentityScope)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the scope name."], ["@B_java#security#IdentityScope_E@", "IdentityScope: the scope for the new identity scope."]], "Throws": [["@B_java#security#KeyManagementException_E@", "if there is already an identity with the same name in the scope."]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new identity scope with the specified name and scope.", "history": "Added in API level 1", "FullName": "public IdentityScope (String name, IdentityScope scope)"}, "removeIdentity(java.security.Identity)": {"Returns": [], "Parameters": [["@B_java#security#Identity_E@", "Identity: the identity to be removed."]], "Throws": [["@B_java#security#KeyManagementException_E@", "if the identity is missing, or another exception occurs."]], "SeeAlso": [], "Permissions": [], "Description": "Removes an identity from this identity scope.", "history": "Added in API level 1 Deprecated in API level 3", "FullName": "public abstract void removeIdentity (Identity identity)"}, "setSystemScope(java.security.IdentityScope)": {"Returns": [], "Parameters": [["@B_java#security#IdentityScope_E@", "IdentityScope: the scope to set."]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its checkSecurityAccess method doesn't allow setting the identity scope."]], "SeeAlso": ["@B_java#security#IdentityScope#getSystemScope_E@", "@B_java#lang#SecurityManager#checkSecurityAccess_E@"], "Permissions": [], "Description": "Sets the system's identity scope. First, if there is a security manager, its checkSecurityAccess method is called with \"setSystemScope\" as its argument to see if it's ok to set the identity scope.", "history": "Added in API level 1 Deprecated in API level 3", "FullName": "protected static void setSystemScope (IdentityScope scope)"}, "getSystemScope()": {"Returns": [["@B_java#security#IdentityScope_E@", "the system's identity scope, or null if none has been set."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#security#IdentityScope#setSystemScope_E@"], "Permissions": [], "Description": "Returns the system's identity scope.", "history": "Added in API level 1 Deprecated in API level 3", "FullName": "public static IdentityScope getSystemScope ()"}, "IdentityScope(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the scope name."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new identity scope with the specified name.", "history": "Added in API level 1", "FullName": "public IdentityScope (String name)"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of this identity scope."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of this identity scope, including its name, its scope name, and the number of identities in this identity scope.", "history": "Added in API level 1 Deprecated in API level 3", "FullName": "public String toString ()"}, "identities()": {"Returns": [["@B_java#util#Enumeration_E@", "an enumeration of all identities in this identity scope."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an enumeration of all identities in this identity scope.", "history": "Added in API level 1 Deprecated in API level 3", "FullName": "public abstract Enumeration<Identity> identities ()"}, "getIdentity(java.lang.String)": {"Returns": [["@B_java#security#Identity_E@", "the identity named name, or null if there are no identities named name in this scope."]], "Parameters": [["@B_java#lang#String_E@", "String: the name of the identity to be retrieved."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the identity in this scope with the specified name (if any).", "history": "Added in API level 1 Deprecated in API level 3", "FullName": "public abstract Identity getIdentity (String name)"}, "addIdentity(java.security.Identity)": {"Returns": [], "Parameters": [["@B_java#security#Identity_E@", "Identity: the identity to be added."]], "Throws": [["@B_java#security#KeyManagementException_E@", "if the identity is not valid, a name conflict occurs, another identity has the same public key as the identity being added, or another exception occurs."]], "SeeAlso": [], "Permissions": [], "Description": "Adds an identity to this identity scope.", "history": "added in API level 1", "FullName": "public abstract void addIdentity (Identity identity)"}, "IdentityScope()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This constructor is used for serialization only and should not be used by subclasses.", "history": "Added in API level 1", "FullName": "protected IdentityScope ()"}}, "Inheritance": ["@B_java#security#Identity_E@"], "ClassName": "java.security.IdentityScope", "ClassDesc": "This class is no longer used. Its functionality has been replaced by java.security.KeyStore, the java.security.cert package, and java.security.Principal. This class represents a scope for identities. It is an Identity itself, and therefore has a name and can have a scope. It can also optionally have a public key and associated certificates. An IdentityScope can contain Identity objects of all kinds, including Signers. All types of Identity objects can be retrieved, added, and removed using the same methods. Note that it is possible, and in fact expected, that different types of identity scopes will apply different policies for their various operations on the various types of Identities. There is a one-to-one mapping between keys and identities, and there can only be one copy of one key per scope. For example, suppose"}