{"Functions": {"findNextKeyboardNavigationCluster(android.view.View,android.view.View,int)": {"Returns": [["@B_android#view#View_E@", "The next cluster, or null if none exists"]], "Parameters": [["@B_android#view#View_E@", "View: The view tree to look inside. Cannot be null This value must never be null."], ["@B_android#view#View_E@", "View: The starting point of the search. Null means the default cluster This value may be null."], ["int", "int: Direction to look Value is @B_android#view#View#FOCUS_BACKWARD_E@, @B_android#view#View#FOCUS_FORWARD_E@, @B_android#view#View#FOCUS_LEFT_E@, @B_android#view#View#FOCUS_UP_E@, @B_android#view#View#FOCUS_RIGHT_E@, or @B_android#view#View#FOCUS_DOWN_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Find the root of the next keyboard navigation cluster after the current one.", "history": "Added in API level 26", "FullName": "public View findNextKeyboardNavigationCluster (View root, View currentCluster, int direction)"}, "findNextFocus(android.view.ViewGroup,android.view.View,int)": {"Returns": [["@B_android#view#View_E@", "The next focusable view, or null if none exists."]], "Parameters": [["@B_android#view#ViewGroup_E@", "ViewGroup: Contains focused. Cannot be null."], ["@B_android#view#View_E@", "View: Has focus now."], ["int", "int: Direction to look."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Find the next view to take focus in root's descendants, starting from the view that currently is focused.", "history": "Added in API level 1", "FullName": "public final View findNextFocus (ViewGroup root, View focused, int direction)"}, "getInstance()": {"Returns": [["@B_android#view#FocusFinder_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the focus finder for this thread.", "history": "Added in API level 1", "FullName": "public static FocusFinder getInstance ()"}, "findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int)": {"Returns": [["@B_android#view#View_E@", "The next focusable view, or null if none exists."]], "Parameters": [["@B_android#view#ViewGroup_E@", "ViewGroup: Contains focusedRect. Cannot be null."], ["@B_android#graphics#Rect_E@", "Rect: The starting point of the search."], ["int", "int: Direction to look."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Find the next view to take focus in root's descendants, searching from a particular rectangle in root's coordinates.", "history": "Added in API level 1", "FullName": "public View findNextFocusFromRect (ViewGroup root, Rect focusedRect, int direction)"}, "findNearestTouchable(android.view.ViewGroup,int,int,int,int[])": {"Returns": [["@B_android#view#View_E@", "The nearest touchable view, or null if none exists."]], "Parameters": [["@B_android#view#ViewGroup_E@", "ViewGroup: The root of the tree in which to search"], ["int", "int: X coordinate from which to start the search"], ["int", "int: Y coordinate from which to start the search"], ["int", "int: Direction to look"], ["int[]", "int: Offset from the to the edge of the nearest view. Note that this array may already be populated with values."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Find the nearest touchable view to the specified view.", "history": "Added in API level 1", "FullName": "public View findNearestTouchable (ViewGroup root, int x, int y, int direction, int[] deltas)"}}, "Inheritance": [], "ClassName": "android.view.FocusFinder", "ClassDesc": "The algorithm used for finding the next focusable view in a given direction from a view that currently has focus."}