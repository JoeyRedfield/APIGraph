{"Functions": {"attribute()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The attribute that the value is to be retrieved for.", "history": "", "FullName": "String attribute ()"}, "event()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The event used to trigger changes. This is used in @B_android#databinding#BindingAdapter_E@s for the data binding system to set the event listener when two-way binding is used.", "history": "", "FullName": "String event ()"}}, "Inheritance": [], "ClassName": "android.databinding.InverseBindingAdapter", "ClassDesc": "InverseBindingAdapter is associated with a method used to retrieve the value for a View when setting values gathered from the View. This is similar to @B_android#databinding#BindingAdapter_E@s: The default value for event is the attribute name suffixed with \"AttrChanged\". In the above example, the default value would have been android:textAttrChanged even if it wasn't provided. The event attribute is used to notify the data binding system that the value has changed. The developer will typically create a @B_android#databinding#BindingAdapter_E@ to assign the event. For example: Like BindingAdapters, InverseBindingAdapter methods may also take @B_android#databinding#DataBindingComponent_E@ as the first parameter and may be an instance method with the instance retrieved from the DataBindingComponent."}