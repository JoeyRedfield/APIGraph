{"Functions": {"onKey(android.view.View,int,android.view.KeyEvent)": {"Returns": [["boolean", "True if the listener has consumed the event, false otherwise."]], "Parameters": [["@B_android#view#View_E@", "View: The view the key has been dispatched to."], ["int", "int: The code for the physical key that was pressed"], ["@B_android#view#KeyEvent_E@", "KeyEvent: The KeyEvent object containing full information about the event."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a hardware key is dispatched to a view. This allows listeners to get a chance to respond before the target view. Key presses in software keyboards will generally NOT trigger this method, although some may elect to do so in some situations. Do not assume a software input method has to be key-based; even if it is, it may use key presses in a different way than you expect, so there is no way to reliably catch soft input key presses.", "history": "Added in API level 1", "FullName": "public abstract boolean onKey (View v, int keyCode, KeyEvent event)"}}, "Inheritance": [], "ClassName": "android.view.View.OnKeyListener", "ClassDesc": "Interface definition for a callback to be invoked when a hardware key event is dispatched to this view. The callback will be invoked before the key event is given to the view. This is only useful for hardware keyboards; a software input method has no obligation to trigger this listener."}