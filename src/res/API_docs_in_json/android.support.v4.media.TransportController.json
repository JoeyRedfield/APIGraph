{"Functions": {"seekTo(long)": {"Returns": [], "Parameters": [["long", "long: Position to move to, in milliseconds."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Move to a new location in the media stream.", "history": "", "FullName": "void seekTo (long pos)"}, "pausePlaying()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Request that the player pause its playback and stay at its current position.", "history": "", "FullName": "void pausePlaying ()"}, "isPlaying()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return whether the player is currently playing its stream.", "history": "", "FullName": "boolean isPlaying ()"}, "getDuration()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the total duration of the media stream, in milliseconds.", "history": "", "FullName": "long getDuration ()"}, "getCurrentPosition()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the current playback location in the media stream, in milliseconds.", "history": "", "FullName": "long getCurrentPosition ()"}, "getBufferPercentage()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve amount, in percentage (0-100), that the media stream has been buffered on to the local device. Return 100 if the stream is always local.", "history": "", "FullName": "int getBufferPercentage ()"}, "getTransportControlFlags()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the flags for the media transport control buttons that this transport supports. Result is a combination of the following flags: @B_android#support#v4#media#TransportMediator#FLAG_KEY_MEDIA_PREVIOUS_E@, @B_android#support#v4#media#TransportMediator#FLAG_KEY_MEDIA_REWIND_E@, @B_android#support#v4#media#TransportMediator#FLAG_KEY_MEDIA_PLAY_E@, @B_android#support#v4#media#TransportMediator#FLAG_KEY_MEDIA_PLAY_PAUSE_E@, @B_android#support#v4#media#TransportMediator#FLAG_KEY_MEDIA_PAUSE_E@, @B_android#support#v4#media#TransportMediator#FLAG_KEY_MEDIA_STOP_E@, @B_android#support#v4#media#TransportMediator#FLAG_KEY_MEDIA_FAST_FORWARD_E@, @B_android#support#v4#media#TransportMediator#FLAG_KEY_MEDIA_NEXT_E@", "history": "", "FullName": "int getTransportControlFlags ()"}, "stopPlaying()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Request that the player stop its playback; it may clear its state in whatever way is appropriate.", "history": "", "FullName": "void stopPlaying ()"}, "TransportController()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "TransportController ()"}, "startPlaying()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Request that the player start its playback at its current position.", "history": "", "FullName": "void startPlaying ()"}, "registerStateListener(android.support.v4.media.TransportStateListener)": {"Returns": [], "Parameters": [["@B_android#support#v4#media#TransportStateListener_E@", "TransportStateListener no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Start listening to changes in playback state.", "history": "", "FullName": "void registerStateListener (TransportStateListener listener)"}, "unregisterStateListener(android.support.v4.media.TransportStateListener)": {"Returns": [], "Parameters": [["@B_android#support#v4#media#TransportStateListener_E@", "TransportStateListener no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Stop listening to changes in playback state.", "history": "", "FullName": "void unregisterStateListener (TransportStateListener listener)"}}, "Inheritance": [], "ClassName": "android.support.v4.media.TransportController", "ClassDesc": "Base interface to controlling a media transport. This is the interface for implementing things like on-screen controls: it allows them to request changes in playback, retrieve the current playback state, and monitor for changes to the playback state."}