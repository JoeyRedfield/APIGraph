{"Functions": {"onStopRecording()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the application requests to stop TV program recording. Recording must stop immediately when this method is called. The session must create a new data entry in the @B_android#media#tv#TvContract#RecordedPrograms_E@ table that describes the newly recorded program and call @B_android#media#tv#TvInputService#RecordingSession#notifyRecordingStopped_E@ with the URI to that entry. If the stop request cannot be fulfilled, the session must call @B_android#media#tv#TvInputService#RecordingSession#notifyError_E@.", "history": "Added in API level 24", "FullName": "public abstract void onStopRecording ()"}, "onTune(android.net.Uri)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri: The URI of a channel."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the application requests to tune to a given channel for TV program recording. The application may call this method before starting or after stopping recording, but not during recording. The session must call @B_android#media#tv#TvInputService#RecordingSession#notifyTuned_E@ if the tune request was fulfilled, or @B_android#media#tv#TvInputService#RecordingSession#notifyError_E@ otherwise.", "history": "Added in API level 24", "FullName": "public abstract void onTune (Uri channelUri)"}, "notifyRecordingStopped(android.net.Uri)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri: The URI of the newly recorded program."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Informs the application that this recording session has stopped recording and created a new data entry in the @B_android#media#tv#TvContract#RecordedPrograms_E@ table that describes the newly recorded program. The recording session must call this method in response to @B_android#media#tv#TvInputService#RecordingSession#onStopRecording_E@. The session may call it even before receiving a call to @B_android#media#tv#TvInputService#RecordingSession#onStopRecording_E@ if a partially recorded program is available when there is an error.", "history": "Added in API level 24", "FullName": "public void notifyRecordingStopped (Uri recordedProgramUri)"}, "TvInputService.RecordingSession(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The context of the application"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new RecordingSession.", "history": "Added in API level 24", "FullName": "public TvInputService.RecordingSession (Context context)"}, "onRelease()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the application requests to release all the resources held by this recording session.", "history": "Added in API level 24", "FullName": "public abstract void onRelease ()"}, "onStartRecording(android.net.Uri)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri: The URI for the TV program to record, built by @B_android#media#tv#TvContract#buildProgramUri_E@. Can be null. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the application requests to start TV program recording. Recording must start immediately when this method is called. The application may supply the URI for a TV program for filling in program specific data fields in the @B_android#media#tv#TvContract#RecordedPrograms_E@ table. A non-null programUri implies the started recording should be of that specific program, whereas null programUri does not impose such a requirement and the recording can span across multiple TV programs. In either case, the application must call @B_android#media#tv#TvRecordingClient#stopRecording_E@ to stop the recording. The session must call @B_android#media#tv#TvInputService#RecordingSession#notifyError_E@ if the start request cannot be fulfilled.", "history": "Added in API level 24", "FullName": "public abstract void onStartRecording (Uri programUri)"}, "onTune(android.net.Uri, android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri: The URI of a channel."], ["@B_android#os#Bundle_E@", "Bundle: Domain-specific data for this tune request. Keys must be a scoped name, i.e. prefixed with a package name you own, so that different developers will not create conflicting keys."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the application requests to tune to a given channel for TV program recording. Override this method in order to handle domain-specific features that are only known between certain TV inputs and their clients. The application may call this method before starting or after stopping recording, but not during recording. The default implementation calls @B_android#media#tv#TvInputService#RecordingSession#onTune_E@. The session must call @B_android#media#tv#TvInputService#RecordingSession#notifyTuned_E@ if the tune request was fulfilled, or @B_android#media#tv#TvInputService#RecordingSession#notifyError_E@ otherwise.", "history": "added in API level 24", "FullName": "public void onTune (Uri channelUri, Bundle params)"}, "notifyError(int)": {"Returns": [], "Parameters": [["int", "int: The error code. Should be one of the followings. TvInputManager#RECORDING_ERROR_UNKNOWN TvInputManager#RECORDING_ERROR_INSUFFICIENT_SPACE TvInputManager#RECORDING_ERROR_RESOURCE_BUSY Value is @B_android#media#tv#TvInputManager#RECORDING_ERROR_UNKNOWN_E@, @B_android#media#tv#TvInputManager#RECORDING_ERROR_INSUFFICIENT_SPACE_E@, or @B_android#media#tv#TvInputManager#RECORDING_ERROR_RESOURCE_BUSY_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Informs the application that there is an error and this recording session is no longer able to start or continue recording. It may be called at any time after the recording session is created until @B_android#media#tv#TvInputService#RecordingSession#onRelease_E@ is called. The application may release the current session upon receiving the error code through @B_android#media#tv#TvRecordingClient#RecordingCallback#onError_E@. The session may call @B_android#media#tv#TvInputService#RecordingSession#notifyRecordingStopped_E@ if a partially recorded but still playable program is available, before calling this method.", "history": "Added in API level 24", "FullName": "public void notifyError (int error)"}, "notifyTuned(android.net.Uri)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri: The URI of a channel."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Informs the application that this recording session has been tuned to the given channel and is ready to start recording. Upon receiving a call to @B_android#media#tv#TvInputService#RecordingSession#onTune_E@, the session is expected to tune to the passed channel and call this method to indicate that it is now available for immediate recording. When @B_android#media#tv#TvInputService#RecordingSession#onStartRecording_E@ is called, recording must start with minimal delay.", "history": "Added in API level 24", "FullName": "public void notifyTuned (Uri channelUri)"}, "onAppPrivateCommand(java.lang.String,android.os.Bundle)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: Name of the command to be performed. This must be a scoped name, i.e. prefixed with a package name you own, so that different developers will not create conflicting commands. This value must never be null."], ["@B_android#os#Bundle_E@", "Bundle: Any data to include with the command."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Processes a private command sent from the application to the TV input. This can be used to provide domain-specific features that are only known between certain TV inputs and their clients.", "history": "Added in API level 24", "FullName": "public void onAppPrivateCommand (String action, Bundle data)"}, "onTune(android.net.Uri,android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri: The URI of a channel."], ["@B_android#os#Bundle_E@", "Bundle: Domain-specific data for this tune request. Keys must be a scoped name, i.e. prefixed with a package name you own, so that different developers will not create conflicting keys."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the application requests to tune to a given channel for TV program recording. Override this method in order to handle domain-specific features that are only known between certain TV inputs and their clients. The application may call this method before starting or after stopping recording, but not during recording. The default implementation calls @B_android#media#tv#TvInputService#RecordingSession#onTune_E@. The session must call @B_android#media#tv#TvInputService#RecordingSession#notifyTuned_E@ if the tune request was fulfilled, or @B_android#media#tv#TvInputService#RecordingSession#notifyError_E@ otherwise.", "history": "Added in API level 24", "FullName": "public void onTune (Uri channelUri, Bundle params)"}}, "Inheritance": [], "ClassName": "android.media.tv.TvInputService.RecordingSession", "ClassDesc": "Base class for derived classes to implement to provide a TV input recording session."}