{"Functions": {"onEvent(int,android.os.Bundle)": {"Returns": [], "Parameters": [["int", "int: the type of the occurred event"], ["@B_android#os#Bundle_E@", "Bundle: a Bundle containing the passed parameters"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reserved for adding future events.", "history": "Added in API level 8", "FullName": "public abstract void onEvent (int eventType, Bundle params)"}, "onPartialResults(android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: the returned results. To retrieve the results in ArrayList<String> format use @B_android#os#Bundle#getStringArrayList_E@ with @B_android#speech#SpeechRecognizer#RESULTS_RECOGNITION_E@ as a parameter"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when partial recognition results are available. The callback might be called at any time between @B_android#speech#RecognitionListener#onBeginningOfSpeech_E@ and @B_android#speech#RecognitionListener#onResults_E@ when partial results are ready. This method may be called zero, one or multiple times for each call to @B_android#speech#SpeechRecognizer#startListening_E@, depending on the speech recognition service implementation. To request partial results, use @B_android#speech#RecognizerIntent#EXTRA_PARTIAL_RESULTS_E@", "history": "Added in API level 8", "FullName": "public abstract void onPartialResults (Bundle partialResults)"}, "onEvent(int, android.os.Bundle)": {"Returns": [], "Parameters": [["int", "int: the type of the occurred event"], ["@B_android#os#Bundle_E@", "Bundle: a Bundle containing the passed parameters"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reserved for adding future events.", "history": "added in API level 8", "FullName": "public abstract void onEvent (int eventType, Bundle params)"}, "onBufferReceived(byte[])": {"Returns": [], "Parameters": [["byte[]", "byte: a buffer containing a sequence of big-endian 16-bit integers representing a single channel audio stream. The sample rate is implementation dependent."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "More sound has been received. The purpose of this function is to allow giving feedback to the user regarding the captured audio. There is no guarantee that this method will be called.", "history": "Added in API level 8", "FullName": "public abstract void onBufferReceived (byte[] buffer)"}, "onRmsChanged(float)": {"Returns": [], "Parameters": [["float", "float: the new RMS dB value"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The sound level in the audio stream has changed. There is no guarantee that this method will be called.", "history": "Added in API level 8", "FullName": "public abstract void onRmsChanged (float rmsdB)"}, "onReadyForSpeech(android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: parameters set by the recognition service. Reserved for future use."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the endpointer is ready for the user to start speaking.", "history": "Added in API level 8", "FullName": "public abstract void onReadyForSpeech (Bundle params)"}, "onEndOfSpeech()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called after the user stops speaking.", "history": "Added in API level 8", "FullName": "public abstract void onEndOfSpeech ()"}, "onResults(android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: the recognition results. To retrieve the results in ArrayList<String> format use @B_android#os#Bundle#getStringArrayList_E@ with @B_android#speech#SpeechRecognizer#RESULTS_RECOGNITION_E@ as a parameter. A float array of confidence values might also be given in @B_android#speech#SpeechRecognizer#CONFIDENCE_SCORES_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when recognition results are ready.", "history": "Added in API level 8", "FullName": "public abstract void onResults (Bundle results)"}, "onError(int)": {"Returns": [], "Parameters": [["int", "int: code is defined in @B_android#speech#SpeechRecognizer_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "A network or recognition error occurred.", "history": "Added in API level 8", "FullName": "public abstract void onError (int error)"}, "onBeginningOfSpeech()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The user has started to speak.", "history": "Added in API level 8", "FullName": "public abstract void onBeginningOfSpeech ()"}}, "Inheritance": [], "ClassName": "android.speech.RecognitionListener", "ClassDesc": "Used for receiving notifications from the SpeechRecognizer when the recognition related events occur. All the callbacks are executed on the Application main thread."}