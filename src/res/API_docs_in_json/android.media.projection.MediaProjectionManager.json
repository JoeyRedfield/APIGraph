{"Functions": {"getMediaProjection(int,android.content.Intent)": {"Returns": [["@B_android#media#projection#MediaProjection_E@", "no returns description in source"]], "Parameters": [["int", "int: The result code from @B_android#app#Activity#onActivityResult_E@"], ["@B_android#content#Intent_E@", "Intent: The resulting data from @B_android#app#Activity#onActivityResult_E@ This value must never be null."]], "Throws": [["@B_java#lang#IllegalStateException_E@", "on pre-Q devices if a previously gotten MediaProjection from the same resultData has not yet been stopped"]], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the MediaProjection obtained from a succesful screen capture request. Will be null if the result from the startActivityForResult() is anything other than RESULT_OK.", "history": "Added in API level 21", "FullName": "public MediaProjection getMediaProjection (int resultCode, Intent resultData)"}, "createScreenCaptureIntent()": {"Returns": [["@B_android#content#Intent_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an Intent that", "history": "Added in API level 21", "FullName": "public Intent createScreenCaptureIntent ()"}, "getMediaProjection(int, android.content.Intent)": {"Returns": [["@B_android#media#projection#MediaProjection_E@", "no returns description in source"]], "Parameters": [["int", "int: The result code from @B_android#app#Activity#onActivityResult_E@"], ["@B_android#content#Intent_E@", "Intent: The resulting data from @B_android#app#Activity#onActivityResult_E@ This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the MediaProjection obtained from a succesful screen capture request. Will be null if the result from the startActivityForResult() is anything other than RESULT_OK.", "history": "added in API level 21", "FullName": "public MediaProjection getMediaProjection (int resultCode, Intent resultData)"}}, "Inheritance": [], "ClassName": "android.media.projection.MediaProjectionManager", "ClassDesc": "Manages the retrieval of certain types of @B_android#media#projection#MediaProjection_E@ tokens."}