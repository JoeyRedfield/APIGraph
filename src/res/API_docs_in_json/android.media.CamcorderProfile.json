{"Functions": {"hasProfile(int, int)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int: the id for the camera"], ["int", "int: the target quality level for the camcorder profile"]], "Throws": [], "SeeAlso": ["@B_android#hardware#camera2#CameraManager_E@", "@B_android#hardware#camera2#CameraCharacteristics_E@"], "Permissions": [], "Description": "Returns true if camcorder profile exists for the given camera at the given quality level. When using the Camera 2 API in LEGACY mode (i.e. when @B_android#hardware#camera2#CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL_E@ is set to @B_android#hardware#camera2#CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY_E@), @B_android#media#CamcorderProfile#hasProfile_E@ may return true for unsupported resolutions. To ensure a a given resolution is supported in LEGACY mode, the configuration given in @B_android#hardware#camera2#CameraCharacteristics#SCALER_STREAM_CONFIGURATION_MAP_E@ must contain the the resolution in the supported output sizes. The recommended way to check this is with @B_android#hardware#camera2#params#StreamConfigurationMap#getOutputSizes_E@ with the class of the desired recording endpoint, and check that the desired resolution is contained in the list returned.", "history": "added in API level 11", "FullName": "public static boolean hasProfile (int cameraId, int quality)"}, "hasProfile(int)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int: the target quality level for the camcorder profile"]], "Throws": [], "SeeAlso": ["@B_android#hardware#camera2#CameraManager_E@", "@B_android#hardware#camera2#CameraCharacteristics_E@"], "Permissions": [], "Description": "Returns true if camcorder profile exists for the first back-facing camera at the given quality level. When using the Camera 2 API in LEGACY mode (i.e. when @B_android#hardware#camera2#CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL_E@ is set to @B_android#hardware#camera2#CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY_E@), @B_android#media#CamcorderProfile#hasProfile_E@ may return true for unsupported resolutions. To ensure a a given resolution is supported in LEGACY mode, the configuration given in @B_android#hardware#camera2#CameraCharacteristics#SCALER_STREAM_CONFIGURATION_MAP_E@ must contain the the resolution in the supported output sizes. The recommended way to check this is with @B_android#hardware#camera2#params#StreamConfigurationMap#getOutputSizes_E@ with the class of the desired recording endpoint, and check that the desired resolution is contained in the list returned.", "history": "Added in API level 11", "FullName": "public static boolean hasProfile (int quality)"}, "get(int)": {"Returns": [["@B_android#media#CamcorderProfile_E@", "no returns description in source"]], "Parameters": [["int", "int: the target quality level for the camcorder profile"]], "Throws": [], "SeeAlso": ["@B_android#media#CamcorderProfile#get_E@"], "Permissions": [], "Description": "Returns the camcorder profile for the first back-facing camera on the device at the given quality level. If the device has no back-facing camera, this returns null.", "history": "Added in API level 8", "FullName": "public static CamcorderProfile get (int quality)"}, "hasProfile(int,int)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int: the id for the camera"], ["int", "int: the target quality level for the camcorder profile"]], "Throws": [], "SeeAlso": ["@B_android#hardware#camera2#CameraManager_E@", "@B_android#hardware#camera2#CameraCharacteristics_E@"], "Permissions": [], "Description": "Returns true if camcorder profile exists for the given camera at the given quality level. When using the Camera 2 API in LEGACY mode (i.e. when @B_android#hardware#camera2#CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL_E@ is set to @B_android#hardware#camera2#CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY_E@), @B_android#media#CamcorderProfile#hasProfile_E@ may return true for unsupported resolutions. To ensure a a given resolution is supported in LEGACY mode, the configuration given in @B_android#hardware#camera2#CameraCharacteristics#SCALER_STREAM_CONFIGURATION_MAP_E@ must contain the the resolution in the supported output sizes. The recommended way to check this is with @B_android#hardware#camera2#params#StreamConfigurationMap#getOutputSizes_E@ with the class of the desired recording endpoint, and check that the desired resolution is contained in the list returned.", "history": "Added in API level 11", "FullName": "public static boolean hasProfile (int cameraId, int quality)"}, "get(int,int)": {"Returns": [["@B_android#media#CamcorderProfile_E@", "no returns description in source"]], "Parameters": [["int", "int: the id for the camera"], ["int", "int: the target quality level for the camcorder profile."]], "Throws": [], "SeeAlso": ["@B_android#media#CamcorderProfile_E@"], "Permissions": [], "Description": "Returns the camcorder profile for the given camera at the given quality level. Quality levels QUALITY_LOW, QUALITY_HIGH are guaranteed to be supported, while other levels may or may not be supported. The supported levels can be checked using @B_android#media#CamcorderProfile#hasProfile_E@. QUALITY_LOW refers to the lowest quality available, while QUALITY_HIGH refers to the highest quality available. QUALITY_LOW/QUALITY_HIGH have to match one of qcif, cif, 480p, 720p, 1080p or 2160p. E.g. if the device supports 480p, 720p, 1080p and 2160p, then low is 480p and high is 2160p. The same is true for time lapse quality levels, i.e. QUALITY_TIME_LAPSE_LOW, QUALITY_TIME_LAPSE_HIGH are guaranteed to be supported and have to match one of qcif, cif, 480p, 720p, 1080p, or 2160p. For high speed quality levels, they may or may not be supported. If a subset of the levels are supported, QUALITY_HIGH_SPEED_LOW and QUALITY_HIGH_SPEED_HIGH are guaranteed to be supported and have to match one of 480p, 720p, or 1080p. A camcorder recording session with higher quality level usually has higher output bit rate, better video and/or audio recording quality, larger video frame resolution and higher audio sampling rate, etc, than those with lower quality level.", "history": "Added in API level 9", "FullName": "public static CamcorderProfile get (int cameraId, int quality)"}, "get(int, int)": {"Returns": [["@B_android#media#CamcorderProfile_E@", "no returns description in source"]], "Parameters": [["int", "int: the id for the camera"], ["int", "int: the target quality level for the camcorder profile."]], "Throws": [], "SeeAlso": ["@B_android#media#CamcorderProfile_E@"], "Permissions": [], "Description": "Returns the camcorder profile for the given camera at the given quality level. Quality levels QUALITY_LOW, QUALITY_HIGH are guaranteed to be supported, while other levels may or may not be supported. The supported levels can be checked using @B_android#media#CamcorderProfile#hasProfile_E@. QUALITY_LOW refers to the lowest quality available, while QUALITY_HIGH refers to the highest quality available. QUALITY_LOW/QUALITY_HIGH have to match one of qcif, cif, 480p, 720p, 1080p or 2160p. E.g. if the device supports 480p, 720p, 1080p and 2160p, then low is 480p and high is 2160p. The same is true for time lapse quality levels, i.e. QUALITY_TIME_LAPSE_LOW, QUALITY_TIME_LAPSE_HIGH are guaranteed to be supported and have to match one of qcif, cif, 480p, 720p, 1080p, or 2160p. For high speed quality levels, they may or may not be supported. If a subset of the levels are supported, QUALITY_HIGH_SPEED_LOW and QUALITY_HIGH_SPEED_HIGH are guaranteed to be supported and have to match one of 480p, 720p, or 1080p. A camcorder recording session with higher quality level usually has higher output bit rate, better video and/or audio recording quality, larger video frame resolution and higher audio sampling rate, etc, than those with lower quality level.", "history": "added in API level 9", "FullName": "public static CamcorderProfile get (int cameraId, int quality)"}}, "Inheritance": [], "ClassName": "android.media.CamcorderProfile", "ClassDesc": "Retrieves the predefined camcorder profile settings for camcorder applications. These settings are read-only. The compressed output from a recording session with a given CamcorderProfile contains two tracks: one for audio and one for video. Each profile specifies the following set of parameters: The file output format Video codec format Video bit rate in bits per second Video frame rate in frames per second Video frame width and height, Audio codec format Audio bit rate in bits per second, Audio sample rate Number of audio channels for recording."}