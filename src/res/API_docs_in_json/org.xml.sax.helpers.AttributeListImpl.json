{"Functions": {"removeAttribute(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The attribute name."]], "Throws": [], "SeeAlso": ["@B_org#xml#sax#helpers#AttributeListImpl#addAttribute_E@"], "Permissions": [], "Description": "Remove an attribute from the list. SAX application writers can use this method to filter an attribute out of an AttributeList. Note that invoking this method will change the length of the attribute list and some of the attribute's indices. If the requested attribute is not in the list, this is a no-op.", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public void removeAttribute (String name)"}, "clear()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_org#xml#sax#DocumentHandler#startElement_E@"], "Permissions": [], "Description": "Clear the attribute list. SAX parser writers can use this method to reset the attribute list between DocumentHandler.startElement events. Normally, it will make sense to reuse the same AttributeListImpl object rather than allocating a new one each time.", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public void clear ()"}, "setAttributeList(org.xml.sax.AttributeList)": {"Returns": [], "Parameters": [["@B_org#xml#sax#AttributeList_E@", "AttributeList: The attribute list to copy."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the attribute list, discarding previous contents. This method allows an application writer to reuse an attribute list easily.", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public void setAttributeList (AttributeList atts)"}, "getValue(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "the named attribute's value or null, if the attribute does not exist."]], "Parameters": [["@B_java#lang#String_E@", "String: The attribute name."]], "Throws": [], "SeeAlso": ["@B_org#xml#sax#AttributeList#getValue_E@"], "Permissions": [], "Description": "Get the value of an attribute (by name).", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public String getValue (String name)"}, "AttributeListImpl(org.xml.sax.AttributeList)": {"Returns": [], "Parameters": [["@B_org#xml#sax#AttributeList_E@", "AttributeList: The attribute list to copy"]], "Throws": [], "SeeAlso": ["@B_org#xml#sax#DocumentHandler#startElement_E@"], "Permissions": [], "Description": "Construct a persistent copy of an existing attribute list. This constructor is most useful for application writers, who will use it to create a persistent copy of an existing attribute list.", "history": "Added in API level 1", "FullName": "public AttributeListImpl (AttributeList atts)"}, "getLength()": {"Returns": [["int", "The number of attributes in the list."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_org#xml#sax#AttributeList#getLength_E@"], "Permissions": [], "Description": "Return the number of attributes in the list.", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public int getLength ()"}, "getType(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "The attribute type as a string (\"NMTOKEN\" for an enumeration, and \"CDATA\" if no declaration was read)."]], "Parameters": [["@B_java#lang#String_E@", "String: The attribute name."]], "Throws": [], "SeeAlso": ["@B_org#xml#sax#AttributeList#getType_E@"], "Permissions": [], "Description": "Get the type of an attribute (by name).", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public String getType (String name)"}, "AttributeListImpl()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_org#xml#sax#helpers#AttributeListImpl#addAttribute_E@", "@B_org#xml#sax#helpers#AttributeListImpl#clear_E@"], "Permissions": [], "Description": "Create an empty attribute list. This constructor is most useful for parser writers, who will use it to create a single, reusable attribute list that can be reset with the clear method between elements.", "history": "Added in API level 1", "FullName": "public AttributeListImpl ()"}, "addAttribute(java.lang.String,java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The attribute name."], ["@B_java#lang#String_E@", "String: The attribute type (\"NMTOKEN\" for an enumeration)."], ["@B_java#lang#String_E@", "String: The attribute value (must not be null)."]], "Throws": [], "SeeAlso": ["@B_org#xml#sax#helpers#AttributeListImpl#removeAttribute_E@", "@B_org#xml#sax#DocumentHandler#startElement_E@"], "Permissions": [], "Description": "Add an attribute to an attribute list. This method is provided for SAX parser writers, to allow them to build up an attribute list incrementally before delivering it to the application.", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public void addAttribute (String name, String type, String value)"}, "getType(int)": {"Returns": [["@B_java#lang#String_E@", "The attribute type as a string (\"NMTOKEN\" for an enumeration, and \"CDATA\" if no declaration was read), or null if there is no attribute at that position."]], "Parameters": [["int", "int: The position of the attribute in the list."]], "Throws": [], "SeeAlso": ["@B_org#xml#sax#AttributeList#getType_E@"], "Permissions": [], "Description": "Get the type of an attribute (by position).", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public String getType (int i)"}, "getName(int)": {"Returns": [["@B_java#lang#String_E@", "The attribute name as a string, or null if there is no attribute at that position."]], "Parameters": [["int", "int: The position of the attribute in the list."]], "Throws": [], "SeeAlso": ["@B_org#xml#sax#AttributeList#getName_E@"], "Permissions": [], "Description": "Get the name of an attribute (by position).", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public String getName (int i)"}, "getValue(int)": {"Returns": [["@B_java#lang#String_E@", "The attribute value as a string, or null if there is no attribute at that position."]], "Parameters": [["int", "int: The position of the attribute in the list."]], "Throws": [], "SeeAlso": ["@B_org#xml#sax#AttributeList#getValue_E@"], "Permissions": [], "Description": "Get the value of an attribute (by position).", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public String getValue (int i)"}}, "Inheritance": [], "ClassName": "org.xml.sax.helpers.AttributeListImpl", "ClassDesc": "This class implements a deprecated interface, @B_org#xml#sax#AttributeList_E@; that interface has been replaced by @B_org#xml#sax#Attributes_E@, which is implemented in the @B_org#xml#sax#helpers#AttributesImpl_E@ helper class. Default implementation for AttributeList. AttributeList implements the deprecated SAX1 @B_org#xml#sax#AttributeList_E@ interface, and has been replaced by the new SAX2 @B_org#xml#sax#helpers#AttributesImpl_E@ interface. This class provides a convenience implementation of the SAX @B_org#xml#sax#AttributeList_E@ interface. This implementation is useful both for SAX parser writers, who can use it to provide attributes to the application, and for SAX application writers, who can use it to create a persistent copy of an element's attribute specifications: Please note that SAX parsers are not required to use this class to provide an implementation of AttributeList; it is supplied only as an optional convenience. In particular, parser writers are encouraged to invent more efficient implementations."}