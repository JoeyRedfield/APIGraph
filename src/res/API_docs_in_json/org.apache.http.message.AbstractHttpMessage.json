{"Functions": {"getAllHeaders()": {"Returns": [["", "all the headers of this message"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns all the headers of this message. Headers are orderd in the sequence they will be sent over a connection.", "history": "Added in API level 1", "FullName": "public Header[] getAllHeaders ()"}, "getLastHeader(java.lang.String)": {"Returns": [["", "the last header whose name property equals name. or null if no such header could be found."]], "Parameters": [["@B_java#lang#String_E@", "the name of the header to return."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the last header with a specified name of this message. Header values are ignored. If there is more than one matching header in the message the last element of @B_org#apache#http#HttpMessage#getHeaders_E@ is returned. If there is no matching header in the message null is returned.", "history": "Added in API level 1", "FullName": "public Header getLastHeader (String name)"}, "addHeader(java.lang.String, java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "the name of the header."], ["@B_java#lang#String_E@", "the value of the header."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds a header to this message. The header will be appended to the end of the list.", "history": "Added in API level 1", "FullName": "public void addHeader (String name, String value)"}, "headerIterator(java.lang.String)": {"Returns": [["", "Iterator that returns Header objects with the argument name in the sequence they are sent over a connection."]], "Parameters": [["@B_java#lang#String_E@", "the name of the headers over which to iterate, or null for all headers"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an iterator of the headers with a given name.", "history": "Added in API level 1", "FullName": "public HeaderIterator headerIterator (String name)"}, "getFirstHeader(java.lang.String)": {"Returns": [["", "the first header whose name property equals name or null if no such header could be found."]], "Parameters": [["@B_java#lang#String_E@", "the name of the header to return."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the first header with a specified name of this message. Header values are ignored. If there is more than one matching header in the message the first element of @B_org#apache#http#HttpMessage#getHeaders_E@ is returned. If there is no matching header in the message null is returned.", "history": "Added in API level 1", "FullName": "public Header getFirstHeader (String name)"}, "removeHeaders(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "The name of the headers to remove."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes all headers with a certain name from this message.", "history": "Added in API level 1", "FullName": "public void removeHeaders (String name)"}, "containsHeader(java.lang.String)": {"Returns": [["", "true if at least one header with this name is present."]], "Parameters": [["@B_java#lang#String_E@", "the header name to check for."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks if a certain header is present in this message. Header values are ignored.", "history": "Added in API level 1", "FullName": "public boolean containsHeader (String name)"}, "setHeader(java.lang.String, java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "the name of the header."], ["@B_java#lang#String_E@", "the value of the header."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Overwrites the first header with the same name. The new header will be appended to the end of the list, if no header with the given name can be found.", "history": "Added in API level 1", "FullName": "public void setHeader (String name, String value)"}, "getParams()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the parameters effective for this message as set by @B_org#apache#http#HttpMessage#setParams_E@.", "history": "Added in API level 1", "FullName": "public HttpParams getParams ()"}, "addHeader(org.apache.http.Header)": {"Returns": [], "Parameters": [["@B_org#apache#http#Header_E@", "the header to append."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds a header to this message. The header will be appended to the end of the list.", "history": "Added in API level 1", "FullName": "public void addHeader (Header header)"}, "setHeaders(org.apache.http.Header[])": {"Returns": [], "Parameters": [["@B_org#apache#http#Header_E@", "the array of headers to set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Overwrites all the headers in the message.", "history": "Added in API level 1", "FullName": "public void setHeaders (Header[] headers)"}, "AbstractHttpMessage(org.apache.http.params.HttpParams)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "protected AbstractHttpMessage (HttpParams params)"}, "removeHeader(org.apache.http.Header)": {"Returns": [], "Parameters": [["@B_org#apache#http#Header_E@", "the header to remove."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes a header from this message.", "history": "Added in API level 1", "FullName": "public void removeHeader (Header header)"}, "headerIterator()": {"Returns": [["", "Iterator that returns Header objects in the sequence they are sent over a connection."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an iterator of all the headers.", "history": "Added in API level 1", "FullName": "public HeaderIterator headerIterator ()"}, "getHeaders(java.lang.String)": {"Returns": [["", "the headers whose name property equals name."]], "Parameters": [["@B_java#lang#String_E@", "the name of the headers to return."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns all the headers with a specified name of this message. Header values are ignored. Headers are orderd in the sequence they will be sent over a connection.", "history": "Added in API level 1", "FullName": "public Header[] getHeaders (String name)"}, "setParams(org.apache.http.params.HttpParams)": {"Returns": [], "Parameters": [["@B_org#apache#http#params#HttpParams_E@", "the parameters"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Provides parameters to be used for the processing of this message.", "history": "Added in API level 1", "FullName": "public void setParams (HttpParams params)"}, "setHeader(org.apache.http.Header)": {"Returns": [], "Parameters": [["@B_org#apache#http#Header_E@", "the header to set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Overwrites the first header with the same name. The new header will be appended to the end of the list, if no header with the given name can be found.", "history": "Added in API level 1", "FullName": "public void setHeader (Header header)"}, "AbstractHttpMessage()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "protected AbstractHttpMessage ()"}}, "Inheritance": [], "ClassName": "org.apache.http.message.AbstractHttpMessage", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Basic implementation of an HTTP message that can be modified."}