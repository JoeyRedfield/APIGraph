{"Functions": {"createConnection()": {"Returns": [["", "a new, unopened connection for use with this operator"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new connection that can be operated.", "history": "Added in API level 1", "FullName": "public OperatedClientConnection createConnection ()"}, "openConnection(org.apache.http.conn.OperatedClientConnection, org.apache.http.HttpHost, java.net.InetAddress, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams)": {"Returns": [], "Parameters": [["@B_org#apache#http#conn#OperatedClientConnection_E@", "the connection to open"], ["@B_org#apache#http#HttpHost_E@", "the target host to connect to"], ["@B_java#net#InetAddress_E@", "the local address to route from, or null for the default"], ["@B_org#apache#http#protocol#HttpContext_E@", "the context for the connection"], ["@B_org#apache#http#params#HttpParams_E@", "the parameters for the connection"]], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Opens a connection to the given target host.", "history": "Added in API level 1", "FullName": "public void openConnection (OperatedClientConnection conn, HttpHost target, InetAddress local, HttpContext context, HttpParams params)"}, "prepareSocket(java.net.Socket, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams)": {"Returns": [], "Parameters": [["@B_java#net#Socket_E@", "the socket to prepare"], ["@B_org#apache#http#protocol#HttpContext_E@", "the context for the connection"], ["@B_org#apache#http#params#HttpParams_E@", "the parameters from which to prepare the socket"]], "Throws": [["@B_java#io#IOException_E@", "in case of an IO problem"]], "SeeAlso": [], "Permissions": [], "Description": "Performs standard initializations on a newly created socket.", "history": "Added in API level 1", "FullName": "protected void prepareSocket (Socket sock, HttpContext context, HttpParams params)"}, "DefaultClientConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)": {"Returns": [], "Parameters": [["@B_org#apache#http#conn#scheme#SchemeRegistry_E@", "the scheme registry"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new client connection operator for the given scheme registry.", "history": "Added in API level 1", "FullName": "public DefaultClientConnectionOperator (SchemeRegistry schemes)"}, "updateSecureConnection(org.apache.http.conn.OperatedClientConnection, org.apache.http.HttpHost, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams)": {"Returns": [], "Parameters": [["@B_org#apache#http#conn#OperatedClientConnection_E@", "the open connection to update"], ["@B_org#apache#http#HttpHost_E@", "the target host for the updated connection. The connection must already be open or tunnelled to the host and port, but the scheme of the target will be used to create a layered connection."], ["@B_org#apache#http#protocol#HttpContext_E@", "the context for the connection"], ["@B_org#apache#http#params#HttpParams_E@", "the parameters for the updated connection"]], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Updates a connection with a layered secure connection. The typical use of this method is to update a tunnelled plain connection (HTTP) to a secure TLS/SSL connection (HTTPS).", "history": "Added in API level 1", "FullName": "public void updateSecureConnection (OperatedClientConnection conn, HttpHost target, HttpContext context, HttpParams params)"}}, "Inheritance": [], "ClassName": "org.apache.http.impl.conn.DefaultClientConnectionOperator", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Default implementation of a @B_org#apache#http#conn#ClientConnectionOperator_E@. It uses a @B_org#apache#http#conn#scheme#SchemeRegistry_E@ to look up @B_org#apache#http#conn#scheme#SocketFactory_E@ objects."}