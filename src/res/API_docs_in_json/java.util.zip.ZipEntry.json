{"Functions": {"setCrc(long)": {"Returns": [], "Parameters": [["long", "long: the CRC-32 value"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the specified CRC-32 value is less than 0 or greater than 0xFFFFFFFF"]], "SeeAlso": ["@B_java#util#zip#ZipEntry#getCrc_E@"], "Permissions": [], "Description": "Sets the CRC-32 checksum of the uncompressed entry data.", "history": "Added in API level 1", "FullName": "public void setCrc (long crc)"}, "isDirectory()": {"Returns": [["boolean", "true if this is a directory entry"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this is a directory entry. A directory entry is defined to be one whose name ends with a '/'.", "history": "Added in API level 1", "FullName": "public boolean isDirectory ()"}, "getCompressedSize()": {"Returns": [["long", "the size of the compressed entry data, or -1 if not known"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#util#zip#ZipEntry#setCompressedSize_E@"], "Permissions": [], "Description": "Returns the size of the compressed entry data. In the case of a stored entry, the compressed size will be the same as the uncompressed size of the entry.", "history": "Added in API level 1", "FullName": "public long getCompressedSize ()"}, "setExtra(byte[])": {"Returns": [], "Parameters": [["byte[]", "byte: The extra field data bytes"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the length of the specified extra field data is greater than 0xFFFF bytes"]], "SeeAlso": ["@B_java#util#zip#ZipEntry#getExtra_E@"], "Permissions": [], "Description": "Sets the optional extra field data for the entry. Invoking this method may change this entry's last modification time, last access time and creation time, if the extra field data includes the extensible timestamp fields, such as NTFS tag 0x0001 or Info-ZIP Extended Timestamp, as specified in", "history": "Added in API level 1", "FullName": "public void setExtra (byte[] extra)"}, "getLastModifiedTime()": {"Returns": [["@B_java#nio#file#attribute#FileTime_E@", "The last modification time of the entry, null if not specified"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#util#zip#ZipEntry#setLastModifiedTime_E@"], "Permissions": [], "Description": "Returns the last modification time of the entry. If the entry is read from a ZIP file or ZIP file formatted input stream, this is the last modification time from the zip file entry's optional extra data if the extended timestamp fields are present. Otherwise the last modification time is read from the entry's date and time fields, the @B_java#util#TimeZone#getDefault_E@ is used to convert the standard MS-DOS formatted date and time to the epoch time.", "history": "Added in API level 26", "FullName": "public FileTime getLastModifiedTime ()"}, "ZipEntry(java.util.zip.ZipEntry)": {"Returns": [], "Parameters": [["@B_java#util#zip#ZipEntry_E@", "ZipEntry: A zip Entry object"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if the entry object is null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new zip entry with fields taken from the specified zip entry.", "history": "Added in API level 1", "FullName": "public ZipEntry (ZipEntry e)"}, "setComment(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the comment string"]], "Throws": [], "SeeAlso": ["@B_java#util#zip#ZipEntry#getComment_E@"], "Permissions": [], "Description": "Sets the optional comment string for the entry. ZIP entry comments have maximum length of 0xffff. If the length of the specified comment string is greater than 0xFFFF bytes after encoding, only the first 0xFFFF bytes are output to the ZIP file entry.", "history": "Added in API level 1", "FullName": "public void setComment (String comment)"}, "getName()": {"Returns": [["@B_java#lang#String_E@", "the name of the entry"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the name of the entry.", "history": "Added in API level 1", "FullName": "public String getName ()"}, "hashCode()": {"Returns": [["int", "a hash code value for this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the hash code value for this entry.", "history": "Added in API level 1", "FullName": "public int hashCode ()"}, "getLastAccessTime()": {"Returns": [["@B_java#nio#file#attribute#FileTime_E@", "The last access time of the entry, null if not specified"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#util#zip#ZipEntry#setLastAccessTime_E@"], "Permissions": [], "Description": "Returns the last access time of the entry. The last access time is from the extended timestamp fields of entry's optional extra data when read from a ZIP file or ZIP file formatted stream.", "history": "Added in API level 26", "FullName": "public FileTime getLastAccessTime ()"}, "setTime(long)": {"Returns": [], "Parameters": [["long", "long: The last modification time of the entry in milliseconds since the epoch"]], "Throws": [], "SeeAlso": ["@B_java#util#zip#ZipEntry#getTime_E@", "@B_java#util#zip#ZipEntry#getLastModifiedTime_E@"], "Permissions": [], "Description": "Sets the last modification time of the entry. If the entry is output to a ZIP file or ZIP file formatted output stream the last modification time set by this method will be stored into the date and time fields of the zip file entry and encoded in standard MS-DOS date and time format. The @B_java#util#TimeZone#getDefault_E@ is used to convert the epoch time to the MS-DOS data and time.", "history": "Added in API level 1", "FullName": "public void setTime (long time)"}, "getComment()": {"Returns": [["@B_java#lang#String_E@", "the comment string for the entry, or null if none"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#util#zip#ZipEntry#setComment_E@"], "Permissions": [], "Description": "Returns the comment string for the entry.", "history": "Added in API level 1", "FullName": "public String getComment ()"}, "setCompressedSize(long)": {"Returns": [], "Parameters": [["long", "long: the compressed size to set to"]], "Throws": [], "SeeAlso": ["@B_java#util#zip#ZipEntry#getCompressedSize_E@"], "Permissions": [], "Description": "Sets the size of the compressed entry data.", "history": "Added in API level 1", "FullName": "public void setCompressedSize (long csize)"}, "ZipEntry(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The entry name"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if the entry name is null"], ["@B_java#lang#IllegalArgumentException_E@", "if the entry name is longer than 0xFFFF bytes"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new zip entry with the specified name.", "history": "Added in API level 1", "FullName": "public ZipEntry (String name)"}, "getMethod()": {"Returns": [["int", "the compression method of the entry, or -1 if not specified"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#util#zip#ZipEntry#setMethod_E@"], "Permissions": [], "Description": "Returns the compression method of the entry.", "history": "Added in API level 1", "FullName": "public int getMethod ()"}, "getCrc()": {"Returns": [["long", "the CRC-32 checksum of the uncompressed entry data, or -1 if not known"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#util#zip#ZipEntry#setCrc_E@"], "Permissions": [], "Description": "Returns the CRC-32 checksum of the uncompressed entry data.", "history": "Added in API level 1", "FullName": "public long getCrc ()"}, "setMethod(int)": {"Returns": [], "Parameters": [["int", "int: the compression method, either STORED or DEFLATED"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the specified compression method is invalid"]], "SeeAlso": ["@B_java#util#zip#ZipEntry#getMethod_E@"], "Permissions": [], "Description": "Sets the compression method for the entry.", "history": "Added in API level 1", "FullName": "public void setMethod (int method)"}, "clone()": {"Returns": [["@B_java#lang#Object_E@", "a clone of this instance."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a copy of this entry.", "history": "Added in API level 1", "FullName": "public Object clone ()"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the ZIP entry.", "history": "Added in API level 1", "FullName": "public String toString ()"}, "getExtra()": {"Returns": [["byte[]", "the extra field data for the entry, or null if none"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#util#zip#ZipEntry#setExtra_E@"], "Permissions": [], "Description": "Returns the extra field data for the entry.", "history": "Added in API level 1", "FullName": "public byte[] getExtra ()"}, "getTime()": {"Returns": [["long", "The last modification time of the entry in milliseconds since the epoch, or -1 if not specified"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#util#zip#ZipEntry#setTime_E@", "@B_java#util#zip#ZipEntry#setLastModifiedTime_E@"], "Permissions": [], "Description": "Returns the last modification time of the entry. If the entry is read from a ZIP file or ZIP file formatted input stream, this is the last modification time from the date and time fields of the zip file entry. The @B_java#util#TimeZone#getDefault_E@ is used to convert the standard MS-DOS formatted date and time to the epoch time.", "history": "Added in API level 1", "FullName": "public long getTime ()"}, "getSize()": {"Returns": [["long", "the uncompressed size of the entry data, or -1 if not known"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#util#zip#ZipEntry#setSize_E@"], "Permissions": [], "Description": "Returns the uncompressed size of the entry data.", "history": "Added in API level 1", "FullName": "public long getSize ()"}, "setSize(long)": {"Returns": [], "Parameters": [["long", "long: the uncompressed size in bytes"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the specified size is less than 0, is greater than 0xFFFFFFFF when ZIP64 format is not supported, or is less than 0 when ZIP64 is supported"]], "SeeAlso": ["@B_java#util#zip#ZipEntry#getSize_E@"], "Permissions": [], "Description": "Sets the uncompressed size of the entry data.", "history": "Added in API level 1", "FullName": "public void setSize (long size)"}, "setCreationTime(java.nio.file.attribute.FileTime)": {"Returns": [["@B_java#util#zip#ZipEntry_E@", "This zip entry"]], "Parameters": [["@B_java#nio#file#attribute#FileTime_E@", "FileTime: The creation time of the entry"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if the time is null"]], "SeeAlso": ["@B_java#util#zip#ZipEntry#getCreationTime_E@"], "Permissions": [], "Description": "Sets the creation time of the entry. If set, the creation time will be stored into the extended timestamp fields of entry's optional extra data, when output to a ZIP file or ZIP file formatted stream.", "history": "Added in API level 26", "FullName": "public ZipEntry setCreationTime (FileTime time)"}, "getCreationTime()": {"Returns": [["@B_java#nio#file#attribute#FileTime_E@", "the creation time of the entry, null if not specified"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#util#zip#ZipEntry#setCreationTime_E@"], "Permissions": [], "Description": "Returns the creation time of the entry. The creation time is from the extended timestamp fields of entry's optional extra data when read from a ZIP file or ZIP file formatted stream.", "history": "Added in API level 26", "FullName": "public FileTime getCreationTime ()"}, "setLastModifiedTime(java.nio.file.attribute.FileTime)": {"Returns": [["@B_java#util#zip#ZipEntry_E@", "This zip entry"]], "Parameters": [["@B_java#nio#file#attribute#FileTime_E@", "FileTime: The last modification time of the entry"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if the time is null"]], "SeeAlso": ["@B_java#util#zip#ZipEntry#getLastModifiedTime_E@"], "Permissions": [], "Description": "Sets the last modification time of the entry. When output to a ZIP file or ZIP file formatted output stream the last modification time set by this method will be stored into zip file entry's date and time fields in standard MS-DOS date and time format), and the extended timestamp fields in optional extra data in UTC time.", "history": "Added in API level 26", "FullName": "public ZipEntry setLastModifiedTime (FileTime time)"}, "setLastAccessTime(java.nio.file.attribute.FileTime)": {"Returns": [["@B_java#util#zip#ZipEntry_E@", "This zip entry"]], "Parameters": [["@B_java#nio#file#attribute#FileTime_E@", "FileTime: The last access time of the entry"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if the time is null"]], "SeeAlso": ["@B_java#util#zip#ZipEntry#getLastAccessTime_E@"], "Permissions": [], "Description": "Sets the last access time of the entry. If set, the last access time will be stored into the extended timestamp fields of entry's optional extra data, when output to a ZIP file or ZIP file formatted stream.", "history": "Added in API level 26", "FullName": "public ZipEntry setLastAccessTime (FileTime time)"}}, "Inheritance": [], "ClassName": "java.util.zip.ZipEntry", "ClassDesc": "This class is used to represent a ZIP file entry."}