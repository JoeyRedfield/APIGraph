{"Functions": {"getStatus()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a status indicating the result of the action that generated this event. May be one of @B_com#google#android#gms#drive#events#CompletionEvent#STATUS_SUCCESS_E@, @B_com#google#android#gms#drive#events#CompletionEvent#STATUS_CONFLICT_E@, @B_com#google#android#gms#drive#events#CompletionEvent#STATUS_FAILURE_E@, @B_com#google#android#gms#drive#events#CompletionEvent#STATUS_CANCELED_E@.", "history": "", "FullName": "public int getStatus ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getDriveId()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the id of the Drive resource that triggered the event.", "history": "", "FullName": "public DriveId getDriveId ()"}, "getModifiedContentsInputStream()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an @B_java#io#InputStream_E@ for the modified contents that generated this event. If the status of this event is not @B_com#google#android#gms#drive#events#CompletionEvent#STATUS_SUCCESS_E@, note that the modified contents provided by this method have not been applied on the server. This method may only be called once per @B_com#google#android#gms#drive#events#CompletionEvent_E@ instance. The returned @B_java#io#InputStream_E@ can be used until @B_com#google#android#gms#drive#events#CompletionEvent#dismiss_E@ or @B_com#google#android#gms#drive#events#CompletionEvent#snooze_E@ is called.", "history": "", "FullName": "public InputStream getModifiedContentsInputStream ()"}, "getModifiedMetadataChangeSet()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_com#google#android#gms#drive#MetadataChangeSet_E@ that was committed during the update that generated this event. The value may be null if the action didn't contain metadata changes. The current metadata can be obtained using @B_com#google#android#gms#drive#DriveApi#getFile_E@ and @B_com#google#android#gms#drive#DriveResource#getMetadata_E@ and be compared with this @B_com#google#android#gms#drive#MetadataChangeSet_E@. If the event has a status other than @B_com#google#android#gms#drive#events#CompletionEvent#STATUS_SUCCESS_E@, note that the changes in this change set have not been applied on the server and have been reverted locally. Modifying the returned @B_com#google#android#gms#drive#MetadataChangeSet_E@ will not have any effect unless the set is committed through @B_com#google#android#gms#drive#DriveContents#commit_E@.", "history": "", "FullName": "public MetadataChangeSet getModifiedMetadataChangeSet ()"}, "dismiss()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates to the Drive API that the caller has finished interacting with this event and any related resources should be cleaned up. The client may not continue using this event instance after dismissing.", "history": "", "FullName": "public void dismiss ()"}, "describeContents()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int describeContents ()"}, "getTrackingTags()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_java#util#List_E@ of tracking tags provided through @B_com#google#android#gms#drive#ExecutionOptions#Builder#setTrackingTag_E@. The application can use these tags to relate this event with the specific method execution that generated it. If the list contains multiple elements, the ordering of the elements is guaranteed to be the one in which the collapsed modifications were applied. Elements in the returned list may not be null.", "history": "", "FullName": "public List<String> getTrackingTags ()"}, "getAccountName()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the account name that was used by the GoogleApiClient that requested this notification, or null if the default account was used. This method is provided so that when a completion event is delivered, the correct @B_com#google#android#gms#common#api#GoogleApiClient_E@ can be built to work with the file.", "history": "", "FullName": "public String getAccountName ()"}, "toString()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public String toString ()"}, "snooze()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates that the client could not process the event at the current time, for example because of connectivity issues. The client will be notified again of the same event in the future. The client may not continue using this event instance after snoozing.", "history": "", "FullName": "public void snooze ()"}, "getBaseContentsInputStream()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an @B_java#io#InputStream_E@ for the initial contents of a file, in the case of a notification with status @B_com#google#android#gms#drive#events#CompletionEvent#STATUS_CONFLICT_E@. Returns null for any other status but @B_com#google#android#gms#drive#events#CompletionEvent#STATUS_CONFLICT_E@. This version of the file content is not the current version anymore. In order to get the current version during conflict resolution, the normal flow to read contents should be used. This method may only be called once per @B_com#google#android#gms#drive#events#CompletionEvent_E@ instance. This can be used in conjunction with @B_com#google#android#gms#drive#events#CompletionEvent#getModifiedContentsInputStream_E@ in order to compute the incremental changes that conflicted, so those can be reapplied on top of the current version. The returned @B_java#io#InputStream_E@ can be used until @B_com#google#android#gms#drive#events#CompletionEvent#dismiss_E@ or @B_com#google#android#gms#drive#events#CompletionEvent#snooze_E@ is called.", "history": "", "FullName": "public InputStream getBaseContentsInputStream ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.drive.events.CompletionEvent", "ClassDesc": "An event delivered after the client requests a completion notification using @B_com#google#android#gms#drive#ExecutionOptions#Builder#setNotifyOnCompletion_E@ and that action has either succeeded or failed on the server. Refer to @B_com#google#android#gms#drive#events#DriveEvent_E@ for additional information about event listeners and subscriptions. Completion events are only delivered to the application that committed the original request. If the original change modified the metadata or content of the file and the action failed to complete on the server, this class provides access to the modified versions of the metadata and content that could not be committed. Once the event has been handled by the application, @B_com#google#android#gms#drive#events#CompletionEvent#dismiss_E@ should be called so the Drive API can release any associated resources. Drive will delete this data after @B_com#google#android#gms#drive#events#CompletionEvent#dismiss_E@ has been called or the device reboots, so if an application requires longer term access to this data (for example, persistence of data across device reboot), the app must copy and persist any data they want to keep. One way to persist this data is to save it in a file using the Drive API. Multiple actions by the same application on the same resource may be collapsed by the Drive API. In this case the event may refer to multiple collapsed actions. The @B_java#io#InputStream_E@ provided by @B_com#google#android#gms#drive#events#CompletionEvent#getBaseContentsInputStream_E@ will be the very first base version of the content and the @B_java#io#InputStream_E@ provided by @B_com#google#android#gms#drive#events#CompletionEvent#getModifiedContentsInputStream_E@ will be the very last written version of the content. The tags returned by @B_com#google#android#gms#drive#events#CompletionEvent#getTrackingTags_E@ will all be values provided to @B_com#google#android#gms#drive#DriveContents#commit_E@ through the @B_com#google#android#gms#drive#ExecutionOptions_E@ parameter, following the same order in which actions were applied. For every event received the client must call either @B_com#google#android#gms#drive#events#CompletionEvent#dismiss_E@ or @B_com#google#android#gms#drive#events#CompletionEvent#snooze_E@ in order to release the event instance. Dismiss indicates that the application has finished interacting with the event. Snooze indicates that the application could not process the event at the current time and wants to be notified again of the same event in the future. If neither @B_com#google#android#gms#drive#events#CompletionEvent#dismiss_E@ nor @B_com#google#android#gms#drive#events#CompletionEvent#snooze_E@ is invoked within a short period of time after event notification, it is assumed that the event was not delivered to the client. In such a situation, the event may be notified again later. In order to observe a reliable notification behavior, the client must always dismiss or snooze every event received."}