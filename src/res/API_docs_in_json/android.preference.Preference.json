{"Functions": {"getSummary()": {"Returns": [["@B_java#lang#CharSequence_E@", "the summary"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#setSummary_E@"], "Permissions": [], "Description": "Returns the summary of this Preference.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public CharSequence getSummary ()"}, "getOrder()": {"Returns": [["int", "the order of this Preference"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#setOrder_E@"], "Permissions": [], "Description": "Gets the order of this Preference with respect to other Preference objects on the same level.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public int getOrder ()"}, "persistStringSet(java.util.Set<java.lang.String>)": {"Returns": [["boolean", "True if this Preference is persistent. (This is not whether the value was persisted, since we may not necessarily commit if there will be a batch commit later.)"]], "Parameters": [["@B_java#util#Set_E@", "Set: The values to persist."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#getPersistedStringSet_E@"], "Permissions": [], "Description": "Attempts to persist a set of Strings if this Preference is persistent.", "history": "Added in API level 24 Deprecated in API level 29", "FullName": "public boolean persistStringSet (Set<String> values)"}, "findPreferenceInHierarchy(java.lang.String)": {"Returns": [["@B_android#preference#Preference_E@", "The Preference that uses the given key."]], "Parameters": [["@B_java#lang#String_E@", "String: The key of the Preference to find."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Finds a Preference in this hierarchy (the whole thing, even above/below your @B_android#preference#PreferenceScreen_E@ screen break) with the given key. This only functions after we have been attached to a hierarchy.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected Preference findPreferenceInHierarchy (String key)"}, "getLayoutResource()": {"Returns": [["int", "The layout resource ID."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the layout resource that will be shown as the @B_android#view#View_E@ for this Preference.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public int getLayoutResource ()"}, "getTitleRes()": {"Returns": [["int", "the title resource"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#setTitle_E@"], "Permissions": [], "Description": "Returns the title resource ID of this Preference. If the title did not come from a resource, 0 is returned.", "history": "Added in API level 14 Deprecated in API level 29", "FullName": "public int getTitleRes ()"}, "setPreferenceDataStore(android.preference.PreferenceDataStore)": {"Returns": [], "Parameters": [["@B_android#preference#PreferenceDataStore_E@", "PreferenceDataStore: The @B_android#preference#PreferenceDataStore_E@ to be used by this Preference."]], "Throws": [], "SeeAlso": ["@B_android#preference#PreferenceManager#setPreferenceDataStore_E@"], "Permissions": [], "Description": "Sets a @B_android#preference#PreferenceDataStore_E@ to be used by this Preference instead of using @B_android#content#SharedPreferences_E@. The data store will remain assigned even if the Preference is moved around the preference hierarchy. It will also override a data store propagated from the @B_android#preference#PreferenceManager_E@ that owns this Preference.", "history": "Added in API level 26 Deprecated in API level 29", "FullName": "public void setPreferenceDataStore (PreferenceDataStore dataStore)"}, "isSelectable()": {"Returns": [["boolean", "true if it is selectable, false otherwise"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether this Preference should be selectable in the list.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public boolean isSelectable ()"}, "onParentChanged(android.preference.Preference,boolean)": {"Returns": [], "Parameters": [["@B_android#preference#Preference_E@", "Preference: The Preference that this Preference depends on."], ["boolean", "boolean: Set true to disable this Preference."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the implicit parent dependency changes.", "history": "Added in API level 19 Deprecated in API level 29", "FullName": "public void onParentChanged (Preference parent, boolean disableChild)"}, "setLayoutResource(int)": {"Returns": [], "Parameters": [["int", "int: The layout resource ID to be inflated and returned as a @B_android#view#View_E@."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#setWidgetLayoutResource_E@"], "Permissions": [], "Description": "Sets the layout resource that is inflated as the @B_android#view#View_E@ to be shown for this Preference. In most cases, the default layout is sufficient for custom Preference objects and only the widget layout needs to be changed. This layout should contain a @B_android#view#ViewGroup_E@ with ID @B_android#R#id#widget_frame_E@ to be the parent of the specific widget for this Preference. It should similarly contain @B_android#R#id#title_E@ and @B_android#R#id#summary_E@.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public void setLayoutResource (int layoutResId)"}, "onBindView(android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: The View that shows this Preference."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#onCreateView_E@"], "Permissions": [], "Description": "Binds the created View to the data for this Preference. This is a good place to grab references to custom Views in the layout and set properties on them. Make sure to call through to the superclass's implementation. If you override this method you must call through to the superclass implementation.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected void onBindView (View view)"}, "isIconSpaceReserved()": {"Returns": [["boolean", "true if the space of this preference icon view is reserved"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#setIconSpaceReserved_E@"], "Permissions": [], "Description": "Gets whether the space this preference icon view is reserved.", "history": "Added in API level 26 Deprecated in API level 29", "FullName": "public boolean isIconSpaceReserved ()"}, "setTitle(int)": {"Returns": [], "Parameters": [["int", "int: the title as a resource ID"]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#setTitle_E@"], "Permissions": [], "Description": "Sets the title for this Preference with a resource ID.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public void setTitle (int titleResId)"}, "onAttachedToHierarchy(android.preference.PreferenceManager)": {"Returns": [], "Parameters": [["@B_android#preference#PreferenceManager_E@", "PreferenceManager: The PreferenceManager of the hierarchy."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when this Preference has been attached to a Preference hierarchy. Make sure to call the super implementation.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected void onAttachedToHierarchy (PreferenceManager preferenceManager)"}, "Preference(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The Context in which to store Preference values."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor to create a Preference.", "history": "Added in API level 1", "FullName": "public Preference (Context context)"}, "getOnPreferenceChangeListener()": {"Returns": [["@B_android#preference#Preference#OnPreferenceChangeListener_E@", "The callback to be invoked."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the callback to be invoked when this Preference is changed by the user (but before the internal state has been updated).", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public Preference.OnPreferenceChangeListener getOnPreferenceChangeListener ()"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public String toString ()"}, "getTitle()": {"Returns": [["@B_java#lang#CharSequence_E@", "the title"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#setTitle_E@"], "Permissions": [], "Description": "Returns the title of this Preference.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public CharSequence getTitle ()"}, "persistInt(int)": {"Returns": [["boolean", "True if this Preference is persistent. (This is not whether the value was persisted, since we may not necessarily commit if there will be a batch commit later.)"]], "Parameters": [["int", "int: The value to persist."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#persistString_E@", "@B_android#preference#Preference#getPersistedInt_E@"], "Permissions": [], "Description": "Attempts to persist an int if this Preference is persistent.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected boolean persistInt (int value)"}, "setTitle(java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: the title for this Preference"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the title for this Preference with a CharSequence. This title will be placed into the ID @B_android#R#id#title_E@ within the View created by @B_android#preference#Preference#onCreateView_E@.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public void setTitle (CharSequence title)"}, "notifyDependencyChange(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: Whether this Preference should disable its dependents."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies any listening dependents of a change that affects the dependency.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public void notifyDependencyChange (boolean disableDependents)"}, "persistBoolean(boolean)": {"Returns": [["boolean", "True if this Preference is persistent. (This is not whether the value was persisted, since we may not necessarily commit if there will be a batch commit later.)"]], "Parameters": [["boolean", "boolean: The value to persist."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#persistString_E@", "@B_android#preference#Preference#getPersistedBoolean_E@"], "Permissions": [], "Description": "Attempts to persist a boolean if this Preference is persistent.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected boolean persistBoolean (boolean value)"}, "notifyChanged()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Should be called when the data of this @B_android#preference#Preference_E@ has changed.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected void notifyChanged ()"}, "getPersistedStringSet(java.util.Set<java.lang.String>)": {"Returns": [["@B_java#util#Set_E@", "The value from the data store or the default return value."]], "Parameters": [["@B_java#util#Set_E@", "Set: The default value to return if either this Preference is not persistent or this Preference is not present."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#persistStringSet_E@"], "Permissions": [], "Description": "Attempts to get a persisted set of Strings if this Preference is persistent.", "history": "Added in API level 24 Deprecated in API level 29", "FullName": "public Set<String> getPersistedStringSet (Set<String> defaultReturnValue)"}, "setSummary(java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: the summary for the preference"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the summary for this Preference with a CharSequence.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public void setSummary (CharSequence summary)"}, "getPersistedFloat(float)": {"Returns": [["float", "The value from the data store or the default return value."]], "Parameters": [["float", "float: The default value to return if either this Preference is not persistent or this Preference is not present."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#getPersistedString_E@", "@B_android#preference#Preference#persistFloat_E@"], "Permissions": [], "Description": "Attempts to get a persisted float if this Preference is persistent.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected float getPersistedFloat (float defaultReturnValue)"}, "saveHierarchyState(android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: The Bundle in which to save the instance of this Preference."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#restoreHierarchyState_E@", "@B_android#preference#Preference#onSaveInstanceState_E@"], "Permissions": [], "Description": "Store this Preference hierarchy's frozen state into the given container.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public void saveHierarchyState (Bundle container)"}, "shouldPersist()": {"Returns": [["boolean", "True if it should persist the value."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether, at the given time this method is called, this Preference should store/restore its value(s) into the @B_android#content#SharedPreferences_E@ or into @B_android#preference#PreferenceDataStore_E@ if assigned. This, at minimum, checks whether this Preference is persistent and it currently has a key. Before you save/restore from the storage, check this first.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected boolean shouldPersist ()"}, "notifyHierarchyChanged()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Should be called when a Preference has been added/removed from this group, or the ordering should be re-evaluated.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected void notifyHierarchyChanged ()"}, "getPersistedInt(int)": {"Returns": [["int", "The value from the data store or the default return value."]], "Parameters": [["int", "int: The default value to return if either this Preference is not persistent or this Preference is not present."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#getPersistedString_E@", "@B_android#preference#Preference#persistInt_E@"], "Permissions": [], "Description": "Attempts to get a persisted int if this Preference is persistent.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected int getPersistedInt (int defaultReturnValue)"}, "getView(android.view.View, android.view.ViewGroup)": {"Returns": [["@B_android#view#View_E@", "Returns the same Preference object, for chaining multiple calls into a single statement."]], "Parameters": [["@B_android#view#View_E@", "View: The old View to reuse, if possible. Note: You should check that this View is non-null and of an appropriate type before using. If it is not possible to convert this View to display the correct data, this method can create a new View."], ["@B_android#view#ViewGroup_E@", "ViewGroup: The parent that this View will eventually be attached to."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#onCreateView_E@", "@B_android#preference#Preference#onBindView_E@"], "Permissions": [], "Description": "Gets the View that will be shown in the @B_android#preference#PreferenceActivity_E@.", "history": "added in API level 1", "FullName": "public View getView (View convertView, ViewGroup parent)"}, "isEnabled()": {"Returns": [["boolean", "true if this Preference is enabled, false otherwise"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether this Preference should be enabled in the list.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public boolean isEnabled ()"}, "getIntent()": {"Returns": [["@B_android#content#Intent_E@", "The @B_android#content#Intent_E@ last set via @B_android#preference#Preference#setIntent_E@ or XML."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the @B_android#content#Intent_E@ associated with this Preference.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public Intent getIntent ()"}, "setDefaultValue(java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: The default value."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the default value for this Preference, which will be set either if persistence is off or persistence is on and the preference is not found in the persistent storage.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public void setDefaultValue (Object defaultValue)"}, "getView(android.view.View,android.view.ViewGroup)": {"Returns": [["@B_android#view#View_E@", "Returns the same Preference object, for chaining multiple calls into a single statement."]], "Parameters": [["@B_android#view#View_E@", "View: The old View to reuse, if possible. Note: You should check that this View is non-null and of an appropriate type before using. If it is not possible to convert this View to display the correct data, this method can create a new View."], ["@B_android#view#ViewGroup_E@", "ViewGroup: The parent that this View will eventually be attached to."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#onCreateView_E@", "@B_android#preference#Preference#onBindView_E@"], "Permissions": [], "Description": "Gets the View that will be shown in the @B_android#preference#PreferenceActivity_E@.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public View getView (View convertView, ViewGroup parent)"}, "onRestoreInstanceState(android.os.Parcelable)": {"Returns": [], "Parameters": [["@B_android#os#Parcelable_E@", "Parcelable: The saved state that had previously been returned by @B_android#preference#Preference#onSaveInstanceState_E@."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#onSaveInstanceState_E@", "@B_android#preference#Preference#restoreHierarchyState_E@"], "Permissions": [], "Description": "Hook allowing a Preference to re-apply a representation of its internal state that had previously been generated by @B_android#preference#Preference#onSaveInstanceState_E@. This function will never be called with a null state.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected void onRestoreInstanceState (Parcelable state)"}, "setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)": {"Returns": [], "Parameters": [["@B_android#preference#Preference#OnPreferenceClickListener_E@", "Preference.OnPreferenceClickListener: The callback to be invoked."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the callback to be invoked when this Preference is clicked.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public void setOnPreferenceClickListener (Preference.OnPreferenceClickListener onPreferenceClickListener)"}, "setSingleLineTitle(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: set true if the title should be constrained to one line"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether to constrain the title of this Preference to a single line instead of letting it wrap onto multiple lines.", "history": "Added in API level 26 Deprecated in API level 29", "FullName": "public void setSingleLineTitle (boolean singleLineTitle)"}, "setOrder(int)": {"Returns": [], "Parameters": [["int", "int: the order for this Preference. A lower value will be shown first. Use @B_android#preference#Preference#DEFAULT_ORDER_E@ to sort alphabetically or allow ordering from XML"]], "Throws": [], "SeeAlso": ["@B_android#preference#PreferenceGroup#setOrderingAsAdded_E@", "@B_android#preference#Preference_E@"], "Permissions": [], "Description": "Sets the order of this Preference with respect to other Preference objects on the same level. If this is not specified, the default behavior is to sort alphabetically. The @B_android#preference#PreferenceGroup#setOrderingAsAdded_E@ can be used to order Preference objects based on the order they appear in the XML.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public void setOrder (int order)"}, "setWidgetLayoutResource(int)": {"Returns": [], "Parameters": [["int", "int: The layout resource ID to be inflated into the main layout."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#setLayoutResource_E@"], "Permissions": [], "Description": "Sets the layout for the controllable widget portion of this Preference. This is inflated into the main layout. For example, a @B_android#preference#CheckBoxPreference_E@ would specify a custom layout (consisting of just the CheckBox) here, instead of creating its own main layout.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public void setWidgetLayoutResource (int widgetLayoutResId)"}, "isPersistent()": {"Returns": [["boolean", "True if it is persistent."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether this Preference is persistent. If it is, it stores its value(s) into the persistent @B_android#content#SharedPreferences_E@ storage by default or into @B_android#preference#PreferenceDataStore_E@ if assigned.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public boolean isPersistent ()"}, "getPersistedLong(long)": {"Returns": [["long", "The value from the data store or the default return value."]], "Parameters": [["long", "long: The default value to return if either this Preference is not persistent or this Preference is not present."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#getPersistedString_E@", "@B_android#preference#Preference#persistLong_E@"], "Permissions": [], "Description": "Attempts to get a persisted long if this Preference is persistent.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected long getPersistedLong (long defaultReturnValue)"}, "getWidgetLayoutResource()": {"Returns": [["int", "The layout resource ID."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the layout resource for the controllable widget portion of this Preference.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public int getWidgetLayoutResource ()"}, "getPreferenceManager()": {"Returns": [["@B_android#preference#PreferenceManager_E@", "The @B_android#preference#PreferenceManager_E@."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the @B_android#preference#PreferenceManager_E@ that manages this Preference object's tree.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public PreferenceManager getPreferenceManager ()"}, "setRecycleEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: set true if this preference view should be recycled"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether this Preference has enabled to have its view recycled when used in the list view. By default the recycling is enabled. The value can be changed only before this preference is added to the preference hierarchy. If view recycling is not allowed then each time the list view populates this preference the @B_android#preference#Preference#getView_E@ method receives a null convert view and needs to recreate the view. Otherwise view gets recycled and only @B_android#preference#Preference#onBindView_E@ gets called. If you override this method you must call through to the superclass implementation.", "history": "Added in API level 26 Deprecated in API level 29", "FullName": "public void setRecycleEnabled (boolean enabled)"}, "Preference(android.content.Context,android.util.AttributeSet,int,int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The Context this is associated with, through which it can access the current theme, resources, @B_android#content#SharedPreferences_E@, etc."], ["@B_android#util#AttributeSet_E@", "AttributeSet: The attributes of the XML tag that is inflating the preference."], ["int", "int: An attribute in the current theme that contains a reference to a style resource that supplies default values for the view. Can be 0 to not look for defaults."], ["int", "int: A resource identifier of a style resource that supplies default values for the view, used only if defStyleAttr is 0 or can not be found in the theme. Can be 0 to not look for defaults."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#Preference_E@"], "Permissions": [], "Description": "Perform inflation from XML and apply a class-specific base style. This constructor of Preference allows subclasses to use their own base style when they are inflating. For example, a @B_android#preference#CheckBoxPreference_E@ constructor calls this version of the super class constructor and supplies android.R.attr.checkBoxPreferenceStyle for @B_android#preference#CheckBoxPreference_E@ class's attributes.", "history": "Added in API level 21", "FullName": "public Preference (Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes)"}, "peekExtras()": {"Returns": [["@B_android#os#Bundle_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the extras Bundle object associated with this preference, returning null if there is not currently one.", "history": "Added in API level 11 Deprecated in API level 29", "FullName": "public Bundle peekExtras ()"}, "onSetInitialValue(boolean,java.lang.Object)": {"Returns": [], "Parameters": [["boolean", "boolean: True to restore the persisted value; false to use the given defaultValue."], ["@B_java#lang#Object_E@", "Object: The default value for this Preference. Only use this if restorePersistedValue is false."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Implement this to set the initial value of the Preference. If @B_android#content#SharedPreferences_E@. If @B_android#preference#Preference#shouldPersist_E@ is true). In case of using @B_android#preference#PreferenceDataStore_E@, the true. But the default value (if provided) is set. This may not always be called. One example is if it should not persist but there is no default value given.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected void onSetInitialValue (boolean restorePersistedValue, Object defaultValue)"}, "compareTo(android.preference.Preference)": {"Returns": [["int", "0 if the same; less than 0 if this Preference sorts ahead of another; greater than 0 if this Preference sorts after another."]], "Parameters": [["@B_android#preference#Preference_E@", "Preference: The Preference to compare to this one."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Compares Preference objects based on order (if set), otherwise alphabetically on the titles.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public int compareTo (Preference another)"}, "getExtras()": {"Returns": [["@B_android#os#Bundle_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the extras Bundle object associated with this preference, creating a new Bundle if there currently isn't one. You can use this to get and set individual extra key/value pairs.", "history": "Added in API level 11 Deprecated in API level 29", "FullName": "public Bundle getExtras ()"}, "setFragment(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The class name of the fragment associated with this Preference."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the class name of a fragment to be shown when this Preference is clicked.", "history": "Added in API level 11 Deprecated in API level 29", "FullName": "public void setFragment (String fragment)"}, "getContext()": {"Returns": [["@B_android#content#Context_E@", "The Context of this Preference."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#content#Context_E@ of this Preference. Each Preference in a Preference hierarchy can be from different Context (for example, if multiple activities provide preferences into a single @B_android#preference#PreferenceActivity_E@). This Context will be used to save the Preference values.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public Context getContext ()"}, "persistString(java.lang.String)": {"Returns": [["boolean", "True if this Preference is persistent. (This is not whether the value was persisted, since we may not necessarily commit if there will be a batch commit later.)"]], "Parameters": [["@B_java#lang#String_E@", "String: The value to persist."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#getPersistedString_E@"], "Permissions": [], "Description": "Attempts to persist a String if this Preference is persistent.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected boolean persistString (String value)"}, "setKey(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The key for the preference."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the key for this Preference, which is used as a key to the @B_android#content#SharedPreferences_E@ or @B_android#preference#PreferenceDataStore_E@. This should be unique for the package.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public void setKey (String key)"}, "setEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: set true to enable it"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether this Preference is enabled. If disabled, it will not handle clicks.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public void setEnabled (boolean enabled)"}, "shouldCommit()": {"Returns": [["boolean", "Whether the Preference should commit its saved value(s)."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#getEditor_E@"], "Permissions": [], "Description": "Returns whether the @B_android#preference#Preference_E@ should commit its saved value(s) in @B_android#preference#Preference#getEditor_E@. This may return false in situations where batch committing is being done (by the manager) to improve performance. If this preference is using @B_android#preference#PreferenceDataStore_E@ this value is irrelevant.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public boolean shouldCommit ()"}, "getFragment()": {"Returns": [["@B_java#lang#String_E@", "The fragment class name last set via @B_android#preference#Preference#setFragment_E@ or XML."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the fragment class name associated with this Preference.", "history": "Added in API level 11 Deprecated in API level 29", "FullName": "public String getFragment ()"}, "getDependency()": {"Returns": [["@B_java#lang#String_E@", "The key of the dependency."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#setDependency_E@"], "Permissions": [], "Description": "Returns the key of the dependency on this Preference.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public String getDependency ()"}, "setIntent(android.content.Intent)": {"Returns": [], "Parameters": [["@B_android#content#Intent_E@", "Intent: The intent associated with this Preference."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets an @B_android#content#Intent_E@ to be used for @B_android#content#Context#startActivity_E@ when this Preference is clicked.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public void setIntent (Intent intent)"}, "Preference(android.content.Context,android.util.AttributeSet)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The Context this is associated with, through which it can access the current theme, resources, @B_android#content#SharedPreferences_E@, etc."], ["@B_android#util#AttributeSet_E@", "AttributeSet: The attributes of the XML tag that is inflating the preference."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#Preference_E@"], "Permissions": [], "Description": "Constructor that is called when inflating a Preference from XML. This is called when a Preference is being constructed from an XML file, supplying attributes that were specified in the XML file. This version uses a default style of 0, so the only attribute values applied are those in the Context's Theme and the given AttributeSet.", "history": "Added in API level 1", "FullName": "public Preference (Context context, AttributeSet attrs)"}, "getSharedPreferences()": {"Returns": [["@B_android#content#SharedPreferences_E@", "the @B_android#content#SharedPreferences_E@ where this Preference reads its value(s). If this preference isn't attached to a Preference hierarchy or if a @B_android#preference#PreferenceDataStore_E@ has been set, this method returns null."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#getEditor_E@", "@B_android#preference#Preference#setPreferenceDataStore_E@"], "Permissions": [], "Description": "Returns the @B_android#content#SharedPreferences_E@ where this Preference can read its value(s). Usually, it's easier to use one of the helper read methods: @B_android#preference#Preference#getPersistedBoolean_E@, @B_android#preference#Preference#getPersistedFloat_E@, @B_android#preference#Preference#getPersistedInt_E@, @B_android#preference#Preference#getPersistedLong_E@, @B_android#preference#Preference#getPersistedString_E@. To save values, see @B_android#preference#Preference#getEditor_E@. In some cases, writes to the @B_android#preference#Preference#getEditor_E@ will not be committed right away and hence not show up in the returned @B_android#content#SharedPreferences_E@, this is intended behavior to improve performance.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public SharedPreferences getSharedPreferences ()"}, "isSingleLineTitle()": {"Returns": [["boolean", "true if the title of this preference is constrained to a single line"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#setSingleLineTitle_E@"], "Permissions": [], "Description": "Gets whether the title of this preference is constrained to a single line.", "history": "Added in API level 26 Deprecated in API level 29", "FullName": "public boolean isSingleLineTitle ()"}, "Preference(android.content.Context,android.util.AttributeSet,int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The Context this is associated with, through which it can access the current theme, resources, @B_android#content#SharedPreferences_E@, etc."], ["@B_android#util#AttributeSet_E@", "AttributeSet: The attributes of the XML tag that is inflating the preference."], ["int", "int: An attribute in the current theme that contains a reference to a style resource that supplies default values for the view. Can be 0 to not look for defaults."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#Preference_E@"], "Permissions": [], "Description": "Perform inflation from XML and apply a class-specific base style. This constructor of Preference allows subclasses to use their own base style when they are inflating. For example, a @B_android#preference#CheckBoxPreference_E@ constructor calls this version of the super class constructor and supplies android.R.attr.checkBoxPreferenceStyle for @B_android#preference#CheckBoxPreference_E@ class's attributes.", "history": "Added in API level 1", "FullName": "public Preference (Context context, AttributeSet attrs, int defStyleAttr)"}, "onSaveInstanceState()": {"Returns": [["@B_android#os#Parcelable_E@", "A Parcelable object containing the current dynamic state of this Preference, or null if there is nothing interesting to save. The default implementation returns null."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#onRestoreInstanceState_E@", "@B_android#preference#Preference#saveHierarchyState_E@"], "Permissions": [], "Description": "Hook allowing a Preference to generate a representation of its internal state that can later be used to create a new instance with that same state. This state should only contain information that is not persistent or can be reconstructed later.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected Parcelable onSaveInstanceState ()"}, "onDependencyChanged(android.preference.Preference,boolean)": {"Returns": [], "Parameters": [["@B_android#preference#Preference_E@", "Preference: The Preference that this Preference depends on."], ["boolean", "boolean: Set true to disable this Preference."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the dependency changes.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public void onDependencyChanged (Preference dependency, boolean disableDependent)"}, "hasKey()": {"Returns": [["boolean", "True if the key exists and is not a blank string, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether this Preference has a valid key.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public boolean hasKey ()"}, "getPersistedString(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "The value from the data store or the default return value."]], "Parameters": [["@B_java#lang#String_E@", "String: The default value to return if either this Preference is not persistent or this Preference is not present."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#persistString_E@"], "Permissions": [], "Description": "Attempts to get a persisted String if this Preference is persistent.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected String getPersistedString (String defaultReturnValue)"}, "callChangeListener(java.lang.Object)": {"Returns": [["boolean", "True if the user value should be set as the preference value (and persisted)."]], "Parameters": [["@B_java#lang#Object_E@", "Object: The new value of this Preference."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Call this method after the user changes the preference, but before the internal state is set. This allows the client to ignore the user value.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected boolean callChangeListener (Object newValue)"}, "getKey()": {"Returns": [["@B_java#lang#String_E@", "The key."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the key for this Preference, which is also the key used for storing values into @B_android#content#SharedPreferences_E@ or @B_android#preference#PreferenceDataStore_E@.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public String getKey ()"}, "onCreateView(android.view.ViewGroup)": {"Returns": [["@B_android#view#View_E@", "The View that displays this Preference."]], "Parameters": [["@B_android#view#ViewGroup_E@", "ViewGroup: The parent that this View will eventually be attached to."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#onBindView_E@"], "Permissions": [], "Description": "Creates the View to be shown for this Preference in the @B_android#preference#PreferenceActivity_E@. The default behavior is to inflate the main layout of this Preference (see @B_android#preference#Preference#setLayoutResource_E@. If changing this behavior, please specify a @B_android#view#ViewGroup_E@ with ID @B_android#R#id#widget_frame_E@. Make sure to call through to the superclass's implementation. If you override this method you must call through to the superclass implementation.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected View onCreateView (ViewGroup parent)"}, "persistFloat(float)": {"Returns": [["boolean", "True if this Preference is persistent. (This is not whether the value was persisted, since we may not necessarily commit if there will be a batch commit later.)"]], "Parameters": [["float", "float: The value to persist."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#persistString_E@", "@B_android#preference#Preference#getPersistedFloat_E@"], "Permissions": [], "Description": "Attempts to persist a long if this Preference is persistent.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected boolean persistFloat (float value)"}, "getParent()": {"Returns": [["@B_android#preference#PreferenceGroup_E@", "the parent PreferenceGroup or null if not attached to any"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#preference#PreferenceGroup_E@ which is this Preference assigned to or null if this preference is not assigned to any group or is a root Preference.", "history": "Added in API level 26 Deprecated in API level 29", "FullName": "public PreferenceGroup getParent ()"}, "isRecycleEnabled()": {"Returns": [["boolean", "true if this preference view should be recycled"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#setRecycleEnabled_E@"], "Permissions": [], "Description": "Checks whether this Preference has enabled to have its view recycled when used in the list view.", "history": "Added in API level 26 Deprecated in API level 29", "FullName": "public boolean isRecycleEnabled ()"}, "onClick()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Processes a click on the preference. This includes saving the value to the @B_android#content#SharedPreferences_E@. However, the overridden method should call @B_android#preference#Preference#callChangeListener_E@ to make sure the client wants to update the preference's state with the new value.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected void onClick ()"}, "setSelectable(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: set true to make it selectable"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether this Preference is selectable.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public void setSelectable (boolean selectable)"}, "setDependency(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The key of the Preference that this depends on."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the key of a Preference that this Preference will depend on. If that Preference is not set or is off, this Preference will be disabled.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public void setDependency (String dependencyKey)"}, "restoreHierarchyState(android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: The Bundle that holds the previously saved state."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#saveHierarchyState_E@", "@B_android#preference#Preference#onRestoreInstanceState_E@"], "Permissions": [], "Description": "Restore this Preference hierarchy's previously saved state from the given container.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public void restoreHierarchyState (Bundle container)"}, "onPrepareForRemoval()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when this Preference is being removed from the hierarchy. You should remove any references to this Preference that you know about. Make sure to call through to the superclass implementation. If you override this method you must call through to the superclass implementation.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected void onPrepareForRemoval ()"}, "setIcon(android.graphics.drawable.Drawable)": {"Returns": [], "Parameters": [["@B_android#graphics#drawable#Drawable_E@", "Drawable: the optional icon for this Preference"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the icon for this Preference with a Drawable. This icon will be placed into the ID @B_android#R#id#icon_E@ within the View created by @B_android#preference#Preference#onCreateView_E@.", "history": "Added in API level 11 Deprecated in API level 29", "FullName": "public void setIcon (Drawable icon)"}, "setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)": {"Returns": [], "Parameters": [["@B_android#preference#Preference#OnPreferenceChangeListener_E@", "Preference.OnPreferenceChangeListener: The callback to be invoked."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the callback to be invoked when this Preference is changed by the user (but before the internal state has been updated).", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public void setOnPreferenceChangeListener (Preference.OnPreferenceChangeListener onPreferenceChangeListener)"}, "getEditor()": {"Returns": [["@B_android#content#SharedPreferences#Editor_E@", "a @B_android#content#SharedPreferences#Editor_E@ where this preference saves its value(s). If this preference isn't attached to a Preference hierarchy or if a @B_android#preference#PreferenceDataStore_E@ has been set, this method returns null."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#shouldCommit_E@", "@B_android#preference#Preference#getSharedPreferences_E@", "@B_android#preference#Preference#setPreferenceDataStore_E@"], "Permissions": [], "Description": "Returns an @B_android#content#SharedPreferences#Editor_E@ where this Preference can save its value(s). Usually it's easier to use one of the helper save methods: @B_android#preference#Preference#persistBoolean_E@, @B_android#preference#Preference#persistFloat_E@, @B_android#preference#Preference#persistInt_E@, @B_android#preference#Preference#persistLong_E@, @B_android#preference#Preference#persistString_E@. To read values, see @B_android#preference#Preference#getSharedPreferences_E@. If @B_android#preference#Preference#shouldCommit_E@ returns true, it is this Preference's responsibility to commit. In some cases, writes to this will not be committed right away and hence not show up in the SharedPreferences, this is intended behavior to improve performance.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public SharedPreferences.Editor getEditor ()"}, "getPersistedBoolean(boolean)": {"Returns": [["boolean", "The value from the data store or the default return value."]], "Parameters": [["boolean", "boolean: The default value to return if either this Preference is not persistent or this Preference is not present."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#getPersistedString_E@", "@B_android#preference#Preference#persistBoolean_E@"], "Permissions": [], "Description": "Attempts to get a persisted boolean if this Preference is persistent.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected boolean getPersistedBoolean (boolean defaultReturnValue)"}, "setIconSpaceReserved(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: set true if the space for the icon view should be reserved"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether to reserve the space of this Preference icon view when no icon is provided.", "history": "Added in API level 26 Deprecated in API level 29", "FullName": "public void setIconSpaceReserved (boolean iconSpaceReserved)"}, "shouldDisableDependents()": {"Returns": [["boolean", "True if the dependents should be disabled, otherwise false."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether this preference's dependents should currently be disabled.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public boolean shouldDisableDependents ()"}, "onGetDefaultValue(android.content.res.TypedArray,int)": {"Returns": [["@B_java#lang#Object_E@", "The default value of this preference type."]], "Parameters": [["@B_android#content#res#TypedArray_E@", "TypedArray: The set of attributes."], ["int", "int: The index of the default value attribute."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a Preference is being inflated and the default value attribute needs to be read. Since different Preference types have different value types, the subclass should get and return the default value which will be its value type. For example, if the value type is String, the body of the method would proxy to @B_android#content#res#TypedArray#getString_E@.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected Object onGetDefaultValue (TypedArray a, int index)"}, "setIcon(int)": {"Returns": [], "Parameters": [["int", "int: the icon as a resource ID"]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#setIcon_E@"], "Permissions": [], "Description": "Sets the icon for this Preference with a resource ID.", "history": "Added in API level 11 Deprecated in API level 29", "FullName": "public void setIcon (int iconResId)"}, "getIcon()": {"Returns": [["@B_android#graphics#drawable#Drawable_E@", "the icon"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#setIcon_E@"], "Permissions": [], "Description": "Returns the icon of this Preference.", "history": "Added in API level 11 Deprecated in API level 29", "FullName": "public Drawable getIcon ()"}, "onAttachedToActivity()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the Preference hierarchy has been attached to the @B_android#preference#PreferenceActivity_E@. This can also be called when this Preference has been attached to a group that was already attached to the @B_android#preference#PreferenceActivity_E@.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected void onAttachedToActivity ()"}, "getPreferenceDataStore()": {"Returns": [["@B_android#preference#PreferenceDataStore_E@", "The @B_android#preference#PreferenceDataStore_E@ used by this Preference or null if none."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns @B_android#preference#PreferenceDataStore_E@ used by this Preference. Returns null if @B_android#content#SharedPreferences_E@ is used instead. By default preferences always use @B_android#content#SharedPreferences_E@. To make this preference to use the @B_android#preference#PreferenceDataStore_E@ you need to assign your implementation to the Preference itself via @B_android#preference#Preference#setPreferenceDataStore_E@ or to its @B_android#preference#PreferenceManager_E@ via @B_android#preference#PreferenceManager#setPreferenceDataStore_E@.", "history": "Added in API level 26 Deprecated in API level 29", "FullName": "public PreferenceDataStore getPreferenceDataStore ()"}, "getShouldDisableView()": {"Returns": [["boolean", "true if it should disable the view"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#setShouldDisableView_E@"], "Permissions": [], "Description": "Checks whether this Preference should disable its view when it's action is disabled.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public boolean getShouldDisableView ()"}, "setSummary(int)": {"Returns": [], "Parameters": [["int", "int: the summary as a resource"]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#setSummary_E@"], "Permissions": [], "Description": "Sets the summary for this Preference with a resource ID.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public void setSummary (int summaryResId)"}, "getOnPreferenceClickListener()": {"Returns": [["@B_android#preference#Preference#OnPreferenceClickListener_E@", "The callback to be invoked."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the callback to be invoked when this Preference is clicked.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public Preference.OnPreferenceClickListener getOnPreferenceClickListener ()"}, "onSetInitialValue(boolean, java.lang.Object)": {"Returns": [], "Parameters": [["boolean", "boolean: True to restore the persisted value; false to use the given defaultValue."], ["@B_java#lang#Object_E@", "Object: The default value for this Preference. Only use this if restorePersistedValue is false."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Implement this to set the initial value of the Preference. If @B_android#content#SharedPreferences_E@. If @B_android#preference#Preference#shouldPersist_E@ is true). In case of using @B_android#preference#PreferenceDataStore_E@, the true. But the default value (if provided) is set. This may not always be called. One example is if it should not persist but there is no default value given.", "history": "added in API level 1", "FullName": "protected void onSetInitialValue (boolean restorePersistedValue, Object defaultValue)"}, "persistLong(long)": {"Returns": [["boolean", "True if this Preference is persistent. (This is not whether the value was persisted, since we may not necessarily commit if there will be a batch commit later.)"]], "Parameters": [["long", "long: The value to persist."]], "Throws": [], "SeeAlso": ["@B_android#preference#Preference#persistString_E@", "@B_android#preference#Preference#getPersistedLong_E@"], "Permissions": [], "Description": "Attempts to persist a long if this Preference is persistent.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "protected boolean persistLong (long value)"}, "setShouldDisableView(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: set true if this preference should disable its view when the preference is disabled"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether this Preference should disable its view when it gets disabled. For example, set this and @B_android#preference#Preference#setEnabled_E@ to false for preferences that are only displaying information and 1) should not be clickable 2) should not have the view set to the disabled state.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public void setShouldDisableView (boolean shouldDisableView)"}, "setPersistent(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: set true if it should store its value(s) into the storage."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether this Preference is persistent. When persistent, it stores its value(s) into the persistent @B_android#content#SharedPreferences_E@ storage by default or into @B_android#preference#PreferenceDataStore_E@ if assigned.", "history": "Added in API level 1 Deprecated in API level 29", "FullName": "public void setPersistent (boolean persistent)"}}, "Inheritance": [], "ClassName": "android.preference.Preference", "ClassDesc": "Use the Represents the basic Preference UI building block displayed by a @B_android#preference#PreferenceActivity_E@ in the form of a @B_android#widget#ListView_E@. This class provides the @B_android#view#View_E@ to be displayed in the activity and associates with a @B_android#content#SharedPreferences_E@ to store/retrieve the preference data. When specifying a preference hierarchy in XML, each element can point to a subclass of @B_android#preference#Preference_E@, similar to the view hierarchy and layouts. This class contains a key that will be used as the key into the @B_android#content#SharedPreferences_E@. It is up to the subclass to decide how to store the value."}