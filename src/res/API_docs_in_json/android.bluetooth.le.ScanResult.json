{"Functions": {"writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 21", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getScanRecord()": {"Returns": [["@B_android#bluetooth#le#ScanRecord_E@", "This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the scan record, which is a combination of advertisement and scan response.", "history": "Added in API level 21", "FullName": "public ScanRecord getScanRecord ()"}, "isConnectable()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this object represents connectable scan result.", "history": "Added in API level 26", "FullName": "public boolean isConnectable ()"}, "getRssi()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the received signal strength in dBm. The valid range is [-127, 126].", "history": "Added in API level 21", "FullName": "public int getRssi ()"}, "ScanResult(android.bluetooth.BluetoothDevice,int,int,int,int,int,int,int,android.bluetooth.le.ScanRecord,long)": {"Returns": [], "Parameters": [["@B_android#bluetooth#BluetoothDevice_E@", "BluetoothDevice: Remote Bluetooth device found."], ["int", "int: Event type."], ["int", "int: Primary advertising phy."], ["int", "int: Secondary advertising phy."], ["int", "int: Advertising set ID."], ["int", "int: Transmit power."], ["int", "int: Received signal strength."], ["int", "int: Periodic advertising interval."], ["@B_android#bluetooth#le#ScanRecord_E@", "ScanRecord: Scan record including both advertising data and scan response data."], ["long", "long: Timestamp at which the scan result was observed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new ScanResult.", "history": "Added in API level 26", "FullName": "public ScanResult (BluetoothDevice device, int eventType, int primaryPhy, int secondaryPhy, int advertisingSid, int txPower, int rssi, int periodicAdvertisingInterval, ScanRecord scanRecord, long timestampNanos)"}, "getAdvertisingSid()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the advertising set id. May return @B_android#bluetooth#le#ScanResult#SID_NOT_PRESENT_E@ if no set id was is present.", "history": "Added in API level 26", "FullName": "public int getAdvertisingSid ()"}, "ScanResult(android.bluetooth.BluetoothDevice,android.bluetooth.le.ScanRecord,int,long)": {"Returns": [], "Parameters": [["@B_android#bluetooth#BluetoothDevice_E@", "BluetoothDevice: Remote Bluetooth device found."], ["@B_android#bluetooth#le#ScanRecord_E@", "ScanRecord: Scan record including both advertising data and scan response data."], ["int", "int: Received signal strength."], ["long", "long: Timestamp at which the scan result was observed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "use @B_android#bluetooth#le#ScanResult#ScanResult_E@ Constructs a new ScanResult.", "history": "Added in API level 21", "FullName": "public ScanResult (BluetoothDevice device, ScanRecord scanRecord, int rssi, long timestampNanos)"}, "getPrimaryPhy()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the primary Physical Layer on which this advertisment was received. Can be one of @B_android#bluetooth#BluetoothDevice#PHY_LE_1M_E@ or @B_android#bluetooth#BluetoothDevice#PHY_LE_CODED_E@.", "history": "Added in API level 26", "FullName": "public int getPrimaryPhy ()"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 21", "FullName": "public int describeContents ()"}, "getTimestampNanos()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns timestamp since boot when the scan record was observed.", "history": "Added in API level 21", "FullName": "public long getTimestampNanos ()"}, "getPeriodicAdvertisingInterval()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the periodic advertising interval in units of 1.25ms. Valid range is 6 (7.5ms) to 65536 (81918.75ms). A value of @B_android#bluetooth#le#ScanResult#PERIODIC_INTERVAL_NOT_PRESENT_E@ means periodic advertising interval is not present.", "history": "Added in API level 26", "FullName": "public int getPeriodicAdvertisingInterval ()"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 21", "FullName": "public String toString ()"}, "getTxPower()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the transmit power in dBm. Valid range is [-127, 126]. A value of @B_android#bluetooth#le#ScanResult#TX_POWER_NOT_PRESENT_E@ indicates that the TX power is not present.", "history": "Added in API level 26", "FullName": "public int getTxPower ()"}, "getSecondaryPhy()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the secondary Physical Layer on which this advertisment was received. Can be one of @B_android#bluetooth#BluetoothDevice#PHY_LE_1M_E@, @B_android#bluetooth#BluetoothDevice#PHY_LE_2M_E@, @B_android#bluetooth#BluetoothDevice#PHY_LE_CODED_E@ or @B_android#bluetooth#le#ScanResult#PHY_UNUSED_E@ - if the advertisement was not received on a secondary physical channel.", "history": "Added in API level 26", "FullName": "public int getSecondaryPhy ()"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if this object is the same as the obj argument; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the reference object with which to compare."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether some other object is \"equal to\" this one. The equals method implements an equivalence relation on non-null object references: It is x, x.equals(x) should return true. It is x and y, x.equals(y) should return true if and only if y.equals(x) returns true. It is x, y, and z, if x.equals(y) returns true and y.equals(z) returns true, then x.equals(z) should return true. It is x and y, multiple invocations of x.equals(y) consistently return true or consistently return false, provided no information used in equals comparisons on the objects is modified. For any non-null reference value x, x.equals(null) should return false. The equals method for class Object implements the most discriminating possible equivalence relation on objects; that is, for any non-null reference values x and y, this method returns true if and only if x and y refer to the same object (x == y has the value true). Note that it is generally necessary to override the hashCode method whenever this method is overridden, so as to maintain the general contract for the hashCode method, which states that equal objects must have equal hash codes.", "history": "Added in API level 21", "FullName": "public boolean equals (Object obj)"}, "isLegacy()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this object represents legacy scan result. Legacy scan results do not contain advanced advertising information as specified in the Bluetooth Core Specification v5.", "history": "Added in API level 26", "FullName": "public boolean isLegacy ()"}, "getDevice()": {"Returns": [["@B_android#bluetooth#BluetoothDevice_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the remote Bluetooth device identified by the Bluetooth device address.", "history": "Added in API level 21", "FullName": "public BluetoothDevice getDevice ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 21", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getDataStatus()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the data status. Can be one of @B_android#bluetooth#le#ScanResult#DATA_COMPLETE_E@ or @B_android#bluetooth#le#ScanResult#DATA_TRUNCATED_E@.", "history": "Added in API level 26", "FullName": "public int getDataStatus ()"}, "hashCode()": {"Returns": [["int", "a hash code value for this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code value for the object. This method is supported for the benefit of hash tables such as those provided by @B_java#util#HashMap_E@. The general contract of hashCode is: Whenever it is invoked on the same object more than once during an execution of a Java application, the hashCode method must consistently return the same integer, provided no information used in equals comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application. If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result. It is not required that if two objects are unequal according to the @B_java#lang#Object#equals_E@ method, then calling the hashCode method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables. As much as is reasonably practical, the hashCode method defined by class Object does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the Java\u2122 programming language.)", "history": "Added in API level 21", "FullName": "public int hashCode ()"}}, "Inheritance": [], "ClassName": "android.bluetooth.le.ScanResult", "ClassDesc": "ScanResult for Bluetooth LE scan."}