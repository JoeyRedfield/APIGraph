{"Functions": {"isAudioConnected(android.bluetooth.BluetoothDevice)": {"Returns": [["boolean", "true if SCO is connected, false otherwise or on error"]], "Parameters": [["@B_android#bluetooth#BluetoothDevice_E@", "BluetoothDevice: Bluetooth headset"]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Check if Bluetooth SCO audio is connected. Requires @B_android#Manifest#permission#BLUETOOTH_E@ permission.", "history": "Added in API level 11", "FullName": "public boolean isAudioConnected (BluetoothDevice device)"}, "getDevicesMatchingConnectionStates(int[])": {"Returns": [["@B_java#util#List_E@", "List of devices. The list will be empty on error."]], "Parameters": [["int[]", "int: Array of states. States can be one of @B_android#bluetooth#BluetoothProfile#STATE_CONNECTED_E@, @B_android#bluetooth#BluetoothProfile#STATE_CONNECTING_E@, @B_android#bluetooth#BluetoothProfile#STATE_DISCONNECTED_E@, @B_android#bluetooth#BluetoothProfile#STATE_DISCONNECTING_E@,"]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Get a list of devices that match any of the given connection states. If none of the devices match any of the given states, an empty list will be returned. Requires @B_android#Manifest#permission#BLUETOOTH_E@", "history": "Added in API level 11", "FullName": "public List<BluetoothDevice> getDevicesMatchingConnectionStates (int[] states)"}, "stopVoiceRecognition(android.bluetooth.BluetoothDevice)": {"Returns": [["boolean", "false if there is no headset connected, or voice recognition has not started, or voice recognition has ended on this headset, or on error, true otherwise"]], "Parameters": [["@B_android#bluetooth#BluetoothDevice_E@", "BluetoothDevice: Bluetooth headset"]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Stop Bluetooth Voice Recognition mode, and shut down the Bluetooth audio path. Users can listen to @B_android#bluetooth#BluetoothHeadset#ACTION_AUDIO_STATE_CHANGED_E@. If this function returns true, this intent will be broadcasted with @B_android#bluetooth#BluetoothProfile#EXTRA_STATE_E@ set to @B_android#bluetooth#BluetoothHeadset#STATE_AUDIO_DISCONNECTED_E@. Requires @B_android#Manifest#permission#BLUETOOTH_E@ permission.", "history": "Added in API level 11", "FullName": "public boolean stopVoiceRecognition (BluetoothDevice device)"}, "startVoiceRecognition(android.bluetooth.BluetoothDevice)": {"Returns": [["boolean", "false if there is no headset connected, or the connected headset doesn't support voice recognition, or voice recognition is already started, or audio channel is occupied, or on error, true otherwise"]], "Parameters": [["@B_android#bluetooth#BluetoothDevice_E@", "BluetoothDevice: Bluetooth headset"]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Start Bluetooth voice recognition. This methods sends the voice recognition AT command to the headset and establishes the audio connection. Users can listen to @B_android#bluetooth#BluetoothHeadset#ACTION_AUDIO_STATE_CHANGED_E@. If this function returns true, this intent will be broadcasted with @B_android#bluetooth#BluetoothProfile#EXTRA_STATE_E@ set to @B_android#bluetooth#BluetoothHeadset#STATE_AUDIO_CONNECTING_E@. @B_android#bluetooth#BluetoothProfile#EXTRA_STATE_E@ will transition from @B_android#bluetooth#BluetoothHeadset#STATE_AUDIO_CONNECTING_E@ to @B_android#bluetooth#BluetoothHeadset#STATE_AUDIO_CONNECTED_E@ when audio connection is established and to @B_android#bluetooth#BluetoothHeadset#STATE_AUDIO_DISCONNECTED_E@ in case of failure to establish the audio connection. Requires @B_android#Manifest#permission#BLUETOOTH_E@ permission.", "history": "Added in API level 11", "FullName": "public boolean startVoiceRecognition (BluetoothDevice device)"}, "getConnectedDevices()": {"Returns": [["@B_java#util#List_E@", "List of devices. The list will be empty on error."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Get connected devices for this specific profile. Return the set of devices which are in state @B_android#bluetooth#BluetoothProfile#STATE_CONNECTED_E@ Requires @B_android#Manifest#permission#BLUETOOTH_E@", "history": "Added in API level 11", "FullName": "public List<BluetoothDevice> getConnectedDevices ()"}, "getConnectionState(android.bluetooth.BluetoothDevice)": {"Returns": [["int", "State of the profile connection. One of @B_android#bluetooth#BluetoothProfile#STATE_CONNECTED_E@, @B_android#bluetooth#BluetoothProfile#STATE_CONNECTING_E@, @B_android#bluetooth#BluetoothProfile#STATE_DISCONNECTED_E@, @B_android#bluetooth#BluetoothProfile#STATE_DISCONNECTING_E@ Value is @B_android#bluetooth#BluetoothProfile#STATE_DISCONNECTED_E@, @B_android#bluetooth#BluetoothProfile#STATE_CONNECTING_E@, @B_android#bluetooth#BluetoothProfile#STATE_CONNECTED_E@, or @B_android#bluetooth#BluetoothProfile#STATE_DISCONNECTING_E@"]], "Parameters": [["@B_android#bluetooth#BluetoothDevice_E@", "BluetoothDevice: Remote bluetooth device."]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Get the current connection state of the profile Requires @B_android#Manifest#permission#BLUETOOTH_E@", "history": "Added in API level 11", "FullName": "public int getConnectionState (BluetoothDevice device)"}, "sendVendorSpecificResultCode(android.bluetooth.BluetoothDevice,java.lang.String,java.lang.String)": {"Returns": [["boolean", "false if there is no headset connected, or if the command is not an allowed vendor-specific unsolicited result code, or on error. true otherwise."]], "Parameters": [["@B_android#bluetooth#BluetoothDevice_E@", "BluetoothDevice: Bluetooth headset."], ["@B_java#lang#String_E@", "String: A vendor-specific command."], ["@B_java#lang#String_E@", "String: The argument that will be attached to the command."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if command is null."]], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Sends a vendor-specific unsolicited result code to the headset. The actual string to be sent is command + \": \" + arg. For example, if command is @B_android#bluetooth#BluetoothHeadset#VENDOR_RESULT_CODE_COMMAND_ANDROID_E@ and arg is \"0\", the string \"+ANDROID: 0\" will be sent. Currently only @B_android#bluetooth#BluetoothHeadset#VENDOR_RESULT_CODE_COMMAND_ANDROID_E@ is allowed as command. Requires @B_android#Manifest#permission#BLUETOOTH_E@ permission.", "history": "Added in API level 19", "FullName": "public boolean sendVendorSpecificResultCode (BluetoothDevice device, String command, String arg)"}}, "Inheritance": [], "ClassName": "android.bluetooth.BluetoothHeadset", "ClassDesc": "Public API for controlling the Bluetooth Headset Service. This includes both Bluetooth Headset and Handsfree (v1.5) profiles. BluetoothHeadset is a proxy object for controlling the Bluetooth Headset Service via IPC. Use @B_android#bluetooth#BluetoothAdapter#getProfileProxy_E@ to get the BluetoothHeadset proxy object. Use @B_android#bluetooth#BluetoothAdapter#closeProfileProxy_E@ to close the service connection. Android only supports one connected Bluetooth Headset at a time. Each method is protected with its appropriate permission."}