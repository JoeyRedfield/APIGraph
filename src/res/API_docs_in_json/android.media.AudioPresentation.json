{"Functions": {"getProgramId()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns program ID used by the framework to select an audio presentation rendered by a decoder. Program ID can be used to further uniquely identify the presentation to a decoder.", "history": "Added in API level 29", "FullName": "public int getProgramId ()"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 28", "FullName": "public String toString ()"}, "hasAudioDescription()": {"Returns": [["boolean", "true if audio description is available."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether an audio description for the visually impaired is available.", "history": "Added in API level 28", "FullName": "public boolean hasAudioDescription ()"}, "hasSpokenSubtitles()": {"Returns": [["boolean", "true if spoken subtitles are available."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether spoken subtitles for the visually impaired are available.", "history": "Added in API level 28", "FullName": "public boolean hasSpokenSubtitles ()"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if this object is the same as the obj argument; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the reference object with which to compare."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether some other object is \"equal to\" this one. The equals method implements an equivalence relation on non-null object references: It is x, x.equals(x) should return true. It is x and y, x.equals(y) should return true if and only if y.equals(x) returns true. It is x, y, and z, if x.equals(y) returns true and y.equals(z) returns true, then x.equals(z) should return true. It is x and y, multiple invocations of x.equals(y) consistently return true or consistently return false, provided no information used in equals comparisons on the objects is modified. For any non-null reference value x, x.equals(null) should return false. The equals method for class Object implements the most discriminating possible equivalence relation on objects; that is, for any non-null reference values x and y, this method returns true if and only if x and y refer to the same object (x == y has the value true). Note that it is generally necessary to override the hashCode method whenever this method is overridden, so as to maintain the general contract for the hashCode method, which states that equal objects must have equal hash codes.", "history": "Added in API level 28", "FullName": "public boolean equals (Object o)"}, "getMasteringIndication()": {"Returns": [["int", "the mastering indication of the audio presentation. See @B_android#media#AudioPresentation#MASTERING_NOT_INDICATED_E@, @B_android#media#AudioPresentation#MASTERED_FOR_STEREO_E@, @B_android#media#AudioPresentation#MASTERED_FOR_SURROUND_E@, @B_android#media#AudioPresentation#MASTERED_FOR_3D_E@, @B_android#media#AudioPresentation#MASTERED_FOR_HEADPHONE_E@ Value is @B_android#media#AudioPresentation#MASTERING_NOT_INDICATED_E@, @B_android#media#AudioPresentation#MASTERED_FOR_STEREO_E@, @B_android#media#AudioPresentation#MASTERED_FOR_SURROUND_E@, @B_android#media#AudioPresentation#MASTERED_FOR_3D_E@, or @B_android#media#AudioPresentation#MASTERED_FOR_HEADPHONE_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 28", "FullName": "public int getMasteringIndication ()"}, "getLocale()": {"Returns": [["@B_java#util#Locale_E@", "the locale corresponding to audio presentation's ISO 639-1/639-2 language code."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 28", "FullName": "public Locale getLocale ()"}, "getPresentationId()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns presentation ID used by the framework to select an audio presentation rendered by a decoder. Presentation ID is typically sequential, but does not have to be.", "history": "Added in API level 29", "FullName": "public int getPresentationId ()"}, "getLabels()": {"Returns": [["@B_java#util#Map_E@", "a map of available text labels for this presentation. Each label is indexed by its locale corresponding to the language code as specified by ISO 639-2. Either ISO 639-2/B or ISO 639-2/T could be used."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 28", "FullName": "public Map<Locale, String> getLabels ()"}, "hasDialogueEnhancement()": {"Returns": [["boolean", "true if dialogue enhancement is available."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether dialogue enhancement is available.", "history": "Added in API level 28", "FullName": "public boolean hasDialogueEnhancement ()"}, "hashCode()": {"Returns": [["int", "a hash code value for this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code value for the object. This method is supported for the benefit of hash tables such as those provided by @B_java#util#HashMap_E@. The general contract of hashCode is: Whenever it is invoked on the same object more than once during an execution of a Java application, the hashCode method must consistently return the same integer, provided no information used in equals comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application. If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result. It is not required that if two objects are unequal according to the @B_java#lang#Object#equals_E@ method, then calling the hashCode method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables. As much as is reasonably practical, the hashCode method defined by class Object does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the Java\u2122 programming language.)", "history": "Added in API level 28", "FullName": "public int hashCode ()"}}, "Inheritance": [], "ClassName": "android.media.AudioPresentation", "ClassDesc": "The AudioPresentation class encapsulates the information that describes an audio presentation which is available in next generation audio content. Used by @B_android#media#MediaExtractor_E@ @B_android#media#MediaExtractor#getAudioPresentations_E@ and @B_android#media#AudioTrack_E@ @B_android#media#AudioTrack#setPresentation_E@ to query available presentations and to select one, respectively. A list of available audio presentations in a media source can be queried using @B_android#media#MediaExtractor#getAudioPresentations_E@. This list can be presented to a user for selection. An AudioPresentation can be passed to an offloaded audio decoder via @B_android#media#AudioTrack#setPresentation_E@ to request decoding of the selected presentation. An audio stream may contain multiple presentations that differ by language, accessibility, end point mastering and dialogue enhancement. An audio presentation may also have a set of description labels in different languages to help the user to make an informed selection. Applications that parse media streams and extract presentation information on their own can create instances of AudioPresentation by using @B_android#media#AudioPresentation#Builder_E@ class."}