{"Functions": {"startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.PeriodicAdvertisingParameters,android.bluetooth.le.AdvertiseData,int,int,android.bluetooth.le.AdvertisingSetCallback)": {"Returns": [], "Parameters": [["@B_android#bluetooth#le#AdvertisingSetParameters_E@", "AdvertisingSetParameters: advertising set parameters."], ["@B_android#bluetooth#le#AdvertiseData_E@", "AdvertiseData: Advertisement data to be broadcasted. Size must not exceed @B_android#bluetooth#BluetoothAdapter#getLeMaximumAdvertisingDataLength_E@. If the advertisement is connectable, three bytes will be added for flags."], ["@B_android#bluetooth#le#AdvertiseData_E@", "AdvertiseData: Scan response associated with the advertisement data. Size must not exceed @B_android#bluetooth#BluetoothAdapter#getLeMaximumAdvertisingDataLength_E@."], ["@B_android#bluetooth#le#PeriodicAdvertisingParameters_E@", "PeriodicAdvertisingParameters: periodic advertisng parameters. If null, periodic advertising will not be started."], ["@B_android#bluetooth#le#AdvertiseData_E@", "AdvertiseData: Periodic advertising data. Size must not exceed @B_android#bluetooth#BluetoothAdapter#getLeMaximumAdvertisingDataLength_E@."], ["int", "int: advertising duration, in 10ms unit. Valid range is from 1 (10ms) to 65535 (655,350 ms). 0 means advertising should continue until stopped."], ["int", "int: maximum number of extended advertising events the controller shall attempt to send prior to terminating the extended advertising, even if the duration has not expired. Valid range is from 1 to 255. 0 means no maximum."], ["@B_android#bluetooth#le#AdvertisingSetCallback_E@", "AdvertisingSetCallback: Callback for advertising set."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "when any of the data parameter exceed the maximum allowable size, or unsupported advertising PHY is selected, or when attempt to use Periodic Advertising feature is made when it's not supported by the controller."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new advertising set. If operation succeed, device will start advertising. This method returns immediately, the operation status is delivered through callback.onAdvertisingSetStarted().", "history": "Added in API level 26", "FullName": "public void startAdvertisingSet (AdvertisingSetParameters parameters, AdvertiseData advertiseData, AdvertiseData scanResponse, PeriodicAdvertisingParameters periodicParameters, AdvertiseData periodicData, int duration, int maxExtendedAdvertisingEvents, AdvertisingSetCallback callback)"}, "stopAdvertisingSet(android.bluetooth.le.AdvertisingSetCallback)": {"Returns": [], "Parameters": [["@B_android#bluetooth#le#AdvertisingSetCallback_E@", "AdvertisingSetCallback no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Used to dispose of a @B_android#bluetooth#le#AdvertisingSet_E@ object, obtained with @B_android#bluetooth#le#BluetoothLeAdvertiser#startAdvertisingSet_E@.", "history": "Added in API level 26", "FullName": "public void stopAdvertisingSet (AdvertisingSetCallback callback)"}, "startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.PeriodicAdvertisingParameters,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertisingSetCallback)": {"Returns": [], "Parameters": [["@B_android#bluetooth#le#AdvertisingSetParameters_E@", "AdvertisingSetParameters: advertising set parameters."], ["@B_android#bluetooth#le#AdvertiseData_E@", "AdvertiseData: Advertisement data to be broadcasted. Size must not exceed @B_android#bluetooth#BluetoothAdapter#getLeMaximumAdvertisingDataLength_E@. If the advertisement is connectable, three bytes will be added for flags."], ["@B_android#bluetooth#le#AdvertiseData_E@", "AdvertiseData: Scan response associated with the advertisement data. Size must not exceed @B_android#bluetooth#BluetoothAdapter#getLeMaximumAdvertisingDataLength_E@."], ["@B_android#bluetooth#le#PeriodicAdvertisingParameters_E@", "PeriodicAdvertisingParameters: periodic advertisng parameters. If null, periodic advertising will not be started."], ["@B_android#bluetooth#le#AdvertiseData_E@", "AdvertiseData: Periodic advertising data. Size must not exceed @B_android#bluetooth#BluetoothAdapter#getLeMaximumAdvertisingDataLength_E@."], ["@B_android#bluetooth#le#AdvertisingSetCallback_E@", "AdvertisingSetCallback: Callback for advertising set."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "when any of the data parameter exceed the maximum allowable size, or unsupported advertising PHY is selected, or when attempt to use Periodic Advertising feature is made when it's not supported by the controller."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new advertising set. If operation succeed, device will start advertising. This method returns immediately, the operation status is delivered through callback.onAdvertisingSetStarted().", "history": "Added in API level 26", "FullName": "public void startAdvertisingSet (AdvertisingSetParameters parameters, AdvertiseData advertiseData, AdvertiseData scanResponse, PeriodicAdvertisingParameters periodicParameters, AdvertiseData periodicData, AdvertisingSetCallback callback)"}, "startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)": {"Returns": [], "Parameters": [["@B_android#bluetooth#le#AdvertiseSettings_E@", "AdvertiseSettings: Settings for Bluetooth LE advertising."], ["@B_android#bluetooth#le#AdvertiseData_E@", "AdvertiseData: Advertisement data to be broadcasted."], ["@B_android#bluetooth#le#AdvertiseCallback_E@", "AdvertiseCallback: Callback for advertising status."]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_ADMIN_E@"], "Description": "Start Bluetooth LE Advertising. On success, the advertiseData will be broadcasted. Returns immediately, the operation status is delivered through callback. Requires @B_android#Manifest#permission#BLUETOOTH_ADMIN_E@ permission.", "history": "Added in API level 21", "FullName": "public void startAdvertising (AdvertiseSettings settings, AdvertiseData advertiseData, AdvertiseCallback callback)"}, "startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)": {"Returns": [], "Parameters": [["@B_android#bluetooth#le#AdvertiseSettings_E@", "AdvertiseSettings: Settings for Bluetooth LE advertising."], ["@B_android#bluetooth#le#AdvertiseData_E@", "AdvertiseData: Advertisement data to be advertised in advertisement packet."], ["@B_android#bluetooth#le#AdvertiseData_E@", "AdvertiseData: Scan response associated with the advertisement data."], ["@B_android#bluetooth#le#AdvertiseCallback_E@", "AdvertiseCallback: Callback for advertising status."]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_ADMIN_E@"], "Description": "Start Bluetooth LE Advertising. The advertiseData will be broadcasted if the operation succeeds. The scanResponse is returned when a scanning device sends an active scan request. This method returns immediately, the operation status is delivered through callback. Requires @B_android#Manifest#permission#BLUETOOTH_ADMIN_E@", "history": "Added in API level 21", "FullName": "public void startAdvertising (AdvertiseSettings settings, AdvertiseData advertiseData, AdvertiseData scanResponse, AdvertiseCallback callback)"}, "stopAdvertising(android.bluetooth.le.AdvertiseCallback)": {"Returns": [], "Parameters": [["@B_android#bluetooth#le#AdvertiseCallback_E@", "AdvertiseCallback: @B_android#bluetooth#le#AdvertiseCallback_E@ identifies the advertising instance to stop."]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_ADMIN_E@"], "Description": "Stop Bluetooth LE advertising. The callback must be the same one use in @B_android#bluetooth#le#BluetoothLeAdvertiser#startAdvertising_E@. Requires @B_android#Manifest#permission#BLUETOOTH_ADMIN_E@ permission.", "history": "Added in API level 21", "FullName": "public void stopAdvertising (AdvertiseCallback callback)"}, "startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.PeriodicAdvertisingParameters,android.bluetooth.le.AdvertiseData,int,int,android.bluetooth.le.AdvertisingSetCallback,android.os.Handler)": {"Returns": [], "Parameters": [["@B_android#bluetooth#le#AdvertisingSetParameters_E@", "AdvertisingSetParameters: Advertising set parameters."], ["@B_android#bluetooth#le#AdvertiseData_E@", "AdvertiseData: Advertisement data to be broadcasted. Size must not exceed @B_android#bluetooth#BluetoothAdapter#getLeMaximumAdvertisingDataLength_E@. If the advertisement is connectable, three bytes will be added for flags."], ["@B_android#bluetooth#le#AdvertiseData_E@", "AdvertiseData: Scan response associated with the advertisement data. Size must not exceed @B_android#bluetooth#BluetoothAdapter#getLeMaximumAdvertisingDataLength_E@"], ["@B_android#bluetooth#le#PeriodicAdvertisingParameters_E@", "PeriodicAdvertisingParameters: Periodic advertisng parameters. If null, periodic advertising will not be started."], ["@B_android#bluetooth#le#AdvertiseData_E@", "AdvertiseData: Periodic advertising data. Size must not exceed @B_android#bluetooth#BluetoothAdapter#getLeMaximumAdvertisingDataLength_E@"], ["int", "int: advertising duration, in 10ms unit. Valid range is from 1 (10ms) to 65535 (655,350 ms). 0 means advertising should continue until stopped."], ["int", "int: maximum number of extended advertising events the controller shall attempt to send prior to terminating the extended advertising, even if the duration has not expired. Valid range is from 1 to 255. 0 means no maximum."], ["@B_android#bluetooth#le#AdvertisingSetCallback_E@", "AdvertisingSetCallback: Callback for advertising set."], ["@B_android#os#Handler_E@", "Handler: Thread upon which the callbacks will be invoked."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "When any of the data parameter exceed the maximum allowable size, or unsupported advertising PHY is selected, or when attempt to use Periodic Advertising feature is made when it's not supported by the controller, or when maxExtendedAdvertisingEvents is used on a controller that doesn't support the LE Extended Advertising"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new advertising set. If operation succeed, device will start advertising. This method returns immediately, the operation status is delivered through callback.onAdvertisingSetStarted().", "history": "Added in API level 26", "FullName": "public void startAdvertisingSet (AdvertisingSetParameters parameters, AdvertiseData advertiseData, AdvertiseData scanResponse, PeriodicAdvertisingParameters periodicParameters, AdvertiseData periodicData, int duration, int maxExtendedAdvertisingEvents, AdvertisingSetCallback callback, Handler handler)"}, "startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.PeriodicAdvertisingParameters,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertisingSetCallback,android.os.Handler)": {"Returns": [], "Parameters": [["@B_android#bluetooth#le#AdvertisingSetParameters_E@", "AdvertisingSetParameters: advertising set parameters."], ["@B_android#bluetooth#le#AdvertiseData_E@", "AdvertiseData: Advertisement data to be broadcasted. Size must not exceed @B_android#bluetooth#BluetoothAdapter#getLeMaximumAdvertisingDataLength_E@. If the advertisement is connectable, three bytes will be added for flags."], ["@B_android#bluetooth#le#AdvertiseData_E@", "AdvertiseData: Scan response associated with the advertisement data. Size must not exceed @B_android#bluetooth#BluetoothAdapter#getLeMaximumAdvertisingDataLength_E@."], ["@B_android#bluetooth#le#PeriodicAdvertisingParameters_E@", "PeriodicAdvertisingParameters: periodic advertisng parameters. If null, periodic advertising will not be started."], ["@B_android#bluetooth#le#AdvertiseData_E@", "AdvertiseData: Periodic advertising data. Size must not exceed @B_android#bluetooth#BluetoothAdapter#getLeMaximumAdvertisingDataLength_E@."], ["@B_android#bluetooth#le#AdvertisingSetCallback_E@", "AdvertisingSetCallback: Callback for advertising set."], ["@B_android#os#Handler_E@", "Handler: thread upon which the callbacks will be invoked."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "when any of the data parameter exceed the maximum allowable size, or unsupported advertising PHY is selected, or when attempt to use Periodic Advertising feature is made when it's not supported by the controller."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new advertising set. If operation succeed, device will start advertising. This method returns immediately, the operation status is delivered through callback.onAdvertisingSetStarted().", "history": "Added in API level 26", "FullName": "public void startAdvertisingSet (AdvertisingSetParameters parameters, AdvertiseData advertiseData, AdvertiseData scanResponse, PeriodicAdvertisingParameters periodicParameters, AdvertiseData periodicData, AdvertisingSetCallback callback, Handler handler)"}}, "Inheritance": [], "ClassName": "android.bluetooth.le.BluetoothLeAdvertiser", "ClassDesc": "This class provides a way to perform Bluetooth LE advertise operations, such as starting and stopping advertising. An advertiser can broadcast up to 31 bytes of advertisement data represented by @B_android#bluetooth#le#AdvertiseData_E@. To get an instance of @B_android#bluetooth#le#BluetoothLeAdvertiser_E@, call the @B_android#bluetooth#BluetoothAdapter#getBluetoothLeAdvertiser_E@ method. @B_android#Manifest#permission#BLUETOOTH_ADMIN_E@ permission."}