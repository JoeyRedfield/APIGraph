{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 11", "FullName": "public String toString ()"}, "getMimeType(int)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return one of the possible clip MIME types.", "history": "Added in API level 11", "FullName": "public String getMimeType (int index)"}, "ClipDescription(java.lang.CharSequence,java.lang.String[])": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: Label to show to the user describing this clip."], ["@B_java#lang#String_E@", "String: An array of MIME types this data is available as."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new clip.", "history": "Added in API level 11", "FullName": "public ClipDescription (CharSequence label, String[] mimeTypes)"}, "filterMimeTypes(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "Returns an array of all matching MIME types. If there are no matching MIME types, null is returned."]], "Parameters": [["@B_java#lang#String_E@", "String: The desired MIME type. May be a pattern."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Filter the clip description MIME types by the given MIME type. Returns all MIME types in the clip that match the given MIME type.", "history": "Added in API level 11", "FullName": "public String[] filterMimeTypes (String mimeType)"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 11", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "ClipDescription(android.content.ClipDescription)": {"Returns": [], "Parameters": [["@B_android#content#ClipDescription_E@", "ClipDescription no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a copy of a ClipDescription.", "history": "Added in API level 11", "FullName": "public ClipDescription (ClipDescription o)"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 11", "FullName": "public int describeContents ()"}, "getLabel()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the label for this clip.", "history": "Added in API level 11", "FullName": "public CharSequence getLabel ()"}, "getExtras()": {"Returns": [["@B_android#os#PersistableBundle_E@", "the bundle containing extended data previously set with @B_android#content#ClipDescription#setExtras_E@, or null if no extras have been set."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#content#ClipDescription#setExtras_E@"], "Permissions": [], "Description": "Retrieve extended data from the clip description.", "history": "Added in API level 24", "FullName": "public PersistableBundle getExtras ()"}, "getTimestamp()": {"Returns": [["long", "timestamp at which the associated @B_android#content#ClipData_E@ is copied to global clipboard or 0 if it is not copied to clipboard."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the timestamp at which the associated @B_android#content#ClipData_E@ is copied to global clipboard in the @B_java#lang#System#currentTimeMillis_E@ time base.", "history": "Added in API level 26", "FullName": "public long getTimestamp ()"}, "hasMimeType(java.lang.String)": {"Returns": [["boolean", "Returns true if one of the MIME types in the clip description matches the desired MIME type, else false."]], "Parameters": [["@B_java#lang#String_E@", "String: The desired MIME type. May be a pattern."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check whether the clip description contains the given MIME type.", "history": "Added in API level 11", "FullName": "public boolean hasMimeType (String mimeType)"}, "compareMimeTypes(java.lang.String,java.lang.String)": {"Returns": [["boolean", "Returns true if the two MIME types match."]], "Parameters": [["@B_java#lang#String_E@", "String: A fully-specified MIME type."], ["@B_java#lang#String_E@", "String: A desired MIME type that may be a pattern such as */*."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Helper to compare two MIME types, where one may be a pattern.", "history": "Added in API level 11", "FullName": "public static boolean compareMimeTypes (String concreteType, String desiredType)"}, "setExtras(android.os.PersistableBundle)": {"Returns": [], "Parameters": [["@B_android#os#PersistableBundle_E@", "PersistableBundle no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#content#ClipDescription#getExtras_E@"], "Permissions": [], "Description": "Add extended data to the clip description.", "history": "Added in API level 24", "FullName": "public void setExtras (PersistableBundle extras)"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 11", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getMimeTypeCount()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the number of MIME types the clip is available in.", "history": "Added in API level 11", "FullName": "public int getMimeTypeCount ()"}}, "Inheritance": [], "ClassName": "android.content.ClipDescription", "ClassDesc": "Meta-data describing the contents of a @B_android#content#ClipData_E@. Provides enough information to know if you can handle the ClipData, but not the data itself."}