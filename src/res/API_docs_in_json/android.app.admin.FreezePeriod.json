{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 28", "FullName": "public String toString ()"}, "FreezePeriod(java.time.MonthDay,java.time.MonthDay)": {"Returns": [], "Parameters": [["@B_java#time#MonthDay_E@", "MonthDay no parameter comment"], ["@B_java#time#MonthDay_E@", "MonthDay no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a freeze period by its start and end dates. If the end date is earlier than the start date, the freeze period is considered wrapping year-end.", "history": "Added in API level 28", "FullName": "public FreezePeriod (MonthDay start, MonthDay end)"}, "getEnd()": {"Returns": [["@B_java#time#MonthDay_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the end date (inclusive) of this freeze period.", "history": "Added in API level 28", "FullName": "public MonthDay getEnd ()"}, "getStart()": {"Returns": [["@B_java#time#MonthDay_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the start date (inclusive) of this freeze period.", "history": "Added in API level 28", "FullName": "public MonthDay getStart ()"}}, "Inheritance": [], "ClassName": "android.app.admin.FreezePeriod", "ClassDesc": "A class that represents one freeze period which repeats annually. A freeze period has two @B_java#time#package-summary_E@ values that define the start and end dates of the period, both inclusive. If the end date is earlier than the start date, the period is considered wrapped around the year-end. As far as freeze period is concerned, leap year is disregarded and February 29th should be treated as if it were February 28th: so a freeze starting or ending on February 28th is identical to a freeze starting or ending on February 29th. When calulating the length of a freeze or the distance bewteen two freee periods, February 29th is also ignored."}