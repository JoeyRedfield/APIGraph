{"Functions": {"getAttributeTypeInfo(int)": {"Returns": [["@B_org#w3c#dom#TypeInfo_E@", "An immutable @B_org#w3c#dom#TypeInfo_E@ object that represents the type of the specified attribute. Note that the caller can keep references to the obtained @B_org#w3c#dom#TypeInfo_E@ longer than the callback scope. Otherwise, this method returns null if the validator is unable to determine the type."]], "Parameters": [["int", "int: The index of the attribute. The same index for the @B_org#xml#sax#Attributes_E@ object passed to the startElement callback."]], "Throws": [["@B_java#lang#IndexOutOfBoundsException_E@", "If the index is invalid."], ["@B_java#lang#IllegalStateException_E@", "If this method is called from other @B_org#xml#sax#ContentHandler_E@ methods."]], "SeeAlso": [], "Permissions": [], "Description": "Returns the immutable @B_org#w3c#dom#TypeInfo_E@ object for the specified attribute of the current element. The method may only be called by the startElement event of the @B_org#xml#sax#ContentHandler_E@ that the application sets to the @B_javax#xml#validation#ValidatorHandler_E@.", "history": "Added in API level 8", "FullName": "public abstract TypeInfo getAttributeTypeInfo (int index)"}, "isSpecified(int)": {"Returns": [["boolean", "true if the attribute was present before the validator processes input. false if the attribute was added by the validator."]], "Parameters": [["int", "int: The index of the attribute. The same index for the @B_org#xml#sax#Attributes_E@ object passed to the startElement callback."]], "Throws": [["@B_java#lang#IndexOutOfBoundsException_E@", "If the index is invalid."], ["@B_java#lang#IllegalStateException_E@", "If this method is called from other @B_org#xml#sax#ContentHandler_E@ methods."]], "SeeAlso": [], "Permissions": [], "Description": "Returns This method provides information necessary for a @B_javax#xml#parsers#DocumentBuilder_E@ to determine what the DOM tree should return from the @B_org#w3c#dom#Attr#getSpecified_E@ method. The method may only be called by the startElement event of the @B_org#xml#sax#ContentHandler_E@ that the application sets to the @B_javax#xml#validation#ValidatorHandler_E@. A general guideline for validators is to return true if the attribute was originally present in the pipeline, and false if it was added by the validator.", "history": "Added in API level 8", "FullName": "public abstract boolean isSpecified (int index)"}, "getElementTypeInfo()": {"Returns": [["@B_org#w3c#dom#TypeInfo_E@", "An immutable @B_org#w3c#dom#TypeInfo_E@ object that represents the type of the current element. Note that the caller can keep references to the obtained @B_org#w3c#dom#TypeInfo_E@ longer than the callback scope. Otherwise, this method returns null if the validator is unable to determine the type of the current element for some reason (for example, if the validator is recovering from an earlier error.)"]], "Parameters": [], "Throws": [["@B_java#lang#IllegalStateException_E@", "If this method is called from other @B_org#xml#sax#ContentHandler_E@ methods."]], "SeeAlso": [], "Permissions": [], "Description": "Returns the immutable @B_org#w3c#dom#TypeInfo_E@ object for the current element. The method may only be called by the startElement and endElement event of the @B_org#xml#sax#ContentHandler_E@ that the application sets to the @B_javax#xml#validation#ValidatorHandler_E@.", "history": "Added in API level 8", "FullName": "public abstract TypeInfo getElementTypeInfo ()"}, "TypeInfoProvider()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor for the derived class. The constructor does nothing.", "history": "Added in API level 8", "FullName": "protected TypeInfoProvider ()"}, "isIdAttribute(int)": {"Returns": [["boolean", "true if the type of the specified attribute is ID."]], "Parameters": [["int", "int: The index of the attribute. The same index for the @B_org#xml#sax#Attributes_E@ object passed to the startElement callback."]], "Throws": [["@B_java#lang#IndexOutOfBoundsException_E@", "If the index is invalid."], ["@B_java#lang#IllegalStateException_E@", "If this method is called from other @B_org#xml#sax#ContentHandler_E@ methods."]], "SeeAlso": [], "Permissions": [], "Description": "Returns Exactly how an attribute is \"determined to be ID\" is up to the schema language. In case of W3C XML Schema, this means that the actual type of the attribute is the built-in ID type or its derived type. A @B_javax#xml#parsers#DocumentBuilder_E@ uses this information to properly implement @B_org#w3c#dom#Attr#isId_E@. The method may only be called by the startElement event of the @B_org#xml#sax#ContentHandler_E@ that the application sets to the @B_javax#xml#validation#ValidatorHandler_E@.", "history": "Added in API level 8", "FullName": "public abstract boolean isIdAttribute (int index)"}}, "Inheritance": [], "ClassName": "javax.xml.validation.TypeInfoProvider", "ClassDesc": "This class provides access to the type information determined by @B_javax#xml#validation#ValidatorHandler_E@. Some schema languages, such as W3C XML Schema, encourages a validator to report the \"type\" it assigns to each attribute/element. Those applications who wish to access this type information can invoke methods defined on this \"interface\" to access such type information. Implementation of this \"interface\" can be obtained through the @B_javax#xml#validation#ValidatorHandler#getTypeInfoProvider_E@ method."}