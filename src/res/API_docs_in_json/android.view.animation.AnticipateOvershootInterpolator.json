{"Functions": {"getInterpolation(float)": {"Returns": [["float", "no returns description in source"]], "Parameters": [["float", "float no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 4", "FullName": "public float getInterpolation (float t)"}, "AnticipateOvershootInterpolator()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 4", "FullName": "public AnticipateOvershootInterpolator ()"}, "AnticipateOvershootInterpolator(android.content.Context,android.util.AttributeSet)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"], ["@B_android#util#AttributeSet_E@", "AttributeSet no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 4", "FullName": "public AnticipateOvershootInterpolator (Context context, AttributeSet attrs)"}, "AnticipateOvershootInterpolator(float, float)": {"Returns": [], "Parameters": [["float", "float: Amount of anticipation/overshoot. When tension equals 0.0f, there is no anticipation/overshoot and the interpolator becomes a simple acceleration/deceleration interpolator."], ["float", "float: Amount by which to multiply the tension. For instance, to get the same overshoot as an OvershootInterpolator with a tension of 2.0f, you would use an extraTension of 1.5f."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 4", "FullName": "public AnticipateOvershootInterpolator (float tension, float extraTension)"}, "AnticipateOvershootInterpolator(float,float)": {"Returns": [], "Parameters": [["float", "float: Amount of anticipation/overshoot. When tension equals 0.0f, there is no anticipation/overshoot and the interpolator becomes a simple acceleration/deceleration interpolator."], ["float", "float: Amount by which to multiply the tension. For instance, to get the same overshoot as an OvershootInterpolator with a tension of 2.0f, you would use an extraTension of 1.5f."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 4", "FullName": "public AnticipateOvershootInterpolator (float tension, float extraTension)"}, "AnticipateOvershootInterpolator(float)": {"Returns": [], "Parameters": [["float", "float: Amount of anticipation/overshoot. When tension equals 0.0f, there is no anticipation/overshoot and the interpolator becomes a simple acceleration/deceleration interpolator."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 4", "FullName": "public AnticipateOvershootInterpolator (float tension)"}}, "Inheritance": ["@B_android#view#animation#BaseInterpolator_E@"], "ClassName": "android.view.animation.AnticipateOvershootInterpolator", "ClassDesc": "An interpolator where the change starts backward then flings forward and overshoots the target value and finally goes back to the final value."}