{"Functions": {"getKeyValidityStart()": {"Returns": [["@B_java#util#Date_E@", "instant or null if not restricted."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the time instant before which the key is not yet valid.", "history": "Added in API level 23", "FullName": "public Date getKeyValidityStart ()"}, "getDigests()": {"Returns": [["@B_java#lang#String_E@", "This value will never be null. Value is @B_android#security#keystore#KeyProperties#DIGEST_NONE_E@, @B_android#security#keystore#KeyProperties#DIGEST_MD5_E@, @B_android#security#keystore#KeyProperties#DIGEST_SHA1_E@, @B_android#security#keystore#KeyProperties#DIGEST_SHA224_E@, @B_android#security#keystore#KeyProperties#DIGEST_SHA256_E@, @B_android#security#keystore#KeyProperties#DIGEST_SHA384_E@, or @B_android#security#keystore#KeyProperties#DIGEST_SHA512_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the set of digest algorithms (e.g., SHA-256, SHA-384) with which the key can be used. See @B_android#security#keystore#KeyProperties_E@.DIGEST constants.", "history": "Added in API level 23", "FullName": "public String[] getDigests ()"}, "getEncryptionPaddings()": {"Returns": [["@B_java#lang#String_E@", "This value will never be null. Value is @B_android#security#keystore#KeyProperties#ENCRYPTION_PADDING_NONE_E@, @B_android#security#keystore#KeyProperties#ENCRYPTION_PADDING_PKCS7_E@, @B_android#security#keystore#KeyProperties#ENCRYPTION_PADDING_RSA_PKCS1_E@, or @B_android#security#keystore#KeyProperties#ENCRYPTION_PADDING_RSA_OAEP_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the set of padding schemes (e.g., PKCS7Padding, PKCS1Padding, NoPadding) with which the key can be used when encrypting/decrypting. Attempts to use the key with any other padding scheme will be rejected. See @B_android#security#keystore#KeyProperties_E@.ENCRYPTION_PADDING constants.", "history": "Added in API level 23", "FullName": "public String[] getEncryptionPaddings ()"}, "getBlockModes()": {"Returns": [["@B_java#lang#String_E@", "This value will never be null. Value is @B_android#security#keystore#KeyProperties#BLOCK_MODE_ECB_E@, @B_android#security#keystore#KeyProperties#BLOCK_MODE_CBC_E@, @B_android#security#keystore#KeyProperties#BLOCK_MODE_CTR_E@, or @B_android#security#keystore#KeyProperties#BLOCK_MODE_GCM_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the set of block modes (e.g., GCM, CBC) with which the key can be used when encrypting/decrypting. Attempts to use the key with any other block modes will be rejected. See @B_android#security#keystore#KeyProperties_E@.BLOCK_MODE constants.", "history": "Added in API level 23", "FullName": "public String[] getBlockModes ()"}, "isInsideSecureHardware()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the key resides inside secure hardware (e.g., Trusted Execution Environment (TEE) or Secure Element (SE)). Key material of such keys is available in plaintext only inside the secure hardware and is not exposed outside of it.", "history": "Added in API level 23", "FullName": "public boolean isInsideSecureHardware ()"}, "isUserAuthenticationValidWhileOnBody()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this key will become unusable when the device is removed from the user's body. This is possible only for keys with a specified validity duration, and only on devices with an on-body sensor. Always returns false on devices that lack an on-body sensor.", "history": "Added in API level 24", "FullName": "public boolean isUserAuthenticationValidWhileOnBody ()"}, "getUserAuthenticationValidityDurationSeconds()": {"Returns": [["int", "duration in seconds or -1 if authentication is required for every use of the key."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#security#keystore#KeyInfo#isUserAuthenticationRequired_E@"], "Permissions": [], "Description": "Gets the duration of time (seconds) for which this key is authorized to be used after the user is successfully authenticated. This has effect only if user authentication is required (see @B_android#security#keystore#KeyInfo#isUserAuthenticationRequired_E@). This authorization applies only to secret key and private key operations. Public key operations are not restricted.", "history": "Added in API level 23", "FullName": "public int getUserAuthenticationValidityDurationSeconds ()"}, "isUserAuthenticationRequired()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#security#keystore#KeyInfo#getUserAuthenticationValidityDurationSeconds_E@", "@B_android#security#keystore#KeyGenParameterSpec#Builder#setUserAuthenticationRequired_E@", "@B_android#security#keystore#KeyProtection#Builder#setUserAuthenticationRequired_E@"], "Permissions": [], "Description": "Returns true if the key is authorized to be used only if the user has been authenticated. This authorization applies only to secret key and private key operations. Public key operations are not restricted.", "history": "Added in API level 23", "FullName": "public boolean isUserAuthenticationRequired ()"}, "getKeystoreAlias()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the entry alias under which the key is stored in the AndroidKeyStore.", "history": "Added in API level 23", "FullName": "public String getKeystoreAlias ()"}, "getKeyValidityForOriginationEnd()": {"Returns": [["@B_java#util#Date_E@", "instant or null if not restricted."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the time instant after which the key is no long valid for encryption and signing.", "history": "Added in API level 23", "FullName": "public Date getKeyValidityForOriginationEnd ()"}, "isInvalidatedByBiometricEnrollment()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the key will be invalidated by enrollment of a new fingerprint or removal of all fingerprints.", "history": "Added in API level 24", "FullName": "public boolean isInvalidatedByBiometricEnrollment ()"}, "getOrigin()": {"Returns": [["int", "Value is @B_android#security#keystore#KeyProperties#ORIGIN_GENERATED_E@, @B_android#security#keystore#KeyProperties#ORIGIN_IMPORTED_E@, or @B_android#security#keystore#KeyProperties#ORIGIN_UNKNOWN_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the origin of the key. See @B_android#security#keystore#KeyProperties_E@.ORIGIN constants.", "history": "Added in API level 23", "FullName": "public int getOrigin ()"}, "getKeySize()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the size of the key in bits.", "history": "Added in API level 23", "FullName": "public int getKeySize ()"}, "getPurposes()": {"Returns": [["int", "Value is either 0 or a combination of @B_android#security#keystore#KeyProperties#PURPOSE_ENCRYPT_E@, @B_android#security#keystore#KeyProperties#PURPOSE_DECRYPT_E@, @B_android#security#keystore#KeyProperties#PURPOSE_SIGN_E@, @B_android#security#keystore#KeyProperties#PURPOSE_VERIFY_E@, and @B_android#security#keystore#KeyProperties#PURPOSE_WRAP_KEY_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the set of purposes (e.g., encrypt, decrypt, sign) for which the key can be used. Attempts to use the key for any other purpose will be rejected. See @B_android#security#keystore#KeyProperties_E@.PURPOSE flags.", "history": "Added in API level 23", "FullName": "public int getPurposes ()"}, "getKeyValidityForConsumptionEnd()": {"Returns": [["@B_java#util#Date_E@", "instant or null if not restricted."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the time instant after which the key is no long valid for decryption and verification.", "history": "Added in API level 23", "FullName": "public Date getKeyValidityForConsumptionEnd ()"}, "isUserAuthenticationRequirementEnforcedBySecureHardware()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#security#keystore#KeyInfo#isUserAuthenticationRequired_E@"], "Permissions": [], "Description": "Returns true if the requirement that this key can only be used if the user has been authenticated is enforced by secure hardware (e.g., Trusted Execution Environment (TEE) or Secure Element (SE)).", "history": "Added in API level 23", "FullName": "public boolean isUserAuthenticationRequirementEnforcedBySecureHardware ()"}, "isTrustedUserPresenceRequired()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the key can only be only be used if a test for user presence has succeeded since Signature.initSign() has been called.", "history": "Added in API level 28", "FullName": "public boolean isTrustedUserPresenceRequired ()"}, "isUserConfirmationRequired()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#security#keystore#KeyGenParameterSpec#Builder#setUserConfirmationRequired_E@", "@B_android#security#keystore#KeyProtection#Builder#setUserConfirmationRequired_E@"], "Permissions": [], "Description": "Returns true if the key is authorized to be used only for messages confirmed by the user. Confirmation is separate from user authentication (see @B_android#security#keystore#KeyInfo#isUserAuthenticationRequired_E@). Keys can be created that require confirmation but not user authentication, or user authentication but not confirmation, or both. Confirmation verifies that some user with physical possession of the device has approved a displayed message. User authentication verifies that the correct user is present and has authenticated. This authorization applies only to secret key and private key operations. Public key operations are not restricted.", "history": "Added in API level 28", "FullName": "public boolean isUserConfirmationRequired ()"}, "getSignaturePaddings()": {"Returns": [["@B_java#lang#String_E@", "This value will never be null. Value is @B_android#security#keystore#KeyProperties#SIGNATURE_PADDING_RSA_PKCS1_E@, or @B_android#security#keystore#KeyProperties#SIGNATURE_PADDING_RSA_PSS_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the set of padding schemes (e.g., PSS, PKCS#1) with which the key can be used when signing/verifying. Attempts to use the key with any other padding scheme will be rejected. See @B_android#security#keystore#KeyProperties_E@.SIGNATURE_PADDING constants.", "history": "Added in API level 23", "FullName": "public String[] getSignaturePaddings ()"}}, "Inheritance": [], "ClassName": "android.security.keystore.KeyInfo", "ClassDesc": "Information about a key from the GCM mode, or signing only), whether the key should be encrypted at rest, the key's and validity start and end dates. Instances of this class are immutable. KeyInfo describing the provided Android Keystore @B_javax#crypto#SecretKey_E@. KeyInfo describing the provided Android KeyStore @B_java#security#PrivateKey_E@."}