{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "string representation of @B_android#hardware#camera2#params#InputConfiguration_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return this @B_android#hardware#camera2#params#InputConfiguration_E@ as a string representation. \"InputConfiguration(w:%d, h:%d, format:%d)\", where %d represents the width, height, and format, respectively.", "history": "Added in API level 23", "FullName": "public String toString ()"}, "getHeight()": {"Returns": [["int", "height of this input configuration."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the height of this input configration.", "history": "Added in API level 23", "FullName": "public int getHeight ()"}, "InputConfiguration(int,int,int)": {"Returns": [], "Parameters": [["int", "int: Width of the input buffers."], ["int", "int: Height of the input buffers."], ["int", "int: Format of the input buffers. One of ImageFormat or PixelFormat constants."]], "Throws": [], "SeeAlso": ["@B_android#graphics#ImageFormat_E@", "@B_android#graphics#PixelFormat_E@", "@B_android#hardware#camera2#CameraCharacteristics_E@"], "Permissions": [], "Description": "Create an input configration with the width, height, and user-defined format. Images of an user-defined format are accessible by applications. Use @B_android#hardware#camera2#CameraCharacteristics#SCALER_STREAM_CONFIGURATION_MAP_E@ to query supported input formats", "history": "Added in API level 23", "FullName": "public InputConfiguration (int width, int height, int format)"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if the objects were equal, false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the object to compare this instance with."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check if this InputConfiguration is equal to another InputConfiguration. Two input configurations are equal if and only if they have the same widths, heights, and formats.", "history": "Added in API level 23", "FullName": "public boolean equals (Object obj)"}, "getWidth()": {"Returns": [["int", "width of this input configuration."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the width of this input configration.", "history": "Added in API level 23", "FullName": "public int getWidth ()"}, "InputConfiguration(int, int, int)": {"Returns": [], "Parameters": [["int", "int: Width of the input buffers."], ["int", "int: Height of the input buffers."], ["int", "int: Format of the input buffers. One of ImageFormat or PixelFormat constants."]], "Throws": [], "SeeAlso": ["@B_android#graphics#ImageFormat_E@", "@B_android#graphics#PixelFormat_E@", "@B_android#hardware#camera2#CameraCharacteristics_E@"], "Permissions": [], "Description": "Create an input configration with the width, height, and user-defined format. Images of an user-defined format are accessible by applications. Use @B_android#hardware#camera2#CameraCharacteristics#SCALER_STREAM_CONFIGURATION_MAP_E@ to query supported input formats", "history": "added in API level 23", "FullName": "public InputConfiguration (int width, int height, int format)"}, "getFormat()": {"Returns": [["int", "format of this input configuration."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the format of this input configration.", "history": "Added in API level 23", "FullName": "public int getFormat ()"}, "hashCode()": {"Returns": [["int", "a hash code value for this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code value for the object. This method is supported for the benefit of hash tables such as those provided by @B_java#util#HashMap_E@. The general contract of hashCode is: Whenever it is invoked on the same object more than once during an execution of a Java application, the hashCode method must consistently return the same integer, provided no information used in equals comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application. If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result. It is not required that if two objects are unequal according to the @B_java#lang#Object#equals_E@ method, then calling the hashCode method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables. As much as is reasonably practical, the hashCode method defined by class Object does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the Java\u2122 programming language.)", "history": "Added in API level 23", "FullName": "public int hashCode ()"}}, "Inheritance": [], "ClassName": "android.hardware.camera2.params.InputConfiguration", "ClassDesc": "Immutable class to store an input configuration that is used to create a reprocessable capture session."}