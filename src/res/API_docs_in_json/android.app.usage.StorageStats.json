{"Functions": {"writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 26", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getAppBytes()": {"Returns": [["long", "Value is a non-negative number of bytes."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the size of app. This includes APK files, optimized compiler output, and unpacked native libraries. If the primary external/shared storage is hosted on this storage device, then this includes files stored under @B_android#content#Context#getObbDir_E@. Code is shared between all users on a multiuser device. Value is a non-negative number of bytes.", "history": "Added in API level 26", "FullName": "public long getAppBytes ()"}, "getDataBytes()": {"Returns": [["long", "Value is a non-negative number of bytes."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the size of all data. This includes files stored under @B_android#content#Context#getDataDir_E@, @B_android#content#Context#getCacheDir_E@, @B_android#content#Context#getCodeCacheDir_E@. If the primary external/shared storage is hosted on this storage device, then this includes files stored under @B_android#content#Context#getExternalFilesDir_E@, @B_android#content#Context#getExternalCacheDir_E@, and @B_android#content#Context#getExternalMediaDirs_E@. Data is isolated for each user on a multiuser device. Value is a non-negative number of bytes.", "history": "Added in API level 26", "FullName": "public long getDataBytes ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 26", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getCacheBytes()": {"Returns": [["long", "Value is a non-negative number of bytes."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the size of all cached data. This includes files stored under @B_android#content#Context#getCacheDir_E@ and @B_android#content#Context#getCodeCacheDir_E@. If the primary external/shared storage is hosted on this storage device, then this includes files stored under @B_android#content#Context#getExternalCacheDir_E@. Cached data is isolated for each user on a multiuser device. Value is a non-negative number of bytes.", "history": "Added in API level 26", "FullName": "public long getCacheBytes ()"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 26", "FullName": "public int describeContents ()"}}, "Inheritance": [], "ClassName": "android.app.usage.StorageStats", "ClassDesc": "Storage statistics for a UID, package, or @B_android#os#UserHandle_E@ on a single storage volume."}