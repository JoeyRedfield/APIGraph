{"Functions": {"transform(float[])": {"Returns": [["float[]", "The v array passed as a parameter, containing the specified color transformed from the source space to the destination space"]], "Parameters": [["float[]", "float: A non-null array of 3 floats containing the value to transform and that will hold the result of the transform This value must never be null."]], "Throws": [], "SeeAlso": ["@B_android#graphics#ColorSpace#Connector#transform_E@"], "Permissions": [], "Description": "Transforms the specified color from the source color space to a color in the destination color space.", "history": "Added in API level 26", "FullName": "public float[] transform (float[] v)"}, "getDestination()": {"Returns": [["@B_android#graphics#ColorSpace_E@", "A non-null instance of @B_android#graphics#ColorSpace_E@"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#graphics#ColorSpace#Connector#getSource_E@"], "Permissions": [], "Description": "Returns the destination color space this connector will convert to.", "history": "Added in API level 26", "FullName": "public ColorSpace getDestination ()"}, "transform(float,float,float)": {"Returns": [["float[]", "A new array of 3 floats containing the specified color transformed from the source space to the destination space This value will never be null."]], "Parameters": [["float", "float: The red component of the color to transform"], ["float", "float: The green component of the color to transform"], ["float", "float: The blue component of the color to transform"]], "Throws": [], "SeeAlso": ["@B_android#graphics#ColorSpace#Connector#transform_E@"], "Permissions": [], "Description": "Transforms the specified color from the source color space to a color in the destination color space. This convenience method assumes a source color model with 3 components (typically RGB). To transform from color models with more than 3 components, such as @B_android#graphics#ColorSpace#Model#CMYK_E@, use @B_android#graphics#ColorSpace#Connector#transform_E@ instead.", "history": "Added in API level 26", "FullName": "public float[] transform (float r, float g, float b)"}, "transform(float, float, float)": {"Returns": [["float[]", "A new array of 3 floats containing the specified color transformed from the source space to the destination spaceThis value will never be null."]], "Parameters": [["float", "float: The red component of the color to transform"], ["float", "float: The green component of the color to transform"], ["float", "float: The blue component of the color to transform"]], "Throws": [], "SeeAlso": ["@B_android#graphics#ColorSpace#Connector#transform_E@"], "Permissions": [], "Description": "Transforms the specified color from the source color space to a color in the destination color space. This convenience method assumes a source color model with 3 components (typically RGB). To transform from color models with more than 3 components, such as @B_android#graphics#ColorSpace#Model#CMYK_E@, use @B_android#graphics#ColorSpace#Connector#transform_E@ instead.", "history": "added in API level 26", "FullName": "public float[] transform (float r, float g, float b)"}, "getRenderIntent()": {"Returns": [["@B_android#graphics#ColorSpace#RenderIntent_E@", "A non-null @B_android#graphics#ColorSpace#RenderIntent_E@"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#graphics#ColorSpace#RenderIntent_E@"], "Permissions": [], "Description": "Returns the render intent this connector will use when mapping the source color space to the destination color space.", "history": "Added in API level 26", "FullName": "public ColorSpace.RenderIntent getRenderIntent ()"}, "getSource()": {"Returns": [["@B_android#graphics#ColorSpace_E@", "A non-null instance of @B_android#graphics#ColorSpace_E@"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#graphics#ColorSpace#Connector#getDestination_E@"], "Permissions": [], "Description": "Returns the source color space this connector will convert from.", "history": "Added in API level 26", "FullName": "public ColorSpace getSource ()"}}, "Inheritance": [], "ClassName": "android.graphics.ColorSpace.Connector", "ClassDesc": "A connector transforms colors from a source color space to a destination color space. A source color space is connected to a destination color space using the color transform \\(C\\) computed from their respective transforms noted \\(T_{src}\\) and \\(T_{dst}\\) in the following equation: $$C = T^{-1}_{dst} . T_{src}$$ The transform \\(C\\) shown above is only valid when the source and destination color spaces have the same profile connection space (PCS). We know that instances of @B_android#graphics#ColorSpace_E@ always use CIE XYZ as their PCS but their white points might differ. When they do, we must perform a chromatic adaptation of the color spaces' transforms. To do so, we use the von Kries method described in the documentation of @B_android#graphics#ColorSpace#Adaptation_E@, using the CIE standard illuminant @B_android#graphics#ColorSpace#ILLUMINANT_D50_E@ as the target white point. Example of conversion from @B_android#graphics#ColorSpace#Named#SRGB_E@ to @B_android#graphics#ColorSpace#Named#DCI_P3_E@:"}