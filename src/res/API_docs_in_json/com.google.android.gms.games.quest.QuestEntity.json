{"Functions": {"getName()": {"Returns": [["", "The quest name."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the name of this quest.", "history": "", "FullName": "public String getName ()"}, "getStartTimestamp()": {"Returns": [["", "Timestamp at which this quest will begin."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the timestamp (in milliseconds since epoch) at which this quest will be available for players to accept. If you are looking for the time that a quest was accepted by the player, see @B_com#google#android#gms#games#quest#Quest#getAcceptedTimestamp_E@", "history": "", "FullName": "public long getStartTimestamp ()"}, "getGame()": {"Returns": [["", "The game associated with the quest."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the game metadata associated with this quest.", "history": "", "FullName": "public Game getGame ()"}, "getCurrentMilestone()": {"Returns": [["", "The latest milestone associated with this quest."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the latest milestone information associated with this quest.", "history": "", "FullName": "public Milestone getCurrentMilestone ()"}, "describeContents()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int describeContents ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public void writeToParcel (Parcel out, int flags)"}, "isEndingSoon()": {"Returns": [["", "Is the quest expiring soon."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether the quest will be expiring soon", "history": "", "FullName": "public boolean isEndingSoon ()"}, "equals(java.lang.Object)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public boolean equals (Object obj)"}, "getIconImageUri()": {"Returns": [["", "The image URI for the quest's icon image, or null if the quest has no icon image."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves a URI that can be used to load the quest's icon image. Returns null if the quest has no icon image. To retrieve the Image from the @B_android#net#Uri_E@, use @B_com#google#android#gms#common#images#ImageManager_E@.", "history": "", "FullName": "public Uri getIconImageUri ()"}, "getLastUpdatedTimestamp()": {"Returns": [["", "Timestamp at which this quest was last updated."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the timestamp (in milliseconds since epoch) at which this quest was last updated. If the quest has never been updated, this will return @B_com#google#android#gms#games#quest#Quest#UNSET_QUEST_TIMESTAMP_E@.", "history": "", "FullName": "public long getLastUpdatedTimestamp ()"}, "hashCode()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int hashCode ()"}, "getQuestId()": {"Returns": [["", "The quest ID."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the ID of this quest.", "history": "", "FullName": "public String getQuestId ()"}, "getState()": {"Returns": [["", "The state of this quest."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the state of the quest - one of @B_com#google#android#gms#games#quest#Quest#STATE_UPCOMING_E@, @B_com#google#android#gms#games#quest#Quest#STATE_OPEN_E@, @B_com#google#android#gms#games#quest#Quest#STATE_COMPLETED_E@, @B_com#google#android#gms#games#quest#Quest#STATE_EXPIRED_E@, @B_com#google#android#gms#games#quest#Quest#STATE_FAILED_E@, @B_com#google#android#gms#games#quest#Quest#STATE_ACCEPTED_E@.", "history": "", "FullName": "public int getState ()"}, "getName(android.database.CharArrayBuffer)": {"Returns": [], "Parameters": [["CharArrayBuffer", "The buffer to load the data into."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Loads the quest name into the given @B_android#database#CharArrayBuffer_E@.", "history": "", "FullName": "public void getName (CharArrayBuffer dataOut)"}, "getDescription()": {"Returns": [["", "The quest description."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the description for this quest.", "history": "", "FullName": "public String getDescription ()"}, "freeze()": {"Returns": [["", "A concrete implementation of the data object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Freeze a volatile representation into an immutable representation. Objects returned from this call are safe to cache. Note that the output of freeze may not be identical to the parent object, but should be equal. In other words:", "history": "", "FullName": "public Quest freeze ()"}, "getAcceptedTimestamp()": {"Returns": [["", "Timestamp at which this quest was accepted."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the timestamp (in milliseconds since epoch) at which this quest was accepted by the player. If the quest has never been accepted, this will return @B_com#google#android#gms#games#quest#Quest#UNSET_QUEST_TIMESTAMP_E@. If you are looking for the time that a quest is available to be accepted, see @B_com#google#android#gms#games#quest#Quest#getStartTimestamp_E@. This value should always be greater than @B_com#google#android#gms#games#quest#Quest#getStartTimestamp_E@ and less than @B_com#google#android#gms#games#quest#Quest#getEndTimestamp_E@", "history": "", "FullName": "public long getAcceptedTimestamp ()"}, "toString()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public String toString ()"}, "getBannerImageUri()": {"Returns": [["", "The image URI for the quest's banner image, or null if the quest has no banner image."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves a URI that can be used to load the quest's banner image. Returns null if the quest has no banner image. To retrieve the Image from the @B_android#net#Uri_E@, use @B_com#google#android#gms#common#images#ImageManager_E@.", "history": "", "FullName": "public Uri getBannerImageUri ()"}, "getDescription(android.database.CharArrayBuffer)": {"Returns": [], "Parameters": [["CharArrayBuffer", "The buffer to load the data into."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Loads the quest description into the given @B_android#database#CharArrayBuffer_E@.", "history": "", "FullName": "public void getDescription (CharArrayBuffer dataOut)"}, "isDataValid()": {"Returns": [["", "whether or not the object is valid for use."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check to see if this object is valid for use. If the object is still volatile, this method will indicate whether or not the object can be safely used. The output of a call to @B_com#google#android#gms#common#data#Freezable#freeze_E@ will always be valid.", "history": "", "FullName": "public boolean isDataValid ()"}, "getEndTimestamp()": {"Returns": [["", "Timestamp at which this quest will end."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Timestamp at which this quest will change to STATE_EXPIRED if not accepted, or change to STATE_FAILED if accepted but not completed.", "history": "", "FullName": "public long getEndTimestamp ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.games.quest.QuestEntity", "ClassDesc": "Data object representing the data for a quest. This is immutable, and therefore safe to cache or store. Note, however, that the data it represents may grow stale. This class exists solely to support parceling these objects and should not be used directly."}