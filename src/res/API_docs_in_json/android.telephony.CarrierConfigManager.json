{"Functions": {"notifyConfigChangedForSubId(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#telephony#TelephonyManager#hasCarrierPrivileges_E@"], "Permissions": [], "Description": "Calling this method triggers telephony services to fetch the current carrier configuration. Normally this does not need to be called because the platform reloads config on its own. This should be called by a carrier service app if it wants to update config at an arbitrary moment. Requires that the calling app has carrier privileges. This method returns before the reload has completed, and @B_android#service#carrier#CarrierService#onLoadConfig_E@ will be called from an arbitrary thread.", "history": "Added in API level 23", "FullName": "public void notifyConfigChangedForSubId (int subId)"}, "isConfigForIdentifiedCarrier(android.os.PersistableBundle)": {"Returns": [["boolean", "boolean true if any carrier specific configuration bundle has been applied, false otherwise or the bundle is null."]], "Parameters": [["@B_android#os#PersistableBundle_E@", "PersistableBundle: the configuration bundle to be checked."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Determines whether a configuration @B_android#os#PersistableBundle_E@ obtained from @B_android#telephony#CarrierConfigManager#getConfig_E@ or @B_android#telephony#CarrierConfigManager#getConfigForSubId_E@ corresponds to an identified carrier. When an app receives the @B_android#telephony#CarrierConfigManager#ACTION_CARRIER_CONFIG_CHANGED_E@ broadcast which informs it that the carrier configuration has changed, it is possible that another reload of the carrier configuration has begun since the intent was sent. In this case, the carrier configuration the app fetches (e.g. via @B_android#telephony#CarrierConfigManager#getConfig_E@) may not represent the configuration for the current carrier. It should be noted that it does not necessarily mean the configuration belongs to current carrier when this function return true because it may belong to another previous identified carrier. Users should always call @B_android#telephony#CarrierConfigManager#getConfig_E@ or @B_android#telephony#CarrierConfigManager#getConfigForSubId_E@ after receiving the broadcast @B_android#telephony#CarrierConfigManager#ACTION_CARRIER_CONFIG_CHANGED_E@. After using @B_android#telephony#CarrierConfigManager#getConfig_E@ or @B_android#telephony#CarrierConfigManager#getConfigForSubId_E@ an app should always use this method to confirm whether any carrier specific configuration has been applied. Especially when an app misses the broadcast @B_android#telephony#CarrierConfigManager#ACTION_CARRIER_CONFIG_CHANGED_E@ but it still needs to get the current configuration, it must use this method to verify whether the configuration is default or carrier overridden.", "history": "Added in API level 28", "FullName": "public static boolean isConfigForIdentifiedCarrier (PersistableBundle bundle)"}, "getConfigForSubId(int)": {"Returns": [["@B_android#os#PersistableBundle_E@", "A @B_android#os#PersistableBundle_E@ containing the config for the given subId, or default values for an invalid subId. This value may be null."]], "Parameters": [["int", "int: the subscription ID, normally obtained from @B_android#telephony#SubscriptionManager_E@."]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#READ_PHONE_STATE_E@"], "Description": "Gets the configuration values for a particular subscription, which is associated with a specific SIM card. If an invalid subId is used, the returned config will contain default values. After using this method to get the configuration bundle, @B_android#telephony#CarrierConfigManager#isConfigForIdentifiedCarrier_E@ should be called to confirm whether any carrier specific configuration has been applied. Requires Permission: @B_android#Manifest#permission#READ_PHONE_STATE_E@", "history": "Added in API level 23", "FullName": "public PersistableBundle getConfigForSubId (int subId)"}, "getConfig()": {"Returns": [["@B_android#os#PersistableBundle_E@", "This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#telephony#CarrierConfigManager#getConfigForSubId_E@"], "Permissions": ["@B_android#Manifest#permission#READ_PHONE_STATE_E@"], "Description": "Gets the configuration values for the default subscription. After using this method to get the configuration bundle, @B_android#telephony#CarrierConfigManager#isConfigForIdentifiedCarrier_E@ should be called to confirm whether any carrier specific configuration has been applied. Requires Permission: @B_android#Manifest#permission#READ_PHONE_STATE_E@", "history": "Added in API level 23", "FullName": "public PersistableBundle getConfig ()"}}, "Inheritance": [], "ClassName": "android.telephony.CarrierConfigManager", "ClassDesc": "Provides access to telephony configuration values that are carrier-specific."}