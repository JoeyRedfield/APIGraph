{"Functions": {"VoiceInteractor.AbortVoiceRequest(android.app.VoiceInteractor.Prompt,android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#app#VoiceInteractor#Prompt_E@", "VoiceInteractor.Prompt: Optional message to speak to the user indicating why the task could not be completed by voice or null if nothing should be spoken. This value may be null."], ["@B_android#os#Bundle_E@", "Bundle: Additional optional information or null. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new voice abort request.", "history": "Added in API level 23", "FullName": "public VoiceInteractor.AbortVoiceRequest (VoiceInteractor.Prompt prompt, Bundle extras)"}, "onAbortResult(android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#os#Bundle_E@", "Bundle no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public void onAbortResult (Bundle result)"}}, "Inheritance": ["@B_android#app#VoiceInteractor#Request_E@"], "ClassName": "android.app.VoiceInteractor.AbortVoiceRequest", "ClassDesc": "Reports that the current interaction can not be complete with voice, so the application will need to switch to a traditional input UI. Applications should only use this when they need to completely bail out of the voice interaction and switch to a traditional UI. When the response comes back, the voice system has handled the request and is ready to switch; at that point the application can start a new non-voice activity. Be sure when starting the new activity to use @B_android#content#Intent#FLAG_ACTIVITY_NEW_TASK_E@ to keep the new activity out of the current voice interaction task."}