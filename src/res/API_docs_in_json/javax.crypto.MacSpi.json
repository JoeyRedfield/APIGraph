{"Functions": {"engineGetMacLength()": {"Returns": [["int", "the MAC length in bytes."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the length of the MAC in bytes.", "history": "Added in API level 1", "FullName": "protected abstract int engineGetMacLength ()"}, "engineReset()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Resets the MAC for further use, maintaining the secret key that the MAC was initialized with.", "history": "Added in API level 1", "FullName": "protected abstract void engineReset ()"}, "engineDoFinal()": {"Returns": [["byte[]", "the MAC result."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Completes the MAC computation and resets the MAC for further use, maintaining the secret key that the MAC was initialized with.", "history": "Added in API level 1", "FullName": "protected abstract byte[] engineDoFinal ()"}, "engineUpdate(byte)": {"Returns": [], "Parameters": [["byte", "byte: the input byte to be processed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Processes the given byte.", "history": "Added in API level 1", "FullName": "protected abstract void engineUpdate (byte input)"}, "engineUpdate(byte[], int, int)": {"Returns": [], "Parameters": [["byte[]", "byte: the input buffer."], ["int", "int: the offset in input where the input starts."], ["int", "int: the number of bytes to process."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Processes the first len bytes in input, starting at offset inclusive.", "history": "added in API level 1", "FullName": "protected abstract void engineUpdate (byte[] input, int offset, int len)"}, "MacSpi()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public MacSpi ()"}, "engineUpdate(byte[],int,int)": {"Returns": [], "Parameters": [["byte[]", "byte: the input buffer."], ["int", "int: the offset in input where the input starts."], ["int", "int: the number of bytes to process."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Processes the first len bytes in input, starting at offset inclusive.", "history": "Added in API level 1", "FullName": "protected abstract void engineUpdate (byte[] input, int offset, int len)"}, "clone()": {"Returns": [["@B_java#lang#Object_E@", "a clone if the implementation is cloneable."]], "Parameters": [], "Throws": [["@B_java#lang#CloneNotSupportedException_E@", "if this is called on an implementation that does not support Cloneable."]], "SeeAlso": [], "Permissions": [], "Description": "Returns a clone if the implementation is cloneable.", "history": "Added in API level 1", "FullName": "public Object clone ()"}, "engineUpdate(java.nio.ByteBuffer)": {"Returns": [], "Parameters": [["@B_java#nio#ByteBuffer_E@", "ByteBuffer: the ByteBuffer"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Processes input.remaining() bytes in the ByteBuffer input, starting at input.position(). Upon return, the buffer's position will be equal to its limit; its limit will not have changed. Subclasses should consider overriding this method if they can process ByteBuffers more efficiently than byte arrays.", "history": "Added in API level 1", "FullName": "protected void engineUpdate (ByteBuffer input)"}, "engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)": {"Returns": [], "Parameters": [["@B_java#security#Key_E@", "Key: the (secret) key."], ["@B_java#security#spec#AlgorithmParameterSpec_E@", "AlgorithmParameterSpec: the algorithm parameters."]], "Throws": [["@B_java#security#InvalidKeyException_E@", "if the given key is inappropriate for initializing this MAC."], ["@B_java#security#InvalidAlgorithmParameterException_E@", "if the given algorithm parameters are inappropriate for this MAC."]], "SeeAlso": [], "Permissions": [], "Description": "Initializes the MAC with the given (secret) key and algorithm parameters.", "history": "Added in API level 1", "FullName": "protected abstract void engineInit (Key key, AlgorithmParameterSpec params)"}}, "Inheritance": [], "ClassName": "javax.crypto.MacSpi", "ClassDesc": "This class defines the Mac class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a particular MAC algorithm. Implementations are free to implement the Cloneable interface."}