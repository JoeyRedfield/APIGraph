{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "String"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the position of error in the rules string", "history": "Added in API level 24", "FullName": "public String toString ()"}, "StringPrepParseException(java.lang.String, int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: A string describing the type of error that occurred"], ["int", "int: The error that has occurred"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Construct a ParseException object with the given message and error code", "history": "added in API level 24", "FullName": "public StringPrepParseException (String message, int error)"}, "StringPrepParseException(java.lang.String,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: A string describing the type of error that occurred"], ["int", "int: The error that has occurred"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Construct a ParseException object with the given message and error code", "history": "Added in API level 24", "FullName": "public StringPrepParseException (String message, int error)"}, "getError()": {"Returns": [["int", "The error code"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the error code of this exception. This method is only used for testing to verify the error.", "history": "Added in API level 24", "FullName": "public int getError ()"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if the objects are equal, false if unequal"]], "Parameters": [["@B_java#lang#Object_E@", "Object: The exception that this object should be compared to"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Compare this ParseException to another and evaluate if they are equal. The comparison works only on the type of error and does not compare the rules strings, if any, for equality.", "history": "Added in API level 24", "FullName": "public boolean equals (Object other)"}, "StringPrepParseException(java.lang.String,int,java.lang.String,int,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: A string describing the type of error that occurred"], ["int", "int: The error that has occurred"], ["@B_java#lang#String_E@", "String: The input rules string"], ["int", "int: The position of error in the rules string"], ["int", "int: The line number at which the error has occurred. If the parse engine is not using this field, it should set it to zero. Otherwise it should be a positive integer. The default value of this field is -1. It will be set to 0 if the code populating this struct is not using line numbers."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Construct a ParseException object with the given message and error code", "history": "Added in API level 24", "FullName": "public StringPrepParseException (String message, int error, String rules, int pos, int lineNumber)"}, "StringPrepParseException(java.lang.String,int,java.lang.String,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: A string describing the type of error that occurred"], ["int", "int: The error that has occurred"], ["@B_java#lang#String_E@", "String: The input rules string"], ["int", "int: The position of error in the rules string"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Construct a ParseException object with the given message and error code", "history": "Added in API level 24", "FullName": "public StringPrepParseException (String message, int error, String rules, int pos)"}}, "Inheritance": ["@B_java#lang#Throwable_E@", "@B_java#lang#Exception_E@", "@B_java#text#ParseException_E@"], "ClassName": "android.icu.text.StringPrepParseException", "ClassDesc": "Exception that signals an error has occurred while parsing the input to StringPrep or IDNA."}