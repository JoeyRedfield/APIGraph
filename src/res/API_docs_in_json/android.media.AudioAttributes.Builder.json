{"Functions": {"AudioAttributes.Builder()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new Builder with the defaults. By default, usage and content type are respectively @B_android#media#AudioAttributes#USAGE_UNKNOWN_E@ and @B_android#media#AudioAttributes#CONTENT_TYPE_UNKNOWN_E@, and flags are 0. It is recommended to configure the usage (with @B_android#media#AudioAttributes#Builder#setUsage_E@) or deriving attributes from a legacy stream type (with @B_android#media#AudioAttributes#Builder#setLegacyStreamType_E@) before calling @B_android#media#AudioAttributes#Builder#build_E@ to override any default playback behavior in terms of routing and volume management.", "history": "Added in API level 21", "FullName": "public AudioAttributes.Builder ()"}, "AudioAttributes.Builder(android.media.AudioAttributes)": {"Returns": [], "Parameters": [["@B_android#media#AudioAttributes_E@", "AudioAttributes: the AudioAttributes object whose data will be reused in the new Builder."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new Builder from a given AudioAttributes", "history": "Added in API level 21", "FullName": "public AudioAttributes.Builder (AudioAttributes aa)"}, "setLegacyStreamType(int)": {"Returns": [["@B_android#media#AudioAttributes#Builder_E@", "the same Builder instance."]], "Parameters": [["int", "int: one of @B_android#media#AudioManager#STREAM_VOICE_CALL_E@, @B_android#media#AudioManager#STREAM_SYSTEM_E@, @B_android#media#AudioManager#STREAM_RING_E@, @B_android#media#AudioManager#STREAM_MUSIC_E@, @B_android#media#AudioManager#STREAM_ALARM_E@, or @B_android#media#AudioManager#STREAM_NOTIFICATION_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets attributes as inferred from the legacy stream types. Warning: do not use this method in combination with setting any other attributes such as usage, content type, flags or haptic control, as this method will overwrite (the more accurate) information describing the use case previously set in the Builder. In general, avoid using it and prefer setting usage and content type directly with @B_android#media#AudioAttributes#Builder#setUsage_E@ and @B_android#media#AudioAttributes#Builder#setContentType_E@. Use this method when building an @B_android#media#AudioAttributes_E@ instance to initialize some of the attributes by information derived from a legacy stream type.", "history": "Added in API level 21", "FullName": "public AudioAttributes.Builder setLegacyStreamType (int streamType)"}, "setUsage(int)": {"Returns": [["@B_android#media#AudioAttributes#Builder_E@", "the same Builder instance."]], "Parameters": [["int", "int: one of @B_android#media#AudioAttributes#USAGE_UNKNOWN_E@, @B_android#media#AudioAttributes#USAGE_MEDIA_E@, @B_android#media#AudioAttributes#USAGE_VOICE_COMMUNICATION_E@, @B_android#media#AudioAttributes#USAGE_VOICE_COMMUNICATION_SIGNALLING_E@, @B_android#media#AudioAttributes#USAGE_ALARM_E@, @B_android#media#AudioAttributes#USAGE_NOTIFICATION_E@, @B_android#media#AudioAttributes#USAGE_NOTIFICATION_RINGTONE_E@, @B_android#media#AudioAttributes#USAGE_NOTIFICATION_COMMUNICATION_REQUEST_E@, @B_android#media#AudioAttributes#USAGE_NOTIFICATION_COMMUNICATION_INSTANT_E@, @B_android#media#AudioAttributes#USAGE_NOTIFICATION_COMMUNICATION_DELAYED_E@, @B_android#media#AudioAttributes#USAGE_NOTIFICATION_EVENT_E@, @B_android#media#AudioAttributes#USAGE_ASSISTANT_E@, @B_android#media#AudioAttributes#USAGE_ASSISTANCE_ACCESSIBILITY_E@, @B_android#media#AudioAttributes#USAGE_ASSISTANCE_NAVIGATION_GUIDANCE_E@, @B_android#media#AudioAttributes#USAGE_ASSISTANCE_SONIFICATION_E@, @B_android#media#AudioAttributes#USAGE_GAME_E@. Value is @B_android#media#AudioAttributes#USAGE_UNKNOWN_E@, @B_android#media#AudioAttributes#USAGE_MEDIA_E@, @B_android#media#AudioAttributes#USAGE_VOICE_COMMUNICATION_E@, @B_android#media#AudioAttributes#USAGE_VOICE_COMMUNICATION_SIGNALLING_E@, @B_android#media#AudioAttributes#USAGE_ALARM_E@, @B_android#media#AudioAttributes#USAGE_NOTIFICATION_E@, @B_android#media#AudioAttributes#USAGE_NOTIFICATION_RINGTONE_E@, @B_android#media#AudioAttributes#USAGE_NOTIFICATION_COMMUNICATION_REQUEST_E@, @B_android#media#AudioAttributes#USAGE_NOTIFICATION_COMMUNICATION_INSTANT_E@, @B_android#media#AudioAttributes#USAGE_NOTIFICATION_COMMUNICATION_DELAYED_E@, @B_android#media#AudioAttributes#USAGE_NOTIFICATION_EVENT_E@, @B_android#media#AudioAttributes#USAGE_ASSISTANCE_ACCESSIBILITY_E@, @B_android#media#AudioAttributes#USAGE_ASSISTANCE_NAVIGATION_GUIDANCE_E@, @B_android#media#AudioAttributes#USAGE_ASSISTANCE_SONIFICATION_E@, @B_android#media#AudioAttributes#USAGE_GAME_E@, or @B_android#media#AudioAttributes#USAGE_ASSISTANT_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the attribute describing what is the intended use of the the audio signal, such as alarm or ringtone.", "history": "Added in API level 21", "FullName": "public AudioAttributes.Builder setUsage (int usage)"}, "setFlags(int)": {"Returns": [["@B_android#media#AudioAttributes#Builder_E@", "the same Builder instance."]], "Parameters": [["int", "int: a combination of @B_android#media#AudioAttributes#FLAG_AUDIBILITY_ENFORCED_E@, @B_android#media#AudioAttributes#FLAG_HW_AV_SYNC_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the combination of flags. This is a bitwise OR with the existing flags.", "history": "Added in API level 21", "FullName": "public AudioAttributes.Builder setFlags (int flags)"}, "setHapticChannelsMuted(boolean)": {"Returns": [["@B_android#media#AudioAttributes#Builder_E@", "the same Builder instance. This value will never be null."]], "Parameters": [["boolean", "boolean: true to force muting haptic channels."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Specifying if haptic should be muted or not when playing audio-haptic coupled data. By default, haptic channels are disabled.", "history": "Added in API level 29", "FullName": "public AudioAttributes.Builder setHapticChannelsMuted (boolean muted)"}, "setContentType(int)": {"Returns": [["@B_android#media#AudioAttributes#Builder_E@", "the same Builder instance."]], "Parameters": [["int", "int: the content type values, one of @B_android#media#AudioAttributes#CONTENT_TYPE_MOVIE_E@, @B_android#media#AudioAttributes#CONTENT_TYPE_MUSIC_E@, @B_android#media#AudioAttributes#CONTENT_TYPE_SONIFICATION_E@, @B_android#media#AudioAttributes#CONTENT_TYPE_SPEECH_E@, @B_android#media#AudioAttributes#CONTENT_TYPE_UNKNOWN_E@. Value is @B_android#media#AudioAttributes#CONTENT_TYPE_UNKNOWN_E@, @B_android#media#AudioAttributes#CONTENT_TYPE_SPEECH_E@, @B_android#media#AudioAttributes#CONTENT_TYPE_MUSIC_E@, @B_android#media#AudioAttributes#CONTENT_TYPE_MOVIE_E@, or @B_android#media#AudioAttributes#CONTENT_TYPE_SONIFICATION_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the attribute describing the content type of the audio signal, such as speech, or music.", "history": "Added in API level 21", "FullName": "public AudioAttributes.Builder setContentType (int contentType)"}, "build()": {"Returns": [["@B_android#media#AudioAttributes_E@", "a new @B_android#media#AudioAttributes_E@ object"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Combines all of the attributes that have been set and return a new @B_android#media#AudioAttributes_E@ object.", "history": "Added in API level 21", "FullName": "public AudioAttributes build ()"}, "setAllowedCapturePolicy(int)": {"Returns": [["@B_android#media#AudioAttributes#Builder_E@", "the same Builder instance This value will never be null."]], "Parameters": [["int", "int: Value is @B_android#media#AudioAttributes#ALLOW_CAPTURE_BY_ALL_E@, @B_android#media#AudioAttributes#ALLOW_CAPTURE_BY_SYSTEM_E@, or @B_android#media#AudioAttributes#ALLOW_CAPTURE_BY_NONE_E@"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the argument is not a valid value."]], "SeeAlso": [], "Permissions": [], "Description": "Specifies whether the audio may or may not be captured by other apps or the system. The default is @B_android#media#AudioAttributes#ALLOW_CAPTURE_BY_ALL_E@. There are multiple ways to set this policy: for each track independently, with this method application-wide at runtime, with @B_android#media#AudioManager#setAllowedCapturePolicy_E@ application-wide at build time, see allowAudioPlaybackCapture in the application manifest. The most restrictive policy is always applied. See @B_android#media#AudioPlaybackCaptureConfiguration_E@ for more details on which audio signals can be captured.", "history": "Added in API level 29", "FullName": "public AudioAttributes.Builder setAllowedCapturePolicy (int capturePolicy)"}}, "Inheritance": [], "ClassName": "android.media.AudioAttributes.Builder", "ClassDesc": "Builder class for @B_android#media#AudioAttributes_E@ objects. Here is an example where Builder is used to define the @B_android#media#AudioAttributes_E@ to be used by a new AudioTrack instance: By default all types of information (usage, content type, flags) conveyed by an AudioAttributes instance are set to \"unknown\". Unknown information will be interpreted as a default value that is dependent on the context of use, for instance a @B_android#media#MediaPlayer_E@ will use a default usage of @B_android#media#AudioAttributes#USAGE_MEDIA_E@."}