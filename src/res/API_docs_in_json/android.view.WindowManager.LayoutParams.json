{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 1", "FullName": "public String toString ()"}, "WindowManager.LayoutParams(int, int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public WindowManager.LayoutParams (int _type, int _flags)"}, "WindowManager.LayoutParams(android.os.Parcel)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public WindowManager.LayoutParams (Parcel in)"}, "WindowManager.LayoutParams(int,int,int,int,int,int,int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public WindowManager.LayoutParams (int w, int h, int xpos, int ypos, int _type, int _flags, int _format)"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 1", "FullName": "public void writeToParcel (Parcel out, int parcelableFlags)"}, "copyFrom(android.view.WindowManager.LayoutParams)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_android#view#WindowManager#LayoutParams_E@", "WindowManager.LayoutParams no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public final int copyFrom (WindowManager.LayoutParams o)"}, "WindowManager.LayoutParams(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public WindowManager.LayoutParams (int _type)"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 1", "FullName": "public int describeContents ()"}, "WindowManager.LayoutParams(int,int,int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public WindowManager.LayoutParams (int _type, int _flags, int _format)"}, "WindowManager.LayoutParams(int,int,int,int,int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public WindowManager.LayoutParams (int w, int h, int _type, int _flags, int _format)"}, "getColorMode()": {"Returns": [["int", "Value is @B_android#content#pm#ActivityInfo#COLOR_MODE_DEFAULT_E@, @B_android#content#pm#ActivityInfo#COLOR_MODE_WIDE_COLOR_GAMUT_E@, or @B_android#content#pm#ActivityInfo#COLOR_MODE_HDR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#view#WindowManager#LayoutParams#setColorMode_E@"], "Permissions": [], "Description": "Returns the color mode of the window, one of @B_android#content#pm#ActivityInfo#COLOR_MODE_DEFAULT_E@, @B_android#content#pm#ActivityInfo#COLOR_MODE_WIDE_COLOR_GAMUT_E@ or @B_android#content#pm#ActivityInfo#COLOR_MODE_HDR_E@.", "history": "Added in API level 26", "FullName": "public int getColorMode ()"}, "getTitle()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public final CharSequence getTitle ()"}, "debug(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public String debug (String output)"}, "WindowManager.LayoutParams(int,int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public WindowManager.LayoutParams (int _type, int _flags)"}, "WindowManager.LayoutParams()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public WindowManager.LayoutParams ()"}, "mayUseInputMethod(int)": {"Returns": [["boolean", "Returns true if such a window should be behind/interact with an input method, false if not."]], "Parameters": [["int", "int: The current window manager flags."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Given a particular set of window manager flags, determine whether such a window may be a target for an input method when it has focus. In particular, this checks the @B_android#view#WindowManager#LayoutParams#FLAG_NOT_FOCUSABLE_E@ and @B_android#view#WindowManager#LayoutParams#FLAG_ALT_FOCUSABLE_IM_E@ flags and returns true if the combination of the two corresponds to a window that needs to be behind the input method so that the user can type into it.", "history": "Added in API level 3", "FullName": "public static boolean mayUseInputMethod (int flags)"}, "setTitle(java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public final void setTitle (CharSequence title)"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 1", "FullName": "public void writeToParcel (Parcel out, int parcelableFlags)"}, "WindowManager.LayoutParams(int, int, int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public WindowManager.LayoutParams (int _type, int _flags, int _format)"}, "setColorMode(int)": {"Returns": [], "Parameters": [["int", "int: Value is @B_android#content#pm#ActivityInfo#COLOR_MODE_DEFAULT_E@, @B_android#content#pm#ActivityInfo#COLOR_MODE_WIDE_COLOR_GAMUT_E@, or @B_android#content#pm#ActivityInfo#COLOR_MODE_HDR_E@"]], "Throws": [], "SeeAlso": ["@B_android#view#WindowManager#LayoutParams#getColorMode_E@"], "Permissions": [], "Description": "Set the color mode of the window. Setting the color mode might override the window's pixel @B_android#view#WindowManager#LayoutParams#format_E@. The color mode must be one of @B_android#content#pm#ActivityInfo#COLOR_MODE_DEFAULT_E@, @B_android#content#pm#ActivityInfo#COLOR_MODE_WIDE_COLOR_GAMUT_E@ or @B_android#content#pm#ActivityInfo#COLOR_MODE_HDR_E@.", "history": "Added in API level 26", "FullName": "public void setColorMode (int colorMode)"}}, "Inheritance": ["@B_android#view#ViewGroup#LayoutParams_E@"], "ClassName": "android.view.WindowManager.LayoutParams", "ClassDesc": ""}