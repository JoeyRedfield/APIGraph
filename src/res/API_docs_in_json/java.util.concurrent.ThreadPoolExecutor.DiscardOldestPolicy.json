{"Functions": {"rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor)": {"Returns": [], "Parameters": [["@B_java#lang#Runnable_E@", "Runnable: the runnable task requested to be executed"], ["@B_java#util#concurrent#ThreadPoolExecutor_E@", "ThreadPoolExecutor: the executor attempting to execute this task"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtains and ignores the next task that the executor would otherwise execute, if one is immediately available, and then retries execution of task r, unless the executor is shut down, in which case task r is instead discarded.", "history": "Added in API level 1", "FullName": "public void rejectedExecution (Runnable r, ThreadPoolExecutor e)"}, "ThreadPoolExecutor.DiscardOldestPolicy()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a DiscardOldestPolicy for the given executor.", "history": "Added in API level 1", "FullName": "public ThreadPoolExecutor.DiscardOldestPolicy ()"}}, "Inheritance": [], "ClassName": "java.util.concurrent.ThreadPoolExecutor.DiscardOldestPolicy", "ClassDesc": "A handler for rejected tasks that discards the oldest unhandled request and then retries execute, unless the executor is shut down, in which case the task is discarded."}