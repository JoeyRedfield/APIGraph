{"Functions": {"estimateNameValuePairLen(org.apache.http.NameValuePair)": {"Returns": [["", "a length estimate, in number of characters"]], "Parameters": [["@B_org#apache#http#NameValuePair_E@", "the name-value pair to format, or null"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Estimates the length of a formatted name-value pair.", "history": "Added in API level 1", "FullName": "protected int estimateNameValuePairLen (NameValuePair nvp)"}, "formatParameters(org.apache.http.util.CharArrayBuffer, org.apache.http.NameValuePair[], boolean)": {"Returns": [["", "a buffer with the formatted parameters. If the buffer argument was not null, that buffer will be used and returned."]], "Parameters": [["@B_org#apache#http#util#CharArrayBuffer_E@", "the buffer to append to, or null to create a new buffer"], ["@B_org#apache#http#NameValuePair_E@", "the parameters (name-value pairs) to format"], ["boolean", "true to always format with quoted values, false to use quotes only when necessary"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Formats the parameters of a header element. That's a list of name-value pairs, to be separated by semicolons. This method will", "history": "Added in API level 1", "FullName": "public CharArrayBuffer formatParameters (CharArrayBuffer buffer, NameValuePair[] nvps, boolean quote)"}, "isUnsafe(char)": {"Returns": [["", "true if the character is unsafe, false otherwise"]], "Parameters": [["char", "the character to check"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether a character is @B_org#apache#http#message#BasicHeaderValueFormatter#UNSAFE_CHARS_E@.", "history": "Added in API level 1", "FullName": "protected boolean isUnsafe (char ch)"}, "estimateHeaderElementLen(org.apache.http.HeaderElement)": {"Returns": [["", "a length estimate, in number of characters"]], "Parameters": [["@B_org#apache#http#HeaderElement_E@", "the header element to format, or null"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Estimates the length of a formatted header element.", "history": "Added in API level 1", "FullName": "protected int estimateHeaderElementLen (HeaderElement elem)"}, "formatNameValuePair(org.apache.http.NameValuePair, boolean, org.apache.http.message.HeaderValueFormatter)": {"Returns": [["", "the formatted name-value pair"]], "Parameters": [["@B_org#apache#http#NameValuePair_E@", "the name-value pair to format"], ["boolean", "true to always format with a quoted value, false to use quotes only when necessary"], ["@B_org#apache#http#message#HeaderValueFormatter_E@", "the formatter to use, or null for the @B_org#apache#http#message#BasicHeaderValueFormatter#DEFAULT_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Formats a name-value pair.", "history": "Added in API level 1", "FullName": "public static final String formatNameValuePair (NameValuePair nvp, boolean quote, HeaderValueFormatter formatter)"}, "estimateElementsLen(org.apache.http.HeaderElement[])": {"Returns": [["", "a length estimate, in number of characters"]], "Parameters": [["@B_org#apache#http#HeaderElement_E@", "the header elements to format, or null"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Estimates the length of formatted header elements.", "history": "Added in API level 1", "FullName": "protected int estimateElementsLen (HeaderElement[] elems)"}, "doFormatValue(org.apache.http.util.CharArrayBuffer, java.lang.String, boolean)": {"Returns": [], "Parameters": [["@B_org#apache#http#util#CharArrayBuffer_E@", "the buffer to append to, never null"], ["@B_java#lang#String_E@", "the value to append, never null"], ["boolean", "true to always format with quotes, false to use quotes only when necessary"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Actually formats the value of a name-value pair. This does not include a leading = character. Called from @B_org#apache#http#message#BasicHeaderValueFormatter#formatNameValuePair_E@.", "history": "Added in API level 1", "FullName": "protected void doFormatValue (CharArrayBuffer buffer, String value, boolean quote)"}, "estimateParametersLen(org.apache.http.NameValuePair[])": {"Returns": [["", "a length estimate, in number of characters"]], "Parameters": [["@B_org#apache#http#NameValuePair_E@", "the parameters to format, or null"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Estimates the length of formatted parameters.", "history": "Added in API level 1", "FullName": "protected int estimateParametersLen (NameValuePair[] nvps)"}, "isSeparator(char)": {"Returns": [["", "true if the character is a separator, false otherwise"]], "Parameters": [["char", "the character to check"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether a character is a @B_org#apache#http#message#BasicHeaderValueFormatter#SEPARATORS_E@.", "history": "Added in API level 1", "FullName": "protected boolean isSeparator (char ch)"}, "formatParameters(org.apache.http.NameValuePair[], boolean, org.apache.http.message.HeaderValueFormatter)": {"Returns": [["", "the formatted parameters"]], "Parameters": [["@B_org#apache#http#NameValuePair_E@", "the parameters to format"], ["boolean", "true to always format with quoted values, false to use quotes only when necessary"], ["@B_org#apache#http#message#HeaderValueFormatter_E@", "the formatter to use, or null for the @B_org#apache#http#message#BasicHeaderValueFormatter#DEFAULT_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Formats a set of parameters.", "history": "Added in API level 1", "FullName": "public static final String formatParameters (NameValuePair[] nvps, boolean quote, HeaderValueFormatter formatter)"}, "BasicHeaderValueFormatter()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public BasicHeaderValueFormatter ()"}, "formatElements(org.apache.http.HeaderElement[], boolean, org.apache.http.message.HeaderValueFormatter)": {"Returns": [["", "the formatted header elements"]], "Parameters": [["@B_org#apache#http#HeaderElement_E@", "the header elements to format"], ["boolean", "true to always format with quoted values, false to use quotes only when necessary"], ["@B_org#apache#http#message#HeaderValueFormatter_E@", "the formatter to use, or null for the @B_org#apache#http#message#BasicHeaderValueFormatter#DEFAULT_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Formats an array of header elements.", "history": "Added in API level 1", "FullName": "public static final String formatElements (HeaderElement[] elems, boolean quote, HeaderValueFormatter formatter)"}, "formatHeaderElement(org.apache.http.util.CharArrayBuffer, org.apache.http.HeaderElement, boolean)": {"Returns": [["", "a buffer with the formatted header element. If the buffer argument was not null, that buffer will be used and returned."]], "Parameters": [["@B_org#apache#http#util#CharArrayBuffer_E@", "the buffer to append to, or null to create a new buffer"], ["@B_org#apache#http#HeaderElement_E@", "the header element to format"], ["boolean", "true to always format with quoted values, false to use quotes only when necessary"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Formats one header element.", "history": "Added in API level 1", "FullName": "public CharArrayBuffer formatHeaderElement (CharArrayBuffer buffer, HeaderElement elem, boolean quote)"}, "formatHeaderElement(org.apache.http.HeaderElement, boolean, org.apache.http.message.HeaderValueFormatter)": {"Returns": [["", "the formatted header element"]], "Parameters": [["@B_org#apache#http#HeaderElement_E@", "the header element to format"], ["boolean", "true to always format with quoted values, false to use quotes only when necessary"], ["@B_org#apache#http#message#HeaderValueFormatter_E@", "the formatter to use, or null for the @B_org#apache#http#message#BasicHeaderValueFormatter#DEFAULT_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Formats a header element.", "history": "Added in API level 1", "FullName": "public static final String formatHeaderElement (HeaderElement elem, boolean quote, HeaderValueFormatter formatter)"}, "formatNameValuePair(org.apache.http.util.CharArrayBuffer, org.apache.http.NameValuePair, boolean)": {"Returns": [["", "a buffer with the formatted name-value pair. If the buffer argument was not null, that buffer will be used and returned."]], "Parameters": [["@B_org#apache#http#util#CharArrayBuffer_E@", "the buffer to append to, or null to create a new buffer"], ["@B_org#apache#http#NameValuePair_E@", "the name-value pair to format"], ["boolean", "true to always format with a quoted value, false to use quotes only when necessary"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Formats one name-value pair, where the value is optional.", "history": "Added in API level 1", "FullName": "public CharArrayBuffer formatNameValuePair (CharArrayBuffer buffer, NameValuePair nvp, boolean quote)"}, "formatElements(org.apache.http.util.CharArrayBuffer, org.apache.http.HeaderElement[], boolean)": {"Returns": [["", "a buffer with the formatted header elements. If the buffer argument was not null, that buffer will be used and returned."]], "Parameters": [["@B_org#apache#http#util#CharArrayBuffer_E@", "the buffer to append to, or null to create a new buffer"], ["@B_org#apache#http#HeaderElement_E@", "the header elements to format"], ["boolean", "true to always format with quoted values, false to use quotes only when necessary"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Formats an array of header elements.", "history": "Added in API level 1", "FullName": "public CharArrayBuffer formatElements (CharArrayBuffer buffer, HeaderElement[] elems, boolean quote)"}}, "Inheritance": [], "ClassName": "org.apache.http.message.BasicHeaderValueFormatter", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Basic implementation for formatting header value elements. Instances of this class are stateless and thread-safe. Derived classes are expected to maintain these properties."}