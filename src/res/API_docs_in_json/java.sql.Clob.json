{"Functions": {"getCharacterStream(long, long)": {"Returns": [["@B_java#io#Reader_E@", "Reader through which the partial Clob value can be read."]], "Parameters": [["long", "long: the offset to the first character of the partial value to be retrieved. The first character in the Clob is at position 1."], ["long", "long: the length in characters of the partial value to be retrieved."]], "Throws": [["@B_java#sql#SQLException_E@", "if pos is less than 1 or if pos is greater than the number of characters in the Clob or if pos + length is greater than the number of characters in the Clob"], ["@B_java#sql#SQLFeatureNotSupportedException_E@", "if the JDBC driver does not support this method"]], "SeeAlso": [], "Permissions": [], "Description": "Returns a Reader object that contains a partial Clob value, starting with the character specified by pos, which is length characters in length.", "history": "added in API level 9", "FullName": "public abstract Reader getCharacterStream (long pos, long length)"}, "getAsciiStream()": {"Returns": [["@B_java#io#InputStream_E@", "a java.io.InputStream object containing the CLOB data"]], "Parameters": [], "Throws": [["@B_java#sql#SQLException_E@", "if there is an error accessing the CLOB value"], ["@B_java#sql#SQLFeatureNotSupportedException_E@", "if the JDBC driver does not support this method"]], "SeeAlso": ["@B_java#sql#Clob#setAsciiStream_E@"], "Permissions": [], "Description": "Retrieves the CLOB value designated by this Clob object as an ascii stream.", "history": "Added in API level 1", "FullName": "public abstract InputStream getAsciiStream ()"}, "setString(long, java.lang.String)": {"Returns": [["int", "the number of characters written"]], "Parameters": [["long", "long: the position at which to start writing to the CLOB value that this Clob object represents; The first position is 1"], ["@B_java#lang#String_E@", "String: the string to be written to the CLOB value that this Clob designates"]], "Throws": [["@B_java#sql#SQLException_E@", "if there is an error accessing the CLOB value or if pos is less than 1"], ["@B_java#sql#SQLFeatureNotSupportedException_E@", "if the JDBC driver does not support this method"]], "SeeAlso": [], "Permissions": [], "Description": "Writes the given Java String to the CLOB value that this Clob object designates at the position pos. The string will overwrite the existing characters in the Clob object starting at the position pos. If the end of the Clob value is reached while writing the given string, then the length of the Clob value will be increased to accomodate the extra characters. pos is greater then the length+1 of the CLOB value then the behavior is undefined. Some JDBC drivers may throw a SQLException while other drivers may support this operation.", "history": "added in API level 1", "FullName": "public abstract int setString (long pos, String str)"}, "setCharacterStream(long)": {"Returns": [["@B_java#io#Writer_E@", "a stream to which Unicode encoded characters can be written"]], "Parameters": [["long", "long: the position at which to start writing to the CLOB value; The first position is 1"]], "Throws": [["@B_java#sql#SQLException_E@", "if there is an error accessing the CLOB value or if pos is less than 1"], ["@B_java#sql#SQLFeatureNotSupportedException_E@", "if the JDBC driver does not support this method"]], "SeeAlso": ["@B_java#sql#Clob#getCharacterStream_E@"], "Permissions": [], "Description": "Retrieves a stream to be used to write a stream of Unicode characters to the CLOB value that this Clob object represents, at position pos. Characters written to the stream will overwrite the existing characters in the Clob object starting at the position pos. If the end of the Clob value is reached while writing characters to the stream, then the length of the Clob value will be increased to accomodate the extra characters. pos is greater then the length+1 of the CLOB value then the behavior is undefined. Some JDBC drivers may throw a SQLException while other drivers may support this operation.", "history": "Added in API level 1", "FullName": "public abstract Writer setCharacterStream (long pos)"}, "getSubString(long, int)": {"Returns": [["@B_java#lang#String_E@", "a String that is the specified substring in the CLOB value designated by this Clob object"]], "Parameters": [["long", "long: the first character of the substring to be extracted. The first character is at position 1."], ["int", "int: the number of consecutive characters to be copied; the value for length must be 0 or greater"]], "Throws": [["@B_java#sql#SQLException_E@", "if there is an error accessing the CLOB value; if pos is less than 1 or length is less than 0"], ["@B_java#sql#SQLFeatureNotSupportedException_E@", "if the JDBC driver does not support this method"]], "SeeAlso": [], "Permissions": [], "Description": "Retrieves a copy of the specified substring in the CLOB value designated by this Clob object. The substring begins at position pos and has up to length consecutive characters.", "history": "added in API level 1", "FullName": "public abstract String getSubString (long pos, int length)"}, "position(java.lang.String, long)": {"Returns": [["long", "the position at which the substring appears or -1 if it is not present; the first position is 1"]], "Parameters": [["@B_java#lang#String_E@", "String: the substring for which to search"], ["long", "long: the position at which to begin searching; the first position is 1"]], "Throws": [["@B_java#sql#SQLException_E@", "if there is an error accessing the CLOB value or if pos is less than 1"], ["@B_java#sql#SQLFeatureNotSupportedException_E@", "if the JDBC driver does not support this method"]], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the character position at which the specified substring searchstr appears in the SQL CLOB value represented by this Clob object. The search begins at position start.", "history": "added in API level 1", "FullName": "public abstract long position (String searchstr, long start)"}, "setString(long, java.lang.String, int, int)": {"Returns": [["int", "the number of characters written"]], "Parameters": [["long", "long: the position at which to start writing to this CLOB object; The first position is 1"], ["@B_java#lang#String_E@", "String: the string to be written to the CLOB value that this Clob object represents"], ["int", "int: the offset into str to start reading the characters to be written"], ["int", "int: the number of characters to be written"]], "Throws": [["@B_java#sql#SQLException_E@", "if there is an error accessing the CLOB value or if pos is less than 1"], ["@B_java#sql#SQLFeatureNotSupportedException_E@", "if the JDBC driver does not support this method"]], "SeeAlso": [], "Permissions": [], "Description": "Writes len characters of str, starting at character offset, to the CLOB value that this Clob represents. The string will overwrite the existing characters in the Clob object starting at the position pos. If the end of the Clob value is reached while writing the given string, then the length of the Clob value will be increased to accomodate the extra characters. pos is greater then the length+1 of the CLOB value then the behavior is undefined. Some JDBC drivers may throw a SQLException while other drivers may support this operation.", "history": "added in API level 1", "FullName": "public abstract int setString (long pos, String str, int offset, int len)"}, "free()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#sql#SQLException_E@", "if an error occurs releasing the Clob's resources"], ["@B_java#sql#SQLFeatureNotSupportedException_E@", "if the JDBC driver does not support this method"]], "SeeAlso": [], "Permissions": [], "Description": "This method frees the Clob object and releases the resources the resources that it holds. The object is invalid once the free method is called. After free has been called, any attempt to invoke a method other than free will result in a SQLException being thrown. If free is called multiple times, the subsequent calls to free are treated as a no-op.", "history": "Added in API level 9", "FullName": "public abstract void free ()"}, "setString(long,java.lang.String)": {"Returns": [["int", "the number of characters written"]], "Parameters": [["long", "long: the position at which to start writing to the CLOB value that this Clob object represents; The first position is 1"], ["@B_java#lang#String_E@", "String: the string to be written to the CLOB value that this Clob designates"]], "Throws": [["@B_java#sql#SQLException_E@", "if there is an error accessing the CLOB value or if pos is less than 1"], ["@B_java#sql#SQLFeatureNotSupportedException_E@", "if the JDBC driver does not support this method"]], "SeeAlso": [], "Permissions": [], "Description": "Writes the given Java String to the CLOB value that this Clob object designates at the position pos. The string will overwrite the existing characters in the Clob object starting at the position pos. If the end of the Clob value is reached while writing the given string, then the length of the Clob value will be increased to accomodate the extra characters. pos is greater then the length+1 of the CLOB value then the behavior is undefined. Some JDBC drivers may throw a SQLException while other drivers may support this operation.", "history": "Added in API level 1", "FullName": "public abstract int setString (long pos, String str)"}, "position(java.lang.String,long)": {"Returns": [["long", "the position at which the substring appears or -1 if it is not present; the first position is 1"]], "Parameters": [["@B_java#lang#String_E@", "String: the substring for which to search"], ["long", "long: the position at which to begin searching; the first position is 1"]], "Throws": [["@B_java#sql#SQLException_E@", "if there is an error accessing the CLOB value or if pos is less than 1"], ["@B_java#sql#SQLFeatureNotSupportedException_E@", "if the JDBC driver does not support this method"]], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the character position at which the specified substring searchstr appears in the SQL CLOB value represented by this Clob object. The search begins at position start.", "history": "Added in API level 1", "FullName": "public abstract long position (String searchstr, long start)"}, "getSubString(long,int)": {"Returns": [["@B_java#lang#String_E@", "a String that is the specified substring in the CLOB value designated by this Clob object"]], "Parameters": [["long", "long: the first character of the substring to be extracted. The first character is at position 1."], ["int", "int: the number of consecutive characters to be copied; the value for length must be 0 or greater"]], "Throws": [["@B_java#sql#SQLException_E@", "if there is an error accessing the CLOB value; if pos is less than 1 or length is less than 0"], ["@B_java#sql#SQLFeatureNotSupportedException_E@", "if the JDBC driver does not support this method"]], "SeeAlso": [], "Permissions": [], "Description": "Retrieves a copy of the specified substring in the CLOB value designated by this Clob object. The substring begins at position pos and has up to length consecutive characters.", "history": "Added in API level 1", "FullName": "public abstract String getSubString (long pos, int length)"}, "setString(long,java.lang.String,int,int)": {"Returns": [["int", "the number of characters written"]], "Parameters": [["long", "long: the position at which to start writing to this CLOB object; The first position is 1"], ["@B_java#lang#String_E@", "String: the string to be written to the CLOB value that this Clob object represents"], ["int", "int: the offset into str to start reading the characters to be written"], ["int", "int: the number of characters to be written"]], "Throws": [["@B_java#sql#SQLException_E@", "if there is an error accessing the CLOB value or if pos is less than 1"], ["@B_java#sql#SQLFeatureNotSupportedException_E@", "if the JDBC driver does not support this method"]], "SeeAlso": [], "Permissions": [], "Description": "Writes len characters of str, starting at character offset, to the CLOB value that this Clob represents. The string will overwrite the existing characters in the Clob object starting at the position pos. If the end of the Clob value is reached while writing the given string, then the length of the Clob value will be increased to accomodate the extra characters. pos is greater then the length+1 of the CLOB value then the behavior is undefined. Some JDBC drivers may throw a SQLException while other drivers may support this operation.", "history": "Added in API level 1", "FullName": "public abstract int setString (long pos, String str, int offset, int len)"}, "position(java.sql.Clob,long)": {"Returns": [["long", "the position at which the Clob object appears or -1 if it is not present; the first position is 1"]], "Parameters": [["@B_java#sql#Clob_E@", "Clob: the Clob object for which to search"], ["long", "long: the position at which to begin searching; the first position is 1"]], "Throws": [["@B_java#sql#SQLException_E@", "if there is an error accessing the CLOB value or if start is less than 1"], ["@B_java#sql#SQLFeatureNotSupportedException_E@", "if the JDBC driver does not support this method"]], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the character position at which the specified Clob object searchstr appears in this Clob object. The search begins at position start.", "history": "Added in API level 1", "FullName": "public abstract long position (Clob searchstr, long start)"}, "position(java.sql.Clob, long)": {"Returns": [["long", "the position at which the Clob object appears or -1 if it is not present; the first position is 1"]], "Parameters": [["@B_java#sql#Clob_E@", "Clob: the Clob object for which to search"], ["long", "long: the position at which to begin searching; the first position is 1"]], "Throws": [["@B_java#sql#SQLException_E@", "if there is an error accessing the CLOB value or if start is less than 1"], ["@B_java#sql#SQLFeatureNotSupportedException_E@", "if the JDBC driver does not support this method"]], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the character position at which the specified Clob object searchstr appears in this Clob object. The search begins at position start.", "history": "added in API level 1", "FullName": "public abstract long position (Clob searchstr, long start)"}, "getCharacterStream(long,long)": {"Returns": [["@B_java#io#Reader_E@", "Reader through which the partial Clob value can be read."]], "Parameters": [["long", "long: the offset to the first character of the partial value to be retrieved. The first character in the Clob is at position 1."], ["long", "long: the length in characters of the partial value to be retrieved."]], "Throws": [["@B_java#sql#SQLException_E@", "if pos is less than 1 or if pos is greater than the number of characters in the Clob or if pos + length is greater than the number of characters in the Clob"], ["@B_java#sql#SQLFeatureNotSupportedException_E@", "if the JDBC driver does not support this method"]], "SeeAlso": [], "Permissions": [], "Description": "Returns a Reader object that contains a partial Clob value, starting with the character specified by pos, which is length characters in length.", "history": "Added in API level 9", "FullName": "public abstract Reader getCharacterStream (long pos, long length)"}, "length()": {"Returns": [["long", "length of the CLOB in characters"]], "Parameters": [], "Throws": [["@B_java#sql#SQLException_E@", "if there is an error accessing the length of the CLOB value"], ["@B_java#sql#SQLFeatureNotSupportedException_E@", "if the JDBC driver does not support this method"]], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the number of characters in the CLOB value designated by this Clob object.", "history": "Added in API level 1", "FullName": "public abstract long length ()"}, "getCharacterStream()": {"Returns": [["@B_java#io#Reader_E@", "a java.io.Reader object containing the CLOB data"]], "Parameters": [], "Throws": [["@B_java#sql#SQLException_E@", "if there is an error accessing the CLOB value"], ["@B_java#sql#SQLFeatureNotSupportedException_E@", "if the JDBC driver does not support this method"]], "SeeAlso": ["@B_java#sql#Clob#setCharacterStream_E@"], "Permissions": [], "Description": "Retrieves the CLOB value designated by this Clob object as a java.io.Reader object (or as a stream of characters).", "history": "Added in API level 1", "FullName": "public abstract Reader getCharacterStream ()"}, "truncate(long)": {"Returns": [], "Parameters": [["long", "long: the length, in characters, to which the CLOB value should be truncated"]], "Throws": [["@B_java#sql#SQLException_E@", "if there is an error accessing the CLOB value or if len is less than 0"], ["@B_java#sql#SQLFeatureNotSupportedException_E@", "if the JDBC driver does not support this method"]], "SeeAlso": [], "Permissions": [], "Description": "Truncates the CLOB value that this Clob designates to have a length of len characters. pos is greater then the length+1 of the CLOB value then the behavior is undefined. Some JDBC drivers may throw a SQLException while other drivers may support this operation.", "history": "Added in API level 1", "FullName": "public abstract void truncate (long len)"}, "setAsciiStream(long)": {"Returns": [["@B_java#io#OutputStream_E@", "the stream to which ASCII encoded characters can be written"]], "Parameters": [["long", "long: the position at which to start writing to this CLOB object; The first position is 1"]], "Throws": [["@B_java#sql#SQLException_E@", "if there is an error accessing the CLOB value or if pos is less than 1"], ["@B_java#sql#SQLFeatureNotSupportedException_E@", "if the JDBC driver does not support this method"]], "SeeAlso": ["@B_java#sql#Clob#getAsciiStream_E@"], "Permissions": [], "Description": "Retrieves a stream to be used to write Ascii characters to the CLOB value that this Clob object represents, starting at position pos. Characters written to the stream will overwrite the existing characters in the Clob object starting at the position pos. If the end of the Clob value is reached while writing characters to the stream, then the length of the Clob value will be increased to accomodate the extra characters. pos is greater then the length+1 of the CLOB value then the behavior is undefined. Some JDBC drivers may throw a SQLException while other drivers may support this operation.", "history": "Added in API level 1", "FullName": "public abstract OutputStream setAsciiStream (long pos)"}}, "Inheritance": [], "ClassName": "java.sql.Clob", "ClassDesc": "The mapping in the JavaCLOB type. An SQL CLOB is a built-in type that stores a Character Large Object as a column value in a row of a database table. By default drivers implement a Clob object using an SQL locator(CLOB), which means that a Clob object contains a logical pointer to the SQL CLOB data rather than the data itself. A Clob object is valid for the duration of the transaction in which it was created. The Clob interface provides methods for getting the length of an SQL CLOB (Character Large Object) value, for materializing a CLOB value on the client, and for searching for a substring or CLOB object within a CLOB value. Methods in the interfaces @B_java#sql#ResultSet_E@, @B_java#sql#CallableStatement_E@, and @B_java#sql#PreparedStatement_E@, such as getClob and setClob allow a programmer to access an SQL CLOB value. In addition, this interface has methods for updating a CLOB value. All methods on the Clob interface must be fully implemented if the JDBC driver supports the data type."}