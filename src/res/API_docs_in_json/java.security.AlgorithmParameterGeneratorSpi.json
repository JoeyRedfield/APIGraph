{"Functions": {"engineInit(int,java.security.SecureRandom)": {"Returns": [], "Parameters": [["int", "int: the size (number of bits)."], ["@B_java#security#SecureRandom_E@", "SecureRandom: the source of randomness."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Initializes this parameter generator for a certain size and source of randomness.", "history": "Added in API level 1", "FullName": "protected abstract void engineInit (int size, SecureRandom random)"}, "engineInit(int, java.security.SecureRandom)": {"Returns": [], "Parameters": [["int", "int: the size (number of bits)."], ["@B_java#security#SecureRandom_E@", "SecureRandom: the source of randomness."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Initializes this parameter generator for a certain size and source of randomness.", "history": "added in API level 1", "FullName": "protected abstract void engineInit (int size, SecureRandom random)"}, "AlgorithmParameterGeneratorSpi()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public AlgorithmParameterGeneratorSpi ()"}, "engineInit(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)": {"Returns": [], "Parameters": [["@B_java#security#spec#AlgorithmParameterSpec_E@", "AlgorithmParameterSpec: the set of algorithm-specific parameter generation values."], ["@B_java#security#SecureRandom_E@", "SecureRandom: the source of randomness."]], "Throws": [["@B_java#security#InvalidAlgorithmParameterException_E@", "if the given parameter generation values are inappropriate for this parameter generator."]], "SeeAlso": [], "Permissions": [], "Description": "Initializes this parameter generator with a set of algorithm-specific parameter generation values.", "history": "Added in API level 1", "FullName": "protected abstract void engineInit (AlgorithmParameterSpec genParamSpec, SecureRandom random)"}, "engineGenerateParameters()": {"Returns": [["@B_java#security#AlgorithmParameters_E@", "the new AlgorithmParameters object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Generates the parameters.", "history": "Added in API level 1", "FullName": "protected abstract AlgorithmParameters engineGenerateParameters ()"}}, "Inheritance": [], "ClassName": "java.security.AlgorithmParameterGeneratorSpi", "ClassDesc": "This class defines the AlgorithmParameterGenerator class, which is used to generate a set of parameters to be used with a certain algorithm. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a parameter generator for a particular algorithm. In case the client does not explicitly initialize the AlgorithmParameterGenerator (via a call to an engineInit method), each provider must supply (and document) a default initialization. For example, the Sun provider uses a default modulus prime size of 1024 bits for the generation of DSA parameters."}