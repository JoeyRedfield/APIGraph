{"Functions": {"getAllHeaders()": {"Returns": [["", "an array of length >= 0"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets all of the headers contained within this group.", "history": "Added in API level 1", "FullName": "public Header[] getAllHeaders ()"}, "getLastHeader(java.lang.String)": {"Returns": [["", "the last header or null"]], "Parameters": [["@B_java#lang#String_E@", "the name of the header to get"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the last header with the given name. Header name comparison is case insensitive.", "history": "Added in API level 1", "FullName": "public Header getLastHeader (String name)"}, "setHeaders(org.apache.http.Header[])": {"Returns": [], "Parameters": [["@B_org#apache#http#Header_E@", "the headers to set"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets all of the headers contained within this group overriding any existing headers. The headers are added in the order in which they appear in the array.", "history": "Added in API level 1", "FullName": "public void setHeaders (Header[] headers)"}, "getCondensedHeader(java.lang.String)": {"Returns": [["", "a header with a condensed value or null if no headers by the given name are present"]], "Parameters": [["@B_java#lang#String_E@", "the name of the header(s) to get"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets a header representing all of the header values with the given name. If more that one header with the given name exists the values will be combined with a \",\" as per RFC 2616. Header name comparison is case insensitive.", "history": "Added in API level 1", "FullName": "public Header getCondensedHeader (String name)"}, "updateHeader(org.apache.http.Header)": {"Returns": [], "Parameters": [["@B_org#apache#http#Header_E@", "the new header that should replace the first header with the same name if present in the list."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Replaces the first occurence of the header with the same name. If no header with the same name is found the given header is added to the end of the list.", "history": "Added in API level 1", "FullName": "public void updateHeader (Header header)"}, "iterator(java.lang.String)": {"Returns": [["", "iterator over some headers in this group."]], "Parameters": [["@B_java#lang#String_E@", "the name of the headers over which to iterate, or null for all headers"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an iterator over the headers with a given name in this group.", "history": "Added in API level 1", "FullName": "public HeaderIterator iterator (String name)"}, "getFirstHeader(java.lang.String)": {"Returns": [["", "the first header or null"]], "Parameters": [["@B_java#lang#String_E@", "the name of the header to get"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the first header with the given name. Header name comparison is case insensitive.", "history": "Added in API level 1", "FullName": "public Header getFirstHeader (String name)"}, "HeaderGroup()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor for HeaderGroup.", "history": "Added in API level 1", "FullName": "public HeaderGroup ()"}, "containsHeader(java.lang.String)": {"Returns": [["", "true if at least one header with the name is contained, false otherwise"]], "Parameters": [["@B_java#lang#String_E@", "the header name to test for"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tests if headers with the given name are contained within this group. Header name comparison is case insensitive.", "history": "Added in API level 1", "FullName": "public boolean containsHeader (String name)"}, "clear()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes any contained headers.", "history": "Added in API level 1", "FullName": "public void clear ()"}, "addHeader(org.apache.http.Header)": {"Returns": [], "Parameters": [["@B_org#apache#http#Header_E@", "the header to add"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds the given header to the group. The order in which this header was added is preserved.", "history": "Added in API level 1", "FullName": "public void addHeader (Header header)"}, "copy()": {"Returns": [["", "copy of this object"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a copy of this object", "history": "Added in API level 1", "FullName": "public HeaderGroup copy ()"}, "removeHeader(org.apache.http.Header)": {"Returns": [], "Parameters": [["@B_org#apache#http#Header_E@", "the header to remove"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes the given header.", "history": "Added in API level 1", "FullName": "public void removeHeader (Header header)"}, "iterator()": {"Returns": [["", "iterator over this group of headers."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an iterator over this group of headers.", "history": "Added in API level 1", "FullName": "public HeaderIterator iterator ()"}, "clone()": {"Returns": [["", "a copy of this object."]], "Parameters": [], "Throws": [["@B_java#lang#CloneNotSupportedException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Creates and returns a copy of this Object. The default implementation returns a so-called \"shallow\" copy: It creates a new instance of the same class and then copies the field values (including object references) from this instance to the new instance. A \"deep\" copy, in contrast, would also recursively clone nested objects. A subclass that needs to implement this kind of cloning should call super.clone() to create the new instance and then create deep copies of the nested, mutable objects.", "history": "Added in API level 1", "FullName": "public Object clone ()"}, "getHeaders(java.lang.String)": {"Returns": [["", "an array of length >= 0"]], "Parameters": [["@B_java#lang#String_E@", "the name of the header(s) to get"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets all of the headers with the given name. The returned array maintains the relative order in which the headers were added. Header name comparison is case insensitive.", "history": "Added in API level 1", "FullName": "public Header[] getHeaders (String name)"}}, "Inheritance": [], "ClassName": "org.apache.http.message.HeaderGroup", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit A class for combining a set of headers. This class allows for multiple headers with the same name and keeps track of the order in which headers were added."}