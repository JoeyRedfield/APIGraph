{"Functions": {"onDrawerSlide(android.view.View, float)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: The child view that was moved"], ["float", "float: The new offset of this drawer within its range, from 0-1"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "@B_android#support#v4#widget#DrawerLayout#DrawerListener_E@ callback method. If you do not use your ActionBarDrawerToggle instance directly as your DrawerLayout's listener, you should call through to this method from your own listener object.", "history": "added in version 23.0.0", "FullName": "void onDrawerSlide (View drawerView, float slideOffset)"}, "setHomeAsUpIndicator(int)": {"Returns": [], "Parameters": [["int", "int: Resource ID of a drawable to use for the up indicator, or 0 to use the theme's default"]], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#ActionBarDrawerToggle#setDrawerIndicatorEnabled_E@"], "Permissions": [], "Description": "Set the up indicator to display when the drawer indicator is not enabled. If you pass 0 to this method, the default drawable from the theme will be used.", "history": "added in version 23.0.0", "FullName": "void setHomeAsUpIndicator (int resId)"}, "onOptionsItemSelected(android.view.MenuItem)": {"Returns": [["boolean", "true if the event was handled and further processing should not occur"]], "Parameters": [["@B_android#view#MenuItem_E@", "MenuItem: the MenuItem instance representing the selected menu item"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method should be called by your Activity's @B_android#app#Activity#onOptionsItemSelected_E@ method. If it returns true, your onOptionsItemSelected method should return true and skip further processing.", "history": "added in version 23.0.0", "FullName": "boolean onOptionsItemSelected (MenuItem item)"}, "onDrawerClosed(android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: Drawer view that is now closed"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "@B_android#support#v4#widget#DrawerLayout#DrawerListener_E@ callback method. If you do not use your ActionBarDrawerToggle instance directly as your DrawerLayout's listener, you should call through to this method from your own listener object.", "history": "added in version 23.0.0", "FullName": "void onDrawerClosed (View drawerView)"}, "setDrawerSlideAnimationEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: if this is true then the animation will run, else it will be skipped"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Specifies whether the drawer arrow should animate when the drawer position changes.", "history": "added in version 25.3.0", "FullName": "void setDrawerSlideAnimationEnabled (boolean enabled)"}, "isDrawerIndicatorEnabled()": {"Returns": [["boolean", "true if the enhanced drawer indicator is enabled, false otherwise"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#ActionBarDrawerToggle#setDrawerIndicatorEnabled_E@"], "Permissions": [], "Description": "", "history": "added in version 23.0.0", "FullName": "boolean isDrawerIndicatorEnabled ()"}, "syncState()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Synchronize the state of the drawer indicator/affordance with the linked DrawerLayout. This should be called from your Activity's @B_android#app#Activity#onPostCreate_E@ method to synchronize after the DrawerLayout's instance state has been restored, and any other time when the state may have diverged in such a way that the ActionBarDrawerToggle was not notified. (For example, if you stop forwarding appropriate drawer events for a period of time.)", "history": "added in version 23.0.0", "FullName": "void syncState ()"}, "getDrawerArrowDrawable()": {"Returns": [["@B_android#support#v7#graphics#drawable#DrawerArrowDrawable_E@", "DrawerArrowDrawable that is currently shown by the ActionBarDrawerToggle."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 24.2.0", "FullName": "DrawerArrowDrawable getDrawerArrowDrawable ()"}, "onDrawerStateChanged(int)": {"Returns": [], "Parameters": [["int", "int: The new drawer motion state"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "@B_android#support#v4#widget#DrawerLayout#DrawerListener_E@ callback method. If you do not use your ActionBarDrawerToggle instance directly as your DrawerLayout's listener, you should call through to this method from your own listener object.", "history": "added in version 23.0.0", "FullName": "void onDrawerStateChanged (int newState)"}, "getToolbarNavigationClickListener()": {"Returns": [["@B_android#view#View#OnClickListener_E@", "The click listener which receives Navigation click events from Toolbar when drawer indicator is disabled."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#ActionBarDrawerToggle#setToolbarNavigationClickListener_E@", "@B_android#support#v7#app#ActionBarDrawerToggle#setDrawerIndicatorEnabled_E@", "@B_android#support#v7#app#ActionBarDrawerToggle#isDrawerIndicatorEnabled_E@"], "Permissions": [], "Description": "Returns the fallback listener for Navigation icon click events.", "history": "added in version 23.0.0", "FullName": "View.OnClickListener getToolbarNavigationClickListener ()"}, "onDrawerOpened(android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: Drawer view that is now open"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "@B_android#support#v4#widget#DrawerLayout#DrawerListener_E@ callback method. If you do not use your ActionBarDrawerToggle instance directly as your DrawerLayout's listener, you should call through to this method from your own listener object.", "history": "added in version 23.0.0", "FullName": "void onDrawerOpened (View drawerView)"}, "isDrawerSlideAnimationEnabled()": {"Returns": [["boolean", "whether the drawer slide animation is enabled"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 25.3.0", "FullName": "boolean isDrawerSlideAnimationEnabled ()"}, "setDrawerIndicatorEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true to enable, false to disable"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enable or disable the drawer indicator. The indicator defaults to enabled. When the indicator is disabled, the ActionBar will revert to displaying the home-as-up indicator provided by the Activity's theme in the android.R.attr.homeAsUpIndicator attribute instead of the animated drawer glyph.", "history": "added in version 23.0.0", "FullName": "void setDrawerIndicatorEnabled (boolean enable)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v7.app.ActionBarDrawerToggle", "ClassDesc": "This class provides a handy way to tie together the functionality of @B_android#support#v4#widget#DrawerLayout_E@ and the framework ActionBar to implement the recommended design for navigation drawers. To use ActionBarDrawerToggle, create one in your Activity and call through to the following methods corresponding to your Activity callbacks: https:##developer#android#com@B_android#app#Activity#onConfigurationChanged_E@ https:##developer#android#com@B_android#app#Activity#onOptionsItemSelected_E@ Call @B_android#support#v7#app#ActionBarDrawerToggle#syncState_E@ from your Activity's https:##developer#android#com@B_android#app#Activity#onPostCreate_E@ to synchronize the indicator with the state of the linked DrawerLayout after onRestoreInstanceState has occurred. ActionBarDrawerToggle can be used directly as a @B_android#support#v4#widget#DrawerLayout#DrawerListener_E@, or if you are already providing your own listener, call through to each of the listener methods from your own. You can customize the the animated toggle by defining the @B_android#support#v7#appcompat#R#styleable#DrawerArrowToggle_E@ in your ActionBar theme."}