{"Functions": {"onClick(android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Performs the click action associated with this span.", "history": "Added in API level 1", "FullName": "public abstract void onClick (View widget)"}, "updateDrawState(android.text.TextPaint)": {"Returns": [], "Parameters": [["@B_android#text#TextPaint_E@", "TextPaint: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Makes the text underlined and in the link color.", "history": "Added in API level 1", "FullName": "public void updateDrawState (TextPaint ds)"}, "ClickableSpan()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public ClickableSpan ()"}}, "Inheritance": ["@B_android#text#style#CharacterStyle_E@"], "ClassName": "android.text.style.ClickableSpan", "ClassDesc": "If an object of this type is attached to the text of a TextView with a movement method of LinkMovementMethod, the affected spans of text can be selected. If selected and clicked, the @B_android#text#style#ClickableSpan#onClick_E@ method will be called. The text with a ClickableSpan attached will be underlined and the link color will be used as a text color. The default link color is the theme's accent color or android:textColorLink if this attribute is defined in the theme. For example, considering that we have a CustomClickableSpan that extends ClickableSpan, it can be used like this:"}