{"Functions": {"setSubscribeType(int)": {"Returns": [["@B_android#net#wifi#aware#SubscribeConfig#Builder_E@", "The builder to facilitate chaining builder.setXXX(..).setXXX(..)."]], "Parameters": [["int", "int: Subscribe session type: @B_android#net#wifi#aware#SubscribeConfig#SUBSCRIBE_TYPE_ACTIVE_E@ or @B_android#net#wifi#aware#SubscribeConfig#SUBSCRIBE_TYPE_PASSIVE_E@. Value is @B_android#net#wifi#aware#SubscribeConfig#SUBSCRIBE_TYPE_PASSIVE_E@, or @B_android#net#wifi#aware#SubscribeConfig#SUBSCRIBE_TYPE_ACTIVE_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the type of the subscribe session: active (subscribe packets are transmitted over-the-air), or passive (no subscribe packets are transmitted, a match is made against a solicited/active publish session whose packets are transmitted over-the-air).", "history": "Added in API level 26", "FullName": "public SubscribeConfig.Builder setSubscribeType (int subscribeType)"}, "setMaxDistanceMm(int)": {"Returns": [["@B_android#net#wifi#aware#SubscribeConfig#Builder_E@", "The builder to facilitate chaining builder.setXXX(..).setXXX(..)."]], "Parameters": [["int", "int: Maximum distance, in mm, to the publisher below which to trigger discovery."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Configure the maximum distance to a discovered publisher at which to trigger a discovery notification. I.e. discovery will be triggered if we've found a matching publisher (based on the other criteria in this configuration) @B_android#net#wifi#aware#SubscribeConfig#Builder#setMinDistanceMm_E@ to specify a geofence, i.e. discovery with min <= distance <= max. For ranging to be used in discovery it must also be enabled on the publisher using @B_android#net#wifi#aware#PublishConfig#Builder#setRangingEnabled_E@. However, ranging may not be available or enabled on the publisher or may be temporarily disabled on either subscriber or publisher - in such cases discovery will proceed without ranging. When ranging is enabled and available on both publisher and subscriber and a service is discovered based on geofence constraints the @B_android#net#wifi#aware#DiscoverySessionCallback#onServiceDiscoveredWithinRange_E@ is called, otherwise the @B_android#net#wifi#aware#DiscoverySessionCallback#onServiceDiscovered_E@ is called. The device must support Wi-Fi RTT for this feature to be used. Feature support is checked as described in @B_android#net#wifi#rtt#package-summary_E@.", "history": "Added in API level 28", "FullName": "public SubscribeConfig.Builder setMaxDistanceMm (int maxDistanceMm)"}, "setServiceSpecificInfo(byte[])": {"Returns": [["@B_android#net#wifi#aware#SubscribeConfig#Builder_E@", "The builder to facilitate chaining builder.setXXX(..).setXXX(..)."]], "Parameters": [["byte[]", "byte: A byte-array for the service-specific information field. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Specify service specific information for the subscribe session. This is a free-form byte array available to the application to send additional information as part of the discovery operation - i.e. it will not be used to determine whether a publish/subscribe match occurs. Optional. Empty by default.", "history": "Added in API level 26", "FullName": "public SubscribeConfig.Builder setServiceSpecificInfo (byte[] serviceSpecificInfo)"}, "setMinDistanceMm(int)": {"Returns": [["@B_android#net#wifi#aware#SubscribeConfig#Builder_E@", "The builder to facilitate chaining builder.setXXX(..).setXXX(..)."]], "Parameters": [["int", "int: Minimum distance, in mm, to the publisher above which to trigger discovery."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Configure the minimum distance to a discovered publisher at which to trigger a discovery notification. I.e. discovery will be triggered if we've found a matching publisher (based on the other criteria in this configuration) @B_android#net#wifi#aware#SubscribeConfig#Builder#setMaxDistanceMm_E@ to specify a geofence, i.e. discovery with min <= distance <= max. For ranging to be used in discovery it must also be enabled on the publisher using @B_android#net#wifi#aware#PublishConfig#Builder#setRangingEnabled_E@. However, ranging may not be available or enabled on the publisher or may be temporarily disabled on either subscriber or publisher - in such cases discovery will proceed without ranging. When ranging is enabled and available on both publisher and subscriber and a service is discovered based on geofence constraints the @B_android#net#wifi#aware#DiscoverySessionCallback#onServiceDiscoveredWithinRange_E@ is called, otherwise the @B_android#net#wifi#aware#DiscoverySessionCallback#onServiceDiscovered_E@ is called. The device must support Wi-Fi RTT for this feature to be used. Feature support is checked as described in @B_android#net#wifi#rtt#package-summary_E@.", "history": "Added in API level 28", "FullName": "public SubscribeConfig.Builder setMinDistanceMm (int minDistanceMm)"}, "setTerminateNotificationEnabled(boolean)": {"Returns": [["@B_android#net#wifi#aware#SubscribeConfig#Builder_E@", "The builder to facilitate chaining builder.setXXX(..).setXXX(..)."]], "Parameters": [["boolean", "boolean: If true the terminate callback will be called when the subscribe is terminated. Otherwise it will not be called."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Configure whether a subscribe terminate notification @B_android#net#wifi#aware#DiscoverySessionCallback#onSessionTerminated_E@ is reported back to the callback.", "history": "Added in API level 26", "FullName": "public SubscribeConfig.Builder setTerminateNotificationEnabled (boolean enable)"}, "setTtlSec(int)": {"Returns": [["@B_android#net#wifi#aware#SubscribeConfig#Builder_E@", "The builder to facilitate chaining builder.setXXX(..).setXXX(..)."]], "Parameters": [["int", "int: Lifetime of a subscribe session in seconds."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the time interval (in seconds) an active ( @B_android#net#wifi#aware#SubscribeConfig#Builder#setSubscribeType_E@) subscribe session will be alive - i.e. broadcasting a packet. When the TTL is reached an event will be generated for @B_android#net#wifi#aware#DiscoverySessionCallback#onSessionTerminated_E@. Optional. 0 by default - indicating the session doesn't terminate on its own. Session will be terminated when @B_android#net#wifi#aware#DiscoverySession#close_E@ is called.", "history": "Added in API level 26", "FullName": "public SubscribeConfig.Builder setTtlSec (int ttlSec)"}, "setMatchFilter(java.util.List<byte[]>)": {"Returns": [["@B_android#net#wifi#aware#SubscribeConfig#Builder_E@", "The builder to facilitate chaining builder.setXXX(..).setXXX(..)."]], "Parameters": [["@B_java#util#List_E@", "List: A list of match filter entries (each of which is an arbitrary byte array). This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The match filter for a subscribe session. Used to determine whether a service discovery occurred - in addition to relying on the service name. Optional. Empty by default.", "history": "Added in API level 26", "FullName": "public SubscribeConfig.Builder setMatchFilter (List<byte[]> matchFilter)"}, "setServiceName(java.lang.String)": {"Returns": [["@B_android#net#wifi#aware#SubscribeConfig#Builder_E@", "The builder to facilitate chaining builder.setXXX(..).setXXX(..)."]], "Parameters": [["@B_java#lang#String_E@", "String: The service name for the subscribe session. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Specify the service name of the subscribe session. The actual on-air value is a 6 byte hashed representation of this string. The Service Name is a UTF-8 encoded string from 1 to 255 bytes in length. The only acceptable single-byte UTF-8 symbols for a Service Name are alphanumeric values (A-Z, a-z, 0-9), the hyphen ('-'), and the period ('.'). All valid multi-byte UTF-8 characters are acceptable in a Service Name. Must be called - an empty ServiceName is not valid.", "history": "Added in API level 26", "FullName": "public SubscribeConfig.Builder setServiceName (String serviceName)"}, "build()": {"Returns": [["@B_android#net#wifi#aware#SubscribeConfig_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Build @B_android#net#wifi#aware#SubscribeConfig_E@ given the current requests made on the builder.", "history": "Added in API level 26", "FullName": "public SubscribeConfig build ()"}, "SubscribeConfig.Builder()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 26", "FullName": "public SubscribeConfig.Builder ()"}}, "Inheritance": [], "ClassName": "android.net.wifi.aware.SubscribeConfig.Builder", "ClassDesc": "Builder used to build @B_android#net#wifi#aware#SubscribeConfig_E@ objects."}