{"Functions": {"play(android.content.Context,android.net.Uri,boolean,int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: Your application's context."], ["@B_android#net#Uri_E@", "Uri: The URI to play. (see @B_android#media#MediaPlayer#setDataSource_E@)"], ["boolean", "boolean: Whether the audio should loop forever. (see @B_android#media#MediaPlayer#setLooping_E@)"], ["int", "int: the AudioStream to use. (see @B_android#media#MediaPlayer#setAudioStreamType_E@)"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "use @B_android#media#AsyncPlayer#play_E@ instead Start playing the sound. It will actually start playing at some point in the future. There are no guarantees about latency here. Calling this before another audio file is done playing will stop that one and start the new one.", "history": "Added in API level 1 Deprecated in API level 23", "FullName": "public void play (Context context, Uri uri, boolean looping, int stream)"}, "stop()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Stop a previously played sound. It can't be played again or unpaused at this point. Calling this multiple times has no ill effects.", "history": "Added in API level 1", "FullName": "public void stop ()"}, "AsyncPlayer(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a string to use for debugging"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Construct an AsyncPlayer object.", "history": "Added in API level 1", "FullName": "public AsyncPlayer (String tag)"}, "play(android.content.Context,android.net.Uri,boolean,android.media.AudioAttributes)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: the non-null application's context. This value must never be null."], ["@B_android#net#Uri_E@", "Uri: the non-null URI to play. (see @B_android#media#MediaPlayer#setDataSource_E@) This value must never be null."], ["boolean", "boolean: whether the audio should loop forever. (see @B_android#media#MediaPlayer#setLooping_E@)"], ["@B_android#media#AudioAttributes_E@", "AudioAttributes: the non-null @B_android#media#AudioAttributes_E@ to use. (see @B_android#media#MediaPlayer#setAudioAttributes_E@) This value must never be null."]], "Throws": [["", "java.lang.IllegalArgumentException"], ["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Start playing the sound. It will actually start playing at some point in the future. There are no guarantees about latency here. Calling this before another audio file is done playing will stop that one and start the new one.", "history": "Added in API level 23", "FullName": "public void play (Context context, Uri uri, boolean looping, AudioAttributes attributes)"}}, "Inheritance": [], "ClassName": "android.media.AsyncPlayer", "ClassDesc": "Plays a series of audio URIs, but does all the hard work on another thread so that any slowness with preparing or loading doesn't block the calling thread."}