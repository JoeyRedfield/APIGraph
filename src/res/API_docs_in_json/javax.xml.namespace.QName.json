{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "String representation of this QName"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "String representation of this QName. The commonly accepted way of representing a QName as a String was standard specification, it is in common use, e.g. @B_javax#xml#transform#Transformer#setParameter_E@. This implementation represents a QName as: \"{\" + Namespace URI + \"}\" + local part. If the Namespace URI .equals(XMLConstants.NULL_NS_URI), only the local part is returned. An appropriate use of this method is for debugging or logging for human consumption. Note the prefix value is String representation. This method satisfies the general contract of @B_java#lang#Object#toString_E@.", "history": "Added in API level 8", "FullName": "public String toString ()"}, "getLocalPart()": {"Returns": [["@B_java#lang#String_E@", "local part of this QName"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the local part of this QName.", "history": "Added in API level 8", "FullName": "public String getLocalPart ()"}, "QName(java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: Namespace URI of the QName"], ["@B_java#lang#String_E@", "String: local part of the QName"]], "Throws": [], "SeeAlso": ["@B_javax#xml#namespace#QName#QName_E@"], "Permissions": [], "Description": "QName constructor specifying the Namespace URI and local part. If the Namespace URI is null, it is set to @B_javax#xml#XMLConstants#NULL_NS_URI_E@. This value represents no explicitly defined Namespace as defined by the @B_javax#xml#XMLConstants#NULL_NS_URI_E@ value is the preferred coding style. If the local part is null an IllegalArgumentException is thrown. A local part of \"\" is allowed to preserve compatible behavior with QName 1.0. When using this constructor, the prefix is set to @B_javax#xml#XMLConstants#DEFAULT_NS_PREFIX_E@. The Namespace URI is not validated as a", "history": "Added in API level 8", "FullName": "public QName (String namespaceURI, String localPart)"}, "QName(java.lang.String,java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: Namespace URI of the QName"], ["@B_java#lang#String_E@", "String: local part of the QName"], ["@B_java#lang#String_E@", "String: prefix of the QName"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "QName constructor specifying the Namespace URI, local part and prefix. If the Namespace URI is null, it is set to @B_javax#xml#XMLConstants#NULL_NS_URI_E@. This value represents no explicitly defined Namespace as defined by the @B_javax#xml#XMLConstants#NULL_NS_URI_E@ value is the preferred coding style. If the local part is null an IllegalArgumentException is thrown. A local part of \"\" is allowed to preserve compatible behavior with QName 1.0. If the prefix is null, an IllegalArgumentException is thrown. Use @B_javax#xml#XMLConstants#DEFAULT_NS_PREFIX_E@ to explicitly indicate that no prefix is present or the prefix is not relevant. The Namespace URI is not validated as a", "history": "Added in API level 8", "FullName": "public QName (String namespaceURI, String localPart, String prefix)"}, "valueOf(java.lang.String)": {"Returns": [["@B_javax#xml#namespace#QName_E@", "QName corresponding to the given String"]], "Parameters": [["@B_java#lang#String_E@", "String: String representation of the QName"]], "Throws": [], "SeeAlso": ["@B_javax#xml#namespace#QName#toString_E@"], "Permissions": [], "Description": "QName derived from parsing the formatted String. If the String is null or does not conform to @B_javax#xml#namespace#QName#toString_E@ formatting, an IllegalArgumentException is thrown. The String @B_javax#xml#namespace#QName#toString_E@. The commonly accepted way of representing a QName as a String was standard specification, it is in common use, e.g. @B_javax#xml#transform#Transformer#setParameter_E@. This implementation parses a String formatted as: \"{\" + Namespace URI + \"}\" + local part. If the Namespace URI .equals(XMLConstants.NULL_NS_URI), only the local part should be provided. The prefix value String and will be set to @B_javax#xml#XMLConstants#DEFAULT_NS_PREFIX_E@. This method does not do full validation of the resulting QName. The Namespace URI is not validated as a", "history": "Added in API level 8", "FullName": "public static QName valueOf (String qNameAsString)"}, "getPrefix()": {"Returns": [["@B_java#lang#String_E@", "prefix of this QName"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the prefix of this QName. The prefix assigned to a QName might QName may be assigned a prefix in the context of parsing a document but that prefix may be invalid in the context of a different document.", "history": "Added in API level 8", "FullName": "public String getPrefix ()"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if the given Object is equal to this QName else false"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the Object to test for equality with this QName"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Test this QName for equality with another Object. If the Object to be tested is not a QName or is null, then this method returns false. Two QNames are considered equal if and only if both the Namespace URI and local part are equal. This method uses String.equals() to check equality of the Namespace URI and local part. The prefix is This method satisfies the general contract of @B_java#lang#Object#equals_E@", "history": "Added in API level 8", "FullName": "public final boolean equals (Object objectToTest)"}, "getNamespaceURI()": {"Returns": [["@B_java#lang#String_E@", "Namespace URI of this QName"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the Namespace URI of this QName.", "history": "Added in API level 8", "FullName": "public String getNamespaceURI ()"}, "QName(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: local part of the QName"]], "Throws": [], "SeeAlso": ["@B_javax#xml#namespace#QName#QName_E@"], "Permissions": [], "Description": "QName constructor specifying the local part. If the local part is null an IllegalArgumentException is thrown. A local part of \"\" is allowed to preserve compatible behavior with QName 1.0. When using this constructor, the Namespace URI is set to @B_javax#xml#XMLConstants#NULL_NS_URI_E@ and the prefix is set to @B_javax#xml#XMLConstants#DEFAULT_NS_PREFIX_E@. In an XML context, all Element and Attribute names exist in the context of a Namespace. Making this explicit during the construction of a QName helps prevent hard to diagnosis XML validity errors. The constructors @B_javax#xml#namespace#QName#QName_E@ and @B_javax#xml#namespace#QName#QName_E@ are preferred. The local part is not validated as a", "history": "Added in API level 8", "FullName": "public QName (String localPart)"}, "QName(java.lang.String, java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: Namespace URI of the QName"], ["@B_java#lang#String_E@", "String: local part of the QName"]], "Throws": [], "SeeAlso": ["@B_javax#xml#namespace#QName#QName_E@"], "Permissions": [], "Description": "QName constructor specifying the Namespace URI and local part. If the Namespace URI is null, it is set to @B_javax#xml#XMLConstants#NULL_NS_URI_E@. This value represents no explicitly defined Namespace as defined by the @B_javax#xml#XMLConstants#NULL_NS_URI_E@ value is the preferred coding style. If the local part is null an IllegalArgumentException is thrown. A local part of \"\" is allowed to preserve compatible behavior with QName 1.0. When using this constructor, the prefix is set to @B_javax#xml#XMLConstants#DEFAULT_NS_PREFIX_E@. The Namespace URI is not validated as a", "history": "added in API level 8", "FullName": "public QName (String namespaceURI, String localPart)"}, "hashCode()": {"Returns": [["int", "hash code for this QName Object"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Generate the hash code for this QName. The hash code is calculated using both the Namespace URI and the local part of the QName. The prefix is This method satisfies the general contract of @B_java#lang#Object#hashCode_E@.", "history": "Added in API level 8", "FullName": "public final int hashCode ()"}}, "Inheritance": [], "ClassName": "javax.xml.namespace.QName", "ClassDesc": "QName represents a The value of a QName contains a The prefix is included in QName to retain lexical information @B_javax#xml#transform#Source_E@. The prefix is @B_javax#xml#namespace#QName#equals_E@ or to compute the @B_javax#xml#namespace#QName#hashCode_E@. Equality and the hash code are defined using If not specified, the Namespace URI is set to @B_javax#xml#XMLConstants#NULL_NS_URI_E@. If not specified, the prefix is set to @B_javax#xml#XMLConstants#DEFAULT_NS_PREFIX_E@. QName is immutable."}