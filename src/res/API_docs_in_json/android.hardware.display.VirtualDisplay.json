{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 19", "FullName": "public String toString ()"}, "getDisplay()": {"Returns": [["@B_android#view#Display_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the virtual display.", "history": "Added in API level 19", "FullName": "public Display getDisplay ()"}, "setSurface(android.view.Surface)": {"Returns": [], "Parameters": [["@B_android#view#Surface_E@", "Surface: The surface to set, or null to detach the surface from the virtual display."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the surface that backs the virtual display. Detaching the surface that backs a virtual display has a similar effect to turning off the screen. It is still the caller's responsibility to destroy the surface after it has been detached.", "history": "Added in API level 20", "FullName": "public void setSurface (Surface surface)"}, "release()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Releases the virtual display and destroys its underlying surface. All remaining windows on the virtual display will be forcibly removed as part of releasing the virtual display.", "history": "Added in API level 19", "FullName": "public void release ()"}, "getSurface()": {"Returns": [["@B_android#view#Surface_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the surface that backs the virtual display.", "history": "Added in API level 20", "FullName": "public Surface getSurface ()"}, "resize(int,int,int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asks the virtual display to resize. This is really just a convenience to allow applications using virtual displays to adapt to changing conditions without having to tear down and recreate the display.", "history": "Added in API level 21", "FullName": "public void resize (int width, int height, int densityDpi)"}, "resize(int, int, int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asks the virtual display to resize. This is really just a convenience to allow applications using virtual displays to adapt to changing conditions without having to tear down and recreate the display.", "history": "added in API level 21", "FullName": "public void resize (int width, int height, int densityDpi)"}}, "Inheritance": [], "ClassName": "android.hardware.display.VirtualDisplay", "ClassDesc": "Represents a virtual display. The content of a virtual display is rendered to a @B_android#view#Surface_E@ that you must provide to @B_android#hardware#display#DisplayManager#createVirtualDisplay_E@. Because a virtual display renders to a surface provided by the application, it will be released automatically when the process terminates and all remaining windows on it will be forcibly removed. However, you should also explicitly call @B_android#hardware#display#VirtualDisplay#release_E@ when you're done with it."}