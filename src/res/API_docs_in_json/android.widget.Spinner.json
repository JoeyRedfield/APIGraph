{"Functions": {"onClick(android.content.DialogInterface,int)": {"Returns": [], "Parameters": [["@B_android#content#DialogInterface_E@", "DialogInterface: the dialog that received the click"], ["int", "int: the button that was clicked (ex. @B_android#content#DialogInterface#BUTTON_POSITIVE_E@) or the position of the item clicked"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method will be invoked when a button in the dialog is clicked.", "history": "Added in API level 1", "FullName": "public void onClick (DialogInterface dialog, int which)"}, "Spinner(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The Context the view is running in, through which it can access the current theme, resources, etc."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new spinner with the given context's theme.", "history": "Added in API level 1", "FullName": "public Spinner (Context context)"}, "onMeasure(int, int)": {"Returns": [], "Parameters": [["int", "int: horizontal space requirements as imposed by the parent. The requirements are encoded with @B_android#view#View#MeasureSpec_E@."], ["int", "int: vertical space requirements as imposed by the parent. The requirements are encoded with @B_android#view#View#MeasureSpec_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Measure the view and its content to determine the measured width and the measured height. This method is invoked by @B_android#view#View#measure_E@ and should be overridden by subclasses to provide accurate and efficient measurement of their contents. must call @B_android#view#View#setMeasuredDimension_E@ to store the measured width and height of this view. Failure to do so will trigger an IllegalStateException, thrown by @B_android#view#View#measure_E@. Calling the superclass' @B_android#view#View#onMeasure_E@ is a valid use. The base class implementation of measure defaults to the background size, unless a larger size is allowed by the MeasureSpec. Subclasses should override @B_android#view#View#onMeasure_E@ to provide better measurements of their content. If this method is overridden, it is the subclass's responsibility to make sure the measured height and width are at least the view's minimum height and width (@B_android#view#View#getSuggestedMinimumHeight_E@ and @B_android#view#View#getSuggestedMinimumWidth_E@).", "history": "added in API level 1", "FullName": "protected void onMeasure (int widthMeasureSpec, int heightMeasureSpec)"}, "getPopupBackground()": {"Returns": [["@B_android#graphics#drawable#Drawable_E@", "background Background drawable"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the background drawable for the spinner's popup window of choices. Only valid in @B_android#widget#Spinner#MODE_DROPDOWN_E@; other modes will return null.", "history": "Added in API level 16", "FullName": "public Drawable getPopupBackground ()"}, "onMeasure(int,int)": {"Returns": [], "Parameters": [["int", "int: horizontal space requirements as imposed by the parent. The requirements are encoded with @B_android#view#View#MeasureSpec_E@."], ["int", "int: vertical space requirements as imposed by the parent. The requirements are encoded with @B_android#view#View#MeasureSpec_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Measure the view and its content to determine the measured width and the measured height. This method is invoked by @B_android#view#View#measure_E@ and should be overridden by subclasses to provide accurate and efficient measurement of their contents. must call @B_android#view#View#setMeasuredDimension_E@ to store the measured width and height of this view. Failure to do so will trigger an IllegalStateException, thrown by @B_android#view#View#measure_E@. Calling the superclass' @B_android#view#View#onMeasure_E@ is a valid use. The base class implementation of measure defaults to the background size, unless a larger size is allowed by the MeasureSpec. Subclasses should override @B_android#view#View#onMeasure_E@ to provide better measurements of their content. If this method is overridden, it is the subclass's responsibility to make sure the measured height and width are at least the view's minimum height and width (@B_android#view#View#getSuggestedMinimumHeight_E@ and @B_android#view#View#getSuggestedMinimumWidth_E@).", "history": "Added in API level 1", "FullName": "protected void onMeasure (int widthMeasureSpec, int heightMeasureSpec)"}, "onLayout(boolean,int,int,int,int)": {"Returns": [], "Parameters": [["boolean", "boolean: This is a new size or position for this view"], ["int", "int: Left position, relative to parent"], ["int", "int: Top position, relative to parent"], ["int", "int: Right position, relative to parent"], ["int", "int: Bottom position, relative to parent"]], "Throws": [], "SeeAlso": ["@B_android#view#View#onLayout_E@"], "Permissions": [], "Description": "Called from layout when this view should assign a size and position to each of its children. Derived classes with children should override this method and call layout on each of their children.", "history": "Added in API level 1", "FullName": "protected void onLayout (boolean changed, int l, int t, int r, int b)"}, "setAdapter(android.widget.SpinnerAdapter)": {"Returns": [], "Parameters": [["@B_android#widget#SpinnerAdapter_E@", "SpinnerAdapter: the adapter to set"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the adapter has more than one view type"]], "SeeAlso": ["@B_android#widget#AbsSpinner#setAdapter_E@"], "Permissions": [], "Description": "Sets the @B_android#widget#SpinnerAdapter_E@ used to provide the data which backs this Spinner. If this Spinner has a popup theme set in XML via the @B_android#R#styleable#Spinner_popupTheme_E@ attribute, the adapter should inflate drop-down views using the same theme. The easiest way to achieve this is by using @B_android#widget#Spinner#getPopupContext_E@ to obtain a layout inflater for use in @B_android#widget#SpinnerAdapter#getDropDownView_E@. Spinner overrides @B_android#widget#Adapter#getViewTypeCount_E@ on the Adapter associated with this view. Calling @B_android#widget#Adapter#getItemViewType_E@ on the object returned from @B_android#widget#AbsSpinner#getAdapter_E@ will always return 0. Calling @B_android#widget#Adapter#getViewTypeCount_E@ will always return 1. On API @B_android#os#Build#VERSION_CODES#LOLLIPOP_E@ and above, attempting to set an adapter with more than one view type will throw an @B_java#lang#IllegalArgumentException_E@.", "history": "Added in API level 1", "FullName": "public void setAdapter (SpinnerAdapter adapter)"}, "setGravity(int)": {"Returns": [], "Parameters": [["int", "int: See @B_android#view#Gravity_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describes how the selected item view is positioned. Currently only the horizontal component is used. The default is determined by the current theme.", "history": "Added in API level 11", "FullName": "public void setGravity (int gravity)"}, "onDetachedFromWindow()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This is called when the view is detached from a window. At this point it no longer has a surface for drawing. If you override this method you must call through to the superclass implementation.", "history": "Added in API level 1", "FullName": "protected void onDetachedFromWindow ()"}, "setPopupBackgroundResource(int)": {"Returns": [], "Parameters": [["int", "int: Resource ID of a background drawable"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the background drawable for the spinner's popup window of choices. Only valid in @B_android#widget#Spinner#MODE_DROPDOWN_E@; this method is a no-op in other modes.", "history": "Added in API level 16", "FullName": "public void setPopupBackgroundResource (int resId)"}, "getGravity()": {"Returns": [["int", "A @B_android#view#Gravity_E@ value"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describes how the selected item view is positioned. The default is determined by the current theme.", "history": "Added in API level 16", "FullName": "public int getGravity ()"}, "performClick()": {"Returns": [["boolean", "True there was an assigned OnClickListener that was called, false otherwise is returned."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Call this view's OnClickListener, if it is defined. Performs all normal actions associated with clicking: reporting accessibility event, playing a sound, etc.", "history": "Added in API level 1", "FullName": "public boolean performClick ()"}, "setDropDownVerticalOffset(int)": {"Returns": [], "Parameters": [["int", "int: Vertical offset in pixels"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a vertical offset in pixels for the spinner's popup window of choices. Only valid in @B_android#widget#Spinner#MODE_DROPDOWN_E@; this method is a no-op in other modes.", "history": "Added in API level 16", "FullName": "public void setDropDownVerticalOffset (int pixels)"}, "onLayout(boolean, int, int, int, int)": {"Returns": [], "Parameters": [["boolean", "boolean: This is a new size or position for this view"], ["int", "int: Left position, relative to parent"], ["int", "int: Top position, relative to parent"], ["int", "int: Right position, relative to parent"], ["int", "int: Bottom position, relative to parent"]], "Throws": [], "SeeAlso": ["@B_android#view#View#onLayout_E@"], "Permissions": [], "Description": "Called from layout when this view should assign a size and position to each of its children. Derived classes with children should override this method and call layout on each of their children.", "history": "added in API level 1", "FullName": "protected void onLayout (boolean changed, int l, int t, int r, int b)"}, "setEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: True if this view is enabled, false otherwise."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the enabled state of this view. The interpretation of the enabled state varies by subclass.", "history": "Added in API level 1", "FullName": "public void setEnabled (boolean enabled)"}, "Spinner(android.content.Context,android.util.AttributeSet,int,int,int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The Context the view is running in, through which it can access the current theme, resources, etc."], ["@B_android#util#AttributeSet_E@", "AttributeSet: The attributes of the XML tag that is inflating the view."], ["int", "int: An attribute in the current theme that contains a reference to a style resource that supplies default values for the view. Can be 0 to not look for defaults."], ["int", "int: A resource identifier of a style resource that supplies default values for the view, used only if defStyleAttr is 0 or can not be found in the theme. Can be 0 to not look for defaults."], ["int", "int: Constant describing how the user will select choices from the spinner."]], "Throws": [], "SeeAlso": ["@B_android#widget#Spinner_E@"], "Permissions": [], "Description": "Constructs a new spinner with the given context's theme, the supplied attribute set, and default styles. mode may be one of @B_android#widget#Spinner#MODE_DIALOG_E@ or @B_android#widget#Spinner#MODE_DROPDOWN_E@ and determines how the user will select choices from the spinner.", "history": "Added in API level 21", "FullName": "public Spinner (Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes, int mode)"}, "getDropDownHorizontalOffset()": {"Returns": [["int", "Horizontal offset in pixels"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the configured horizontal offset in pixels for the spinner's popup window of choices. Only valid in @B_android#widget#Spinner#MODE_DROPDOWN_E@; other modes will return 0.", "history": "Added in API level 16", "FullName": "public int getDropDownHorizontalOffset ()"}, "setPrompt(java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: the prompt to set"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the prompt to display when the dialog is shown.", "history": "Added in API level 1", "FullName": "public void setPrompt (CharSequence prompt)"}, "onResolvePointerIcon(android.view.MotionEvent,int)": {"Returns": [["@B_android#view#PointerIcon_E@", "no returns description in source"]], "Parameters": [["@B_android#view#MotionEvent_E@", "MotionEvent: The MotionEvent from a mouse"], ["int", "int: The index of the pointer for which to retrieve the @B_android#view#PointerIcon_E@. This will be between 0 and @B_android#view#MotionEvent#getPointerCount_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the pointer icon for the motion event, or null if it doesn't specify the icon. The default implementation does not care the location or event types, but some subclasses may use it (such as WebViews).", "history": "Added in API level 24", "FullName": "public PointerIcon onResolvePointerIcon (MotionEvent event, int pointerIndex)"}, "setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)": {"Returns": [], "Parameters": [["@B_android#widget#AdapterView#OnItemClickListener_E@", "AdapterView.OnItemClickListener: this listener will be ignored"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "A spinner does not support item click events. Calling this method will raise an exception. Instead use @B_android#widget#AdapterView#setOnItemSelectedListener_E@.", "history": "Added in API level 1", "FullName": "public void setOnItemClickListener (AdapterView.OnItemClickListener l)"}, "Spinner(android.content.Context,android.util.AttributeSet)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The Context the view is running in, through which it can access the current theme, resources, etc."], ["@B_android#util#AttributeSet_E@", "AttributeSet: The attributes of the XML tag that is inflating the view."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new spinner with the given context's theme and the supplied attribute set.", "history": "Added in API level 1", "FullName": "public Spinner (Context context, AttributeSet attrs)"}, "setPopupBackgroundDrawable(android.graphics.drawable.Drawable)": {"Returns": [], "Parameters": [["@B_android#graphics#drawable#Drawable_E@", "Drawable: Background drawable"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the background drawable for the spinner's popup window of choices. Only valid in @B_android#widget#Spinner#MODE_DROPDOWN_E@; this method is a no-op in other modes.", "history": "Added in API level 16", "FullName": "public void setPopupBackgroundDrawable (Drawable background)"}, "getPrompt()": {"Returns": [["@B_java#lang#CharSequence_E@", "The prompt to display when the dialog is shown"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public CharSequence getPrompt ()"}, "getBaseline()": {"Returns": [["int", "the offset of the baseline within the widget's bounds or -1 if baseline alignment is not supported"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the offset of the widget's text baseline from the widget's top boundary. If this widget does not support baseline alignment, this method returns -1.", "history": "Added in API level 1", "FullName": "public int getBaseline ()"}, "onRestoreInstanceState(android.os.Parcelable)": {"Returns": [], "Parameters": [["@B_android#os#Parcelable_E@", "Parcelable: The frozen state that had previously been returned by @B_android#widget#Spinner#onSaveInstanceState_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Hook allowing a view to re-apply a representation of its internal state that had previously been generated by @B_android#view#View#onSaveInstanceState_E@. This function will never be called with a null state. If you override this method you must call through to the superclass implementation.", "history": "Added in API level 1", "FullName": "public void onRestoreInstanceState (Parcelable state)"}, "Spinner(android.content.Context,android.util.AttributeSet,int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The Context the view is running in, through which it can access the current theme, resources, etc."], ["@B_android#util#AttributeSet_E@", "AttributeSet: The attributes of the XML tag that is inflating the view."], ["int", "int: An attribute in the current theme that contains a reference to a style resource that supplies default values for the view. Can be 0 to not look for defaults."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new spinner with the given context's theme, the supplied attribute set, and default style attribute.", "history": "Added in API level 1", "FullName": "public Spinner (Context context, AttributeSet attrs, int defStyleAttr)"}, "Spinner(android.content.Context,android.util.AttributeSet,int,int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The Context the view is running in, through which it can access the current theme, resources, etc."], ["@B_android#util#AttributeSet_E@", "AttributeSet: The attributes of the XML tag that is inflating the view."], ["int", "int: An attribute in the current theme that contains a reference to a style resource that supplies default values for the view. Can be 0 to not look for defaults."], ["int", "int: Constant describing how the user will select choices from the spinner."]], "Throws": [], "SeeAlso": ["@B_android#widget#Spinner_E@"], "Permissions": [], "Description": "Constructs a new spinner with the given context's theme, the supplied attribute set, and default style attribute. mode may be one of @B_android#widget#Spinner#MODE_DIALOG_E@ or @B_android#widget#Spinner#MODE_DROPDOWN_E@ and determines how the user will select choices from the spinner.", "history": "Added in API level 11", "FullName": "public Spinner (Context context, AttributeSet attrs, int defStyleAttr, int mode)"}, "setDropDownWidth(int)": {"Returns": [], "Parameters": [["int", "int: Width in pixels, WRAP_CONTENT, or MATCH_PARENT"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the width of the spinner's popup window of choices in pixels. This value may also be set to @B_android#view#ViewGroup#LayoutParams#MATCH_PARENT_E@ to match the width of the Spinner itself, or @B_android#view#ViewGroup#LayoutParams#WRAP_CONTENT_E@ to wrap to the measured size of contained dropdown list items. Only valid in @B_android#widget#Spinner#MODE_DROPDOWN_E@; this method is a no-op in other modes.", "history": "Added in API level 16", "FullName": "public void setDropDownWidth (int pixels)"}, "onClick(android.content.DialogInterface, int)": {"Returns": [], "Parameters": [["@B_android#content#DialogInterface_E@", "DialogInterface: the dialog that received the click"], ["int", "int: the button that was clicked (ex. @B_android#content#DialogInterface#BUTTON_POSITIVE_E@) or the position of the item clicked"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method will be invoked when a button in the dialog is clicked.", "history": "added in API level 1", "FullName": "public void onClick (DialogInterface dialog, int which)"}, "setPromptId(int)": {"Returns": [], "Parameters": [["int", "int: the resource ID of the prompt to display when the dialog is shown"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the prompt to display when the dialog is shown.", "history": "Added in API level 1", "FullName": "public void setPromptId (int promptId)"}, "Spinner(android.content.Context, int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The Context the view is running in, through which it can access the current theme, resources, etc."], ["int", "int: Constant describing how the user will select choices from the spinner."]], "Throws": [], "SeeAlso": ["@B_android#widget#Spinner_E@"], "Permissions": [], "Description": "Constructs a new spinner with the given context's theme and the supplied mode of displaying choices. mode may be one of @B_android#widget#Spinner#MODE_DIALOG_E@ or @B_android#widget#Spinner#MODE_DROPDOWN_E@.", "history": "added in API level 11", "FullName": "public Spinner (Context context, int mode)"}, "Spinner(android.content.Context,int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The Context the view is running in, through which it can access the current theme, resources, etc."], ["int", "int: Constant describing how the user will select choices from the spinner."]], "Throws": [], "SeeAlso": ["@B_android#widget#Spinner_E@"], "Permissions": [], "Description": "Constructs a new spinner with the given context's theme and the supplied mode of displaying choices. mode may be one of @B_android#widget#Spinner#MODE_DIALOG_E@ or @B_android#widget#Spinner#MODE_DROPDOWN_E@.", "history": "Added in API level 11", "FullName": "public Spinner (Context context, int mode)"}, "onTouchEvent(android.view.MotionEvent)": {"Returns": [["boolean", "True if the event was handled, false otherwise."]], "Parameters": [["@B_android#view#MotionEvent_E@", "MotionEvent: The motion event."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Implement this method to handle touch screen motion events. If this method is used to detect click actions, it is recommended that the actions be performed by implementing and calling @B_android#view#View#performClick_E@. This will ensure consistent system behavior, including: obeying click sound preferences dispatching OnClickListener calls handling @B_android#view#accessibility#AccessibilityNodeInfo#ACTION_CLICK_E@ when accessibility features are enabled", "history": "Added in API level 1", "FullName": "public boolean onTouchEvent (MotionEvent event)"}, "onSaveInstanceState()": {"Returns": [["@B_android#os#Parcelable_E@", "Returns a Parcelable object containing the view's current dynamic state, or null if there is nothing interesting to save."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Hook allowing a view to generate a representation of its internal state that can later be used to create a new instance with that same state. This state should only contain information that is not persistent or can not be reconstructed later. For example, you will never store your current position on screen because that will be computed again when a new instance of the view is placed in its view hierarchy. Some examples of things you may store here: the current cursor position in a text view (but usually not the text itself since that is stored in a content provider or other persistent storage), the currently selected item in a list view. If you override this method you must call through to the superclass implementation.", "history": "Added in API level 1", "FullName": "public Parcelable onSaveInstanceState ()"}, "Spinner(android.content.Context,android.util.AttributeSet,int,int,int,android.content.res.Resources.Theme)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The context against which the view is inflated, which provides access to the current theme, resources, etc."], ["@B_android#util#AttributeSet_E@", "AttributeSet: The attributes of the XML tag that is inflating the view."], ["int", "int: An attribute in the current theme that contains a reference to a style resource that supplies default values for the view. Can be 0 to not look for defaults."], ["int", "int: A resource identifier of a style resource that supplies default values for the view, used only if defStyleAttr is 0 or can not be found in the theme. Can be 0 to not look for defaults."], ["int", "int: Constant describing how the user will select choices from the spinner."], ["@B_android#content#res#Resources#Theme_E@", "Resources.Theme: The theme against which the dialog or dropdown popup should be inflated. May be null to use the view theme. If set, this will override any value specified by @B_android#R#styleable#Spinner_popupTheme_E@."]], "Throws": [], "SeeAlso": ["@B_android#widget#Spinner_E@"], "Permissions": [], "Description": "Constructs a new spinner with the given context, the supplied attribute set, default styles, popup mode (one of @B_android#widget#Spinner#MODE_DIALOG_E@ or @B_android#widget#Spinner#MODE_DROPDOWN_E@), and the theme against which the popup should be inflated.", "history": "Added in API level 23", "FullName": "public Spinner (Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes, int mode, Resources.Theme popupTheme)"}, "setDropDownHorizontalOffset(int)": {"Returns": [], "Parameters": [["int", "int: Horizontal offset in pixels"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a horizontal offset in pixels for the spinner's popup window of choices. Only valid in @B_android#widget#Spinner#MODE_DROPDOWN_E@; this method is a no-op in other modes.", "history": "Added in API level 16", "FullName": "public void setDropDownHorizontalOffset (int pixels)"}, "getDropDownWidth()": {"Returns": [["int", "Width in pixels, WRAP_CONTENT, or MATCH_PARENT"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the configured width of the spinner's popup window of choices in pixels. The returned value may also be @B_android#view#ViewGroup#LayoutParams#MATCH_PARENT_E@ meaning the popup window will match the width of the Spinner itself, or @B_android#view#ViewGroup#LayoutParams#WRAP_CONTENT_E@ to wrap to the measured size of contained dropdown list items.", "history": "Added in API level 16", "FullName": "public int getDropDownWidth ()"}, "getPopupContext()": {"Returns": [["@B_android#content#Context_E@", "the context used to inflate the Spinner's popup or dialog window"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public Context getPopupContext ()"}, "getAccessibilityClassName()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the class name of this object to be used for accessibility purposes. Subclasses should only override this if they are implementing something that should be seen as a completely new class of view when used by accessibility, unrelated to the class it is deriving from. This is used to fill in @B_android#view#accessibility#AccessibilityNodeInfo#setClassName_E@.", "history": "Added in API level 23", "FullName": "public CharSequence getAccessibilityClassName ()"}, "getDropDownVerticalOffset()": {"Returns": [["int", "Vertical offset in pixels"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the configured vertical offset in pixels for the spinner's popup window of choices. Only valid in @B_android#widget#Spinner#MODE_DROPDOWN_E@; other modes will return 0.", "history": "Added in API level 16", "FullName": "public int getDropDownVerticalOffset ()"}}, "Inheritance": ["@B_android#view#View_E@", "@B_android#view#ViewGroup_E@", "@B_android#widget#AdapterView_E@", "@B_android#widget#AbsSpinner_E@"], "ClassName": "android.widget.Spinner", "ClassDesc": "A view that displays one child at a time and lets the user pick among them. The items in the Spinner come from the @B_android#widget#Adapter_E@ associated with this view. See the"}