{"Functions": {"getPort()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public int getPort ()"}, "getHost()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public String getHost ()"}, "IntentFilter.AuthorityEntry(java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public IntentFilter.AuthorityEntry (String host, String port)"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if this object is the same as the obj argument; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the reference object with which to compare."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether some other object is \"equal to\" this one. The equals method implements an equivalence relation on non-null object references: It is x, x.equals(x) should return true. It is x and y, x.equals(y) should return true if and only if y.equals(x) returns true. It is x, y, and z, if x.equals(y) returns true and y.equals(z) returns true, then x.equals(z) should return true. It is x and y, multiple invocations of x.equals(y) consistently return true or consistently return false, provided no information used in equals comparisons on the objects is modified. For any non-null reference value x, x.equals(null) should return false. The equals method for class Object implements the most discriminating possible equivalence relation on objects; that is, for any non-null reference values x and y, this method returns true if and only if x and y refer to the same object (x == y has the value true). Note that it is generally necessary to override the hashCode method whenever this method is overridden, so as to maintain the general contract for the hashCode method, which states that equal objects must have equal hash codes.", "history": "Added in API level 1", "FullName": "public boolean equals (Object obj)"}, "match(android.net.Uri)": {"Returns": [["int", "Returns either @B_android#content#IntentFilter#NO_MATCH_DATA_E@, @B_android#content#IntentFilter#MATCH_CATEGORY_PORT_E@, or @B_android#content#IntentFilter#MATCH_CATEGORY_HOST_E@."]], "Parameters": [["@B_android#net#Uri_E@", "Uri: The Uri to match."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Determine whether this AuthorityEntry matches the given data Uri. Note that this comparison is case-sensitive, unlike formal RFC host names. You thus should always normalize to lower-case.", "history": "Added in API level 1", "FullName": "public int match (Uri data)"}}, "Inheritance": [], "ClassName": "android.content.IntentFilter.AuthorityEntry", "ClassDesc": "This is an entry for a single authority in the Iterator returned by @B_android#content#IntentFilter#authoritiesIterator_E@."}