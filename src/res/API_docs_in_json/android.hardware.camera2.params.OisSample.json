{"Functions": {"getTimestamp()": {"Returns": [["long", "a long value (guaranteed to be finite)"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the timestamp in nanoseconds.The timestamps are in the same timebase as and comparable to@B_android#hardware#camera2#CaptureResult#SENSOR_TIMESTAMP_E@.", "history": "Added in API level 28", "FullName": "public long getTimestamp ()"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "string representation of @B_android#hardware#camera2#params#OisSample_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the OisSample as a string representation. \"OisSample{timestamp:%l, shift_x:%f, shift_y:%f}\" represents the OIS sample's timestamp, shift in x direction, and shift in y direction.", "history": "Added in API level 28", "FullName": "public String toString ()"}, "OisSample(long,float,float)": {"Returns": [], "Parameters": [["long", "long: timestamp of the OIS sample."], ["float", "float: shift of the OIS sample in x direction."], ["float", "float: shift of the OIS sample in y direction."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if xShift or yShift is not finite"]], "SeeAlso": [], "Permissions": [], "Description": "Create a new @B_android#hardware#camera2#params#OisSample_E@. @B_android#hardware#camera2#params#OisSample_E@ contains the timestamp and the amount of shifts in x and y direction, in pixels, of the OIS sample. A positive value for a shift in x direction is a shift from left to right in active array coordinate system. For example, if the optical center is (1000, 500) in active array coordinates, a shift of (3, 0) puts the new optical center at (1003, 500). A positive value for a shift in y direction is a shift from top to bottom in active array coordinate system. For example, if the optical center is (1000, 500) in active array coordinates, a shift of (0, 5) puts the new optical center at (1000, 505). xShift and yShift must be finite; NaN and infinity is not allowed.", "history": "Added in API level 28", "FullName": "public OisSample (long timestamp, float xShift, float yShift)"}, "getXshift()": {"Returns": [["float", "a floating point value (guaranteed to be finite)"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the shift in x direction.", "history": "Added in API level 28", "FullName": "public float getXshift ()"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if the objects were equal, false otherwise"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the reference object with which to compare."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check if this @B_android#hardware#camera2#params#OisSample_E@ is equal to another @B_android#hardware#camera2#params#OisSample_E@. Two samples are only equal if and only if each of the OIS information is equal.", "history": "Added in API level 28", "FullName": "public boolean equals (Object obj)"}, "getYshift()": {"Returns": [["float", "a floating point value (guaranteed to be finite)"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the shift in y direction.", "history": "Added in API level 28", "FullName": "public float getYshift ()"}, "OisSample(long, float, float)": {"Returns": [], "Parameters": [["long", "long: timestamp of the OIS sample."], ["float", "float: shift of the OIS sample in x direction."], ["float", "float: shift of the OIS sample in y direction."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if xShift or yShift is not finite"]], "SeeAlso": [], "Permissions": [], "Description": "Create a new @B_android#hardware#camera2#params#OisSample_E@. @B_android#hardware#camera2#params#OisSample_E@ contains the timestamp and the amount of shifts in x and y direction, in pixels, of the OIS sample. A positive value for a shift in x direction is a shift from left to right in active array coordinate system. For example, if the optical center is (1000, 500) in active array coordinates, a shift of (3, 0) puts the new optical center at (1003, 500). A positive value for a shift in y direction is a shift from top to bottom in active array coordinate system. For example, if the optical center is (1000, 500) in active array coordinates, a shift of (0, 5) puts the new optical center at (1000, 505). xShift and yShift must be finite; NaN and infinity is not allowed.", "history": "added in API level 28", "FullName": "public OisSample (long timestamp, float xShift, float yShift)"}, "hashCode()": {"Returns": [["int", "a hash code value for this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code value for the object. This method is supported for the benefit of hash tables such as those provided by @B_java#util#HashMap_E@. The general contract of hashCode is: Whenever it is invoked on the same object more than once during an execution of a Java application, the hashCode method must consistently return the same integer, provided no information used in equals comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application. If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result. It is not required that if two objects are unequal according to the @B_java#lang#Object#equals_E@ method, then calling the hashCode method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables. As much as is reasonably practical, the hashCode method defined by class Object does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the Java\u2122 programming language.)", "history": "Added in API level 28", "FullName": "public int hashCode ()"}}, "Inheritance": [], "ClassName": "android.hardware.camera2.params.OisSample", "ClassDesc": "Immutable class to store an @B_android#hardware#camera2#CaptureResult#STATISTICS_OIS_SAMPLES_E@."}