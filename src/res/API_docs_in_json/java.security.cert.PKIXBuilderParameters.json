{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a formatted string describing the parameters"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a formatted string describing the parameters.", "history": "Added in API level 1", "FullName": "public String toString ()"}, "PKIXBuilderParameters(java.util.Set<java.security.cert.TrustAnchor>,java.security.cert.CertSelector)": {"Returns": [], "Parameters": [["@B_java#util#Set_E@", "Set: a Set of TrustAnchors"], ["@B_java#security#cert#CertSelector_E@", "CertSelector: a CertSelector specifying the constraints on the target certificate"]], "Throws": [["@B_java#security#InvalidAlgorithmParameterException_E@", "if trustAnchors is empty (trustAnchors.isEmpty() == true)"], ["@B_java#lang#NullPointerException_E@", "if trustAnchors is null"], ["@B_java#lang#ClassCastException_E@", "if any of the elements of trustAnchors are not of type java.security.cert.TrustAnchor"]], "SeeAlso": [], "Permissions": [], "Description": "Creates an instance of PKIXBuilderParameters with the specified Set of most-trusted CAs. Each element of the set is a @B_java#security#cert#TrustAnchor_E@. Note that the Set is copied to protect against subsequent modifications.", "history": "Added in API level 1", "FullName": "public PKIXBuilderParameters (Set<TrustAnchor> trustAnchors, CertSelector targetConstraints)"}, "PKIXBuilderParameters(java.security.KeyStore,java.security.cert.CertSelector)": {"Returns": [], "Parameters": [["@B_java#security#KeyStore_E@", "KeyStore: a KeyStore from which the set of most-trusted CAs will be populated"], ["@B_java#security#cert#CertSelector_E@", "CertSelector: a CertSelector specifying the constraints on the target certificate"]], "Throws": [["@B_java#security#KeyStoreException_E@", "if keystore has not been initialized"], ["@B_java#security#InvalidAlgorithmParameterException_E@", "if keystore does not contain at least one trusted certificate entry"], ["@B_java#lang#NullPointerException_E@", "if keystore is null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates an instance of PKIXBuilderParameters that populates the set of most-trusted CAs from the trusted certificate entries contained in the specified KeyStore. Only keystore entries that contain trusted X509Certificates are considered; all other certificate types are ignored.", "history": "Added in API level 1", "FullName": "public PKIXBuilderParameters (KeyStore keystore, CertSelector targetConstraints)"}, "getMaxPathLength()": {"Returns": [["int", "the maximum number of non-self-issued intermediate certificates that may exist in a certification path, or -1 if there is no limit"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#security#cert#PKIXBuilderParameters#setMaxPathLength_E@"], "Permissions": [], "Description": "Returns the value of the maximum number of intermediate non-self-issued certificates that may exist in a certification path. See the @B_java#security#cert#PKIXBuilderParameters#setMaxPathLength_E@ method for more details.", "history": "Added in API level 1", "FullName": "public int getMaxPathLength ()"}, "setMaxPathLength(int)": {"Returns": [], "Parameters": [["int", "int: the maximum number of non-self-issued intermediate certificates that may exist in a certification path"]], "Throws": [["@B_java#security#InvalidParameterException_E@", "if maxPathLength is set to a value less than -1"]], "SeeAlso": ["@B_java#security#cert#PKIXBuilderParameters#getMaxPathLength_E@"], "Permissions": [], "Description": "Sets the value of the maximum number of non-self-issued intermediate certificates that may exist in a certification path. A certificate is self-issued if the DNs that appear in the subject and issuer fields are identical and are not empty. Note that the last certificate in a certification path is not an intermediate certificate, and is not included in this limit. Usually the last certificate is an end entity certificate, but it can be a CA certificate. A PKIX CertPathBuilder instance must not build paths longer than the length specified. A value of 0 implies that the path can only contain a single certificate. A value of -1 implies that the path length is unconstrained (i.e. there is no maximum). The default maximum path length, if not specified, is 5. Setting a value less than -1 will cause an exception to be thrown. If any of the CA certificates contain the BasicConstraintsExtension, the value of the pathLenConstraint field of the extension overrides the maximum path length parameter whenever the result is a certification path of smaller length.", "history": "Added in API level 1", "FullName": "public void setMaxPathLength (int maxPathLength)"}}, "Inheritance": ["@B_java#security#cert#PKIXParameters_E@"], "ClassName": "java.security.cert.PKIXBuilderParameters", "ClassDesc": "Parameters used as input for the PKIX CertPathBuilder algorithm. A PKIX CertPathBuilder uses these parameters to @B_java#security#cert#CertPathBuilder#build_E@ a CertPath which has been validated according to the PKIX certification path validation algorithm. To instantiate a PKIXBuilderParameters object, an application must specify one or more @B_java#security#cert#PKIXBuilderParameters#PKIXBuilderParameters_E@, specifying a Set of TrustAnchor objects, each of which identifies a most-trusted CA. Alternatively, an application can call @B_java#security#cert#PKIXBuilderParameters#PKIXBuilderParameters_E@, specifying a KeyStore instance containing trusted certificate entries, each of which will be considered as a most-trusted CA. In addition, an application must specify constraints on the target certificate that the CertPathBuilder will attempt to build a path to. The constraints are specified as a CertSelector object. These constraints should provide the CertPathBuilder with enough search criteria to find the target certificate. Minimal criteria for an X509Certificate usually include the subject name and/or one or more subject alternative names. If enough criteria is not specified, the CertPathBuilder may throw a CertPathBuilderException. Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize."}