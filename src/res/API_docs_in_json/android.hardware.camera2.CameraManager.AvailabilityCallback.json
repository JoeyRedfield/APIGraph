{"Functions": {"onCameraAvailable(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The unique identifier of the new camera. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "A new camera has become available to use. The default implementation of this method does nothing.", "history": "Added in API level 21", "FullName": "public void onCameraAvailable (String cameraId)"}, "onCameraUnavailable(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The unique identifier of the disconnected camera. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "A previously-available camera has become unavailable for use. If an application had an active CameraDevice instance for the now-disconnected camera, that application will receive a @B_android#hardware#camera2#CameraDevice#StateCallback#onDisconnected_E@. The default implementation of this method does nothing.", "history": "Added in API level 21", "FullName": "public void onCameraUnavailable (String cameraId)"}, "onCameraAccessPrioritiesChanged()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called whenever camera access priorities change. Notification that camera access priorities have changed and the camera may now be openable. An application that was previously denied camera access due to a higher-priority user already using the camera, or that was disconnected from an active camera session due to a higher-priority user trying to open the camera, should try to open the camera again if it still wants to use it. Note that multiple applications may receive this callback at the same time, and only one of them will succeed in opening the camera in practice, depending on exact access priority levels and timing. This method is useful in cases where multiple applications may be in the resumed state at the same time, and the user switches focus between them, or if the current camera-using application moves between full-screen and Picture-in-Picture (PiP) states. In such cases, the camera available/unavailable callbacks will not be invoked, but another application may now have higher priority for camera access than the current camera-using application. The default implementation of this method does nothing.", "history": "Added in API level 29", "FullName": "public void onCameraAccessPrioritiesChanged ()"}, "CameraManager.AvailabilityCallback()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 21", "FullName": "public CameraManager.AvailabilityCallback ()"}}, "Inheritance": [], "ClassName": "android.hardware.camera2.CameraManager.AvailabilityCallback", "ClassDesc": "A callback for camera devices becoming available or unavailable to open. Cameras become available when they are no longer in use, or when a new removable camera is connected. They become unavailable when some application or service starts using a camera, or when a removable camera is disconnected. Extend this callback and pass an instance of the subclass to @B_android#hardware#camera2#CameraManager#registerAvailabilityCallback_E@ to be notified of such availability changes."}