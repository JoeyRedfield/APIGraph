{"Functions": {"matches(java.lang.Object)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["Object", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "boolean matches (Object item)"}, "BoundedMatcher(java.lang.Class<? extends S>)": {"Returns": [], "Parameters": [["Class", "Class no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "BoundedMatcher (Class<? extends S> expectedType)"}, "matchesSafely(S)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["S", "S no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "boolean matchesSafely (S item)"}}, "Inheritance": ["https:##developer#android#com@B_java#lang#Object_E@", "org.hamcrest.BaseMatcher<T>"], "ClassName": "android.support.test.espresso.matcher.BoundedMatcher<T, S extends T>", "ClassDesc": "Some matcher sugar that lets you create a matcher for a given type but only process items of a specific subtype of that matcher."}