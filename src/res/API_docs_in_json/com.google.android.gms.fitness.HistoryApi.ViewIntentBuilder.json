{"Functions": {"setDataSource(com.google.android.gms.fitness.data.DataSource)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#fitness#data#DataSource_E@", "the specific data source we want to display data for"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the data source to display data for, if a specific data source is desired. Otherwise, the viewer can choose any data source or use the default one.", "history": "", "FullName": "public HistoryApi.ViewIntentBuilder setDataSource (DataSource dataSource)"}, "setTimeInterval(long, long, java.util.concurrent.TimeUnit)": {"Returns": [], "Parameters": [["long", "start time, inclusive, in time since epoch"], ["long", "end time, exclusive, in time since epoch"], ["TimeUnit", "the timeUnit for start and end times"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the time interval to display data for. Every intent requires a valid time interval.", "history": "", "FullName": "public HistoryApi.ViewIntentBuilder setTimeInterval (long start, long end, TimeUnit timeUnit)"}, "HistoryApi.ViewIntentBuilder(android.content.Context, com.google.android.gms.fitness.data.DataType)": {"Returns": [], "Parameters": [["Context", "a valid context"], ["@B_com#google#android#gms#fitness#data#DataType_E@", "the data type we want to visualize"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Starts building an intent to view History data.", "history": "", "FullName": "public HistoryApi.ViewIntentBuilder (Context context, DataType dataType)"}, "setPreferredApplication(java.lang.String)": {"Returns": [["", "this builder, for chaining"]], "Parameters": [["String", "the package name for the application we want to link to"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets a preferred application to use for this intent. If the given app is installed and able to handle this intent, an explicit intent will be returned. This can be used in combination with @B_com#google#android#gms#fitness#data#DataSource#getAppPackageName_E@ to link back to the original application which inserted the data being displayed.", "history": "", "FullName": "public HistoryApi.ViewIntentBuilder setPreferredApplication (String packageName)"}, "build()": {"Returns": [], "Parameters": [], "Throws": [["IllegalStateException", "if not enough data has been passed into the Builder to build a valid intent."]], "SeeAlso": [], "Permissions": [], "Description": "Returns the built intent, which can be used with @B_android#content#Context#startActivity_E@ to launch the desired Fitness activity.", "history": "", "FullName": "public Intent build ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.fitness.HistoryApi.ViewIntentBuilder", "ClassDesc": "Builder of intents to view data stored in Google Fit. This intent can be used when the application wants to display a more detailed view of a particular If desired, @B_com#google#android#gms#fitness#HistoryApi#ViewIntentBuilder#setPreferredApplication_E@ can be called to choose a specific application to handle the intent, if the application is installed on the device. This will often be the application defined in @B_com#google#android#gms#fitness#data#DataSource#getAppPackageName_E@. The data view intent has the following attributes: @B_com#google#android#gms#fitness#Fitness#ACTION_VIEW_E@ @B_com#google#android#gms#fitness#data#DataType#MIME_TYPE_PREFIX_E@ followed by the data type vnd.google.fitness.data_type/com.google.heart_rate.bpm could be used for an intent to view heart rate. @B_com#google#android#gms#fitness#Fitness_E@. An application that would like to handle History view intents should create an activity and add an intent filter to its manifest file. Here's an example activity that can display heart rate data: @B_android#content#Intent#CATEGORY_DEFAULT_E@ from the intent filter above."}