{"Functions": {"createEnrollIntent()": {"Returns": [["@B_android#content#Intent_E@", "An @B_android#content#Intent_E@ to start enrollment for the given keyphrase."]], "Parameters": [], "Throws": [["@B_java#lang#UnsupportedOperationException_E@", "if managing they keyphrase isn't supported. Callers should only call this method after a supported state callback on @B_android#service#voice#AlwaysOnHotwordDetector#Callback#onAvailabilityChanged_E@ to avoid this exception."], ["@B_java#lang#IllegalStateException_E@", "if the detector is in an invalid state. This may happen if another detector has been instantiated or the @B_android#service#voice#VoiceInteractionService_E@ hosting this detector has been shut down."]], "SeeAlso": [], "Permissions": [], "Description": "Creates an intent to start the enrollment for the associated keyphrase. This intent must be invoked using @B_android#app#Activity#startActivityForResult_E@. Starting re-enrollment is only valid if the keyphrase is un-enrolled, i.e. @B_android#service#voice#AlwaysOnHotwordDetector#STATE_KEYPHRASE_UNENROLLED_E@, otherwise @B_android#service#voice#AlwaysOnHotwordDetector#createReEnrollIntent_E@ should be preferred.", "history": "Added in API level 21", "FullName": "public Intent createEnrollIntent ()"}, "stopRecognition()": {"Returns": [["boolean", "Indicates whether the call succeeded or not."]], "Parameters": [], "Throws": [["@B_java#lang#UnsupportedOperationException_E@", "if the recognition isn't supported. Callers should only call this method after a supported state callback on @B_android#service#voice#AlwaysOnHotwordDetector#Callback#onAvailabilityChanged_E@ to avoid this exception."], ["@B_java#lang#IllegalStateException_E@", "if the detector is in an invalid state. This may happen if another detector has been instantiated or the @B_android#service#voice#VoiceInteractionService_E@ hosting this detector has been shut down."]], "SeeAlso": [], "Permissions": [], "Description": "Stops recognition for the associated keyphrase.", "history": "Added in API level 21", "FullName": "public boolean stopRecognition ()"}, "getSupportedRecognitionModes()": {"Returns": [["int", "Value is either 0 or a combination of @B_android#service#voice#AlwaysOnHotwordDetector#RECOGNITION_MODE_VOICE_TRIGGER_E@, and @B_android#service#voice#AlwaysOnHotwordDetector#RECOGNITION_MODE_USER_IDENTIFICATION_E@"]], "Parameters": [], "Throws": [["@B_java#lang#UnsupportedOperationException_E@", "if the keyphrase itself isn't supported. Callers should only call this method after a supported state callback on @B_android#service#voice#AlwaysOnHotwordDetector#Callback#onAvailabilityChanged_E@ to avoid this exception."], ["@B_java#lang#IllegalStateException_E@", "if the detector is in an invalid state. This may happen if another detector has been instantiated or the @B_android#service#voice#VoiceInteractionService_E@ hosting this detector has been shut down."]], "SeeAlso": ["@B_android#service#voice#AlwaysOnHotwordDetector_E@"], "Permissions": [], "Description": "Gets the recognition modes supported by the associated keyphrase.", "history": "Added in API level 21", "FullName": "public int getSupportedRecognitionModes ()"}, "createReEnrollIntent()": {"Returns": [["@B_android#content#Intent_E@", "An @B_android#content#Intent_E@ to start re-enrollment for the given keyphrase."]], "Parameters": [], "Throws": [["@B_java#lang#UnsupportedOperationException_E@", "if managing they keyphrase isn't supported. Callers should only call this method after a supported state callback on @B_android#service#voice#AlwaysOnHotwordDetector#Callback#onAvailabilityChanged_E@ to avoid this exception."], ["@B_java#lang#IllegalStateException_E@", "if the detector is in an invalid state. This may happen if another detector has been instantiated or the @B_android#service#voice#VoiceInteractionService_E@ hosting this detector has been shut down."]], "SeeAlso": [], "Permissions": [], "Description": "Creates an intent to start the re-enrollment for the associated keyphrase. This intent must be invoked using @B_android#app#Activity#startActivityForResult_E@. Starting re-enrollment is only valid if the keyphrase is already enrolled, i.e. @B_android#service#voice#AlwaysOnHotwordDetector#STATE_KEYPHRASE_ENROLLED_E@, otherwise invoking this may result in an error.", "history": "Added in API level 21", "FullName": "public Intent createReEnrollIntent ()"}, "createUnEnrollIntent()": {"Returns": [["@B_android#content#Intent_E@", "An @B_android#content#Intent_E@ to start un-enrollment for the given keyphrase."]], "Parameters": [], "Throws": [["@B_java#lang#UnsupportedOperationException_E@", "if managing they keyphrase isn't supported. Callers should only call this method after a supported state callback on @B_android#service#voice#AlwaysOnHotwordDetector#Callback#onAvailabilityChanged_E@ to avoid this exception."], ["@B_java#lang#IllegalStateException_E@", "if the detector is in an invalid state. This may happen if another detector has been instantiated or the @B_android#service#voice#VoiceInteractionService_E@ hosting this detector has been shut down."]], "SeeAlso": [], "Permissions": [], "Description": "Creates an intent to start the un-enrollment for the associated keyphrase. This intent must be invoked using @B_android#app#Activity#startActivityForResult_E@. Starting re-enrollment is only valid if the keyphrase is already enrolled, i.e. @B_android#service#voice#AlwaysOnHotwordDetector#STATE_KEYPHRASE_ENROLLED_E@, otherwise invoking this may result in an error.", "history": "Added in API level 21", "FullName": "public Intent createUnEnrollIntent ()"}, "startRecognition(int)": {"Returns": [["boolean", "Indicates whether the call succeeded or not."]], "Parameters": [["int", "int: The flags to control the recognition properties. Value is either 0 or a combination of android.service.voice.AlwaysOnHotwordDetector.RECOGNITION_FLAG_NONE, @B_android#service#voice#AlwaysOnHotwordDetector#RECOGNITION_FLAG_CAPTURE_TRIGGER_AUDIO_E@, and @B_android#service#voice#AlwaysOnHotwordDetector#RECOGNITION_FLAG_ALLOW_MULTIPLE_TRIGGERS_E@"]], "Throws": [["@B_java#lang#UnsupportedOperationException_E@", "if the recognition isn't supported. Callers should only call this method after a supported state callback on @B_android#service#voice#AlwaysOnHotwordDetector#Callback#onAvailabilityChanged_E@ to avoid this exception."], ["@B_java#lang#IllegalStateException_E@", "if the detector is in an invalid state. This may happen if another detector has been instantiated or the @B_android#service#voice#VoiceInteractionService_E@ hosting this detector has been shut down."]], "SeeAlso": ["@B_android#service#voice#AlwaysOnHotwordDetector_E@"], "Permissions": [], "Description": "Starts recognition for the associated keyphrase.", "history": "Added in API level 21", "FullName": "public boolean startRecognition (int recognitionFlags)"}}, "Inheritance": [], "ClassName": "android.service.voice.AlwaysOnHotwordDetector", "ClassDesc": "A class that lets a VoiceInteractionService implementation interact with always-on keyphrase detection APIs."}