{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "the ISO 4217 currency code of this currency"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the ISO 4217 currency code of this currency.", "history": "Added in API level 1", "FullName": "public String toString ()"}, "getSymbol(java.util.Locale)": {"Returns": [["@B_java#lang#String_E@", "the symbol of this currency for the specified locale"]], "Parameters": [["@B_java#util#Locale_E@", "Locale: the locale for which a display name for this currency is needed"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if locale is null"]], "SeeAlso": [], "Permissions": [], "Description": "Gets the symbol of this currency for the specified locale. For example, for the US Dollar, the symbol is \"$\" if the specified locale is the US, while for other locales it may be \"US$\". If no symbol can be determined, the ISO 4217 currency code is returned.", "history": "Added in API level 1", "FullName": "public String getSymbol (Locale locale)"}, "getSymbol()": {"Returns": [["@B_java#lang#String_E@", "the symbol of this currency for the default @B_java#util#Locale#Category#DISPLAY_E@ locale"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the symbol of this currency for the default @B_java#util#Locale#Category#DISPLAY_E@ locale. For example, for the US Dollar, the symbol is \"$\" if the default locale is the US, while for other locales it may be \"US$\". If no symbol can be determined, the ISO 4217 currency code is returned. This is equivalent to calling @B_java#util#Currency#getSymbol_E@.", "history": "Added in API level 1", "FullName": "public String getSymbol ()"}, "getAvailableCurrencies()": {"Returns": [["@B_java#util#Set_E@", "the set of available currencies. If there is no currency available in the runtime, the returned set is empty."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the set of available currencies. The returned set of currencies contains all of the available currencies, which may include currencies that represent obsolete ISO 4217 codes. The set can be modified without affecting the available currencies in the runtime.", "history": "Added in API level 19", "FullName": "public static Set<Currency> getAvailableCurrencies ()"}, "getInstance(java.util.Locale)": {"Returns": [["@B_java#util#Currency_E@", "the Currency instance for the country of the given locale, or null"]], "Parameters": [["@B_java#util#Locale_E@", "Locale: the locale for whose country a Currency instance is needed"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if locale or its country code is null"], ["@B_java#lang#IllegalArgumentException_E@", "if the country of the given locale is not a supported ISO 3166 country code."]], "SeeAlso": [], "Permissions": [], "Description": "Returns the Currency instance for the country of the given locale. The language and variant components of the locale are ignored. The result may vary over time, as countries change their currencies. For example, for the original member countries of the European Monetary Union, the method returns the old national currencies until December 31, 2001, and the Euro from January 1, 2002, local time of the respective countries. The method returns null for territories that don't have a currency, such as Antarctica.", "history": "Added in API level 1", "FullName": "public static Currency getInstance (Locale locale)"}, "getNumericCode()": {"Returns": [["int", "the ISO 4217 numeric code of this currency"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the ISO 4217 numeric code of this currency.", "history": "Added in API level 24", "FullName": "public int getNumericCode ()"}, "getDisplayName()": {"Returns": [["@B_java#lang#String_E@", "the display name of this currency for the default @B_java#util#Locale#Category#DISPLAY_E@ locale"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the name that is suitable for displaying this currency for the default @B_java#util#Locale#Category#DISPLAY_E@ locale. If there is no suitable display name found for the default locale, the ISO 4217 currency code is returned. This is equivalent to calling @B_java#util#Currency#getDisplayName_E@.", "history": "Added in API level 19", "FullName": "public String getDisplayName ()"}, "getDisplayName(java.util.Locale)": {"Returns": [["@B_java#lang#String_E@", "the display name of this currency for the specified locale"]], "Parameters": [["@B_java#util#Locale_E@", "Locale: the locale for which a display name for this currency is needed"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if locale is null"]], "SeeAlso": [], "Permissions": [], "Description": "Gets the name that is suitable for displaying this currency for the specified locale. If there is no suitable display name found for the specified locale, the ISO 4217 currency code is returned.", "history": "Added in API level 19", "FullName": "public String getDisplayName (Locale locale)"}, "getInstance(java.lang.String)": {"Returns": [["@B_java#util#Currency_E@", "the Currency instance for the given currency code"]], "Parameters": [["@B_java#lang#String_E@", "String: the ISO 4217 code of the currency"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if currencyCode is null"], ["@B_java#lang#IllegalArgumentException_E@", "if currencyCode is not a supported ISO 4217 code."]], "SeeAlso": [], "Permissions": [], "Description": "Returns the Currency instance for the given currency code.", "history": "Added in API level 1", "FullName": "public static Currency getInstance (String currencyCode)"}, "getCurrencyCode()": {"Returns": [["@B_java#lang#String_E@", "the ISO 4217 currency code of this currency."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the ISO 4217 currency code of this currency.", "history": "Added in API level 1", "FullName": "public String getCurrencyCode ()"}, "getDefaultFractionDigits()": {"Returns": [["int", "the default number of fraction digits used with this currency"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the default number of fraction digits used with this currency. For example, the default number of fraction digits for the Euro is 2, while for the Japanese Yen it's 0. In the case of pseudo-currencies, such as IMF Special Drawing Rights, -1 is returned.", "history": "Added in API level 1", "FullName": "public int getDefaultFractionDigits ()"}}, "Inheritance": [], "ClassName": "java.util.Currency", "ClassDesc": "Represents a currency. Currencies are identified by their ISO 4217 currency codes. Visit the The class is designed so that there's never more than one Currency instance for any given currency. Therefore, there's no public constructor. You obtain a Currency instance using the getInstance methods."}