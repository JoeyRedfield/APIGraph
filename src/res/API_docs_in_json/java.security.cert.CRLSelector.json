{"Functions": {"clone()": {"Returns": [["@B_java#lang#Object_E@", "a copy of this CRLSelector"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Makes a copy of this CRLSelector. Changes to the copy will not affect the original and vice versa.", "history": "Added in API level 1", "FullName": "public abstract Object clone ()"}, "match(java.security.cert.CRL)": {"Returns": [["boolean", "true if the CRL should be selected, false otherwise"]], "Parameters": [["@B_java#security#cert#CRL_E@", "CRL: the CRL to be checked"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Decides whether a CRL should be selected.", "history": "Added in API level 1", "FullName": "public abstract boolean match (CRL crl)"}}, "Inheritance": [], "ClassName": "java.security.cert.CRLSelector", "ClassDesc": "A selector that defines a set of criteria for selecting CRLs. Classes that implement this interface are often used to specify which CRLs should be retrieved from a CertStore. Unless otherwise specified, the methods defined in this interface are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize."}