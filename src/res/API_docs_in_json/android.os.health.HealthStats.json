{"Functions": {"getMeasurementKeyCount()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#os#health#HealthStats#getMeasurementKeyAt_E@"], "Permissions": [], "Description": "Get the number of measurement values in this object. Can be used to iterate through the available measurements.", "history": "Added in API level 24", "FullName": "public int getMeasurementKeyCount ()"}, "getStatsKeyAt(int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#os#health#HealthStats#getStatsKeyCount_E@"], "Permissions": [], "Description": "Get the key for the timer at the given index. Index must be between 0 and the result of @B_android#os#health#HealthStats#getStatsKeyCount_E@.", "history": "Added in API level 24", "FullName": "public int getStatsKeyAt (int index)"}, "getTimersKeyCount()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#os#health#HealthStats#getTimersKeyAt_E@"], "Permissions": [], "Description": "Get the number of timer map values in this object. Can be used to iterate through the available timer maps.", "history": "Added in API level 24", "FullName": "public int getTimersKeyCount ()"}, "getMeasurementsKeyCount()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#os#health#HealthStats#getMeasurementsKeyAt_E@"], "Permissions": [], "Description": "Get the number of measurement map values in this object. Can be used to iterate through the available measurement maps.", "history": "Added in API level 24", "FullName": "public int getMeasurementsKeyCount ()"}, "hasTimers(int)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return whether this object contains a timers map for the supplied key.", "history": "Added in API level 24", "FullName": "public boolean hasTimers (int key)"}, "getTimer(int)": {"Returns": [["@B_android#os#health#TimerStat_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [["@B_java#lang#IndexOutOfBoundsException_E@", "When the key is not present in this object."]], "SeeAlso": ["@B_android#os#health#HealthStats#hasTimer_E@"], "Permissions": [], "Description": "Return a TimerStat object for the given key. This will allocate a new @B_android#os#health#TimerStat_E@ object, which may be wasteful. Instead, use @B_android#os#health#HealthStats#getTimerCount_E@ and @B_android#os#health#HealthStats#getTimerTime_E@.", "history": "Added in API level 24", "FullName": "public TimerStat getTimer (int key)"}, "getTimersKeyAt(int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#os#health#HealthStats#getTimersKeyCount_E@"], "Permissions": [], "Description": "Get the key for the timer map at the given index. Index must be between 0 and the result of @B_android#os#health#HealthStats#getTimersKeyCount_E@.", "history": "Added in API level 24", "FullName": "public int getTimersKeyAt (int index)"}, "getTimerCount(int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [["@B_java#lang#IndexOutOfBoundsException_E@", "When the key is not present in this object."]], "SeeAlso": ["@B_android#os#health#HealthStats#hasTimer_E@"], "Permissions": [], "Description": "Get the count for the timer for the given key.", "history": "Added in API level 24", "FullName": "public int getTimerCount (int key)"}, "getMeasurementsKeyAt(int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#os#health#HealthStats#getMeasurementsKeyCount_E@"], "Permissions": [], "Description": "Get the key for the measurement map at the given index. Index must be between 0 and the result of @B_android#os#health#HealthStats#getMeasurementsKeyCount_E@.", "history": "Added in API level 24", "FullName": "public int getMeasurementsKeyAt (int index)"}, "hasTimer(int)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return whether this object contains a TimerStat for the supplied key.", "history": "Added in API level 24", "FullName": "public boolean hasTimer (int key)"}, "hasStats(int)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return whether this object contains a HealthStats map for the supplied key.", "history": "Added in API level 24", "FullName": "public boolean hasStats (int key)"}, "getTimers(int)": {"Returns": [["@B_java#util#Map_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [["@B_java#lang#IndexOutOfBoundsException_E@", "When the key is not present in this object."]], "SeeAlso": ["@B_android#os#health#HealthStats#hasTimers_E@"], "Permissions": [], "Description": "Get the TimerStat map for the given key.", "history": "Added in API level 24", "FullName": "public Map<String, TimerStat> getTimers (int key)"}, "getTimerKeyAt(int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#os#health#HealthStats#getTimerKeyCount_E@"], "Permissions": [], "Description": "Get the key for the timer at the given index. Index must be between 0 and the result of @B_android#os#health#HealthStats#getTimerKeyCount_E@.", "history": "Added in API level 24", "FullName": "public int getTimerKeyAt (int index)"}, "hasMeasurement(int)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return whether this object contains a measurement for the supplied key.", "history": "Added in API level 24", "FullName": "public boolean hasMeasurement (int key)"}, "getStats(int)": {"Returns": [["@B_java#util#Map_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [["@B_java#lang#IndexOutOfBoundsException_E@", "When the key is not present in this object."]], "SeeAlso": ["@B_android#os#health#HealthStats#hasStats_E@"], "Permissions": [], "Description": "Get the HealthStats map for the given key.", "history": "Added in API level 24", "FullName": "public Map<String, HealthStats> getStats (int key)"}, "hasMeasurements(int)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return whether this object contains a measurements map for the supplied key.", "history": "Added in API level 24", "FullName": "public boolean hasMeasurements (int key)"}, "getStatsKeyCount()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#os#health#HealthStats#getMeasurementKeyAt_E@"], "Permissions": [], "Description": "Get the number of HealthStat map values in this object. Can be used to iterate through the available measurements.", "history": "Added in API level 24", "FullName": "public int getStatsKeyCount ()"}, "getMeasurement(int)": {"Returns": [["long", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [["@B_java#lang#IndexOutOfBoundsException_E@", "When the key is not present in this object."]], "SeeAlso": ["@B_android#os#health#HealthStats#hasMeasurement_E@"], "Permissions": [], "Description": "Get the measurement for the given key.", "history": "Added in API level 24", "FullName": "public long getMeasurement (int key)"}, "getTimerTime(int)": {"Returns": [["long", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [["@B_java#lang#IndexOutOfBoundsException_E@", "When the key is not present in this object."]], "SeeAlso": ["@B_android#os#health#HealthStats#hasTimer_E@"], "Permissions": [], "Description": "Get the time for the timer for the given key, in milliseconds.", "history": "Added in API level 24", "FullName": "public long getTimerTime (int key)"}, "getMeasurements(int)": {"Returns": [["@B_java#util#Map_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [["@B_java#lang#IndexOutOfBoundsException_E@", "When the key is not present in this object."]], "SeeAlso": ["@B_android#os#health#HealthStats#hasMeasurements_E@"], "Permissions": [], "Description": "Get the measurements map for the given key.", "history": "Added in API level 24", "FullName": "public Map<String, Long> getMeasurements (int key)"}, "getTimerKeyCount()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#os#health#HealthStats#getTimerKeyAt_E@"], "Permissions": [], "Description": "Get the number of timer values in this object. Can be used to iterate through the available timers.", "history": "Added in API level 24", "FullName": "public int getTimerKeyCount ()"}, "getMeasurementKeyAt(int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#os#health#HealthStats#getMeasurementKeyCount_E@"], "Permissions": [], "Description": "Get the key for the measurement at the given index. Index must be between 0 and the result of @B_android#os#health#HealthStats#getMeasurementKeyCount_E@.", "history": "Added in API level 24", "FullName": "public int getMeasurementKeyAt (int index)"}, "getDataType()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#os#health#UidHealthStats_E@", "@B_android#os#health#PackageHealthStats_E@", "@B_android#os#health#PidHealthStats_E@", "@B_android#os#health#ProcessHealthStats_E@", "@B_android#os#health#ServiceHealthStats_E@"], "Permissions": [], "Description": "Get a name representing the contents of this object.", "history": "Added in API level 24", "FullName": "public String getDataType ()"}}, "Inheritance": [], "ClassName": "android.os.health.HealthStats", "ClassDesc": "A HealthStats object contains system health data about an application. Each of the keys references data in one of five data types: A long value. That value may be a count, a time, or some other type of value. The unit for a measurement (COUNT, MS, etc) will always be in the name of the constant for the key to retrieve it. For example, the @B_android#os#health#UidHealthStats#MEASUREMENT_WIFI_TX_MS_E@ value is the number of milliseconds (ms) that were spent transmitting on wifi by an application. The @B_android#os#health#UidHealthStats#MEASUREMENT_MOBILE_RX_PACKETS_E@ measurement is the number of packets received on behalf of an application. The @B_android#os#health#UidHealthStats#MEASUREMENT_TOUCH_USER_ACTIVITY_COUNT_E@ measurement is the number of times the user touched the screen, causing the screen to stay awake. A int count and a long time, measured in milliseconds. Timers track how many times a resource was used, and the total duration for that usage. For example, the @B_android#os#health#UidHealthStats#TIMER_FLASHLIGHT_E@ timer tracks how many times the application turned on the flashlight, and for how many milliseconds total it kept it on. A @B_java#lang#String_E@ names to @B_java#lang#Long_E@ values. The names typically are application provided names. For example, the @B_android#os#health#PackageHealthStats#MEASUREMENTS_WAKEUP_ALARMS_COUNT_E@ measurement map is a mapping of the tag provided to the @B_android#app#AlarmManager_E@ when the alarm is scheduled. A @B_java#lang#String_E@ names to @B_android#os#health#TimerStat_E@ objects. The names are typically application provided names. For example, the @B_android#os#health#UidHealthStats#TIMERS_WAKELOCKS_PARTIAL_E@ is a mapping of tag provided to the @B_android#os#PowerManager_E@ when the wakelock is created to the number of times and for how long each wakelock was active. Lastly, a @B_java#lang#String_E@ names to a recursive @B_android#os#health#HealthStats_E@ object containing more detailed information. For example, the @B_android#os#health#UidHealthStats#STATS_PACKAGES_E@ metric is a mapping of the package names for each of the APKs sharing a uid to the information recorded for that apk. The returned HealthStats objects will each be associated with a different set of constants. For the HealthStats returned for UidHealthStats.STATS_PACKAGES, the keys come from the @B_android#os#health#PackageHealthStats_E@ class. The keys that are available are subject to change, depending on what a particular device or software version is capable of recording. Applications must handle the absence of data without crashing."}