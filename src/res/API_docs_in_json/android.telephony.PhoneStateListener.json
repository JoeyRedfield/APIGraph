{"Functions": {"onDataConnectionStateChanged(int,int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "same as above, but with the network type. Both called.", "history": "Added in API level 7", "FullName": "public void onDataConnectionStateChanged (int state, int networkType)"}, "onSignalStrengthChanged(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#telephony#ServiceState_E@"], "Permissions": [], "Description": "Use @B_android#telephony#PhoneStateListener#onSignalStrengthsChanged_E@ Callback invoked when network signal strength changes on the registered subscription. Note, the registration subId comes from @B_android#telephony#TelephonyManager_E@ object which registers PhoneStateListener by @B_android#telephony#TelephonyManager#listen_E@. If this TelephonyManager object was created with @B_android#telephony#TelephonyManager#createForSubscriptionId_E@, then the callback applies to the subId. Otherwise, this callback applies to @B_android#telephony#SubscriptionManager#getDefaultSubscriptionId_E@.", "history": "Added in API level 1 Deprecated in API level 15", "FullName": "public void onSignalStrengthChanged (int asu)"}, "onCellLocationChanged(android.telephony.CellLocation)": {"Returns": [], "Parameters": [["@B_android#telephony#CellLocation_E@", "CellLocation no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Callback invoked when device cell location changes on the registered subscription. Note, the registration subId comes from @B_android#telephony#TelephonyManager_E@ object which registers PhoneStateListener by @B_android#telephony#TelephonyManager#listen_E@. If this TelephonyManager object was created with @B_android#telephony#TelephonyManager#createForSubscriptionId_E@, then the callback applies to the subId. Otherwise, this callback applies to @B_android#telephony#SubscriptionManager#getDefaultSubscriptionId_E@.", "history": "Added in API level 1", "FullName": "public void onCellLocationChanged (CellLocation location)"}, "onCallStateChanged(int,java.lang.String)": {"Returns": [], "Parameters": [["int", "int: call state Value is @B_android#telephony#TelephonyManager#CALL_STATE_IDLE_E@, @B_android#telephony#TelephonyManager#CALL_STATE_RINGING_E@, or @B_android#telephony#TelephonyManager#CALL_STATE_OFFHOOK_E@"], ["@B_java#lang#String_E@", "String: call phone number. If application does not have @B_android#Manifest#permission#READ_CALL_LOG_E@ permission or carrier privileges (see @B_android#telephony#TelephonyManager#hasCarrierPrivileges_E@), an empty string will be passed as an argument."]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#READ_CALL_LOG_E@"], "Description": "Callback invoked when device call state changes. Reports the state of Telephony (mobile) calls on the device for the registered subscription. Note: the registration subId comes from @B_android#telephony#TelephonyManager_E@ object which registers PhoneStateListener by @B_android#telephony#TelephonyManager#listen_E@. If this TelephonyManager object was created with @B_android#telephony#TelephonyManager#createForSubscriptionId_E@, then the callback applies to the subId. Otherwise, this callback applies to @B_android#telephony#SubscriptionManager#getDefaultSubscriptionId_E@. Note: The state returned here may differ from that returned by @B_android#telephony#TelephonyManager#getCallState_E@. Receivers of this callback should be aware that calling @B_android#telephony#TelephonyManager#getCallState_E@ from within this callback may return a different state than the callback reports.", "history": "Added in API level 1", "FullName": "public void onCallStateChanged (int state, String phoneNumber)"}, "PhoneStateListener(java.util.concurrent.Executor)": {"Returns": [], "Parameters": [["@B_java#util#concurrent#Executor_E@", "Executor: a non-null Executor that will execute callbacks for the PhoneStateListener. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a PhoneStateListener for the Phone using the specified Executor Create a PhoneStateListener with a specified Executor for handling necessary callbacks. The Executor must not be null.", "history": "Added in API level 29", "FullName": "public PhoneStateListener (Executor executor)"}, "onCallStateChanged(int, java.lang.String)": {"Returns": [], "Parameters": [["int", "int: call state"], ["@B_java#lang#String_E@", "String: call phone number. If application does not have @B_android#Manifest#permission#READ_CALL_LOG_E@ permission or carrier privileges (see @B_android#telephony#TelephonyManager#hasCarrierPrivileges_E@), an empty string will be passed as an argument."]], "Throws": [], "SeeAlso": ["@B_android#telephony#TelephonyManager_E@"], "Permissions": ["@B_android#Manifest#permission#READ_CALL_LOG_E@"], "Description": "Callback invoked when device call state changes.", "history": "added in API level 1", "FullName": "public void onCallStateChanged (int state, String phoneNumber)"}, "onCallForwardingIndicatorChanged(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Callback invoked when the call-forwarding indicator changes on the registered subscription. Note, the registration subId comes from @B_android#telephony#TelephonyManager_E@ object which registers PhoneStateListener by @B_android#telephony#TelephonyManager#listen_E@. If this TelephonyManager object was created with @B_android#telephony#TelephonyManager#createForSubscriptionId_E@, then the callback applies to the subId. Otherwise, this callback applies to @B_android#telephony#SubscriptionManager#getDefaultSubscriptionId_E@.", "history": "Added in API level 1", "FullName": "public void onCallForwardingIndicatorChanged (boolean cfi)"}, "PhoneStateListener()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a PhoneStateListener for the Phone with the default subscription. This class requires Looper.myLooper() not return null.", "history": "Added in API level 1", "FullName": "public PhoneStateListener ()"}, "onServiceStateChanged(android.telephony.ServiceState)": {"Returns": [], "Parameters": [["@B_android#telephony#ServiceState_E@", "ServiceState no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#telephony#ServiceState_E@"], "Permissions": [], "Description": "Callback invoked when device service state changes on the registered subscription. Note, the registration subId comes from @B_android#telephony#TelephonyManager_E@ object which registers PhoneStateListener by @B_android#telephony#TelephonyManager#listen_E@. If this TelephonyManager object was created with @B_android#telephony#TelephonyManager#createForSubscriptionId_E@, then the callback applies to the subId. Otherwise, this callback applies to @B_android#telephony#SubscriptionManager#getDefaultSubscriptionId_E@.", "history": "Added in API level 1", "FullName": "public void onServiceStateChanged (ServiceState serviceState)"}, "onUserMobileDataStateChanged(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: indicates whether the current user mobile data state is enabled or disabled."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Callback invoked when the user mobile data state has changed on the registered subscription. Note, the registration subId comes from @B_android#telephony#TelephonyManager_E@ object which registers PhoneStateListener by @B_android#telephony#TelephonyManager#listen_E@. If this TelephonyManager object was created with @B_android#telephony#TelephonyManager#createForSubscriptionId_E@, then the callback applies to the subId. Otherwise, this callback applies to @B_android#telephony#SubscriptionManager#getDefaultSubscriptionId_E@.", "history": "Added in API level 28", "FullName": "public void onUserMobileDataStateChanged (boolean enabled)"}, "onDataConnectionStateChanged(int, int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "same as above, but with the network type. Both called.", "history": "added in API level 7", "FullName": "public void onDataConnectionStateChanged (int state, int networkType)"}, "onActiveDataSubscriptionIdChanged(int)": {"Returns": [], "Parameters": [["int", "int: current subscription used to setup Cellular Internet data. For example, it could be the current active opportunistic subscription in use, or the subscription user selected as default data subscription in DSDS mode."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Callback invoked when active data subId changes. Note, this callback triggers regardless of registered subscription. Requires the READ_PHONE_STATE permission.", "history": "Added in API level 29", "FullName": "public void onActiveDataSubscriptionIdChanged (int subId)"}, "onDataConnectionStateChanged(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#telephony#TelephonyManager_E@"], "Permissions": [], "Description": "Callback invoked when connection state changes on the registered subscription. Note, the registration subId comes from @B_android#telephony#TelephonyManager_E@ object which registers PhoneStateListener by @B_android#telephony#TelephonyManager#listen_E@. If this TelephonyManager object was created with @B_android#telephony#TelephonyManager#createForSubscriptionId_E@, then the callback applies to the subId. Otherwise, this callback applies to @B_android#telephony#SubscriptionManager#getDefaultSubscriptionId_E@.", "history": "Added in API level 1", "FullName": "public void onDataConnectionStateChanged (int state)"}, "onSignalStrengthsChanged(android.telephony.SignalStrength)": {"Returns": [], "Parameters": [["@B_android#telephony#SignalStrength_E@", "SignalStrength no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Callback invoked when network signal strengths changes on the registered subscription. Note, the registration subId comes from @B_android#telephony#TelephonyManager_E@ object which registers PhoneStateListener by @B_android#telephony#TelephonyManager#listen_E@. If this TelephonyManager object was created with @B_android#telephony#TelephonyManager#createForSubscriptionId_E@, then the callback applies to the subId. Otherwise, this callback applies to @B_android#telephony#SubscriptionManager#getDefaultSubscriptionId_E@.", "history": "Added in API level 7", "FullName": "public void onSignalStrengthsChanged (SignalStrength signalStrength)"}, "onCellInfoChanged(java.util.List<android.telephony.CellInfo>)": {"Returns": [], "Parameters": [["@B_java#util#List_E@", "List: is the list of currently visible cells."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Callback invoked when a observed cell info has changed or new cells have been added or removed on the registered subscription. Note, the registration subId s from @B_android#telephony#TelephonyManager_E@ object which registers PhoneStateListener by @B_android#telephony#TelephonyManager#listen_E@. If this TelephonyManager object was created with @B_android#telephony#TelephonyManager#createForSubscriptionId_E@, then the callback applies to the subId. Otherwise, this callback applies to @B_android#telephony#SubscriptionManager#getDefaultSubscriptionId_E@.", "history": "Added in API level 17", "FullName": "public void onCellInfoChanged (List<CellInfo> cellInfo)"}, "onDataActivity(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#telephony#TelephonyManager_E@"], "Permissions": [], "Description": "Callback invoked when data activity state changes on the registered subscription. Note, the registration subId comes from @B_android#telephony#TelephonyManager_E@ object which registers PhoneStateListener by @B_android#telephony#TelephonyManager#listen_E@. If this TelephonyManager object was created with @B_android#telephony#TelephonyManager#createForSubscriptionId_E@, then the callback applies to the subId. Otherwise, this callback applies to @B_android#telephony#SubscriptionManager#getDefaultSubscriptionId_E@.", "history": "Added in API level 1", "FullName": "public void onDataActivity (int direction)"}, "onMessageWaitingIndicatorChanged(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Callback invoked when the message-waiting indicator changes on the registered subscription. Note, the registration subId comes from @B_android#telephony#TelephonyManager_E@ object which registers PhoneStateListener by @B_android#telephony#TelephonyManager#listen_E@. If this TelephonyManager object was created with @B_android#telephony#TelephonyManager#createForSubscriptionId_E@, then the callback applies to the subId. Otherwise, this callback applies to @B_android#telephony#SubscriptionManager#getDefaultSubscriptionId_E@.", "history": "Added in API level 1", "FullName": "public void onMessageWaitingIndicatorChanged (boolean mwi)"}}, "Inheritance": [], "ClassName": "android.telephony.PhoneStateListener", "ClassDesc": "A listener class for monitoring changes in specific telephony states on the device, including service state, signal strength, message waiting indicator (voicemail), and others. Override the methods for the state that you wish to receive updates for, and pass your PhoneStateListener object, along with bitwise-or of the LISTEN_ flags to @B_android#telephony#TelephonyManager#listen_E@. Methods are called when the state changes, as well as once on initial registration. Note that access to some telephony information is permission-protected. Your application won't receive updates for protected information unless it has the appropriate permissions declared in its manifest file. Where permissions apply, they are noted in the appropriate LISTEN_ flags."}