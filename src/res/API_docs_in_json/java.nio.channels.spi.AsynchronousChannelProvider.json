{"Functions": {"openAsynchronousSocketChannel(java.nio.channels.AsynchronousChannelGroup)": {"Returns": [["@B_java#nio#channels#AsynchronousSocketChannel_E@", "The new channel"]], "Parameters": [["@B_java#nio#channels#AsynchronousChannelGroup_E@", "AsynchronousChannelGroup: The group to which the channel is bound, or null to bind to the default group"]], "Throws": [["@B_java#nio#channels#IllegalChannelGroupException_E@", "If the provider that created the group differs from this provider"], ["@B_java#nio#channels#ShutdownChannelGroupException_E@", "The group is shutdown"], ["@B_java#io#IOException_E@", "If an I/O error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Opens an asynchronous socket channel.", "history": "Added in API level 26", "FullName": "public abstract AsynchronousSocketChannel openAsynchronousSocketChannel (AsynchronousChannelGroup group)"}, "openAsynchronousChannelGroup(int,java.util.concurrent.ThreadFactory)": {"Returns": [["@B_java#nio#channels#AsynchronousChannelGroup_E@", "A new asynchronous channel group"]], "Parameters": [["int", "int: The number of threads in the pool"], ["@B_java#util#concurrent#ThreadFactory_E@", "ThreadFactory: The factory to use when creating new threads"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If nThreads <= 0"], ["@B_java#io#IOException_E@", "If an I/O error occurs"]], "SeeAlso": ["@B_java#nio#channels#AsynchronousChannelGroup#withFixedThreadPool_E@"], "Permissions": [], "Description": "Constructs a new asynchronous channel group with a fixed thread pool.", "history": "Added in API level 26", "FullName": "public abstract AsynchronousChannelGroup openAsynchronousChannelGroup (int nThreads, ThreadFactory threadFactory)"}, "openAsynchronousChannelGroup(java.util.concurrent.ExecutorService,int)": {"Returns": [["@B_java#nio#channels#AsynchronousChannelGroup_E@", "A new asynchronous channel group"]], "Parameters": [["@B_java#util#concurrent#ExecutorService_E@", "ExecutorService: The thread pool"], ["int", "int: A value >=0 or a negative value for implementation specific default"]], "Throws": [["@B_java#io#IOException_E@", "If an I/O error occurs"]], "SeeAlso": ["@B_java#nio#channels#AsynchronousChannelGroup#withCachedThreadPool_E@"], "Permissions": [], "Description": "Constructs a new asynchronous channel group with the given thread pool.", "history": "Added in API level 26", "FullName": "public abstract AsynchronousChannelGroup openAsynchronousChannelGroup (ExecutorService executor, int initialSize)"}, "AsynchronousChannelProvider()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#lang#SecurityException_E@", "If a security manager has been installed and it denies @B_java#lang#RuntimePermission_E@(\"asynchronousChannelProvider\")"]], "SeeAlso": [], "Permissions": [], "Description": "Initializes a new instance of this class.", "history": "Added in API level 26", "FullName": "protected AsynchronousChannelProvider ()"}, "openAsynchronousServerSocketChannel(java.nio.channels.AsynchronousChannelGroup)": {"Returns": [["@B_java#nio#channels#AsynchronousServerSocketChannel_E@", "The new channel"]], "Parameters": [["@B_java#nio#channels#AsynchronousChannelGroup_E@", "AsynchronousChannelGroup: The group to which the channel is bound, or null to bind to the default group"]], "Throws": [["@B_java#nio#channels#IllegalChannelGroupException_E@", "If the provider that created the group differs from this provider"], ["@B_java#nio#channels#ShutdownChannelGroupException_E@", "The group is shutdown"], ["@B_java#io#IOException_E@", "If an I/O error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Opens an asynchronous server-socket channel.", "history": "Added in API level 26", "FullName": "public abstract AsynchronousServerSocketChannel openAsynchronousServerSocketChannel (AsynchronousChannelGroup group)"}, "provider()": {"Returns": [["@B_java#nio#channels#spi#AsynchronousChannelProvider_E@", "The system-wide default AsynchronousChannel provider"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the system-wide default asynchronous channel provider for this invocation of the Java virtual machine. The first invocation of this method locates the default provider object as follows: Subsequent invocations of this method return the provider that was returned by the first invocation.", "history": "Added in API level 26", "FullName": "public static AsynchronousChannelProvider provider ()"}}, "Inheritance": [], "ClassName": "java.nio.channels.spi.AsynchronousChannelProvider", "ClassDesc": "Service-provider class for asynchronous channels. An asynchronous channel provider is a concrete subclass of this class that has a zero-argument constructor and implements the abstract methods specified below. A given invocation of the Java virtual machine maintains a single system-wide default provider instance, which is returned by the @B_java#nio#channels#spi#AsynchronousChannelProvider#provider_E@ method. The first invocation of that method will locate the default provider as specified below. All of the methods in this class are safe for use by multiple concurrent threads."}