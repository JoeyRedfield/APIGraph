{"Functions": {"getReferrer(android.app.Activity)": {"Returns": [["@B_android#net#Uri_E@", "no returns description in source"]], "Parameters": [["@B_android#app#Activity_E@", "Activity no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return information about who launched this activity. If the launching Intent contains an @B_android#content#Intent#EXTRA_REFERRER_E@, that will be returned as-is; otherwise, if known, an @B_android#content#Intent#URI_ANDROID_APP_SCHEME_E@ referrer URI containing the package name that started the Intent will be returned. This may return null if no referrer can be identified -- it is neither explicitly specified, nor is it known which application package was involved. If called while inside the handling of @B_android#app#Activity#onNewIntent_E@, this function will return the referrer that submitted that new intent to the activity. Otherwise, it always returns the referrer of the original Intent. Note that this is not a security feature -- you can not trust the referrer information, applications can spoof it.", "history": "added in version 23.0.0", "FullName": "Uri getReferrer (Activity activity)"}, "finishAffinity(android.app.Activity)": {"Returns": [], "Parameters": [["@B_android#app#Activity_E@", "Activity no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Finish this activity, and tries to finish all activities immediately below it in the current task that have the same affinity. On Android 4.1+ calling this method will call through to the native version of this method. For other platforms @B_android#app#Activity#finish_E@ will be called instead.", "history": "added in version 22.0.0", "FullName": "void finishAffinity (Activity activity)"}, "ActivityCompat()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This class should not be instantiated, but the constructor must be visible for the class to be extended (as in support-v13).", "history": "added in version 22.0.0", "FullName": "ActivityCompat ()"}, "finishAfterTransition(android.app.Activity)": {"Returns": [], "Parameters": [["@B_android#app#Activity_E@", "Activity no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reverses the Activity Scene entry Transition and triggers the calling Activity to reverse its exit Transition. When the exit Transition completes, @B_android#app#Activity#finish_E@ is called. If no entry Transition was used, finish() is called immediately and the Activity exit Transition is run. On Android 4.4 or lower, this method only finishes the Activity with no special exit transition.", "history": "added in version 22.0.0", "FullName": "void finishAfterTransition (Activity activity)"}, "postponeEnterTransition(android.app.Activity)": {"Returns": [], "Parameters": [["@B_android#app#Activity_E@", "Activity no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "void postponeEnterTransition (Activity activity)"}, "invalidateOptionsMenu(android.app.Activity)": {"Returns": [["boolean", "true if this operation was supported and it completed; false if it was not available."]], "Parameters": [["@B_android#app#Activity_E@", "Activity: Invalidate the options menu of this activity"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Invalidate the activity's options menu, if able. Before API level 11 (Android 3.0/Honeycomb) the lifecycle of the options menu was controlled primarily by the user's operation of the hardware menu key. When the user presses down on the menu key for the first time the menu was created and prepared by calls to @B_android#app#Activity#onCreateOptionsMenu_E@ and @B_android#app#Activity#onPrepareOptionsMenu_E@ respectively. Subsequent presses of the menu key kept the existing instance of the Menu itself and called @B_android#app#Activity#onPrepareOptionsMenu_E@ to give the activity an opportunity to contextually alter the menu before the menu panel was shown. In Android 3.0+ the Action Bar forces the options menu to be built early so that items chosen to show as actions may be displayed when the activity first becomes visible. The Activity method invalidateOptionsMenu forces the entire menu to be destroyed and recreated from @B_android#app#Activity#onCreateOptionsMenu_E@, offering a similar though heavier-weight opportunity to change the menu's contents. Normally this functionality is used to support a changing configuration of Fragments. Applications may use this support helper to signal a significant change in activity state that should cause the options menu to be rebuilt. If the app is running on an older platform version that does not support menu invalidation the app will still receive @B_android#app#Activity#onPrepareOptionsMenu_E@ the next time the user presses the menu key and this method will return false. If this method returns true the options menu was successfully invalidated.", "history": "added in version 22.0.0", "FullName": "boolean invalidateOptionsMenu (Activity activity)"}}, "Inheritance": ["java.lang.Object", "@B_android#support#v4#content#ContextCompat_E@"], "ClassName": "android.support.v4.app.ActivityCompat", "ClassDesc": "Helper for accessing features in https:##developer#android#com@B_android#app#Activity_E@."}