{"Functions": {"onCreate(android.view.SurfaceHolder)": {"Returns": [], "Parameters": [["SurfaceHolder", "SurfaceHolder no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void onCreate (SurfaceHolder surfaceHolder)"}, "Gles2WatchFaceService.Engine()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "Gles2WatchFaceService.Engine ()"}, "onDestroy()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void onDestroy ()"}, "onSurfaceRedrawNeeded(android.view.SurfaceHolder)": {"Returns": [], "Parameters": [["SurfaceHolder", "SurfaceHolder no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void onSurfaceRedrawNeeded (SurfaceHolder holder)"}, "onGlSurfaceCreated(int, int)": {"Returns": [], "Parameters": [["int", "int: width of surface in pixels"], ["int", "int: height of surface in pixels"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a new GL surface is created. It's safe to use GL APIs in this method.", "history": "", "FullName": "void onGlSurfaceCreated (int width, int height)"}, "invalidate()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Schedules a call to @B_android#support#wearable#watchface#Gles2WatchFaceService#Engine#onDraw_E@ to draw the next frame. Must be called on the main thread.", "history": "", "FullName": "void invalidate ()"}, "initializeEglDisplay()": {"Returns": [["EGLDisplay", "the initialized EGLDisplay to use"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Initializes the display. Calls @B_android#opengl#EGL14#eglGetDisplay_E@ and @B_android#opengl#EGL14#eglInitialize_E@.", "history": "", "FullName": "EGLDisplay initializeEglDisplay ()"}, "postInvalidate()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Posts a message to schedule a call to @B_android#support#wearable#watchface#Gles2WatchFaceService#Engine#onDraw_E@ to draw the next frame. Unlike @B_android#support#wearable#watchface#Gles2WatchFaceService#Engine#invalidate_E@, this method is thread-safe and may be called on any thread.", "history": "", "FullName": "void postInvalidate ()"}, "onSurfaceDestroyed(android.view.SurfaceHolder)": {"Returns": [], "Parameters": [["SurfaceHolder", "SurfaceHolder no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void onSurfaceDestroyed (SurfaceHolder holder)"}, "onGlContextCreated()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a new GL context is created. It's safe to use GL APIs in this method.", "history": "", "FullName": "void onGlContextCreated ()"}, "onApplyWindowInsets(android.view.WindowInsets)": {"Returns": [], "Parameters": [["WindowInsets", "WindowInsets no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void onApplyWindowInsets (WindowInsets insets)"}, "chooseEglConfig(android.opengl.EGLDisplay)": {"Returns": [["EGLConfig", "the EGL config to use"]], "Parameters": [["EGLDisplay", "EGLDisplay: the EGL display to use"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the desired EGL config to use. By default, uses a config that: supports OpenGL ES 2.0 contexts has at least 8 bits for each of red, green, blue, and alpha If there are multiple matches, the one with the most bits for red, green, blue, and alpha is chosen. Watch faces can override this method to call @B_android#opengl#EGL14#eglChooseConfig_E@ with different attributes. By passing in a large array, eglChooseConfig can return multiple matching configs and the watch face can choose among them by using @B_android#opengl#EGL14#eglGetConfigAttrib_E@ to fetch their attributes.", "history": "", "FullName": "EGLConfig chooseEglConfig (EGLDisplay eglDisplay)"}, "onDraw()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Draws the watch face. It's safe to use GL APIs in this method.", "history": "", "FullName": "void onDraw ()"}}, "Inheritance": ["http:##developer#android#com@B_java#lang#Object_E@", "http:##developer#android#com@B_android#service#wallpaper#WallpaperService#Engine_E@", "https:##developer#android#com@B_android#support#wearable#watchface#WatchFaceService#Engine_E@"], "ClassName": "android.support.wearable.watchface.Gles2WatchFaceService.Engine", "ClassDesc": "The actual implementation of a watch face that draws using OpenGL ES 2.0. You must implement https:##developer#android#com@B_android#support#wearable#watchface#Gles2WatchFaceService#onCreateEngine_E@ to return your concrete Engine implementation."}