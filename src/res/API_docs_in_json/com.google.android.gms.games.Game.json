{"Functions": {"getApplicationId()": {"Returns": [["", "The application ID for this game."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the application ID for this game.", "history": "", "FullName": "public abstract String getApplicationId ()"}, "getDescription()": {"Returns": [["", "The description of this game."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the description of this game.", "history": "", "FullName": "public abstract String getDescription ()"}, "getDisplayName()": {"Returns": [["", "The display name for this game."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the display name for this game.", "history": "", "FullName": "public abstract String getDisplayName ()"}, "isTurnBasedMultiplayerEnabled()": {"Returns": [["", "Whether or not this game supports turn-based mulitplayer."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether or not this game supports turn-based multiplayer.", "history": "", "FullName": "public abstract boolean isTurnBasedMultiplayerEnabled ()"}, "hasGamepadSupport()": {"Returns": [["", "Whether or not this game declares gamepad support."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether or not this game is marked as supporting gamepads.", "history": "", "FullName": "public abstract boolean hasGamepadSupport ()"}, "getPrimaryCategory()": {"Returns": [["", "The primary category of the game."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the primary category of the game - this is may be null.", "history": "", "FullName": "public abstract String getPrimaryCategory ()"}, "getDisplayName(android.database.CharArrayBuffer)": {"Returns": [], "Parameters": [["CharArrayBuffer", "The buffer to load the data into."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Loads the display name string into the given @B_android#database#CharArrayBuffer_E@.", "history": "", "FullName": "public abstract void getDisplayName (CharArrayBuffer dataOut)"}, "getThemeColor()": {"Returns": [["", "The color to use as an RGB hex triplet, e.g. \"E0E0E0\""]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the theme color for this game. The theme color is used to configure the appearance of Play Games UIs.", "history": "", "FullName": "public abstract String getThemeColor ()"}, "isRealTimeMultiplayerEnabled()": {"Returns": [["", "Whether or not this game supports real-time mulitplayer."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether or not this game supports real-time multiplayer.", "history": "", "FullName": "public abstract boolean isRealTimeMultiplayerEnabled ()"}, "getSecondaryCategory()": {"Returns": [["", "The secondary category of the game, or null if not provided."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the secondary category of the game - this may be null.", "history": "", "FullName": "public abstract String getSecondaryCategory ()"}, "getHiResImageUri()": {"Returns": [["", "A URI that can be used to load the game's hi-res image, or null if the game has no hi-res image."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves an image URI that can be used to load the game's hi-res image. Returns null if game has no hi-res image. To retrieve the Image from the @B_android#net#Uri_E@, use @B_com#google#android#gms#common#images#ImageManager_E@.", "history": "", "FullName": "public abstract Uri getHiResImageUri ()"}, "getDescription(android.database.CharArrayBuffer)": {"Returns": [], "Parameters": [["CharArrayBuffer", "The buffer to load the data into."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Loads the description string into the given @B_android#database#CharArrayBuffer_E@.", "history": "", "FullName": "public abstract void getDescription (CharArrayBuffer dataOut)"}, "areSnapshotsEnabled()": {"Returns": [["", "Whether or not this game supports snapshots."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether or not this game supports snapshots.", "history": "", "FullName": "public abstract boolean areSnapshotsEnabled ()"}, "getAchievementTotalCount()": {"Returns": [["", "The number of achievements registered for this game."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the number of achievements registered for this game.", "history": "", "FullName": "public abstract int getAchievementTotalCount ()"}, "getFeaturedImageUri()": {"Returns": [["", "A URI that can be used to load the game's featured image, or null if the game has no featured image."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves an image URI that can be used to load the game's featured (banner) image from Google Play. Returns null if game has no featured image. To retrieve the Image from the @B_android#net#Uri_E@, use @B_com#google#android#gms#common#images#ImageManager_E@.", "history": "", "FullName": "public abstract Uri getFeaturedImageUri ()"}, "isPlayEnabledGame()": {"Returns": [["", "Whether the game is a Google Play-Enabled game."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether the game is a Google Play-Enabled game.", "history": "", "FullName": "public abstract boolean isPlayEnabledGame ()"}, "getDeveloperName()": {"Returns": [["", "The name of the developer of this game."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the name of the developer of this game.", "history": "", "FullName": "public abstract String getDeveloperName ()"}, "getDeveloperName(android.database.CharArrayBuffer)": {"Returns": [], "Parameters": [["CharArrayBuffer", "The buffer to load the data into."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Loads the developer name into the given @B_android#database#CharArrayBuffer_E@.", "history": "", "FullName": "public abstract void getDeveloperName (CharArrayBuffer dataOut)"}, "getIconImageUri()": {"Returns": [["", "A URI that can be used to load the game's icon, or null if the game has no icon."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves an image URI that can be used to load the game's icon. Returns null if game has no icon. To retrieve the Image from the @B_android#net#Uri_E@, use @B_com#google#android#gms#common#images#ImageManager_E@.", "history": "", "FullName": "public abstract Uri getIconImageUri ()"}, "getLeaderboardCount()": {"Returns": [["", "The number of leaderboards registered for this game."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the number of leaderboards registered for this game.", "history": "", "FullName": "public abstract int getLeaderboardCount ()"}}, "Inheritance": [], "ClassName": "com.google.android.gms.games.Game", "ClassDesc": "Data interface for retrieving game information."}