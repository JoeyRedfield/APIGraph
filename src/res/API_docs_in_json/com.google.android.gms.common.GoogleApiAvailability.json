{"Functions": {"showErrorNotification(android.content.Context, int)": {"Returns": [], "Parameters": [["Context", "used for identifying language to display dialog in as well as accessing the @B_android#app#NotificationManager_E@."], ["int", "error code returned by @B_com#google#android#gms#common#GoogleApiAvailability#isGooglePlayServicesAvailable_E@ call. If errorCode is @B_com#google#android#gms#common#ConnectionResult#SUCCESS_E@ then null is returned."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Displays a notification relevant to the provided error code. This method is similar to @B_com#google#android#gms#common#GoogleApiAvailability#getErrorDialog_E@, but is provided for background tasks that cannot or should not display dialogs.", "history": "", "FullName": "public void showErrorNotification (Context context, int errorCode)"}, "isUserResolvableError(int)": {"Returns": [["", "true if the error is resolvable with @B_com#google#android#gms#common#GoogleApiAvailability#getErrorDialog_E@"]], "Parameters": [["int", "error code returned by @B_com#google#android#gms#common#GoogleApiAvailability#isGooglePlayServicesAvailable_E@, or returned to your application via @B_com#google#android#gms#common#api#GoogleApiClient#OnConnectionFailedListener#onConnectionFailed_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Determines whether an error can be resolved via user action. If true, proceed by calling @B_com#google#android#gms#common#GoogleApiAvailability#getErrorDialog_E@ and showing the dialog.", "history": "", "FullName": "public final boolean isUserResolvableError (int errorCode)"}, "getInstance()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the singleton instance of GoogleApiAvailability.", "history": "", "FullName": "public static GoogleApiAvailability getInstance ()"}, "getErrorDialog(android.app.Activity, int, int, android.content.DialogInterface.OnCancelListener)": {"Returns": [], "Parameters": [["Activity", "parent activity for creating the dialog, also used for identifying language to display dialog in."], ["int", "error code returned by @B_com#google#android#gms#common#GoogleApiAvailability#isGooglePlayServicesAvailable_E@ call. If errorCode is @B_com#google#android#gms#common#ConnectionResult#SUCCESS_E@ then null is returned."], ["int", "The requestCode given when calling startActivityForResult."], ["DialogInterface.OnCancelListener", "The @B_android#content#DialogInterface#OnCancelListener_E@ to invoke if the dialog is canceled."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a dialog to address the provided errorCode. The returned dialog displays a localized message about the error and upon user confirmation (by tapping on dialog) will direct them to the Play Store if Google Play services is out of date or missing, or to system settings if Google Play services is disabled on the device.", "history": "", "FullName": "public Dialog getErrorDialog (Activity activity, int errorCode, int requestCode, DialogInterface.OnCancelListener cancelListener)"}, "showErrorDialogFragment(android.app.Activity, int, int)": {"Returns": [["", "true if the dialog is shown, false otherwise"]], "Parameters": [["Activity", "parent activity for creating the dialog, also used for identifying language to display dialog in."], ["int", "error code returned by @B_com#google#android#gms#common#GoogleApiAvailability#isGooglePlayServicesAvailable_E@ call. If errorCode is @B_com#google#android#gms#common#ConnectionResult#SUCCESS_E@ then this does nothing."], ["int", "The requestCode given when calling startActivityForResult."]], "Throws": [["RuntimeException", "if API level is below 11 and activity is not a @B_android#support#v4#app#FragmentActivity_E@."]], "SeeAlso": ["@B_com#google#android#gms#common#ErrorDialogFragment_E@", "@B_default package#SupportErrorDialogFragment_E@"], "Permissions": [], "Description": "Displays a DialogFragment for an error code returned by @B_com#google#android#gms#common#GoogleApiAvailability#isGooglePlayServicesAvailable_E@.", "history": "", "FullName": "public boolean showErrorDialogFragment (Activity activity, int errorCode, int requestCode)"}, "getErrorDialog(android.app.Activity, int, int)": {"Returns": [], "Parameters": [["Activity", "parent activity for creating the dialog, also used for identifying language to display dialog in."], ["int", "error code returned by @B_com#google#android#gms#common#GoogleApiAvailability#isGooglePlayServicesAvailable_E@ call. If errorCode is @B_com#google#android#gms#common#ConnectionResult#SUCCESS_E@ then null is returned."], ["int", "The requestCode given when calling startActivityForResult."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a dialog to address the provided errorCode. The returned dialog displays a localized message about the error and upon user confirmation (by tapping on dialog) will direct them to the Play Store if Google Play services is out of date or missing, or to system settings if Google Play services is disabled on the device.", "history": "", "FullName": "public Dialog getErrorDialog (Activity activity, int errorCode, int requestCode)"}, "getErrorString(int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a human-readable string of the error code returned from @B_com#google#android#gms#common#GoogleApiAvailability#isGooglePlayServicesAvailable_E@.", "history": "", "FullName": "public final String getErrorString (int errorCode)"}, "isGooglePlayServicesAvailable(android.content.Context)": {"Returns": [["", "status code indicating whether there was an error. Can be one of following in @B_com#google#android#gms#common#ConnectionResult_E@: SUCCESS, SERVICE_MISSING, SERVICE_UPDATING, SERVICE_VERSION_UPDATE_REQUIRED, SERVICE_DISABLED, SERVICE_INVALID"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Verifies that Google Play services is installed and enabled on this device, and that the version installed on this device is no older than the one required by this client.", "history": "", "FullName": "public int isGooglePlayServicesAvailable (Context context)"}, "getOpenSourceSoftwareLicenseInfo(android.content.Context)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the open source software license information for the Google Play services application, or null if Google Play services is not available on this device.", "history": "", "FullName": "public String getOpenSourceSoftwareLicenseInfo (Context context)"}, "showErrorDialogFragment(android.app.Activity, int, int, android.content.DialogInterface.OnCancelListener)": {"Returns": [["", "true if the dialog is shown, false otherwise."]], "Parameters": [["Activity", "parent activity for creating the dialog, also used for identifying language to display dialog in."], ["int", "error code returned by @B_com#google#android#gms#common#GoogleApiAvailability#isGooglePlayServicesAvailable_E@ call. If errorCode is @B_com#google#android#gms#common#ConnectionResult#SUCCESS_E@ then this does nothing"], ["int", "The requestCode given when calling startActivityForResult."], ["DialogInterface.OnCancelListener", "The @B_android#content#DialogInterface#OnCancelListener_E@ to invoke if the dialog is canceled."]], "Throws": [["RuntimeException", "if API level is below 11 and activity is not a @B_android#support#v4#app#FragmentActivity_E@."]], "SeeAlso": ["@B_com#google#android#gms#common#ErrorDialogFragment_E@", "@B_default package#SupportErrorDialogFragment_E@"], "Permissions": [], "Description": "Displays a DialogFragment for an error code returned by @B_com#google#android#gms#common#GoogleApiAvailability#isGooglePlayServicesAvailable_E@.", "history": "", "FullName": "public boolean showErrorDialogFragment (Activity activity, int errorCode, int requestCode, DialogInterface.OnCancelListener cancelListener)"}, "getErrorResolutionPendingIntent(android.content.Context, int, int)": {"Returns": [], "Parameters": [["Context", "parent context for creating the PendingIntent."], ["int", "error code returned by @B_com#google#android#gms#common#GoogleApiAvailability#isGooglePlayServicesAvailable_E@ call. If errorCode is @B_com#google#android#gms#common#ConnectionResult#SUCCESS_E@ then null is returned."], ["int", "The requestCode given when calling startActivityForResult."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a PendingIntent to address the provided errorCode. It will direct them to either the Play Store if Google Play services is out of date or missing, or system settings if Google Play services is disabled on the device.", "history": "", "FullName": "public PendingIntent getErrorResolutionPendingIntent (Context context, int errorCode, int requestCode)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.common.GoogleApiAvailability", "ClassDesc": "Helper class for verifying that the Google Play services APK is available and up-to-date on this device."}