{"Functions": {"texImage2D(int,int,int,android.graphics.Bitmap,int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Calls glTexImage2D() on the current OpenGL context. If no context is current the behavior is the same as calling glTexImage2D() with no current context, that is, eglGetError() will return the appropriate error. Unlike glTexImage2D() bitmap cannot be null and will raise an exception in that case. All other parameters are identical to those used for glTexImage2D(). NOTE: this method doesn't change GL_UNPACK_ALIGNMENT, you must make sure to set it properly according to the supplied bitmap. Whether or not bitmap can have non power of two dimensions depends on the current OpenGL context. Always check glGetError() some time after calling this method, just like when using OpenGL directly.", "history": "Added in API level 1", "FullName": "public static void texImage2D (int target, int level, int internalformat, Bitmap bitmap, int border)"}, "texImage2D(int,int,int,android.graphics.Bitmap,int,int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "A version of texImage2D() that takes an explicit type parameter as defined by the OpenGL ES specification. The actual type and internalformat of the bitmap must be compatible with the specified type and internalformat parameters.", "history": "Added in API level 1", "FullName": "public static void texImage2D (int target, int level, int internalformat, Bitmap bitmap, int type, int border)"}, "texSubImage2D(int,int,int,int,android.graphics.Bitmap)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Calls glTexSubImage2D() on the current OpenGL context. If no context is current the behavior is the same as calling glTexSubImage2D() with no current context, that is, eglGetError() will return the appropriate error. Unlike glTexSubImage2D() bitmap cannot be null and will raise an exception in that case. All other parameters are identical to those used for glTexSubImage2D(). NOTE: this method doesn't change GL_UNPACK_ALIGNMENT, you must make sure to set it properly according to the supplied bitmap. Whether or not bitmap can have non power of two dimensions depends on the current OpenGL context. Always check glGetError() some time after calling this method, just like when using OpenGL directly.", "history": "Added in API level 1", "FullName": "public static void texSubImage2D (int target, int level, int xoffset, int yoffset, Bitmap bitmap)"}, "texImage2D(int, int, android.graphics.Bitmap, int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "A version of texImage2D that determines the internalFormat and type automatically.", "history": "added in API level 1", "FullName": "public static void texImage2D (int target, int level, Bitmap bitmap, int border)"}, "getEGLErrorString(int)": {"Returns": [["@B_java#lang#String_E@", "An error string corresponding to the EGL error code."]], "Parameters": [["int", "int: The EGL error to convert into a String."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a string for the EGL error code, or the hex representation if the error is unknown.", "history": "Added in API level 14", "FullName": "public static String getEGLErrorString (int error)"}, "getType(android.graphics.Bitmap)": {"Returns": [["int", "the OpenGL ES type of the bitmap."]], "Parameters": [], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the bitmap does not have a type."]], "SeeAlso": [], "Permissions": [], "Description": "Return the type as defined by OpenGL ES of the supplied bitmap, if there is one. If the bitmap is stored in a compressed format, it may not have a valid OpenGL ES type.", "history": "Added in API level 1", "FullName": "public static int getType (Bitmap bitmap)"}, "texImage2D(int,int,android.graphics.Bitmap,int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "A version of texImage2D that determines the internalFormat and type automatically.", "history": "Added in API level 1", "FullName": "public static void texImage2D (int target, int level, Bitmap bitmap, int border)"}, "getInternalFormat(android.graphics.Bitmap)": {"Returns": [["int", "the internal format of the bitmap."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "return the internal format as defined by OpenGL ES of the supplied bitmap.", "history": "Added in API level 1", "FullName": "public static int getInternalFormat (Bitmap bitmap)"}, "texSubImage2D(int,int,int,int,android.graphics.Bitmap,int,int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "A version of texSubImage2D() that takes an explicit type parameter as defined by the OpenGL ES specification.", "history": "Added in API level 1", "FullName": "public static void texSubImage2D (int target, int level, int xoffset, int yoffset, Bitmap bitmap, int format, int type)"}}, "Inheritance": [], "ClassName": "android.opengl.GLUtils", "ClassDesc": "Utility class to help bridging OpenGL ES and Android APIs."}