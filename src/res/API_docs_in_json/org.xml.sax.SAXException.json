{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "A string representation of this exception."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override toString to pick up any embedded exception.", "history": "Added in API level 1", "FullName": "public String toString ()"}, "SAXException(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The error or warning message."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new SAXException.", "history": "Added in API level 1", "FullName": "public SAXException (String message)"}, "SAXException(java.lang.Exception)": {"Returns": [], "Parameters": [["@B_java#lang#Exception_E@", "Exception: The exception to be wrapped in a SAXException."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new SAXException wrapping an existing exception. The existing exception will be embedded in the new one, and its message will become the default message for the SAXException.", "history": "Added in API level 1", "FullName": "public SAXException (Exception e)"}, "getException()": {"Returns": [["@B_java#lang#Exception_E@", "The embedded exception, or null if there is none."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the embedded exception, if any.", "history": "Added in API level 1", "FullName": "public Exception getException ()"}, "SAXException(java.lang.String,java.lang.Exception)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The detail message."], ["@B_java#lang#Exception_E@", "Exception: The exception to be wrapped in a SAXException."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new SAXException from an existing exception. The existing exception will be embedded in the new one, but the new exception will have its own message.", "history": "Added in API level 1", "FullName": "public SAXException (String message, Exception e)"}, "getMessage()": {"Returns": [["@B_java#lang#String_E@", "The error or warning message."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a detail message for this exception. If there is an embedded exception, and if the SAXException has no detail message of its own, this method will return the detail message from the embedded exception.", "history": "Added in API level 1", "FullName": "public String getMessage ()"}, "SAXException()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new SAXException.", "history": "Added in API level 1", "FullName": "public SAXException ()"}}, "Inheritance": ["@B_java#lang#Throwable_E@", "@B_java#lang#Exception_E@"], "ClassName": "org.xml.sax.SAXException", "ClassDesc": "Encapsulate a general SAX error or warning. This class can contain basic error or warning information from either the XML parser or the application: a parser writer or application writer can subclass it to provide additional functionality. SAX handlers may throw this exception or any exception subclassed from it. If the application needs to pass through other types of exceptions, it must wrap those exceptions in a SAXException or an exception derived from a SAXException. If the parser or application needs to include information about a specific location in an XML document, it should use the @B_org#xml#sax#SAXParseException_E@ subclass."}