{"Functions": {"EventEntity(com.google.android.gms.games.event.Event)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public EventEntity (Event event)"}, "getIconImageUrl()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public String getIconImageUrl ()"}, "getName(android.database.CharArrayBuffer)": {"Returns": [], "Parameters": [["CharArrayBuffer", "The buffer to load the data into."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Loads the event name into the given @B_android#database#CharArrayBuffer_E@.", "history": "", "FullName": "public void getName (CharArrayBuffer dataOut)"}, "getPlayer()": {"Returns": [["", "The player associated with this event."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the player information associated with this event. Note that this object is a volatile representation, so it is not safe to cache the output of this directly. Instead, cache the result of @B_com#google#android#gms#common#data#Freezable#freeze_E@.", "history": "", "FullName": "public Player getPlayer ()"}, "getDescription()": {"Returns": [["", "The event description."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the description for this event.", "history": "", "FullName": "public String getDescription ()"}, "isVisible()": {"Returns": [["", "Whether to display the event to the user."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves whether the event should be displayed to the user in any event related UIs.", "history": "", "FullName": "public boolean isVisible ()"}, "freeze()": {"Returns": [["", "A concrete implementation of the data object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Freeze a volatile representation into an immutable representation. Objects returned from this call are safe to cache. Note that the output of freeze may not be identical to the parent object, but should be equal. In other words:", "history": "", "FullName": "public Event freeze ()"}, "describeContents()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int describeContents ()"}, "getName()": {"Returns": [["", "The event name."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the name of this event.", "history": "", "FullName": "public String getName ()"}, "toString()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public String toString ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public void writeToParcel (Parcel out, int flags)"}, "isDataValid()": {"Returns": [["", "whether or not the object is valid for use."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check to see if this object is valid for use. If the object is still volatile, this method will indicate whether or not the object can be safely used. The output of a call to @B_com#google#android#gms#common#data#Freezable#freeze_E@ will always be valid.", "history": "", "FullName": "public boolean isDataValid ()"}, "getDescription(android.database.CharArrayBuffer)": {"Returns": [], "Parameters": [["CharArrayBuffer", "The buffer to load the data into."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Loads the event description into the given @B_android#database#CharArrayBuffer_E@.", "history": "", "FullName": "public void getDescription (CharArrayBuffer dataOut)"}, "getFormattedValue()": {"Returns": [["", "The formatted number of increments this user has made to this event."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the sum of increments have been made to this event (formatted for the user's locale).", "history": "", "FullName": "public String getFormattedValue ()"}, "getEventId()": {"Returns": [["", "The event ID."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the ID of this event.", "history": "", "FullName": "public String getEventId ()"}, "equals(java.lang.Object)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public boolean equals (Object obj)"}, "getFormattedValue(android.database.CharArrayBuffer)": {"Returns": [], "Parameters": [["CharArrayBuffer", "The buffer to load the data into."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the sum of increments have been made to this event (formatted for the user's locale).", "history": "", "FullName": "public void getFormattedValue (CharArrayBuffer dataOut)"}, "hashCode()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int hashCode ()"}, "getIconImageUri()": {"Returns": [["", "The image URI for the achievement's unlocked image icon, or null if the achievement has no unlocked image."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves a URI that can be used to load the event's image icon. Returns null if the event has no image. To retrieve the Image from the @B_android#net#Uri_E@, use @B_com#google#android#gms#common#images#ImageManager_E@.", "history": "", "FullName": "public Uri getIconImageUri ()"}, "getValue()": {"Returns": [["", "The number of increments this user has made to this event."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the number of increments this user has made to this event.", "history": "", "FullName": "public long getValue ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.games.event.EventEntity", "ClassDesc": "Data object representing the data for a event. This is immutable, and therefore safe to cache or store. Note, however, that the data it represents may grow stale."}