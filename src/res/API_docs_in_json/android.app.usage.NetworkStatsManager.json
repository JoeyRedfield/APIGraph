{"Functions": {"querySummary(int,java.lang.String,long,long)": {"Returns": [["@B_android#app#usage#NetworkStats_E@", "Statistics object or null if permissions are insufficient or error happened during statistics collection."]], "Parameters": [["int", "int: As defined in @B_android#net#ConnectivityManager_E@, e.g. @B_android#net#ConnectivityManager#TYPE_MOBILE_E@, @B_android#net#ConnectivityManager#TYPE_WIFI_E@ etc."], ["@B_java#lang#String_E@", "String: If applicable, the subscriber id of the network interface."], ["long", "long: Start of period. Defined in terms of \"Unix time\", see @B_java#lang#System#currentTimeMillis_E@."], ["long", "long: End of period. Defined in terms of \"Unix time\", see @B_java#lang#System#currentTimeMillis_E@."]], "Throws": [["@B_android#os#RemoteException_E@", ""], ["@B_java#lang#SecurityException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Query network usage statistics summaries. Result filtered to include only uids belonging to calling user. Result is aggregated over time, hence all buckets will have the same start and end timestamps. Not aggregated over state, uid, default network, metered, or roaming. This means buckets' start and end timestamps are going to be the same as the 'startTime' and 'endTime' parameters. State, uid, metered, and roaming are going to vary, and tag is going to be the same.", "history": "Added in API level 23", "FullName": "public NetworkStats querySummary (int networkType, String subscriberId, long startTime, long endTime)"}, "registerUsageCallback(int,java.lang.String,long,android.app.usage.NetworkStatsManager.UsageCallback)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"], ["long", "long no parameter comment"], ["@B_android#app#usage#NetworkStatsManager#UsageCallback_E@", "NetworkStatsManager.UsageCallback no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers to receive notifications about data usage on specified networks. #see registerUsageCallback(int, String[], long, UsageCallback, Handler)", "history": "Added in API level 24", "FullName": "public void registerUsageCallback (int networkType, String subscriberId, long thresholdBytes, NetworkStatsManager.UsageCallback callback)"}, "queryDetails(int, java.lang.String, long, long)": {"Returns": [["@B_android#app#usage#NetworkStats_E@", "Statistics object or null if permissions are insufficient or error happened during statistics collection."]], "Parameters": [["int", "int: As defined in @B_android#net#ConnectivityManager_E@, e.g. @B_android#net#ConnectivityManager#TYPE_MOBILE_E@, @B_android#net#ConnectivityManager#TYPE_WIFI_E@ etc."], ["@B_java#lang#String_E@", "String: If applicable, the subscriber id of the network interface."], ["long", "long: Start of period. Defined in terms of \"Unix time\", see @B_java#lang#System#currentTimeMillis_E@."], ["long", "long: End of period. Defined in terms of \"Unix time\", see @B_java#lang#System#currentTimeMillis_E@."]], "Throws": [["@B_java#lang#SecurityException_E@", ""], ["@B_android#os#RemoteException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Query network usage statistics details. Result filtered to include only uids belonging to calling user. Result is aggregated over state but not aggregated over time, uid, tag, metered, nor roaming. This means buckets' start and end timestamps are going to be between 'startTime' and 'endTime' parameters. State is going to be @B_android#app#usage#NetworkStats#Bucket#STATE_ALL_E@, uid will vary, tag @B_android#app#usage#NetworkStats#Bucket#TAG_NONE_E@, default network is going to be @B_android#app#usage#NetworkStats#Bucket#DEFAULT_NETWORK_ALL_E@, metered is going to be @B_android#app#usage#NetworkStats#Bucket#METERED_ALL_E@, and roaming is going to be @B_android#app#usage#NetworkStats#Bucket#ROAMING_ALL_E@. Only includes buckets that atomically occur in the inclusive time range. Doesn't interpolate across partial buckets. Since bucket length is in the order of hours, this method cannot be used to measure data usage on a fine grained time scale.", "history": "added in API level 23", "FullName": "public NetworkStats queryDetails (int networkType, String subscriberId, long startTime, long endTime)"}, "querySummary(int, java.lang.String, long, long)": {"Returns": [["@B_android#app#usage#NetworkStats_E@", "Statistics object or null if permissions are insufficient or error happened during statistics collection."]], "Parameters": [["int", "int: As defined in @B_android#net#ConnectivityManager_E@, e.g. @B_android#net#ConnectivityManager#TYPE_MOBILE_E@, @B_android#net#ConnectivityManager#TYPE_WIFI_E@ etc."], ["@B_java#lang#String_E@", "String: If applicable, the subscriber id of the network interface."], ["long", "long: Start of period. Defined in terms of \"Unix time\", see @B_java#lang#System#currentTimeMillis_E@."], ["long", "long: End of period. Defined in terms of \"Unix time\", see @B_java#lang#System#currentTimeMillis_E@."]], "Throws": [["@B_java#lang#SecurityException_E@", ""], ["@B_android#os#RemoteException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Query network usage statistics summaries. Result filtered to include only uids belonging to calling user. Result is aggregated over time, hence all buckets will have the same start and end timestamps. Not aggregated over state, uid, default network, metered, or roaming. This means buckets' start and end timestamps are going to be the same as the 'startTime' and 'endTime' parameters. State, uid, metered, and roaming are going to vary, and tag is going to be the same.", "history": "added in API level 23", "FullName": "public NetworkStats querySummary (int networkType, String subscriberId, long startTime, long endTime)"}, "querySummaryForDevice(int,java.lang.String,long,long)": {"Returns": [["@B_android#app#usage#NetworkStats#Bucket_E@", "Bucket object or null if permissions are insufficient or error happened during statistics collection."]], "Parameters": [["int", "int: As defined in @B_android#net#ConnectivityManager_E@, e.g. @B_android#net#ConnectivityManager#TYPE_MOBILE_E@, @B_android#net#ConnectivityManager#TYPE_WIFI_E@ etc."], ["@B_java#lang#String_E@", "String: If applicable, the subscriber id of the network interface."], ["long", "long: Start of period. Defined in terms of \"Unix time\", see @B_java#lang#System#currentTimeMillis_E@."], ["long", "long: End of period. Defined in terms of \"Unix time\", see @B_java#lang#System#currentTimeMillis_E@."]], "Throws": [["@B_android#os#RemoteException_E@", ""], ["@B_java#lang#SecurityException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Query network usage statistics summaries. Result is summarised data usage for the whole device. Result is a single Bucket aggregated over time, state, uid, tag, metered, and roaming. This means the bucket's start and end timestamp are going to be the same as the 'startTime' and 'endTime' parameters. State is going to be @B_android#app#usage#NetworkStats#Bucket#STATE_ALL_E@, uid @B_android#app#usage#NetworkStats#Bucket#UID_ALL_E@, tag @B_android#app#usage#NetworkStats#Bucket#TAG_NONE_E@, default network @B_android#app#usage#NetworkStats#Bucket#DEFAULT_NETWORK_ALL_E@, metered @B_android#app#usage#NetworkStats#Bucket#METERED_ALL_E@, and roaming @B_android#app#usage#NetworkStats#Bucket#ROAMING_ALL_E@.", "history": "Added in API level 23", "FullName": "public NetworkStats.Bucket querySummaryForDevice (int networkType, String subscriberId, long startTime, long endTime)"}, "queryDetailsForUidTagState(int,java.lang.String,long,long,int,int,int)": {"Returns": [["@B_android#app#usage#NetworkStats_E@", "Statistics object or null if an error happened during statistics collection."]], "Parameters": [["int", "int: As defined in @B_android#net#ConnectivityManager_E@, e.g. @B_android#net#ConnectivityManager#TYPE_MOBILE_E@, @B_android#net#ConnectivityManager#TYPE_WIFI_E@ etc."], ["@B_java#lang#String_E@", "String: If applicable, the subscriber id of the network interface."], ["long", "long: Start of period. Defined in terms of \"Unix time\", see @B_java#lang#System#currentTimeMillis_E@."], ["long", "long: End of period. Defined in terms of \"Unix time\", see @B_java#lang#System#currentTimeMillis_E@."], ["int", "int: UID of app"], ["int", "int: TAG of interest. Use @B_android#app#usage#NetworkStats#Bucket#TAG_NONE_E@ for no tags."], ["int", "int: state of interest. Use @B_android#app#usage#NetworkStats#Bucket#STATE_ALL_E@ to aggregate traffic from all states."]], "Throws": [["@B_java#lang#SecurityException_E@", "if permissions are insufficient to read network statistics."]], "SeeAlso": [], "Permissions": [], "Description": "Query network usage statistics details for a given uid, tag, and state. Only usable for uids belonging to calling user. Result is not aggregated over time. This means buckets' start and end timestamps are going to be between 'startTime' and 'endTime' parameters. The uid is going to be the same as the 'uid' parameter, the tag the same as the 'tag' parameter, and the state the same as the 'state' parameter. defaultNetwork is going to be @B_android#app#usage#NetworkStats#Bucket#DEFAULT_NETWORK_ALL_E@, metered is going to be @B_android#app#usage#NetworkStats#Bucket#METERED_ALL_E@, and roaming is going to be @B_android#app#usage#NetworkStats#Bucket#ROAMING_ALL_E@. Only includes buckets that atomically occur in the inclusive time range. Doesn't interpolate across partial buckets. Since bucket length is in the order of hours, this method cannot be used to measure data usage on a fine grained time scale.", "history": "Added in API level 28", "FullName": "public NetworkStats queryDetailsForUidTagState (int networkType, String subscriberId, long startTime, long endTime, int uid, int tag, int state)"}, "registerUsageCallback(int,java.lang.String,long,android.app.usage.NetworkStatsManager.UsageCallback,android.os.Handler)": {"Returns": [], "Parameters": [["int", "int: Type of network to monitor. Either @B_android#net#ConnectivityManager#TYPE_MOBILE_E@ or @B_android#net#ConnectivityManager#TYPE_WIFI_E@."], ["@B_java#lang#String_E@", "String: If applicable, the subscriber id of the network interface."], ["long", "long: Threshold in bytes to be notified on."], ["@B_android#app#usage#NetworkStatsManager#UsageCallback_E@", "NetworkStatsManager.UsageCallback: The @B_android#app#usage#NetworkStatsManager#UsageCallback_E@ that the system will call when data usage has exceeded the specified threshold."], ["@B_android#os#Handler_E@", "Handler: to dispatch callback events through, otherwise if null it uses the calling thread. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers to receive notifications about data usage on specified networks. The callbacks will continue to be called as long as the process is live or @B_android#app#usage#NetworkStatsManager#unregisterUsageCallback_E@ is called.", "history": "Added in API level 24", "FullName": "public void registerUsageCallback (int networkType, String subscriberId, long thresholdBytes, NetworkStatsManager.UsageCallback callback, Handler handler)"}, "queryDetails(int,java.lang.String,long,long)": {"Returns": [["@B_android#app#usage#NetworkStats_E@", "Statistics object or null if permissions are insufficient or error happened during statistics collection."]], "Parameters": [["int", "int: As defined in @B_android#net#ConnectivityManager_E@, e.g. @B_android#net#ConnectivityManager#TYPE_MOBILE_E@, @B_android#net#ConnectivityManager#TYPE_WIFI_E@ etc."], ["@B_java#lang#String_E@", "String: If applicable, the subscriber id of the network interface."], ["long", "long: Start of period. Defined in terms of \"Unix time\", see @B_java#lang#System#currentTimeMillis_E@."], ["long", "long: End of period. Defined in terms of \"Unix time\", see @B_java#lang#System#currentTimeMillis_E@."]], "Throws": [["@B_android#os#RemoteException_E@", ""], ["@B_java#lang#SecurityException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Query network usage statistics details. Result filtered to include only uids belonging to calling user. Result is aggregated over state but not aggregated over time, uid, tag, metered, nor roaming. This means buckets' start and end timestamps are going to be between 'startTime' and 'endTime' parameters. State is going to be @B_android#app#usage#NetworkStats#Bucket#STATE_ALL_E@, uid will vary, tag @B_android#app#usage#NetworkStats#Bucket#TAG_NONE_E@, default network is going to be @B_android#app#usage#NetworkStats#Bucket#DEFAULT_NETWORK_ALL_E@, metered is going to be @B_android#app#usage#NetworkStats#Bucket#METERED_ALL_E@, and roaming is going to be @B_android#app#usage#NetworkStats#Bucket#ROAMING_ALL_E@. Only includes buckets that atomically occur in the inclusive time range. Doesn't interpolate across partial buckets. Since bucket length is in the order of hours, this method cannot be used to measure data usage on a fine grained time scale.", "history": "Added in API level 23", "FullName": "public NetworkStats queryDetails (int networkType, String subscriberId, long startTime, long endTime)"}, "querySummaryForUser(int,java.lang.String,long,long)": {"Returns": [["@B_android#app#usage#NetworkStats#Bucket_E@", "Bucket object or null if permissions are insufficient or error happened during statistics collection."]], "Parameters": [["int", "int: As defined in @B_android#net#ConnectivityManager_E@, e.g. @B_android#net#ConnectivityManager#TYPE_MOBILE_E@, @B_android#net#ConnectivityManager#TYPE_WIFI_E@ etc."], ["@B_java#lang#String_E@", "String: If applicable, the subscriber id of the network interface."], ["long", "long: Start of period. Defined in terms of \"Unix time\", see @B_java#lang#System#currentTimeMillis_E@."], ["long", "long: End of period. Defined in terms of \"Unix time\", see @B_java#lang#System#currentTimeMillis_E@."]], "Throws": [["@B_android#os#RemoteException_E@", ""], ["@B_java#lang#SecurityException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Query network usage statistics summaries. Result is summarised data usage for all uids belonging to calling user. Result is a single Bucket aggregated over time, state and uid. This means the bucket's start and end timestamp are going to be the same as the 'startTime' and 'endTime' parameters. State is going to be @B_android#app#usage#NetworkStats#Bucket#STATE_ALL_E@, uid @B_android#app#usage#NetworkStats#Bucket#UID_ALL_E@, tag @B_android#app#usage#NetworkStats#Bucket#TAG_NONE_E@, metered @B_android#app#usage#NetworkStats#Bucket#METERED_ALL_E@, and roaming @B_android#app#usage#NetworkStats#Bucket#ROAMING_ALL_E@.", "history": "Added in API level 23", "FullName": "public NetworkStats.Bucket querySummaryForUser (int networkType, String subscriberId, long startTime, long endTime)"}, "queryDetailsForUid(int,java.lang.String,long,long,int)": {"Returns": [["@B_android#app#usage#NetworkStats_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"], ["long", "long no parameter comment"], ["long", "long no parameter comment"], ["int", "int no parameter comment"]], "Throws": [["@B_java#lang#SecurityException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Query network usage statistics details for a given uid. #see queryDetailsForUidTagState(int, String, long, long, int, int, int)", "history": "Added in API level 23", "FullName": "public NetworkStats queryDetailsForUid (int networkType, String subscriberId, long startTime, long endTime, int uid)"}, "queryDetailsForUidTag(int,java.lang.String,long,long,int,int)": {"Returns": [["@B_android#app#usage#NetworkStats_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"], ["long", "long no parameter comment"], ["long", "long no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [["@B_java#lang#SecurityException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Query network usage statistics details for a given uid and tag. #see queryDetailsForUidTagState(int, String, long, long, int, int, int)", "history": "Added in API level 24", "FullName": "public NetworkStats queryDetailsForUidTag (int networkType, String subscriberId, long startTime, long endTime, int uid, int tag)"}, "unregisterUsageCallback(android.app.usage.NetworkStatsManager.UsageCallback)": {"Returns": [], "Parameters": [["@B_android#app#usage#NetworkStatsManager#UsageCallback_E@", "NetworkStatsManager.UsageCallback: The @B_android#app#usage#NetworkStatsManager#UsageCallback_E@ used when registering."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Unregisters callbacks on data usage.", "history": "Added in API level 24", "FullName": "public void unregisterUsageCallback (NetworkStatsManager.UsageCallback callback)"}}, "Inheritance": [], "ClassName": "android.app.usage.NetworkStatsManager", "ClassDesc": "Provides access to network usage history and statistics. Usage data is collected in discrete bins of time called 'Buckets'. See @B_android#app#usage#NetworkStats#Bucket_E@ for details. Queries can define a time interval in the form of start and end timestamps (Long.MIN_VALUE and Long.MAX_VALUE can be used to simulate open ended intervals). By default, apps can only obtain data about themselves. See the below note for special cases in which apps can obtain data about other applications. @B_android#app#usage#NetworkStatsManager#querySummaryForDevice_E@ @B_android#app#usage#NetworkStatsManager#querySummaryForUser_E@ @B_android#app#usage#NetworkStatsManager#querySummary_E@ These queries aggregate network usage across the whole interval. Therefore there will be only one bucket for a particular key, state, metered and roaming combination. In case of the user-wide and device-wide summaries a single bucket containing the totalised network usage is returned. @B_android#app#usage#NetworkStatsManager#queryDetailsForUid_E@ @B_android#app#usage#NetworkStatsManager#queryDetails_E@ These queries do not aggregate over time but do aggregate over state, metered and roaming. Therefore there can be multiple buckets for a particular key. However, all Buckets will have state @B_android#app#usage#NetworkStats#Bucket#STATE_ALL_E@, defaultNetwork @B_android#app#usage#NetworkStats#Bucket#DEFAULT_NETWORK_ALL_E@, metered @B_android#app#usage#NetworkStats#Bucket#METERED_ALL_E@, roaming @B_android#app#usage#NetworkStats#Bucket#ROAMING_ALL_E@. @B_android#app#usage#NetworkStatsManager#querySummaryForDevice_E@ or accessing stats for apps other than the calling app requires the permission @B_android#Manifest#permission#PACKAGE_USAGE_STATS_E@, which is a system-level permission and will not be granted to third-party apps. However, declaring the permission implies intention to use the API and the user of the device can grant permission through the Settings application. Profile owner apps are automatically granted permission to query data on the profile they manage (that is, for any query except @B_android#app#usage#NetworkStatsManager#querySummaryForDevice_E@). Device owner apps and carrier- privileged apps likewise get access to usage data for all users on the device. In addition to tethering usage, usage by removed users and apps, and usage by the system is also included in the results for callers with one of these higher levels of access. @B_android#os#Build#VERSION_CODES#N_E@, all calls to these APIs required the above permission, even to access an app's own data usage, and carrier-privileged apps were not included."}