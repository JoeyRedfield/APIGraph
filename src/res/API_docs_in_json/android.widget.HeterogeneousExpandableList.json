{"Functions": {"getChildTypeCount()": {"Returns": [["int", "The total number of types of child Views that will be created by this adapter."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#widget#HeterogeneousExpandableList#getGroupTypeCount_E@", "@B_android#widget#HeterogeneousExpandableList#getChildType_E@"], "Permissions": [], "Description": "Returns the number of types of child Views that will be created by @B_android#widget#ExpandableListAdapter#getChildView_E@ . Each type represents a set of views that can be converted in @B_android#widget#ExpandableListAdapter#getChildView_E@ , for any group. If the adapter always returns the same type of View for all child items, this method should return 1. This method will only be called when the adapter is set on the @B_android#widget#AdapterView_E@.", "history": "Added in API level 8", "FullName": "public abstract int getChildTypeCount ()"}, "getChildType(int, int)": {"Returns": [["int", "An integer representing the type of child View. Two child views should share the same type if one can be converted to the other in @B_android#widget#ExpandableListAdapter#getChildView_E@ Note: Integers must be in the range 0 to @B_android#widget#HeterogeneousExpandableList#getChildTypeCount_E@ - 1. @B_android#widget#Adapter#IGNORE_ITEM_VIEW_TYPE_E@ can also be returned."]], "Parameters": [["int", "int: the position of the group that the child resides in"], ["int", "int: the position of the child with respect to other children in the group"]], "Throws": [], "SeeAlso": ["@B_android#widget#Adapter_E@", "@B_android#widget#HeterogeneousExpandableList#getChildTypeCount_E@"], "Permissions": [], "Description": "Get the type of child View that will be created by @B_android#widget#ExpandableListAdapter#getChildView_E@ for the specified child item.", "history": "added in API level 8", "FullName": "public abstract int getChildType (int groupPosition, int childPosition)"}, "getGroupTypeCount()": {"Returns": [["int", "The number of types of group Views that will be created by this adapter."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#widget#HeterogeneousExpandableList#getChildTypeCount_E@", "@B_android#widget#HeterogeneousExpandableList#getGroupType_E@"], "Permissions": [], "Description": "Returns the number of types of group Views that will be created by @B_android#widget#ExpandableListAdapter#getGroupView_E@ . Each type represents a set of views that can be converted in @B_android#widget#ExpandableListAdapter#getGroupView_E@ . If the adapter always returns the same type of View for all group items, this method should return 1. This method will only be called when the adapter is set on the @B_android#widget#AdapterView_E@.", "history": "Added in API level 8", "FullName": "public abstract int getGroupTypeCount ()"}, "getGroupType(int)": {"Returns": [["int", "An integer representing the type of group View. Two group views should share the same type if one can be converted to the other in @B_android#widget#ExpandableListAdapter#getGroupView_E@ . Note: Integers must be in the range 0 to @B_android#widget#HeterogeneousExpandableList#getGroupTypeCount_E@ - 1. @B_android#widget#Adapter#IGNORE_ITEM_VIEW_TYPE_E@ can also be returned."]], "Parameters": [["int", "int: the position of the group for which the type should be returned."]], "Throws": [], "SeeAlso": ["@B_android#widget#Adapter_E@", "@B_android#widget#HeterogeneousExpandableList#getGroupTypeCount_E@"], "Permissions": [], "Description": "Get the type of group View that will be created by @B_android#widget#ExpandableListAdapter#getGroupView_E@ . for the specified group item.", "history": "Added in API level 8", "FullName": "public abstract int getGroupType (int groupPosition)"}, "getChildType(int,int)": {"Returns": [["int", "An integer representing the type of child View. Two child views should share the same type if one can be converted to the other in @B_android#widget#ExpandableListAdapter#getChildView_E@ Note: Integers must be in the range 0 to @B_android#widget#HeterogeneousExpandableList#getChildTypeCount_E@ - 1. @B_android#widget#Adapter#IGNORE_ITEM_VIEW_TYPE_E@ can also be returned."]], "Parameters": [["int", "int: the position of the group that the child resides in"], ["int", "int: the position of the child with respect to other children in the group"]], "Throws": [], "SeeAlso": ["@B_android#widget#Adapter_E@", "@B_android#widget#HeterogeneousExpandableList#getChildTypeCount_E@"], "Permissions": [], "Description": "Get the type of child View that will be created by @B_android#widget#ExpandableListAdapter#getChildView_E@ for the specified child item.", "history": "Added in API level 8", "FullName": "public abstract int getChildType (int groupPosition, int childPosition)"}}, "Inheritance": [], "ClassName": "android.widget.HeterogeneousExpandableList", "ClassDesc": "Additional methods that when implemented make an @B_android#widget#ExpandableListAdapter_E@ take advantage of the @B_android#widget#Adapter_E@ view type mechanism. An @B_android#widget#ExpandableListAdapter_E@ declares it has one view type for its group items and one view type for its child items. Although adapted for most @B_android#widget#ExpandableListView_E@s, these values should be tuned for heterogeneous @B_android#widget#ExpandableListView_E@s. Lists that contain different types of group and/or child item views, should use an adapter that implements this interface. This way, the recycled views that will be provided to @B_android#widget#ExpandableListAdapter#getGroupView_E@ and @B_android#widget#ExpandableListAdapter#getChildView_E@ will be of the appropriate group or child type, resulting in a more efficient reuse of the previously created views."}