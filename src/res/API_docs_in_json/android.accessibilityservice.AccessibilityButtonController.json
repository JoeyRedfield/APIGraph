{"Functions": {"registerAccessibilityButtonCallback(android.accessibilityservice.AccessibilityButtonController.AccessibilityButtonCallback)": {"Returns": [], "Parameters": [["@B_android#accessibilityservice#AccessibilityButtonController#AccessibilityButtonCallback_E@", "AccessibilityButtonController.AccessibilityButtonCallback: the callback to add, must be non-null This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers the provided @B_android#accessibilityservice#AccessibilityButtonController#AccessibilityButtonCallback_E@ for interaction and state changes callbacks related to the accessibility button.", "history": "Added in API level 26", "FullName": "public void registerAccessibilityButtonCallback (AccessibilityButtonController.AccessibilityButtonCallback callback)"}, "registerAccessibilityButtonCallback(android.accessibilityservice.AccessibilityButtonController.AccessibilityButtonCallback,android.os.Handler)": {"Returns": [], "Parameters": [["@B_android#accessibilityservice#AccessibilityButtonController#AccessibilityButtonCallback_E@", "AccessibilityButtonController.AccessibilityButtonCallback: the callback to add, must be non-null This value must never be null."], ["@B_android#os#Handler_E@", "Handler: the handler on which the callback should execute, must be non-null This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers the provided @B_android#accessibilityservice#AccessibilityButtonController#AccessibilityButtonCallback_E@ for interaction and state change callbacks related to the accessibility button. The callback will occur on the specified @B_android#os#Handler_E@'s thread, or on the services's main thread if the handler is null.", "history": "Added in API level 26", "FullName": "public void registerAccessibilityButtonCallback (AccessibilityButtonController.AccessibilityButtonCallback callback, Handler handler)"}, "isAccessibilityButtonAvailable()": {"Returns": [["boolean", "true if the accessibility button in the system's navigation area is available to the calling service, false otherwise"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves whether the accessibility button in the system's navigation area is available to the calling service. @B_android#accessibilityservice#AccessibilityService#onServiceConnected_E@ has not yet been called) or the service has been disconnected, this method will have no effect and return false.", "history": "Added in API level 26", "FullName": "public boolean isAccessibilityButtonAvailable ()"}, "unregisterAccessibilityButtonCallback(android.accessibilityservice.AccessibilityButtonController.AccessibilityButtonCallback)": {"Returns": [], "Parameters": [["@B_android#accessibilityservice#AccessibilityButtonController#AccessibilityButtonCallback_E@", "AccessibilityButtonController.AccessibilityButtonCallback: the callback to remove, must be non-null This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Unregisters the provided @B_android#accessibilityservice#AccessibilityButtonController#AccessibilityButtonCallback_E@ for interaction and state change callbacks related to the accessibility button.", "history": "Added in API level 26", "FullName": "public void unregisterAccessibilityButtonCallback (AccessibilityButtonController.AccessibilityButtonCallback callback)"}}, "Inheritance": [], "ClassName": "android.accessibilityservice.AccessibilityButtonController", "ClassDesc": "Controller for the accessibility button within the system's navigation area This class may be used to query the accessibility button's state and register callbacks for interactions with and state changes to the accessibility button when @B_android#accessibilityservice#AccessibilityServiceInfo#FLAG_REQUEST_ACCESSIBILITY_BUTTON_E@ is set. @B_android#accessibilityservice#AccessibilityServiceInfo#FLAG_REQUEST_ACCESSIBILITY_BUTTON_E@ should not be used as the sole means for offering functionality to users via an @B_android#accessibilityservice#AccessibilityService_E@. Some device implementations may choose not to provide a software-rendered system navigation area, making this affordance permanently unavailable. @B_android#view#View#SYSTEM_UI_FLAG_HIDE_NAVIGATION_E@. A user may also choose to assign this button to another accessibility service or feature. In each of these cases, a registered @B_android#accessibilityservice#AccessibilityButtonController#AccessibilityButtonCallback_E@'s @B_android#accessibilityservice#AccessibilityButtonController#AccessibilityButtonCallback#onAvailabilityChanged_E@ method will be invoked to provide notifications of changes in the accessibility button's availability to the registering service."}