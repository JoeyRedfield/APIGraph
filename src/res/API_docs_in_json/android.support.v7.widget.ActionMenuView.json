{"Functions": {"showOverflowMenu()": {"Returns": [["boolean", "true if the menu was able to be shown, false otherwise"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Show the overflow items from the associated menu.", "history": "added in version 24.2.0", "FullName": "boolean showOverflowMenu ()"}, "isOverflowMenuShowing()": {"Returns": [["boolean", "true if the overflow menu is currently showing"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check whether the overflow menu is currently showing. This may not reflect a pending show operation in progress.", "history": "added in version 24.2.0", "FullName": "boolean isOverflowMenuShowing ()"}, "getWindowAnimations()": {"Returns": [["", "A resource ID for the default animations to be used for this menu."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the default animations to be used for this menu when entering/exiting.", "history": "", "FullName": "public abstract int getWindowAnimations ()"}, "dismissPopupMenus()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Dismiss any popups associated with this menu view.", "history": "added in version 24.2.0", "FullName": "void dismissPopupMenus ()"}, "setPopupTheme(int)": {"Returns": [], "Parameters": [["int", "int: theme used to inflate popup menus"]], "Throws": [], "SeeAlso": ["@B_android#support#v7#widget#ActionMenuView#getPopupTheme_E@"], "Permissions": [], "Description": "Specifies the theme to use when inflating popup menus. By default, uses the same theme as the action menu view itself.", "history": "added in version 24.2.0", "FullName": "void setPopupTheme (int resId)"}, "generateLayoutParams(android.util.AttributeSet)": {"Returns": [["@B_android#support#v7#widget#ActionMenuView#LayoutParams_E@", "an instance of @B_android#view#ViewGroup#LayoutParams_E@ or one of its descendants"]], "Parameters": [["@B_android#util#AttributeSet_E@", "AttributeSet: the attributes to build the layout parameters from"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a new set of layout parameters based on the supplied attributes set.", "history": "", "FullName": "ActionMenuView.LayoutParams generateLayoutParams (AttributeSet attrs)"}, "hideOverflowMenu()": {"Returns": [["boolean", "true if the menu was able to be hidden, false otherwise"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Hide the overflow items from the associated menu.", "history": "added in version 24.2.0", "FullName": "boolean hideOverflowMenu ()"}, "onLayout(boolean, int, int, int, int)": {"Returns": [], "Parameters": [["boolean", "boolean: This is a new size or position for this view"], ["int", "int: Left position, relative to parent"], ["int", "int: Top position, relative to parent"], ["int", "int: Right position, relative to parent"], ["int", "int: Bottom position, relative to parent"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called from layout when this view should assign a size and position to each of its children. Derived classes with children should override this method and call layout on each of their children.", "history": "added in version 24.2.0", "FullName": "void onLayout (boolean changed, int left, int top, int right, int bottom)"}, "onMeasure(int, int)": {"Returns": [], "Parameters": [["int", "int: horizontal space requirements as imposed by the parent. The requirements are encoded with @B_android#view#View#MeasureSpec_E@."], ["int", "int: vertical space requirements as imposed by the parent. The requirements are encoded with @B_android#view#View#MeasureSpec_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Measure the view and its content to determine the measured width and the measured height. This method is invoked by @B_android#view#View#measure_E@ and should be overridden by subclasses to provide accurate and efficient measurement of their contents. must call @B_android#view#View#setMeasuredDimension_E@ to store the measured width and height of this view. Failure to do so will trigger an IllegalStateException, thrown by @B_android#view#View#measure_E@. Calling the superclass' @B_android#view#View#onMeasure_E@ is a valid use. The base class implementation of measure defaults to the background size, unless a larger size is allowed by the MeasureSpec. Subclasses should override @B_android#view#View#onMeasure_E@ to provide better measurements of their content. If this method is overridden, it is the subclass's responsibility to make sure the measured height and width are at least the view's minimum height and width (@B_android#view#View#getSuggestedMinimumHeight_E@ and @B_android#view#View#getSuggestedMinimumWidth_E@).", "history": "", "FullName": "void onMeasure (int widthMeasureSpec, int heightMeasureSpec)"}, "generateDefaultLayoutParams()": {"Returns": [["@B_android#support#v7#widget#ActionMenuView#LayoutParams_E@", "a set of default layout parameters or null"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a set of layout parameters with a width of @B_android#view#ViewGroup#LayoutParams#MATCH_PARENT_E@ and a height of @B_android#view#ViewGroup#LayoutParams#WRAP_CONTENT_E@ when the layout's orientation is @B_android#support#v7#widget#LinearLayoutCompat#VERTICAL_E@. When the orientation is @B_android#support#v7#widget#LinearLayoutCompat#HORIZONTAL_E@, the width is set to @B_android#view#ViewGroup#LayoutParams#WRAP_CONTENT_E@ and the height to @B_android#view#ViewGroup#LayoutParams#WRAP_CONTENT_E@.", "history": "", "FullName": "ActionMenuView.LayoutParams generateDefaultLayoutParams ()"}, "getPopupTheme()": {"Returns": [["int", "resource identifier of the theme used to inflate popup menus, or 0 if menus are inflated against the action menu view theme"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v7#widget#ActionMenuView#setPopupTheme_E@"], "Permissions": [], "Description": "", "history": "added in version 24.2.0", "FullName": "int getPopupTheme ()"}, "onDetachedFromWindow()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This is called when the view is detached from a window. At this point it no longer has a surface for drawing.", "history": "added in version 24.2.0", "FullName": "void onDetachedFromWindow ()"}, "ActionMenuView(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 24.2.0", "FullName": "ActionMenuView (Context context)"}, "getOverflowIcon()": {"Returns": [["@B_android#graphics#drawable#Drawable_E@", "The overflow icon drawable"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the current drawable used as the overflow icon.", "history": "added in version 24.2.0", "FullName": "Drawable getOverflowIcon ()"}, "getMenu()": {"Returns": [["@B_android#view#Menu_E@", "the Menu presented by this view"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the Menu object that this ActionMenuView is currently presenting. Applications should use this method to obtain the ActionMenuView's Menu object and inflate or add content to it as necessary.", "history": "added in version 24.2.0", "FullName": "Menu getMenu ()"}}, "Inheritance": ["java.lang.Object", "https:##developer#android#com@B_android#view#View_E@", "https:##developer#android#com@B_android#view#ViewGroup_E@", "@B_android#support#v7#widget#LinearLayoutCompat_E@"], "ClassName": "android.support.v7.widget.ActionMenuView", "ClassDesc": "ActionMenuView is a presentation of a series of menu options as a View. It provides several top level options as action buttons while spilling remaining options over as items in an overflow menu. This allows applications to present packs of actions inline with specific or repeating content."}