{"Functions": {"getResult()": {"Returns": [["@B_android#app#Instrumentation#ActivityResult_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the result associated with this ActivityMonitor, or null if none.", "history": "Added in API level 1", "FullName": "public final Instrumentation.ActivityResult getResult ()"}, "Instrumentation.ActivityMonitor(android.content.IntentFilter,android.app.Instrumentation.ActivityResult,boolean)": {"Returns": [], "Parameters": [["@B_android#content#IntentFilter_E@", "IntentFilter: The set of intents this monitor is responsible for."], ["@B_android#app#Instrumentation#ActivityResult_E@", "Instrumentation.ActivityResult: A canned result to return if the monitor is hit; can be null."], ["boolean", "boolean: Controls whether the monitor should block the activity start (returning its canned result) or let the call proceed."]], "Throws": [], "SeeAlso": ["@B_android#app#Instrumentation#addMonitor_E@"], "Permissions": [], "Description": "Create a new ActivityMonitor that looks for a particular kind of intent to be started.", "history": "Added in API level 1", "FullName": "public Instrumentation.ActivityMonitor (IntentFilter which, Instrumentation.ActivityResult result, boolean block)"}, "getFilter()": {"Returns": [["@B_android#content#IntentFilter_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the filter associated with this ActivityMonitor.", "history": "Added in API level 1", "FullName": "public final IntentFilter getFilter ()"}, "Instrumentation.ActivityMonitor(java.lang.String,android.app.Instrumentation.ActivityResult,boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The activity class this monitor is responsible for."], ["@B_android#app#Instrumentation#ActivityResult_E@", "Instrumentation.ActivityResult: A canned result to return if the monitor is hit; can be null."], ["boolean", "boolean: Controls whether the monitor should block the activity start (returning its canned result) or let the call proceed."]], "Throws": [], "SeeAlso": ["@B_android#app#Instrumentation#addMonitor_E@"], "Permissions": [], "Description": "Create a new ActivityMonitor that looks for a specific activity class to be started.", "history": "Added in API level 1", "FullName": "public Instrumentation.ActivityMonitor (String cls, Instrumentation.ActivityResult result, boolean block)"}, "onStartActivity(android.content.Intent)": {"Returns": [["@B_android#app#Instrumentation#ActivityResult_E@", "The @B_android#app#Instrumentation#ActivityResult_E@ that needs to be used in case of a match."]], "Parameters": [["@B_android#content#Intent_E@", "Intent: The intent used for starting the activity."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Used for intercepting any started activity. A non-null return value here will be considered a hit for this monitor. By default this will return null and subclasses can override this to return a non-null value if the intent needs to be intercepted. Whenever a new activity is started, this method will be called on instances created using @B_android#app#Instrumentation#ActivityMonitor#Instrumentation#ActivityMonitor_E@ to check if there is a match. In case of a match, the activity start will be blocked and the returned result will be used.", "history": "Added in API level 26", "FullName": "public Instrumentation.ActivityResult onStartActivity (Intent intent)"}, "waitForActivityWithTimeout(long)": {"Returns": [["@B_android#app#Activity_E@", "Activity"]], "Parameters": [["long", "long: Time to wait in milliseconds before the activity is created."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Block until an Activity is created that matches this monitor, returning the resulting activity or till the timeOut period expires. If the timeOut expires before the activity is started, return null.", "history": "Added in API level 1", "FullName": "public final Activity waitForActivityWithTimeout (long timeOut)"}, "getHits()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the number of times the monitor has been hit so far.", "history": "Added in API level 1", "FullName": "public final int getHits ()"}, "waitForActivity()": {"Returns": [["@B_android#app#Activity_E@", "Activity"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Block until an Activity is created that matches this monitor, returning the resulting activity.", "history": "Added in API level 1", "FullName": "public final Activity waitForActivity ()"}, "Instrumentation.ActivityMonitor()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#app#Instrumentation#ActivityMonitor#onStartActivity_E@"], "Permissions": [], "Description": "Create a new ActivityMonitor that can be used for intercepting any activity to be started. When an activity is started, @B_android#app#Instrumentation#ActivityMonitor#onStartActivity_E@ will be called on instances created using this constructor to see if it is a hit.", "history": "Added in API level 26", "FullName": "public Instrumentation.ActivityMonitor ()"}, "isBlocking()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check whether this monitor blocks activity starts (not allowing the actual activity to run) or allows them to execute normally.", "history": "Added in API level 1", "FullName": "public final boolean isBlocking ()"}, "getLastActivity()": {"Returns": [["@B_android#app#Activity_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the most recent activity class that was seen by this monitor.", "history": "Added in API level 1", "FullName": "public final Activity getLastActivity ()"}}, "Inheritance": [], "ClassName": "android.app.Instrumentation.ActivityMonitor", "ClassDesc": "Information about a particular kind of Intent that is being monitored. An instance of this class is added to the current instrumentation through @B_android#app#Instrumentation#addMonitor_E@; after being added, when a new activity is being started the monitor will be checked and, if matching, its hit count updated and (optionally) the call stopped and a canned result returned. An ActivityMonitor can also be used to look for the creation of an activity, through the @B_android#app#Instrumentation#ActivityMonitor#waitForActivity_E@ method. This will return after a matching activity has been created with that activity object."}