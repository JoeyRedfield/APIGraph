{"Functions": {"addTarget(android.support.v7.graphics.Target)": {"Returns": [["@B_android#support#v7#graphics#Palette#Builder_E@", "no returns description in source"]], "Parameters": [["@B_android#support#v7#graphics#Target_E@", "Target no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Add a target profile to be generated in the palette. You can retrieve the result via @B_android#support#v7#graphics#Palette#getSwatchForTarget_E@.", "history": "added in version 23.2.0", "FullName": "Palette.Builder addTarget (Target target)"}, "clearTargets()": {"Returns": [["@B_android#support#v7#graphics#Palette#Builder_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Clear all added targets. This includes any default targets added automatically by @B_android#support#v7#graphics#Palette_E@.", "history": "added in version 23.2.0", "FullName": "Palette.Builder clearTargets ()"}, "Palette.Builder(android.graphics.Bitmap)": {"Returns": [], "Parameters": [["@B_android#graphics#Bitmap_E@", "Bitmap no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Construct a new @B_android#support#v7#graphics#Palette#Builder_E@ using a source @B_android#graphics#Bitmap_E@", "history": "added in version 22.1.0", "FullName": "Palette.Builder (Bitmap bitmap)"}, "maximumColorCount(int)": {"Returns": [["@B_android#support#v7#graphics#Palette#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the maximum number of colors to use in the quantization step when using a @B_android#graphics#Bitmap_E@ as the source. Good values for depend on the source image type. For landscapes, good values are in the range 10-16. For images which are largely made up of people's faces then this value should be increased to ~24.", "history": "added in version 22.1.0", "FullName": "Palette.Builder maximumColorCount (int colors)"}, "clearRegion()": {"Returns": [["@B_android#support#v7#graphics#Palette#Builder_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Clear any previously region set via @B_android#support#v7#graphics#Palette#Builder#setRegion_E@.", "history": "added in version 23.1.0", "FullName": "Palette.Builder clearRegion ()"}, "generate()": {"Returns": [["@B_android#support#v7#graphics#Palette_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Generate and return the @B_android#support#v7#graphics#Palette_E@ synchronously.", "history": "added in version 22.1.0", "FullName": "Palette generate ()"}, "resizeBitmapArea(int)": {"Returns": [["@B_android#support#v7#graphics#Palette#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: the number of pixels that the intermediary scaled down Bitmap should cover, or any value <= 0 to disable resizing."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the resize value when using a @B_android#graphics#Bitmap_E@ as the source. If the bitmap's area is greater than the value specified, then the bitmap will be resized so that its area matches area. If the bitmap is smaller or equal, the original is used as-is. This value has a large effect on the processing time. The larger the resized image is, the greater time it will take to generate the palette. The smaller the image is, the more detail is lost in the resulting image and thus less precision for color selection.", "history": "added in version 23.2.0", "FullName": "Palette.Builder resizeBitmapArea (int area)"}, "resizeBitmapSize(int)": {"Returns": [["@B_android#support#v7#graphics#Palette#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: the number of pixels that the max dimension should be scaled down to, or any value <= 0 to disable resizing."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Using @B_android#support#v7#graphics#Palette#Builder#resizeBitmapArea_E@ is preferred since it can handle abnormal aspect ratios more gracefully. Set the resize value when using a @B_android#graphics#Bitmap_E@ as the source. If the bitmap's largest dimension is greater than the value specified, then the bitmap will be resized so that its largest dimension matches maxDimension. If the bitmap is smaller or equal, the original is used as-is.", "history": "added in version 22.1.0", "FullName": "Palette.Builder resizeBitmapSize (int maxDimension)"}, "clearFilters()": {"Returns": [["@B_android#support#v7#graphics#Palette#Builder_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Clear all added filters. This includes any default filters added automatically by @B_android#support#v7#graphics#Palette_E@.", "history": "added in version 23.0.0", "FullName": "Palette.Builder clearFilters ()"}, "setRegion(int, int, int, int)": {"Returns": [["@B_android#support#v7#graphics#Palette#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: The left side of the rectangle used for the region."], ["int", "int: The top of the rectangle used for the region."], ["int", "int: The right side of the rectangle used for the region."], ["int", "int: The bottom of the rectangle used for the region."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a region of the bitmap to be used exclusively when calculating the palette. This only works when the original input is a @B_android#graphics#Bitmap_E@.", "history": "added in version 23.1.0", "FullName": "Palette.Builder setRegion (int left, int top, int right, int bottom)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v7.graphics.Palette.Builder", "ClassDesc": "Builder class for generating @B_android#support#v7#graphics#Palette_E@ instances."}