{"Functions": {"onSetVolumeTo(int)": {"Returns": [], "Parameters": [["int", "int: The volume to set the output to."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override to handle requests to set the volume of the current output. After the volume has been modified @B_android#media#VolumeProvider#setCurrentVolume_E@ must be called to notify the system.", "history": "Added in API level 21", "FullName": "public void onSetVolumeTo (int volume)"}, "getVolumeControl()": {"Returns": [["int", "The volume control type for this volume provider Value is @B_android#media#VolumeProvider#VOLUME_CONTROL_FIXED_E@, @B_android#media#VolumeProvider#VOLUME_CONTROL_RELATIVE_E@, or @B_android#media#VolumeProvider#VOLUME_CONTROL_ABSOLUTE_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the volume control type that this volume provider uses.", "history": "Added in API level 21", "FullName": "public final int getVolumeControl ()"}, "getCurrentVolume()": {"Returns": [["int", "The current volume."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the current volume. This will be the last value set by @B_android#media#VolumeProvider#setCurrentVolume_E@.", "history": "Added in API level 21", "FullName": "public final int getCurrentVolume ()"}, "VolumeProvider(int, int, int)": {"Returns": [], "Parameters": [["int", "int: The method for controlling volume that is used by this provider."], ["int", "int: The maximum allowed volume."], ["int", "int: The current volume on the output."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new volume provider for handling volume events. You must specify the type of volume control, the maximum volume that can be used, and the current volume on the output.", "history": "added in API level 21", "FullName": "public VolumeProvider (int volumeControl, int maxVolume, int currentVolume)"}, "VolumeProvider(int,int,int)": {"Returns": [], "Parameters": [["int", "int: The method for controlling volume that is used by this provider. Value is @B_android#media#VolumeProvider#VOLUME_CONTROL_FIXED_E@, @B_android#media#VolumeProvider#VOLUME_CONTROL_RELATIVE_E@, or @B_android#media#VolumeProvider#VOLUME_CONTROL_ABSOLUTE_E@"], ["int", "int: The maximum allowed volume."], ["int", "int: The current volume on the output."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new volume provider for handling volume events. You must specify the type of volume control, the maximum volume that can be used, and the current volume on the output.", "history": "Added in API level 21", "FullName": "public VolumeProvider (int volumeControl, int maxVolume, int currentVolume)"}, "getMaxVolume()": {"Returns": [["int", "The max allowed volume."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the maximum volume this provider allows.", "history": "Added in API level 21", "FullName": "public final int getMaxVolume ()"}, "setCurrentVolume(int)": {"Returns": [], "Parameters": [["int", "int: The current volume on the output."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notify the system that the current volume has been changed. This must be called every time the volume changes to ensure it is displayed properly.", "history": "Added in API level 21", "FullName": "public final void setCurrentVolume (int currentVolume)"}, "onAdjustVolume(int)": {"Returns": [], "Parameters": [["int", "int: The direction to change the volume in."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override to handle requests to adjust the volume of the current output. Direction will be one of @B_android#media#AudioManager#ADJUST_LOWER_E@, @B_android#media#AudioManager#ADJUST_RAISE_E@, @B_android#media#AudioManager#ADJUST_SAME_E@. After the volume has been modified @B_android#media#VolumeProvider#setCurrentVolume_E@ must be called to notify the system.", "history": "Added in API level 21", "FullName": "public void onAdjustVolume (int direction)"}}, "Inheritance": [], "ClassName": "android.media.VolumeProvider", "ClassDesc": "Handles requests to adjust or set the volume on a session. This is also used to push volume updates back to the session. The provider must call @B_android#media#VolumeProvider#setCurrentVolume_E@ each time the volume being provided changes. You can set a volume provider on a session by calling @B_android#media#session#MediaSession#setPlaybackToRemote_E@."}