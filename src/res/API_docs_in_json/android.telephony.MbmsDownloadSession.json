{"Functions": {"setTempFileRootDirectory(java.io.File)": {"Returns": [], "Parameters": [["@B_java#io#File_E@", "File: A directory to place temp files in. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the temp file root for downloads. All temp files created for the middleware to write to will be contained in the specified directory. Applications that wish to specify a location only need to call this method once as long their data is persisted in storage -- the argument will be stored both in a local instance of @B_android#content#SharedPreferences_E@ and by the middleware. If this method is not called at least once before calling @B_android#telephony#MbmsDownloadSession#download_E@, the framework will default to a directory formed by the concatenation of the app's files directory and @B_android#telephony#MbmsDownloadSession#DEFAULT_TOP_LEVEL_TEMP_DIRECTORY_E@. Before calling this method, the app must cancel all of its pending @B_android#telephony#mbms#DownloadRequest_E@s via @B_android#telephony#MbmsDownloadSession#cancelDownload_E@. If this is not done, you will receive an asynchronous error with code @B_android#telephony#mbms#MbmsErrors#DownloadErrors#ERROR_CANNOT_CHANGE_TEMP_FILE_ROOT_E@ unless the provided directory is the same as what has been previously configured. The @B_java#io#File_E@ supplied as a root temp file directory must already exist. If not, an @B_java#lang#IllegalArgumentException_E@ will be thrown. In addition, as an additional sanity check, an @B_java#lang#IllegalArgumentException_E@ will be thrown if you attempt to set the temp file root directory to one of your data roots (the value of @B_android#content#Context#getDataDir_E@, @B_android#content#Context#getFilesDir_E@, or @B_android#content#Context#getCacheDir_E@).", "history": "Added in API level 28", "FullName": "public void setTempFileRootDirectory (File tempFileRootDirectory)"}, "removeStatusListener(android.telephony.mbms.DownloadRequest,android.telephony.mbms.DownloadStatusListener)": {"Returns": [], "Parameters": [["@B_android#telephony#mbms#DownloadRequest_E@", "DownloadRequest: The @B_android#telephony#mbms#DownloadRequest_E@ provided during registration This value must never be null."], ["@B_android#telephony#mbms#DownloadStatusListener_E@", "DownloadStatusListener: The listener provided during registration. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Un-register a listener previously registered via @B_android#telephony#MbmsDownloadSession#addStatusListener_E@. After this method is called, no further calls will be enqueued on the @B_java#util#concurrent#Executor_E@ provided upon registration, even if this method throws an exception. If the middleware is not aware of the specified download request, this method will throw an @B_java#lang#IllegalArgumentException_E@. If the operation encountered an error, the error code will be delivered via @B_android#telephony#mbms#MbmsDownloadSessionCallback#onError_E@.", "history": "Added in API level 28", "FullName": "public void removeStatusListener (DownloadRequest request, DownloadStatusListener listener)"}, "create(android.content.Context,java.util.concurrent.Executor,int,android.telephony.mbms.MbmsDownloadSessionCallback)": {"Returns": [["@B_android#telephony#MbmsDownloadSession_E@", "A new instance of @B_android#telephony#MbmsDownloadSession_E@, or null if an error occurred during setup."]], "Parameters": [["@B_android#content#Context_E@", "Context: The instance of @B_android#content#Context_E@ to use This value must never be null."], ["@B_java#util#concurrent#Executor_E@", "Executor: The executor on which you wish to execute callbacks. This value must never be null."], ["int", "int: The data subscription ID to use"], ["@B_android#telephony#mbms#MbmsDownloadSessionCallback_E@", "MbmsDownloadSessionCallback: A callback to get asynchronous error messages and file service updates. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new MbmsDownloadManager using the given subscription ID. Note that this call will bind a remote service and that may take a bit. The instance of @B_android#telephony#MbmsDownloadSession_E@ that is returned will not be ready for use until @B_android#telephony#mbms#MbmsDownloadSessionCallback#onMiddlewareReady_E@ is called on the provided callback. If you attempt to use the instance before it is ready, an @B_java#lang#IllegalStateException_E@ will be thrown or an error will be delivered through @B_android#telephony#mbms#MbmsDownloadSessionCallback#onError_E@. This also may throw an @B_java#lang#IllegalArgumentException_E@. You may only have one instance of @B_android#telephony#MbmsDownloadSession_E@ per UID. If you call this method while there is an active instance of @B_android#telephony#MbmsDownloadSession_E@ in your process (in other words, one that has not had @B_android#telephony#MbmsDownloadSession#close_E@ called on it), this method will throw an @B_java#lang#IllegalStateException_E@. If you call this method in a different process running under the same UID, an error will be indicated via @B_android#telephony#mbms#MbmsDownloadSessionCallback#onError_E@. Note that initialization may fail asynchronously. If you wish to try again after you receive such an asynchronous error, you must call @B_android#telephony#MbmsDownloadSession#close_E@ on the instance of @B_android#telephony#MbmsDownloadSession_E@ that you received before calling this method again.", "history": "Added in API level 28", "FullName": "public static MbmsDownloadSession create (Context context, Executor executor, int subscriptionId, MbmsDownloadSessionCallback callback)"}, "requestUpdateFileServices(java.util.List<java.lang.String>)": {"Returns": [], "Parameters": [["@B_java#util#List_E@", "List: A list of service classes which the app wishes to receive @B_android#telephony#mbms#MbmsDownloadSessionCallback#onFileServicesUpdated_E@ callbacks about. Subsequent calls to this method will replace this list of service classes (i.e. the middleware will no longer send updates for services matching classes only in the old list). Values in this list should be negotiated with the wireless carrier prior to using this API. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "An inspection API to retrieve the list of available @B_android#telephony#mbms#FileServiceInfo_E@s currently being advertised. The results are returned asynchronously via a call to @B_android#telephony#mbms#MbmsDownloadSessionCallback#onFileServicesUpdated_E@ Asynchronous error codes via the @B_android#telephony#mbms#MbmsDownloadSessionCallback#onError_E@ callback may include any of the errors that are not specific to the streaming use-case. May throw an @B_java#lang#IllegalStateException_E@ or @B_java#lang#IllegalArgumentException_E@.", "history": "Added in API level 28", "FullName": "public void requestUpdateFileServices (List<String> classList)"}, "addProgressListener(android.telephony.mbms.DownloadRequest,java.util.concurrent.Executor,android.telephony.mbms.DownloadProgressListener)": {"Returns": [], "Parameters": [["@B_android#telephony#mbms#DownloadRequest_E@", "DownloadRequest: The @B_android#telephony#mbms#DownloadRequest_E@ that you want updates on. This value must never be null."], ["@B_java#util#concurrent#Executor_E@", "Executor: The @B_java#util#concurrent#Executor_E@ on which calls to listener should be executed. This value must never be null."], ["@B_android#telephony#mbms#DownloadProgressListener_E@", "DownloadProgressListener: The listener that should be called when the middleware has information to share on the progress of the download. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers a progress listener for a @B_android#telephony#mbms#DownloadRequest_E@ previously requested via @B_android#telephony#MbmsDownloadSession#download_E@. This listener will only be called as long as both this app and the middleware are both running -- if either one stops, no further calls on the provided @B_android#telephony#mbms#DownloadProgressListener_E@ will be enqueued. If the middleware is not aware of the specified download request, this method will throw an @B_java#lang#IllegalArgumentException_E@. If the operation encountered an error, the error code will be delivered via @B_android#telephony#mbms#MbmsDownloadSessionCallback#onError_E@. Repeated calls to this method for the same @B_android#telephony#mbms#DownloadRequest_E@ will replace the previously registered listener.", "history": "Added in API level 28", "FullName": "public void addProgressListener (DownloadRequest request, Executor executor, DownloadProgressListener listener)"}, "create(android.content.Context,java.util.concurrent.Executor,android.telephony.mbms.MbmsDownloadSessionCallback)": {"Returns": [["@B_android#telephony#MbmsDownloadSession_E@", "no returns description in source"]], "Parameters": [["@B_android#content#Context_E@", "Context: This value must never be null."], ["@B_java#util#concurrent#Executor_E@", "Executor: This value must never be null."], ["@B_android#telephony#mbms#MbmsDownloadSessionCallback_E@", "MbmsDownloadSessionCallback: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new @B_android#telephony#MbmsDownloadSession_E@ using the system default data subscription ID. See @B_android#telephony#MbmsDownloadSession#create_E@", "history": "Added in API level 28", "FullName": "public static MbmsDownloadSession create (Context context, Executor executor, MbmsDownloadSessionCallback callback)"}, "removeProgressListener(android.telephony.mbms.DownloadRequest,android.telephony.mbms.DownloadProgressListener)": {"Returns": [], "Parameters": [["@B_android#telephony#mbms#DownloadRequest_E@", "DownloadRequest: The @B_android#telephony#mbms#DownloadRequest_E@ provided during registration This value must never be null."], ["@B_android#telephony#mbms#DownloadProgressListener_E@", "DownloadProgressListener: The listener provided during registration. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Un-register a listener previously registered via @B_android#telephony#MbmsDownloadSession#addProgressListener_E@. After this method is called, no further callbacks will be enqueued on the @B_android#os#Handler_E@ provided upon registration, even if this method throws an exception. If the middleware is not aware of the specified download request, this method will throw an @B_java#lang#IllegalArgumentException_E@. If the operation encountered an error, the error code will be delivered via @B_android#telephony#mbms#MbmsDownloadSessionCallback#onError_E@.", "history": "Added in API level 28", "FullName": "public void removeProgressListener (DownloadRequest request, DownloadProgressListener listener)"}, "download(android.telephony.mbms.DownloadRequest)": {"Returns": [], "Parameters": [["@B_android#telephony#mbms#DownloadRequest_E@", "DownloadRequest: The request that specifies what should be downloaded. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Requests the download of a file or set of files that the carrier has indicated to be available. May throw an @B_java#lang#IllegalArgumentException_E@ If @B_android#telephony#MbmsDownloadSession#setTempFileRootDirectory_E@ has not called after the app has been installed, this method will create a directory at the default location defined at @B_android#telephony#MbmsDownloadSession#DEFAULT_TOP_LEVEL_TEMP_DIRECTORY_E@ and store that as the temp file root directory. If the @B_android#telephony#mbms#DownloadRequest_E@ has a destination that is not on the same filesystem as the temp file directory provided via @B_android#telephony#MbmsDownloadSession#getTempFileRootDirectory_E@, an @B_java#lang#IllegalArgumentException_E@ will be thrown. Asynchronous errors through the callback may include any error not specific to the streaming use-case. If no error is delivered via the callback after calling this method, that means that the middleware has successfully started the download or scheduled the download, if the download is at a future time.", "history": "Added in API level 28", "FullName": "public void download (DownloadRequest request)"}, "addStatusListener(android.telephony.mbms.DownloadRequest,java.util.concurrent.Executor,android.telephony.mbms.DownloadStatusListener)": {"Returns": [], "Parameters": [["@B_android#telephony#mbms#DownloadRequest_E@", "DownloadRequest: The @B_android#telephony#mbms#DownloadRequest_E@ that you want updates on. This value must never be null."], ["@B_java#util#concurrent#Executor_E@", "Executor: The @B_java#util#concurrent#Executor_E@ on which calls to listener should be executed. This value must never be null."], ["@B_android#telephony#mbms#DownloadStatusListener_E@", "DownloadStatusListener: The listener that should be called when the middleware has information to share on the status download. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers a download status listener for a @B_android#telephony#mbms#DownloadRequest_E@ previously requested via @B_android#telephony#MbmsDownloadSession#download_E@. This callback will only be called as long as both this app and the middleware are both running -- if either one stops, no further calls on the provided @B_android#telephony#mbms#DownloadStatusListener_E@ will be enqueued. If the middleware is not aware of the specified download request, this method will throw an @B_java#lang#IllegalArgumentException_E@. If the operation encountered an error, the error code will be delivered via @B_android#telephony#mbms#MbmsDownloadSessionCallback#onError_E@. Repeated calls to this method for the same @B_android#telephony#mbms#DownloadRequest_E@ will replace the previously registered listener.", "history": "Added in API level 28", "FullName": "public void addStatusListener (DownloadRequest request, Executor executor, DownloadStatusListener listener)"}, "close()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Terminates this instance. After this method returns, no further callbacks originating from the middleware will be enqueued on the provided instance of @B_android#telephony#mbms#MbmsDownloadSessionCallback_E@, but callbacks that have already been enqueued will still be delivered. It is safe to call @B_android#telephony#MbmsDownloadSession#create_E@ to obtain another instance of @B_android#telephony#MbmsDownloadSession_E@ immediately after this method returns. May throw an @B_java#lang#IllegalStateException_E@", "history": "Added in API level 28", "FullName": "public void close ()"}, "listPendingDownloads()": {"Returns": [["@B_java#util#List_E@", "A list, possibly empty, of @B_android#telephony#mbms#DownloadRequest_E@s This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a list of pending @B_android#telephony#mbms#DownloadRequest_E@s that originated from this application. A pending request is one that was issued via @B_android#telephony#MbmsDownloadSession#download_E@ but not cancelled through @B_android#telephony#MbmsDownloadSession#cancelDownload_E@.", "history": "Added in API level 28", "FullName": "public List<DownloadRequest> listPendingDownloads ()"}, "resetDownloadKnowledge(android.telephony.mbms.DownloadRequest)": {"Returns": [], "Parameters": [["@B_android#telephony#mbms#DownloadRequest_E@", "DownloadRequest: The request to re-download files for."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Resets the middleware's knowledge of previously-downloaded files in this download request. Normally, the middleware keeps track of the hashes of downloaded files and won't re-download files whose server-reported hash matches one of the already-downloaded files. This means that if the file is accidentally deleted by the user or by the app, the middleware will not try to download it again. This method will reset the middleware's cache of hashes for the provided @B_android#telephony#mbms#DownloadRequest_E@, so that previously downloaded content will be downloaded again when available. This will not interrupt in-progress downloads. This is distinct from cancelling and re-issuing the download request -- if you cancel and re-issue, the middleware will not clear its cache of download state information. If the middleware is not aware of the specified download request, an @B_java#lang#IllegalArgumentException_E@ will be thrown.", "history": "Added in API level 28", "FullName": "public void resetDownloadKnowledge (DownloadRequest downloadRequest)"}, "requestDownloadState(android.telephony.mbms.DownloadRequest,android.telephony.mbms.FileInfo)": {"Returns": [], "Parameters": [["@B_android#telephony#mbms#DownloadRequest_E@", "DownloadRequest: The download request to query."], ["@B_android#telephony#mbms#FileInfo_E@", "FileInfo: The particular file within the request to get information on."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Requests information about the state of a file pending download. The state will be delivered as a callback via @B_android#telephony#mbms#DownloadStatusListener#onStatusUpdated_E@. If no such callback has been registered via @B_android#telephony#MbmsDownloadSession#addProgressListener_E@, this method will be a no-op. If the middleware has no record of the file indicated by fileInfo being associated with downloadRequest, an @B_java#lang#IllegalArgumentException_E@ will be thrown.", "history": "Added in API level 28", "FullName": "public void requestDownloadState (DownloadRequest downloadRequest, FileInfo fileInfo)"}, "cancelDownload(android.telephony.mbms.DownloadRequest)": {"Returns": [], "Parameters": [["@B_android#telephony#mbms#DownloadRequest_E@", "DownloadRequest: The download request that you wish to cancel. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Attempts to cancel the specified @B_android#telephony#mbms#DownloadRequest_E@. If the operation encountered an error, the error code will be delivered via @B_android#telephony#mbms#MbmsDownloadSessionCallback#onError_E@.", "history": "Added in API level 28", "FullName": "public void cancelDownload (DownloadRequest downloadRequest)"}, "getTempFileRootDirectory()": {"Returns": [["@B_java#io#File_E@", "A @B_java#io#File_E@ pointing to the configured temp file directory, or null if not yet configured."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the currently configured temp file root directory. Returns the file that was configured via @B_android#telephony#MbmsDownloadSession#setTempFileRootDirectory_E@ or the default directory @B_android#telephony#MbmsDownloadSession#download_E@ was called without ever setting the temp file root. If neither method has been called since the last time the app's shared preferences were reset, returns null.", "history": "Added in API level 28", "FullName": "public File getTempFileRootDirectory ()"}}, "Inheritance": [], "ClassName": "android.telephony.MbmsDownloadSession", "ClassDesc": "This class provides functionality for file download over MBMS."}