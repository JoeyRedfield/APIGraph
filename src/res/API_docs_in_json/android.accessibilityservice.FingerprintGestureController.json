{"Functions": {"unregisterFingerprintGestureCallback(android.accessibilityservice.FingerprintGestureController.FingerprintGestureCallback)": {"Returns": [], "Parameters": [["@B_android#accessibilityservice#FingerprintGestureController#FingerprintGestureCallback_E@", "FingerprintGestureController.FingerprintGestureCallback: The callback to remove. Removing a callback that was never added has no effect."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Unregister a listener added with @B_android#accessibilityservice#FingerprintGestureController#registerFingerprintGestureCallback_E@.", "history": "Added in API level 26", "FullName": "public void unregisterFingerprintGestureCallback (FingerprintGestureController.FingerprintGestureCallback callback)"}, "registerFingerprintGestureCallback(android.accessibilityservice.FingerprintGestureController.FingerprintGestureCallback,android.os.Handler)": {"Returns": [], "Parameters": [["@B_android#accessibilityservice#FingerprintGestureController#FingerprintGestureCallback_E@", "FingerprintGestureController.FingerprintGestureCallback: The listener to be added. This value must never be null."], ["@B_android#os#Handler_E@", "Handler: The handler to use for the callback. If null, callbacks will happen on the service's main thread. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Register a callback to be informed of fingerprint sensor gesture events.", "history": "Added in API level 26", "FullName": "public void registerFingerprintGestureCallback (FingerprintGestureController.FingerprintGestureCallback callback, Handler handler)"}, "isGestureDetectionAvailable()": {"Returns": [["boolean", "true if the sensor's gesture detection is available. false if it is not currently detecting gestures (for example, if it is enrolling a finger)."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets if the fingerprint sensor's gesture detection is available.", "history": "Added in API level 26", "FullName": "public boolean isGestureDetectionAvailable ()"}}, "Inheritance": [], "ClassName": "android.accessibilityservice.FingerprintGestureController", "ClassDesc": "An @B_android#accessibilityservice#AccessibilityService_E@ can capture gestures performed on a device's fingerprint sensor, as long as the device has a sensor capable of detecting gestures. This capability must be declared by the service as @B_android#accessibilityservice#AccessibilityServiceInfo#CAPABILITY_CAN_REQUEST_FINGERPRINT_GESTURES_E@. It also requires the permission @B_android#Manifest#permission#USE_FINGERPRINT_E@. Because capturing fingerprint gestures may have side effects, services with the capability only capture gestures when @B_android#accessibilityservice#AccessibilityServiceInfo#FLAG_REQUEST_FINGERPRINT_GESTURES_E@ is set. @B_android#accessibilityservice#FingerprintGestureController#FingerprintGestureCallback#onGestureDetectionAvailabilityChanged_E@ to learn when gesture detection becomes unavailable. Multiple accessibility services may listen for fingerprint gestures simultaneously, so services should provide a way for the user to disable the use of this feature so multiple services don't conflict with each other."}