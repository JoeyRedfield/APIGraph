{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 28", "FullName": "public String toString ()"}, "getSpi()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the underlying SPI held by this object.", "history": "Added in API level 28", "FullName": "public int getSpi ()"}, "close()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Release an SPI that was previously reserved. Release an SPI for use by other users in the system. If a SecurityParameterIndex is applied to an IpSecTransform, it will become unusable for future transforms but should still be closed to ensure system resources are released.", "history": "Added in API level 28", "FullName": "public void close ()"}, "finalize()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#lang#Throwable_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Check that the SPI was closed properly.", "history": "Added in API level 28", "FullName": "protected void finalize ()"}}, "Inheritance": [], "ClassName": "android.net.IpSecManager.SecurityParameterIndex", "ClassDesc": "This class represents a reserved SPI. Objects of this type are used to track reserved security parameter indices. They can be obtained by calling @B_android#net#IpSecManager#allocateSecurityParameterIndex_E@ and must be released by calling @B_android#net#IpSecManager#SecurityParameterIndex#close_E@ when they are no longer needed."}