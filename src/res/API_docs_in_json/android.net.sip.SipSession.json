{"Functions": {"setListener(android.net.sip.SipSession.Listener)": {"Returns": [], "Parameters": [["@B_android#net#sip#SipSession#Listener_E@", "SipSession.Listener: to listen to the session events of this object"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the listener to listen to the session events. A SipSession can only hold one listener at a time. Subsequent calls to this method override the previous listener.", "history": "Added in API level 9", "FullName": "public void setListener (SipSession.Listener listener)"}, "getState()": {"Returns": [["int", "the session state"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the session state. The value returned must be one of the states in @B_android#net#sip#SipSession#State_E@.", "history": "Added in API level 9", "FullName": "public int getState ()"}, "isInCall()": {"Returns": [["boolean", "true if the session is in a call"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks if the session is in a call.", "history": "Added in API level 9", "FullName": "public boolean isInCall ()"}, "getPeerProfile()": {"Returns": [["@B_android#net#sip#SipProfile_E@", "the SIP profile that this session is connected to"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the SIP profile that this session is connected to. Only available when the session is associated with a SIP dialog.", "history": "Added in API level 9", "FullName": "public SipProfile getPeerProfile ()"}, "getLocalIp()": {"Returns": [["@B_java#lang#String_E@", "the IP address of the local host"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the IP address of the local host on which this SIP session runs.", "history": "Added in API level 9", "FullName": "public String getLocalIp ()"}, "getLocalProfile()": {"Returns": [["@B_android#net#sip#SipProfile_E@", "the SIP profile that this session is associated with"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the SIP profile that this session is associated with.", "history": "Added in API level 9", "FullName": "public SipProfile getLocalProfile ()"}, "changeCall(java.lang.String,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the new session description"], ["int", "int: the session will be timed out if the call is not established within timeout seconds. Default value (defined by SIP protocol) is used if timeout is zero or negative."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Changes the session description during a call. The method is only valid to call when the session state is in @B_android#net#sip#SipSession#State#IN_CALL_E@.", "history": "Added in API level 9", "FullName": "public void changeCall (String sessionDescription, int timeout)"}, "changeCall(java.lang.String, int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the new session description"], ["int", "int: the session will be timed out if the call is not established within timeout seconds. Default value (defined by SIP protocol) is used if timeout is zero or negative."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Changes the session description during a call. The method is only valid to call when the session state is in @B_android#net#sip#SipSession#State#IN_CALL_E@.", "history": "added in API level 9", "FullName": "public void changeCall (String sessionDescription, int timeout)"}, "register(int)": {"Returns": [], "Parameters": [["int", "int: duration in second before the registration expires"]], "Throws": [], "SeeAlso": ["@B_android#net#sip#SipSession#Listener_E@"], "Permissions": [], "Description": "Performs registration to the server specified by the associated local profile. The session listener is called back upon success or failure of registration. The method is only valid to call when the session state is in @B_android#net#sip#SipSession#State#READY_TO_CALL_E@.", "history": "Added in API level 9", "FullName": "public void register (int duration)"}, "answerCall(java.lang.String, int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the session description to answer this call"], ["int", "int: the session will be timed out if the call is not established within timeout seconds. Default value (defined by SIP protocol) is used if timeout is zero or negative."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Answers an incoming call with the specified session description. The method is only valid to call when the session state is in @B_android#net#sip#SipSession#State#INCOMING_CALL_E@.", "history": "added in API level 9", "FullName": "public void answerCall (String sessionDescription, int timeout)"}, "unregister()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#net#sip#SipSession#Listener_E@"], "Permissions": [], "Description": "Performs unregistration to the server specified by the associated local profile. Unregistration is technically the same as registration with zero expiration duration. The session listener is called back upon success or failure of unregistration. The method is only valid to call when the session state is in @B_android#net#sip#SipSession#State#READY_TO_CALL_E@.", "history": "Added in API level 9", "FullName": "public void unregister ()"}, "getCallId()": {"Returns": [["@B_java#lang#String_E@", "the call ID"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the call ID of the session.", "history": "Added in API level 9", "FullName": "public String getCallId ()"}, "endCall()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Ends an established call, terminates an outgoing call or rejects an incoming call. The method is only valid to call when the session state is in @B_android#net#sip#SipSession#State#IN_CALL_E@, @B_android#net#sip#SipSession#State#INCOMING_CALL_E@, @B_android#net#sip#SipSession#State#OUTGOING_CALL_E@ or @B_android#net#sip#SipSession#State#OUTGOING_CALL_RING_BACK_E@.", "history": "Added in API level 9", "FullName": "public void endCall ()"}, "answerCall(java.lang.String,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the session description to answer this call"], ["int", "int: the session will be timed out if the call is not established within timeout seconds. Default value (defined by SIP protocol) is used if timeout is zero or negative."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Answers an incoming call with the specified session description. The method is only valid to call when the session state is in @B_android#net#sip#SipSession#State#INCOMING_CALL_E@.", "history": "Added in API level 9", "FullName": "public void answerCall (String sessionDescription, int timeout)"}, "makeCall(android.net.sip.SipProfile,java.lang.String,int)": {"Returns": [], "Parameters": [["@B_android#net#sip#SipProfile_E@", "SipProfile: the SIP profile to make the call to"], ["@B_java#lang#String_E@", "String: the session description of this call"], ["int", "int: the session will be timed out if the call is not established within timeout seconds. Default value (defined by SIP protocol) is used if timeout is zero or negative."]], "Throws": [], "SeeAlso": ["@B_android#net#sip#SipSession#Listener_E@"], "Permissions": [], "Description": "Initiates a call to the specified profile. The session listener is called back upon defined session events. The method is only valid to call when the session state is in @B_android#net#sip#SipSession#State#READY_TO_CALL_E@.", "history": "Added in API level 9", "FullName": "public void makeCall (SipProfile callee, String sessionDescription, int timeout)"}}, "Inheritance": [], "ClassName": "android.net.sip.SipSession", "ClassDesc": "Represents a SIP session that is associated with a SIP dialog or a standalone transaction not within a dialog. You can get a @B_android#net#sip#SipSession_E@ from @B_android#net#sip#SipManager_E@ with @B_android#net#sip#SipManager#createSipSession_E@ (when initiating calls) or @B_android#net#sip#SipManager#getSessionFor_E@ (when receiving calls)."}