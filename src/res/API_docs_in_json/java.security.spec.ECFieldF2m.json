{"Functions": {"ECFieldF2m(int,int[])": {"Returns": [], "Parameters": [["int", "int: with 2^m being the number of elements."], ["int[]", "int: the order of the middle term(s) of the reduction polynomial. Contents of this array are copied to protect against subsequent modification."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if ks is null."], ["@B_java#lang#IllegalArgumentException_E@", "ifm is not positive, or the length of ks is neither 1 nor 3, or values in ks are not between m-1 and 1 (inclusive) and in descending order."]], "SeeAlso": [], "Permissions": [], "Description": "Creates an elliptic curve characteristic 2 finite field which has 2^m elements with polynomial basis. The reduction polynomial for this field is based on ks whose content contains the order of the middle term(s) of the reduction polynomial. Note: A valid reduction polynomial is either a trinomial (X^m + X^k + 1 with m > k >= 1) or a pentanomial (X^m + X^k3 + X^k2 + X^k1 + 1 with m > k3 > k2 > k1 >= 1), so ks should have length 1 or 3.", "history": "Added in API level 1", "FullName": "public ECFieldF2m (int m, int[] ks)"}, "getFieldSize()": {"Returns": [["int", "the field size in bits."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the field size in bits which is m for this characteristic 2 finite field.", "history": "Added in API level 1", "FullName": "public int getFieldSize ()"}, "ECFieldF2m(int, java.math.BigInteger)": {"Returns": [], "Parameters": [["int", "int: with 2^m being the number of elements."], ["@B_java#math#BigInteger_E@", "BigInteger: the BigInteger whose i-th bit corresponds to the i-th coefficient of the reduction polynomial."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if rp is null."], ["@B_java#lang#IllegalArgumentException_E@", "if m is not positive, or rp does not represent a valid reduction polynomial."]], "SeeAlso": [], "Permissions": [], "Description": "Creates an elliptic curve characteristic 2 finite field which has 2^m elements with polynomial basis. The reduction polynomial for this field is based on rp whose i-th bit corresponds to the i-th coefficient of the reduction polynomial. Note: A valid reduction polynomial is either a trinomial (X^m + X^k + 1 with m > k >= 1) or a pentanomial (X^m + X^k3 + X^k2 + X^k1 + 1 with m > k3 > k2 > k1 >= 1).", "history": "added in API level 1", "FullName": "public ECFieldF2m (int m, BigInteger rp)"}, "ECFieldF2m(int)": {"Returns": [], "Parameters": [["int", "int: with 2^m being the number of elements."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if m is not positive."]], "SeeAlso": [], "Permissions": [], "Description": "Creates an elliptic curve characteristic 2 finite field which has 2^m elements with normal basis.", "history": "Added in API level 1", "FullName": "public ECFieldF2m (int m)"}, "getM()": {"Returns": [["int", "m with 2^m being the number of elements."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value m of this characteristic 2 finite field.", "history": "Added in API level 1", "FullName": "public int getM ()"}, "getReductionPolynomial()": {"Returns": [["@B_java#math#BigInteger_E@", "a BigInteger whose i-th bit corresponds to the i-th coefficient of the reduction polynomial for polynomial basis or null for normal basis."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a BigInteger whose i-th bit corresponds to the i-th coefficient of the reduction polynomial for polynomial basis or null for normal basis.", "history": "Added in API level 1", "FullName": "public BigInteger getReductionPolynomial ()"}, "ECFieldF2m(int, int[])": {"Returns": [], "Parameters": [["int", "int: with 2^m being the number of elements."], ["int[]", "int: the order of the middle term(s) of the reduction polynomial. Contents of this array are copied to protect against subsequent modification."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if ks is null."], ["@B_java#lang#IllegalArgumentException_E@", "ifm is not positive, or the length of ks is neither 1 nor 3, or values in ks are not between m-1 and 1 (inclusive) and in descending order."]], "SeeAlso": [], "Permissions": [], "Description": "Creates an elliptic curve characteristic 2 finite field which has 2^m elements with polynomial basis. The reduction polynomial for this field is based on ks whose content contains the order of the middle term(s) of the reduction polynomial. Note: A valid reduction polynomial is either a trinomial (X^m + X^k + 1 with m > k >= 1) or a pentanomial (X^m + X^k3 + X^k2 + X^k1 + 1 with m > k3 > k2 > k1 >= 1), so ks should have length 1 or 3.", "history": "added in API level 1", "FullName": "public ECFieldF2m (int m, int[] ks)"}, "getMidTermsOfReductionPolynomial()": {"Returns": [["int[]", "an integer array which contains the order of the middle term(s) of the reduction polynomial for polynomial basis or null for normal basis. A new array is returned each time this method is called."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an integer array which contains the order of the middle term(s) of the reduction polynomial for polynomial basis or null for normal basis.", "history": "Added in API level 1", "FullName": "public int[] getMidTermsOfReductionPolynomial ()"}, "ECFieldF2m(int,java.math.BigInteger)": {"Returns": [], "Parameters": [["int", "int: with 2^m being the number of elements."], ["@B_java#math#BigInteger_E@", "BigInteger: the BigInteger whose i-th bit corresponds to the i-th coefficient of the reduction polynomial."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if rp is null."], ["@B_java#lang#IllegalArgumentException_E@", "if m is not positive, or rp does not represent a valid reduction polynomial."]], "SeeAlso": [], "Permissions": [], "Description": "Creates an elliptic curve characteristic 2 finite field which has 2^m elements with polynomial basis. The reduction polynomial for this field is based on rp whose i-th bit corresponds to the i-th coefficient of the reduction polynomial. Note: A valid reduction polynomial is either a trinomial (X^m + X^k + 1 with m > k >= 1) or a pentanomial (X^m + X^k3 + X^k2 + X^k1 + 1 with m > k3 > k2 > k1 >= 1).", "history": "Added in API level 1", "FullName": "public ECFieldF2m (int m, BigInteger rp)"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if obj is an instance of ECFieldF2m and both m and the reduction polynomial match, false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the object to be compared."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Compares this finite field for equality with the specified object.", "history": "Added in API level 1", "FullName": "public boolean equals (Object obj)"}, "hashCode()": {"Returns": [["int", "a hash code value."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code value for this characteristic 2 finite field.", "history": "Added in API level 1", "FullName": "public int hashCode ()"}}, "Inheritance": [], "ClassName": "java.security.spec.ECFieldF2m", "ClassDesc": "This immutable class defines an elliptic curve (EC) characteristic 2 finite field."}