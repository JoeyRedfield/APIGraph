{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 5", "FullName": "public String toString ()"}, "create(A, B)": {"Returns": [["@B_android#util#Pair_E@", "a Pair that is templatized with the types of a and b"]], "Parameters": [["A", "A: the first object in the Pair"], ["B", "B: the second object in the pair"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Convenience method for creating an appropriately typed pair.", "history": "added in API level 5", "FullName": "public static Pair<A, B> create (A a, B b)"}, "Pair(F,S)": {"Returns": [], "Parameters": [["F", "F: the first object in the Pair"], ["S", "S: the second object in the pair"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor for a Pair.", "history": "Added in API level 5", "FullName": "public Pair (F first, S second)"}, "Pair(F, S)": {"Returns": [], "Parameters": [["F", "F: the first object in the Pair"], ["S", "S: the second object in the pair"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor for a Pair.", "history": "added in API level 5", "FullName": "public Pair (F first, S second)"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if the underlying objects of the Pair are both considered equal"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the @B_android#util#Pair_E@ to which this one is to be checked for equality"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks the two objects for equality by delegating to their respective @B_java#lang#Object#equals_E@ methods.", "history": "Added in API level 5", "FullName": "public boolean equals (Object o)"}, "hashCode()": {"Returns": [["int", "a hashcode of the Pair"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Compute a hash code using the hash codes of the underlying objects", "history": "Added in API level 5", "FullName": "public int hashCode ()"}, "create(A,B)": {"Returns": [["@B_android#util#Pair_E@", "a Pair that is templatized with the types of a and b"]], "Parameters": [["A", "A: the first object in the Pair"], ["B", "B: the second object in the pair"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Convenience method for creating an appropriately typed pair.", "history": "Added in API level 5", "FullName": "public static Pair<A, B> create (A a, B b)"}}, "Inheritance": [], "ClassName": "android.util.Pair<F, S>", "ClassDesc": "Container to ease passing around a tuple of two objects. This object provides a sensible implementation of equals(), returning true if equals() is true on each of the contained objects."}