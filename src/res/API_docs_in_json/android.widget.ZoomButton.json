{"Functions": {"setEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: True if this view is enabled, false otherwise."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the enabled state of this view. The interpretation of the enabled state varies by subclass.", "history": "Added in API level 1 Deprecated in API level 26", "FullName": "public void setEnabled (boolean enabled)"}, "ZoomButton(android.content.Context,android.util.AttributeSet,int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"], ["@B_android#util#AttributeSet_E@", "AttributeSet no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public ZoomButton (Context context, AttributeSet attrs, int defStyleAttr)"}, "onKeyUp(int, android.view.KeyEvent)": {"Returns": [["boolean", "If you handled the event, return true. If you want to allow the event to be handled by the next receiver, return false."]], "Parameters": [["int", "int: A key code that represents the button pressed, from @B_android#view#KeyEvent_E@."], ["@B_android#view#KeyEvent_E@", "KeyEvent: The KeyEvent object that defines the button action."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Default implementation of @B_android#view#KeyEvent#Callback#onKeyUp_E@: perform clicking of the view when @B_android#view#KeyEvent#KEYCODE_DPAD_CENTER_E@, @B_android#view#KeyEvent#KEYCODE_ENTER_E@ or @B_android#view#KeyEvent#KEYCODE_SPACE_E@ is released. Key presses in software keyboards will generally NOT trigger this listener, although some may elect to do so in some situations. Do not rely on this to catch software key presses.", "history": "added in API level 1", "FullName": "public boolean onKeyUp (int keyCode, KeyEvent event)"}, "ZoomButton(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public ZoomButton (Context context)"}, "dispatchUnhandledMove(android.view.View, int)": {"Returns": [["boolean", "True if the this view consumed this unhandled move."]], "Parameters": [["@B_android#view#View_E@", "View: The currently focused view."], ["int", "int: The direction focus wants to move. One of FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, and FOCUS_RIGHT."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method is the last chance for the focused view and its ancestors to respond to an arrow key. This is called when the focused view did not consume the key internally, nor could the view system find a new view in the requested direction to give focus to.", "history": "added in API level 1", "FullName": "public boolean dispatchUnhandledMove (View focused, int direction)"}, "dispatchUnhandledMove(android.view.View,int)": {"Returns": [["boolean", "True if the this view consumed this unhandled move."]], "Parameters": [["@B_android#view#View_E@", "View: The currently focused view."], ["int", "int: The direction focus wants to move. One of FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, and FOCUS_RIGHT. Value is @B_android#view#View#FOCUS_LEFT_E@, @B_android#view#View#FOCUS_UP_E@, @B_android#view#View#FOCUS_RIGHT_E@, or @B_android#view#View#FOCUS_DOWN_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method is the last chance for the focused view and its ancestors to respond to an arrow key. This is called when the focused view did not consume the key internally, nor could the view system find a new view in the requested direction to give focus to.", "history": "Added in API level 1 Deprecated in API level 26", "FullName": "public boolean dispatchUnhandledMove (View focused, int direction)"}, "setZoomSpeed(long)": {"Returns": [], "Parameters": [["long", "long: The delay between calls to the click listener, in milliseconds"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the delay between calls to the widget's @B_android#view#View#setOnClickListener_E@.", "history": "Added in API level 1 Deprecated in API level 26", "FullName": "public void setZoomSpeed (long speed)"}, "onTouchEvent(android.view.MotionEvent)": {"Returns": [["boolean", "True if the event was handled, false otherwise."]], "Parameters": [["@B_android#view#MotionEvent_E@", "MotionEvent: The motion event."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Implement this method to handle touch screen motion events. If this method is used to detect click actions, it is recommended that the actions be performed by implementing and calling @B_android#view#View#performClick_E@. This will ensure consistent system behavior, including: obeying click sound preferences dispatching OnClickListener calls handling @B_android#view#accessibility#AccessibilityNodeInfo#ACTION_CLICK_E@ when accessibility features are enabled", "history": "Added in API level 1 Deprecated in API level 26", "FullName": "public boolean onTouchEvent (MotionEvent event)"}, "onLongClick(android.view.View)": {"Returns": [["boolean", "true if the callback consumed the long click, false otherwise."]], "Parameters": [["@B_android#view#View_E@", "View: The view that was clicked and held."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a view has been clicked and held.", "history": "Added in API level 1 Deprecated in API level 26", "FullName": "public boolean onLongClick (View v)"}, "ZoomButton(android.content.Context,android.util.AttributeSet)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"], ["@B_android#util#AttributeSet_E@", "AttributeSet no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public ZoomButton (Context context, AttributeSet attrs)"}, "ZoomButton(android.content.Context,android.util.AttributeSet,int,int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"], ["@B_android#util#AttributeSet_E@", "AttributeSet no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 21", "FullName": "public ZoomButton (Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes)"}, "onKeyUp(int,android.view.KeyEvent)": {"Returns": [["boolean", "If you handled the event, return true. If you want to allow the event to be handled by the next receiver, return false."]], "Parameters": [["int", "int: A key code that represents the button pressed, from @B_android#view#KeyEvent_E@."], ["@B_android#view#KeyEvent_E@", "KeyEvent: The KeyEvent object that defines the button action."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Default implementation of @B_android#view#KeyEvent#Callback#onKeyUp_E@: perform clicking of the view when @B_android#view#KeyEvent#KEYCODE_DPAD_CENTER_E@, @B_android#view#KeyEvent#KEYCODE_ENTER_E@ or @B_android#view#KeyEvent#KEYCODE_SPACE_E@ is released. Key presses in software keyboards will generally NOT trigger this listener, although some may elect to do so in some situations. Do not rely on this to catch software key presses.", "history": "Added in API level 1 Deprecated in API level 26", "FullName": "public boolean onKeyUp (int keyCode, KeyEvent event)"}, "getAccessibilityClassName()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the class name of this object to be used for accessibility purposes. Subclasses should only override this if they are implementing something that should be seen as a completely new class of view when used by accessibility, unrelated to the class it is deriving from. This is used to fill in @B_android#view#accessibility#AccessibilityNodeInfo#setClassName_E@.", "history": "Added in API level 23 Deprecated in API level 26", "FullName": "public CharSequence getAccessibilityClassName ()"}}, "Inheritance": ["@B_android#view#View_E@", "@B_android#widget#ImageView_E@", "@B_android#widget#ImageButton_E@"], "ClassName": "android.widget.ZoomButton", "ClassDesc": "Use other means to handle this functionality. This widget is merely a simple wrapper around a long-press handler. This widget provides a simple utility for turning a continued long-press event into a series of clicks at some set frequency. There is no actual 'zoom' functionality handled by this widget directly. Instead, clients of this API should set up an @B_android#view#View#setOnClickListener_E@ to handle zoom functionality. That click listener is called on a frequency determined by @B_android#widget#ZoomButton#setZoomSpeed_E@ whenever the user long-presses on the ZoomButton."}