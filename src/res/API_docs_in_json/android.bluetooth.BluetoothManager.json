{"Functions": {"getAdapter()": {"Returns": [["@B_android#bluetooth#BluetoothAdapter_E@", "the default BLUETOOTH Adapter"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the default BLUETOOTH Adapter for this device.", "history": "Added in API level 18", "FullName": "public BluetoothAdapter getAdapter ()"}, "getDevicesMatchingConnectionStates(int,int[])": {"Returns": [["@B_java#util#List_E@", "List of devices. The list will be empty on error."]], "Parameters": [["int", "int: GATT or GATT_SERVER"], ["int[]", "int: Array of states. States can be one of @B_android#bluetooth#BluetoothProfile#STATE_CONNECTED_E@, @B_android#bluetooth#BluetoothProfile#STATE_CONNECTING_E@, @B_android#bluetooth#BluetoothProfile#STATE_DISCONNECTED_E@, @B_android#bluetooth#BluetoothProfile#STATE_DISCONNECTING_E@,"]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Get a list of devices that match any of the given connection states. If none of the devices match any of the given states, an empty list will be returned. This is not specific to any application configuration but represents the connection state of the local Bluetooth adapter for this profile. This can be used by applications like status bar which would just like to know the state of the local adapter. Requires @B_android#Manifest#permission#BLUETOOTH_E@", "history": "Added in API level 18", "FullName": "public List<BluetoothDevice> getDevicesMatchingConnectionStates (int profile, int[] states)"}, "getConnectionState(android.bluetooth.BluetoothDevice,int)": {"Returns": [["int", "State of the profile connection. One of @B_android#bluetooth#BluetoothProfile#STATE_CONNECTED_E@, @B_android#bluetooth#BluetoothProfile#STATE_CONNECTING_E@, @B_android#bluetooth#BluetoothProfile#STATE_DISCONNECTED_E@, @B_android#bluetooth#BluetoothProfile#STATE_DISCONNECTING_E@"]], "Parameters": [["@B_android#bluetooth#BluetoothDevice_E@", "BluetoothDevice: Remote bluetooth device."], ["int", "int: GATT or GATT_SERVER"]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Get the current connection state of the profile to the remote device. This is not specific to any application configuration but represents the connection state of the local Bluetooth adapter for certain profile. This can be used by applications like status bar which would just like to know the state of Bluetooth. Requires @B_android#Manifest#permission#BLUETOOTH_E@", "history": "Added in API level 18", "FullName": "public int getConnectionState (BluetoothDevice device, int profile)"}, "openGattServer(android.content.Context,android.bluetooth.BluetoothGattServerCallback)": {"Returns": [["@B_android#bluetooth#BluetoothGattServer_E@", "BluetoothGattServer instance"]], "Parameters": [["@B_android#content#Context_E@", "Context: App context"], ["@B_android#bluetooth#BluetoothGattServerCallback_E@", "BluetoothGattServerCallback: GATT server callback handler that will receive asynchronous callbacks."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Open a GATT Server The callback is used to deliver results to Caller, such as connection status as well as the results of any other GATT server operations. The method returns a BluetoothGattServer instance. You can use BluetoothGattServer to conduct GATT server operations.", "history": "Added in API level 18", "FullName": "public BluetoothGattServer openGattServer (Context context, BluetoothGattServerCallback callback)"}, "getConnectedDevices(int)": {"Returns": [["@B_java#util#List_E@", "List of devices. The list will be empty on error."]], "Parameters": [["int", "int: GATT or GATT_SERVER"]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Get connected devices for the specified profile. Return the set of devices which are in state @B_android#bluetooth#BluetoothProfile#STATE_CONNECTED_E@ This is not specific to any application configuration but represents the connection state of Bluetooth for this profile. This can be used by applications like status bar which would just like to know the state of Bluetooth. Requires @B_android#Manifest#permission#BLUETOOTH_E@", "history": "Added in API level 18", "FullName": "public List<BluetoothDevice> getConnectedDevices (int profile)"}, "getDevicesMatchingConnectionStates(int, int[])": {"Returns": [["@B_java#util#List_E@", "List of devices. The list will be empty on error."]], "Parameters": [["int", "int: GATT or GATT_SERVER"], ["int[]", "int: Array of states. States can be one of @B_android#bluetooth#BluetoothProfile#STATE_CONNECTED_E@, @B_android#bluetooth#BluetoothProfile#STATE_CONNECTING_E@, @B_android#bluetooth#BluetoothProfile#STATE_DISCONNECTED_E@, @B_android#bluetooth#BluetoothProfile#STATE_DISCONNECTING_E@,"]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Get a list of devices that match any of the given connection states. If none of the devices match any of the given states, an empty list will be returned. This is not specific to any application configuration but represents the connection state of the local Bluetooth adapter for this profile. This can be used by applications like status bar which would just like to know the state of the local adapter.Requires the @B_android#Manifest#permission#BLUETOOTH_E@ permission.", "history": "added in API level 18", "FullName": "public List<BluetoothDevice> getDevicesMatchingConnectionStates (int profile, int[] states)"}}, "Inheritance": [], "ClassName": "android.bluetooth.BluetoothManager", "ClassDesc": "High level manager used to obtain an instance of an @B_android#bluetooth#BluetoothAdapter_E@ and to conduct overall Bluetooth Management. Use @B_android#content#Context#getSystemService_E@ with @B_android#content#Context#BLUETOOTH_SERVICE_E@ to create an @B_android#bluetooth#BluetoothManager_E@, then call @B_android#bluetooth#BluetoothManager#getAdapter_E@ to obtain the @B_android#bluetooth#BluetoothAdapter_E@. Requires the @B_android#content#pm#PackageManager#FEATURE_BLUETOOTH_E@ feature which can be detected using @B_android#content#pm#PackageManager#hasSystemFeature_E@."}