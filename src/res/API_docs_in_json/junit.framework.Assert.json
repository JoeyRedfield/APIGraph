{"Functions": {"assertEquals(char,char)": {"Returns": [], "Parameters": [["char", "char no parameter comment"], ["char", "char no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two chars are equal.", "history": "Added in API level 1", "FullName": "public static void assertEquals (char expected, char actual)"}, "assertEquals(java.lang.String, java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two Strings are equal.", "history": "added in API level 1", "FullName": "public static void assertEquals (String expected, String actual)"}, "assertEquals(java.lang.String,double,double,double)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["double", "double no parameter comment"], ["double", "double no parameter comment"], ["double", "double no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two doubles are equal concerning a delta. If they are not an AssertionFailedError is thrown with the given message. If the expected value is infinity then the delta value is ignored.", "history": "Added in API level 1", "FullName": "public static void assertEquals (String message, double expected, double actual, double delta)"}, "assertSame(java.lang.String,java.lang.Object,java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two objects refer to the same object. If they are not an AssertionFailedError is thrown with the given message.", "history": "Added in API level 1", "FullName": "public static void assertSame (String message, Object expected, Object actual)"}, "fail(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Fails a test with the given message.", "history": "Added in API level 1", "FullName": "public static void fail (String message)"}, "assertEquals(boolean, boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two booleans are equal.", "history": "added in API level 1", "FullName": "public static void assertEquals (boolean expected, boolean actual)"}, "assertEquals(java.lang.String,byte,byte)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["byte", "byte no parameter comment"], ["byte", "byte no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two bytes are equal. If they are not an AssertionFailedError is thrown with the given message.", "history": "Added in API level 1", "FullName": "public static void assertEquals (String message, byte expected, byte actual)"}, "assertEquals(java.lang.String, boolean, boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["boolean", "boolean no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two booleans are equal. If they are not an AssertionFailedError is thrown with the given message.", "history": "added in API level 1", "FullName": "public static void assertEquals (String message, boolean expected, boolean actual)"}, "assertEquals(java.lang.String, int, int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two ints are equal. If they are not an AssertionFailedError is thrown with the given message.", "history": "added in API level 1", "FullName": "public static void assertEquals (String message, int expected, int actual)"}, "failSame(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 16", "FullName": "public static void failSame (String message)"}, "assertEquals(java.lang.Object,java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two objects are equal. If they are not an AssertionFailedError is thrown.", "history": "Added in API level 1", "FullName": "public static void assertEquals (Object expected, Object actual)"}, "assertEquals(java.lang.String, char, char)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["char", "char no parameter comment"], ["char", "char no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two chars are equal. If they are not an AssertionFailedError is thrown with the given message.", "history": "added in API level 1", "FullName": "public static void assertEquals (String message, char expected, char actual)"}, "format(java.lang.String,java.lang.Object,java.lang.Object)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 16", "FullName": "public static String format (String message, Object expected, Object actual)"}, "assertSame(java.lang.Object, java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two objects refer to the same object. If they are not the same an AssertionFailedError is thrown.", "history": "added in API level 1", "FullName": "public static void assertSame (Object expected, Object actual)"}, "assertEquals(int,int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two ints are equal.", "history": "Added in API level 1", "FullName": "public static void assertEquals (int expected, int actual)"}, "assertEquals(java.lang.String, long, long)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["long", "long no parameter comment"], ["long", "long no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two longs are equal. If they are not an AssertionFailedError is thrown with the given message.", "history": "added in API level 1", "FullName": "public static void assertEquals (String message, long expected, long actual)"}, "assertEquals(java.lang.String, short, short)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["short", "short no parameter comment"], ["short", "short no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two shorts are equal. If they are not an AssertionFailedError is thrown with the given message.", "history": "added in API level 1", "FullName": "public static void assertEquals (String message, short expected, short actual)"}, "assertEquals(java.lang.Object, java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two objects are equal. If they are not an AssertionFailedError is thrown.", "history": "added in API level 1", "FullName": "public static void assertEquals (Object expected, Object actual)"}, "assertSame(java.lang.Object,java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two objects refer to the same object. If they are not the same an AssertionFailedError is thrown.", "history": "Added in API level 1", "FullName": "public static void assertSame (Object expected, Object actual)"}, "failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 16", "FullName": "public static void failNotEquals (String message, Object expected, Object actual)"}, "assertTrue(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that a condition is true. If it isn't it throws an AssertionFailedError.", "history": "Added in API level 1", "FullName": "public static void assertTrue (boolean condition)"}, "assertFalse(java.lang.String,boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that a condition is false. If it isn't it throws an AssertionFailedError with the given message.", "history": "Added in API level 1", "FullName": "public static void assertFalse (String message, boolean condition)"}, "assertNull(java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: Object to check or null"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that an object is null. If it isn't an @B_java#lang#AssertionError_E@ is thrown. Message contains: Expected:", "history": "Added in API level 1", "FullName": "public static void assertNull (Object object)"}, "assertEquals(float,float,float)": {"Returns": [], "Parameters": [["float", "float no parameter comment"], ["float", "float no parameter comment"], ["float", "float no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two floats are equal concerning a delta. If the expected value is infinity then the delta value is ignored.", "history": "Added in API level 1", "FullName": "public static void assertEquals (float expected, float actual, float delta)"}, "assertEquals(short, short)": {"Returns": [], "Parameters": [["short", "short no parameter comment"], ["short", "short no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two shorts are equal.", "history": "added in API level 1", "FullName": "public static void assertEquals (short expected, short actual)"}, "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two objects are equal. If they are not an AssertionFailedError is thrown with the given message.", "history": "Added in API level 1", "FullName": "public static void assertEquals (String message, Object expected, Object actual)"}, "assertEquals(long,long)": {"Returns": [], "Parameters": [["long", "long no parameter comment"], ["long", "long no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two longs are equal.", "history": "Added in API level 1", "FullName": "public static void assertEquals (long expected, long actual)"}, "failNotSame(java.lang.String,java.lang.Object,java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 16", "FullName": "public static void failNotSame (String message, Object expected, Object actual)"}, "assertFalse(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that a condition is false. If it isn't it throws an AssertionFailedError.", "history": "Added in API level 1", "FullName": "public static void assertFalse (boolean condition)"}, "Assert()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Protect constructor since it is a static only class", "history": "Added in API level 1", "FullName": "protected Assert ()"}, "assertNotSame(java.lang.Object, java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two objects do not refer to the same object. If they do refer to the same object an AssertionFailedError is thrown.", "history": "added in API level 1", "FullName": "public static void assertNotSame (Object expected, Object actual)"}, "assertNull(java.lang.String, java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that an object is null. If it is not an AssertionFailedError is thrown with the given message.", "history": "added in API level 1", "FullName": "public static void assertNull (String message, Object object)"}, "assertNull(java.lang.String,java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that an object is null. If it is not an AssertionFailedError is thrown with the given message.", "history": "Added in API level 1", "FullName": "public static void assertNull (String message, Object object)"}, "assertEquals(char, char)": {"Returns": [], "Parameters": [["char", "char no parameter comment"], ["char", "char no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two chars are equal.", "history": "added in API level 1", "FullName": "public static void assertEquals (char expected, char actual)"}, "assertEquals(double,double,double)": {"Returns": [], "Parameters": [["double", "double no parameter comment"], ["double", "double no parameter comment"], ["double", "double no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two doubles are equal concerning a delta. If the expected value is infinity then the delta value is ignored.", "history": "Added in API level 1", "FullName": "public static void assertEquals (double expected, double actual, double delta)"}, "fail()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Fails a test with no message.", "history": "Added in API level 1", "FullName": "public static void fail ()"}, "assertEquals(java.lang.String,java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two Strings are equal.", "history": "Added in API level 1", "FullName": "public static void assertEquals (String message, String expected, String actual)"}, "assertEquals(double, double, double)": {"Returns": [], "Parameters": [["double", "double no parameter comment"], ["double", "double no parameter comment"], ["double", "double no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two doubles are equal concerning a delta. If the expected value is infinity then the delta value is ignored.", "history": "added in API level 1", "FullName": "public static void assertEquals (double expected, double actual, double delta)"}, "assertEquals(java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two Strings are equal.", "history": "Added in API level 1", "FullName": "public static void assertEquals (String expected, String actual)"}, "assertEquals(long, long)": {"Returns": [], "Parameters": [["long", "long no parameter comment"], ["long", "long no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two longs are equal.", "history": "added in API level 1", "FullName": "public static void assertEquals (long expected, long actual)"}, "assertFalse(java.lang.String, boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that a condition is false. If it isn't it throws an AssertionFailedError with the given message.", "history": "added in API level 1", "FullName": "public static void assertFalse (String message, boolean condition)"}, "assertEquals(byte,byte)": {"Returns": [], "Parameters": [["byte", "byte no parameter comment"], ["byte", "byte no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two bytes are equal.", "history": "Added in API level 1", "FullName": "public static void assertEquals (byte expected, byte actual)"}, "assertNotNull(java.lang.String,java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that an object isn't null. If it is an AssertionFailedError is thrown with the given message.", "history": "Added in API level 1", "FullName": "public static void assertNotNull (String message, Object object)"}, "assertEquals(java.lang.String,char,char)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["char", "char no parameter comment"], ["char", "char no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two chars are equal. If they are not an AssertionFailedError is thrown with the given message.", "history": "Added in API level 1", "FullName": "public static void assertEquals (String message, char expected, char actual)"}, "assertTrue(java.lang.String,boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that a condition is true. If it isn't it throws an AssertionFailedError with the given message.", "history": "Added in API level 1", "FullName": "public static void assertTrue (String message, boolean condition)"}, "assertEquals(float, float, float)": {"Returns": [], "Parameters": [["float", "float no parameter comment"], ["float", "float no parameter comment"], ["float", "float no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two floats are equal concerning a delta. If the expected value is infinity then the delta value is ignored.", "history": "added in API level 1", "FullName": "public static void assertEquals (float expected, float actual, float delta)"}, "assertNotSame(java.lang.Object,java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two objects do not refer to the same object. If they do refer to the same object an AssertionFailedError is thrown.", "history": "Added in API level 1", "FullName": "public static void assertNotSame (Object expected, Object actual)"}, "assertNotNull(java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that an object isn't null.", "history": "Added in API level 1", "FullName": "public static void assertNotNull (Object object)"}, "assertEquals(int, int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two ints are equal.", "history": "added in API level 1", "FullName": "public static void assertEquals (int expected, int actual)"}, "assertTrue(java.lang.String, boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that a condition is true. If it isn't it throws an AssertionFailedError with the given message.", "history": "added in API level 1", "FullName": "public static void assertTrue (String message, boolean condition)"}, "assertEquals(java.lang.String,int,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two ints are equal. If they are not an AssertionFailedError is thrown with the given message.", "history": "Added in API level 1", "FullName": "public static void assertEquals (String message, int expected, int actual)"}, "assertEquals(java.lang.String,float,float,float)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["float", "float no parameter comment"], ["float", "float no parameter comment"], ["float", "float no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two floats are equal concerning a positive delta. If they are not an AssertionFailedError is thrown with the given message. If the expected value is infinity then the delta value is ignored.", "history": "Added in API level 1", "FullName": "public static void assertEquals (String message, float expected, float actual, float delta)"}, "assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two objects do not refer to the same object. If they do refer to the same object an AssertionFailedError is thrown with the given message.", "history": "Added in API level 1", "FullName": "public static void assertNotSame (String message, Object expected, Object actual)"}, "assertEquals(byte, byte)": {"Returns": [], "Parameters": [["byte", "byte no parameter comment"], ["byte", "byte no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two bytes are equal.", "history": "added in API level 1", "FullName": "public static void assertEquals (byte expected, byte actual)"}, "assertEquals(java.lang.String,short,short)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["short", "short no parameter comment"], ["short", "short no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two shorts are equal. If they are not an AssertionFailedError is thrown with the given message.", "history": "Added in API level 1", "FullName": "public static void assertEquals (String message, short expected, short actual)"}, "assertEquals(java.lang.String,long,long)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["long", "long no parameter comment"], ["long", "long no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two longs are equal. If they are not an AssertionFailedError is thrown with the given message.", "history": "Added in API level 1", "FullName": "public static void assertEquals (String message, long expected, long actual)"}, "assertEquals(java.lang.String, byte, byte)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["byte", "byte no parameter comment"], ["byte", "byte no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two bytes are equal. If they are not an AssertionFailedError is thrown with the given message.", "history": "added in API level 1", "FullName": "public static void assertEquals (String message, byte expected, byte actual)"}, "assertEquals(boolean,boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two booleans are equal.", "history": "Added in API level 1", "FullName": "public static void assertEquals (boolean expected, boolean actual)"}, "assertNotNull(java.lang.String, java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that an object isn't null. If it is an AssertionFailedError is thrown with the given message.", "history": "added in API level 1", "FullName": "public static void assertNotNull (String message, Object object)"}, "assertEquals(short,short)": {"Returns": [], "Parameters": [["short", "short no parameter comment"], ["short", "short no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two shorts are equal.", "history": "Added in API level 1", "FullName": "public static void assertEquals (short expected, short actual)"}, "assertEquals(java.lang.String,boolean,boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["boolean", "boolean no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two booleans are equal. If they are not an AssertionFailedError is thrown with the given message.", "history": "Added in API level 1", "FullName": "public static void assertEquals (String message, boolean expected, boolean actual)"}}, "Inheritance": [], "ClassName": "junit.framework.Assert", "ClassDesc": "A set of assert methods. Messages are only displayed when an assert fails."}