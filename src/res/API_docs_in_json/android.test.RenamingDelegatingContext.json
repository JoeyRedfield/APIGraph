{"Functions": {"fileList()": {"Returns": [["@B_java#lang#String_E@", "Array of strings naming the private files."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an array of strings naming the private files associated with this Context's application package.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public String[] fileList ()"}, "RenamingDelegatingContext(android.content.Context,android.content.Context,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: : the context that will be delegated."], ["@B_android#content#Context_E@", "Context: : the context that file and db methods will be delegated to"], ["@B_java#lang#String_E@", "String: : a prefix with which database and file names will be prefixed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public RenamingDelegatingContext (Context context, Context fileContext, String filePrefix)"}, "openFileOutput(java.lang.String,int)": {"Returns": [["@B_java#io#FileOutputStream_E@", "The resulting @B_java#io#FileOutputStream_E@."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the file to open; can not contain path separators."], ["int", "int: Operating mode. Value is either 0 or a combination of @B_android#content#Context#MODE_PRIVATE_E@, @B_android#content#Context#MODE_WORLD_READABLE_E@, @B_android#content#Context#MODE_WORLD_WRITEABLE_E@, and @B_android#content#Context#MODE_APPEND_E@"]], "Throws": [["@B_java#io#FileNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Open a private file associated with this Context's application package for writing. Creates the file if it doesn't already exist. No additional permissions are required for the calling app to read or write the returned file.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public FileOutputStream openFileOutput (String name, int mode)"}, "deleteFile(java.lang.String)": {"Returns": [["boolean", "true if the file was successfully deleted; else false."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the file to delete; can not contain path separators."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Delete the given private file associated with this Context's application package.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public boolean deleteFile (String name)"}, "providerWithRenamedContext(java.lang.Class<T>,android.content.Context,java.lang.String,boolean)": {"Returns": [["T", "no returns description in source"]], "Parameters": [["@B_java#lang#Class_E@", "Class no parameter comment"], ["@B_android#content#Context_E@", "Context no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [["@B_java#lang#IllegalAccessException_E@", ""], ["@B_java#lang#InstantiationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static T providerWithRenamedContext (Class<T> contentProvider, Context c, String filePrefix, boolean allowAccessToExistingFilesAndDbs)"}, "openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)": {"Returns": [["@B_android#database#sqlite#SQLiteDatabase_E@", "The contents of a newly created database with the given name."]], "Parameters": [["@B_java#lang#String_E@", "String: The name (unique in the application package) of the database."], ["int", "int: Operating mode. Value is either 0 or a combination of @B_android#content#Context#MODE_PRIVATE_E@, @B_android#content#Context#MODE_WORLD_READABLE_E@, @B_android#content#Context#MODE_WORLD_WRITEABLE_E@, @B_android#content#Context#MODE_ENABLE_WRITE_AHEAD_LOGGING_E@, and @B_android#content#Context#MODE_NO_LOCALIZED_COLLATORS_E@"], ["@B_android#database#sqlite#SQLiteDatabase#CursorFactory_E@", "SQLiteDatabase.CursorFactory: An optional factory class that is called to instantiate a cursor when query is called."], ["@B_android#database#DatabaseErrorHandler_E@", "DatabaseErrorHandler: the @B_android#database#DatabaseErrorHandler_E@ to be used when sqlite reports database corruption. if null, @B_android#database#DefaultDatabaseErrorHandler_E@ is assumed. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Open a new private SQLiteDatabase associated with this Context's application package. Creates the database file if it doesn't exist. Accepts input param: a concrete instance of @B_android#database#DatabaseErrorHandler_E@ to be used to handle corruption when sqlite reports database corruption.", "history": "Added in API level 11 Deprecated in API level 24", "FullName": "public SQLiteDatabase openOrCreateDatabase (String name, int mode, SQLiteDatabase.CursorFactory factory, DatabaseErrorHandler errorHandler)"}, "providerWithRenamedContext(java.lang.Class<T>,android.content.Context,java.lang.String)": {"Returns": [["T", "no returns description in source"]], "Parameters": [["@B_java#lang#Class_E@", "Class no parameter comment"], ["@B_android#content#Context_E@", "Context no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [["@B_java#lang#IllegalAccessException_E@", ""], ["@B_java#lang#InstantiationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static T providerWithRenamedContext (Class<T> contentProvider, Context c, String filePrefix)"}, "makeExistingFilesAndDbsAccessible()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Makes accessible all files and databases whose names match the filePrefix that was passed to the constructor. Normally only files and databases that were created through this context are accessible.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public void makeExistingFilesAndDbsAccessible ()"}, "deleteDatabase(java.lang.String)": {"Returns": [["boolean", "true if the database was successfully deleted; else false."]], "Parameters": [["@B_java#lang#String_E@", "String: The name (unique in the application package) of the database."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Delete an existing private SQLiteDatabase associated with this Context's application package.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public boolean deleteDatabase (String name)"}, "getCacheDir()": {"Returns": [["@B_java#io#File_E@", "The path of the directory holding application cache files."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "In order to support calls to getCacheDir(), we create a temp cache dir (inside the real one) and return it instead. This code is basically getCacheDir(), except it uses the real cache dir as the parent directory and creates a test cache dir inside that.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public File getCacheDir ()"}, "getDatabasePath(java.lang.String)": {"Returns": [["@B_java#io#File_E@", "An absolute path to the given database."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the database for which you would like to get its path."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the absolute path on the filesystem where a database created with @B_android#content#Context#openOrCreateDatabase_E@ is stored. The returned path may change over time if the calling app is moved to an adopted storage device, so only relative paths should be persisted.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public File getDatabasePath (String name)"}, "openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)": {"Returns": [["@B_android#database#sqlite#SQLiteDatabase_E@", "The contents of a newly created database with the given name."]], "Parameters": [["@B_java#lang#String_E@", "String: The name (unique in the application package) of the database."], ["int", "int: Operating mode. Value is either 0 or a combination of @B_android#content#Context#MODE_PRIVATE_E@, @B_android#content#Context#MODE_WORLD_READABLE_E@, @B_android#content#Context#MODE_WORLD_WRITEABLE_E@, @B_android#content#Context#MODE_ENABLE_WRITE_AHEAD_LOGGING_E@, and @B_android#content#Context#MODE_NO_LOCALIZED_COLLATORS_E@"], ["@B_android#database#sqlite#SQLiteDatabase#CursorFactory_E@", "SQLiteDatabase.CursorFactory: An optional factory class that is called to instantiate a cursor when query is called."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Open a new private SQLiteDatabase associated with this Context's application package. Create the database file if it doesn't exist.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public SQLiteDatabase openOrCreateDatabase (String name, int mode, SQLiteDatabase.CursorFactory factory)"}, "getFileStreamPath(java.lang.String)": {"Returns": [["@B_java#io#File_E@", "An absolute path to the given file."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the file for which you would like to get its path."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the absolute path on the filesystem where a file created with @B_android#content#Context#openFileOutput_E@ is stored. The returned path may change over time if the calling app is moved to an adopted storage device, so only relative paths should be persisted.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public File getFileStreamPath (String name)"}, "openFileOutput(java.lang.String, int)": {"Returns": [["@B_java#io#FileOutputStream_E@", "The resulting @B_java#io#FileOutputStream_E@."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the file to open; can not contain path separators."], ["int", "int: Operating mode."]], "Throws": [["@B_java#io#FileNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Open a private file associated with this Context's application package for writing. Creates the file if it doesn't already exist. No additional permissions are required for the calling app to read or write the returned file.", "history": "added in API level 1", "FullName": "public FileOutputStream openFileOutput (String name, int mode)"}, "RenamingDelegatingContext(android.content.Context,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: : the context that will be delegated."], ["@B_java#lang#String_E@", "String: : a prefix with which database and file names will be prefixed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public RenamingDelegatingContext (Context context, String filePrefix)"}, "openFileInput(java.lang.String)": {"Returns": [["@B_java#io#FileInputStream_E@", "The resulting @B_java#io#FileInputStream_E@."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the file to open; can not contain path separators."]], "Throws": [["@B_java#io#FileNotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Open a private file associated with this Context's application package for reading.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public FileInputStream openFileInput (String name)"}, "databaseList()": {"Returns": [["@B_java#lang#String_E@", "Array of strings naming the private databases."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an array of strings naming the private databases associated with this Context's application package.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public String[] databaseList ()"}, "getDatabasePrefix()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public String getDatabasePrefix ()"}}, "Inheritance": ["@B_android#content#Context_E@", "@B_android#content#ContextWrapper_E@"], "ClassName": "android.test.RenamingDelegatingContext", "ClassDesc": "New tests should be written using the This is a class which delegates to the given context, but performs database and file operations with a renamed database/file name (prefixes default names with a given prefix)."}