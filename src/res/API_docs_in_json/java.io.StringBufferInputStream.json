{"Functions": {"available()": {"Returns": [["int", "the value of count - pos, which is the number of bytes remaining to be read from the input buffer."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of bytes that can be read from the input stream without blocking.", "history": "Added in API level 1 Deprecated in API level 1", "FullName": "public int available ()"}, "skip(long)": {"Returns": [["long", "the actual number of bytes skipped."]], "Parameters": [["long", "long: the number of bytes to be skipped."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Skips n bytes of input from this input stream. Fewer bytes might be skipped if the end of the input stream is reached.", "history": "Added in API level 1 Deprecated in API level 1", "FullName": "public long skip (long n)"}, "reset()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Resets the input stream to begin reading from the first character of this input stream's underlying buffer.", "history": "Added in API level 1 Deprecated in API level 1", "FullName": "public void reset ()"}, "read(byte[],int,int)": {"Returns": [["int", "the total number of bytes read into the buffer, or -1 if there is no more data because the end of the stream has been reached."]], "Parameters": [["byte[]", "byte: the buffer into which the data is read."], ["int", "int: the start offset of the data."], ["int", "int: the maximum number of bytes read."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads up to len bytes of data from this input stream into an array of bytes. The read method of StringBufferInputStream cannot block. It copies the low eight bits from the characters in this input stream's buffer into the byte array argument.", "history": "Added in API level 1 Deprecated in API level 1", "FullName": "public int read (byte[] b, int off, int len)"}, "read(byte[], int, int)": {"Returns": [["int", "the total number of bytes read into the buffer, or -1 if there is no more data because the end of the stream has been reached."]], "Parameters": [["byte[]", "byte: the buffer into which the data is read."], ["int", "int: the start offset of the data."], ["int", "int: the maximum number of bytes read."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads up to len bytes of data from this input stream into an array of bytes. The read method of StringBufferInputStream cannot block. It copies the low eight bits from the characters in this input stream's buffer into the byte array argument.", "history": "added in API level 1", "FullName": "public int read (byte[] b, int off, int len)"}, "StringBufferInputStream(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the underlying input buffer."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a string input stream to read data from the specified string.", "history": "Added in API level 1", "FullName": "public StringBufferInputStream (String s)"}, "read()": {"Returns": [["int", "the next byte of data, or -1 if the end of the stream is reached."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads the next byte of data from this input stream. The value byte is returned as an int in the range 0 to 255. If no byte is available because the end of the stream has been reached, the value -1 is returned. The read method of StringBufferInputStream cannot block. It returns the low eight bits of the next character in this input stream's buffer.", "history": "Added in API level 1 Deprecated in API level 1", "FullName": "public int read ()"}}, "Inheritance": ["@B_java#io#InputStream_E@"], "ClassName": "java.io.StringBufferInputStream", "ClassDesc": "This class does not properly convert characters into bytes. As of JDK 1.1, the preferred way to create a stream from a string is via the StringReader class. This class allows an application to create an input stream in which the bytes read are supplied by the contents of a string. Applications can also read bytes from a byte array by using a ByteArrayInputStream. Only the low eight bits of each character in the string are used by this class."}