{"Functions": {"matchesMany(java.lang.String[], java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "The list of matching MIME types, or empty array if nothing matches."]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Matches multiple MIME types against an array of MIME type filters.", "history": "added in version 26.0.0-alpha1", "FullName": "String[] matchesMany (String[] mimeTypes, String filter)"}, "matches(java.lang.String, java.lang.String[])": {"Returns": [["@B_java#lang#String_E@", "The first matching filter, or null if nothing matches."]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Matches one nullable MIME type against an array of MIME type filters.", "history": "added in version 26.0.0-alpha1", "FullName": "String matches (String mimeType, String[] filters)"}, "matches(java.lang.String[], java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "The first matching MIME type, or null if nothing matches."]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Matches multiple MIME types against an array of MIME type filters.", "history": "added in version 26.0.0-alpha1", "FullName": "String matches (String[] mimeTypes, String filter)"}, "matches(java.lang.String, java.lang.String)": {"Returns": [["boolean", "True if the mimeType matches the filter."]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Matches one nullable MIME type against one MIME type filter.", "history": "added in version 26.0.0-alpha1", "FullName": "boolean matches (String mimeType, String filter)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v4.content.MimeTypeFilter", "ClassDesc": "Provides utility methods for matching MIME type filters used in ContentProvider. Wildcards are allowed only instead of the entire type or subtype with a tree prefix. Eg. image\\/*, *\\/* is a valid filter and will match image/jpeg, but image/j* is invalid and it will not match image/jpeg. Suffixes and parameters are not supported, and they are treated as part of the subtype during matching. Neither type nor subtype can be empty. Note: MIME type matching in the Android framework is case-sensitive, unlike the formal RFC definitions. As a result, you should always write these elements with lower case letters, or use https:##developer#android#com@B_android#content#Intent#normalizeMimeType_E@ to ensure that they are converted to lower case. MIME types can be null or ill-formatted. In such case they won't match anything. MIME type filters must be correctly formatted, or an exception will be thrown."}