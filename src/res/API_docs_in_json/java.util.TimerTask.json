{"Functions": {"cancel()": {"Returns": [["boolean", "true if this task is scheduled for one-time execution and has not yet run, or this task is scheduled for repeated execution. Returns false if the task was scheduled for one-time execution and has already run, or if the task was never scheduled, or if the task was already cancelled. (Loosely speaking, this method returns true if it prevents one or more scheduled executions from taking place.)"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Cancels this timer task. If the task has been scheduled for one-time execution and has not yet run, or has not yet been scheduled, it will never run. If the task has been scheduled for repeated execution, it will never run again. (If the task is running when this call occurs, the task will run to completion, but will never run again.) Note that calling this method from within the This method may be called repeatedly; the second and subsequent calls have no effect.", "history": "Added in API level 1", "FullName": "public boolean cancel ()"}, "TimerTask()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new timer task.", "history": "Added in API level 1", "FullName": "protected TimerTask ()"}, "run()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The action to be performed by this timer task.", "history": "Added in API level 1", "FullName": "public abstract void run ()"}, "scheduledExecutionTime()": {"Returns": [["long", "the time at which the most recent execution of this task was scheduled to occur, in the format returned by Date.getTime(). The return value is undefined if the task has yet to commence its first execution."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#util#Date#getTime_E@"], "Permissions": [], "Description": "Returns the This method is typically invoked from within a task's run method, to determine whether the current execution of the task is sufficiently timely to warrant performing the scheduled activity:", "history": "Added in API level 1", "FullName": "public long scheduledExecutionTime ()"}}, "Inheritance": [], "ClassName": "java.util.TimerTask", "ClassDesc": "A task that can be scheduled for one-time or repeated execution by a Timer."}