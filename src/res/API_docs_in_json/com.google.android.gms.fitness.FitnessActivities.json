{"Functions": {"getMimeType(java.lang.String)": {"Returns": [], "Parameters": [["String", "the desired activity."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the MIME type for a particular activity. The MIME type is used in intents for", "history": "", "FullName": "public static String getMimeType (String activity)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.fitness.FitnessActivities", "ClassDesc": "Constants representing different user activities, such as walking, running, and cycling. Activities are used in @B_com#google#android#gms#fitness#data#Session_E@, @B_com#google#android#gms#fitness#data#DataType_E@ and in A @B_com#google#android#gms#fitness#data#Session_E@ associates an activity with all data that was recorded during a time interval, such as @B_com#google#android#gms#fitness#data#DataType#TYPE_HEART_RATE_BPM_E@ taken while the user was doing @B_com#google#android#gms#fitness#FitnessActivities#AEROBICS_E@, or @B_com#google#android#gms#fitness#data#DataType#TYPE_CYCLING_WHEEL_RPM_E@ measured while @B_com#google#android#gms#fitness#FitnessActivities#BIKING_E@. Activities be stored and read using the @B_com#google#android#gms#fitness#data#DataType#TYPE_ACTIVITY_SAMPLE_E@ and @B_com#google#android#gms#fitness#data#DataType#TYPE_ACTIVITY_SEGMENT_E@ data types. When samples are stored, these are automatically converted into segments by the platform's default data source. When reading data, the @B_com#google#android#gms#fitness#data#Bucket#TYPE_ACTIVITY_TYPE_E@ bucketing strategies can be used to aggregate data by the activities happening at the time data was collected. This would allow, for instance, aggregating step counts taken during running and those taken during walking separately, or to query the average heart rate during each activity. Each activity is represented by its name, which is a string constant. These constants are also used in intents for tracking and visualizing activity data. Internally, activities are stored as integers inside of @B_com#google#android#gms#fitness#data#DataPoint_E@ for efficiency. You can convert between the String and int representations for storage using @B_com#google#android#gms#fitness#data#Value#setActivity_E@ and @B_com#google#android#gms#fitness#data#Value#asActivity_E@. A subset of the activities can be detected by @B_com#google#android#gms#location#ActivityRecognitionApi_E@ and are listed in @B_com#google#android#gms#location#DetectedActivity_E@."}