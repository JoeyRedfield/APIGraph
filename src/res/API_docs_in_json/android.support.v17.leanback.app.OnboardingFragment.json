{"Functions": {"getIconResourceId()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the resource id of the main icon.", "history": "added in version 26.0.0-alpha1", "FullName": "int getIconResourceId ()"}, "moveToPreviousPage()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Navigates to the previous page.", "history": "added in version 25.4.0", "FullName": "void moveToPreviousPage ()"}, "onCreateDescriptionAnimator()": {"Returns": [["@B_android#animation#Animator_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Provides the entry animation for description view. This allows users to override the default fade and slide animation. Returning null will disable the animation.", "history": "added in version 26.0.0-alpha1", "FullName": "Animator onCreateDescriptionAnimator ()"}, "getArrowColor()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the color of the arrow if it's set through @B_android#support#v17#leanback#app#OnboardingFragment#setArrowColor_E@. If no color was set, transparent is returned.", "history": "added in version 26.0.0-beta2", "FullName": "int getArrowColor ()"}, "onCreateTitleAnimator()": {"Returns": [["@B_android#animation#Animator_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Provides the entry animation for title view. This allows users to override the default fade and slide animation. Returning null will disable the animation.", "history": "added in version 26.0.0-alpha1", "FullName": "Animator onCreateTitleAnimator ()"}, "getTitleViewTextColor()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the text color of TitleView if it's set through @B_android#support#v17#leanback#app#OnboardingFragment#setTitleViewTextColor_E@. If no color was set, transparent is returned.", "history": "added in version 26.0.0-beta1", "FullName": "int getTitleViewTextColor ()"}, "setStartButtonText(java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: the start button text"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the text on the start button text. If not set, the default text set in @B_android#support#v17#leanback#R#styleable#LeanbackOnboardingTheme_onboardingStartButtonStyle_E@ will be used.", "history": "added in version 26.0.0-beta2", "FullName": "void setStartButtonText (CharSequence text)"}, "getStartButtonText()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the start button text if it's set through @B_android#support#v17#leanback#app#OnboardingFragment#setStartButtonText_E@}. If no string was set, null is returned.", "history": "added in version 26.0.0-beta2", "FullName": "CharSequence getStartButtonText ()"}, "getCurrentPageIndex()": {"Returns": [["int", "The index of the current page."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the index of the current page.", "history": "added in version 24.0.0", "FullName": "int getCurrentPageIndex ()"}, "onCreateLogoAnimation()": {"Returns": [["@B_android#animation#Animator_E@", "The @B_android#animation#Animator_E@ object which runs the logo animation."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called to have the inherited class create its own logo animation. This is called only if the logo image resource ID is not set by @B_android#support#v17#leanback#app#OnboardingFragment#setLogoResourceId_E@. If this returns null, the logo animation is skipped.", "history": "added in version 24.0.0", "FullName": "Animator onCreateLogoAnimation ()"}, "getLogoResourceId()": {"Returns": [["int", "The resource ID of the splash logo image."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the resource ID of the splash logo image.", "history": "added in version 24.0.0", "FullName": "int getLogoResourceId ()"}, "getDescriptionViewTextColor()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the text color of DescriptionView if it's set through @B_android#support#v17#leanback#app#OnboardingFragment#setDescriptionViewTextColor_E@. If no color was set, transparent is returned.", "history": "added in version 26.0.0-beta1", "FullName": "int getDescriptionViewTextColor ()"}, "onCreateEnterAnimation()": {"Returns": [["@B_android#animation#Animator_E@", "The @B_android#animation#Animator_E@ object which runs the page enter animation."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called to have the inherited class create its enter animation. The start animation runs after logo animation ends.", "history": "added in version 24.0.0", "FullName": "Animator onCreateEnterAnimation ()"}, "getPageTitle(int)": {"Returns": [["@B_java#lang#CharSequence_E@", "The title of the page."]], "Parameters": [["int", "int: The page index."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the title of the given page.", "history": "added in version 24.0.0", "FullName": "CharSequence getPageTitle (int pageIndex)"}, "setTitleViewTextColor(int)": {"Returns": [], "Parameters": [["int", "int: the color to use as the text color for TitleView"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the text color for TitleView. If not set, the default textColor set in style referenced by attr @B_android#support#v17#leanback#R#attr#onboardingTitleStyle_E@ will be used.", "history": "added in version 26.0.0-beta1", "FullName": "void setTitleViewTextColor (int color)"}, "getDotBackgroundColor()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the background color of the dot if it's set through @B_android#support#v17#leanback#app#OnboardingFragment#setDotBackgroundColor_E@. If no color was set, transparent is returned.", "history": "added in version 26.0.0-beta1", "FullName": "int getDotBackgroundColor ()"}, "getPageDescription(int)": {"Returns": [["@B_java#lang#CharSequence_E@", "The description of the page."]], "Parameters": [["int", "int: The page index."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the description of the given page.", "history": "added in version 24.0.0", "FullName": "CharSequence getPageDescription (int pageIndex)"}, "setIconResouceId(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the resource id for the main icon.", "history": "added in version 26.0.0-alpha1", "FullName": "void setIconResouceId (int resourceId)"}, "setArrowBackgroundColor(int)": {"Returns": [], "Parameters": [["int", "int: the color to use for arrow background"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the background color of the arrow. If not set, the default color from attr @B_android#support#v17#leanback#R#styleable#PagingIndicator_arrowBgColor_E@ in the theme will be used.", "history": "added in version 26.0.0-beta1", "FullName": "void setArrowBackgroundColor (int color)"}, "getArrowBackgroundColor()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the background color of the arrow if it's set through @B_android#support#v17#leanback#app#OnboardingFragment#setArrowBackgroundColor_E@. If no color was set, transparent is returned.", "history": "added in version 26.0.0-beta1", "FullName": "int getArrowBackgroundColor ()"}, "setDescriptionViewTextColor(int)": {"Returns": [], "Parameters": [["int", "int: the color to use as the text color for DescriptionView"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the text color for DescriptionView. If not set, the default textColor set in style referenced by attr @B_android#support#v17#leanback#R#attr#onboardingDescriptionStyle_E@ will be used.", "history": "added in version 26.0.0-beta1", "FullName": "void setDescriptionViewTextColor (int color)"}, "setLogoResourceId(int)": {"Returns": [], "Parameters": [["int", "int: The resource ID of the logo image."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the resource ID of the splash logo image. If the logo resource id set, the default logo splash animation will be played.", "history": "added in version 24.0.0", "FullName": "void setLogoResourceId (int id)"}, "onLogoAnimationFinished()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called immediately after the logo animation is complete or no logo animation is specified. This method can also be called when the activity is recreated, i.e. when no logo animation are performed. By default, this method will hide the logo view and start the entrance animation for this fragment. Overriding subclasses can provide their own data loading logic as to when the entrance animation should be executed.", "history": "added in version 25.4.0", "FullName": "void onLogoAnimationFinished ()"}, "getPageCount()": {"Returns": [["int", "The page count."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the page count.", "history": "added in version 24.0.0", "FullName": "int getPageCount ()"}, "setArrowColor(int)": {"Returns": [], "Parameters": [["int", "int: the color to use for arrow background"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the color of the arrow. This color will supersede the color set in the theme attribute @B_android#support#v17#leanback#R#styleable#PagingIndicator_arrowColor_E@ if provided. If none of these two are set, the arrow will have its original bitmap color.", "history": "added in version 26.0.0-beta2", "FullName": "void setArrowColor (int color)"}, "setDotBackgroundColor(int)": {"Returns": [], "Parameters": [["int", "int: the color to use for dot backgrounds"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the background color of the dots. If not set, the default color from attr @B_android#support#v17#leanback#R#styleable#PagingIndicator_dotBgColor_E@ in the theme will be used.", "history": "added in version 26.0.0-beta1", "FullName": "void setDotBackgroundColor (int color)"}, "OnboardingFragment()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 24.0.0", "FullName": "OnboardingFragment ()"}, "moveToNextPage()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Navigates to the next page.", "history": "added in version 25.4.0", "FullName": "void moveToNextPage ()"}, "isLogoAnimationFinished()": {"Returns": [["boolean", "true if the logo enter transition is finished, false otherwise"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether the logo enter animation is finished.", "history": "added in version 25.4.0", "FullName": "boolean isLogoAnimationFinished ()"}, "onFinishFragment()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the onboarding flow finishes.", "history": "added in version 24.0.0", "FullName": "void onFinishFragment ()"}, "onSaveInstanceState(android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: Bundle in which to place your saved state."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called to ask the fragment to save its current dynamic state, so it can later be reconstructed in a new instance of its process is restarted. If a new instance of the fragment later needs to be created, the data you place in the Bundle here will be available in the Bundle given to @B_android#app#Fragment#onCreate_E@, @B_android#app#Fragment#onCreateView_E@, and @B_android#app#Fragment#onActivityCreated_E@. This corresponds to @B_android#app#Activity#onSaveInstanceState_E@ and most of the discussion there applies here as well. Note however: this method may be called at any time before @B_android#app#Fragment#onDestroy_E@. There are many situations where a fragment may be mostly torn down (such as when placed on the back stack with no UI showing), but its state will not be saved until its owning activity actually needs to save its state.", "history": "", "FullName": "void onSaveInstanceState (Bundle outState)"}, "startEnterAnimation(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true if enter animation has to be performed regardless of whether it's been done in the past, false otherwise"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called to start entrance transition. This can be called by subclasses when the logo animation and data loading is complete. If force flag is set to false, it will only start the animation if it's not already done yet. Otherwise, it will always start the enter animation. In both cases, the logo view will hide and the rest of fragment views become visible after this call.", "history": "added in version 26.0.0-beta1", "FullName": "void startEnterAnimation (boolean force)"}, "onProvideTheme()": {"Returns": [["int", "The theme resource ID of the theme to use in this fragment, or -1 to use the host Activity's theme."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the theme used for styling the fragment. The default returns -1, indicating that the host Activity's theme should be used.", "history": "added in version 24.0.0", "FullName": "int onProvideTheme ()"}, "onPageChanged(int, int)": {"Returns": [], "Parameters": [["int", "int: The new page."], ["int", "int: The previous page."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the page has been changed.", "history": "added in version 24.0.0", "FullName": "void onPageChanged (int newPage, int previousPage)"}}, "Inheritance": ["java.lang.Object", "https:##developer#android#com@B_android#app#Fragment_E@"], "ClassName": "android.support.v17.leanback.app.OnboardingFragment", "ClassDesc": "use @B_android#support#v17#leanback#app#OnboardingSupportFragment_E@ An OnboardingFragment provides a common and simple way to build onboarding screen for applications. To build the screen views, the inherited class should override: @B_android#support#v17#leanback#app#OnboardingFragment#onCreateBackgroundView_E@ to provide the background view. Background view has the same size as the screen and the lowest z-order. @B_android#support#v17#leanback#app#OnboardingFragment#onCreateContentView_E@ to provide the contents view. The content view is located in the content area at the center of the screen. @B_android#support#v17#leanback#app#OnboardingFragment#onCreateForegroundView_E@ to provide the foreground view. Foreground view has the same size as the screen and the highest z-order Each of these methods can return null if the application doesn't want to provide it. @B_android#support#v17#leanback#app#OnboardingFragment#getPageCount_E@ to provide the number of pages. @B_android#support#v17#leanback#app#OnboardingFragment#getPageTitle_E@ to provide the title of the page. @B_android#support#v17#leanback#app#OnboardingFragment#getPageDescription_E@ to provide the description of the page. Note that the information is used in @B_android#support#v17#leanback#app#OnboardingFragment#onCreateView_E@, so should be initialized before calling super.onCreateView. In most cases, the logo animation needs to be customized because the logo images of applications are different from each other, or some applications may want to show their own animations. The logo animation can be customized in two ways: The simplest way is to provide the logo image by calling @B_android#support#v17#leanback#app#OnboardingFragment#setLogoResourceId_E@ to show the default logo animation. This method should be called in https:##developer#android#com@B_android#app#Fragment#onCreateView_E@. If the logo animation is complex, then override @B_android#support#v17#leanback#app#OnboardingFragment#onCreateLogoAnimation_E@ and return the https:##developer#android#com@B_android#animation#Animator_E@ object to run. If the inherited class provides neither the logo image nor the animation, the logo animation will be omitted. @B_android#support#v17#leanback#app#OnboardingFragment#onCreateTitleAnimator_E@ & @B_android#support#v17#leanback#app#OnboardingFragment#onCreateDescriptionAnimator_E@. By default we don't animate the custom views but users can provide animation by overriding @B_android#support#v17#leanback#app#OnboardingFragment#onCreateEnterAnimation_E@. @B_android#support#v17#leanback#app#OnboardingFragment#onPageChanged_E@ to start the custom animations. If the user finishes the onboarding screen after navigating all the pages, @B_android#support#v17#leanback#app#OnboardingFragment#onFinishFragment_E@ is called. The inherited class can override this method to show another fragment or activity, or just remove this fragment. OnboardingFragment must have access to an appropriate theme. Specifically, the fragment must receive @B_android#support#v17#leanback#R#style#Theme_Leanback_Onboarding_E@, or a theme whose parent is set to that theme. Themes can be provided in one of three ways: The simplest way is to set the theme for the host Activity to the Onboarding theme or a theme that derives from it. If the Activity already has a theme and setting its parent theme is inconvenient, the existing Activity theme can have an entry added for the attribute @B_android#support#v17#leanback#R#styleable#LeanbackOnboardingTheme_onboardingTheme_E@. If present, this theme will be used by OnboardingFragment as an overlay to the Activity's theme. Finally, custom subclasses of OnboardingFragment may provide a theme through the @B_android#support#v17#leanback#app#OnboardingFragment#onProvideTheme_E@ method. This can be useful if a subclass is used across multiple Activities. If the theme is provided in multiple ways, the onProvideTheme override has priority, followed by the Activity's theme. (Themes whose parent theme is already set to the onboarding theme do not need to set the onboardingTheme attribute; if set, it will be ignored.)"}