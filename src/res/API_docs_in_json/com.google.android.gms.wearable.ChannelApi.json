{"Functions": {"openChannel(com.google.android.gms.common.api.GoogleApiClient, java.lang.String, java.lang.String)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "a connected client"], ["String", "the node ID of a wearable node, as returned from @B_com#google#android#gms#wearable#NodeApi#getConnectedNodes_E@"], ["String", "an app-specific identifier for the channel"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Opens a channel to exchange data with a remote node. Channel which are no longer needed should be closed using @B_com#google#android#gms#wearable#Channel#close_E@. This call involves a network round trip, so may be long running. client must remain connected during that time, or the request will be cancelled (like any other Play Services API calls).", "history": "", "FullName": "public abstract PendingResult<ChannelApi.OpenChannelResult> openChannel (GoogleApiClient client, String nodeId, String path)"}, "removeListener(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.wearable.ChannelApi.ChannelListener)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "a connected client"], ["@B_com#google#android#gms#wearable#ChannelApi#ChannelListener_E@", "a listener which was added using @B_com#google#android#gms#wearable#ChannelApi#addListener_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes a listener which was previously added through @B_com#google#android#gms#wearable#ChannelApi#addListener_E@.", "history": "", "FullName": "public abstract PendingResult<Status> removeListener (GoogleApiClient client, ChannelApi.ChannelListener listener)"}, "addListener(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.wearable.ChannelApi.ChannelListener)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "a connected client"], ["@B_com#google#android#gms#wearable#ChannelApi#ChannelListener_E@", "a listener which will be notified of changes to any channel"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers a listener to be notified of channel events. Calls to this method should balanced with @B_com#google#android#gms#wearable#ChannelApi#removeListener_E@ to avoid leaking resources. Callers wishing to be notified of events in the background should use @B_com#google#android#gms#wearable#WearableListenerService_E@.", "history": "", "FullName": "public abstract PendingResult<Status> addListener (GoogleApiClient client, ChannelApi.ChannelListener listener)"}}, "Inheritance": [], "ClassName": "com.google.android.gms.wearable.ChannelApi", "ClassDesc": "Client interface for Wearable Channel API. Allows apps on a wearable device to send and receive data from other wearable nodes. Channels are bidirectional. Each side, both the initiator and the receiver may both read and write to the channel by using @B_com#google#android#gms#wearable#Channel#getOutputStream_E@ and @B_com#google#android#gms#wearable#Channel#getInputStream_E@. Once a channel is established, the API for the initiator and receiver are identical. Channels are only available when the wearable nodes are connected. When the remote node disconnects, all existing channels will be closed. Any listeners (added through @B_com#google#android#gms#wearable#ChannelApi#addListener_E@ and any installed @B_com#google#android#gms#wearable#WearableListenerService_E@) will be notified of the channel closing."}