{"Functions": {"setMultiChoiceItems(int,boolean[],android.content.DialogInterface.OnMultiChoiceClickListener)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["int", "int: the resource id of an array i.e. R.array.foo"], ["boolean[]", "boolean: specifies which items are checked. It should be null in which case no items are checked. If non null it must be exactly the same length as the array of items."], ["@B_android#content#DialogInterface#OnMultiChoiceClickListener_E@", "DialogInterface.OnMultiChoiceClickListener: notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. This should be an array type, e.g. R.array.foo. The list will have a check mark displayed to the right of the text for each checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setMultiChoiceItems (int itemsId, boolean[] checkedItems, DialogInterface.OnMultiChoiceClickListener listener)"}, "getContext()": {"Returns": [["@B_android#content#Context_E@", "A Context for built Dialogs."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_android#content#Context_E@ with the appropriate theme for dialogs created by this Builder. Applications should use this Context for obtaining LayoutInflaters for inflating views that will be used in the resulting dialogs, as it will cause views to be inflated with the correct theme.", "history": "Added in API level 11", "FullName": "public Context getContext ()"}, "setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface.OnClickListener)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: the items to be displayed."], ["int", "int: specifies which item is checked. If -1 no items are checked."], ["@B_android#content#DialogInterface#OnClickListener_E@", "DialogInterface.OnClickListener: notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. The list will have a check mark displayed to the right of the text for the checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setSingleChoiceItems (CharSequence[] items, int checkedItem, DialogInterface.OnClickListener listener)"}, "setItems(int,android.content.DialogInterface.OnClickListener)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["int", "int no parameter comment"], ["@B_android#content#DialogInterface#OnClickListener_E@", "DialogInterface.OnClickListener no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. This should be an array type i.e. R.array.foo", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setItems (int itemsId, DialogInterface.OnClickListener listener)"}, "show()": {"Returns": [["@B_android#app#AlertDialog_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an @B_android#app#AlertDialog_E@ with the arguments supplied to this builder and immediately displays the dialog. Calling this method is functionally identical to:", "history": "Added in API level 1", "FullName": "public AlertDialog show ()"}, "setInverseBackgroundForced(boolean)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "this Builder object to allow for chaining of calls to set methods"]], "Parameters": [["boolean", "boolean: whether to use the inverse background"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This flag is only used for pre-Material themes. Instead, specify the window background using on the alert dialog theme. Sets the alert dialog to use the inverse background, regardless of what the contents is.", "history": "Added in API level 1 Deprecated in API level 23", "FullName": "public AlertDialog.Builder setInverseBackgroundForced (boolean useInverseBackground)"}, "setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "this Builder object to allow for chaining of calls to set methods"]], "Parameters": [["@B_android#widget#AdapterView#OnItemSelectedListener_E@", "AdapterView.OnItemSelectedListener: the listener to be invoked"]], "Throws": [], "SeeAlso": ["@B_android#widget#AdapterView#setOnItemSelectedListener_E@"], "Permissions": [], "Description": "Sets a listener to be invoked when an item in the list is selected.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setOnItemSelectedListener (AdapterView.OnItemSelectedListener listener)"}, "AlertDialog.Builder(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: the parent context"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a builder for an alert dialog that uses the default alert dialog theme. The default alert dialog theme is defined by @B_android#R#attr#alertDialogTheme_E@ within the parent context's theme.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder (Context context)"}, "setCancelable(boolean)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether the dialog is cancelable or not. Default is true.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setCancelable (boolean cancelable)"}, "setIcon(android.graphics.drawable.Drawable)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "this Builder object to allow for chaining of calls to set methods"]], "Parameters": [["@B_android#graphics#drawable#Drawable_E@", "Drawable no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the @B_android#graphics#drawable#Drawable_E@ to be used in the title. @B_android#app#AlertDialog#Builder#getContext_E@.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setIcon (Drawable icon)"}, "setNegativeButton(int,android.content.DialogInterface.OnClickListener)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["int", "int: The resource id of the text to display in the negative button"], ["@B_android#content#DialogInterface#OnClickListener_E@", "DialogInterface.OnClickListener: The @B_android#content#DialogInterface#OnClickListener_E@ to use."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a listener to be invoked when the negative button of the dialog is pressed.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setNegativeButton (int textId, DialogInterface.OnClickListener listener)"}, "setPositiveButton(int,android.content.DialogInterface.OnClickListener)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["int", "int: The resource id of the text to display in the positive button"], ["@B_android#content#DialogInterface#OnClickListener_E@", "DialogInterface.OnClickListener: The @B_android#content#DialogInterface#OnClickListener_E@ to use."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a listener to be invoked when the positive button of the dialog is pressed.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setPositiveButton (int textId, DialogInterface.OnClickListener listener)"}, "setNegativeButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: The text to display in the negative button"], ["@B_android#content#DialogInterface#OnClickListener_E@", "DialogInterface.OnClickListener: The @B_android#content#DialogInterface#OnClickListener_E@ to use."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a listener to be invoked when the negative button of the dialog is pressed.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setNegativeButton (CharSequence text, DialogInterface.OnClickListener listener)"}, "setNeutralButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: The text to display in the neutral button"], ["@B_android#content#DialogInterface#OnClickListener_E@", "DialogInterface.OnClickListener: The @B_android#content#DialogInterface#OnClickListener_E@ to use."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a listener to be invoked when the neutral button of the dialog is pressed.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setNeutralButton (CharSequence text, DialogInterface.OnClickListener listener)"}, "setView(android.view.View)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "this Builder object to allow for chaining of calls to set methods"]], "Parameters": [["@B_android#view#View_E@", "View: the view to use as the contents of the alert dialog"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets a custom view to be the contents of the alert dialog. When using a pre-Holo theme, if the supplied view is an instance of a @B_android#widget#ListView_E@ then the light background will be used. @B_android#app#AlertDialog#Builder#getContext_E@.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setView (View view)"}, "setOnCancelListener(android.content.DialogInterface.OnCancelListener)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["@B_android#content#DialogInterface#OnCancelListener_E@", "DialogInterface.OnCancelListener no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#app#AlertDialog#Builder#setCancelable_E@", "@B_android#app#AlertDialog#Builder#setOnDismissListener_E@"], "Permissions": [], "Description": "Sets the callback that will be called if the dialog is canceled. Even in a cancelable dialog, the dialog may be dismissed for reasons other than being canceled or one of the supplied choices being selected. If you are interested in listening for all cases where the dialog is dismissed and not just when it is canceled, see @B_android#app#AlertDialog#Builder#setOnDismissListener_E@.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setOnCancelListener (DialogInterface.OnCancelListener onCancelListener)"}, "setOnKeyListener(android.content.DialogInterface.OnKeyListener)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["@B_android#content#DialogInterface#OnKeyListener_E@", "DialogInterface.OnKeyListener no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the callback that will be called if a key is dispatched to the dialog.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setOnKeyListener (DialogInterface.OnKeyListener onKeyListener)"}, "AlertDialog.Builder(android.content.Context, int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: the parent context"], ["int", "int: the resource ID of the theme against which to inflate this dialog, or 0 to use the parent context's default alert dialog theme"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a builder for an alert dialog that uses an explicit theme resource. The specified theme resource (themeResId) is applied on top of the parent context's theme. It may be specified as a style resource containing a fully-populated theme, such as @B_android#R#style#Theme_Material_Dialog_E@, to replace all attributes in the parent context's theme including primary and accent colors. To preserve attributes such as primary and accent colors, the themeResId may instead be specified as an overlay theme such as @B_android#R#style#ThemeOverlay_Material_Dialog_E@. This will override only the window attributes necessary to style the alert window as a dialog. Alternatively, the themeResId may be specified as 0 to use the parent context's resolved value for @B_android#R#attr#alertDialogTheme_E@.", "history": "added in API level 11", "FullName": "public AlertDialog.Builder (Context context, int themeResId)"}, "setItems(java.lang.CharSequence[],android.content.DialogInterface.OnClickListener)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"], ["@B_android#content#DialogInterface#OnClickListener_E@", "DialogInterface.OnClickListener no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setItems (CharSequence[] items, DialogInterface.OnClickListener listener)"}, "setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface.OnMultiChoiceClickListener)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: the cursor used to provide the items."], ["@B_java#lang#String_E@", "String: specifies the column name on the cursor to use to determine whether a checkbox is checked or not. It must return an integer value where 1 means checked and 0 means unchecked."], ["@B_java#lang#String_E@", "String: The column name on the cursor containing the string to display in the label."], ["@B_android#content#DialogInterface#OnMultiChoiceClickListener_E@", "DialogInterface.OnMultiChoiceClickListener: notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. The list will have a check mark displayed to the right of the text for each checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setMultiChoiceItems (Cursor cursor, String isCheckedColumn, String labelColumn, DialogInterface.OnMultiChoiceClickListener listener)"}, "setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface.OnClickListener)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: the cursor to retrieve the items from."], ["int", "int: specifies which item is checked. If -1 no items are checked."], ["@B_java#lang#String_E@", "String: The column name on the cursor containing the string to display in the label."], ["@B_android#content#DialogInterface#OnClickListener_E@", "DialogInterface.OnClickListener: notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. The list will have a check mark displayed to the right of the text for the checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setSingleChoiceItems (Cursor cursor, int checkedItem, String labelColumn, DialogInterface.OnClickListener listener)"}, "setTitle(java.lang.CharSequence)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the title displayed in the @B_android#app#Dialog_E@.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setTitle (CharSequence title)"}, "setTitle(int)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the title using the given resource id.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setTitle (int titleId)"}, "create()": {"Returns": [["@B_android#app#AlertDialog_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an @B_android#app#AlertDialog_E@ with the arguments supplied to this builder. Calling this method does not display the dialog. If no additional processing is needed, @B_android#app#AlertDialog#Builder#show_E@ may be called instead to both create and display the dialog.", "history": "Added in API level 1", "FullName": "public AlertDialog create ()"}, "setNeutralButton(int,android.content.DialogInterface.OnClickListener)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["int", "int: The resource id of the text to display in the neutral button"], ["@B_android#content#DialogInterface#OnClickListener_E@", "DialogInterface.OnClickListener: The @B_android#content#DialogInterface#OnClickListener_E@ to use."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a listener to be invoked when the neutral button of the dialog is pressed.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setNeutralButton (int textId, DialogInterface.OnClickListener listener)"}, "setView(int)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "this Builder object to allow for chaining of calls to set methods"]], "Parameters": [["int", "int: Resource ID to be inflated."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a custom view resource to be the contents of the Dialog. The resource will be inflated, adding all top-level views to the screen.", "history": "Added in API level 21", "FullName": "public AlertDialog.Builder setView (int layoutResId)"}, "setOnDismissListener(android.content.DialogInterface.OnDismissListener)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["@B_android#content#DialogInterface#OnDismissListener_E@", "DialogInterface.OnDismissListener no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the callback that will be called when the dialog is dismissed for any reason.", "history": "Added in API level 17", "FullName": "public AlertDialog.Builder setOnDismissListener (DialogInterface.OnDismissListener onDismissListener)"}, "AlertDialog.Builder(android.content.Context,int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: the parent context"], ["int", "int: the resource ID of the theme against which to inflate this dialog, or 0 to use the parent context's default alert dialog theme"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a builder for an alert dialog that uses an explicit theme resource. The specified theme resource (themeResId) is applied on top of the parent context's theme. It may be specified as a style resource containing a fully-populated theme, such as @B_android#R#style#Theme_Material_Dialog_E@, to replace all attributes in the parent context's theme including primary and accent colors. To preserve attributes such as primary and accent colors, the themeResId may instead be specified as an overlay theme such as @B_android#R#style#ThemeOverlay_Material_Dialog_E@. This will override only the window attributes necessary to style the alert window as a dialog. Alternatively, the themeResId may be specified as 0 to use the parent context's resolved value for @B_android#R#attr#alertDialogTheme_E@.", "history": "Added in API level 11", "FullName": "public AlertDialog.Builder (Context context, int themeResId)"}, "setMessage(java.lang.CharSequence)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the message to display.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setMessage (CharSequence message)"}, "setCustomTitle(android.view.View)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "this Builder object to allow for chaining of calls to set methods"]], "Parameters": [["@B_android#view#View_E@", "View: the custom view to use as the title"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the title using the custom view customTitleView. The methods @B_android#app#AlertDialog#Builder#setTitle_E@ and @B_android#app#AlertDialog#Builder#setIcon_E@ should be sufficient for most titles, but this is provided if the title needs more customization. Using this will replace the title and icon set via the other methods. @B_android#app#AlertDialog#Builder#getContext_E@.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setCustomTitle (View customTitleView)"}, "setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface.OnMultiChoiceClickListener)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: the text of the items to be displayed in the list."], ["boolean[]", "boolean: specifies which items are checked. It should be null in which case no items are checked. If non null it must be exactly the same length as the array of items."], ["@B_android#content#DialogInterface#OnMultiChoiceClickListener_E@", "DialogInterface.OnMultiChoiceClickListener: notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. The list will have a check mark displayed to the right of the text for each checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setMultiChoiceItems (CharSequence[] items, boolean[] checkedItems, DialogInterface.OnMultiChoiceClickListener listener)"}, "setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface.OnClickListener)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["@B_android#widget#ListAdapter_E@", "ListAdapter: The @B_android#widget#ListAdapter_E@ to supply the list of items"], ["int", "int: specifies which item is checked. If -1 no items are checked."], ["@B_android#content#DialogInterface#OnClickListener_E@", "DialogInterface.OnClickListener: notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. The list will have a check mark displayed to the right of the text for the checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setSingleChoiceItems (ListAdapter adapter, int checkedItem, DialogInterface.OnClickListener listener)"}, "setMessage(int)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the message to display using the given resource id.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setMessage (int messageId)"}, "setAdapter(android.widget.ListAdapter,android.content.DialogInterface.OnClickListener)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["@B_android#widget#ListAdapter_E@", "ListAdapter: The @B_android#widget#ListAdapter_E@ to supply the list of items"], ["@B_android#content#DialogInterface#OnClickListener_E@", "DialogInterface.OnClickListener: The listener that will be called when an item is clicked."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a list of items, which are supplied by the given @B_android#widget#ListAdapter_E@, to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setAdapter (ListAdapter adapter, DialogInterface.OnClickListener listener)"}, "setIconAttribute(int)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: ID of a theme attribute that points to a drawable resource."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set an icon as supplied by a theme attribute. e.g. @B_android#R#attr#alertDialogIcon_E@. Takes precedence over values set using @B_android#app#AlertDialog#Builder#setIcon_E@ or @B_android#app#AlertDialog#Builder#setIcon_E@.", "history": "Added in API level 11", "FullName": "public AlertDialog.Builder setIconAttribute (int attrId)"}, "setIcon(int)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the resource id of the @B_android#graphics#drawable#Drawable_E@ to be used in the title. Takes precedence over values set using @B_android#app#AlertDialog#Builder#setIcon_E@.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setIcon (int iconId)"}, "setSingleChoiceItems(int,int,android.content.DialogInterface.OnClickListener)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["int", "int: the resource id of an array i.e. R.array.foo"], ["int", "int: specifies which item is checked. If -1 no items are checked."], ["@B_android#content#DialogInterface#OnClickListener_E@", "DialogInterface.OnClickListener: notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. This should be an array type i.e. R.array.foo The list will have a check mark displayed to the right of the text for the checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setSingleChoiceItems (int itemsId, int checkedItem, DialogInterface.OnClickListener listener)"}, "setPositiveButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: The text to display in the positive button"], ["@B_android#content#DialogInterface#OnClickListener_E@", "DialogInterface.OnClickListener: The @B_android#content#DialogInterface#OnClickListener_E@ to use."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a listener to be invoked when the positive button of the dialog is pressed.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setPositiveButton (CharSequence text, DialogInterface.OnClickListener listener)"}, "setCursor(android.database.Cursor,android.content.DialogInterface.OnClickListener,java.lang.String)": {"Returns": [["@B_android#app#AlertDialog#Builder_E@", "This Builder object to allow for chaining of calls to set methods"]], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: The @B_android#database#Cursor_E@ to supply the list of items"], ["@B_android#content#DialogInterface#OnClickListener_E@", "DialogInterface.OnClickListener: The listener that will be called when an item is clicked."], ["@B_java#lang#String_E@", "String: The column name on the cursor containing the string to display in the label."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a list of items, which are supplied by the given @B_android#database#Cursor_E@, to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener.", "history": "Added in API level 1", "FullName": "public AlertDialog.Builder setCursor (Cursor cursor, DialogInterface.OnClickListener listener, String labelColumn)"}}, "Inheritance": [], "ClassName": "android.app.AlertDialog.Builder", "ClassDesc": ""}