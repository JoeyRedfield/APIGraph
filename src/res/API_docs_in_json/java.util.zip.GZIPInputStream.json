{"Functions": {"GZIPInputStream(java.io.InputStream)": {"Returns": [], "Parameters": [["@B_java#io#InputStream_E@", "InputStream: the input stream"]], "Throws": [["@B_java#util#zip#ZipException_E@", "if a GZIP format error has occurred or the compression method used is unsupported"], ["@B_java#io#IOException_E@", "if an I/O error has occurred"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new input stream with a default buffer size.", "history": "Added in API level 1", "FullName": "public GZIPInputStream (InputStream in)"}, "read(byte[],int,int)": {"Returns": [["int", "the actual number of bytes read, or -1 if the end of the compressed input stream is reached"]], "Parameters": [["byte[]", "byte: the buffer into which the data is read"], ["int", "int: the start offset in the destination array b"], ["int", "int: the maximum number of bytes read"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If buf is null."], ["@B_java#lang#IndexOutOfBoundsException_E@", "If off is negative, len is negative, or len is greater than buf.length - off"], ["@B_java#util#zip#ZipException_E@", "if the compressed input data is corrupt."], ["@B_java#io#IOException_E@", "if an I/O error has occurred."]], "SeeAlso": [], "Permissions": [], "Description": "Reads uncompressed data into an array of bytes. If len is not zero, the method will block until some input can be decompressed; otherwise, no bytes are read and 0 is returned.", "history": "Added in API level 1", "FullName": "public int read (byte[] buf, int off, int len)"}, "read(byte[], int, int)": {"Returns": [["int", "the actual number of bytes read, or -1 if the end of the compressed input stream is reached"]], "Parameters": [["byte[]", "byte: the buffer into which the data is read"], ["int", "int: the start offset in the destination array b"], ["int", "int: the maximum number of bytes read"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If buf is null."], ["@B_java#lang#IndexOutOfBoundsException_E@", "If off is negative, len is negative, or len is greater than buf.length - off"], ["@B_java#util#zip#ZipException_E@", "if the compressed input data is corrupt."], ["@B_java#io#IOException_E@", "if an I/O error has occurred."]], "SeeAlso": [], "Permissions": [], "Description": "Reads uncompressed data into an array of bytes. If len is not zero, the method will block until some input can be decompressed; otherwise, no bytes are read and 0 is returned.", "history": "added in API level 1", "FullName": "public int read (byte[] buf, int off, int len)"}, "GZIPInputStream(java.io.InputStream, int)": {"Returns": [], "Parameters": [["@B_java#io#InputStream_E@", "InputStream: the input stream"], ["int", "int: the input buffer size"]], "Throws": [["@B_java#util#zip#ZipException_E@", "if a GZIP format error has occurred or the compression method used is unsupported"], ["@B_java#io#IOException_E@", "if an I/O error has occurred"], ["@B_java#lang#IllegalArgumentException_E@", "if size <= 0"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new input stream with the specified buffer size.", "history": "added in API level 1", "FullName": "public GZIPInputStream (InputStream in, int size)"}, "close()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", "if an I/O error has occurred"]], "SeeAlso": [], "Permissions": [], "Description": "Closes this input stream and releases any system resources associated with the stream.", "history": "Added in API level 1", "FullName": "public void close ()"}, "GZIPInputStream(java.io.InputStream,int)": {"Returns": [], "Parameters": [["@B_java#io#InputStream_E@", "InputStream: the input stream"], ["int", "int: the input buffer size"]], "Throws": [["@B_java#util#zip#ZipException_E@", "if a GZIP format error has occurred or the compression method used is unsupported"], ["@B_java#io#IOException_E@", "if an I/O error has occurred"], ["@B_java#lang#IllegalArgumentException_E@", "if size <= 0"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new input stream with the specified buffer size.", "history": "Added in API level 1", "FullName": "public GZIPInputStream (InputStream in, int size)"}}, "Inheritance": ["@B_java#io#InputStream_E@", "@B_java#io#FilterInputStream_E@", "@B_java#util#zip#InflaterInputStream_E@"], "ClassName": "java.util.zip.GZIPInputStream", "ClassDesc": "This class implements a stream filter for reading compressed data in the GZIP file format."}