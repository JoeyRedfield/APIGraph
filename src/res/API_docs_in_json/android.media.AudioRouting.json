{"Functions": {"addOnRoutingChangedListener(android.media.AudioRouting.OnRoutingChangedListener,android.os.Handler)": {"Returns": [], "Parameters": [["@B_android#media#AudioRouting#OnRoutingChangedListener_E@", "AudioRouting.OnRoutingChangedListener: The @B_android#media#AudioRouting#OnRoutingChangedListener_E@ interface to receive notifications of rerouting events."], ["@B_android#os#Handler_E@", "Handler: Specifies the @B_android#os#Handler_E@ object for the thread on which to execute the callback. If null, the @B_android#os#Handler_E@ associated with the main @B_android#os#Looper_E@ will be used."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds an @B_android#media#AudioRouting#OnRoutingChangedListener_E@ to receive notifications of routing changes on this AudioTrack/AudioRecord.", "history": "Added in API level 24", "FullName": "public abstract void addOnRoutingChangedListener (AudioRouting.OnRoutingChangedListener listener, Handler handler)"}, "getRoutedDevice()": {"Returns": [["@B_android#media#AudioDeviceInfo_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an @B_android#media#AudioDeviceInfo_E@ identifying the current routing of this AudioTrack/AudioRecord. Note: The query is only valid if the AudioTrack/AudioRecord is currently playing. If it is not, getRoutedDevice() will return null.", "history": "Added in API level 24", "FullName": "public abstract AudioDeviceInfo getRoutedDevice ()"}, "getPreferredDevice()": {"Returns": [["@B_android#media#AudioDeviceInfo_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the selected output/input specified by @B_android#media#AudioRouting#setPreferredDevice_E@. Note that this is not guaranteed to correspond to the actual device being used for playback/recording.", "history": "Added in API level 24", "FullName": "public abstract AudioDeviceInfo getPreferredDevice ()"}, "setPreferredDevice(android.media.AudioDeviceInfo)": {"Returns": [["boolean", "true if succesful, false if the specified @B_android#media#AudioDeviceInfo_E@ is non-null and does not correspond to a valid audio device."]], "Parameters": [["@B_android#media#AudioDeviceInfo_E@", "AudioDeviceInfo: The @B_android#media#AudioDeviceInfo_E@ specifying the audio sink or source. If deviceInfo is null, default routing is restored."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Specifies an audio device (via an @B_android#media#AudioDeviceInfo_E@ object) to route the output/input to/from.", "history": "Added in API level 24", "FullName": "public abstract boolean setPreferredDevice (AudioDeviceInfo deviceInfo)"}, "removeOnRoutingChangedListener(android.media.AudioRouting.OnRoutingChangedListener)": {"Returns": [], "Parameters": [["@B_android#media#AudioRouting#OnRoutingChangedListener_E@", "AudioRouting.OnRoutingChangedListener: The previously added @B_android#media#AudioRouting#OnRoutingChangedListener_E@ interface to remove."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes an @B_android#media#AudioRouting#OnRoutingChangedListener_E@ which has been previously added to receive rerouting notifications.", "history": "Added in API level 24", "FullName": "public abstract void removeOnRoutingChangedListener (AudioRouting.OnRoutingChangedListener listener)"}}, "Inheritance": [], "ClassName": "android.media.AudioRouting", "ClassDesc": "AudioRouting defines an interface for controlling routing and routing notifications in AudioTrack and AudioRecord objects."}