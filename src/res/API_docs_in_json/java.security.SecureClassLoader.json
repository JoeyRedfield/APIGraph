{"Functions": {"getPermissions(java.security.CodeSource)": {"Returns": [["@B_java#security#PermissionCollection_E@", "the permissions granted to the codesource."]], "Parameters": [["@B_java#security#CodeSource_E@", "CodeSource: the codesource."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the permissions for the given CodeSource object. This method is invoked by the defineClass method which takes a CodeSource as an argument when it is constructing the ProtectionDomain for the class being defined.", "history": "Added in API level 1", "FullName": "protected PermissionCollection getPermissions (CodeSource codesource)"}, "defineClass(java.lang.String,byte[],int,int,java.security.CodeSource)": {"Returns": [["@B_java#lang#Class_E@", "the Class object created from the data, and optional CodeSource."]], "Parameters": [["@B_java#lang#String_E@", "String: the expected name of the class, or null if not known, using '.' and not '/' as the separator and without a trailing \".class\" suffix."], ["byte[]", "byte: the bytes that make up the class data. The bytes in positions off through off+len-1 should have the format of a valid class file as defined by The Java\u2122 Virtual Machine Specification."], ["int", "int: the start offset in b of the class data"], ["int", "int: the length of the class data"], ["@B_java#security#CodeSource_E@", "CodeSource: the associated CodeSource, or null if none"]], "Throws": [["@B_java#lang#ClassFormatError_E@", "if the data did not contain a valid class"], ["@B_java#lang#IndexOutOfBoundsException_E@", "if either off or len is negative, or if off+len is greater than b.length."], ["@B_java#lang#SecurityException_E@", "if an attempt is made to add this class to a package that contains classes that were signed by a different set of certificates than this class, or if the class name begins with \"java.\"."]], "SeeAlso": [], "Permissions": [], "Description": "Converts an array of bytes into an instance of class Class, with an optional CodeSource. Before the class can be used it must be resolved. If a non-null CodeSource is supplied a ProtectionDomain is constructed and associated with the class being defined.", "history": "Added in API level 1", "FullName": "protected final Class<?> defineClass (String name, byte[] b, int off, int len, CodeSource cs)"}, "defineClass(java.lang.String,java.nio.ByteBuffer,java.security.CodeSource)": {"Returns": [["@B_java#lang#Class_E@", "the Class object created from the data, and optional CodeSource."]], "Parameters": [["@B_java#lang#String_E@", "String: the expected name of the class, or null if not known, using '.' and not '/' as the separator and without a trailing \".class\" suffix."], ["@B_java#nio#ByteBuffer_E@", "ByteBuffer: the bytes that make up the class data. The bytes from positions b.position() through b.position() + b.limit() -1 should have the format of a valid class file as defined by The Java\u2122 Virtual Machine Specification."], ["@B_java#security#CodeSource_E@", "CodeSource: the associated CodeSource, or null if none"]], "Throws": [["@B_java#lang#ClassFormatError_E@", "if the data did not contain a valid class"], ["@B_java#lang#SecurityException_E@", "if an attempt is made to add this class to a package that contains classes that were signed by a different set of certificates than this class, or if the class name begins with \"java.\"."]], "SeeAlso": [], "Permissions": [], "Description": "Converts a @B_java#nio#ByteBuffer_E@ into an instance of class Class, with an optional CodeSource. Before the class can be used it must be resolved. If a non-null CodeSource is supplied a ProtectionDomain is constructed and associated with the class being defined.", "history": "Added in API level 1", "FullName": "protected final Class<?> defineClass (String name, ByteBuffer b, CodeSource cs)"}, "SecureClassLoader(java.lang.ClassLoader)": {"Returns": [], "Parameters": [["@B_java#lang#ClassLoader_E@", "ClassLoader: the parent ClassLoader"]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its checkCreateClassLoader method doesn't allow creation of a class loader."]], "SeeAlso": ["@B_java#lang#SecurityManager#checkCreateClassLoader_E@"], "Permissions": [], "Description": "Creates a new SecureClassLoader using the specified parent class loader for delegation. If there is a security manager, this method first calls the security manager's checkCreateClassLoader method to ensure creation of a class loader is allowed.", "history": "Added in API level 1", "FullName": "protected SecureClassLoader (ClassLoader parent)"}, "SecureClassLoader()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its checkCreateClassLoader method doesn't allow creation of a class loader."]], "SeeAlso": ["@B_java#lang#SecurityManager#checkCreateClassLoader_E@"], "Permissions": [], "Description": "Creates a new SecureClassLoader using the default parent class loader for delegation. If there is a security manager, this method first calls the security manager's checkCreateClassLoader method to ensure creation of a class loader is allowed.", "history": "Added in API level 1", "FullName": "protected SecureClassLoader ()"}}, "Inheritance": ["@B_java#lang#ClassLoader_E@"], "ClassName": "java.security.SecureClassLoader", "ClassDesc": "This class extends ClassLoader with additional support for defining classes with an associated code source and permissions which are retrieved by the system policy by default."}