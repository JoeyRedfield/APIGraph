{"Functions": {"InputContentInfo(android.net.Uri,android.content.ClipDescription)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri: Content URI to be exported from the input method. This cannot be null. This value must never be null."], ["@B_android#content#ClipDescription_E@", "ClipDescription: A @B_android#content#ClipDescription_E@ object that contains the metadata of contentUri such as MIME type(s). This object cannot be null. Also @B_android#content#ClipDescription#getLabel_E@ should be describing the content specified by contentUri for accessibility reasons. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs @B_android#view#inputmethod#InputContentInfo_E@ object only with mandatory data.", "history": "Added in API level 25", "FullName": "public InputContentInfo (Uri contentUri, ClipDescription description)"}, "getContentUri()": {"Returns": [["@B_android#net#Uri_E@", "Content URI with which the content can be obtained. This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 25", "FullName": "public Uri getContentUri ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The @B_android#os#Parcel_E@ to be written."], ["int", "int: The flags used for parceling."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Used to package this object into a @B_android#os#Parcel_E@.", "history": "Added in API level 25", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "releasePermission()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Releases a temporary read-only access permission for content URI associated with this object. Does nothing if the temporary permission is not granted.", "history": "Added in API level 25", "FullName": "public void releasePermission ()"}, "getDescription()": {"Returns": [["@B_android#content#ClipDescription_E@", "@B_android#content#ClipDescription_E@ object that contains the metadata of #getContentUri() such as MIME type(s). @B_android#content#ClipDescription#getLabel_E@ can be used for accessibility purpose. This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 25", "FullName": "public ClipDescription getDescription ()"}, "requestPermission()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Requests a temporary read-only access permission for content URI associated with this object. Does nothing if the temporary permission is already granted.", "history": "Added in API level 25", "FullName": "public void requestPermission ()"}, "InputContentInfo(android.net.Uri,android.content.ClipDescription,android.net.Uri)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri: Content URI to be exported from the input method. This cannot be null. This value must never be null."], ["@B_android#content#ClipDescription_E@", "ClipDescription: A @B_android#content#ClipDescription_E@ object that contains the metadata of contentUri such as MIME type(s). This object cannot be null. Also @B_android#content#ClipDescription#getLabel_E@ should be describing the content specified by contentUri for accessibility reasons. This value must never be null."], ["@B_android#net#Uri_E@", "Uri: An optional http or https URI. The editor author may provide a way to navigate the user to the specified web page if this is not null. This value may be null."]], "Throws": [["@B_java#security#InvalidParameterException_E@", "if any invalid parameter is specified."]], "SeeAlso": [], "Permissions": [], "Description": "Constructs @B_android#view#inputmethod#InputContentInfo_E@ object with additional link URI.", "history": "Added in API level 25", "FullName": "public InputContentInfo (Uri contentUri, ClipDescription description, Uri linkUri)"}, "getLinkUri()": {"Returns": [["@B_android#net#Uri_E@", "An optional http or https URI that is related to this content. This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 25", "FullName": "public Uri getLinkUri ()"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 25", "FullName": "public int describeContents ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The @B_android#os#Parcel_E@ to be written."], ["int", "int: The flags used for parceling."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Used to package this object into a @B_android#os#Parcel_E@.", "history": "added in API level 25", "FullName": "public void writeToParcel (Parcel dest, int flags)"}}, "Inheritance": [], "ClassName": "android.view.inputmethod.InputContentInfo", "ClassDesc": "A container object with which input methods can send content files to the target application."}