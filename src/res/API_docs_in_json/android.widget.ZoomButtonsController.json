{"Functions": {"ZoomButtonsController(android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: The view that is being zoomed by the zoom controls. The zoom controls will be displayed aligned with this view."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor for the @B_android#widget#ZoomButtonsController_E@.", "history": "Added in API level 4", "FullName": "public ZoomButtonsController (View ownerView)"}, "setZoomOutEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: Whether to enable the zoom out control."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Whether to enable the zoom out control.", "history": "Added in API level 4 Deprecated in API level 26", "FullName": "public void setZoomOutEnabled (boolean enabled)"}, "setOnZoomListener(android.widget.ZoomButtonsController.OnZoomListener)": {"Returns": [], "Parameters": [["@B_android#widget#ZoomButtonsController#OnZoomListener_E@", "ZoomButtonsController.OnZoomListener: The listener that will be told to zoom."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the @B_android#widget#ZoomButtonsController#OnZoomListener_E@ listener that receives callbacks to zoom.", "history": "Added in API level 4 Deprecated in API level 26", "FullName": "public void setOnZoomListener (ZoomButtonsController.OnZoomListener listener)"}, "isVisible()": {"Returns": [["boolean", "Whether the zoom controls are visible to the user."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Whether the zoom controls are visible to the user.", "history": "Added in API level 4 Deprecated in API level 26", "FullName": "public boolean isVisible ()"}, "getContainer()": {"Returns": [["@B_android#view#ViewGroup_E@", "The container of the zoom controls. It will be a layout that respects the gravity of a child's layout parameters."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the container that is the parent of the zoom controls. The client can add other views to this container to link them with the zoom controls.", "history": "Added in API level 4 Deprecated in API level 26", "FullName": "public ViewGroup getContainer ()"}, "setZoomSpeed(long)": {"Returns": [], "Parameters": [["long", "long: The delay in milliseconds between zoom callbacks."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the delay between zoom callbacks as the user holds a zoom button.", "history": "Added in API level 4 Deprecated in API level 26", "FullName": "public void setZoomSpeed (long speed)"}, "setFocusable(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: Whether the zoom controls should be focusable."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether the zoom controls should be focusable. If the controls are focusable, then trackball and arrow key interactions are possible. Otherwise, only touch interactions are possible.", "history": "Added in API level 4 Deprecated in API level 26", "FullName": "public void setFocusable (boolean focusable)"}, "getZoomControls()": {"Returns": [["@B_android#view#View_E@", "The zoom controls view."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the view for the zoom controls.", "history": "Added in API level 4 Deprecated in API level 26", "FullName": "public View getZoomControls ()"}, "isAutoDismissed()": {"Returns": [["boolean", "Whether the zoom controls will be auto dismissed after showing."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Whether the zoom controls will be automatically dismissed after showing.", "history": "Added in API level 4 Deprecated in API level 26", "FullName": "public boolean isAutoDismissed ()"}, "setZoomInEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: Whether to enable the zoom in control."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Whether to enable the zoom in control.", "history": "Added in API level 4 Deprecated in API level 26", "FullName": "public void setZoomInEnabled (boolean enabled)"}, "setAutoDismissed(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether the zoom controls will be automatically dismissed after showing.", "history": "Added in API level 4 Deprecated in API level 26", "FullName": "public void setAutoDismissed (boolean autoDismiss)"}, "setVisible(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: Whether the zoom controls should be visible to the user."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether the zoom controls should be visible to the user.", "history": "Added in API level 4 Deprecated in API level 26", "FullName": "public void setVisible (boolean visible)"}}, "Inheritance": [], "ClassName": "android.widget.ZoomButtonsController", "ClassDesc": "This functionality and UI is better handled with custom views and layouts rather than a dedicated zoom-control widget The @B_android#widget#ZoomButtonsController_E@ handles showing and hiding the zoom controls and positioning it relative to an owner view. It also gives the client access to the zoom controls container, allowing for additional accessory buttons to be shown in the zoom controls window. Typically, clients should call @B_android#widget#ZoomButtonsController#setVisible_E@ on a touch down or move (no need to call @B_android#widget#ZoomButtonsController#setVisible_E@ since it will time out on its own). Also, whenever the owner cannot be zoomed further, the client should update @B_android#widget#ZoomButtonsController#setZoomInEnabled_E@ and @B_android#widget#ZoomButtonsController#setZoomOutEnabled_E@. If you are using this with a custom View, please call @B_android#widget#ZoomButtonsController#setVisible_E@ from @B_android#view#View#onDetachedFromWindow_E@ and from @B_android#view#View#onVisibilityChanged_E@ when visibility != View.VISIBLE."}