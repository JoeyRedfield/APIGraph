{"Functions": {"AttributedString(java.text.AttributedCharacterIterator,int,int)": {"Returns": [], "Parameters": [["@B_java#text#AttributedCharacterIterator_E@", "AttributedCharacterIterator: The text for this attributed string."], ["int", "int: Index of the first character of the range."], ["int", "int: Index of the character following the last character of the range."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if text is null."], ["@B_java#lang#IllegalArgumentException_E@", "if the subrange given by beginIndex and endIndex is out of the text range."]], "SeeAlso": ["@B_java#text#Annotation_E@"], "Permissions": [], "Description": "Constructs an AttributedString instance with the subrange of the given attributed text represented by AttributedCharacterIterator. If the given range produces an empty text, all attributes will be discarded. Note that any attributes wrapped by an Annotation object are discarded for a subrange of the original attribute range.", "history": "Added in API level 1", "FullName": "public AttributedString (AttributedCharacterIterator text, int beginIndex, int endIndex)"}, "AttributedString(java.lang.String,java.util.Map<?extendsjava.text.AttributedCharacterIterator.Attribute,?>)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The text for this attributed string."], ["@B_java#util#Map_E@", "Map: The attributes that apply to the entire string."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if text or attributes is null."], ["@B_java#lang#IllegalArgumentException_E@", "if the text has length 0 and the attributes parameter is not an empty Map (attributes cannot be applied to a 0-length range)."]], "SeeAlso": [], "Permissions": [], "Description": "Constructs an AttributedString instance with the given text and attributes.", "history": "Added in API level 1", "FullName": "public AttributedString (String text, Map<? extends AttributedCharacterIterator.Attribute, ?> attributes)"}, "addAttributes(java.util.Map<?extendsjava.text.AttributedCharacterIterator.Attribute,?>,int,int)": {"Returns": [], "Parameters": [["@B_java#util#Map_E@", "Map: The attributes to be added to the string."], ["int", "int: Index of the first character of the range."], ["int", "int: Index of the character following the last character of the range."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if attributes is null."], ["@B_java#lang#IllegalArgumentException_E@", "if beginIndex is less then 0, endIndex is greater than the length of the string, or beginIndex and endIndex together don't define a non-empty subrange of the string and the attributes parameter is not an empty Map."]], "SeeAlso": [], "Permissions": [], "Description": "Adds a set of attributes to a subrange of the string.", "history": "Added in API level 1", "FullName": "public void addAttributes (Map<? extends AttributedCharacterIterator.Attribute, ?> attributes, int beginIndex, int endIndex)"}, "getIterator(java.text.AttributedCharacterIterator.Attribute[])": {"Returns": [["@B_java#text#AttributedCharacterIterator_E@", "an iterator providing access to the entire text and its selected attributes"]], "Parameters": [["@B_java#text#AttributedCharacterIterator#Attribute_E@", "Attribute: a list of attributes that the client is interested in"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an AttributedCharacterIterator instance that provides access to selected contents of this string. Information about attributes not listed in attributes that the implementor may have need not be made accessible through the iterator. If the list is null, all available attribute information should be made accessible.", "history": "Added in API level 1", "FullName": "public AttributedCharacterIterator getIterator (Attribute[] attributes)"}, "AttributedString(java.text.AttributedCharacterIterator)": {"Returns": [], "Parameters": [["@B_java#text#AttributedCharacterIterator_E@", "AttributedCharacterIterator: The text for this attributed string."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if text is null."]], "SeeAlso": [], "Permissions": [], "Description": "Constructs an AttributedString instance with the given attributed text represented by AttributedCharacterIterator.", "history": "Added in API level 1", "FullName": "public AttributedString (AttributedCharacterIterator text)"}, "AttributedString(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The text for this attributed string."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if text is null."]], "SeeAlso": [], "Permissions": [], "Description": "Constructs an AttributedString instance with the given text.", "history": "Added in API level 1", "FullName": "public AttributedString (String text)"}, "AttributedString(java.text.AttributedCharacterIterator,int,int,java.text.AttributedCharacterIterator.Attribute[])": {"Returns": [], "Parameters": [["@B_java#text#AttributedCharacterIterator_E@", "AttributedCharacterIterator: The text for this attributed string."], ["int", "int: Index of the first character of the range."], ["int", "int: Index of the character following the last character of the range."], ["@B_java#text#AttributedCharacterIterator#Attribute_E@", "Attribute: Specifies attributes to be extracted from the text. If null is specified, all available attributes will be used."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if text is null."], ["@B_java#lang#IllegalArgumentException_E@", "if the subrange given by beginIndex and endIndex is out of the text range."]], "SeeAlso": ["@B_java#text#Annotation_E@"], "Permissions": [], "Description": "Constructs an AttributedString instance with the subrange of the given attributed text represented by AttributedCharacterIterator. Only attributes that match the given attributes will be incorporated into the instance. If the given range produces an empty text, all attributes will be discarded. Note that any attributes wrapped by an Annotation object are discarded for a subrange of the original attribute range.", "history": "Added in API level 1", "FullName": "public AttributedString (AttributedCharacterIterator text, int beginIndex, int endIndex, Attribute[] attributes)"}, "getIterator()": {"Returns": [["@B_java#text#AttributedCharacterIterator_E@", "An iterator providing access to the text and its attributes."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an AttributedCharacterIterator instance that provides access to the entire contents of this string.", "history": "Added in API level 1", "FullName": "public AttributedCharacterIterator getIterator ()"}, "addAttribute(java.text.AttributedCharacterIterator.Attribute,java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#text#AttributedCharacterIterator#Attribute_E@", "AttributedCharacterIterator.Attribute: the attribute key"], ["@B_java#lang#Object_E@", "Object: the value of the attribute; may be null"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if attribute is null."], ["@B_java#lang#IllegalArgumentException_E@", "if the AttributedString has length 0 (attributes cannot be applied to a 0-length range)."]], "SeeAlso": [], "Permissions": [], "Description": "Adds an attribute to the entire string.", "history": "Added in API level 1", "FullName": "public void addAttribute (AttributedCharacterIterator.Attribute attribute, Object value)"}, "addAttribute(java.text.AttributedCharacterIterator.Attribute,java.lang.Object,int,int)": {"Returns": [], "Parameters": [["@B_java#text#AttributedCharacterIterator#Attribute_E@", "AttributedCharacterIterator.Attribute: the attribute key"], ["@B_java#lang#Object_E@", "Object: The value of the attribute. May be null."], ["int", "int: Index of the first character of the range."], ["int", "int: Index of the character following the last character of the range."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if attribute is null."], ["@B_java#lang#IllegalArgumentException_E@", "if beginIndex is less then 0, endIndex is greater than the length of the string, or beginIndex and endIndex together don't define a non-empty subrange of the string."]], "SeeAlso": [], "Permissions": [], "Description": "Adds an attribute to a subrange of the string.", "history": "Added in API level 1", "FullName": "public void addAttribute (AttributedCharacterIterator.Attribute attribute, Object value, int beginIndex, int endIndex)"}, "getIterator(java.text.AttributedCharacterIterator.Attribute[],int,int)": {"Returns": [["@B_java#text#AttributedCharacterIterator_E@", "an iterator providing access to the text and its attributes"]], "Parameters": [["@B_java#text#AttributedCharacterIterator#Attribute_E@", "Attribute: a list of attributes that the client is interested in"], ["int", "int: the index of the first character"], ["int", "int: the index of the character following the last character"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if beginIndex is less then 0, endIndex is greater than the length of the string, or beginIndex is greater than endIndex."]], "SeeAlso": [], "Permissions": [], "Description": "Creates an AttributedCharacterIterator instance that provides access to selected contents of this string. Information about attributes not listed in attributes that the implementor may have need not be made accessible through the iterator. If the list is null, all available attribute information should be made accessible.", "history": "Added in API level 1", "FullName": "public AttributedCharacterIterator getIterator (Attribute[] attributes, int beginIndex, int endIndex)"}}, "Inheritance": [], "ClassName": "java.text.AttributedString", "ClassDesc": "An AttributedString holds text and related attribute information. It may be used as the actual data storage in some cases where a text reader wants to access attributed text through the AttributedCharacterIterator interface. An attribute is a key/value pair, identified by the key. No two attributes on a given character can have the same key. The values for an attribute are immutable, or must not be mutated by clients or storage. They are always passed by reference, and not cloned."}