{"Functions": {"getLookasideSlotSize()": {"Returns": [["int", "Value is -1 or greater"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#database#sqlite#SQLiteDatabase#OpenParams#Builder#setLookasideConfig_E@"], "Permissions": [], "Description": "Returns size in bytes of each lookaside slot or -1 if not set.", "history": "Added in API level 27", "FullName": "public int getLookasideSlotSize ()"}, "getSynchronousMode()": {"Returns": [["@B_java#lang#String_E@", "This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#database#sqlite#SQLiteDatabase#OpenParams#Builder#setSynchronousMode_E@"], "Permissions": [], "Description": "Returns", "history": "Added in API level 28", "FullName": "public String getSynchronousMode ()"}, "getIdleConnectionTimeout()": {"Returns": [["long", "timeout in milliseconds or -1 if the value wasn't set."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns maximum number of milliseconds that SQLite connection is allowed to be idle before it is closed and removed from the pool. If the value isn't set, the timeout defaults to the system wide timeout", "history": "Added in API level 27", "FullName": "public long getIdleConnectionTimeout ()"}, "getLookasideSlotCount()": {"Returns": [["int", "Value is -1 or greater"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#database#sqlite#SQLiteDatabase#OpenParams#Builder#setLookasideConfig_E@"], "Permissions": [], "Description": "Returns total number of lookaside memory slots per database connection or -1 if not set.", "history": "Added in API level 27", "FullName": "public int getLookasideSlotCount ()"}, "getErrorHandler()": {"Returns": [["@B_android#database#DatabaseErrorHandler_E@", "This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#database#sqlite#SQLiteDatabase#OpenParams#Builder#setErrorHandler_E@"], "Permissions": [], "Description": "Returns handler for database corruption errors", "history": "Added in API level 27", "FullName": "public DatabaseErrorHandler getErrorHandler ()"}, "getCursorFactory()": {"Returns": [["@B_android#database#sqlite#SQLiteDatabase#CursorFactory_E@", "This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#database#sqlite#SQLiteDatabase#OpenParams#Builder#setCursorFactory_E@"], "Permissions": [], "Description": "Returns an optional factory class that is called to instantiate a cursor when query is called", "history": "Added in API level 27", "FullName": "public SQLiteDatabase.CursorFactory getCursorFactory ()"}, "getJournalMode()": {"Returns": [["@B_java#lang#String_E@", "This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#database#sqlite#SQLiteDatabase#OpenParams#Builder#setJournalMode_E@"], "Permissions": [], "Description": "Returns @B_android#database#sqlite#SQLiteDatabase#ENABLE_WRITE_AHEAD_LOGGING_E@ flag is not set, otherwise a platform will use \"WAL\" journal mode.", "history": "Added in API level 28", "FullName": "public String getJournalMode ()"}, "getOpenFlags()": {"Returns": [["int", "Value is either 0 or a combination of @B_android#database#sqlite#SQLiteDatabase#OPEN_READWRITE_E@, @B_android#database#sqlite#SQLiteDatabase#OPEN_READONLY_E@, @B_android#database#sqlite#SQLiteDatabase#CREATE_IF_NECESSARY_E@, @B_android#database#sqlite#SQLiteDatabase#NO_LOCALIZED_COLLATORS_E@, and @B_android#database#sqlite#SQLiteDatabase#ENABLE_WRITE_AHEAD_LOGGING_E@"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#database#sqlite#SQLiteDatabase#OpenParams#Builder#setOpenFlags_E@"], "Permissions": [], "Description": "Returns flags to control database access mode. Default value is 0.", "history": "Added in API level 27", "FullName": "public int getOpenFlags ()"}}, "Inheritance": [], "ClassName": "android.database.sqlite.SQLiteDatabase.OpenParams", "ClassDesc": "Wrapper for configuration parameters that are used for opening @B_android#database#sqlite#SQLiteDatabase_E@"}