{"Functions": {"write(java.nio.ByteBuffer)": {"Returns": [["int", "The number of bytes written, possibly zero"]], "Parameters": [["@B_java#nio#ByteBuffer_E@", "ByteBuffer: The buffer from which bytes are to be retrieved"]], "Throws": [["@B_java#nio#channels#NonWritableChannelException_E@", "If this channel was not opened for writing"], ["@B_java#nio#channels#ClosedChannelException_E@", "If this channel is closed"], ["@B_java#nio#channels#AsynchronousCloseException_E@", "If another thread closes this channel while the write operation is in progress"], ["@B_java#nio#channels#ClosedByInterruptException_E@", "If another thread interrupts the current thread while the write operation is in progress, thereby closing the channel and setting the current thread's interrupt status"], ["@B_java#io#IOException_E@", "If some other I/O error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Writes a sequence of bytes to this channel from the given buffer. An attempt is made to write up to Suppose that a byte sequence of length Unless otherwise specified, a write operation will return only after writing all of the This method may be invoked at any time. If another thread has already initiated a write operation upon this channel, however, then an invocation of this method will block until the first operation is complete.", "history": "Added in API level 1", "FullName": "public abstract int write (ByteBuffer src)"}}, "Inheritance": [], "ClassName": "java.nio.channels.WritableByteChannel", "ClassDesc": "A channel that can write bytes. Only one write operation upon a writable channel may be in progress at any given time. If one thread initiates a write operation upon a channel then any other thread that attempts to initiate another write operation will block until the first operation is complete. Whether or not other kinds of I/O operations may proceed concurrently with a write operation depends upon the type of the channel."}