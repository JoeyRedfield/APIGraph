{"Functions": {"getTimestamp()": {"Returns": [["long", "The status timestamp in the @B_android#os#SystemClock#elapsedRealtime_E@ time base."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the timestamp associated with the status information in milliseconds since boot in the @B_android#os#SystemClock#elapsedRealtime_E@ time base.", "history": "added in version 22.0.0", "FullName": "long getTimestamp ()"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "", "FullName": "String toString ()"}, "getContentPosition()": {"Returns": [["long", "The content playback position in milliseconds, or -1 if unknown."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the content playback position as a long integer number of milliseconds from the beginning of the content.", "history": "added in version 22.0.0", "FullName": "long getContentPosition ()"}, "fromBundle(android.os.Bundle)": {"Returns": [["@B_android#support#v7#media#MediaItemStatus_E@", "The new instance, or null if the bundle was null."]], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: The bundle, or null if none."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an instance from a bundle.", "history": "added in version 22.0.0", "FullName": "MediaItemStatus fromBundle (Bundle bundle)"}, "getPlaybackState()": {"Returns": [["int", "The playback state. One of @B_android#support#v7#media#MediaItemStatus#PLAYBACK_STATE_PENDING_E@, @B_android#support#v7#media#MediaItemStatus#PLAYBACK_STATE_PLAYING_E@, @B_android#support#v7#media#MediaItemStatus#PLAYBACK_STATE_PAUSED_E@, @B_android#support#v7#media#MediaItemStatus#PLAYBACK_STATE_BUFFERING_E@, @B_android#support#v7#media#MediaItemStatus#PLAYBACK_STATE_FINISHED_E@, @B_android#support#v7#media#MediaItemStatus#PLAYBACK_STATE_CANCELED_E@, @B_android#support#v7#media#MediaItemStatus#PLAYBACK_STATE_INVALIDATED_E@, or @B_android#support#v7#media#MediaItemStatus#PLAYBACK_STATE_ERROR_E@."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the playback state of the media item.", "history": "added in version 22.0.0", "FullName": "int getPlaybackState ()"}, "asBundle()": {"Returns": [["@B_android#os#Bundle_E@", "The contents of the object represented as a bundle."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Converts this object to a bundle for serialization.", "history": "added in version 22.0.0", "FullName": "Bundle asBundle ()"}, "getContentDuration()": {"Returns": [["long", "The content duration in milliseconds, or -1 if unknown."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the total duration of the content to be played as a long integer number of milliseconds.", "history": "added in version 22.0.0", "FullName": "long getContentDuration ()"}, "getExtras()": {"Returns": [["@B_android#os#Bundle_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets a bundle of extras for this status object. The extras will be ignored by the media router but they may be used by applications.", "history": "added in version 22.0.0", "FullName": "Bundle getExtras ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v7.media.MediaItemStatus", "ClassDesc": "Describes the playback status of a media item. This class is part of the remote playback protocol described by the @B_android#support#v7#media#MediaControlIntent_E@ class. As a media item is played, it transitions through a sequence of states including: @B_android#support#v7#media#MediaItemStatus#PLAYBACK_STATE_PENDING_E@, @B_android#support#v7#media#MediaItemStatus#PLAYBACK_STATE_BUFFERING_E@, @B_android#support#v7#media#MediaItemStatus#PLAYBACK_STATE_PLAYING_E@, @B_android#support#v7#media#MediaItemStatus#PLAYBACK_STATE_PAUSED_E@, @B_android#support#v7#media#MediaItemStatus#PLAYBACK_STATE_FINISHED_E@, @B_android#support#v7#media#MediaItemStatus#PLAYBACK_STATE_CANCELED_E@, @B_android#support#v7#media#MediaItemStatus#PLAYBACK_STATE_INVALIDATED_E@, and @B_android#support#v7#media#MediaItemStatus#PLAYBACK_STATE_ERROR_E@. Refer to the documentation of each state for an explanation of its meaning. While the item is playing, the playback status may also include progress information about the @B_android#support#v7#media#MediaItemStatus#getContentPosition_E@ and @B_android#support#v7#media#MediaItemStatus#getContentDuration_E@ although not all route destinations will report it. To monitor playback status, the application should supply a https:##developer#android#com@B_android#app#PendingIntent_E@ to use as the @B_android#support#v7#media#MediaControlIntent#EXTRA_ITEM_STATUS_UPDATE_RECEIVER_E@ for a given @B_android#support#v7#media#MediaControlIntent#ACTION_PLAY_E@. Note that the status update receiver will only be invoked for major status changes such as a transition from playing to finished. The status update receiver will not be invoked for minor progress updates such as changes to playback position or duration. If the application wants to monitor playback progress, then it must use the @B_android#support#v7#media#MediaControlIntent#ACTION_GET_STATUS_E@ to poll for changes periodically and estimate the playback position while playing. Note that there may be a significant power impact to polling so the application is advised only to poll when the screen is on and never more than about once every 5 seconds or so. This object is immutable once created using a @B_android#support#v7#media#MediaItemStatus#Builder_E@ instance."}