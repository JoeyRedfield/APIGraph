{"Functions": {"compareTo(android.icu.util.VersionInfo)": {"Returns": [["int", "0 if the argument is a VersionInfo object that has version information equals to this object. Less than 0 if the argument is a VersionInfo object that has version information greater than this object. Greater than 0 if the argument is a VersionInfo object that has version information less than this object."]], "Parameters": [["@B_android#icu#util#VersionInfo_E@", "VersionInfo: VersionInfo to be compared"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Compares other with this VersionInfo.", "history": "Added in API level 24", "FullName": "public int compareTo (VersionInfo other)"}, "getInstance(int,int,int)": {"Returns": [["@B_android#icu#util#VersionInfo_E@", "no returns description in source"]], "Parameters": [["int", "int: major version, non-negative number <= 255."], ["int", "int: minor version, non-negative number <= 255."], ["int", "int: milli version, non-negative number <= 255."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "when either arguments are negative or > 255"]], "SeeAlso": [], "Permissions": [], "Description": "Returns an instance of VersionInfo with the argument version. Equivalent to getInstance(major, minor, milli, 0).", "history": "Added in API level 24", "FullName": "public static VersionInfo getInstance (int major, int minor, int milli)"}, "getInstance(int, int, int)": {"Returns": [["@B_android#icu#util#VersionInfo_E@", "no returns description in source"]], "Parameters": [["int", "int: major version, non-negative number <= 255."], ["int", "int: minor version, non-negative number <= 255."], ["int", "int: milli version, non-negative number <= 255."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "when either arguments are negative or > 255"]], "SeeAlso": [], "Permissions": [], "Description": "Returns an instance of VersionInfo with the argument version. Equivalent to getInstance(major, minor, milli, 0).", "history": "added in API level 24", "FullName": "public static VersionInfo getInstance (int major, int minor, int milli)"}, "getInstance(int,int,int,int)": {"Returns": [["@B_android#icu#util#VersionInfo_E@", "no returns description in source"]], "Parameters": [["int", "int: major version, non-negative number <= 255."], ["int", "int: minor version, non-negative number <= 255."], ["int", "int: milli version, non-negative number <= 255."], ["int", "int: micro version, non-negative number <= 255."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "when either arguments are negative or > 255"]], "SeeAlso": [], "Permissions": [], "Description": "Returns an instance of VersionInfo with the argument version.", "history": "Added in API level 24", "FullName": "public static VersionInfo getInstance (int major, int minor, int milli, int micro)"}, "getInstance(int)": {"Returns": [["@B_android#icu#util#VersionInfo_E@", "no returns description in source"]], "Parameters": [["int", "int: major version, non-negative number <= 255."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "when either arguments are negative or > 255"]], "SeeAlso": [], "Permissions": [], "Description": "Returns an instance of VersionInfo with the argument version. Equivalent to getInstance(major, 0, 0, 0).", "history": "Added in API level 24", "FullName": "public static VersionInfo getInstance (int major)"}, "getMinor()": {"Returns": [["int", "the minor version number"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the minor version number", "history": "Added in API level 24", "FullName": "public int getMinor ()"}, "getMilli()": {"Returns": [["int", "the milli version number"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the milli version number", "history": "Added in API level 24", "FullName": "public int getMilli ()"}, "getInstance(int, int, int, int)": {"Returns": [["@B_android#icu#util#VersionInfo_E@", "no returns description in source"]], "Parameters": [["int", "int: major version, non-negative number <= 255."], ["int", "int: minor version, non-negative number <= 255."], ["int", "int: milli version, non-negative number <= 255."], ["int", "int: micro version, non-negative number <= 255."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "when either arguments are negative or > 255"]], "SeeAlso": [], "Permissions": [], "Description": "Returns an instance of VersionInfo with the argument version.", "history": "added in API level 24", "FullName": "public static VersionInfo getInstance (int major, int minor, int milli, int micro)"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "String representative of VersionInfo"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the String representative of VersionInfo in the format of \"major.minor.milli.micro\"", "history": "Added in API level 24", "FullName": "public String toString ()"}, "getInstance(java.lang.String)": {"Returns": [["@B_android#icu#util#VersionInfo_E@", "an instance of VersionInfo with the argument version."]], "Parameters": [["@B_java#lang#String_E@", "String: version String in the format of \"major.minor.milli.micro\" or \"major.minor.milli\" or \"major.minor\" or \"major\", where major, minor, milli, micro are non-negative numbers <= 255. If the trailing version numbers are not specified they are taken as 0s. E.g. Version \"3.1\" is equivalent to \"3.1.0.0\"."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "when the argument version is not in the right format"]], "SeeAlso": [], "Permissions": [], "Description": "Returns an instance of VersionInfo with the argument version.", "history": "Added in API level 24", "FullName": "public static VersionInfo getInstance (String version)"}, "getInstance(int, int)": {"Returns": [["@B_android#icu#util#VersionInfo_E@", "no returns description in source"]], "Parameters": [["int", "int: major version, non-negative number <= 255."], ["int", "int: minor version, non-negative number <= 255."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "when either arguments are negative or > 255"]], "SeeAlso": [], "Permissions": [], "Description": "Returns an instance of VersionInfo with the argument version. Equivalent to getInstance(major, minor, 0, 0).", "history": "added in API level 24", "FullName": "public static VersionInfo getInstance (int major, int minor)"}, "getInstance(int,int)": {"Returns": [["@B_android#icu#util#VersionInfo_E@", "no returns description in source"]], "Parameters": [["int", "int: major version, non-negative number <= 255."], ["int", "int: minor version, non-negative number <= 255."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "when either arguments are negative or > 255"]], "SeeAlso": [], "Permissions": [], "Description": "Returns an instance of VersionInfo with the argument version. Equivalent to getInstance(major, minor, 0, 0).", "history": "Added in API level 24", "FullName": "public static VersionInfo getInstance (int major, int minor)"}, "getMajor()": {"Returns": [["int", "the major version number"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the major version number", "history": "Added in API level 24", "FullName": "public int getMajor ()"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if other is equals to this object's version information, false otherwise"]], "Parameters": [["@B_java#lang#Object_E@", "Object: object to be compared"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks if this version information is equals to the argument version", "history": "Added in API level 24", "FullName": "public boolean equals (Object other)"}, "getMicro()": {"Returns": [["int", "the micro version number"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the micro version number", "history": "Added in API level 24", "FullName": "public int getMicro ()"}, "hashCode()": {"Returns": [["int", "the hash code value for this set."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#lang#Object#hashCode_E@"], "Permissions": [], "Description": "Returns the hash code value for this set.", "history": "Added in API level 24", "FullName": "public int hashCode ()"}}, "Inheritance": [], "ClassName": "android.icu.util.VersionInfo", "ClassDesc": "Class to store version numbers of the form major.minor.milli.micro."}