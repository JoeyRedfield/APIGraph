{"Functions": {"setStatusHints(android.telecom.StatusHints)": {"Returns": [], "Parameters": [["@B_android#telecom#StatusHints_E@", "StatusHints: The status label and icon to set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the label and icon status to display in the InCall UI.", "history": "Added in API level 23", "FullName": "public final void setStatusHints (StatusHints statusHints)"}, "setOnHold()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets state to be on hold.", "history": "Added in API level 23", "FullName": "public final void setOnHold ()"}, "setConnectionStartElapsedRealTime(long)": {"Returns": [], "Parameters": [["long", "long: The connection time, as measured by @B_android#os#SystemClock#elapsedRealtime_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the start time of the @B_android#telecom#Conference_E@ which is the basis for the determining the duration of the @B_android#telecom#Conference_E@. You should use a value returned by @B_android#os#SystemClock#elapsedRealtime_E@ to ensure that time zone changes do not impact the conference duration. When setting this, you should also set the connection time via @B_android#telecom#Conference#setConnectionTime_E@.", "history": "Added in API level 28", "FullName": "public final void setConnectionStartElapsedRealTime (long connectionStartElapsedRealTime)"}, "removeExtras(java.lang.String...)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The keys of the extras to remove."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes extras from this @B_android#telecom#Conference_E@.", "history": "Added in API level 25", "FullName": "public final void removeExtras (String... keys)"}, "destroy()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tears down the conference object and any of its current connections.", "history": "Added in API level 23", "FullName": "public final void destroy ()"}, "getExtras()": {"Returns": [["@B_android#os#Bundle_E@", "The extras associated with this connection."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the extras associated with this conference. Extras should be updated using @B_android#telecom#Conference#putExtras_E@ and @B_android#telecom#Conference#removeExtras_E@. Telecom or an @B_android#telecom#InCallService_E@ can also update the extras via @B_android#telecom#Call#putExtras_E@, and @B_android#telecom#Call#removeExtras_E@. The conference is notified of changes to the extras made by Telecom or an @B_android#telecom#InCallService_E@ by @B_android#telecom#Conference#onExtrasChanged_E@.", "history": "Added in API level 23", "FullName": "public final Bundle getExtras ()"}, "onStopDtmfTone()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies the @B_android#telecom#Conference_E@ of a request to stop any currently playing DTMF tones.", "history": "Added in API level 23", "FullName": "public void onStopDtmfTone ()"}, "onDisconnect()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies the @B_android#telecom#Conference_E@ when the Conference and all it's @B_android#telecom#Connection_E@s should be disconnected.", "history": "Added in API level 23", "FullName": "public void onDisconnect ()"}, "getConnectionCapabilities()": {"Returns": [["int", "A bitmask of the capabilities of the conference call."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the capabilities of the conference. See CAPABILITY_* constants in class @B_android#telecom#Connection_E@ for valid values.", "history": "Added in API level 23", "FullName": "public final int getConnectionCapabilities ()"}, "onMerge(android.telecom.Connection)": {"Returns": [], "Parameters": [["@B_android#telecom#Connection_E@", "Connection: The Connection to merge."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies the @B_android#telecom#Conference_E@ when the specified @B_android#telecom#Connection_E@ should merged with the conference call.", "history": "Added in API level 23", "FullName": "public void onMerge (Connection connection)"}, "onExtrasChanged(android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: The new extras bundle."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies this @B_android#telecom#Conference_E@ of a change to the extras made outside the @B_android#telecom#ConnectionService_E@. These extras changes can originate from Telecom itself, or from an @B_android#telecom#InCallService_E@ via @B_android#telecom#Call#putExtras_E@, and @B_android#telecom#Call#removeExtras_E@.", "history": "Added in API level 25", "FullName": "public void onExtrasChanged (Bundle extras)"}, "setConferenceableConnections(java.util.List<android.telecom.Connection>)": {"Returns": [], "Parameters": [["@B_java#util#List_E@", "List: The set of connections this connection can conference with."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the connections with which this connection can be conferenced.", "history": "Added in API level 23", "FullName": "public final void setConferenceableConnections (List<Connection> conferenceableConnections)"}, "setDisconnected(android.telecom.DisconnectCause)": {"Returns": [], "Parameters": [["@B_android#telecom#DisconnectCause_E@", "DisconnectCause: The reason for the disconnection, as described by @B_android#telecom#DisconnectCause_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets state to disconnected.", "history": "Added in API level 23", "FullName": "public final void setDisconnected (DisconnectCause disconnectCause)"}, "getState()": {"Returns": [["int", "A constant representing the state the conference call is currently in."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the state of the conference call. See @B_android#telecom#Connection_E@ for valid values.", "history": "Added in API level 23", "FullName": "public final int getState ()"}, "getVideoState()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns video state of the primary call.", "history": "Added in API level 23", "FullName": "public int getVideoState ()"}, "getConferenceableConnections()": {"Returns": [["@B_java#util#List_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the connections with which this connection can be conferenced.", "history": "Added in API level 23", "FullName": "public final List<Connection> getConferenceableConnections ()"}, "getConnectionTime()": {"Returns": [["long", "The time at which the Conference was connected."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the connection start time of the Conference, if specified. A value of @B_android#telecom#Conference#CONNECT_TIME_NOT_SPECIFIED_E@ indicates that Telecom should determine the start time of the conference.", "history": "Added in API level 23", "FullName": "public final long getConnectionTime ()"}, "setActive()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets state to be active.", "history": "Added in API level 23", "FullName": "public final void setActive ()"}, "onUnhold()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies the @B_android#telecom#Conference_E@ when it should be moved from a held to active state.", "history": "Added in API level 23", "FullName": "public void onUnhold ()"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 23", "FullName": "public String toString ()"}, "setConnectionCapabilities(int)": {"Returns": [], "Parameters": [["int", "int: A bitmask of the Capabilities of the conference call."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the capabilities of a conference. See CAPABILITY_* constants of class @B_android#telecom#Connection_E@ for valid values.", "history": "Added in API level 23", "FullName": "public final void setConnectionCapabilities (int connectionCapabilities)"}, "getConnections()": {"Returns": [["@B_java#util#List_E@", "A list of Connection objects which represent the children of the conference."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the list of connections currently associated with the conference call.", "history": "Added in API level 23", "FullName": "public final List<Connection> getConnections ()"}, "setConnectionProperties(int)": {"Returns": [], "Parameters": [["int", "int: A bitmask of the Properties of the conference call."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the properties of a conference. See PROPERTY_* constants of class @B_android#telecom#Connection_E@ for valid values.", "history": "Added in API level 25", "FullName": "public final void setConnectionProperties (int connectionProperties)"}, "setVideoState(android.telecom.Connection, int)": {"Returns": [], "Parameters": [["@B_android#telecom#Connection_E@", "Connection no parameter comment"], ["int", "int: The new video state."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the video state for the conference. Valid values: @B_android#telecom#VideoProfile#STATE_AUDIO_ONLY_E@, @B_android#telecom#VideoProfile#STATE_BIDIRECTIONAL_E@, @B_android#telecom#VideoProfile#STATE_TX_ENABLED_E@, @B_android#telecom#VideoProfile#STATE_RX_ENABLED_E@.", "history": "added in API level 23", "FullName": "public final void setVideoState (Connection c, int videoState)"}, "setVideoState(android.telecom.Connection,int)": {"Returns": [], "Parameters": [["@B_android#telecom#Connection_E@", "Connection no parameter comment"], ["int", "int: The new video state."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the video state for the conference. Valid values: @B_android#telecom#VideoProfile#STATE_AUDIO_ONLY_E@, @B_android#telecom#VideoProfile#STATE_BIDIRECTIONAL_E@, @B_android#telecom#VideoProfile#STATE_TX_ENABLED_E@, @B_android#telecom#VideoProfile#STATE_RX_ENABLED_E@.", "history": "Added in API level 23", "FullName": "public final void setVideoState (Connection c, int videoState)"}, "setConnectionTime(long)": {"Returns": [], "Parameters": [["long", "long: The connection time, in milliseconds, as returned by @B_java#lang#System#currentTimeMillis_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the connection start time of the Conference. This is used in the call log to indicate the date and time when the conference took place. Should be specified in wall-clock time returned by @B_java#lang#System#currentTimeMillis_E@. When setting the connection time, you should always set the connection elapsed time via @B_android#telecom#Conference#setConnectionStartElapsedRealTime_E@ to ensure the duration is reflected.", "history": "Added in API level 23", "FullName": "public final void setConnectionTime (long connectionTimeMillis)"}, "setDialing()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets state to be dialing.", "history": "Added in API level 23", "FullName": "public final void setDialing ()"}, "addConnection(android.telecom.Connection)": {"Returns": [["boolean", "True if the connection was successfully added."]], "Parameters": [["@B_android#telecom#Connection_E@", "Connection: The connection to add."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds the specified connection as a child of this conference.", "history": "Added in API level 23", "FullName": "public final boolean addConnection (Connection connection)"}, "getVideoProvider()": {"Returns": [["@B_android#telecom#Connection#VideoProvider_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns VideoProvider of the primary call. This can be null.", "history": "Added in API level 23", "FullName": "public Connection.VideoProvider getVideoProvider ()"}, "getCallAudioState()": {"Returns": [["@B_android#telecom#CallAudioState_E@", "The audio state of the conference, describing how its audio is currently being routed by the system. This is null if this Conference does not directly know about its audio state."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public final CallAudioState getCallAudioState ()"}, "removeConnection(android.telecom.Connection)": {"Returns": [], "Parameters": [["@B_android#telecom#Connection_E@", "Connection: The connection to remove."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes the specified connection as a child of this conference.", "history": "Added in API level 23", "FullName": "public final void removeConnection (Connection connection)"}, "setVideoProvider(android.telecom.Connection,android.telecom.Connection.VideoProvider)": {"Returns": [], "Parameters": [["@B_android#telecom#Connection_E@", "Connection no parameter comment"], ["@B_android#telecom#Connection#VideoProvider_E@", "Connection.VideoProvider: The video provider."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the video connection provider.", "history": "Added in API level 23", "FullName": "public final void setVideoProvider (Connection c, Connection.VideoProvider videoProvider)"}, "onSwap()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies the @B_android#telecom#Conference_E@ when the child calls should be swapped. Only invoked if the conference contains the capability @B_android#telecom#Connection#CAPABILITY_SWAP_CONFERENCE_E@.", "history": "Added in API level 23", "FullName": "public void onSwap ()"}, "onSeparate(android.telecom.Connection)": {"Returns": [], "Parameters": [["@B_android#telecom#Connection_E@", "Connection: The connection to separate."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies the @B_android#telecom#Conference_E@ when the specified @B_android#telecom#Connection_E@ should be separated from the conference call.", "history": "Added in API level 23", "FullName": "public void onSeparate (Connection connection)"}, "onConnectionAdded(android.telecom.Connection)": {"Returns": [], "Parameters": [["@B_android#telecom#Connection_E@", "Connection: The newly added connection."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies the @B_android#telecom#Conference_E@ that a @B_android#telecom#Connection_E@ has been added to it.", "history": "Added in API level 23", "FullName": "public void onConnectionAdded (Connection connection)"}, "getPhoneAccountHandle()": {"Returns": [["@B_android#telecom#PhoneAccountHandle_E@", "A PhoneAccountHandle object representing the PhoneAccount of the conference."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#telecom#PhoneAccountHandle_E@ the conference call is being placed through.", "history": "Added in API level 23", "FullName": "public final PhoneAccountHandle getPhoneAccountHandle ()"}, "onHold()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies the @B_android#telecom#Conference_E@ when it should be put on hold.", "history": "Added in API level 23", "FullName": "public void onHold ()"}, "Conference(android.telecom.PhoneAccountHandle)": {"Returns": [], "Parameters": [["@B_android#telecom#PhoneAccountHandle_E@", "PhoneAccountHandle: The PhoneAccountHandle associated with the conference."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new Conference with a mandatory @B_android#telecom#PhoneAccountHandle_E@", "history": "Added in API level 23", "FullName": "public Conference (PhoneAccountHandle phoneAccount)"}, "onPlayDtmfTone(char)": {"Returns": [], "Parameters": [["char", "char: A DTMF character."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies the @B_android#telecom#Conference_E@ of a request to play a DTMF tone.", "history": "Added in API level 23", "FullName": "public void onPlayDtmfTone (char c)"}, "getConnectionProperties()": {"Returns": [["int", "A bitmask of the properties of the conference call."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the properties of the conference. See PROPERTY_* constants in class @B_android#telecom#Connection_E@ for valid values.", "history": "Added in API level 25", "FullName": "public final int getConnectionProperties ()"}, "putExtras(android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: The extras to add. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds some extras to this @B_android#telecom#Conference_E@. Existing keys are replaced and new ones are added. No assumptions should be made as to how an In-Call UI or service will handle these extras. Keys should be fully qualified (e.g., com.example.MY_EXTRA) to avoid conflicts.", "history": "Added in API level 25", "FullName": "public final void putExtras (Bundle extras)"}, "getDisconnectCause()": {"Returns": [["@B_android#telecom#DisconnectCause_E@", "The @B_android#telecom#DisconnectCause_E@ for this connection."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public final DisconnectCause getDisconnectCause ()"}, "onMerge()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies the @B_android#telecom#Conference_E@ when the child calls should be merged. Only invoked if the conference contains the capability @B_android#telecom#Connection#CAPABILITY_MERGE_CONFERENCE_E@.", "history": "Added in API level 23", "FullName": "public void onMerge ()"}, "getStatusHints()": {"Returns": [["@B_android#telecom#StatusHints_E@", "The status hints for this conference."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public final StatusHints getStatusHints ()"}, "setExtras(android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: The extras associated with this Conference. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Replaces all the extras associated with this Conference. New or existing keys are replaced in the Conference extras. Keys which are no longer in the new extras, but were present the last time setExtras was called are removed. Alternatively you may use the @B_android#telecom#Conference#putExtras_E@, and @B_android#telecom#Conference#removeExtras_E@ methods to modify the extras. No assumptions should be made as to how an In-Call UI or service will handle these extras. Keys should be fully qualified (e.g., com.example.extras.MY_EXTRA) to avoid conflicts.", "history": "Added in API level 23", "FullName": "public final void setExtras (Bundle extras)"}, "removeExtras(java.util.List<java.lang.String>)": {"Returns": [], "Parameters": [["@B_java#util#List_E@", "List: The keys of the extras to remove."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes extras from this @B_android#telecom#Conference_E@.", "history": "Added in API level 25", "FullName": "public final void removeExtras (List<String> keys)"}, "onCallAudioStateChanged(android.telecom.CallAudioState)": {"Returns": [], "Parameters": [["@B_android#telecom#CallAudioState_E@", "CallAudioState: The new call audio state."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies the @B_android#telecom#Conference_E@ that the @B_android#telecom#Conference#getCallAudioState_E@ property has a new value.", "history": "Added in API level 23", "FullName": "public void onCallAudioStateChanged (CallAudioState state)"}}, "Inheritance": ["@B_android#telecom#Conferenceable_E@"], "ClassName": "android.telecom.Conference", "ClassDesc": "Represents a conference call which can contain any number of @B_android#telecom#Connection_E@ objects."}