{"Functions": {"remove(android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: The View to be removed from the overlay. This value must never be null."]], "Throws": [], "SeeAlso": ["@B_android#view#ViewGroupOverlay#add_E@", "@B_android#view#ViewOverlay#remove_E@"], "Permissions": [], "Description": "Removes the specified View from the overlay. Passing null parameter will result in an @B_java#lang#IllegalArgumentException_E@ being thrown.", "history": "Added in API level 18", "FullName": "public void remove (View view)"}, "add(android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: The View to be added to the overlay. The added view will be drawn when the overlay is drawn. This value must never be null."]], "Throws": [], "SeeAlso": ["@B_android#view#ViewGroupOverlay#remove_E@", "@B_android#view#ViewOverlay#add_E@"], "Permissions": [], "Description": "Adds a View to the overlay. The bounds of the added view should be relative to the host view. Any view added to the overlay should be removed when it is no longer needed or no longer visible. Views in the overlay are visual-only; they do not receive input events and do not participate in focus traversal. Overlay views are intended to be transient, such as might be needed by a temporary animation effect. If the view has a parent, the view will be removed from that parent before being added to the overlay. Also, if that parent is attached in the current view hierarchy, the view will be repositioned such that it is in the same relative location inside the activity. For example, if the view's current parent lies 100 pixels to the right and 200 pixels down from the origin of the overlay's host view, then the view will be offset by (100, 200). Views added with this API will be drawn in the order they were added. Drawing of the overlay views will happen before drawing of any of the Drawables added with @B_android#view#ViewOverlay#add_E@ API even if a call to this API happened after the call to @B_android#view#ViewOverlay#add_E@. Passing null parameter will result in an @B_java#lang#IllegalArgumentException_E@ being thrown.", "history": "Added in API level 18", "FullName": "public void add (View view)"}}, "Inheritance": ["@B_android#view#ViewOverlay_E@"], "ClassName": "android.view.ViewGroupOverlay", "ClassDesc": "A group overlay is an extra layer that sits on top of a ViewGroup (the \"host view\") which is drawn after all other content in that view (including the view group's children). Interaction with the overlay layer is done by adding and removing views and drawables. ViewGroupOverlay is a subclass of @B_android#view#ViewOverlay_E@, adding the ability to manage views for overlays on ViewGroups, in addition to the drawable support in ViewOverlay."}