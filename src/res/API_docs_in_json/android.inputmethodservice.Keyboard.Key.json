{"Functions": {"Keyboard.Key(android.content.res.Resources,android.inputmethodservice.Keyboard.Row,int,int,android.content.res.XmlResourceParser)": {"Returns": [], "Parameters": [["@B_android#content#res#Resources_E@", "Resources: resources associated with the caller's context"], ["@B_android#inputmethodservice#Keyboard#Row_E@", "Keyboard.Row: the row that this key belongs to. The row must already be attached to a @B_android#inputmethodservice#Keyboard_E@."], ["int", "int: the x coordinate of the top-left"], ["int", "int: the y coordinate of the top-left"], ["@B_android#content#res#XmlResourceParser_E@", "XmlResourceParser: the XML parser containing the attributes for this key"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a key with the given top-left coordinate and extract its attributes from the XML parser.", "history": "Added in API level 3", "FullName": "public Keyboard.Key (Resources res, Keyboard.Row parent, int x, int y, XmlResourceParser parser)"}, "isInside(int,int)": {"Returns": [["boolean", "whether or not the point falls inside the key. If the key is attached to an edge, it will assume that all points between the key and the edge are considered to be inside the key."]], "Parameters": [["int", "int: the x-coordinate of the point"], ["int", "int: the y-coordinate of the point"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Detects if a point falls inside this key.", "history": "Added in API level 3 Deprecated in API level 29", "FullName": "public boolean isInside (int x, int y)"}, "squaredDistanceFrom(int,int)": {"Returns": [["int", "the square of the distance of the point from the center of the key"]], "Parameters": [["int", "int: the x-coordinate of the point"], ["int", "int: the y-coordinate of the point"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the square of the distance between the center of the key and the given point.", "history": "Added in API level 3 Deprecated in API level 29", "FullName": "public int squaredDistanceFrom (int x, int y)"}, "Keyboard.Key(android.inputmethodservice.Keyboard.Row)": {"Returns": [], "Parameters": [["@B_android#inputmethodservice#Keyboard#Row_E@", "Keyboard.Row no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create an empty key with no attributes.", "history": "Added in API level 3", "FullName": "public Keyboard.Key (Keyboard.Row parent)"}, "onReleased(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: whether the finger was released inside the key. Works only on Android M and later. See the method document for details."]], "Throws": [], "SeeAlso": ["@B_android#inputmethodservice#Keyboard#Key#onPressed_E@"], "Permissions": [], "Description": "Changes the pressed state of the key. Toggled state of the key will be flipped when all the following conditions are fulfilled: This is a sticky key, that is, @B_android#inputmethodservice#Keyboard#Key#sticky_E@ is true. The parameter inside is true. @B_android#os#Build#VERSION#SDK_INT_E@ is greater than @B_android#os#Build#VERSION_CODES#LOLLIPOP_MR1_E@.", "history": "Added in API level 3 Deprecated in API level 29", "FullName": "public void onReleased (boolean inside)"}, "squaredDistanceFrom(int, int)": {"Returns": [["int", "the square of the distance of the point from the center of the key"]], "Parameters": [["int", "int: the x-coordinate of the point"], ["int", "int: the y-coordinate of the point"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the square of the distance between the center of the key and the given point.", "history": "added in API level 3", "FullName": "public int squaredDistanceFrom (int x, int y)"}, "isInside(int, int)": {"Returns": [["boolean", "whether or not the point falls inside the key. If the key is attached to an edge, it will assume that all points between the key and the edge are considered to be inside the key."]], "Parameters": [["int", "int: the x-coordinate of the point"], ["int", "int: the y-coordinate of the point"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Detects if a point falls inside this key.", "history": "added in API level 3", "FullName": "public boolean isInside (int x, int y)"}, "getCurrentDrawableState()": {"Returns": [["int[]", "the drawable state of the key."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#graphics#drawable#Drawable#setState_E@"], "Permissions": [], "Description": "Returns the drawable state for the key, based on the current state and type of the key.", "history": "Added in API level 3 Deprecated in API level 29", "FullName": "public int[] getCurrentDrawableState ()"}, "onPressed()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#inputmethodservice#Keyboard#Key#onReleased_E@"], "Permissions": [], "Description": "Informs the key that it has been pressed, in case it needs to change its appearance or state.", "history": "Added in API level 3 Deprecated in API level 29", "FullName": "public void onPressed ()"}}, "Inheritance": [], "ClassName": "android.inputmethodservice.Keyboard.Key", "ClassDesc": "Class for describing the position and characteristics of a single key in the keyboard."}