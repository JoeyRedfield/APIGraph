{"Functions": {"getPrompt()": {"Returns": [["@B_java#lang#CharSequence_E@", "The prompt to display when the dialog is shown"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "CharSequence getPrompt ()"}, "getPopupBackground()": {"Returns": [["@B_android#graphics#drawable#Drawable_E@", "background Background drawable"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the background drawable for the spinner's popup window of choices. Only valid in @B_android#widget#Spinner#MODE_DROPDOWN_E@; other modes will return null.", "history": "", "FullName": "Drawable getPopupBackground ()"}, "setDropDownHorizontalOffset(int)": {"Returns": [], "Parameters": [["int", "int: Horizontal offset in pixels"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a horizontal offset in pixels for the spinner's popup window of choices. Only valid in @B_android#widget#Spinner#MODE_DROPDOWN_E@; this method is a no-op in other modes.", "history": "", "FullName": "void setDropDownHorizontalOffset (int pixels)"}, "setPopupBackgroundResource(int)": {"Returns": [], "Parameters": [["int", "int: Resource ID of a background drawable"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the background drawable for the spinner's popup window of choices. Only valid in @B_android#widget#Spinner#MODE_DROPDOWN_E@; this method is a no-op in other modes.", "history": "", "FullName": "void setPopupBackgroundResource (int resId)"}, "getDropDownHorizontalOffset()": {"Returns": [["int", "Horizontal offset in pixels"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the configured horizontal offset in pixels for the spinner's popup window of choices. Only valid in @B_android#widget#Spinner#MODE_DROPDOWN_E@; other modes will return 0.", "history": "", "FullName": "int getDropDownHorizontalOffset ()"}, "drawableStateChanged()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This function is called whenever the state of the view changes in such a way that it impacts the state of drawables being shown. If the View has a StateListAnimator, it will also be called to run necessary state change animations. Be sure to call through to the superclass when overriding this function.", "history": "", "FullName": "void drawableStateChanged ()"}, "setPrompt(java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: the prompt to set"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the prompt to display when the dialog is shown.", "history": "", "FullName": "void setPrompt (CharSequence prompt)"}, "performClick()": {"Returns": [["boolean", "True there was an assigned OnClickListener that was called, false otherwise is returned."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Call this view's OnClickListener, if it is defined. Performs all normal actions associated with clicking: reporting accessibility event, playing a sound, etc.", "history": "", "FullName": "boolean performClick ()"}, "setDropDownVerticalOffset(int)": {"Returns": [], "Parameters": [["int", "int: Vertical offset in pixels"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a vertical offset in pixels for the spinner's popup window of choices. Only valid in @B_android#widget#Spinner#MODE_DROPDOWN_E@; this method is a no-op in other modes.", "history": "", "FullName": "void setDropDownVerticalOffset (int pixels)"}, "getPopupContext()": {"Returns": [["@B_android#content#Context_E@", "the context used to inflate the Spinner's popup or dialog window"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "Context getPopupContext ()"}, "onTouchEvent(android.view.MotionEvent)": {"Returns": [["boolean", "True if the event was handled, false otherwise."]], "Parameters": [["@B_android#view#MotionEvent_E@", "MotionEvent: The motion event."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Implement this method to handle touch screen motion events. If this method is used to detect click actions, it is recommended that the actions be performed by implementing and calling @B_android#view#View#performClick_E@. This will ensure consistent system behavior, including: obeying click sound preferences dispatching OnClickListener calls handling @B_android#view#accessibility#AccessibilityNodeInfo#ACTION_CLICK_E@ when accessibility features are enabled", "history": "", "FullName": "boolean onTouchEvent (MotionEvent event)"}, "setAdapter(android.widget.SpinnerAdapter)": {"Returns": [], "Parameters": [["@B_android#widget#SpinnerAdapter_E@", "SpinnerAdapter: the adapter to set"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the @B_android#widget#SpinnerAdapter_E@ used to provide the data which backs this Spinner. If this Spinner has a popup theme set in XML via the @B_android#R#styleable#Spinner_popupTheme_E@ attribute, the adapter should inflate drop-down views using the same theme. The easiest way to achieve this is by using @B_android#widget#Spinner#getPopupContext_E@ to obtain a layout inflater for use in @B_android#widget#SpinnerAdapter#getDropDownView_E@. Spinner overrides @B_android#widget#Adapter#getViewTypeCount_E@ on the Adapter associated with this view. Calling @B_android#widget#Adapter#getItemViewType_E@ on the object returned from @B_android#widget#AbsSpinner#getAdapter_E@ will always return 0. Calling @B_android#widget#Adapter#getViewTypeCount_E@ will always return 1. On API @B_android#os#Build#VERSION_CODES#LOLLIPOP_E@ and above, attempting to set an adapter with more than one view type will throw an @B_java#lang#IllegalArgumentException_E@.", "history": "", "FullName": "void setAdapter (SpinnerAdapter adapter)"}, "AppCompatSpinner(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The Context the view is running in, through which it can access the current theme, resources, etc."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Construct a new spinner with the given context's theme.", "history": "added in version 24.2.0", "FullName": "AppCompatSpinner (Context context)"}, "onMeasure(int, int)": {"Returns": [], "Parameters": [["int", "int: horizontal space requirements as imposed by the parent. The requirements are encoded with @B_android#view#View#MeasureSpec_E@."], ["int", "int: vertical space requirements as imposed by the parent. The requirements are encoded with @B_android#view#View#MeasureSpec_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Measure the view and its content to determine the measured width and the measured height. This method is invoked by @B_android#view#View#measure_E@ and should be overridden by subclasses to provide accurate and efficient measurement of their contents. must call @B_android#view#View#setMeasuredDimension_E@ to store the measured width and height of this view. Failure to do so will trigger an IllegalStateException, thrown by @B_android#view#View#measure_E@. Calling the superclass' @B_android#view#View#onMeasure_E@ is a valid use. The base class implementation of measure defaults to the background size, unless a larger size is allowed by the MeasureSpec. Subclasses should override @B_android#view#View#onMeasure_E@ to provide better measurements of their content. If this method is overridden, it is the subclass's responsibility to make sure the measured height and width are at least the view's minimum height and width (@B_android#view#View#getSuggestedMinimumHeight_E@ and @B_android#view#View#getSuggestedMinimumWidth_E@).", "history": "", "FullName": "void onMeasure (int widthMeasureSpec, int heightMeasureSpec)"}, "getDropDownWidth()": {"Returns": [["int", "Width in pixels, WRAP_CONTENT, or MATCH_PARENT"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the configured width of the spinner's popup window of choices in pixels. The returned value may also be @B_android#view#ViewGroup#LayoutParams#MATCH_PARENT_E@ meaning the popup window will match the width of the Spinner itself, or @B_android#view#ViewGroup#LayoutParams#WRAP_CONTENT_E@ to wrap to the measured size of contained dropdown list items.", "history": "", "FullName": "int getDropDownWidth ()"}, "onDetachedFromWindow()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This is called when the view is detached from a window. At this point it no longer has a surface for drawing.", "history": "", "FullName": "void onDetachedFromWindow ()"}, "setDropDownWidth(int)": {"Returns": [], "Parameters": [["int", "int: Width in pixels, WRAP_CONTENT, or MATCH_PARENT"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the width of the spinner's popup window of choices in pixels. This value may also be set to @B_android#view#ViewGroup#LayoutParams#MATCH_PARENT_E@ to match the width of the Spinner itself, or @B_android#view#ViewGroup#LayoutParams#WRAP_CONTENT_E@ to wrap to the measured size of contained dropdown list items. Only valid in @B_android#widget#Spinner#MODE_DROPDOWN_E@; this method is a no-op in other modes.", "history": "", "FullName": "void setDropDownWidth (int pixels)"}, "setBackgroundResource(int)": {"Returns": [], "Parameters": [["int", "int: The identifier of the resource."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the background to a given resource. The resource should refer to a Drawable object or 0 to remove the background.", "history": "", "FullName": "void setBackgroundResource (int resId)"}, "AppCompatSpinner(android.content.Context, int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The Context the view is running in, through which it can access the current theme, resources, etc."], ["int", "int: Constant describing how the user will select choices from the spinner."]], "Throws": [], "SeeAlso": ["@B_android#widget#Spinner_E@"], "Permissions": [], "Description": "Construct a new spinner with the given context's theme and the supplied mode of displaying choices. mode may be one of @B_android#widget#Spinner#MODE_DIALOG_E@ or @B_android#widget#Spinner#MODE_DROPDOWN_E@.", "history": "added in version 24.2.0", "FullName": "AppCompatSpinner (Context context, int mode)"}, "getDropDownVerticalOffset()": {"Returns": [["int", "Vertical offset in pixels"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the configured vertical offset in pixels for the spinner's popup window of choices. Only valid in @B_android#widget#Spinner#MODE_DROPDOWN_E@; other modes will return 0.", "history": "", "FullName": "int getDropDownVerticalOffset ()"}}, "Inheritance": ["java.lang.Object", "https:##developer#android#com@B_android#view#View_E@", "https:##developer#android#com@B_android#view#ViewGroup_E@", "https:##developer#android#com@B_android#widget#AdapterView_E@", "https:##developer#android#com@B_android#widget#AbsSpinner_E@", "https:##developer#android#com@B_android#widget#Spinner_E@"], "ClassName": "android.support.v7.widget.AppCompatSpinner", "ClassDesc": "A https:##developer#android#com@B_android#widget#Spinner_E@ which supports compatible features on older versions of the platform, including: Allows dynamic tint of its background via the background tint methods in @B_android#support#v4#widget#CompoundButtonCompat_E@. Allows setting of the background tint using @B_android#support#v7#appcompat#R#attr#buttonTint_E@ and @B_android#support#v7#appcompat#R#attr#buttonTintMode_E@. Setting the popup theme using @B_android#support#v7#appcompat#R#attr#popupTheme_E@. This will automatically be used when you use https:##developer#android#com@B_android#widget#Spinner_E@ in your layouts. You should only need to manually use this class when writing custom views."}