{"Functions": {"CertPathValidatorException(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the detail message"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a CertPathValidatorException with the given detail message. A detail message is a String that describes this particular exception.", "history": "Added in API level 1", "FullName": "public CertPathValidatorException (String msg)"}, "CertPathValidatorException(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int,java.security.cert.CertPathValidatorException.Reason)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the detail message (or null if none)"], ["@B_java#lang#Throwable_E@", "Throwable: the cause (or null if none)"], ["@B_java#security#cert#CertPath_E@", "CertPath: the certification path that was in the process of being validated when the error was encountered"], ["int", "int: the index of the certificate in the certification path that caused the error (or -1 if not applicable). Note that the list of certificates in a CertPath is zero based."], ["@B_java#security#cert#CertPathValidatorException#Reason_E@", "CertPathValidatorException.Reason: the reason the validation failed"]], "Throws": [["@B_java#lang#IndexOutOfBoundsException_E@", "if the index is out of range (index < -1 || (certPath != null && index >= certPath.getCertificates().size())"], ["@B_java#lang#IllegalArgumentException_E@", "if certPath is null and index is not -1"], ["@B_java#lang#NullPointerException_E@", "if reason is null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a CertPathValidatorException with the specified detail message, cause, certification path, index, and reason.", "history": "Added in API level 24", "FullName": "public CertPathValidatorException (String msg, Throwable cause, CertPath certPath, int index, CertPathValidatorException.Reason reason)"}, "CertPathValidatorException(java.lang.Throwable)": {"Returns": [], "Parameters": [["@B_java#lang#Throwable_E@", "Throwable: the cause (which is saved for later retrieval by the @B_java#lang#Throwable#getCause_E@ method). (A null value is permitted, and indicates that the cause is nonexistent or unknown.)"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a CertPathValidatorException that wraps the specified throwable. This allows any exception to be converted into a CertPathValidatorException, while retaining information about the wrapped exception, which may be useful for debugging. The detail message is set to (cause==null ? null : cause.toString()) (which typically contains the class and detail message of cause).", "history": "Added in API level 1", "FullName": "public CertPathValidatorException (Throwable cause)"}, "getReason()": {"Returns": [["@B_java#security#cert#CertPathValidatorException#Reason_E@", "the reason that the validation failed, or BasicReason.UNSPECIFIED if a reason has not been specified"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the reason that the validation failed. The reason is associated with the index of the certificate returned by @B_java#security#cert#CertPathValidatorException#getIndex_E@.", "history": "Added in API level 24", "FullName": "public CertPathValidatorException.Reason getReason ()"}, "CertPathValidatorException(java.lang.String,java.lang.Throwable)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the detail message"], ["@B_java#lang#Throwable_E@", "Throwable: the cause (which is saved for later retrieval by the @B_java#lang#Throwable#getCause_E@ method). (A null value is permitted, and indicates that the cause is nonexistent or unknown.)"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a CertPathValidatorException with the specified detail message and cause.", "history": "Added in API level 1", "FullName": "public CertPathValidatorException (String msg, Throwable cause)"}, "CertPathValidatorException()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a CertPathValidatorException with no detail message.", "history": "Added in API level 1", "FullName": "public CertPathValidatorException ()"}, "CertPathValidatorException(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the detail message (or null if none)"], ["@B_java#lang#Throwable_E@", "Throwable: the cause (or null if none)"], ["@B_java#security#cert#CertPath_E@", "CertPath: the certification path that was in the process of being validated when the error was encountered"], ["int", "int: the index of the certificate in the certification path that caused the error (or -1 if not applicable). Note that the list of certificates in a CertPath is zero based."]], "Throws": [["@B_java#lang#IndexOutOfBoundsException_E@", "if the index is out of range (index < -1 || (certPath != null && index >= certPath.getCertificates().size())"], ["@B_java#lang#IllegalArgumentException_E@", "if certPath is null and index is not -1"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a CertPathValidatorException with the specified detail message, cause, certification path, and index.", "history": "Added in API level 1", "FullName": "public CertPathValidatorException (String msg, Throwable cause, CertPath certPath, int index)"}, "getCertPath()": {"Returns": [["@B_java#security#cert#CertPath_E@", "the CertPath that was being validated when the exception was thrown (or null if not specified)"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the certification path that was being validated when the exception was thrown.", "history": "Added in API level 1", "FullName": "public CertPath getCertPath ()"}, "getIndex()": {"Returns": [["int", "the index that has been set, or -1 if none has been set"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the index of the certificate in the certification path that caused the exception to be thrown. Note that the list of certificates in a CertPath is zero based. If no index has been set, -1 is returned.", "history": "Added in API level 1", "FullName": "public int getIndex ()"}}, "Inheritance": ["@B_java#lang#Throwable_E@", "@B_java#lang#Exception_E@", "@B_java#security#GeneralSecurityException_E@"], "ClassName": "java.security.cert.CertPathValidatorException", "ClassDesc": "An exception indicating one of a variety of problems encountered when validating a certification path. A CertPathValidatorException provides support for wrapping exceptions. The @B_java#lang#Throwable#getCause_E@ method returns the throwable, if any, that caused this exception to be thrown. A CertPathValidatorException may also include the certification path that was being validated when the exception was thrown, the index of the certificate in the certification path that caused the exception to be thrown, and the reason that caused the failure. Use the @B_java#security#cert#CertPathValidatorException#getCertPath_E@, @B_java#security#cert#CertPathValidatorException#getIndex_E@, and @B_java#security#cert#CertPathValidatorException#getReason_E@ methods to retrieve this information. Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize."}