{"Functions": {"isAnyLocalAddress()": {"Returns": [["boolean", "a boolean indicating if the Inetaddress is a wildcard address."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Utility routine to check if the InetAddress in a wildcard address.", "history": "Added in API level 1", "FullName": "public boolean isAnyLocalAddress ()"}, "getByAddress(java.lang.String,byte[],java.net.NetworkInterface)": {"Returns": [["@B_java#net#Inet6Address_E@", "an Inet6Address object created from the raw IP address."]], "Parameters": [["@B_java#lang#String_E@", "String: the specified host"], ["byte[]", "byte: the raw IP address in network byte order"], ["@B_java#net#NetworkInterface_E@", "NetworkInterface: an interface this address must be associated with."]], "Throws": [["@B_java#net#UnknownHostException_E@", "if IP address is of illegal length, or if the interface does not have a numeric scope_id assigned for the given address type."]], "SeeAlso": [], "Permissions": [], "Description": "Create an Inet6Address in the exact manner of @B_java#net#InetAddress#getByAddress_E@ except that the IPv6 scope_id is set to the value corresponding to the given interface for the address type specified in addr. The call will fail with an UnknownHostException if the given interface does not have a numeric scope_id assigned for the given address type (eg. link-local or site-local). See", "history": "Added in API level 1", "FullName": "public static Inet6Address getByAddress (String host, byte[] addr, NetworkInterface nif)"}, "getScopedInterface()": {"Returns": [["@B_java#net#NetworkInterface_E@", "the scoped interface, or null if not set."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the scoped interface, if this instance was created with with a scoped interface.", "history": "Added in API level 1", "FullName": "public NetworkInterface getScopedInterface ()"}, "isMCOrgLocal()": {"Returns": [["boolean", "a boolean indicating if the address has is a multicast address of organization-local scope, false if it is not of organization-local scope or it is not a multicast address"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Utility routine to check if the multicast address has organization scope.", "history": "Added in API level 1", "FullName": "public boolean isMCOrgLocal ()"}, "isMulticastAddress()": {"Returns": [["boolean", "a boolean indicating if the InetAddress is an IP multicast address"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Utility routine to check if the InetAddress is an IP multicast address. 11111111 at the start of the address identifies the address as being a multicast address.", "history": "Added in API level 1", "FullName": "public boolean isMulticastAddress ()"}, "getScopeId()": {"Returns": [["int", "the scopeId, or zero if not set."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the numeric scopeId, if this instance is associated with an interface. If no scoped_id is set, the returned value is zero.", "history": "Added in API level 1", "FullName": "public int getScopeId ()"}, "isMCLinkLocal()": {"Returns": [["boolean", "a boolean indicating if the address has is a multicast address of link-local scope, false if it is not of link-local scope or it is not a multicast address"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Utility routine to check if the multicast address has link scope.", "history": "Added in API level 1", "FullName": "public boolean isMCLinkLocal ()"}, "isIPv4CompatibleAddress()": {"Returns": [["boolean", "a boolean indicating if the InetAddress is an IPv4 compatible IPv6 address; or false if address is IPv4 address."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Utility routine to check if the InetAddress is an IPv4 compatible IPv6 address.", "history": "Added in API level 1", "FullName": "public boolean isIPv4CompatibleAddress ()"}, "toString()": {"Returns": [["", "a printable representation of this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string containing the host name (if available) and host address. For example: \"www.google.com/74.125.224.115\" or \"/127.0.0.1\". IPv6 addresses may additionally include an interface name or scope id. For example: \"www.google.com/2001:4860:4001:803::1013%eth0\" or \"/2001:4860:4001:803::1013%2\".", "history": "Added in API level 1", "FullName": "public String toString ()"}, "isSiteLocalAddress()": {"Returns": [["boolean", "a boolean indicating if the InetAddress is a site local address; or false if address is not a site local unicast address."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Utility routine to check if the InetAddress is a site local address.", "history": "Added in API level 1", "FullName": "public boolean isSiteLocalAddress ()"}, "isMCGlobal()": {"Returns": [["boolean", "a boolean indicating if the address has is a multicast address of global scope, false if it is not of global scope or it is not a multicast address"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Utility routine to check if the multicast address has global scope.", "history": "Added in API level 1", "FullName": "public boolean isMCGlobal ()"}, "getHostAddress()": {"Returns": [["@B_java#lang#String_E@", "the raw IP address in a string format."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the IP address string in textual presentation. If the instance was created specifying a scope identifier then the scope id is appended to the IP address preceded by a \"%\" (per-cent) character. This can be either a numeric value or a string, depending on which was used to create the instance.", "history": "Added in API level 1", "FullName": "public String getHostAddress ()"}, "getAddress()": {"Returns": [["byte[]", "the raw IP address of this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the raw IP address of this InetAddress object. The result is in network byte order: the highest order byte of the address is in getAddress()[0].", "history": "Added in API level 1", "FullName": "public byte[] getAddress ()"}, "isLoopbackAddress()": {"Returns": [["boolean", "a boolean indicating if the InetAddress is a loopback address; or false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Utility routine to check if the InetAddress is a loopback address.", "history": "Added in API level 1", "FullName": "public boolean isLoopbackAddress ()"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if the objects are the same; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the object to compare against."]], "Throws": [], "SeeAlso": ["@B_java#net#InetAddress#getAddress_E@"], "Permissions": [], "Description": "Compares this object against the specified object. The result is true if and only if the argument is not null and it represents the same IP address as this object. Two instances of InetAddress represent the same IP address if the length of the byte arrays returned by getAddress is the same for both, and each of the array components is the same for the byte arrays.", "history": "Added in API level 1", "FullName": "public boolean equals (Object obj)"}, "getByAddress(java.lang.String, byte[], int)": {"Returns": [["@B_java#net#Inet6Address_E@", "an Inet6Address object created from the raw IP address."]], "Parameters": [["@B_java#lang#String_E@", "String: the specified host"], ["byte[]", "byte: the raw IP address in network byte order"], ["int", "int: the numeric scope_id for the address."]], "Throws": [["@B_java#net#UnknownHostException_E@", "if IP address is of illegal length."]], "SeeAlso": [], "Permissions": [], "Description": "Create an Inet6Address in the exact manner of @B_java#net#InetAddress#getByAddress_E@ except that the IPv6 scope_id is set to the given numeric value. The scope_id is not checked to determine if it corresponds to any interface on the system. See", "history": "added in API level 1", "FullName": "public static Inet6Address getByAddress (String host, byte[] addr, int scope_id)"}, "isMCSiteLocal()": {"Returns": [["boolean", "a boolean indicating if the address has is a multicast address of site-local scope, false if it is not of site-local scope or it is not a multicast address"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Utility routine to check if the multicast address has site scope.", "history": "Added in API level 1", "FullName": "public boolean isMCSiteLocal ()"}, "isLinkLocalAddress()": {"Returns": [["boolean", "a boolean indicating if the InetAddress is a link local address; or false if address is not a link local unicast address."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Utility routine to check if the InetAddress is an link local address.", "history": "Added in API level 1", "FullName": "public boolean isLinkLocalAddress ()"}, "getByAddress(java.lang.String,byte[],int)": {"Returns": [["@B_java#net#Inet6Address_E@", "an Inet6Address object created from the raw IP address."]], "Parameters": [["@B_java#lang#String_E@", "String: the specified host"], ["byte[]", "byte: the raw IP address in network byte order"], ["int", "int: the numeric scope_id for the address."]], "Throws": [["@B_java#net#UnknownHostException_E@", "if IP address is of illegal length."]], "SeeAlso": [], "Permissions": [], "Description": "Create an Inet6Address in the exact manner of @B_java#net#InetAddress#getByAddress_E@ except that the IPv6 scope_id is set to the given numeric value. The scope_id is not checked to determine if it corresponds to any interface on the system. See", "history": "Added in API level 1", "FullName": "public static Inet6Address getByAddress (String host, byte[] addr, int scope_id)"}, "isMCNodeLocal()": {"Returns": [["boolean", "a boolean indicating if the address has is a multicast address of node-local scope, false if it is not of node-local scope or it is not a multicast address"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Utility routine to check if the multicast address has node scope.", "history": "Added in API level 1", "FullName": "public boolean isMCNodeLocal ()"}, "hashCode()": {"Returns": [["int", "a hash code value for this IP address."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hashcode for this IP address.", "history": "Added in API level 1", "FullName": "public int hashCode ()"}}, "Inheritance": ["@B_java#net#InetAddress_E@"], "ClassName": "java.net.Inet6Address", "ClassDesc": "This class represents an Internet Protocol version 6 (IPv6) address. Defined by For methods that return a textual representation as output value, the full form is used. Inet6Address will return the full form because it is unambiguous when used in combination with other textual data. The textual representation of IPv6 addresses as described above can be extended to specify IPv6 scoped addresses. This extension to the basic addressing architecture is described in [draft-ietf-ipngwg-scoping-arch-04.txt]. Because link-local and site-local addresses are non-global, it is possible that different hosts may have the same destination address and may be reachable through different interfaces on the same originating system. In this case, the originating system is said to be connected to multiple zones of the same scope. In order to disambiguate which is the intended destination zone, it is possible to append a zone identifier (or The general format for specifying the The IPv6-address is a literal IPv6 address as described above. The Note also, that the numeric"}