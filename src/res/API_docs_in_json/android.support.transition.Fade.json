{"Functions": {"Fade()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a Fade transition that will fade targets in and out.", "history": "added in version 24.2.0", "FullName": "Fade ()"}, "Fade(int)": {"Returns": [], "Parameters": [["int", "int: The behavior of this transition, a combination of @B_android#support#transition#Fade#IN_E@ and @B_android#support#transition#Fade#OUT_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a Fade transition that will fade targets in and/or out, according to the value of fadingMode.", "history": "added in version 24.2.0", "FullName": "Fade (int fadingMode)"}}, "Inheritance": ["java.lang.Object", "@B_android#support#transition#Transition_E@", "@B_android#support#transition#Visibility_E@"], "ClassName": "android.support.transition.Fade", "ClassDesc": "This transition tracks changes to the visibility of target views in the start and end scenes and fades views in or out when they become visible or non-visible. Visibility is determined by both the https:##developer#android#com@B_android#view#View#setVisibility_E@ state of the view as well as whether it is parented in the current view hierarchy. The ability of this transition to fade out a particular view, and the way that that fading operation takes place, is based on the situation of the view in the view hierarchy. For example, if a view was simply removed from its parent, then the view will be added into a https:##developer#android#com@B_android#view#ViewGroupOverlay_E@ while fading. If a visible view is changed to be https:##developer#android#com@B_android#view#View#GONE_E@ or https:##developer#android#com@B_android#view#View#INVISIBLE_E@, then the visibility will be changed to https:##developer#android#com@B_android#view#View#VISIBLE_E@ for the duration of the animation. However, if a view is in a hierarchy which is also altering its visibility, the situation can be more complicated. In general, if a view that is no longer in the hierarchy in the end scene still has a parent (so its parent hierarchy was removed, but it was not removed from its parent), then it will be left alone to avoid side-effects from improperly removing it from its parent. The only exception to this is if the previous @B_android#support#transition#Scene_E@ was @B_android#support#transition#Scene#getSceneForLayout_E@, then it is considered safe to un-parent the starting scene view in order to fade it out. A Fade transition can be described in a resource file by using the tag fade, along with the standard attributes of Fade and @B_android#support#transition#Transition_E@."}