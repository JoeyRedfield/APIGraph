{"Functions": {"isChildSelectable(int,int)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public boolean isChildSelectable (int groupPosition, int childPosition)"}, "newChildView(boolean, android.view.ViewGroup)": {"Returns": [["@B_android#view#View_E@", "A new child View"]], "Parameters": [["boolean", "boolean: Whether the child is the last child within its group."], ["@B_android#view#ViewGroup_E@", "ViewGroup: The eventual parent of this new View."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Instantiates a new View for a child.", "history": "added in API level 1", "FullName": "public View newChildView (boolean isLastChild, ViewGroup parent)"}, "newGroupView(boolean, android.view.ViewGroup)": {"Returns": [["@B_android#view#View_E@", "A new group View"]], "Parameters": [["boolean", "boolean: Whether the group is currently expanded."], ["@B_android#view#ViewGroup_E@", "ViewGroup: The eventual parent of this new View."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Instantiates a new View for a group.", "history": "added in API level 1", "FullName": "public View newGroupView (boolean isExpanded, ViewGroup parent)"}, "newGroupView(boolean,android.view.ViewGroup)": {"Returns": [["@B_android#view#View_E@", "A new group View"]], "Parameters": [["boolean", "boolean: Whether the group is currently expanded."], ["@B_android#view#ViewGroup_E@", "ViewGroup: The eventual parent of this new View."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Instantiates a new View for a group.", "history": "Added in API level 1", "FullName": "public View newGroupView (boolean isExpanded, ViewGroup parent)"}, "getChildrenCount(int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public int getChildrenCount (int groupPosition)"}, "isChildSelectable(int, int)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public boolean isChildSelectable (int groupPosition, int childPosition)"}, "getChildId(int, int)": {"Returns": [["long", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public long getChildId (int groupPosition, int childPosition)"}, "SimpleExpandableListAdapter(android.content.Context,java.util.List<?extendsjava.util.Map<java.lang.String,?>>,int,int,java.lang.String[],int[],java.util.List<?extendsjava.util.List<?extendsjava.util.Map<java.lang.String,?>>>,int,java.lang.String[],int[])": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The context where the @B_android#widget#ExpandableListView_E@ associated with this @B_android#widget#SimpleExpandableListAdapter_E@ is running"], ["@B_java#util#List_E@", "List: A List of Maps. Each entry in the List corresponds to one group in the list. The Maps contain the data for each group, and should include all the entries specified in \"groupFrom\""], ["int", "int: resource identifier of a view layout that defines the views for an expanded group. The layout file should include at least those named views defined in \"groupTo\""], ["int", "int: resource identifier of a view layout that defines the views for a collapsed group. The layout file should include at least those named views defined in \"groupTo\""], ["@B_java#lang#String_E@", "String: A list of keys that will be fetched from the Map associated with each group."], ["int[]", "int: The group views that should display column in the \"groupFrom\" parameter. These should all be TextViews. The first N views in this list are given the values of the first N columns in the groupFrom parameter."], ["@B_java#util#List_E@", "List: A List of List of Maps. Each entry in the outer List corresponds to a group (index by group position), each entry in the inner List corresponds to a child within the group (index by child position), and the Map corresponds to the data for a child (index by values in the childFrom array). The Map contains the data for each child, and should include all the entries specified in \"childFrom\""], ["int", "int: resource identifier of a view layout that defines the views for a child. The layout file should include at least those named views defined in \"childTo\""], ["@B_java#lang#String_E@", "String: A list of keys that will be fetched from the Map associated with each child."], ["int[]", "int: The child views that should display column in the \"childFrom\" parameter. These should all be TextViews. The first N views in this list are given the values of the first N columns in the childFrom parameter."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor", "history": "Added in API level 1", "FullName": "public SimpleExpandableListAdapter (Context context, List<? extends Map<String, ?>> groupData, int expandedGroupLayout, int collapsedGroupLayout, String[] groupFrom, int[] groupTo, List<? extends List<? extends Map<String, ?>>> childData, int childLayout, String[] childFrom, int[] childTo)"}, "getGroupCount()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public int getGroupCount ()"}, "SimpleExpandableListAdapter(android.content.Context,java.util.List<?extendsjava.util.Map<java.lang.String,?>>,int,int,java.lang.String[],int[],java.util.List<?extendsjava.util.List<?extendsjava.util.Map<java.lang.String,?>>>,int,int,java.lang.String[],int[])": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The context where the @B_android#widget#ExpandableListView_E@ associated with this @B_android#widget#SimpleExpandableListAdapter_E@ is running"], ["@B_java#util#List_E@", "List: A List of Maps. Each entry in the List corresponds to one group in the list. The Maps contain the data for each group, and should include all the entries specified in \"groupFrom\""], ["int", "int: resource identifier of a view layout that defines the views for an expanded group. The layout file should include at least those named views defined in \"groupTo\""], ["int", "int: resource identifier of a view layout that defines the views for a collapsed group. The layout file should include at least those named views defined in \"groupTo\""], ["@B_java#lang#String_E@", "String: A list of keys that will be fetched from the Map associated with each group."], ["int[]", "int: The group views that should display column in the \"groupFrom\" parameter. These should all be TextViews. The first N views in this list are given the values of the first N columns in the groupFrom parameter."], ["@B_java#util#List_E@", "List: A List of List of Maps. Each entry in the outer List corresponds to a group (index by group position), each entry in the inner List corresponds to a child within the group (index by child position), and the Map corresponds to the data for a child (index by values in the childFrom array). The Map contains the data for each child, and should include all the entries specified in \"childFrom\""], ["int", "int: resource identifier of a view layout that defines the views for a child (unless it is the last child within a group, in which case the lastChildLayout is used). The layout file should include at least those named views defined in \"childTo\""], ["int", "int: resource identifier of a view layout that defines the views for the last child within each group. The layout file should include at least those named views defined in \"childTo\""], ["@B_java#lang#String_E@", "String: A list of keys that will be fetched from the Map associated with each child."], ["int[]", "int: The child views that should display column in the \"childFrom\" parameter. These should all be TextViews. The first N views in this list are given the values of the first N columns in the childFrom parameter."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor", "history": "Added in API level 1", "FullName": "public SimpleExpandableListAdapter (Context context, List<? extends Map<String, ?>> groupData, int expandedGroupLayout, int collapsedGroupLayout, String[] groupFrom, int[] groupTo, List<? extends List<? extends Map<String, ?>>> childData, int childLayout, int lastChildLayout, String[] childFrom, int[] childTo)"}, "getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)": {"Returns": [["@B_android#view#View_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["boolean", "boolean no parameter comment"], ["@B_android#view#View_E@", "View no parameter comment"], ["@B_android#view#ViewGroup_E@", "ViewGroup no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public View getChildView (int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent)"}, "getGroupView(int,boolean,android.view.View,android.view.ViewGroup)": {"Returns": [["@B_android#view#View_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["boolean", "boolean no parameter comment"], ["@B_android#view#View_E@", "View no parameter comment"], ["@B_android#view#ViewGroup_E@", "ViewGroup no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public View getGroupView (int groupPosition, boolean isExpanded, View convertView, ViewGroup parent)"}, "getGroupId(int)": {"Returns": [["long", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public long getGroupId (int groupPosition)"}, "getGroup(int)": {"Returns": [["@B_java#lang#Object_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public Object getGroup (int groupPosition)"}, "getChild(int,int)": {"Returns": [["@B_java#lang#Object_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public Object getChild (int groupPosition, int childPosition)"}, "getChild(int, int)": {"Returns": [["@B_java#lang#Object_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public Object getChild (int groupPosition, int childPosition)"}, "SimpleExpandableListAdapter(android.content.Context,java.util.List<?extendsjava.util.Map<java.lang.String,?>>,int,java.lang.String[],int[],java.util.List<?extendsjava.util.List<?extendsjava.util.Map<java.lang.String,?>>>,int,java.lang.String[],int[])": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The context where the @B_android#widget#ExpandableListView_E@ associated with this @B_android#widget#SimpleExpandableListAdapter_E@ is running"], ["@B_java#util#List_E@", "List: A List of Maps. Each entry in the List corresponds to one group in the list. The Maps contain the data for each group, and should include all the entries specified in \"groupFrom\""], ["int", "int: resource identifier of a view layout that defines the views for a group. The layout file should include at least those named views defined in \"groupTo\""], ["@B_java#lang#String_E@", "String: A list of keys that will be fetched from the Map associated with each group."], ["int[]", "int: The group views that should display column in the \"groupFrom\" parameter. These should all be TextViews. The first N views in this list are given the values of the first N columns in the groupFrom parameter."], ["@B_java#util#List_E@", "List: A List of List of Maps. Each entry in the outer List corresponds to a group (index by group position), each entry in the inner List corresponds to a child within the group (index by child position), and the Map corresponds to the data for a child (index by values in the childFrom array). The Map contains the data for each child, and should include all the entries specified in \"childFrom\""], ["int", "int: resource identifier of a view layout that defines the views for a child. The layout file should include at least those named views defined in \"childTo\""], ["@B_java#lang#String_E@", "String: A list of keys that will be fetched from the Map associated with each child."], ["int[]", "int: The child views that should display column in the \"childFrom\" parameter. These should all be TextViews. The first N views in this list are given the values of the first N columns in the childFrom parameter."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor", "history": "Added in API level 1", "FullName": "public SimpleExpandableListAdapter (Context context, List<? extends Map<String, ?>> groupData, int groupLayout, String[] groupFrom, int[] groupTo, List<? extends List<? extends Map<String, ?>>> childData, int childLayout, String[] childFrom, int[] childTo)"}, "newChildView(boolean,android.view.ViewGroup)": {"Returns": [["@B_android#view#View_E@", "A new child View"]], "Parameters": [["boolean", "boolean: Whether the child is the last child within its group."], ["@B_android#view#ViewGroup_E@", "ViewGroup: The eventual parent of this new View."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Instantiates a new View for a child.", "history": "Added in API level 1", "FullName": "public View newChildView (boolean isLastChild, ViewGroup parent)"}, "hasStableIds()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public boolean hasStableIds ()"}, "getChildId(int,int)": {"Returns": [["long", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public long getChildId (int groupPosition, int childPosition)"}}, "Inheritance": ["@B_android#widget#BaseExpandableListAdapter_E@"], "ClassName": "android.widget.SimpleExpandableListAdapter", "ClassDesc": "An easy adapter to map static data to group and child views defined in an XML file. You can separately specify the data backing the group as a List of Maps. Each entry in the ArrayList corresponds to one group in the expandable list. The Maps contain the data for each row. You also specify an XML file that defines the views used to display a group, and a mapping from keys in the Map to specific views. This process is similar for a child, except it is one-level deeper so the data backing is specified as a List"}