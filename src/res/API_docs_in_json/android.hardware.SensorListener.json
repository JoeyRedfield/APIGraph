{"Functions": {"onSensorChanged(int, float[])": {"Returns": [], "Parameters": [["int", "int: The ID of the sensor being monitored"], ["float[]", "float: The new values for the sensor."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when sensor values have changed. The length and contents of the values array vary depending on which sensor is being monitored. See @B_android#hardware#SensorManager_E@ for details on possible sensor types. The X axis refers to the screen's horizontal axis (the small edge in portrait mode, the long edge in landscape mode) and points to the right. The Y axis refers to the screen's vertical axis and points towards the top of the screen (the origin is in the lower-left corner). The Z axis points toward the sky when the device is lying on its back on a table. @B_android#hardware#SensorManager#SENSOR_ORIENTATION_E@, @B_android#hardware#SensorManager#SENSOR_ORIENTATION_RAW_E@: All values are angles in degrees. values[0]: Azimuth, rotation around the Z axis (0<=azimuth<360). 0 = North, 90 = East, 180 = South, 270 = West values[1]: Pitch, rotation around X axis (-180<=pitch<=180), with positive values when the z-axis moves toward the y-axis. values[2]: Roll, rotation around Y axis (-90<=roll<=90), with positive values when the z-axis moves toward the x-axis. Note that this definition of yaw, pitch and roll is different from the traditional definition used in aviation where the X axis is along the long side of the plane (tail to nose). @B_android#hardware#SensorManager#SENSOR_ACCELEROMETER_E@: All values are in SI units (m/s^2) and measure contact forces. values[0]: force applied by the device on the x-axis values[1]: force applied by the device on the y-axis values[2]: force applied by the device on the z-axis When the device is pushed on its left side toward the right, the x acceleration value is negative (the device applies a reaction force to the push toward the left) When the device lies flat on a table, the acceleration value is @B_android#hardware#SensorManager#STANDARD_GRAVITY_E@, which correspond to the force the device applies on the table in reaction to gravity. @B_android#hardware#SensorManager#SENSOR_MAGNETIC_FIELD_E@: All values are in micro-Tesla (uT) and measure the ambient magnetic field in the X, Y and -Z axis.", "history": "added in API level 1", "FullName": "public abstract void onSensorChanged (int sensor, float[] values)"}, "onSensorChanged(int,float[])": {"Returns": [], "Parameters": [["int", "int: The ID of the sensor being monitored"], ["float[]", "float: The new values for the sensor."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when sensor values have changed. The length and contents of the values array vary depending on which sensor is being monitored. See @B_android#hardware#SensorManager_E@ for details on possible sensor types. The X axis refers to the screen's horizontal axis (the small edge in portrait mode, the long edge in landscape mode) and points to the right. The Y axis refers to the screen's vertical axis and points towards the top of the screen (the origin is in the lower-left corner). The Z axis points toward the sky when the device is lying on its back on a table. @B_android#hardware#SensorManager#SENSOR_ORIENTATION_E@, @B_android#hardware#SensorManager#SENSOR_ORIENTATION_RAW_E@: All values are angles in degrees. values[0]: Azimuth, rotation around the Z axis (0<=azimuth<360). 0 = North, 90 = East, 180 = South, 270 = West values[1]: Pitch, rotation around X axis (-180<=pitch<=180), with positive values when the z-axis moves toward the y-axis. values[2]: Roll, rotation around Y axis (-90<=roll<=90), with positive values when the z-axis moves toward the x-axis. Note that this definition of yaw, pitch and roll is different from the traditional definition used in aviation where the X axis is along the long side of the plane (tail to nose). @B_android#hardware#SensorManager#SENSOR_ACCELEROMETER_E@: All values are in SI units (m/s^2) and measure contact forces. values[0]: force applied by the device on the x-axis values[1]: force applied by the device on the y-axis values[2]: force applied by the device on the z-axis When the device is pushed on its left side toward the right, the x acceleration value is negative (the device applies a reaction force to the push toward the left) When the device lies flat on a table, the acceleration value is @B_android#hardware#SensorManager#STANDARD_GRAVITY_E@, which correspond to the force the device applies on the table in reaction to gravity. @B_android#hardware#SensorManager#SENSOR_MAGNETIC_FIELD_E@: All values are in micro-Tesla (uT) and measure the ambient magnetic field in the X, Y and -Z axis.", "history": "Added in API level 1 Deprecated in API level 3", "FullName": "public abstract void onSensorChanged (int sensor, float[] values)"}, "onAccuracyChanged(int, int)": {"Returns": [], "Parameters": [["int", "int: The ID of the sensor being monitored"], ["int", "int: The new accuracy of this sensor."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the accuracy of a sensor has changed. See @B_android#hardware#SensorManager_E@ for details.", "history": "added in API level 1", "FullName": "public abstract void onAccuracyChanged (int sensor, int accuracy)"}, "onAccuracyChanged(int,int)": {"Returns": [], "Parameters": [["int", "int: The ID of the sensor being monitored"], ["int", "int: The new accuracy of this sensor."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the accuracy of a sensor has changed. See @B_android#hardware#SensorManager_E@ for details.", "history": "Added in API level 1 Deprecated in API level 3", "FullName": "public abstract void onAccuracyChanged (int sensor, int accuracy)"}}, "Inheritance": [], "ClassName": "android.hardware.SensorListener", "ClassDesc": "Use @B_android#hardware#SensorEventListener_E@ instead. Used for receiving notifications from the SensorManager when sensor values have changed."}