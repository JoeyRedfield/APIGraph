{"Functions": {"read(java.nio.ByteBuffer[], int, int)": {"Returns": [["long", "The number of bytes read, possibly zero, or -1 if the channel has reached end-of-stream"]], "Parameters": [["@B_java#nio#ByteBuffer_E@", "ByteBuffer: The buffers into which bytes are to be transferred"], ["int", "int: The offset within the buffer array of the first buffer into which bytes are to be transferred; must be non-negative and no larger than dsts.length"], ["int", "int: The maximum number of buffers to be accessed; must be non-negative and no larger than dsts.length - offset"]], "Throws": [["@B_java#lang#IndexOutOfBoundsException_E@", "If the preconditions on the offset and length parameters do not hold"], ["@B_java#nio#channels#NonReadableChannelException_E@", "If this channel was not opened for reading"], ["@B_java#nio#channels#ClosedChannelException_E@", "If this channel is closed"], ["@B_java#nio#channels#AsynchronousCloseException_E@", "If another thread closes this channel while the read operation is in progress"], ["@B_java#nio#channels#ClosedByInterruptException_E@", "If another thread interrupts the current thread while the read operation is in progress, thereby closing the channel and setting the current thread's interrupt status"], ["@B_java#io#IOException_E@", "If some other I/O error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Reads a sequence of bytes from this channel into a subsequence of the given buffers. An invocation of this method attempts to read up to Suppose that a byte sequence of length This method may be invoked at any time. If another thread has already initiated a read operation upon this channel, however, then an invocation of this method will block until the first operation is complete.", "history": "added in API level 1", "FullName": "public abstract long read (ByteBuffer[] dsts, int offset, int length)"}, "read(java.nio.ByteBuffer[])": {"Returns": [["long", "The number of bytes read, possibly zero, or -1 if the channel has reached end-of-stream"]], "Parameters": [["@B_java#nio#ByteBuffer_E@", "ByteBuffer: The buffers into which bytes are to be transferred"]], "Throws": [["@B_java#nio#channels#NonReadableChannelException_E@", "If this channel was not opened for reading"], ["@B_java#nio#channels#ClosedChannelException_E@", "If this channel is closed"], ["@B_java#nio#channels#AsynchronousCloseException_E@", "If another thread closes this channel while the read operation is in progress"], ["@B_java#nio#channels#ClosedByInterruptException_E@", "If another thread interrupts the current thread while the read operation is in progress, thereby closing the channel and setting the current thread's interrupt status"], ["@B_java#io#IOException_E@", "If some other I/O error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Reads a sequence of bytes from this channel into the given buffers. An invocation of this method of the form", "history": "Added in API level 1", "FullName": "public abstract long read (ByteBuffer[] dsts)"}, "read(java.nio.ByteBuffer[],int,int)": {"Returns": [["long", "The number of bytes read, possibly zero, or -1 if the channel has reached end-of-stream"]], "Parameters": [["@B_java#nio#ByteBuffer_E@", "ByteBuffer: The buffers into which bytes are to be transferred"], ["int", "int: The offset within the buffer array of the first buffer into which bytes are to be transferred; must be non-negative and no larger than dsts.length"], ["int", "int: The maximum number of buffers to be accessed; must be non-negative and no larger than dsts.length - offset"]], "Throws": [["@B_java#lang#IndexOutOfBoundsException_E@", "If the preconditions on the offset and length parameters do not hold"], ["@B_java#nio#channels#NonReadableChannelException_E@", "If this channel was not opened for reading"], ["@B_java#nio#channels#ClosedChannelException_E@", "If this channel is closed"], ["@B_java#nio#channels#AsynchronousCloseException_E@", "If another thread closes this channel while the read operation is in progress"], ["@B_java#nio#channels#ClosedByInterruptException_E@", "If another thread interrupts the current thread while the read operation is in progress, thereby closing the channel and setting the current thread's interrupt status"], ["@B_java#io#IOException_E@", "If some other I/O error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Reads a sequence of bytes from this channel into a subsequence of the given buffers. An invocation of this method attempts to read up to Suppose that a byte sequence of length This method may be invoked at any time. If another thread has already initiated a read operation upon this channel, however, then an invocation of this method will block until the first operation is complete.", "history": "Added in API level 1", "FullName": "public abstract long read (ByteBuffer[] dsts, int offset, int length)"}}, "Inheritance": [], "ClassName": "java.nio.channels.ScatteringByteChannel", "ClassDesc": "A channel that can read bytes into a sequence of buffers. A @B_java#nio#channels#GatheringByteChannel_E@ interface."}