{"Functions": {"engineGenerateKey()": {"Returns": [["@B_javax#crypto#SecretKey_E@", "the new key"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Generates a secret key.", "history": "Added in API level 1", "FullName": "protected abstract SecretKey engineGenerateKey ()"}, "engineInit(int,java.security.SecureRandom)": {"Returns": [], "Parameters": [["int", "int: the keysize. This is an algorithm-specific metric, specified in number of bits."], ["@B_java#security#SecureRandom_E@", "SecureRandom: the source of randomness for this key generator"]], "Throws": [["@B_java#security#InvalidParameterException_E@", "if the keysize is wrong or not supported."]], "SeeAlso": [], "Permissions": [], "Description": "Initializes this key generator for a certain keysize, using the given source of randomness.", "history": "Added in API level 1", "FullName": "protected abstract void engineInit (int keysize, SecureRandom random)"}, "engineInit(int, java.security.SecureRandom)": {"Returns": [], "Parameters": [["int", "int: the keysize. This is an algorithm-specific metric, specified in number of bits."], ["@B_java#security#SecureRandom_E@", "SecureRandom: the source of randomness for this key generator"]], "Throws": [["@B_java#security#InvalidParameterException_E@", "if the keysize is wrong or not supported."]], "SeeAlso": [], "Permissions": [], "Description": "Initializes this key generator for a certain keysize, using the given source of randomness.", "history": "added in API level 1", "FullName": "protected abstract void engineInit (int keysize, SecureRandom random)"}, "engineInit(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)": {"Returns": [], "Parameters": [["@B_java#security#spec#AlgorithmParameterSpec_E@", "AlgorithmParameterSpec: the key generation parameters"], ["@B_java#security#SecureRandom_E@", "SecureRandom: the source of randomness for this key generator"]], "Throws": [["@B_java#security#InvalidAlgorithmParameterException_E@", "if params is inappropriate for this key generator"]], "SeeAlso": [], "Permissions": [], "Description": "Initializes the key generator with the specified parameter set and a user-provided source of randomness.", "history": "Added in API level 1", "FullName": "protected abstract void engineInit (AlgorithmParameterSpec params, SecureRandom random)"}, "KeyGeneratorSpi()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public KeyGeneratorSpi ()"}, "engineInit(java.security.SecureRandom)": {"Returns": [], "Parameters": [["@B_java#security#SecureRandom_E@", "SecureRandom: the source of randomness for this generator"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Initializes the key generator.", "history": "Added in API level 1", "FullName": "protected abstract void engineInit (SecureRandom random)"}}, "Inheritance": [], "ClassName": "javax.crypto.KeyGeneratorSpi", "ClassDesc": "This class defines the KeyGenerator class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a key generator for a particular algorithm."}