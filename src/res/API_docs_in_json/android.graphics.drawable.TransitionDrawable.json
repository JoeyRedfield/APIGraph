{"Functions": {"draw(android.graphics.Canvas)": {"Returns": [], "Parameters": [["@B_android#graphics#Canvas_E@", "Canvas: The canvas to draw into This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Draw in its bounds (set via setBounds) respecting optional effects such as alpha (set via setAlpha) and color filter (set via setColorFilter).", "history": "Added in API level 1", "FullName": "public void draw (Canvas canvas)"}, "resetTransition()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Show only the first layer.", "history": "Added in API level 1", "FullName": "public void resetTransition ()"}, "setCrossFadeEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: True to enable cross fading, false otherwise."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enables or disables the cross fade of the drawables. When cross fade is disabled, the first drawable is always drawn opaque. With cross fade enabled, the first drawable is drawn with the opposite alpha of the second drawable. Cross fade is disabled by default.", "history": "Added in API level 1", "FullName": "public void setCrossFadeEnabled (boolean enabled)"}, "reverseTransition(int)": {"Returns": [], "Parameters": [["int", "int: The duration to use if no transition is running."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reverses the transition, picking up where the transition currently is. If the transition is not currently running, this will start the transition with the specified duration. If the transition is already running, the last known duration will be used.", "history": "Added in API level 1", "FullName": "public void reverseTransition (int duration)"}, "startTransition(int)": {"Returns": [], "Parameters": [["int", "int: The length of the transition in milliseconds"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Begin the second layer on top of the first layer.", "history": "Added in API level 1", "FullName": "public void startTransition (int durationMillis)"}, "TransitionDrawable(android.graphics.drawable.Drawable[])": {"Returns": [], "Parameters": [["@B_android#graphics#drawable#Drawable_E@", "Drawable no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new transition drawable with the specified list of layers. At least 2 layers are required for this drawable to work properly.", "history": "Added in API level 3", "FullName": "public TransitionDrawable (Drawable[] layers)"}, "isCrossFadeEnabled()": {"Returns": [["boolean", "True if cross fading is enabled, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether the cross fade is enabled for this transition.", "history": "Added in API level 1", "FullName": "public boolean isCrossFadeEnabled ()"}}, "Inheritance": ["@B_android#graphics#drawable#Drawable_E@", "@B_android#graphics#drawable#LayerDrawable_E@"], "ClassName": "android.graphics.drawable.TransitionDrawable", "ClassDesc": "An extension of LayerDrawables that is intended to cross-fade between the first and second layer. To start the transition, call @B_android#graphics#drawable#TransitionDrawable#startTransition_E@. To display just the first layer, call @B_android#graphics#drawable#TransitionDrawable#resetTransition_E@. It can be defined in an XML file with the <transition> element. Each Drawable in the transition is defined in a nested <item>. For more information, see the guide to"}