{"Functions": {"getSnapshotMetadata()": {"Returns": [["", "The metadata for the snapshot that was committed. Note that the original @B_com#google#android#gms#games#snapshot#Snapshot_E@ may no longer be used to write data."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public abstract SnapshotMetadata getSnapshotMetadata ()"}}, "Inheritance": [], "ClassName": "com.google.android.gms.games.snapshot.Snapshots.CommitSnapshotResult", "ClassDesc": "Result delivered when a snapshot has been committed. At this point, the snapshot's data may no longer be modified without being re-opened first. Possible status codes include: @B_com#google#android#gms#games#GamesStatusCodes#STATUS_OK_E@ if data was successfully committed. Note that a conflict may still occur later if the data uploads at a later time. @B_com#google#android#gms#games#GamesStatusCodes#STATUS_SNAPSHOT_NOT_FOUND_E@ if the snapshot could not be found on the server. @B_com#google#android#gms#games#GamesStatusCodes#STATUS_SNAPSHOT_COMMIT_FAILED_E@ if the commit attempt failed. @B_com#google#android#gms#games#GamesStatusCodes#STATUS_SNAPSHOT_CONFLICT_E@ if a conflict occurred while committing the update. @B_com#google#android#gms#games#GamesStatusCodes#STATUS_CLIENT_RECONNECT_REQUIRED_E@ if the client needs to reconnect to the service to perform this operation. @B_com#google#android#gms#games#GamesStatusCodes#STATUS_LICENSE_CHECK_FAILED_E@ if the game is not licensed to the user. @B_com#google#android#gms#games#GamesStatusCodes#STATUS_INTERNAL_ERROR_E@ if an unexpected error occurred in the service."}