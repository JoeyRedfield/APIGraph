{"Functions": {"getOutputStream()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an @B_java#io#OutputStream_E@ that allows you to write new contents. This method may only be used with files opened with @B_com#google#android#gms#drive#DriveFile#MODE_WRITE_ONLY_E@; to read/write from a file opened with @B_com#google#android#gms#drive#DriveFile#MODE_READ_WRITE_E@, use the file descriptor returned by @B_com#google#android#gms#drive#DriveContents#getParcelFileDescriptor_E@. This method may only be called once per @B_com#google#android#gms#drive#DriveContents_E@ instance.", "history": "", "FullName": "public abstract OutputStream getOutputStream ()"}, "commit(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.drive.MetadataChangeSet)": {"Returns": [["", "A @B_com#google#android#gms#common#api#PendingResult_E@ which can be used to verify the success of the operation."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call. The client must be connected before invoking this method."], ["@B_com#google#android#gms#drive#MetadataChangeSet_E@", "The set of changes that will be applied to the Metadata of the file associated to this contents instance. Should only include the specific fields that should be updated. Can be null if no metadata changes should be applied with this commit."]], "Throws": [["IllegalStateException", "If one of the following is true: This DriveContents was opened in MODE_READ_ONLY. This DriveContents is not associated to a file (obtained through newDriveContents(GoogleApiClient)))."]], "SeeAlso": [], "Permissions": [], "Description": "Commits this contents and updates the metadata (if provided) of the file associated to this @B_com#google#android#gms#drive#DriveContents_E@ instance. This method should only be used on @B_com#google#android#gms#drive#DriveContents_E@ that are already associated to a particular file (obtained through @B_com#google#android#gms#drive#DriveFile#open_E@). This method behaves like @B_com#google#android#gms#drive#DriveContents#commit_E@ with null @B_com#google#android#gms#drive#ExecutionOptions_E@, which means @B_com#google#android#gms#drive#ExecutionOptions#CONFLICT_STRATEGY_OVERWRITE_REMOTE_E@ strategy, no completion event requested and no operation tag. Use the advanced version of @B_com#google#android#gms#drive#DriveContents#commit_E@ if you'd like to specify different @B_com#google#android#gms#drive#ExecutionOptions_E@. After this method returns, this instance will be closed and will no longer be usable.", "history": "", "FullName": "public abstract PendingResult<Status> commit (GoogleApiClient apiClient, MetadataChangeSet changeSet)"}, "getDriveId()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the @B_com#google#android#gms#drive#DriveId_E@ for the file that owns these contents. Will be null if this instance corresponds to new contents (obtained through @B_com#google#android#gms#drive#DriveApi#newDriveContents_E@}.", "history": "", "FullName": "public abstract DriveId getDriveId ()"}, "getMode()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the mode the contents are opened in.", "history": "", "FullName": "public abstract int getMode ()"}, "reopenForWrite(com.google.android.gms.common.api.GoogleApiClient)": {"Returns": [["", "A @B_com#google#android#gms#common#api#PendingResult_E@ which can be used to verify the success of the operation and retrieve the @B_com#google#android#gms#drive#DriveFile#MODE_WRITE_ONLY_E@ Contents when they are ready."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Closes this contents and returns a new contents opened in @B_com#google#android#gms#drive#DriveFile#MODE_WRITE_ONLY_E@. The returned @B_com#google#android#gms#drive#DriveContents_E@ are usable for conflict detection. This method can only be called on @B_com#google#android#gms#drive#DriveFile#MODE_READ_ONLY_E@ contents. Calling it on @B_com#google#android#gms#drive#DriveFile#MODE_WRITE_ONLY_E@ or @B_com#google#android#gms#drive#DriveFile#MODE_READ_WRITE_E@ contents, or on closed contents throws an @B_java#lang#IllegalStateException_E@. This method is useful for conflict detection, and often used in conjunction with @B_com#google#android#gms#drive#DriveContents#commit_E@, however it can also be used to open contents in @B_com#google#android#gms#drive#DriveFile#MODE_WRITE_ONLY_E@ from an existing instance of @B_com#google#android#gms#drive#DriveFile#MODE_READ_ONLY_E@ contents. After this method returns, this instance will be closed and will no longer be usable.", "history": "", "FullName": "public abstract PendingResult<DriveApi.DriveContentsResult> reopenForWrite (GoogleApiClient apiClient)"}, "getParcelFileDescriptor()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_android#os#ParcelFileDescriptor_E@ that points to the Drive file's contents. If this file was opened with @B_com#google#android#gms#drive#DriveFile#MODE_READ_ONLY_E@ or @B_com#google#android#gms#drive#DriveFile#MODE_READ_WRITE_E@, the file referenced by the returned file descriptor will contain the most recent version of the file. Otherwise, the returned file descriptor will point to an empty file.", "history": "", "FullName": "public abstract ParcelFileDescriptor getParcelFileDescriptor ()"}, "commit(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.drive.MetadataChangeSet, com.google.android.gms.drive.ExecutionOptions)": {"Returns": [["", "A @B_com#google#android#gms#common#api#PendingResult_E@ which can be used to verify the success of the operation."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call. The client must be connected before invoking this method."], ["@B_com#google#android#gms#drive#MetadataChangeSet_E@", "The set of changes that will be applied to the Metadata of the file associated to this contents instance. Should only include the specific fields that should be updated. Can be null if no metadata changes should be applied with this commit."], ["@B_com#google#android#gms#drive#ExecutionOptions_E@", "Contains any extra settings for this commit action, such as the strategy for handling conflicts or whether the client should be notified of failures when applying this operation on the server. See @B_com#google#android#gms#drive#ExecutionOptions_E@ for more info. When null is provided, this method will use default @B_com#google#android#gms#drive#ExecutionOptions_E@, that is @B_com#google#android#gms#drive#ExecutionOptions#CONFLICT_STRATEGY_OVERWRITE_REMOTE_E@ strategy, no completion event requested and no operation tag."]], "Throws": [["IllegalStateException", "If one of the following is true: This DriveContents was opened in MODE_READ_ONLY. This DriveContents is not associated to a file (obtained through newDriveContents(GoogleApiClient))). The specified ExecutionOptions is incompatible with this DriveContents."]], "SeeAlso": [], "Permissions": [], "Description": "Advanced version of commit which commits this contents and updates the metadata (if provided) of the file associated to this @B_com#google#android#gms#drive#DriveContents_E@ instance and allows the client to specify a conflict resolution strategy or request completion notifications via the executionOptions parameter. A file conflict happens when the written contents are not applied on top of the file revision that Drive originally provided when the contents were read by the application. A conflict could happen when an application reads contents at revision X, then writes revision X+1 and by the time X+1 is committed (or uploaded to the server), the file version is not X anymore (another app or a remote change already modified the file to revision X'). This method should only be used on @B_com#google#android#gms#drive#DriveContents_E@ that are already associated to a particular file. See @B_com#google#android#gms#drive#ExecutionOptions#Builder#setConflictStrategy_E@ for details on using each conflict strategy. After this method returns, this instance will be closed and will no longer be usable.", "history": "", "FullName": "public abstract PendingResult<Status> commit (GoogleApiClient apiClient, MetadataChangeSet changeSet, ExecutionOptions executionOptions)"}, "getInputStream()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an @B_java#io#InputStream_E@ that allows you to read this file's contents. This method may only be used with files opened with @B_com#google#android#gms#drive#DriveFile#MODE_READ_ONLY_E@; to read/write from a file opened with @B_com#google#android#gms#drive#DriveFile#MODE_READ_WRITE_E@, use the file descriptor returned by @B_com#google#android#gms#drive#DriveContents#getParcelFileDescriptor_E@. This method may only be called once per @B_com#google#android#gms#drive#DriveContents_E@ instance.", "history": "", "FullName": "public abstract InputStream getInputStream ()"}, "discard(com.google.android.gms.common.api.GoogleApiClient)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call. The client must be connected before invoking this method."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Discards this contents and any changes that were performed. Calling this method will not save any changes performed through this object. After this method returns, this instance will be closed and will no longer be usable.", "history": "", "FullName": "public abstract void discard (GoogleApiClient apiClient)"}}, "Inheritance": [], "ClassName": "com.google.android.gms.drive.DriveContents", "ClassDesc": "A reference to a Drive file's contents. There are two types of @B_com#google#android#gms#drive#DriveContents_E@: Contents already associated to an existing @B_com#google#android#gms#drive#DriveFile_E@. This type is obtained through @B_com#google#android#gms#drive#DriveFile#open_E@. Contents not associated to any file and used only when creating a new file. This type is obtained through @B_com#google#android#gms#drive#DriveApi#newDriveContents_E@. Any changes made to the @B_com#google#android#gms#drive#DriveContents_E@ through either their @B_android#os#ParcelFileDescriptor_E@ or @B_java#io#OutputStream_E@ will not be visible until either @B_com#google#android#gms#drive#DriveContents#commit_E@ is executed (for existing contents already associated to a @B_com#google#android#gms#drive#DriveFile_E@), or a new file is created using this contents (through @B_com#google#android#gms#drive#DriveFolder#createFile_E@ or @B_com#google#android#gms#drive#CreateFileActivityBuilder_E@, for new contents). In both cases, the @B_com#google#android#gms#drive#DriveContents#discard_E@ method can be used to discard any changes to any kind of @B_com#google#android#gms#drive#DriveContents_E@, so those changes will never be applied to a @B_com#google#android#gms#drive#DriveFile_E@ or persisted in Drive. Once this @B_com#google#android#gms#drive#DriveContents_E@ instance has been committed, used for creation, or discarded, it becomes closed and any subsequent method call will throw an @B_java#lang#IllegalStateException_E@."}