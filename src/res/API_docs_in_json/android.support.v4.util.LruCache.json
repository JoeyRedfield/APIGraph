{"Functions": {"remove(K)": {"Returns": [["V", "the previous value mapped by key."]], "Parameters": [["K", "K no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes the entry for key if it exists.", "history": "added in version 22.0.0", "FullName": "V remove (K key)"}, "evictionCount()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of values that have been evicted.", "history": "added in version 22.0.0", "FullName": "int evictionCount ()"}, "size()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "For caches that do not override @B_android#support#v4#util#LruCache#sizeOf_E@, this returns the number of entries in the cache. For all other caches, this returns the sum of the sizes of the entries in this cache.", "history": "added in version 22.0.0", "FullName": "int size ()"}, "LruCache(int)": {"Returns": [], "Parameters": [["int", "int: for caches that do not override @B_android#support#v4#util#LruCache#sizeOf_E@, this is the maximum number of entries in the cache. For all other caches, this is the maximum sum of the sizes of the entries in this cache."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "LruCache (int maxSize)"}, "sizeOf(K, V)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["K", "K no parameter comment"], ["V", "V no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the size of the entry for key and value in user-defined units. The default implementation returns 1 so that size is the number of entries and max size is the maximum number of entries. An entry's size must not change while it is in the cache.", "history": "added in version 22.0.0", "FullName": "int sizeOf (K key, V value)"}, "get(K)": {"Returns": [["V", "no returns description in source"]], "Parameters": [["K", "K no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value for key if it exists in the cache or can be created by #create. If a value was returned, it is moved to the head of the queue. This returns null if a value is not cached and cannot be created.", "history": "added in version 22.0.0", "FullName": "V get (K key)"}, "resize(int)": {"Returns": [], "Parameters": [["int", "int: The new maximum size."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the size of the cache.", "history": "added in version 22.0.0", "FullName": "void resize (int maxSize)"}, "putCount()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of times @B_android#support#v4#util#LruCache#put_E@ was called.", "history": "added in version 22.0.0", "FullName": "int putCount ()"}, "missCount()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of times @B_android#support#v4#util#LruCache#get_E@ returned null or required a new value to be created.", "history": "added in version 22.0.0", "FullName": "int missCount ()"}, "put(K, V)": {"Returns": [["V", "the previous value mapped by key."]], "Parameters": [["K", "K no parameter comment"], ["V", "V no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Caches value for key. The value is moved to the head of the queue.", "history": "added in version 22.0.0", "FullName": "V put (K key, V value)"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "added in version 22.0.0", "FullName": "String toString ()"}, "maxSize()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "For caches that do not override @B_android#support#v4#util#LruCache#sizeOf_E@, this returns the maximum number of entries in the cache. For all other caches, this returns the maximum sum of the sizes of the entries in this cache.", "history": "added in version 22.0.0", "FullName": "int maxSize ()"}, "trimToSize(int)": {"Returns": [], "Parameters": [["int", "int: the maximum size of the cache before returning. May be -1 to evict even 0-sized elements."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Remove the eldest entries until the total of remaining entries is at or below the requested size.", "history": "added in version 22.0.0", "FullName": "void trimToSize (int maxSize)"}, "createCount()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of times @B_android#support#v4#util#LruCache#create_E@ returned a value.", "history": "added in version 22.0.0", "FullName": "int createCount ()"}, "evictAll()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Clear the cache, calling @B_android#support#v4#util#LruCache#entryRemoved_E@ on each removed entry.", "history": "added in version 22.0.0", "FullName": "void evictAll ()"}, "entryRemoved(boolean, K, V, V)": {"Returns": [], "Parameters": [["boolean", "boolean: true if the entry is being removed to make space, false if the removal was caused by a @B_android#support#v4#util#LruCache#put_E@ or @B_android#support#v4#util#LruCache#remove_E@."], ["K", "K no parameter comment"], ["V", "V no parameter comment"], ["V", "V: the new value for key, if it exists. If non-null, this removal was caused by a @B_android#support#v4#util#LruCache#put_E@. Otherwise it was caused by an eviction or a @B_android#support#v4#util#LruCache#remove_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called for entries that have been evicted or removed. This method is invoked when a value is evicted to make space, removed by a call to @B_android#support#v4#util#LruCache#remove_E@, or replaced by a call to @B_android#support#v4#util#LruCache#put_E@. The default implementation does nothing. The method is called without synchronization: other threads may access the cache while this method is executing.", "history": "added in version 22.0.0", "FullName": "void entryRemoved (boolean evicted, K key, V oldValue, V newValue)"}, "hitCount()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of times @B_android#support#v4#util#LruCache#get_E@ returned a value that was already present in the cache.", "history": "added in version 22.0.0", "FullName": "int hitCount ()"}, "snapshot()": {"Returns": [["@B_java#util#Map_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a copy of the current contents of the cache, ordered from least recently accessed to most recently accessed.", "history": "added in version 22.0.0", "FullName": "Map<K, V> snapshot ()"}, "create(K)": {"Returns": [["V", "no returns description in source"]], "Parameters": [["K", "K no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called after a cache miss to compute a value for the corresponding key. Returns the computed value or null if no value can be computed. The default implementation returns null. The method is called without synchronization: other threads may access the cache while this method is executing. If a value for key exists in the cache when this method returns, the created value will be released with @B_android#support#v4#util#LruCache#entryRemoved_E@ and discarded. This can occur when multiple threads request the same key at the same time (causing multiple values to be created), or when one thread calls @B_android#support#v4#util#LruCache#put_E@ while another is creating a value for the same key.", "history": "added in version 22.0.0", "FullName": "V create (K key)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v4.util.LruCache<K, V>", "ClassDesc": "Static library version of android.util.LruCache. Used to write apps that run on API levels prior to 12. When running on API level 12 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview."}