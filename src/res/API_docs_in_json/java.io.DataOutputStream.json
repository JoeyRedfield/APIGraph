{"Functions": {"writeInt(int)": {"Returns": [], "Parameters": [["int", "int: an int to be written."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": ["@B_java#io#FilterOutputStream#out_E@"], "Permissions": [], "Description": "Writes an int to the underlying output stream as four bytes, high byte first. If no exception is thrown, the counter written is incremented by 4.", "history": "Added in API level 1", "FullName": "public final void writeInt (int v)"}, "size()": {"Returns": [["int", "the value of the written field."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#io#DataOutputStream#written_E@"], "Permissions": [], "Description": "Returns the current value of the counter written, the number of bytes written to this data output stream so far. If the counter overflows, it will be wrapped to Integer.MAX_VALUE.", "history": "Added in API level 1", "FullName": "public final int size ()"}, "writeShort(int)": {"Returns": [], "Parameters": [["int", "int: a short to be written."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": ["@B_java#io#FilterOutputStream#out_E@"], "Permissions": [], "Description": "Writes a short to the underlying output stream as two bytes, high byte first. If no exception is thrown, the counter written is incremented by 2.", "history": "Added in API level 1", "FullName": "public final void writeShort (int v)"}, "writeLong(long)": {"Returns": [], "Parameters": [["long", "long: a long to be written."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": ["@B_java#io#FilterOutputStream#out_E@"], "Permissions": [], "Description": "Writes a long to the underlying output stream as eight bytes, high byte first. In no exception is thrown, the counter written is incremented by 8.", "history": "Added in API level 1", "FullName": "public final void writeLong (long v)"}, "writeChars(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a String value to be written."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": ["@B_java#io#DataOutputStream#writeChar_E@", "@B_java#io#FilterOutputStream#out_E@"], "Permissions": [], "Description": "Writes a string to the underlying output stream as a sequence of characters. Each character is written to the data output stream as if by the writeChar method. If no exception is thrown, the counter written is incremented by twice the length of s.", "history": "Added in API level 1", "FullName": "public final void writeChars (String s)"}, "writeDouble(double)": {"Returns": [], "Parameters": [["double", "double: a double value to be written."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": ["@B_java#io#FilterOutputStream#out_E@", "@B_java#lang#Double#doubleToLongBits_E@"], "Permissions": [], "Description": "Converts the double argument to a long using the doubleToLongBits method in class Double, and then writes that long value to the underlying output stream as an 8-byte quantity, high byte first. If no exception is thrown, the counter written is incremented by 8.", "history": "Added in API level 1", "FullName": "public final void writeDouble (double v)"}, "writeChar(int)": {"Returns": [], "Parameters": [["int", "int: a char value to be written."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": ["@B_java#io#FilterOutputStream#out_E@"], "Permissions": [], "Description": "Writes a char to the underlying output stream as a 2-byte value, high byte first. If no exception is thrown, the counter written is incremented by 2.", "history": "Added in API level 1", "FullName": "public final void writeChar (int v)"}, "write(byte[], int, int)": {"Returns": [], "Parameters": [["byte[]", "byte: the data."], ["int", "int: the start offset in the data."], ["int", "int: the number of bytes to write."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": ["@B_java#io#FilterOutputStream#out_E@"], "Permissions": [], "Description": "Writes len bytes from the specified byte array starting at offset off to the underlying output stream. If no exception is thrown, the counter written is incremented by len.", "history": "added in API level 1", "FullName": "public void write (byte[] b, int off, int len)"}, "write(int)": {"Returns": [], "Parameters": [["int", "int: the byte to be written."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": ["@B_java#io#FilterOutputStream#out_E@"], "Permissions": [], "Description": "Writes the specified byte (the low eight bits of the argument b) to the underlying output stream. If no exception is thrown, the counter written is incremented by 1. Implements the write method of OutputStream.", "history": "Added in API level 1", "FullName": "public void write (int b)"}, "writeByte(int)": {"Returns": [], "Parameters": [["int", "int: a byte value to be written."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": ["@B_java#io#FilterOutputStream#out_E@"], "Permissions": [], "Description": "Writes out a byte to the underlying output stream as a 1-byte value. If no exception is thrown, the counter written is incremented by 1.", "history": "Added in API level 1", "FullName": "public final void writeByte (int v)"}, "DataOutputStream(java.io.OutputStream)": {"Returns": [], "Parameters": [["@B_java#io#OutputStream_E@", "OutputStream: the underlying output stream, to be saved for later use."]], "Throws": [], "SeeAlso": ["@B_java#io#FilterOutputStream#out_E@"], "Permissions": [], "Description": "Creates a new data output stream to write data to the specified underlying output stream. The counter written is set to zero.", "history": "Added in API level 1", "FullName": "public DataOutputStream (OutputStream out)"}, "writeFloat(float)": {"Returns": [], "Parameters": [["float", "float: a float value to be written."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": ["@B_java#io#FilterOutputStream#out_E@", "@B_java#lang#Float#floatToIntBits_E@"], "Permissions": [], "Description": "Converts the float argument to an int using the floatToIntBits method in class Float, and then writes that int value to the underlying output stream as a 4-byte quantity, high byte first. If no exception is thrown, the counter written is incremented by 4.", "history": "Added in API level 1", "FullName": "public final void writeFloat (float v)"}, "writeUTF(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a string to be written."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": [], "Permissions": [], "Description": "Writes a string to the underlying output stream using First, two bytes are written to the output stream as if by the writeShort method giving the number of bytes to follow. This value is the number of bytes actually written out, not the length of the string. Following the length, each character of the string is output, in sequence, using the modified UTF-8 encoding for the character. If no exception is thrown, the counter written is incremented by the total number of bytes written to the output stream. This will be at least two plus the length of str, and at most two plus thrice the length of str.", "history": "Added in API level 1", "FullName": "public final void writeUTF (String str)"}, "flush()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": ["@B_java#io#FilterOutputStream#out_E@", "@B_java#io#OutputStream#flush_E@"], "Permissions": [], "Description": "Flushes this data output stream. This forces any buffered output bytes to be written out to the stream. The flush method of DataOutputStream calls the flush method of its underlying output stream.", "history": "Added in API level 1", "FullName": "public void flush ()"}, "writeBytes(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a string of bytes to be written."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": ["@B_java#io#FilterOutputStream#out_E@"], "Permissions": [], "Description": "Writes out the string to the underlying output stream as a sequence of bytes. Each character in the string is written out, in sequence, by discarding its high eight bits. If no exception is thrown, the counter written is incremented by the length of s.", "history": "Added in API level 1", "FullName": "public final void writeBytes (String s)"}, "write(byte[],int,int)": {"Returns": [], "Parameters": [["byte[]", "byte: the data."], ["int", "int: the start offset in the data."], ["int", "int: the number of bytes to write."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": ["@B_java#io#FilterOutputStream#out_E@"], "Permissions": [], "Description": "Writes len bytes from the specified byte array starting at offset off to the underlying output stream. If no exception is thrown, the counter written is incremented by len.", "history": "Added in API level 1", "FullName": "public void write (byte[] b, int off, int len)"}, "writeBoolean(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: a boolean value to be written."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": ["@B_java#io#FilterOutputStream#out_E@"], "Permissions": [], "Description": "Writes a boolean to the underlying output stream as a 1-byte value. The value true is written out as the value (byte)1; the value false is written out as the value (byte)0. If no exception is thrown, the counter written is incremented by 1.", "history": "Added in API level 1", "FullName": "public final void writeBoolean (boolean v)"}}, "Inheritance": ["@B_java#io#OutputStream_E@", "@B_java#io#FilterOutputStream_E@"], "ClassName": "java.io.DataOutputStream", "ClassDesc": "A data output stream lets an application write primitive Java data types to an output stream in a portable way. An application can then use a data input stream to read the data back in."}