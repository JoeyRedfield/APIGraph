{"Functions": {"addPages(java.util.List<android.app.Notification>)": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "this object for method chaining"]], "Parameters": [["@B_java#util#List_E@", "List: a list of notifications"]], "Throws": [], "SeeAlso": ["@B_android#support#v4#app#NotificationCompat#WearableExtender#getPages_E@"], "Permissions": [], "Description": "Add additional pages of content to display with this notification. The current notification forms the first page, and pages added using this function form subsequent pages. This field can be used to separate a notification into multiple sections.", "history": "added in version 22.0.0", "FullName": "NotificationCompat.WearableExtender addPages (List<Notification> pages)"}, "setBridgeTag(java.lang.String)": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "this object for method chaining"]], "Parameters": [["@B_java#lang#String_E@", "String: the bridge tag of the notification."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets a bridge tag for this notification. A bridge tag can be set for notifications posted from a phone to provide finer-grained control on what notifications are bridged to wearables. See", "history": "added in version 25.0.0", "FullName": "NotificationCompat.WearableExtender setBridgeTag (String bridgeTag)"}, "addPage(android.app.Notification)": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "this object for method chaining"]], "Parameters": [["@B_android#app#Notification_E@", "Notification: the notification to add as another page"]], "Throws": [], "SeeAlso": ["@B_android#support#v4#app#NotificationCompat#WearableExtender#getPages_E@"], "Permissions": [], "Description": "Add an additional page of content to display with this notification. The current notification forms the first page, and pages added using this function form subsequent pages. This field can be used to separate a notification into multiple sections.", "history": "added in version 22.0.0", "FullName": "NotificationCompat.WearableExtender addPage (Notification page)"}, "setContentIconGravity(int)": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#support#v4#app#NotificationCompat#WearableExtender#setContentIcon_E@"], "Permissions": [], "Description": "Set the gravity that the content icon should have within the notification display. Supported values include @B_android#view#Gravity#START_E@ and @B_android#view#Gravity#END_E@. The default value is @B_android#view#Gravity#END_E@.", "history": "added in version 22.0.0", "FullName": "NotificationCompat.WearableExtender setContentIconGravity (int contentIconGravity)"}, "getHintHideIcon()": {"Returns": [["boolean", "true if this icon should not be displayed, false otherwise. The default value is false if this was never set."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get a hint that this notification's icon should not be displayed.", "history": "added in version 22.0.0", "FullName": "boolean getHintHideIcon ()"}, "setDismissalId(java.lang.String)": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "this object for method chaining"]], "Parameters": [["@B_java#lang#String_E@", "String: the dismissal id of the notification."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the dismissal id for this notification. If a notification is posted with a dismissal id, then when that notification is canceled, notifications on other wearables and the paired Android phone having that same dismissal id will also be canceled. See", "history": "added in version 24.0.0", "FullName": "NotificationCompat.WearableExtender setDismissalId (String dismissalId)"}, "setCustomSizePreset(int)": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the custom size preset for the display of this notification out of the available presets found in @B_android#support#v4#app#NotificationCompat#WearableExtender_E@, e.g. @B_android#support#v4#app#NotificationCompat#WearableExtender#SIZE_LARGE_E@. Some custom size presets are only applicable for custom display notifications created using @B_android#support#v4#app#NotificationCompat#WearableExtender#setDisplayIntent_E@. Check the documentation for the preset in question. See also @B_android#support#v4#app#NotificationCompat#WearableExtender#setCustomContentHeight_E@ and @B_android#support#v4#app#NotificationCompat#WearableExtender#getCustomSizePreset_E@.", "history": "added in version 22.0.0", "FullName": "NotificationCompat.WearableExtender setCustomSizePreset (int sizePreset)"}, "getHintAvoidBackgroundClipping()": {"Returns": [["boolean", "true if it's ok if the background is clipped on the screen, false otherwise. The default value is false if this was never set."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get a hint that this notification's background should not be clipped if possible, and should instead be resized to fully display on the screen, retaining the aspect ratio of the image. This can be useful for images like barcodes or qr codes.", "history": "added in version 22.0.0", "FullName": "boolean getHintAvoidBackgroundClipping ()"}, "getBridgeTag()": {"Returns": [["@B_java#lang#String_E@", "the bridge tag or null if not present."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the bridge tag of the notification.", "history": "added in version 25.0.0", "FullName": "String getBridgeTag ()"}, "setContentIcon(int)": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set an icon that goes with the content of this notification.", "history": "added in version 22.0.0", "FullName": "NotificationCompat.WearableExtender setContentIcon (int icon)"}, "getHintContentIntentLaunchesActivity()": {"Returns": [["boolean", "true if the content intent will launch an activity and transitions should be generated, false otherwise. The default value is false if this was never set."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get a hint that this notification's content intent will launch an @B_android#app#Activity_E@ directly, telling the platform that it can generate the appropriate transitions", "history": "added in version 24.0.0", "FullName": "boolean getHintContentIntentLaunchesActivity ()"}, "setHintScreenTimeout(int)": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "this object for method chaining"]], "Parameters": [["int", "int: The requested screen timeout in milliseconds. Can also be either @B_android#support#v4#app#NotificationCompat#WearableExtender#SCREEN_TIMEOUT_SHORT_E@ or @B_android#support#v4#app#NotificationCompat#WearableExtender#SCREEN_TIMEOUT_LONG_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a hint that the screen should remain on for at least this duration when this notification is displayed on the screen.", "history": "added in version 22.0.0", "FullName": "NotificationCompat.WearableExtender setHintScreenTimeout (int timeout)"}, "getContentAction()": {"Returns": [["int", "the action index or @B_android#support#v4#app#NotificationCompat#WearableExtender#UNSET_ACTION_INDEX_E@ if no action was selected."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the index of the notification action, if any, that was specified as being clickable with the content of this notification. This action will no longer display separately from the notification's content. For notifications with multiple pages, child pages can also have content actions set, although the list of available actions comes from the main notification and not from the child page's notification. If wearable specific actions were added to the main notification, this index will apply to that list, otherwise it will apply to the regular actions list.", "history": "added in version 22.0.0", "FullName": "int getContentAction ()"}, "setContentAction(int)": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "no returns description in source"]], "Parameters": [["int", "int: The index of the action to hoist onto the current notification page. If wearable actions were added to the main notification, this index will apply to that list, otherwise it will apply to the regular actions list."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set an action from this notification's actions to be clickable with the content of this notification. This action will no longer display separately from the notification's content. For notifications with multiple pages, child pages can also have content actions set, although the list of available actions comes from the main notification and not from the child page's notification.", "history": "added in version 22.0.0", "FullName": "NotificationCompat.WearableExtender setContentAction (int actionIndex)"}, "clearActions()": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "this object for method chaining."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v4#app#NotificationCompat#WearableExtender#addAction_E@"], "Permissions": [], "Description": "Clear all wearable actions present on this builder.", "history": "added in version 22.0.0", "FullName": "NotificationCompat.WearableExtender clearActions ()"}, "getBackground()": {"Returns": [["@B_android#graphics#Bitmap_E@", "the background image"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v4#app#NotificationCompat#WearableExtender#setBackground_E@"], "Permissions": [], "Description": "Get a background image to be displayed behind the notification content. Contrary to the @B_android#support#v4#app#NotificationCompat#BigPictureStyle_E@, this background will work with any notification style.", "history": "added in version 22.0.0", "FullName": "Bitmap getBackground ()"}, "setHintAmbientBigPicture(boolean)": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "this object for method chaining"]], "Parameters": [["boolean", "boolean: true to enable converstion and ambient."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a hint that this notification's @B_android#support#v4#app#NotificationCompat#BigPictureStyle_E@ (if present) should be converted to low-bit and displayed in ambient mode, especially useful for barcodes and qr codes, as well as other simple black-and-white tickets.", "history": "added in version 24.0.0", "FullName": "NotificationCompat.WearableExtender setHintAmbientBigPicture (boolean hintAmbientBigPicture)"}, "clone()": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "a clone of this instance."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates and returns a copy of this object. The precise meaning of \"copy\" may depend on the class of the object. The general intent is that, for any object x, the expression: true, but these are not absolute requirements. While it is typically the case that: true, this is not an absolute requirement. By convention, the returned object should be obtained by calling super.clone. If a class and all of its superclasses (except Object) obey this convention, it will be the case that x.clone().getClass() == x.getClass(). By convention, the object returned by this method should be independent of this object (which is being cloned). To achieve this independence, it may be necessary to modify one or more fields of the object returned by super.clone before returning it. Typically, this means copying any mutable objects that comprise the internal \"deep structure\" of the object being cloned and replacing the references to these objects with references to the copies. If a class contains only primitive fields or references to immutable objects, then it is usually the case that no fields in the object returned by super.clone need to be modified. The method clone for class Object performs a specific cloning operation. First, if the class of this object does not implement the interface Cloneable, then a CloneNotSupportedException is thrown. Note that all arrays are considered to implement the interface Cloneable and that the return type of the clone method of an array type T[] is T[] where T is any reference or primitive type. Otherwise, this method creates a new instance of the class of this object and initializes all its fields with exactly the contents of the corresponding fields of this object, as if by assignment; the contents of the fields are not themselves cloned. Thus, this method performs a \"shallow copy\" of this object, not a \"deep copy\" operation. The class Object does not itself implement the interface Cloneable, so calling the clone method on an object whose class is Object will result in throwing an exception at run time.", "history": "added in version 22.0.0", "FullName": "NotificationCompat.WearableExtender clone ()"}, "getStartScrollBottom()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get whether the scrolling position for the contents of this notification should start at the bottom of the contents instead of the top when the contents are too long to display within the screen. Default is false (start scroll at the top).", "history": "added in version 22.0.0", "FullName": "boolean getStartScrollBottom ()"}, "setGravity(int)": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the gravity that this notification should have within the available viewport space. Supported values include @B_android#view#Gravity#TOP_E@, @B_android#view#Gravity#CENTER_VERTICAL_E@ and @B_android#view#Gravity#BOTTOM_E@. The default value is @B_android#view#Gravity#BOTTOM_E@.", "history": "added in version 22.0.0", "FullName": "NotificationCompat.WearableExtender setGravity (int gravity)"}, "setContentIntentAvailableOffline(boolean)": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set whether the content intent is available when the wearable device is not connected to a companion device. The user can still trigger this intent when the wearable device is offline, but a visual hint will indicate that the content intent may not be available. Defaults to true.", "history": "added in version 22.0.0", "FullName": "NotificationCompat.WearableExtender setContentIntentAvailableOffline (boolean contentIntentAvailableOffline)"}, "getContentIconGravity()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v4#app#NotificationCompat#WearableExtender#getContentIcon_E@"], "Permissions": [], "Description": "Get the gravity that the content icon should have within the notification display. Supported values include @B_android#view#Gravity#START_E@ and @B_android#view#Gravity#END_E@. The default value is @B_android#view#Gravity#END_E@.", "history": "added in version 22.0.0", "FullName": "int getContentIconGravity ()"}, "getActions()": {"Returns": [["@B_java#util#List_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the wearable actions present on this notification.", "history": "added in version 22.0.0", "FullName": "List<NotificationCompat.Action> getActions ()"}, "getPages()": {"Returns": [["@B_java#util#List_E@", "the pages for this notification"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the array of additional pages of content for displaying this notification. The current notification forms the first page, and elements within this array form subsequent pages. This field can be used to separate a notification into multiple sections.", "history": "added in version 22.0.0", "FullName": "List<Notification> getPages ()"}, "setHintContentIntentLaunchesActivity(boolean)": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "this object for method chaining"]], "Parameters": [["boolean", "boolean: true if the content intent will launch an activity and transitions should be generated, false otherwise."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a hint that this notification's content intent will launch an @B_android#app#Activity_E@ directly, telling the platform that it can generate the appropriate transitions.", "history": "added in version 24.0.0", "FullName": "NotificationCompat.WearableExtender setHintContentIntentLaunchesActivity (boolean hintContentIntentLaunchesActivity)"}, "getCustomContentHeight()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the custom height in pixels for the display of this notification's content. This option is only available for custom display notifications created using @B_android#support#v4#app#NotificationCompat#WearableExtender#setDisplayIntent_E@. See also @B_android#support#v4#app#NotificationCompat#WearableExtender#setCustomSizePreset_E@ and @B_android#support#v4#app#NotificationCompat#WearableExtender#setCustomContentHeight_E@.", "history": "added in version 22.0.0", "FullName": "int getCustomContentHeight ()"}, "getDisplayIntent()": {"Returns": [["@B_android#app#PendingIntent_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the intent to launch inside of an activity view when displaying this notification. This PendingIntent should be for an activity.", "history": "added in version 22.0.0", "FullName": "PendingIntent getDisplayIntent ()"}, "setCustomContentHeight(int)": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the custom height in pixels for the display of this notification's content. This option is only available for custom display notifications created using @B_android#support#v4#app#NotificationCompat#WearableExtender#setDisplayIntent_E@. See also @B_android#support#v4#app#NotificationCompat#WearableExtender#setCustomSizePreset_E@ and @B_android#support#v4#app#NotificationCompat#WearableExtender#getCustomContentHeight_E@.", "history": "added in version 22.0.0", "FullName": "NotificationCompat.WearableExtender setCustomContentHeight (int height)"}, "getGravity()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the gravity that this notification should have within the available viewport space. Supported values include @B_android#view#Gravity#TOP_E@, @B_android#view#Gravity#CENTER_VERTICAL_E@ and @B_android#view#Gravity#BOTTOM_E@. The default value is @B_android#view#Gravity#BOTTOM_E@.", "history": "added in version 22.0.0", "FullName": "int getGravity ()"}, "setHintShowBackgroundOnly(boolean)": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a visual hint that only the background image of this notification should be displayed, and other semantic content should be hidden. This hint is only applicable to sub-pages added using @B_android#support#v4#app#NotificationCompat#WearableExtender#addPage_E@.", "history": "added in version 22.0.0", "FullName": "NotificationCompat.WearableExtender setHintShowBackgroundOnly (boolean hintShowBackgroundOnly)"}, "setHintHideIcon(boolean)": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "this object for method chaining"]], "Parameters": [["boolean", "boolean: true to hide the icon, false otherwise."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a hint that this notification's icon should not be displayed.", "history": "added in version 22.0.0", "FullName": "NotificationCompat.WearableExtender setHintHideIcon (boolean hintHideIcon)"}, "clearPages()": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "this object for method chaining."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v4#app#NotificationCompat#WearableExtender#addPage_E@"], "Permissions": [], "Description": "Clear all additional pages present on this builder.", "history": "added in version 22.0.0", "FullName": "NotificationCompat.WearableExtender clearPages ()"}, "setDisplayIntent(android.app.PendingIntent)": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "this object for method chaining"]], "Parameters": [["@B_android#app#PendingIntent_E@", "PendingIntent: the @B_android#app#PendingIntent_E@ for an activity"]], "Throws": [], "SeeAlso": ["@B_android#support#v4#app#NotificationCompat#WearableExtender#getDisplayIntent_E@"], "Permissions": [], "Description": "Set an intent to launch inside of an activity view when displaying this notification. The @B_android#app#PendingIntent_E@ provided should be for an activity. The activity to launch needs to allow embedding, must be exported, and should have an empty task affinity. It is also recommended to use the device default light theme. Example AndroidManifest.xml entry:", "history": "added in version 22.0.0", "FullName": "NotificationCompat.WearableExtender setDisplayIntent (PendingIntent intent)"}, "getHintAmbientBigPicture()": {"Returns": [["boolean", "true if it should be displayed in ambient, false otherwise otherwise. The default value is false if this was never set."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get a hint that this notification's @B_android#support#v4#app#NotificationCompat#BigPictureStyle_E@ (if present) should be converted to low-bit and displayed in ambient mode, especially useful for barcodes and qr codes, as well as other simple black-and-white tickets.", "history": "added in version 24.0.0", "FullName": "boolean getHintAmbientBigPicture ()"}, "getHintScreenTimeout()": {"Returns": [["int", "the duration in milliseconds if > 0, or either one of the sentinel values @B_android#support#v4#app#NotificationCompat#WearableExtender#SCREEN_TIMEOUT_SHORT_E@ or @B_android#support#v4#app#NotificationCompat#WearableExtender#SCREEN_TIMEOUT_LONG_E@."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the duration, in milliseconds, that the screen should remain on for when this notification is displayed.", "history": "added in version 22.0.0", "FullName": "int getHintScreenTimeout ()"}, "getContentIcon()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get an icon that goes with the content of this notification.", "history": "added in version 22.0.0", "FullName": "int getContentIcon ()"}, "setHintAvoidBackgroundClipping(boolean)": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "this object for method chaining"]], "Parameters": [["boolean", "boolean: true to avoid clipping if possible."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a hint that this notification's background should not be clipped if possible, and should instead be resized to fully display on the screen, retaining the aspect ratio of the image. This can be useful for images like barcodes or qr codes.", "history": "added in version 22.0.0", "FullName": "NotificationCompat.WearableExtender setHintAvoidBackgroundClipping (boolean hintAvoidBackgroundClipping)"}, "NotificationCompat.WearableExtender()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a @B_android#support#v4#app#NotificationCompat#WearableExtender_E@ with default options.", "history": "added in version 22.0.0", "FullName": "NotificationCompat.WearableExtender ()"}, "setStartScrollBottom(boolean)": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set whether the scrolling position for the contents of this notification should start at the bottom of the contents instead of the top when the contents are too long to display within the screen. Default is false (start scroll at the top).", "history": "added in version 22.0.0", "FullName": "NotificationCompat.WearableExtender setStartScrollBottom (boolean startScrollBottom)"}, "setBackground(android.graphics.Bitmap)": {"Returns": [["@B_android#support#v4#app#NotificationCompat#WearableExtender_E@", "this object for method chaining"]], "Parameters": [["@B_android#graphics#Bitmap_E@", "Bitmap: the background bitmap"]], "Throws": [], "SeeAlso": ["@B_android#support#v4#app#NotificationCompat#WearableExtender#getBackground_E@"], "Permissions": [], "Description": "Set a background image to be displayed behind the notification content. Contrary to the @B_android#support#v4#app#NotificationCompat#BigPictureStyle_E@, this background will work with any notification style.", "history": "added in version 22.0.0", "FullName": "NotificationCompat.WearableExtender setBackground (Bitmap background)"}, "getContentIntentAvailableOffline()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get whether the content intent is available when the wearable device is not connected to a companion device. The user can still trigger this intent when the wearable device is offline, but a visual hint will indicate that the content intent may not be available. Defaults to true.", "history": "added in version 22.0.0", "FullName": "boolean getContentIntentAvailableOffline ()"}, "getDismissalId()": {"Returns": [["@B_java#lang#String_E@", "the dismissal id of the notification or null if it has not been set."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the dismissal id of the notification.", "history": "added in version 24.0.0", "FullName": "String getDismissalId ()"}, "getHintShowBackgroundOnly()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get a visual hint that only the background image of this notification should be displayed, and other semantic content should be hidden. This hint is only applicable to sub-pages added using @B_android#support#v4#app#NotificationCompat#WearableExtender#addPage_E@.", "history": "added in version 22.0.0", "FullName": "boolean getHintShowBackgroundOnly ()"}, "getCustomSizePreset()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the custom size preset for the display of this notification out of the available presets found in @B_android#support#v4#app#NotificationCompat#WearableExtender_E@, e.g. @B_android#support#v4#app#NotificationCompat#WearableExtender#SIZE_LARGE_E@. Some custom size presets are only applicable for custom display notifications created using @B_android#support#v4#app#NotificationCompat#WearableExtender#setDisplayIntent_E@. Check the documentation for the preset in question. See also @B_android#support#v4#app#NotificationCompat#WearableExtender#setCustomContentHeight_E@ and @B_android#support#v4#app#NotificationCompat#WearableExtender#setCustomSizePreset_E@.", "history": "added in version 22.0.0", "FullName": "int getCustomSizePreset ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v4.app.NotificationCompat.WearableExtender", "ClassDesc": "Helper class to add wearable extensions to notifications. See To create a notification with wearable extensions: Wearable extensions can be accessed on an existing notification by using the WearableExtender(Notification) constructor, and then using the get methods to access values."}