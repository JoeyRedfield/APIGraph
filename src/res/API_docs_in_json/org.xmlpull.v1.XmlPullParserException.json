{"Functions": {"getDetail()": {"Returns": [["@B_java#lang#Throwable_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public Throwable getDetail ()"}, "getLineNumber()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public int getLineNumber ()"}, "printStackTrace()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Prints this throwable and its backtrace to the standard error stream. This method prints a stack trace for this Throwable object on the error output stream that is the value of the field System.err. The first line of output contains the result of the @B_java#lang#Throwable#toString_E@ method for this object. Remaining lines represent data previously recorded by the method @B_java#lang#Throwable#fillInStackTrace_E@. The format of this information depends on the implementation, but the following example may be regarded as typical: \"...\". These lines indicate that the remainder of the stack trace for this exception matches the indicated number of frames from the bottom of the stack trace of the exception that was caused by this exception (the \"enclosing\" exception). This shorthand can greatly reduce the length of the output in the common case where a wrapped exception is thrown from same method as the \"causative exception\" is caught. The above example was produced by running the program: try-with-resources statement). Any exceptions that were suppressed in order to deliver an exception are printed out beneath the stack trace. The format of this information depends on the implementation, but the following example may be regarded as typical: An exception can have both a cause and one or more suppressed exceptions:", "history": "Added in API level 1", "FullName": "public void printStackTrace ()"}, "getColumnNumber()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public int getColumnNumber ()"}, "XmlPullParserException(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public XmlPullParserException (String s)"}, "XmlPullParserException(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_org#xmlpull#v1#XmlPullParser_E@", "XmlPullParser no parameter comment"], ["@B_java#lang#Throwable_E@", "Throwable no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public XmlPullParserException (String msg, XmlPullParser parser, Throwable chain)"}}, "Inheritance": ["@B_java#lang#Throwable_E@", "@B_java#lang#Exception_E@"], "ClassName": "org.xmlpull.v1.XmlPullParserException", "ClassDesc": "This exception is thrown to signal XML Pull Parser related faults."}