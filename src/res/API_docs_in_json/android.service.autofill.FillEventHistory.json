{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 26", "FullName": "public String toString ()"}, "getClientState()": {"Returns": [["@B_android#os#Bundle_E@", "This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "use @B_android#service#autofill#FillEventHistory#getEvents_E@ then @B_android#service#autofill#FillEventHistory#Event#getClientState_E@ instead. Returns the client state set in the previous @B_android#service#autofill#FillResponse_E@. @B_android#service#autofill#AutofillService#onFillRequest_E@ , which is not necessary the same app being autofilled now.", "history": "Added in API level 26 Deprecated in API level 28", "FullName": "public Bundle getClientState ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 26", "FullName": "public void writeToParcel (Parcel parcel, int flags)"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 26", "FullName": "public void writeToParcel (Parcel parcel, int flags)"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 26", "FullName": "public int describeContents ()"}, "getEvents()": {"Returns": [["@B_java#util#List_E@", "The list of events or null if non occurred."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the events occurred after the latest call to @B_android#service#autofill#FillCallback#onSuccess_E@.", "history": "Added in API level 26", "FullName": "public List<FillEventHistory.Event> getEvents ()"}}, "Inheritance": [], "ClassName": "android.service.autofill.FillEventHistory", "ClassDesc": "Describes what happened after the last @B_android#service#autofill#AutofillService#onFillRequest_E@ call. This history is typically used to keep track of previous user actions to optimize further requests. For example, the service might return email addresses in alphabetical order by default, but change that order based on the address the user picked on previous requests. The history is not persisted over reboots, and it's cleared every time the service replies to a @B_android#service#autofill#AutofillService#onFillRequest_E@ by calling @B_android#service#autofill#FillCallback#onSuccess_E@ or @B_android#service#autofill#FillCallback#onFailure_E@ (if the service doesn't call any of these methods, the history will clear out after some pre-defined time)."}