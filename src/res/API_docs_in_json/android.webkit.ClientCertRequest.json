{"Functions": {"cancel()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Cancel this request. Remember the user's choice and use it for future requests.", "history": "Added in API level 21", "FullName": "public abstract void cancel ()"}, "getKeyTypes()": {"Returns": [["@B_java#lang#String_E@", "This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the acceptable types of asymmetric keys.", "history": "Added in API level 21", "FullName": "public abstract String[] getKeyTypes ()"}, "ClientCertRequest()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 21", "FullName": "public ClientCertRequest ()"}, "getPort()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the port number of the server requesting the certificate.", "history": "Added in API level 21", "FullName": "public abstract int getPort ()"}, "proceed(java.security.PrivateKey,java.security.cert.X509Certificate[])": {"Returns": [], "Parameters": [["@B_java#security#PrivateKey_E@", "PrivateKey no parameter comment"], ["@B_java#security#cert#X509Certificate_E@", "X509Certificate no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Proceed with the specified private key and client certificate chain. Remember the user's positive choice and use it for future requests.", "history": "Added in API level 21", "FullName": "public abstract void proceed (PrivateKey privateKey, X509Certificate[] chain)"}, "getPrincipals()": {"Returns": [["@B_java#security#Principal_E@", "This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the acceptable certificate issuers for the certificate matching the private key.", "history": "Added in API level 21", "FullName": "public abstract Principal[] getPrincipals ()"}, "getHost()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the host name of the server requesting the certificate.", "history": "Added in API level 21", "FullName": "public abstract String getHost ()"}, "ignore()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Ignore the request for now. Do not remember user's choice.", "history": "Added in API level 21", "FullName": "public abstract void ignore ()"}}, "Inheritance": [], "ClassName": "android.webkit.ClientCertRequest", "ClassDesc": "ClientCertRequest: The user receives an instance of this class as a parameter of @B_android#webkit#WebViewClient#onReceivedClientCertRequest_E@. The request includes the parameters to choose the client certificate, such as the host name and the port number requesting the cert, the acceptable key types and the principals. The user should call one of the class methods to indicate how to deal with the client certificate request. All methods should be called on UI thread. WebView caches the @B_android#webkit#ClientCertRequest#proceed_E@ and @B_android#webkit#ClientCertRequest#cancel_E@ responses in memory and uses them to handle future client certificate requests for the same host/port pair. The user can clear the cached data using @B_android#webkit#WebView#clearClientCertPreferences_E@."}