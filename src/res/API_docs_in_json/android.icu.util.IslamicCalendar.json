{"Functions": {"handleComputeMonthStart(int, int, boolean)": {"Returns": [["int", "the Julian day number of the day before the first day of the given month and year"]], "Parameters": [["int", "int: the extended year"], ["int", "int: the zero-based month, or 0 if useMonth is false"], ["boolean", "boolean: if false, compute the day before the first day of the given year, otherwise, compute the day before the first day of the given month"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the Julian day number of day before the first day of the given month in the given extended year. Subclasses should override this method to implement their calendar system.", "history": "added in API level 24", "FullName": "protected int handleComputeMonthStart (int eyear, int month, boolean useMonth)"}, "handleGetLimit(int, int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int: one of the above field numbers"], ["int", "int: one of MINIMUM, GREATEST_MINIMUM, LEAST_MAXIMUM, or MAXIMUM"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Subclass API for defining limits of different types. Subclasses must implement this method to return limits for the following fields:", "history": "added in API level 24", "FullName": "protected int handleGetLimit (int field, int limitType)"}, "IslamicCalendar(android.icu.util.TimeZone,android.icu.util.ULocale)": {"Returns": [], "Parameters": [["@B_android#icu#util#TimeZone_E@", "TimeZone: the given time zone."], ["@B_android#icu#util#ULocale_E@", "ULocale: the given ulocale."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs an IslamicCalendar based on the current time in the given time zone with the given locale.", "history": "Added in API level 24", "FullName": "public IslamicCalendar (TimeZone zone, ULocale locale)"}, "IslamicCalendar(java.util.Locale)": {"Returns": [], "Parameters": [["@B_java#util#Locale_E@", "Locale: the given locale."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs an IslamicCalendar based on the current time in the default time zone with the given locale.", "history": "Added in API level 24", "FullName": "public IslamicCalendar (Locale aLocale)"}, "handleComputeMonthStart(int,int,boolean)": {"Returns": [["int", "the Julian day number of the day before the first day of the given month and year"]], "Parameters": [["int", "int: the extended year"], ["int", "int: the zero-based month, or 0 if useMonth is false"], ["boolean", "boolean: if false, compute the day before the first day of the given year, otherwise, compute the day before the first day of the given month"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the Julian day number of day before the first day of the given month in the given extended year. Subclasses should override this method to implement their calendar system.", "history": "Added in API level 24", "FullName": "protected int handleComputeMonthStart (int eyear, int month, boolean useMonth)"}, "setCalculationType(android.icu.util.IslamicCalendar.CalculationType)": {"Returns": [], "Parameters": [["@B_android#icu#util#IslamicCalendar#CalculationType_E@", "IslamicCalendar.CalculationType no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "sets the calculation type for this calendar.", "history": "Added in API level 24", "FullName": "public void setCalculationType (IslamicCalendar.CalculationType type)"}, "IslamicCalendar(android.icu.util.ULocale)": {"Returns": [], "Parameters": [["@B_android#icu#util#ULocale_E@", "ULocale: the given ulocale."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs an IslamicCalendar based on the current time in the default time zone with the given locale.", "history": "Added in API level 24", "FullName": "public IslamicCalendar (ULocale locale)"}, "handleGetMonthLength(int, int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int: The hijri year"], ["int", "int: The hijri month, 0-based"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the length (in days) of the given month.", "history": "added in API level 24", "FullName": "protected int handleGetMonthLength (int extendedYear, int month)"}, "handleGetMonthLength(int,int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int: The hijri year"], ["int", "int: The hijri month, 0-based"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the length (in days) of the given month.", "history": "Added in API level 24", "FullName": "protected int handleGetMonthLength (int extendedYear, int month)"}, "getCalculationType()": {"Returns": [["@B_android#icu#util#IslamicCalendar#CalculationType_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "gets the calculation type for this calendar.", "history": "Added in API level 24", "FullName": "public IslamicCalendar.CalculationType getCalculationType ()"}, "IslamicCalendar(android.icu.util.TimeZone)": {"Returns": [], "Parameters": [["@B_android#icu#util#TimeZone_E@", "TimeZone: the given time zone."]], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Constructs an IslamicCalendar based on the current time in the given time zone with the default FORMAT locale.", "history": "Added in API level 24", "FullName": "public IslamicCalendar (TimeZone zone)"}, "handleGetExtendedYear()": {"Returns": [["int", "the extended year"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the extended year defined by the current fields. This will use the EXTENDED_YEAR field or the YEAR and supra-year fields (such as ERA) specific to the calendar system, depending on which set of fields is newer.", "history": "Added in API level 24", "FullName": "protected int handleGetExtendedYear ()"}, "IslamicCalendar(java.util.Date)": {"Returns": [], "Parameters": [["@B_java#util#Date_E@", "Date: The date to which the new calendar is set."]], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Constructs an IslamicCalendar with the given date set in the default time zone with the default FORMAT locale.", "history": "Added in API level 24", "FullName": "public IslamicCalendar (Date date)"}, "IslamicCalendar(int, int, int, int, int, int)": {"Returns": [], "Parameters": [["int", "int: the value used to set the @B_android#icu#util#Calendar#YEAR_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#MONTH_E@ time field in the calendar. Note that the month value is 0-based. e.g., 0 for Muharram."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#DATE_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#HOUR_OF_DAY_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#MINUTE_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#SECOND_E@ time field in the calendar."]], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Constructs an IslamicCalendar with the given date and time set for the default time zone with the default FORMAT locale.", "history": "added in API level 24", "FullName": "public IslamicCalendar (int year, int month, int date, int hour, int minute, int second)"}, "IslamicCalendar(android.icu.util.TimeZone,java.util.Locale)": {"Returns": [], "Parameters": [["@B_android#icu#util#TimeZone_E@", "TimeZone: the given time zone."], ["@B_java#util#Locale_E@", "Locale: the given locale."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs an IslamicCalendar based on the current time in the given time zone with the given locale.", "history": "Added in API level 24", "FullName": "public IslamicCalendar (TimeZone zone, Locale aLocale)"}, "handleGetLimit(int,int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int: one of the above field numbers"], ["int", "int: one of MINIMUM, GREATEST_MINIMUM, LEAST_MAXIMUM, or MAXIMUM"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Subclass API for defining limits of different types. Subclasses must implement this method to return limits for the following fields:", "history": "Added in API level 24", "FullName": "protected int handleGetLimit (int field, int limitType)"}, "handleGetYearLength(int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the number of days in the given Islamic year", "history": "Added in API level 24", "FullName": "protected int handleGetYearLength (int extendedYear)"}, "IslamicCalendar(int, int, int)": {"Returns": [], "Parameters": [["int", "int: the value used to set the @B_android#icu#util#Calendar#YEAR_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#MONTH_E@ time field in the calendar. Note that the month value is 0-based. e.g., 0 for Muharram."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#DATE_E@ time field in the calendar."]], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Constructs an IslamicCalendar with the given date set in the default time zone with the default FORMAT locale.", "history": "added in API level 24", "FullName": "public IslamicCalendar (int year, int month, int date)"}, "IslamicCalendar(int,int,int)": {"Returns": [], "Parameters": [["int", "int: the value used to set the @B_android#icu#util#Calendar#YEAR_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#MONTH_E@ time field in the calendar. Note that the month value is 0-based. e.g., 0 for Muharram."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#DATE_E@ time field in the calendar."]], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Constructs an IslamicCalendar with the given date set in the default time zone with the default FORMAT locale.", "history": "Added in API level 24", "FullName": "public IslamicCalendar (int year, int month, int date)"}, "IslamicCalendar(int,int,int,int,int,int)": {"Returns": [], "Parameters": [["int", "int: the value used to set the @B_android#icu#util#Calendar#YEAR_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#MONTH_E@ time field in the calendar. Note that the month value is 0-based. e.g., 0 for Muharram."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#DATE_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#HOUR_OF_DAY_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#MINUTE_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#SECOND_E@ time field in the calendar."]], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Constructs an IslamicCalendar with the given date and time set for the default time zone with the default FORMAT locale.", "history": "Added in API level 24", "FullName": "public IslamicCalendar (int year, int month, int date, int hour, int minute, int second)"}, "getType()": {"Returns": [["@B_java#lang#String_E@", "legacy calendar type name string"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "See type=\"old type name\" for the calendar attribute of locale IDs at http://www.unicode.org/reports/tr35/#Key_Type_Definitions", "history": "Added in API level 24", "FullName": "public String getType ()"}, "handleComputeFields(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override Calendar to compute several fields specific to the Islamic calendar system. These are: ERA YEAR MONTH DAY_OF_MONTH DAY_OF_YEAR EXTENDED_YEAR The DAY_OF_WEEK and DOW_LOCAL fields are already set when this method is called. The getGregorianXxx() methods return Gregorian calendar equivalents for the given Julian day.", "history": "Added in API level 24", "FullName": "protected void handleComputeFields (int julianDay)"}, "IslamicCalendar()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Constructs a default IslamicCalendar using the current time in the default time zone with the default FORMAT locale.", "history": "Added in API level 24", "FullName": "public IslamicCalendar ()"}}, "Inheritance": ["@B_android#icu#util#Calendar_E@"], "ClassName": "android.icu.util.IslamicCalendar", "ClassDesc": "IslamicCalendar is a subclass of Calendar that that implements the Islamic civil and religious calendars. It is used as the civil calendar in most of the Arab world and the liturgical calendar of the Islamic faith worldwide. This calendar is also known as the \"Hijri\" calendar, since it starts at the time of Mohammed's emigration (or \"hijra\") to Medinah on Thursday, July 15, 622 AD (Julian). The Islamic calendar is strictly lunar, and thus an Islamic year of twelve lunar months does not correspond to the solar year used by most other calendar systems, including the Gregorian. An Islamic year is, on average, about 354 days long, so each successive Islamic year starts about 11 days earlier in the corresponding Gregorian year. Each month of the calendar starts when the new moon's crescent is visible at sunset. However, in order to keep the time fields in this class synchronized with those of the other calendars and with local clock time, we treat days and months as beginning at midnight, roughly 6 hours after the corresponding sunset. There are three main variants of the Islamic calendar in existence. The first is the civil calendar, which uses a fixed cycle of alternating 29- and 30-day months, with a leap day added to the last month of 11 out of every 30 years. This calendar is easily calculated and thus predictable in advance, so it is used as the civil calendar in a number of Arab countries. This is the default behavior of a newly-created IslamicCalendar object. The Islamic religious calendar and Saudi Arabia's Umm al-Qura calendar, however, are based on the observation of the crescent moon. It is thus affected by the position at which the observations are made, seasonal variations in the time of sunset, the eccentricities of the moon's orbit, and even the weather at the observation site. This makes it impossible to calculate in advance, and it causes the start of a month in the religious calendar to differ from the civil calendar by up to three days. Using astronomical calculations for the position of the sun and moon, the moon's illumination, and other factors, it is possible to determine the start of a lunar month with a fairly high degree of certainty. However, these calculations are extremely complicated and thus slow, so most algorithms, including the one used here, are only approximations of the true astronomical calculations. At present, the approximations used in this class are fairly simplistic; they will be improved in later versions of the code. Like the Islamic religious calendar, Umm al-Qura is also based on the sighting method of the crescent moon but is standardized by Saudi Arabia. The fixed-cycle civil calendar is used. This class should not be subclassed. IslamicCalendar usually should be instantiated using @B_android#icu#util#Calendar#getInstance_E@ passing in a ULocale with the tag \"@calendar=islamic\" or \"@calendar=islamic-civil\" or \"@calendar=islamic-umalqura\"."}