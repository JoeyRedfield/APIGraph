{"Functions": {"getSystemWindowInsetRight()": {"Returns": [["int", "The right system window inset"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the right system window inset in pixels. The system window inset represents the area of a full-screen window that is partially or fully obscured by the status bar, navigation bar, IME or other system windows.", "history": "added in version 22.0.0", "FullName": "int getSystemWindowInsetRight ()"}, "getStableInsetTop()": {"Returns": [["int", "The top stable inset"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the top stable inset in pixels. The stable inset represents the area of a full-screen window that", "history": "added in version 22.0.0", "FullName": "int getStableInsetTop ()"}, "getSystemWindowInsetLeft()": {"Returns": [["int", "The left system window inset"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the left system window inset in pixels. The system window inset represents the area of a full-screen window that is partially or fully obscured by the status bar, navigation bar, IME or other system windows.", "history": "added in version 22.0.0", "FullName": "int getSystemWindowInsetLeft ()"}, "isRound()": {"Returns": [["boolean", "True if the window is round"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the associated window has a round shape. A round window's left, top, right and bottom edges reach all the way to the associated edges of the window but the corners may not be visible. Views responding to round insets should take care to not lay out critical elements within the corners where they may not be accessible.", "history": "added in version 22.0.0", "FullName": "boolean isRound ()"}, "hasInsets()": {"Returns": [["boolean", "true if any inset values are nonzero"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this WindowInsets has any nonzero insets.", "history": "added in version 22.0.0", "FullName": "boolean hasInsets ()"}, "isConsumed()": {"Returns": [["boolean", "true if the insets have been fully consumed."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check if these insets have been fully consumed. Insets are considered \"consumed\" if the applicable consume* methods have been called such that all insets have been set to zero. This affects propagation of insets through the view hierarchy; insets that have not been fully consumed will continue to propagate down to child views. The result of this method is equivalent to the return value of @B_android#view#View#fitSystemWindows_E@.", "history": "added in version 22.0.0", "FullName": "boolean isConsumed ()"}, "consumeSystemWindowInsets()": {"Returns": [["@B_android#support#v4#view#WindowInsetsCompat_E@", "A modified copy of this WindowInsets"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a copy of this WindowInsets with the system window insets fully consumed.", "history": "added in version 22.0.0", "FullName": "WindowInsetsCompat consumeSystemWindowInsets ()"}, "getSystemWindowInsetTop()": {"Returns": [["int", "The top system window inset"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the top system window inset in pixels. The system window inset represents the area of a full-screen window that is partially or fully obscured by the status bar, navigation bar, IME or other system windows.", "history": "added in version 22.0.0", "FullName": "int getSystemWindowInsetTop ()"}, "hasSystemWindowInsets()": {"Returns": [["boolean", "true if any of the system window inset values are nonzero"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this WindowInsets has nonzero system window insets. The system window inset represents the area of a full-screen window that is partially or fully obscured by the status bar, navigation bar, IME or other system windows.", "history": "added in version 22.0.0", "FullName": "boolean hasSystemWindowInsets ()"}, "getSystemWindowInsetBottom()": {"Returns": [["int", "The bottom system window inset"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the bottom system window inset in pixels. The system window inset represents the area of a full-screen window that is partially or fully obscured by the status bar, navigation bar, IME or other system windows.", "history": "added in version 22.0.0", "FullName": "int getSystemWindowInsetBottom ()"}, "getStableInsetLeft()": {"Returns": [["int", "The left stable inset"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the left stable inset in pixels. The stable inset represents the area of a full-screen window that", "history": "added in version 22.0.0", "FullName": "int getStableInsetLeft ()"}, "consumeStableInsets()": {"Returns": [["@B_android#support#v4#view#WindowInsetsCompat_E@", "A modified copy of this WindowInsetsCompat"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a copy of this WindowInsets with the stable insets fully consumed.", "history": "added in version 22.0.0", "FullName": "WindowInsetsCompat consumeStableInsets ()"}, "replaceSystemWindowInsets(android.graphics.Rect)": {"Returns": [["@B_android#support#v4#view#WindowInsetsCompat_E@", "A modified copy of this WindowInsets"]], "Parameters": [["@B_android#graphics#Rect_E@", "Rect: New system window insets. Each field is the inset in pixels for that edge"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a copy of this WindowInsets with selected system window insets replaced with new values.", "history": "added in version 22.0.0", "FullName": "WindowInsetsCompat replaceSystemWindowInsets (Rect systemWindowInsets)"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if this object is the same as the obj argument; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the reference object with which to compare."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether some other object is \"equal to\" this one. The equals method implements an equivalence relation on non-null object references: It is x, x.equals(x) should return true. It is x and y, x.equals(y) should return true if and only if y.equals(x) returns true. It is x, y, and z, if x.equals(y) returns true and y.equals(z) returns true, then x.equals(z) should return true. It is x and y, multiple invocations of x.equals(y) consistently return true or consistently return false, provided no information used in equals comparisons on the objects is modified. For any non-null reference value x, x.equals(null) should return false. The equals method for class Object implements the most discriminating possible equivalence relation on objects; that is, for any non-null reference values x and y, this method returns true if and only if x and y refer to the same object (x == y has the value true). Note that it is generally necessary to override the hashCode method whenever this method is overridden, so as to maintain the general contract for the hashCode method, which states that equal objects must have equal hash codes.", "history": "", "FullName": "boolean equals (Object o)"}, "hasStableInsets()": {"Returns": [["boolean", "true if any of the stable inset values are nonzero"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this WindowInsets has nonzero stable insets. The stable inset represents the area of a full-screen window that", "history": "added in version 22.0.0", "FullName": "boolean hasStableInsets ()"}, "getStableInsetRight()": {"Returns": [["int", "The right stable inset"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the right stable inset in pixels. The stable inset represents the area of a full-screen window that", "history": "added in version 22.0.0", "FullName": "int getStableInsetRight ()"}, "replaceSystemWindowInsets(int, int, int, int)": {"Returns": [["@B_android#support#v4#view#WindowInsetsCompat_E@", "A modified copy of this WindowInsets"]], "Parameters": [["int", "int: New left inset in pixels"], ["int", "int: New top inset in pixels"], ["int", "int: New right inset in pixels"], ["int", "int: New bottom inset in pixels"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a copy of this WindowInsets with selected system window insets replaced with new values.", "history": "added in version 22.0.0", "FullName": "WindowInsetsCompat replaceSystemWindowInsets (int left, int top, int right, int bottom)"}, "getStableInsetBottom()": {"Returns": [["int", "The bottom stable inset"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the bottom stable inset in pixels. The stable inset represents the area of a full-screen window that", "history": "added in version 22.0.0", "FullName": "int getStableInsetBottom ()"}, "hashCode()": {"Returns": [["int", "a hash code value for this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code value for the object. This method is supported for the benefit of hash tables such as those provided by @B_java#util#HashMap_E@. The general contract of hashCode is: Whenever it is invoked on the same object more than once during an execution of a Java application, the hashCode method must consistently return the same integer, provided no information used in equals comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application. If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result. It is not required that if two objects are unequal according to the @B_java#lang#Object#equals_E@ method, then calling the hashCode method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables. As much as is reasonably practical, the hashCode method defined by class Object does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the Java\u2122 programming language.)", "history": "", "FullName": "int hashCode ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v4.view.WindowInsetsCompat", "ClassDesc": "Describes a set of insets for window content. WindowInsetsCompats are immutable and may be expanded to include more inset types in the future. To adjust insets, use one of the supplied clone methods to obtain a new WindowInsetsCompat instance with the adjusted properties."}