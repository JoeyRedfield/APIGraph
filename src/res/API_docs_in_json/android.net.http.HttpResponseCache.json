{"Functions": {"install(java.io.File,long)": {"Returns": [["@B_android#net#http#HttpResponseCache_E@", "the newly-installed cache"]], "Parameters": [["@B_java#io#File_E@", "File: the directory to hold cache data."], ["long", "long: the maximum size of the cache in bytes."]], "Throws": [["@B_java#io#IOException_E@", "if directory cannot be used for this cache. Most applications should respond to this exception by logging a warning."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new HTTP response cache and sets it as the system default cache.", "history": "Added in API level 14", "FullName": "public static HttpResponseCache install (File directory, long maxSize)"}, "size()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of bytes currently being used to store the values in this cache. This may be greater than the @B_android#net#http#HttpResponseCache#maxSize_E@ if a background deletion is pending. -1 is returned if the size cannot be determined.", "history": "Added in API level 14", "FullName": "public long size ()"}, "put(java.net.URI,java.net.URLConnection)": {"Returns": [["@B_java#net#CacheRequest_E@", "a CacheRequest for recording the response to be cached. Null return indicates that the caller does not intend to cache the response."]], "Parameters": [["@B_java#net#URI_E@", "URI: a URI used to reference the requested network resource"], ["@B_java#net#URLConnection_E@", "URLConnection: - a URLConnection instance that is used to fetch the response to be cached"]], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "The protocol handler calls this method after a resource has been retrieved, and the ResponseCache must decide whether or not to store the resource in its cache. If the resource is to be cached, then put() must return a CacheRequest object which contains an OutputStream that the protocol handler will use to write the resource into the cache. If the resource is not to be cached, then put must return null.", "history": "Added in API level 14", "FullName": "public CacheRequest put (URI uri, URLConnection urlConnection)"}, "getRequestCount()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the total number of HTTP requests that were made. This includes both client requests and requests that were made on the client's behalf to handle a redirects and retries.", "history": "Added in API level 14", "FullName": "public int getRequestCount ()"}, "close()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Uninstalls the cache and releases any active resources. Stored contents will remain on the filesystem.", "history": "Added in API level 14", "FullName": "public void close ()"}, "getInstalled()": {"Returns": [["@B_android#net#http#HttpResponseCache_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the currently-installed HttpResponseCache, or null if there is no cache installed or it is not a HttpResponseCache.", "history": "Added in API level 14", "FullName": "public static HttpResponseCache getInstalled ()"}, "maxSize()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the maximum number of bytes that this cache should use to store its data.", "history": "Added in API level 14", "FullName": "public long maxSize ()"}, "install(java.io.File, long)": {"Returns": [["@B_android#net#http#HttpResponseCache_E@", "the newly-installed cache"]], "Parameters": [["@B_java#io#File_E@", "File: the directory to hold cache data."], ["long", "long: the maximum size of the cache in bytes."]], "Throws": [["@B_java#io#IOException_E@", "if directory cannot be used for this cache. Most applications should respond to this exception by logging a warning."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new HTTP response cache and sets it as the system default cache.", "history": "added in API level 13", "FullName": "public static HttpResponseCache install (File directory, long maxSize)"}, "getNetworkCount()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of HTTP requests that required the network to either supply a response or validate a locally cached response.", "history": "Added in API level 14", "FullName": "public int getNetworkCount ()"}, "delete()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Uninstalls the cache and deletes all of its stored contents.", "history": "Added in API level 14", "FullName": "public void delete ()"}, "put(java.net.URI, java.net.URLConnection)": {"Returns": [["@B_java#net#CacheRequest_E@", "a CacheRequest for recording the response to be cached. Null return indicates that the caller does not intend to cache the response."]], "Parameters": [["@B_java#net#URI_E@", "URI: a URI used to reference the requested network resource"], ["@B_java#net#URLConnection_E@", "URLConnection: - a URLConnection instance that is used to fetch the response to be cached"]], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "The protocol handler calls this method after a resource has been retrieved, and the ResponseCache must decide whether or not to store the resource in its cache. If the resource is to be cached, then put() must return a CacheRequest object which contains an OutputStream that the protocol handler will use to write the resource into the cache. If the resource is not to be cached, then put must return null.", "history": "added in API level 13", "FullName": "public CacheRequest put (URI uri, URLConnection urlConnection)"}, "flush()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Force buffered operations to the filesystem. This ensures that responses written to the cache will be available the next time the cache is opened, even if this process is killed.", "history": "Added in API level 14", "FullName": "public void flush ()"}, "getHitCount()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of HTTP requests whose response was provided by the cache. This may include conditional GET requests that were validated over the network.", "history": "Added in API level 14", "FullName": "public int getHitCount ()"}, "get(java.net.URI,java.lang.String,java.util.Map<java.lang.String,java.util.List<java.lang.String>>)": {"Returns": [["@B_java#net#CacheResponse_E@", "a CacheResponse instance if available from cache, or null otherwise"]], "Parameters": [["@B_java#net#URI_E@", "URI: a URI used to reference the requested network resource"], ["@B_java#lang#String_E@", "String: a String representing the request method"], ["@B_java#util#Map_E@", "Map: - a Map from request header field names to lists of field values representing the current request headers"]], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the cached response based on the requesting uri, request method and request headers. Typically this method is called by the protocol handler before it sends out the request to get the network resource. If a cached response is returned, that resource is used instead.", "history": "Added in API level 14", "FullName": "public CacheResponse get (URI uri, String requestMethod, Map<String, List<String>> requestHeaders)"}}, "Inheritance": ["@B_java#net#ResponseCache_E@"], "ClassName": "android.net.http.HttpResponseCache", "ClassDesc": "Caches HTTP and HTTPS responses to the filesystem so they may be reused, saving time and bandwidth. This class supports @B_java#net#HttpURLConnection_E@ and @B_javax#net#ssl#HttpsURLConnection_E@; there is no platform-provided cache for DefaultHttpClient or AndroidHttpClient. Installation and instances are thread safe. @B_android#content#Context#getCacheDir_E@ of the filesystem}: For some applications it may be preferable to create the cache in the external storage directory. @B_android#content#Context#getExternalCacheDir_E@. If this method returns null, your application should fall back to either not caching or caching on non-external storage. If the external storage is removed during use, the cache hit rate will drop to zero and ongoing cache reads will fail. Flushing the cache forces its data to the filesystem. This ensures that all responses written to the cache will be readable the next time the activity starts. Sometimes a request will result in a conditional cache hit. If the cache contains a stale copy of the response, the client will issue a conditional GET. The server will then send either the updated response if it has changed, or a short 'not modified' response if the client's copy is still valid. Such responses increment both the network count and hit count. The best way to improve the cache hit rate is by configuring the web server to return cacheable responses. Although this client honors all no-cache directive: max-age=0 instead: only-if-cached directive: max-stale directive with the maximum staleness in seconds:"}