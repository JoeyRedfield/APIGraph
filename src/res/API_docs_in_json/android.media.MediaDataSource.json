{"Functions": {"MediaDataSource()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 23", "FullName": "public MediaDataSource ()"}, "getSize()": {"Returns": [["long", "the size of data source in bytes, or -1 if the size is unknown."]], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", "on fatal errors"]], "SeeAlso": [], "Permissions": [], "Description": "Called to get the size of the data source.", "history": "Added in API level 23", "FullName": "public abstract long getSize ()"}, "readAt(long,byte[],int,int)": {"Returns": [["int", "the number of bytes read, or -1 if end of stream is reached."]], "Parameters": [["long", "long: the position in the data source to read from."], ["byte[]", "byte: the buffer to read the data into."], ["int", "int: the offset within buffer to read the data into."], ["int", "int: the number of bytes to read."]], "Throws": [["@B_java#io#IOException_E@", "on fatal errors."]], "SeeAlso": [], "Permissions": [], "Description": "Called to request data from the given position. Implementations should fill buffer with up to size bytes of data, and return the number of valid bytes in the buffer. Return 0 if size is zero (thus no bytes are read). Return -1 to indicate that end of stream is reached.", "history": "Added in API level 23", "FullName": "public abstract int readAt (long position, byte[] buffer, int offset, int size)"}, "readAt(long, byte[], int, int)": {"Returns": [["int", "the number of bytes read, or -1 if there was an error."]], "Parameters": [["long", "long: the position in the data source to read from."], ["byte[]", "byte: the buffer to read the data into."], ["int", "int: the offset within buffer to read the data into."], ["int", "int: the number of bytes to read."]], "Throws": [["@B_java#io#IOException_E@", "on fatal errors."]], "SeeAlso": [], "Permissions": [], "Description": "Called to request data from the given position. Implementations should fill buffer with up to size bytes of data, and return the number of valid bytes in the buffer. Return 0 if size is zero (thus no bytes are read). Return -1 to indicate that end of stream is reached.", "history": "added in API level 23", "FullName": "public abstract int readAt (long position, byte[] buffer, int offset, int size)"}}, "Inheritance": [], "ClassName": "android.media.MediaDataSource", "ClassDesc": "For supplying media data to the framework. Implement this if your app has special requirements for the way media data is obtained. Methods of this interface may be called on multiple different threads. There will be a thread synchronization point between each call to ensure that modifications to the state of your MediaDataSource are visible to future calls. This means you don't need to do your own synchronization unless you're modifying the MediaDataSource from another thread while it's being used by the framework."}