{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 23", "FullName": "public String toString ()"}, "toBuilder()": {"Returns": [["@B_android#telecom#PhoneAccount#Builder_E@", "The builder."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a builder initialized with the current @B_android#telecom#PhoneAccount_E@ instance.", "history": "Added in API level 23", "FullName": "public PhoneAccount.Builder toBuilder ()"}, "getIcon()": {"Returns": [["@B_android#graphics#drawable#Icon_E@", "The icon."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The icon to represent this PhoneAccount.", "history": "Added in API level 23", "FullName": "public Icon getIcon ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 23", "FullName": "public void writeToParcel (Parcel out, int flags)"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 23", "FullName": "public int describeContents ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 23", "FullName": "public void writeToParcel (Parcel out, int flags)"}, "getSubscriptionAddress()": {"Returns": [["@B_android#net#Uri_E@", "The subscription number, suitable for display to the user."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The raw callback number used for this PhoneAccount, as distinct from @B_android#telecom#PhoneAccount#getAddress_E@. For the majority of PhoneAccounts this should be registered as null. It is used by the system for SIM-based PhoneAccount registration where @B_android#telephony#TelephonyManager#setLine1NumberForDisplay_E@ has been used to alter the callback number.", "history": "Added in API level 23", "FullName": "public Uri getSubscriptionAddress ()"}, "isEnabled()": {"Returns": [["boolean", "true if the account is enabled by the user, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether the user has enabled this PhoneAccount or not. This value is only populated for PhoneAccounts returned by @B_android#telecom#TelecomManager#getPhoneAccount_E@.", "history": "Added in API level 23", "FullName": "public boolean isEnabled ()"}, "getLabel()": {"Returns": [["@B_java#lang#CharSequence_E@", "A label for this PhoneAccount."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "A short label describing a PhoneAccount.", "history": "Added in API level 23", "FullName": "public CharSequence getLabel ()"}, "getCapabilities()": {"Returns": [["int", "A bit field of flags describing this PhoneAccount's capabilities."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The capabilities of this PhoneAccount.", "history": "Added in API level 23", "FullName": "public int getCapabilities ()"}, "getHighlightColor()": {"Returns": [["int", "A hexadecimal color value."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "A highlight color to use in displaying information about this PhoneAccount.", "history": "Added in API level 23", "FullName": "public int getHighlightColor ()"}, "builder(android.telecom.PhoneAccountHandle,java.lang.CharSequence)": {"Returns": [["@B_android#telecom#PhoneAccount#Builder_E@", "no returns description in source"]], "Parameters": [["@B_android#telecom#PhoneAccountHandle_E@", "PhoneAccountHandle no parameter comment"], ["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public static PhoneAccount.Builder builder (PhoneAccountHandle accountHandle, CharSequence label)"}, "getSupportedUriSchemes()": {"Returns": [["@B_java#util#List_E@", "The URI schemes."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The URI schemes supported by this PhoneAccount.", "history": "Added in API level 23", "FullName": "public List<String> getSupportedUriSchemes ()"}, "getExtras()": {"Returns": [["@B_android#os#Bundle_E@", "The extras."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The extras associated with this PhoneAccount. A @B_android#telecom#ConnectionService_E@ may provide implementation specific information about the @B_android#telecom#PhoneAccount_E@ via the extras.", "history": "Added in API level 24", "FullName": "public Bundle getExtras ()"}, "supportsUriScheme(java.lang.String)": {"Returns": [["boolean", "true if the PhoneAccount supports calls to/from addresses with the specified URI scheme."]], "Parameters": [["@B_java#lang#String_E@", "String: The URI scheme to check."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Determines if the @B_android#telecom#PhoneAccount_E@ supports calls to/from addresses with a specified URI scheme.", "history": "Added in API level 23", "FullName": "public boolean supportsUriScheme (String uriScheme)"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if this object is the same as the obj argument; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the reference object with which to compare."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether some other object is \"equal to\" this one. The equals method implements an equivalence relation on non-null object references: It is x, x.equals(x) should return true. It is x and y, x.equals(y) should return true if and only if y.equals(x) returns true. It is x, y, and z, if x.equals(y) returns true and y.equals(z) returns true, then x.equals(z) should return true. It is x and y, multiple invocations of x.equals(y) consistently return true or consistently return false, provided no information used in equals comparisons on the objects is modified. For any non-null reference value x, x.equals(null) should return false. The equals method for class Object implements the most discriminating possible equivalence relation on objects; that is, for any non-null reference values x and y, this method returns true if and only if x and y refer to the same object (x == y has the value true). Note that it is generally necessary to override the hashCode method whenever this method is overridden, so as to maintain the general contract for the hashCode method, which states that equal objects must have equal hash codes.", "history": "Added in API level 23", "FullName": "public boolean equals (Object o)"}, "getAccountHandle()": {"Returns": [["@B_android#telecom#PhoneAccountHandle_E@", "A PhoneAccountHandle."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The unique identifier of this PhoneAccount.", "history": "Added in API level 23", "FullName": "public PhoneAccountHandle getAccountHandle ()"}, "hasCapabilities(int)": {"Returns": [["boolean", "true if the phone account has the capability."]], "Parameters": [["int", "int: The capabilities to check."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Determines if this PhoneAccount has a capabilities specified by the passed in bit mask.", "history": "Added in API level 23", "FullName": "public boolean hasCapabilities (int capability)"}, "getShortDescription()": {"Returns": [["@B_java#lang#CharSequence_E@", "A description for this PhoneAccount."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "A short paragraph describing this PhoneAccount.", "history": "Added in API level 23", "FullName": "public CharSequence getShortDescription ()"}, "getAddress()": {"Returns": [["@B_android#net#Uri_E@", "A address expressed as a Uri, for example, a phone number."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The address (e.g., a phone number) associated with this PhoneAccount. This represents the destination from which outgoing calls using this PhoneAccount will appear to come, if applicable, and the destination to which incoming calls using this PhoneAccount may be addressed.", "history": "Added in API level 23", "FullName": "public Uri getAddress ()"}, "hashCode()": {"Returns": [["int", "a hash code value for this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code value for the object. This method is supported for the benefit of hash tables such as those provided by @B_java#util#HashMap_E@. The general contract of hashCode is: Whenever it is invoked on the same object more than once during an execution of a Java application, the hashCode method must consistently return the same integer, provided no information used in equals comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application. If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result. It is not required that if two objects are unequal according to the @B_java#lang#Object#equals_E@ method, then calling the hashCode method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables. As much as is reasonably practical, the hashCode method defined by class Object does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the Java\u2122 programming language.)", "history": "Added in API level 23", "FullName": "public int hashCode ()"}}, "Inheritance": [], "ClassName": "android.telecom.PhoneAccount", "ClassDesc": "Represents a distinct method to place or receive a phone call. Apps which can place calls and want those calls to be integrated into the dialer and in-call UI should build an instance of this class and register it with the system using @B_android#telecom#TelecomManager_E@. @B_android#telecom#TelecomManager_E@ uses registered @B_android#telecom#PhoneAccount_E@s to present the user with alternative options when placing a phone call. When building a @B_android#telecom#PhoneAccount_E@, the app should supply a valid @B_android#telecom#PhoneAccountHandle_E@ that references the connection service implementation Telecom will use to interact with the app."}