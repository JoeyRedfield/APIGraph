{"Functions": {"getReason()": {"Returns": [["@B_java#lang#String_E@", "The reason string"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string explaining why the input string could not be parsed.", "history": "Added in API level 1", "FullName": "public String getReason ()"}, "URISyntaxException(java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The input string"], ["@B_java#lang#String_E@", "String: A string explaining why the input could not be parsed"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If either the input or reason strings are null"]], "SeeAlso": [], "Permissions": [], "Description": "Constructs an instance from the given input string and reason. The resulting object will have an error index of -1.", "history": "Added in API level 1", "FullName": "public URISyntaxException (String input, String reason)"}, "getMessage()": {"Returns": [["@B_java#lang#String_E@", "A string describing the parse error"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string describing the parse error. The resulting string consists of the reason string followed by a colon character (':'), a space, and the input string. If the error index is defined then the string \" at index \" followed by the index, in decimal, is inserted after the reason string and before the colon character.", "history": "Added in API level 1", "FullName": "public String getMessage ()"}, "getInput()": {"Returns": [["@B_java#lang#String_E@", "The input string"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the input string.", "history": "Added in API level 1", "FullName": "public String getInput ()"}, "URISyntaxException(java.lang.String,java.lang.String,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The input string"], ["@B_java#lang#String_E@", "String: A string explaining why the input could not be parsed"], ["int", "int: The index at which the parse error occurred, or -1 if the index is not known"]], "Throws": [["@B_java#lang#NullPointerException_E@", "If either the input or reason strings are null"], ["@B_java#lang#IllegalArgumentException_E@", "If the error index is less than -1"]], "SeeAlso": [], "Permissions": [], "Description": "Constructs an instance from the given input string, reason, and error index.", "history": "Added in API level 1", "FullName": "public URISyntaxException (String input, String reason, int index)"}, "getIndex()": {"Returns": [["int", "The error index"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an index into the input string of the position at which the parse error occurred, or -1 if this position is not known.", "history": "Added in API level 1", "FullName": "public int getIndex ()"}}, "Inheritance": ["@B_java#lang#Throwable_E@", "@B_java#lang#Exception_E@"], "ClassName": "java.net.URISyntaxException", "ClassDesc": "Checked exception thrown to indicate that a string could not be parsed as a URI reference."}