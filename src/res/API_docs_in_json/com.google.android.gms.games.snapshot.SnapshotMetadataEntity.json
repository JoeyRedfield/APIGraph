{"Functions": {"writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public void writeToParcel (Parcel out, int flags)"}, "getPlayedTime()": {"Returns": [["", "The played time of this snapshot in milliseconds, or @B_com#google#android#gms#games#snapshot#SnapshotMetadata#PLAYED_TIME_UNKNOWN_E@ if not known."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the played time of this snapshot in milliseconds. This value is specified during the update operation. If not known, returns @B_com#google#android#gms#games#snapshot#SnapshotMetadata#PLAYED_TIME_UNKNOWN_E@.", "history": "", "FullName": "public long getPlayedTime ()"}, "getCoverImageAspectRatio()": {"Returns": [["", "The aspect ratio of the cover image, or 0.0f if no image is present."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the aspect ratio of the cover image for this snapshot, if any. This is the ratio of width to height, so a value > 1.0f indicates a landscape image while a value < 1.0f indicates a portrait image. If the snapshot has no cover image, this will return 0.0f.", "history": "", "FullName": "public float getCoverImageAspectRatio ()"}, "getOwner()": {"Returns": [["", "The owning player."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the player that owns this snapshot.", "history": "", "FullName": "public Player getOwner ()"}, "getDescription()": {"Returns": [["", "The description of this snapshot."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the description of this snapshot.", "history": "", "FullName": "public String getDescription ()"}, "describeContents()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int describeContents ()"}, "freeze()": {"Returns": [["", "A concrete implementation of the data object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Freeze a volatile representation into an immutable representation. Objects returned from this call are safe to cache. Note that the output of freeze may not be identical to the parent object, but should be equal. In other words:", "history": "", "FullName": "public SnapshotMetadata freeze ()"}, "getGame()": {"Returns": [["", "The associated game."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the game associated with this snapshot.", "history": "", "FullName": "public Game getGame ()"}, "hasChangePending()": {"Returns": [["", "Whether or not this snapshot has any outstanding changes."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether or not this snapshot has any changes pending that have not been uploaded to the server. Once all changes have been flushed to the server, this will return false.", "history": "", "FullName": "public boolean hasChangePending ()"}, "getUniqueName()": {"Returns": [["", "Unique identifier of this snapshot."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the unique identifier of this snapshot. This value can be passed to @B_com#google#android#gms#games#snapshot#Snapshots#open_E@ to open the snapshot for modification. This name should be unique within the scope of the application.", "history": "", "FullName": "public String getUniqueName ()"}, "getCoverImageUri()": {"Returns": [["", "A URI that can be used to load this snapshot's cover image, if one is present."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves an image URI that can be used to load the snapshot's cover image. Returns null if the snapshot has no cover image. To retrieve the Image from the @B_android#net#Uri_E@, use @B_com#google#android#gms#common#images#ImageManager_E@.", "history": "", "FullName": "public Uri getCoverImageUri ()"}, "toString()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public String toString ()"}, "getSnapshotId()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public String getSnapshotId ()"}, "getDescription(android.database.CharArrayBuffer)": {"Returns": [], "Parameters": [["CharArrayBuffer", "The buffer to load the data into."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Loads the snapshot description into the given @B_android#database#CharArrayBuffer_E@.", "history": "", "FullName": "public void getDescription (CharArrayBuffer dataOut)"}, "getProgressValue()": {"Returns": [["", "Progress value for this snapshot, or @B_com#google#android#gms#games#snapshot#SnapshotMetadata#PROGRESS_VALUE_UNKNOWN_E@ if not known."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the progress value for this snapshot. Can be used to provide automatic conflict resolution (see @B_com#google#android#gms#games#snapshot#Snapshots#RESOLUTION_POLICY_HIGHEST_PROGRESS_E@). If not known, returns @B_com#google#android#gms#games#snapshot#SnapshotMetadata#PROGRESS_VALUE_UNKNOWN_E@.", "history": "", "FullName": "public long getProgressValue ()"}, "equals(java.lang.Object)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public boolean equals (Object obj)"}, "getLastModifiedTimestamp()": {"Returns": [["", "The last modification time of this snapshot."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the last time this snapshot was modified, in millis since epoch.", "history": "", "FullName": "public long getLastModifiedTimestamp ()"}, "isDataValid()": {"Returns": [["", "whether or not the object is valid for use."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check to see if this object is valid for use. If the object is still volatile, this method will indicate whether or not the object can be safely used. The output of a call to @B_com#google#android#gms#common#data#Freezable#freeze_E@ will always be valid.", "history": "", "FullName": "public boolean isDataValid ()"}, "hashCode()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int hashCode ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.games.snapshot.SnapshotMetadataEntity", "ClassDesc": "Data object representing the metadata for a saved game. This is immutable, and therefore safe to cache or store. Note, however, that the data it represents may grow stale. This class exists solely to support parceling these objects and should not be used directly."}