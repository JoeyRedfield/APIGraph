{"Functions": {"equals(java.lang.Object)": {"Returns": [["boolean", "true if the specified object is equal to this set"]], "Parameters": [["@B_java#lang#Object_E@", "Object: object to be compared for equality with this set"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Compares the specified object with this set for equality. Returns This implementation first checks if the specified object is this set; if so it returns", "history": "Added in API level 1", "FullName": "public boolean equals (Object o)"}, "removeAll(java.util.Collection<?>)": {"Returns": [["boolean", "true if this set changed as a result of the call"]], "Parameters": [["@B_java#util#Collection_E@", "Collection: collection containing elements to be removed from this set"]], "Throws": [["@B_java#lang#UnsupportedOperationException_E@", "if the removeAll operation is not supported by this set"], ["@B_java#lang#ClassCastException_E@", "if the class of an element of this set is incompatible with the specified collection (optional)"], ["@B_java#lang#NullPointerException_E@", "if this set contains a null element and the specified collection does not permit null elements (optional), or if the specified collection is null"]], "SeeAlso": ["@B_java#util#AbstractCollection#remove_E@", "@B_java#util#AbstractCollection#contains_E@"], "Permissions": [], "Description": "Removes from this set all of its elements that are contained in the specified collection (optional operation). If the specified collection is also a set, this operation effectively modifies this set so that its value is the This implementation determines which is the smaller of this set and the specified collection, by invoking the Note that this implementation will throw an", "history": "Added in API level 1", "FullName": "public boolean removeAll (Collection<?> c)"}, "AbstractSet()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sole constructor. (For invocation by subclass constructors, typically implicit.)", "history": "Added in API level 1", "FullName": "protected AbstractSet ()"}, "hashCode()": {"Returns": [["int", "the hash code value for this set"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#lang#Object#equals_E@", "@B_java#util#Set#equals_E@"], "Permissions": [], "Description": "Returns the hash code value for this set. The hash code of a set is defined to be the sum of the hash codes of the elements in the set, where the hash code of a @B_java#lang#Object#hashCode_E@. This implementation iterates over the set, calling the", "history": "Added in API level 1", "FullName": "public int hashCode ()"}}, "Inheritance": ["@B_java#util#AbstractCollection_E@"], "ClassName": "java.util.AbstractSet<E>", "ClassDesc": "This class provides a skeletal implementation of the The process of implementing a set by extending this class is identical to that of implementing a Collection by extending AbstractCollection, except that all of the methods and constructors in subclasses of this class must obey the additional constraints imposed by the Note that this class does not override any of the implementations from the This class is a member of the"}