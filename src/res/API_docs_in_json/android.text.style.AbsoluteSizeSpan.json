{"Functions": {"AbsoluteSizeSpan(int,boolean)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the text size to size physical pixels, or to size device-independent pixels if dip is true.", "history": "Added in API level 5", "FullName": "public AbsoluteSizeSpan (int size, boolean dip)"}, "AbsoluteSizeSpan(int, boolean)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the text size to size physical pixels, or to size device-independent pixels if dip is true.", "history": "added in API level 5", "FullName": "public AbsoluteSizeSpan (int size, boolean dip)"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: This value must never be null."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 3", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 3", "FullName": "public int describeContents ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written.This value must never be null."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 3", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getSize()": {"Returns": [["int", "the text size, either in physical pixels or device-independent pixels."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#text#style#AbsoluteSizeSpan#AbsoluteSizeSpan_E@"], "Permissions": [], "Description": "Get the text size. This is in physical pixels if @B_android#text#style#AbsoluteSizeSpan#getDip_E@ returns false or in device-independent pixels if @B_android#text#style#AbsoluteSizeSpan#getDip_E@ returns true.", "history": "Added in API level 1", "FullName": "public int getSize ()"}, "AbsoluteSizeSpan(android.os.Parcel)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an @B_android#text#style#AbsoluteSizeSpan_E@ from a parcel.", "history": "Added in API level 3", "FullName": "public AbsoluteSizeSpan (Parcel src)"}, "getSpanTypeId()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a special type identifier for this span class.", "history": "Added in API level 3", "FullName": "public int getSpanTypeId ()"}, "getDip()": {"Returns": [["boolean", "true if the size is in device-independent pixels, false otherwise"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#text#style#AbsoluteSizeSpan#AbsoluteSizeSpan_E@"], "Permissions": [], "Description": "Returns whether the size is in device-independent pixels or not, depending on the dip flag passed in @B_android#text#style#AbsoluteSizeSpan#AbsoluteSizeSpan_E@", "history": "Added in API level 5", "FullName": "public boolean getDip ()"}, "AbsoluteSizeSpan(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the text size to size physical pixels.", "history": "Added in API level 1", "FullName": "public AbsoluteSizeSpan (int size)"}, "updateMeasureState(android.text.TextPaint)": {"Returns": [], "Parameters": [["@B_android#text#TextPaint_E@", "TextPaint: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Classes that extend MetricAffectingSpan implement this method to update the text formatting in a way that can change the width or height of characters.", "history": "Added in API level 1", "FullName": "public void updateMeasureState (TextPaint ds)"}, "updateDrawState(android.text.TextPaint)": {"Returns": [], "Parameters": [["@B_android#text#TextPaint_E@", "TextPaint: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public void updateDrawState (TextPaint ds)"}}, "Inheritance": ["@B_android#text#style#CharacterStyle_E@", "@B_android#text#style#MetricAffectingSpan_E@"], "ClassName": "android.text.style.AbsoluteSizeSpan", "ClassDesc": "A span that changes the size of the text it's attached to. For example, the size of the text can be changed to 55dp like this:"}