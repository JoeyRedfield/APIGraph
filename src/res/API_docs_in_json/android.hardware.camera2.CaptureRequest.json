{"Functions": {"writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 21", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getKeys()": {"Returns": [["@B_java#util#List_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a list of the keys contained in this map. The list returned is not modifiable, so any attempts to modify it will throw a UnsupportedOperationException. All values retrieved by a key from this list with #get are guaranteed to be non-null. Each key is only listed once in the list. The order of the keys is undefined.", "history": "Added in API level 21", "FullName": "public List<Key<?>> getKeys ()"}, "getTag()": {"Returns": [["@B_java#lang#Object_E@", "the last tag Object set on this request, or null if no tag has been set."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#hardware#camera2#CaptureRequest#Builder#setTag_E@"], "Permissions": [], "Description": "Retrieve the tag for this request, if any. This tag is not used for anything by the camera device, but can be used by an application to easily identify a CaptureRequest when it is returned by @B_android#hardware#camera2#CameraCaptureSession#CaptureCallback#onCaptureCompleted_E@", "history": "Added in API level 21", "FullName": "public Object getTag ()"}, "get(android.hardware.camera2.CaptureRequest.Key<T>)": {"Returns": [["T", "The value of that key, or null if the field is not set."]], "Parameters": [["@B_android#hardware#camera2#CaptureRequest#Key_E@", "Key: The result field to read."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the key was not valid"]], "SeeAlso": [], "Permissions": [], "Description": "Get a capture request field value. The field definitions can be found in @B_android#hardware#camera2#CaptureRequest_E@. Querying the value for the same key more than once will return a value which is equal to the previous queried value.", "history": "Added in API level 21", "FullName": "public T get (Key<T> key)"}, "equals(java.lang.Object)": {"Returns": [["boolean", "True if the requests are the same, false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: Another instance of CaptureRequest."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Determine whether this CaptureRequest is equal to another CaptureRequest. A request is considered equal to another is if it's set of key/values is equal, it's list of output surfaces is equal, the user tag is equal, and the return values of isReprocess() are equal.", "history": "Added in API level 21", "FullName": "public boolean equals (Object other)"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 21", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "isReprocess()": {"Returns": [["boolean", "true if this is a reprocess capture request. false if this is not a reprocess capture request."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#hardware#camera2#CameraDevice#createReprocessCaptureRequest_E@"], "Permissions": [], "Description": "Determine if this is a reprocess capture request. A reprocess capture request produces output images from an input buffer from the @B_android#hardware#camera2#CameraCaptureSession_E@'s input @B_android#view#Surface_E@. A reprocess capture request can be created by @B_android#hardware#camera2#CameraDevice#createReprocessCaptureRequest_E@.", "history": "Added in API level 23", "FullName": "public boolean isReprocess ()"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 21", "FullName": "public int describeContents ()"}, "hashCode()": {"Returns": [["int", "a hash code value for this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code value for the object. This method is supported for the benefit of hash tables such as those provided by @B_java#util#HashMap_E@. The general contract of hashCode is: Whenever it is invoked on the same object more than once during an execution of a Java application, the hashCode method must consistently return the same integer, provided no information used in equals comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application. If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result. It is not required that if two objects are unequal according to the @B_java#lang#Object#equals_E@ method, then calling the hashCode method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables. As much as is reasonably practical, the hashCode method defined by class Object does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the Java\u2122 programming language.)", "history": "Added in API level 21", "FullName": "public int hashCode ()"}}, "Inheritance": ["@B_android#hardware#camera2#CameraMetadata_E@"], "ClassName": "android.hardware.camera2.CaptureRequest", "ClassDesc": "An immutable package of settings and outputs needed to capture a single image from the camera device. Contains the configuration for the capture hardware (sensor, lens, flash), the processing pipeline, the control algorithms, and the output buffers. Also contains the list of target Surfaces to send image data to for this capture. CaptureRequests can be created by using a @B_android#hardware#camera2#CaptureRequest#Builder_E@ instance, obtained by calling @B_android#hardware#camera2#CameraDevice#createCaptureRequest_E@ CaptureRequests are given to @B_android#hardware#camera2#CameraCaptureSession#capture_E@ or @B_android#hardware#camera2#CameraCaptureSession#setRepeatingRequest_E@ to capture images from a camera. Each request can specify a different subset of target Surfaces for the camera to send the captured data to. All the surfaces used in a request must be part of the surface list given to the last call to @B_android#hardware#camera2#CameraDevice#createCaptureSession_E@, when the request is submitted to the session. For example, a request meant for repeating preview might only include the Surface for the preview SurfaceView or SurfaceTexture, while a high-resolution still capture would also include a Surface from a ImageReader configured for high-resolution JPEG images. A reprocess capture request allows a previously-captured image from the camera device to be sent back to the device for further processing. It can be created with @B_android#hardware#camera2#CameraDevice#createReprocessCaptureRequest_E@, and used with a reprocessable capture session created with @B_android#hardware#camera2#CameraDevice#createReprocessableCaptureSession_E@."}