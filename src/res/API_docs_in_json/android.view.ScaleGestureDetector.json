{"Functions": {"ScaleGestureDetector(android.content.Context,android.view.ScaleGestureDetector.OnScaleGestureListener)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: the application's context"], ["@B_android#view#ScaleGestureDetector#OnScaleGestureListener_E@", "ScaleGestureDetector.OnScaleGestureListener: the listener invoked for all the callbacks, this must not be null."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if listener is null."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a ScaleGestureDetector with the supplied listener. You may only use this constructor from a @B_android#os#Looper_E@ thread.", "history": "Added in API level 8", "FullName": "public ScaleGestureDetector (Context context, ScaleGestureDetector.OnScaleGestureListener listener)"}, "getCurrentSpan()": {"Returns": [["float", "Distance between pointers in pixels."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the average distance between each of the pointers forming the gesture in progress through the focal point.", "history": "Added in API level 8", "FullName": "public float getCurrentSpan ()"}, "getPreviousSpan()": {"Returns": [["float", "Previous distance between pointers in pixels."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the previous average distance between each of the pointers forming the gesture in progress through the focal point.", "history": "Added in API level 8", "FullName": "public float getPreviousSpan ()"}, "getEventTime()": {"Returns": [["long", "Current event time in milliseconds."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the event time of the current event being processed.", "history": "Added in API level 8", "FullName": "public long getEventTime ()"}, "setStylusScaleEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true to enable stylus scaling, false to disable."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether the associates @B_android#view#ScaleGestureDetector#OnScaleGestureListener_E@ should receive onScale callbacks when the user uses a stylus and presses the button. Note that this is enabled by default if the app targets API 23 and newer.", "history": "Added in API level 23", "FullName": "public void setStylusScaleEnabled (boolean scales)"}, "isStylusScaleEnabled()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#view#ScaleGestureDetector#setStylusScaleEnabled_E@"], "Permissions": [], "Description": "Return whether the stylus scale gesture, in which the user uses a stylus and presses the button, should perform scaling.", "history": "Added in API level 23", "FullName": "public boolean isStylusScaleEnabled ()"}, "setQuickScaleEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true to enable quick scaling, false to disable"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set whether the associated @B_android#view#ScaleGestureDetector#OnScaleGestureListener_E@ should receive onScale callbacks when the user performs a doubleTap followed by a swipe. Note that this is enabled by default if the app targets API 19 and newer.", "history": "Added in API level 19", "FullName": "public void setQuickScaleEnabled (boolean scales)"}, "isQuickScaleEnabled()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#view#ScaleGestureDetector#setQuickScaleEnabled_E@"], "Permissions": [], "Description": "Return whether the quick scale gesture, in which the user performs a double tap followed by a swipe, should perform scaling. .", "history": "Added in API level 19", "FullName": "public boolean isQuickScaleEnabled ()"}, "getCurrentSpanY()": {"Returns": [["float", "Distance between pointers in pixels."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the average Y distance between each of the pointers forming the gesture in progress through the focal point.", "history": "Added in API level 11", "FullName": "public float getCurrentSpanY ()"}, "onTouchEvent(android.view.MotionEvent)": {"Returns": [["boolean", "true if the event was processed and the detector wants to receive the rest of the MotionEvents in this event stream."]], "Parameters": [["@B_android#view#MotionEvent_E@", "MotionEvent: The event to process"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Accepts MotionEvents and dispatches events to a @B_android#view#ScaleGestureDetector#OnScaleGestureListener_E@ when appropriate. Applications should pass a complete and consistent event stream to this method. A complete and consistent event stream involves all MotionEvents from the initial ACTION_DOWN to the final ACTION_UP or ACTION_CANCEL.", "history": "Added in API level 8", "FullName": "public boolean onTouchEvent (MotionEvent event)"}, "ScaleGestureDetector(android.content.Context,android.view.ScaleGestureDetector.OnScaleGestureListener,android.os.Handler)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: the application's context"], ["@B_android#view#ScaleGestureDetector#OnScaleGestureListener_E@", "ScaleGestureDetector.OnScaleGestureListener: the listener invoked for all the callbacks, this must not be null."], ["@B_android#os#Handler_E@", "Handler: the handler to use for running deferred listener events."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if listener is null."]], "SeeAlso": ["@B_android#os#Handler#Handler_E@"], "Permissions": [], "Description": "Creates a ScaleGestureDetector with the supplied listener.", "history": "Added in API level 19", "FullName": "public ScaleGestureDetector (Context context, ScaleGestureDetector.OnScaleGestureListener listener, Handler handler)"}, "getScaleFactor()": {"Returns": [["float", "The current scaling factor."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the scaling factor from the previous scale event to the current event. This value is defined as (@B_android#view#ScaleGestureDetector#getCurrentSpan_E@ / @B_android#view#ScaleGestureDetector#getPreviousSpan_E@).", "history": "Added in API level 8", "FullName": "public float getScaleFactor ()"}, "isInProgress()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if a scale gesture is in progress.", "history": "Added in API level 8", "FullName": "public boolean isInProgress ()"}, "getPreviousSpanX()": {"Returns": [["float", "Previous distance between pointers in pixels."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the previous average X distance between each of the pointers forming the gesture in progress through the focal point.", "history": "Added in API level 11", "FullName": "public float getPreviousSpanX ()"}, "getCurrentSpanX()": {"Returns": [["float", "Distance between pointers in pixels."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the average X distance between each of the pointers forming the gesture in progress through the focal point.", "history": "Added in API level 11", "FullName": "public float getCurrentSpanX ()"}, "getFocusY()": {"Returns": [["float", "Y coordinate of the focal point in pixels."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the Y coordinate of the current gesture's focal point. If a gesture is in progress, the focal point is between each of the pointers forming the gesture. If @B_android#view#ScaleGestureDetector#isInProgress_E@ would return false, the result of this function is undefined.", "history": "Added in API level 8", "FullName": "public float getFocusY ()"}, "getPreviousSpanY()": {"Returns": [["float", "Previous distance between pointers in pixels."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the previous average Y distance between each of the pointers forming the gesture in progress through the focal point.", "history": "Added in API level 11", "FullName": "public float getPreviousSpanY ()"}, "getTimeDelta()": {"Returns": [["long", "Time difference since the last scaling event in milliseconds."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the time difference in milliseconds between the previous accepted scaling event and the current scaling event.", "history": "Added in API level 8", "FullName": "public long getTimeDelta ()"}, "getFocusX()": {"Returns": [["float", "X coordinate of the focal point in pixels."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the X coordinate of the current gesture's focal point. If a gesture is in progress, the focal point is between each of the pointers forming the gesture. If @B_android#view#ScaleGestureDetector#isInProgress_E@ would return false, the result of this function is undefined.", "history": "Added in API level 8", "FullName": "public float getFocusX ()"}}, "Inheritance": [], "ClassName": "android.view.ScaleGestureDetector", "ClassDesc": "Detects scaling transformation gestures using the supplied @B_android#view#MotionEvent_E@s. The @B_android#view#ScaleGestureDetector#OnScaleGestureListener_E@ callback will notify users when a particular gesture event has occurred. This class should only be used with @B_android#view#MotionEvent_E@s reported via touch. To use this class: Create an instance of the ScaleGestureDetector for your @B_android#view#View_E@ In the @B_android#view#View#onTouchEvent_E@ method ensure you call @B_android#view#ScaleGestureDetector#onTouchEvent_E@. The methods defined in your callback will be executed when the events occur."}