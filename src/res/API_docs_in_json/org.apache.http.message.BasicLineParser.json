{"Functions": {"createProtocolVersion(int, int)": {"Returns": [["", "the protocol version"]], "Parameters": [["int", "the major version number, for example 1 in HTTP/1.0"], ["int", "the minor version number, for example 0 in HTTP/1.0"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a protocol version. Called from @B_org#apache#http#message#BasicLineParser#parseProtocolVersion_E@.", "history": "Added in API level 1", "FullName": "protected ProtocolVersion createProtocolVersion (int major, int minor)"}, "parseStatusLine(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)": {"Returns": [["", "the parsed status line"]], "Parameters": [["@B_org#apache#http#util#CharArrayBuffer_E@", "a buffer holding the line to parse"], ["@B_org#apache#http#message#ParserCursor_E@", "the parser cursor containing the current position and the bounds within the buffer for the parsing operation"]], "Throws": [["@B_org#apache#http#ParseException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Parses a status line.", "history": "Added in API level 1", "FullName": "public StatusLine parseStatusLine (CharArrayBuffer buffer, ParserCursor cursor)"}, "parseProtocolVersion(java.lang.String, org.apache.http.message.LineParser)": {"Returns": [], "Parameters": [], "Throws": [["@B_org#apache#http#ParseException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public static final ProtocolVersion parseProtocolVersion (String value, LineParser parser)"}, "skipWhitespace(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Helper to skip whitespace.", "history": "Added in API level 1", "FullName": "protected void skipWhitespace (CharArrayBuffer buffer, ParserCursor cursor)"}, "parseHeader(org.apache.http.util.CharArrayBuffer)": {"Returns": [["", "the header in the argument buffer. The returned object MAY be a wrapper for the argument buffer. The argument buffer MUST NOT be re-used or changed afterwards."]], "Parameters": [["@B_org#apache#http#util#CharArrayBuffer_E@", "a buffer holding the full header line. This buffer MUST NOT be re-used afterwards, since the returned object may reference the contents later."]], "Throws": [["@B_org#apache#http#ParseException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Creates a header from a line. The full header line is expected here. Header continuation lines must be joined by the caller before invoking this method.", "history": "Added in API level 1", "FullName": "public Header parseHeader (CharArrayBuffer buffer)"}, "BasicLineParser(org.apache.http.ProtocolVersion)": {"Returns": [], "Parameters": [["@B_org#apache#http#ProtocolVersion_E@", "a version of the protocol to parse, or null for HTTP. The actual version is not relevant, only the protocol name."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new line parser for the given HTTP-like protocol.", "history": "Added in API level 1", "FullName": "public BasicLineParser (ProtocolVersion proto)"}, "hasProtocolVersion(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)": {"Returns": [["", "true if there is a protocol version at the argument index (possibly ignoring whitespace), false otherwise"]], "Parameters": [["@B_org#apache#http#util#CharArrayBuffer_E@", "a buffer holding the line to inspect"], ["@B_org#apache#http#message#ParserCursor_E@", "the cursor at which to check for a protocol version, or negative for \"end of line\". Whether the check tolerates whitespace before or after the protocol version is implementation dependent."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether there likely is a protocol version in a line. This method implements a @B_org#apache#http#message#LineParser#parseProtocolVersion_E@ would not detect a parse error. This can be used to detect garbage lines before a request or status line.", "history": "Added in API level 1", "FullName": "public boolean hasProtocolVersion (CharArrayBuffer buffer, ParserCursor cursor)"}, "BasicLineParser()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new line parser for HTTP.", "history": "Added in API level 1", "FullName": "public BasicLineParser ()"}, "createRequestLine(java.lang.String, java.lang.String, org.apache.http.ProtocolVersion)": {"Returns": [["", "a new status line with the given data"]], "Parameters": [["@B_java#lang#String_E@", "the request method"], ["@B_java#lang#String_E@", "the requested URI"], ["@B_org#apache#http#ProtocolVersion_E@", "the protocol version"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Instantiates a new request line. Called from @B_org#apache#http#message#BasicLineParser#parseRequestLine_E@.", "history": "Added in API level 1", "FullName": "protected RequestLine createRequestLine (String method, String uri, ProtocolVersion ver)"}, "createStatusLine(org.apache.http.ProtocolVersion, int, java.lang.String)": {"Returns": [["", "a new status line with the given data"]], "Parameters": [["@B_org#apache#http#ProtocolVersion_E@", "the protocol version"], ["int", "the status code"], ["@B_java#lang#String_E@", "the reason phrase"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Instantiates a new status line. Called from @B_org#apache#http#message#BasicLineParser#parseStatusLine_E@.", "history": "Added in API level 1", "FullName": "protected StatusLine createStatusLine (ProtocolVersion ver, int status, String reason)"}, "parseStatusLine(java.lang.String, org.apache.http.message.LineParser)": {"Returns": [], "Parameters": [], "Throws": [["@B_org#apache#http#ParseException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public static final StatusLine parseStatusLine (String value, LineParser parser)"}, "parseProtocolVersion(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)": {"Returns": [["", "the parsed protocol version"]], "Parameters": [["@B_org#apache#http#util#CharArrayBuffer_E@", "a buffer holding the protocol version to parse"], ["@B_org#apache#http#message#ParserCursor_E@", "the parser cursor containing the current position and the bounds within the buffer for the parsing operation"]], "Throws": [["@B_org#apache#http#ParseException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Parses the textual representation of a protocol version. This is needed for parsing request lines (last element) as well as status lines (first element).", "history": "Added in API level 1", "FullName": "public ProtocolVersion parseProtocolVersion (CharArrayBuffer buffer, ParserCursor cursor)"}, "parseRequestLine(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)": {"Returns": [["", "the parsed request line"]], "Parameters": [["@B_org#apache#http#util#CharArrayBuffer_E@", "a buffer holding the line to parse"], ["@B_org#apache#http#message#ParserCursor_E@", "the parser cursor containing the current position and the bounds within the buffer for the parsing operation"]], "Throws": [["@B_org#apache#http#ParseException_E@", "in case of a parse error"]], "SeeAlso": [], "Permissions": [], "Description": "Parses a request line.", "history": "Added in API level 1", "FullName": "public RequestLine parseRequestLine (CharArrayBuffer buffer, ParserCursor cursor)"}, "parseRequestLine(java.lang.String, org.apache.http.message.LineParser)": {"Returns": [], "Parameters": [], "Throws": [["@B_org#apache#http#ParseException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public static final RequestLine parseRequestLine (String value, LineParser parser)"}, "parseHeader(java.lang.String, org.apache.http.message.LineParser)": {"Returns": [], "Parameters": [], "Throws": [["@B_org#apache#http#ParseException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public static final Header parseHeader (String value, LineParser parser)"}}, "Inheritance": [], "ClassName": "org.apache.http.message.BasicLineParser", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Basic parser for lines in the head section of an HTTP message. There are individual methods for parsing a request line, a status line, or a header line. The lines to parse are passed in memory, the parser does not depend on any specific IO mechanism. Instances of this class are stateless and thread-safe. Derived classes MUST maintain these properties. Note: This class was created by refactoring parsing code located in various other classes. The author tags from those other classes have been replicated here, although the association with the parsing code taken from there has not been traced."}