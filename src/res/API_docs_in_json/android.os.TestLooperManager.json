{"Functions": {"release()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Releases the looper to continue standard looping and processing of messages, no further interactions with TestLooperManager will be allowed after release() has been called.", "history": "Added in API level 26", "FullName": "public void release ()"}, "execute(android.os.Message)": {"Returns": [], "Parameters": [["@B_android#os#Message_E@", "Message no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Executes the given message on the Looper thread this wrapper is attached to. Execution will happen on the Looper's thread (whether it is the current thread or not), but all RuntimeExceptions encountered while executing the message will be thrown on the calling thread.", "history": "Added in API level 26", "FullName": "public void execute (Message message)"}, "hasMessages(android.os.Handler,java.lang.Object,int)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#os#Handler_E@", "Handler: the value of @B_android#os#Message#getTarget_E@"], ["@B_java#lang#Object_E@", "Object: the value of @B_android#os#Message#obj_E@, null for any"], ["int", "int: the value of @B_android#os#Message#what_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if there are any queued messages that match the parameters.", "history": "Added in API level 26", "FullName": "public boolean hasMessages (Handler h, Object object, int what)"}, "getMessageQueue()": {"Returns": [["@B_android#os#MessageQueue_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#os#MessageQueue_E@ this object is wrapping.", "history": "Added in API level 26", "FullName": "public MessageQueue getMessageQueue ()"}, "hasMessages(android.os.Handler,java.lang.Object,java.lang.Runnable)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#os#Handler_E@", "Handler: the value of @B_android#os#Message#getTarget_E@"], ["@B_java#lang#Object_E@", "Object: the value of @B_android#os#Message#obj_E@, null for any"], ["@B_java#lang#Runnable_E@", "Runnable: the value of @B_android#os#Message#getCallback_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if there are any queued messages that match the parameters.", "history": "Added in API level 26", "FullName": "public boolean hasMessages (Handler h, Object object, Runnable r)"}, "next()": {"Returns": [["@B_android#os#Message_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the next message that should be executed by this queue, may block if no messages are ready. Callers should always call @B_android#os#TestLooperManager#recycle_E@ on the message when all interactions with it have completed.", "history": "Added in API level 26", "FullName": "public Message next ()"}, "recycle(android.os.Message)": {"Returns": [], "Parameters": [["@B_android#os#Message_E@", "Message no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called to indicate that a Message returned by @B_android#os#TestLooperManager#next_E@ has been parsed and should be recycled.", "history": "Added in API level 26", "FullName": "public void recycle (Message msg)"}}, "Inheritance": [], "ClassName": "android.os.TestLooperManager", "ClassDesc": "Blocks a looper from executing any messages, and allows the holder of this object to control when and which messages get executed until it is released. A TestLooperManager should be acquired using @B_android#app#Instrumentation#acquireLooperManager_E@. Until @B_android#os#TestLooperManager#release_E@ is called, the Looper thread will not execute any messages except when @B_android#os#TestLooperManager#execute_E@ is called. The test code may use @B_android#os#TestLooperManager#next_E@ to acquire messages that have been queued to this @B_android#os#Looper_E@/@B_android#os#MessageQueue_E@ and then @B_android#os#TestLooperManager#execute_E@ to run any that desires."}