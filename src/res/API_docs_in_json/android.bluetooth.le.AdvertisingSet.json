{"Functions": {"setAdvertisingParameters(android.bluetooth.le.AdvertisingSetParameters)": {"Returns": [], "Parameters": [["@B_android#bluetooth#le#AdvertisingSetParameters_E@", "AdvertisingSetParameters: advertising set parameters."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Update advertising parameters associated with this AdvertisingSet. Must be called when advertising is not active. This method returns immediately, the operation status is delivered through callback.onAdvertisingParametersUpdated.", "history": "Added in API level 26", "FullName": "public void setAdvertisingParameters (AdvertisingSetParameters parameters)"}, "enableAdvertising(boolean, int, int)": {"Returns": [], "Parameters": [["boolean", "boolean: whether the advertising should be enabled (true), or disabled (false)"], ["int", "int: advertising duration, in 10ms unit. Valid range is from 1 (10ms) to 65535 (655,350 ms)"], ["int", "int: maximum number of extended advertising events the controller shall attempt to send prior to terminating the extended advertising, even if the duration has not expired. Valid range is from 1 to 255."]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_ADMIN_E@"], "Description": "Enables Advertising. This method returns immediately, the operation status is delivered through callback.onAdvertisingEnabled(). Requires @B_android#Manifest#permission#BLUETOOTH_ADMIN_E@", "history": "added in API level 26", "FullName": "public void enableAdvertising (boolean enable, int duration, int maxExtendedAdvertisingEvents)"}, "setAdvertisingData(android.bluetooth.le.AdvertiseData)": {"Returns": [], "Parameters": [["@B_android#bluetooth#le#AdvertiseData_E@", "AdvertiseData: Advertisement data to be broadcasted. Size must not exceed @B_android#bluetooth#BluetoothAdapter#getLeMaximumAdvertisingDataLength_E@. If the advertisement is connectable, three bytes will be added for flags. If the update takes place when the advertising set is enabled, the data can be maximum 251 bytes long."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set/update data being Advertised. Make sure that data doesn't exceed the size limit for specified AdvertisingSetParameters. This method returns immediately, the operation status is delivered through callback.onAdvertisingDataSet(). Advertising data must be empty if non-legacy scannable advertising is used.", "history": "Added in API level 26", "FullName": "public void setAdvertisingData (AdvertiseData advertiseData)"}, "enableAdvertising(boolean,int,int)": {"Returns": [], "Parameters": [["boolean", "boolean: whether the advertising should be enabled (true), or disabled (false)"], ["int", "int: advertising duration, in 10ms unit. Valid range is from 1 (10ms) to 65535 (655,350 ms)"], ["int", "int: maximum number of extended advertising events the controller shall attempt to send prior to terminating the extended advertising, even if the duration has not expired. Valid range is from 1 to 255."]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_ADMIN_E@"], "Description": "Enables Advertising. This method returns immediately, the operation status is delivered through callback.onAdvertisingEnabled(). Requires @B_android#Manifest#permission#BLUETOOTH_ADMIN_E@", "history": "Added in API level 26", "FullName": "public void enableAdvertising (boolean enable, int duration, int maxExtendedAdvertisingEvents)"}, "setPeriodicAdvertisingData(android.bluetooth.le.AdvertiseData)": {"Returns": [], "Parameters": [["@B_android#bluetooth#le#AdvertiseData_E@", "AdvertiseData: Periodic advertising data. Size must not exceed @B_android#bluetooth#BluetoothAdapter#getLeMaximumAdvertisingDataLength_E@. If the update takes place when the periodic advertising is enabled for this set, the data can be maximum 251 bytes long."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Used to set periodic advertising data, must be called after setPeriodicAdvertisingParameters, or after advertising was started with periodic advertising data set. This method returns immediately, the operation status is delivered through callback.onPeriodicAdvertisingDataSet().", "history": "Added in API level 26", "FullName": "public void setPeriodicAdvertisingData (AdvertiseData periodicData)"}, "setScanResponseData(android.bluetooth.le.AdvertiseData)": {"Returns": [], "Parameters": [["@B_android#bluetooth#le#AdvertiseData_E@", "AdvertiseData: Scan response associated with the advertisement data. Size must not exceed @B_android#bluetooth#BluetoothAdapter#getLeMaximumAdvertisingDataLength_E@. If the update takes place when the advertising set is enabled, the data can be maximum 251 bytes long."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set/update scan response data. Make sure that data doesn't exceed the size limit for specified AdvertisingSetParameters. This method returns immediately, the operation status is delivered through callback.onScanResponseDataSet().", "history": "Added in API level 26", "FullName": "public void setScanResponseData (AdvertiseData scanResponse)"}, "setPeriodicAdvertisingParameters(android.bluetooth.le.PeriodicAdvertisingParameters)": {"Returns": [], "Parameters": [["@B_android#bluetooth#le#PeriodicAdvertisingParameters_E@", "PeriodicAdvertisingParameters no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Update periodic advertising parameters associated with this set. Must be called when periodic advertising is not enabled. This method returns immediately, the operation status is delivered through callback.onPeriodicAdvertisingParametersUpdated().", "history": "Added in API level 26", "FullName": "public void setPeriodicAdvertisingParameters (PeriodicAdvertisingParameters parameters)"}, "setPeriodicAdvertisingEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: whether the periodic advertising should be enabled (true), or disabled (false)."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Used to enable/disable periodic advertising. This method returns immediately, the operation status is delivered through callback.onPeriodicAdvertisingEnable().", "history": "Added in API level 26", "FullName": "public void setPeriodicAdvertisingEnabled (boolean enable)"}}, "Inheritance": [], "ClassName": "android.bluetooth.le.AdvertisingSet", "ClassDesc": "This class provides a way to control single Bluetooth LE advertising instance. To get an instance of @B_android#bluetooth#le#AdvertisingSet_E@, call the @B_android#bluetooth#le#BluetoothLeAdvertiser#startAdvertisingSet_E@ method. @B_android#Manifest#permission#BLUETOOTH_ADMIN_E@ permission."}