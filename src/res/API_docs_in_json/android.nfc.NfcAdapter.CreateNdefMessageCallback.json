{"Functions": {"createNdefMessage(android.nfc.NfcEvent)": {"Returns": [["@B_android#nfc#NdefMessage_E@", "NDEF message to push, or null to not provide a message"]], "Parameters": [["@B_android#nfc#NfcEvent_E@", "NfcEvent: @B_android#nfc#NfcEvent_E@ with the @B_android#nfc#NfcEvent#nfcAdapter_E@ field set"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called to provide a @B_android#nfc#NdefMessage_E@ to push. This callback is usually made on a binder thread (not the UI thread). Called when this device is in range of another device that might support NDEF push. It allows the application to create the NDEF message only when it is required. NDEF push cannot occur until this method returns, so do not block for too long. The Android operating system will usually show a system UI on top of your activity during this time, so do not try to request input from the user to complete the callback, or provide custom NDEF push UI. The user probably will not see it.", "history": "Added in API level 14 Deprecated in API level 29", "FullName": "public abstract NdefMessage createNdefMessage (NfcEvent event)"}}, "Inheritance": [], "ClassName": "android.nfc.NfcAdapter.CreateNdefMessageCallback", "ClassDesc": "this feature is deprecated. File sharing can work using other technology like Bluetooth. A callback to be invoked when another NFC device capable of NDEF push (Android Beam) is within range. Implement this interface and pass it to @B_android#nfc#NfcAdapter#setNdefPushMessageCallback_E@ in order to create an @B_android#nfc#NdefMessage_E@ at the moment that another device is within range for NFC. Using this callback allows you to create a message with data that might vary based on the content currently visible to the user. Alternatively, you can call @B_android#nfc#NfcAdapter#setNdefPushMessage_E@ if the @B_android#nfc#NdefMessage_E@ always contains the same data."}