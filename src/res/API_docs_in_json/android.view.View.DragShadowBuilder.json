{"Functions": {"View.DragShadowBuilder(android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: A View. Any View in scope can be used."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a shadow image builder based on a View. By default, the resulting drag shadow will have the same appearance and dimensions as the View, with the touch point over the center of the View.", "history": "Added in API level 11", "FullName": "public View.DragShadowBuilder (View view)"}, "getView()": {"Returns": [["@B_android#view#View_E@", "The View object associate with this builder object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the View object that had been passed to the @B_android#view#View#DragShadowBuilder#View#DragShadowBuilder_E@ constructor. If that View parameter was null or if the @B_android#view#View#DragShadowBuilder#View#DragShadowBuilder_E@ constructor was used to instantiate the builder object, this method will return null.", "history": "Added in API level 11", "FullName": "public final View getView ()"}, "View.DragShadowBuilder()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Construct a shadow builder object with no associated View. This constructor variant is only useful when the @B_android#view#View#DragShadowBuilder#onProvideShadowMetrics_E@ and @B_android#view#View#DragShadowBuilder#onDrawShadow_E@ methods are also overridden in order to supply the drag shadow's dimensions and appearance without reference to any View object.", "history": "Added in API level 11", "FullName": "public View.DragShadowBuilder ()"}, "onProvideShadowMetrics(android.graphics.Point,android.graphics.Point)": {"Returns": [], "Parameters": [["@B_android#graphics#Point_E@", "Point: A @B_android#graphics#Point_E@ containing the width and height of the shadow image. Your application must set @B_android#graphics#Point#x_E@ to the desired width and must set @B_android#graphics#Point#y_E@ to the desired height of the image. Since Android P, the width and height must be positive values."], ["@B_android#graphics#Point_E@", "Point: A @B_android#graphics#Point_E@ for the position within the shadow image that should be underneath the touch point during the drag and drop operation. Your application must set @B_android#graphics#Point#x_E@ to the X coordinate and @B_android#graphics#Point#y_E@ to the Y coordinate of this position."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Provides the metrics for the shadow image. These include the dimensions of the shadow image, and the point within that shadow that should be centered under the touch location while dragging. The default implementation sets the dimensions of the shadow to be the same as the dimensions of the View itself and centers the shadow under the touch point.", "history": "Added in API level 11", "FullName": "public void onProvideShadowMetrics (Point outShadowSize, Point outShadowTouchPoint)"}, "onDrawShadow(android.graphics.Canvas)": {"Returns": [], "Parameters": [["@B_android#graphics#Canvas_E@", "Canvas: A @B_android#graphics#Canvas_E@ object in which to draw the shadow image."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Draws the shadow image. The system creates the @B_android#graphics#Canvas_E@ object based on the dimensions it received from the @B_android#view#View#DragShadowBuilder#onProvideShadowMetrics_E@ callback.", "history": "Added in API level 11", "FullName": "public void onDrawShadow (Canvas canvas)"}}, "Inheritance": [], "ClassName": "android.view.View.DragShadowBuilder", "ClassDesc": "Creates an image that the system displays during the drag and drop operation. This is called a \"drag shadow\". The default implementation for a DragShadowBuilder based on a View returns an image that has exactly the same appearance as the given View. The default also positions the center of the drag shadow directly under the touch point. If no View is provided (the constructor with no parameters is used), and @B_android#view#View#DragShadowBuilder#onProvideShadowMetrics_E@ and @B_android#view#View#DragShadowBuilder#onDrawShadow_E@ are not overridden, then the default is an invisible drag shadow. You are not required to use the View you provide to the constructor as the basis of the drag shadow. The @B_android#view#View#DragShadowBuilder#onDrawShadow_E@ method allows you to draw anything you want as the drag shadow. You pass a DragShadowBuilder object to the system when you start the drag. The system calls @B_android#view#View#DragShadowBuilder#onProvideShadowMetrics_E@ to get the size and position of the drag shadow. It uses this data to construct a @B_android#graphics#Canvas_E@ object, then it calls @B_android#view#View#DragShadowBuilder#onDrawShadow_E@ so that your application can draw the shadow image in the Canvas."}