{"Functions": {"notifyDataSetInvalidated()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies the attached observers that the underlying data is no longer valid or available. Once invoked this adapter is no longer valid and should not report further data set changes.", "history": "Added in API level 1", "FullName": "public void notifyDataSetInvalidated ()"}, "areAllItemsEnabled()": {"Returns": [["boolean", "True if all items are enabled, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether all the items in this adapter are enabled. If the value returned by this method changes over time, there is no guarantee it will take effect. If true, it means all items are selectable and clickable (there is no separator.)", "history": "Added in API level 1", "FullName": "public boolean areAllItemsEnabled ()"}, "notifyDataSetChanged()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notifies the attached observers that the underlying data has been changed and any View reflecting the data set should refresh itself.", "history": "Added in API level 1", "FullName": "public void notifyDataSetChanged ()"}, "getViewTypeCount()": {"Returns": [["int", "The number of types of Views that will be created by this adapter"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of types of Views that will be created by @B_android#widget#Adapter#getView_E@. Each type represents a set of views that can be converted in @B_android#widget#Adapter#getView_E@. If the adapter always returns the same type of View for all items, this method should return 1. This method will only be called when the adapter is set on the @B_android#widget#AdapterView_E@.", "history": "Added in API level 1", "FullName": "public int getViewTypeCount ()"}, "getAutofillOptions()": {"Returns": [["@B_java#lang#CharSequence_E@", "null by default, unless implementations override it."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets a string representation of the adapter data that can help @B_android#service#autofill#AutofillService_E@ autofill the view backed by the adapter. It should only be set (i.e., non-null if the values do not represent PII (Personally Identifiable Information - sensitive data such as email addresses, credit card numbers, passwords, etc...). For example, it's ok to return a list of month names, but not a list of usernames. A good rule of thumb is that if the adapter data comes from static resources, such data is not PII - see @B_android#view#ViewStructure#setDataIsSensitive_E@ for more info.", "history": "Added in API level 26", "FullName": "public CharSequence[] getAutofillOptions ()"}, "isEnabled(int)": {"Returns": [["boolean", "True if the item is not a separator"]], "Parameters": [["int", "int: Index of the item"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the item at the specified position is not a separator. (A separator is a non-selectable, non-clickable item). The result is unspecified if position is invalid. An @B_java#lang#ArrayIndexOutOfBoundsException_E@ should be thrown in that case for fast failure.", "history": "Added in API level 1", "FullName": "public boolean isEnabled (int position)"}, "getDropDownView(int,android.view.View,android.view.ViewGroup)": {"Returns": [["@B_android#view#View_E@", "a @B_android#view#View_E@ corresponding to the data at the specified position."]], "Parameters": [["int", "int: index of the item whose view we want."], ["@B_android#view#View_E@", "View: the old view to reuse, if possible. Note: You should check that this view is non-null and of an appropriate type before using. If it is not possible to convert this view to display the correct data, this method can create a new view."], ["@B_android#view#ViewGroup_E@", "ViewGroup: the parent that this view will eventually be attached to"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets a @B_android#view#View_E@ that displays in the drop down popup the data at the specified position in the data set.", "history": "Added in API level 1", "FullName": "public View getDropDownView (int position, View convertView, ViewGroup parent)"}, "setAutofillOptions(java.lang.CharSequence...)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the value returned by @B_android#widget#BaseAdapter#getAutofillOptions_E@", "history": "Added in API level 27", "FullName": "public void setAutofillOptions (CharSequence... options)"}, "isEmpty()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public boolean isEmpty ()"}, "unregisterDataSetObserver(android.database.DataSetObserver)": {"Returns": [], "Parameters": [["@B_android#database#DataSetObserver_E@", "DataSetObserver: the object to unregister."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Unregister an observer that has previously been registered with this adapter via @B_android#widget#Adapter#registerDataSetObserver_E@.", "history": "Added in API level 1", "FullName": "public void unregisterDataSetObserver (DataSetObserver observer)"}, "registerDataSetObserver(android.database.DataSetObserver)": {"Returns": [], "Parameters": [["@B_android#database#DataSetObserver_E@", "DataSetObserver: the object that gets notified when the data set changes."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Register an observer that is called when changes happen to the data used by this adapter.", "history": "Added in API level 1", "FullName": "public void registerDataSetObserver (DataSetObserver observer)"}, "getItemViewType(int)": {"Returns": [["int", "An integer representing the type of View. Two views should share the same type if one can be converted to the other in @B_android#widget#Adapter#getView_E@. Note: Integers must be in the range 0 to @B_android#widget#Adapter#getViewTypeCount_E@ - 1. @B_android#widget#Adapter#IGNORE_ITEM_VIEW_TYPE_E@ can also be returned."]], "Parameters": [["int", "int: The position of the item within the adapter's data set whose view type we want."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the type of View that will be created by @B_android#widget#Adapter#getView_E@ for the specified item.", "history": "Added in API level 1", "FullName": "public int getItemViewType (int position)"}, "hasStableIds()": {"Returns": [["boolean", "True if the same id always refers to the same object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether the item ids are stable across changes to the underlying data.", "history": "Added in API level 1", "FullName": "public boolean hasStableIds ()"}, "BaseAdapter()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public BaseAdapter ()"}}, "Inheritance": [], "ClassName": "android.widget.BaseAdapter", "ClassDesc": "Common base class of common implementation for an @B_android#widget#Adapter_E@ that can be used in both @B_android#widget#ListView_E@ (by implementing the specialized @B_android#widget#ListAdapter_E@ interface) and @B_android#widget#Spinner_E@ (by implementing the specialized @B_android#widget#SpinnerAdapter_E@ interface)."}