{"Functions": {"getAlpha(android.graphics.drawable.Drawable)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_android#graphics#drawable#Drawable_E@", "Drawable: The Drawable against which to invoke the method."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the alpha value of the drawable. 0 means fully transparent, 255 means fully opaque.", "history": "added in version 23.2.0", "FullName": "int getAlpha (Drawable drawable)"}, "getColorFilter(android.graphics.drawable.Drawable)": {"Returns": [["@B_android#graphics#ColorFilter_E@", "the current color filter, or null if none set"]], "Parameters": [["@B_android#graphics#drawable#Drawable_E@", "Drawable no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current color filter, or null if none set.", "history": "added in version 23.2.0", "FullName": "ColorFilter getColorFilter (Drawable drawable)"}, "DrawableCompat()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public DrawableCompat ()"}, "unwrap(android.graphics.drawable.Drawable)": {"Returns": [["T", "the unwrapped @B_android#graphics#drawable#Drawable_E@ or drawable if it hasn't been wrapped."]], "Parameters": [["@B_android#graphics#drawable#Drawable_E@", "Drawable: The drawable to unwrap"]], "Throws": [], "SeeAlso": ["@B_android#support#v4#graphics#drawable#DrawableCompat#wrap_E@"], "Permissions": [], "Description": "Unwrap drawable if it is the result of a call to @B_android#support#v4#graphics#drawable#DrawableCompat#wrap_E@. If the drawable is not the result of a call to @B_android#support#v4#graphics#drawable#DrawableCompat#wrap_E@ then drawable is returned as-is.", "history": "added in version 22.1.0", "FullName": "T unwrap (Drawable drawable)"}, "setTint(android.graphics.drawable.Drawable, int)": {"Returns": [], "Parameters": [["@B_android#graphics#drawable#Drawable_E@", "Drawable: The Drawable against which to invoke the method."], ["int", "int: Color to use for tinting this drawable"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Specifies a tint for drawable.", "history": "added in version 22.0.0", "FullName": "void setTint (Drawable drawable, int tint)"}, "isAutoMirrored(android.graphics.drawable.Drawable)": {"Returns": [["boolean", "boolean Returns true if this Drawable will be automatically mirrored."]], "Parameters": [["@B_android#graphics#drawable#Drawable_E@", "Drawable: The Drawable against which to invoke the method."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tells if this Drawable will be automatically mirrored when its layout direction is RTL right-to-left. See @B_android#util#LayoutDirection_E@. If running on a pre-@B_android#os#Build#VERSION_CODES#KITKAT_E@ device this method returns false.", "history": "added in version 22.0.0", "FullName": "boolean isAutoMirrored (Drawable drawable)"}, "wrap(android.graphics.drawable.Drawable)": {"Returns": [["@B_android#graphics#drawable#Drawable_E@", "A drawable capable of being tinted across all API levels."]], "Parameters": [["@B_android#graphics#drawable#Drawable_E@", "Drawable: The Drawable to process"]], "Throws": [], "SeeAlso": ["@B_android#support#v4#graphics#drawable#DrawableCompat#setTint_E@", "@B_android#support#v4#graphics#drawable#DrawableCompat#setTintList_E@", "@B_android#support#v4#graphics#drawable#DrawableCompat#setTintMode_E@", "@B_android#support#v4#graphics#drawable#DrawableCompat#unwrap_E@"], "Permissions": [], "Description": "Potentially wrap drawable so that it may be used for tinting across the different API levels, via the tinting methods in this class. If the given drawable is wrapped, we will copy over certain state over to the wrapped drawable, such as its bounds, level, visibility and state. You must use the result of this call. If the given drawable is being used by a view (as its background for instance), you must replace the original drawable with the result of this call: If you need to get hold of the original @B_android#graphics#drawable#Drawable_E@ again, you can use the value returned from @B_android#support#v4#graphics#drawable#DrawableCompat#unwrap_E@.", "history": "added in version 22.1.0", "FullName": "Drawable wrap (Drawable drawable)"}, "canApplyTheme(android.graphics.drawable.Drawable)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#graphics#drawable#Drawable_E@", "Drawable no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Whether a theme can be applied to this Drawable and its children.", "history": "added in version 23.2.0", "FullName": "boolean canApplyTheme (Drawable drawable)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v4.graphics.drawable.DrawableCompat", "ClassDesc": "Helper for accessing features in https:##developer#android#com@B_android#graphics#drawable#Drawable_E@."}