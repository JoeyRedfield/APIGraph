{"Functions": {"match(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)": {"Returns": [["", "true if the match is successful; false otherwise"]], "Parameters": [["@B_org#apache#http#cookie#Cookie_E@", "@B_org#apache#http#cookie#Cookie_E@ to match"], ["@B_org#apache#http#cookie#CookieOrigin_E@", "the cookie source to match against"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Matches the given value (property of the destination host where request is being submitted) with the corresponding cookie attribute.", "history": "Added in API level 1", "FullName": "public abstract boolean match (Cookie cookie, CookieOrigin origin)"}, "validate(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)": {"Returns": [], "Parameters": [["@B_org#apache#http#cookie#Cookie_E@", "@B_org#apache#http#cookie#Cookie_E@ to validate"], ["@B_org#apache#http#cookie#CookieOrigin_E@", "the cookie source to validate against"]], "Throws": [["@B_org#apache#http#cookie#MalformedCookieException_E@", "if cookie validation fails for this attribute"]], "SeeAlso": [], "Permissions": [], "Description": "Peforms cookie validation for the given attribute value.", "history": "Added in API level 1", "FullName": "public abstract void validate (Cookie cookie, CookieOrigin origin)"}, "parse(org.apache.http.cookie.SetCookie, java.lang.String)": {"Returns": [], "Parameters": [["@B_org#apache#http#cookie#SetCookie_E@", "@B_org#apache#http#cookie#Cookie_E@ to be updated"], ["@B_java#lang#String_E@", "cookie attribute value from the cookie response header"]], "Throws": [["@B_org#apache#http#cookie#MalformedCookieException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Parse the given cookie attribute value and update the corresponding @B_org#apache#http#cookie#Cookie_E@ property.", "history": "Added in API level 1", "FullName": "public abstract void parse (SetCookie cookie, String value)"}}, "Inheritance": [], "ClassName": "org.apache.http.cookie.CookieAttributeHandler", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Ths interface represents a cookie attribute handler responsible for parsing, validating, and matching a specific cookie attribute, such as path, domain, port, etc. Different cookie specifications can provide a specific implementation for this class based on their cookie handling rules."}