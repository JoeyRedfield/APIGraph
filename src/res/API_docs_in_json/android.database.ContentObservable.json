{"Functions": {"dispatchChange(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: True if this is a self-change notification."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#database#ContentObservable#dispatchChange_E@ instead. Invokes @B_android#database#ContentObserver#dispatchChange_E@ on each observer. If selfChange is true, only delivers the notification to the observer if it has indicated that it wants to receive self-change notifications by implementing @B_android#database#ContentObserver#deliverSelfNotifications_E@ to return true.", "history": "Added in API level 1 Deprecated in API level 16", "FullName": "public void dispatchChange (boolean selfChange)"}, "registerObserver(android.database.ContentObserver)": {"Returns": [], "Parameters": [["@B_android#database#ContentObserver_E@", "ContentObserver: the observer to register"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds an observer to the list. The observer cannot be null and it must not already be registered.", "history": "Added in API level 1", "FullName": "public void registerObserver (ContentObserver observer)"}, "dispatchChange(boolean, android.net.Uri)": {"Returns": [], "Parameters": [["boolean", "boolean: True if this is a self-change notification."], ["@B_android#net#Uri_E@", "Uri: The Uri of the changed content, or null if unknown."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Invokes @B_android#database#ContentObserver#dispatchChange_E@ on each observer. Includes the changed content Uri when available. If selfChange is true, only delivers the notification to the observer if it has indicated that it wants to receive self-change notifications by implementing @B_android#database#ContentObserver#deliverSelfNotifications_E@ to return true.", "history": "added in API level 16", "FullName": "public void dispatchChange (boolean selfChange, Uri uri)"}, "notifyChange(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: True if this is a self-change notification."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#database#ContentObservable#dispatchChange_E@ instead. Invokes @B_android#database#ContentObserver#onChange_E@ on each observer.", "history": "Added in API level 1 Deprecated in API level 16", "FullName": "public void notifyChange (boolean selfChange)"}, "ContentObservable()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public ContentObservable ()"}, "dispatchChange(boolean,android.net.Uri)": {"Returns": [], "Parameters": [["boolean", "boolean: True if this is a self-change notification."], ["@B_android#net#Uri_E@", "Uri: The Uri of the changed content, or null if unknown."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Invokes @B_android#database#ContentObserver#dispatchChange_E@ on each observer. Includes the changed content Uri when available. If selfChange is true, only delivers the notification to the observer if it has indicated that it wants to receive self-change notifications by implementing @B_android#database#ContentObserver#deliverSelfNotifications_E@ to return true.", "history": "Added in API level 16", "FullName": "public void dispatchChange (boolean selfChange, Uri uri)"}}, "Inheritance": ["@B_android#database#Observable_E@"], "ClassName": "android.database.ContentObservable", "ClassDesc": "A specialization of @B_android#database#Observable_E@ for @B_android#database#ContentObserver_E@ that provides methods for sending notifications to a list of @B_android#database#ContentObserver_E@ objects."}