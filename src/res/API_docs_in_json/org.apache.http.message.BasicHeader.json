{"Functions": {"toString()": {"Returns": [["", "a string"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_java#lang#String_E@ representation of the header.", "history": "Added in API level 1", "FullName": "public String toString ()"}, "BasicHeader(java.lang.String, java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "the header name"], ["@B_java#lang#String_E@", "the header value"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor with name and value", "history": "Added in API level 1", "FullName": "public BasicHeader (String name, String value)"}, "getValue()": {"Returns": [["", "String value The current value."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the header value.", "history": "Added in API level 1", "FullName": "public String getValue ()"}, "getElements()": {"Returns": [["", "an array of header elements"]], "Parameters": [], "Throws": [["@B_org#apache#http#ParseException_E@", "in case of a parse error"]], "SeeAlso": ["@B_org#apache#http#message#BasicHeaderValueParser#parseElements_E@"], "Permissions": [], "Description": "Returns an array of @B_org#apache#http#HeaderElement_E@s constructed from my value.", "history": "Added in API level 1", "FullName": "public HeaderElement[] getElements ()"}, "clone()": {"Returns": [["", "a copy of this object."]], "Parameters": [], "Throws": [["@B_java#lang#CloneNotSupportedException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Creates and returns a copy of this Object. The default implementation returns a so-called \"shallow\" copy: It creates a new instance of the same class and then copies the field values (including object references) from this instance to the new instance. A \"deep\" copy, in contrast, would also recursively clone nested objects. A subclass that needs to implement this kind of cloning should call super.clone() to create the new instance and then create deep copies of the nested, mutable objects.", "history": "Added in API level 1", "FullName": "public Object clone ()"}, "getName()": {"Returns": [["", "String name The name"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the header name.", "history": "Added in API level 1", "FullName": "public String getName ()"}}, "Inheritance": [], "ClassName": "org.apache.http.message.BasicHeader", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Represents an HTTP header field. The HTTP header fields follow the same generic format as that given in Section 3.1 of RFC 822. Each header field consists of a name followed by a colon (\":\") and the field value. Field names are case-insensitive. The field value MAY be preceded by any amount of LWS, though a single SP is preferred."}