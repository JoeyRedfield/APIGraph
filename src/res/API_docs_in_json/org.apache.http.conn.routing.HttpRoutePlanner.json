{"Functions": {"determineRoute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)": {"Returns": [["", "the route that the request should take"]], "Parameters": [["@B_org#apache#http#HttpHost_E@", "the target host for the request. Implementations may accept null if they can still determine a route, for example to a default target or by inspecting the request."], ["@B_org#apache#http#HttpRequest_E@", "the request to execute"], ["@B_org#apache#http#protocol#HttpContext_E@", "the context to use for the subsequent execution. Implementations may accept null."]], "Throws": [["@B_org#apache#http#HttpException_E@", "in case of a problem"]], "SeeAlso": [], "Permissions": [], "Description": "Determines the route for a request.", "history": "Added in API level 1", "FullName": "public abstract HttpRoute determineRoute (HttpHost target, HttpRequest request, HttpContext context)"}}, "Inheritance": [], "ClassName": "org.apache.http.conn.routing.HttpRoutePlanner", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Encapsulates logic to compute a @B_org#apache#http#conn#routing#HttpRoute_E@ to a target host. Implementations may for example be based on parameters, or on the standard Java system properties."}