{"Functions": {"getMobileRxPackets()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return number of packets received across mobile networks since device boot. Counts packets across all mobile network interfaces, and always increases monotonically since device boot. Statistics are measured at the network layer, so they include both TCP and UDP usage. Before @B_android#os#Build#VERSION_CODES#JELLY_BEAN_MR2_E@, this may return @B_android#net#TrafficStats#UNSUPPORTED_E@ on devices where statistics aren't available.", "history": "Added in API level 8", "FullName": "public static long getMobileRxPackets ()"}, "untagSocket(java.net.Socket)": {"Returns": [], "Parameters": [["@B_java#net#Socket_E@", "Socket no parameter comment"]], "Throws": [["@B_java#net#SocketException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Remove any statistics parameters from the given @B_java#net#Socket_E@. In Android 8.1 (API level 27) and lower, a socket is automatically untagged when it's sent to another process using binder IPC with a ParcelFileDescriptor container. In Android 9.0 (API level 28) and higher, the socket tag is kept when the socket is sent to another process using binder IPC. You can mimic the previous behavior by calling untagSocket() before sending the socket to another process.", "history": "Added in API level 14", "FullName": "public static void untagSocket (Socket socket)"}, "getUidTxPackets(int)": {"Returns": [["long", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#os#Process#myUid_E@", "@B_android#content#pm#ApplicationInfo#uid_E@"], "Permissions": [], "Description": "Return number of packets transmitted by the given UID since device boot. Counts packets across all network interfaces, and always increases monotonically since device boot. Statistics are measured at the network layer, so they include both TCP and UDP usage. Before @B_android#os#Build#VERSION_CODES#JELLY_BEAN_MR2_E@, this may return @B_android#net#TrafficStats#UNSUPPORTED_E@ on devices where statistics aren't available. Starting in @B_android#os#Build#VERSION_CODES#N_E@ this will only report traffic statistics for the calling UID. It will return @B_android#net#TrafficStats#UNSUPPORTED_E@ for all other UIDs for privacy reasons. To access historical network statistics belonging to other UIDs, use @B_android#app#usage#NetworkStatsManager_E@.", "history": "Added in API level 12", "FullName": "public static long getUidTxPackets (int uid)"}, "getUidTcpTxSegments(int)": {"Returns": [["long", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#net#TrafficStats#getUidTxPackets_E@"], "Permissions": [], "Description": "Starting in @B_android#os#Build#VERSION_CODES#JELLY_BEAN_MR2_E@, transport layer statistics are no longer available, and will always return @B_android#net#TrafficStats#UNSUPPORTED_E@.", "history": "Added in API level 12 Deprecated in API level 18", "FullName": "public static long getUidTcpTxSegments (int uid)"}, "getUidTxBytes(int)": {"Returns": [["long", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#os#Process#myUid_E@", "@B_android#content#pm#ApplicationInfo#uid_E@"], "Permissions": [], "Description": "Return number of bytes transmitted by the given UID since device boot. Counts packets across all network interfaces, and always increases monotonically since device boot. Statistics are measured at the network layer, so they include both TCP and UDP usage. Before @B_android#os#Build#VERSION_CODES#JELLY_BEAN_MR2_E@, this may return @B_android#net#TrafficStats#UNSUPPORTED_E@ on devices where statistics aren't available. Starting in @B_android#os#Build#VERSION_CODES#N_E@ this will only report traffic statistics for the calling UID. It will return @B_android#net#TrafficStats#UNSUPPORTED_E@ for all other UIDs for privacy reasons. To access historical network statistics belonging to other UIDs, use @B_android#app#usage#NetworkStatsManager_E@.", "history": "Added in API level 8", "FullName": "public static long getUidTxBytes (int uid)"}, "incrementOperationCount(int)": {"Returns": [], "Parameters": [["int", "int: Number of operations to increment count by."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Increment count of network operations performed under the accounting tag currently active on the calling thread. This can be used to derive bytes-per-operation.", "history": "Added in API level 14", "FullName": "public static void incrementOperationCount (int operationCount)"}, "getUidTcpRxBytes(int)": {"Returns": [["long", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#net#TrafficStats#getUidRxBytes_E@"], "Permissions": [], "Description": "Starting in @B_android#os#Build#VERSION_CODES#JELLY_BEAN_MR2_E@, transport layer statistics are no longer available, and will always return @B_android#net#TrafficStats#UNSUPPORTED_E@.", "history": "Added in API level 12 Deprecated in API level 18", "FullName": "public static long getUidTcpRxBytes (int uid)"}, "incrementOperationCount(int,int)": {"Returns": [], "Parameters": [["int", "int: Accounting tag used in @B_android#net#TrafficStats#setThreadStatsTag_E@."], ["int", "int: Number of operations to increment count by."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Increment count of network operations performed under the given accounting tag. This can be used to derive bytes-per-operation.", "history": "Added in API level 14", "FullName": "public static void incrementOperationCount (int tag, int operationCount)"}, "getTotalTxPackets()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return number of packets transmitted since device boot. Counts packets across all network interfaces, and always increases monotonically since device boot. Statistics are measured at the network layer, so they include both TCP and UDP usage. Before @B_android#os#Build#VERSION_CODES#JELLY_BEAN_MR2_E@, this may return @B_android#net#TrafficStats#UNSUPPORTED_E@ on devices where statistics aren't available.", "history": "Added in API level 8", "FullName": "public static long getTotalTxPackets ()"}, "getThreadStatsTag()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#net#TrafficStats#setThreadStatsTag_E@"], "Permissions": [], "Description": "Get the active tag used when accounting @B_java#net#Socket_E@ traffic originating from the current thread. Only one active tag per thread is supported. @B_android#net#TrafficStats#tagSocket_E@.", "history": "Added in API level 14", "FullName": "public static int getThreadStatsTag ()"}, "clearThreadStatsTag()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#net#TrafficStats#setThreadStatsTag_E@"], "Permissions": [], "Description": "Clear any active tag set to account @B_java#net#Socket_E@ traffic originating from the current thread.", "history": "Added in API level 14", "FullName": "public static void clearThreadStatsTag ()"}, "getMobileTxPackets()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return number of packets transmitted across mobile networks since device boot. Counts packets across all mobile network interfaces, and always increases monotonically since device boot. Statistics are measured at the network layer, so they include both TCP and UDP usage. Before @B_android#os#Build#VERSION_CODES#JELLY_BEAN_MR2_E@, this may return @B_android#net#TrafficStats#UNSUPPORTED_E@ on devices where statistics aren't available.", "history": "Added in API level 8", "FullName": "public static long getMobileTxPackets ()"}, "getUidUdpRxBytes(int)": {"Returns": [["long", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#net#TrafficStats#getUidRxBytes_E@"], "Permissions": [], "Description": "Starting in @B_android#os#Build#VERSION_CODES#JELLY_BEAN_MR2_E@, transport layer statistics are no longer available, and will always return @B_android#net#TrafficStats#UNSUPPORTED_E@.", "history": "Added in API level 12 Deprecated in API level 18", "FullName": "public static long getUidUdpRxBytes (int uid)"}, "getUidUdpTxBytes(int)": {"Returns": [["long", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#net#TrafficStats#getUidTxBytes_E@"], "Permissions": [], "Description": "Starting in @B_android#os#Build#VERSION_CODES#JELLY_BEAN_MR2_E@, transport layer statistics are no longer available, and will always return @B_android#net#TrafficStats#UNSUPPORTED_E@.", "history": "Added in API level 12 Deprecated in API level 18", "FullName": "public static long getUidUdpTxBytes (int uid)"}, "getUidUdpRxPackets(int)": {"Returns": [["long", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#net#TrafficStats#getUidRxPackets_E@"], "Permissions": [], "Description": "Starting in @B_android#os#Build#VERSION_CODES#JELLY_BEAN_MR2_E@, transport layer statistics are no longer available, and will always return @B_android#net#TrafficStats#UNSUPPORTED_E@.", "history": "Added in API level 12 Deprecated in API level 18", "FullName": "public static long getUidUdpRxPackets (int uid)"}, "tagFileDescriptor(java.io.FileDescriptor)": {"Returns": [], "Parameters": [["@B_java#io#FileDescriptor_E@", "FileDescriptor no parameter comment"]], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": ["@B_android#net#TrafficStats#setThreadStatsTag_E@"], "Permissions": [], "Description": "Tag the given @B_java#io#FileDescriptor_E@ socket with any statistics parameters active for the current thread. Subsequent calls always replace any existing parameters. When finished, call @B_android#net#TrafficStats#untagFileDescriptor_E@ to remove statistics parameters.", "history": "Added in API level 28", "FullName": "public static void tagFileDescriptor (FileDescriptor fd)"}, "untagFileDescriptor(java.io.FileDescriptor)": {"Returns": [], "Parameters": [["@B_java#io#FileDescriptor_E@", "FileDescriptor no parameter comment"]], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Remove any statistics parameters from the given @B_java#io#FileDescriptor_E@ socket.", "history": "Added in API level 28", "FullName": "public static void untagFileDescriptor (FileDescriptor fd)"}, "getTotalRxBytes()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return number of bytes received since device boot. Counts packets across all network interfaces, and always increases monotonically since device boot. Statistics are measured at the network layer, so they include both TCP and UDP usage. Before @B_android#os#Build#VERSION_CODES#JELLY_BEAN_MR2_E@, this may return @B_android#net#TrafficStats#UNSUPPORTED_E@ on devices where statistics aren't available.", "history": "Added in API level 8", "FullName": "public static long getTotalRxBytes ()"}, "incrementOperationCount(int, int)": {"Returns": [], "Parameters": [["int", "int: Accounting tag used in @B_android#net#TrafficStats#setThreadStatsTag_E@."], ["int", "int: Number of operations to increment count by."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Increment count of network operations performed under the given accounting tag. This can be used to derive bytes-per-operation.", "history": "added in API level 14", "FullName": "public static void incrementOperationCount (int tag, int operationCount)"}, "getThreadStatsUid()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#net#TrafficStats#setThreadStatsUid_E@"], "Permissions": [], "Description": "Get the active UID used when accounting @B_java#net#Socket_E@ traffic originating from the current thread. Only one active tag per thread is supported. @B_android#net#TrafficStats#tagSocket_E@.", "history": "Added in API level 28", "FullName": "public static int getThreadStatsUid ()"}, "getTotalTxBytes()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return number of bytes transmitted since device boot. Counts packets across all network interfaces, and always increases monotonically since device boot. Statistics are measured at the network layer, so they include both TCP and UDP usage. Before @B_android#os#Build#VERSION_CODES#JELLY_BEAN_MR2_E@, this may return @B_android#net#TrafficStats#UNSUPPORTED_E@ on devices where statistics aren't available.", "history": "Added in API level 8", "FullName": "public static long getTotalTxBytes ()"}, "setThreadStatsUid(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set specific UID to use when accounting @B_java#net#Socket_E@ traffic originating from the current thread. Designed for use when performing an operation on behalf of another application, or when another application is performing operations on your behalf. Any app can accept blame for traffic performed on a socket originally created by another app by calling this method with the @B_android#system#Os#getuid_E@ value. However, only apps holding the android.Manifest.permission#UPDATE_DEVICE_STATS permission may assign blame to another UIDs. Changes only take effect during subsequent calls to @B_android#net#TrafficStats#tagSocket_E@.", "history": "Added in API level 28", "FullName": "public static void setThreadStatsUid (int uid)"}, "getUidTcpRxSegments(int)": {"Returns": [["long", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#net#TrafficStats#getUidRxPackets_E@"], "Permissions": [], "Description": "Starting in @B_android#os#Build#VERSION_CODES#JELLY_BEAN_MR2_E@, transport layer statistics are no longer available, and will always return @B_android#net#TrafficStats#UNSUPPORTED_E@.", "history": "Added in API level 12 Deprecated in API level 18", "FullName": "public static long getUidTcpRxSegments (int uid)"}, "untagDatagramSocket(java.net.DatagramSocket)": {"Returns": [], "Parameters": [["@B_java#net#DatagramSocket_E@", "DatagramSocket no parameter comment"]], "Throws": [["@B_java#net#SocketException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Remove any statistics parameters from the given @B_java#net#DatagramSocket_E@.", "history": "Added in API level 24", "FullName": "public static void untagDatagramSocket (DatagramSocket socket)"}, "getAndSetThreadStatsTag(int)": {"Returns": [["int", "the current tag for the calling thread, which can be used to restore any existing values after a nested operation is finished"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set active tag to use when accounting @B_java#net#Socket_E@ traffic originating from the current thread. Only one active tag per thread is supported. Changes only take effect during subsequent calls to @B_android#net#TrafficStats#tagSocket_E@. Tags between 0xFFFFFF00 and 0xFFFFFFFF are reserved and used internally by system services like @B_android#app#DownloadManager_E@ when performing traffic on behalf of an application.", "history": "Added in API level 26", "FullName": "public static int getAndSetThreadStatsTag (int tag)"}, "getUidTcpTxBytes(int)": {"Returns": [["long", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#net#TrafficStats#getUidTxBytes_E@"], "Permissions": [], "Description": "Starting in @B_android#os#Build#VERSION_CODES#JELLY_BEAN_MR2_E@, transport layer statistics are no longer available, and will always return @B_android#net#TrafficStats#UNSUPPORTED_E@.", "history": "Added in API level 12 Deprecated in API level 18", "FullName": "public static long getUidTcpTxBytes (int uid)"}, "setThreadStatsTag(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#net#TrafficStats#clearThreadStatsTag_E@"], "Permissions": [], "Description": "Set active tag to use when accounting @B_java#net#Socket_E@ traffic originating from the current thread. Only one active tag per thread is supported. Changes only take effect during subsequent calls to @B_android#net#TrafficStats#tagSocket_E@. Tags between 0xFFFFFF00 and 0xFFFFFFFF are reserved and used internally by system services like @B_android#app#DownloadManager_E@ when performing traffic on behalf of an application.", "history": "Added in API level 14", "FullName": "public static void setThreadStatsTag (int tag)"}, "getMobileRxBytes()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return number of bytes received across mobile networks since device boot. Counts packets across all mobile network interfaces, and always increases monotonically since device boot. Statistics are measured at the network layer, so they include both TCP and UDP usage. Before @B_android#os#Build#VERSION_CODES#JELLY_BEAN_MR2_E@, this may return @B_android#net#TrafficStats#UNSUPPORTED_E@ on devices where statistics aren't available.", "history": "Added in API level 8", "FullName": "public static long getMobileRxBytes ()"}, "tagDatagramSocket(java.net.DatagramSocket)": {"Returns": [], "Parameters": [["@B_java#net#DatagramSocket_E@", "DatagramSocket no parameter comment"]], "Throws": [["@B_java#net#SocketException_E@", ""]], "SeeAlso": ["@B_android#net#TrafficStats#setThreadStatsTag_E@"], "Permissions": [], "Description": "Tag the given @B_java#net#DatagramSocket_E@ with any statistics parameters active for the current thread. Subsequent calls always replace any existing parameters. When finished, call @B_android#net#TrafficStats#untagDatagramSocket_E@ to remove statistics parameters.", "history": "Added in API level 24", "FullName": "public static void tagDatagramSocket (DatagramSocket socket)"}, "getMobileTxBytes()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return number of bytes transmitted across mobile networks since device boot. Counts packets across all mobile network interfaces, and always increases monotonically since device boot. Statistics are measured at the network layer, so they include both TCP and UDP usage. Before @B_android#os#Build#VERSION_CODES#JELLY_BEAN_MR2_E@, this may return @B_android#net#TrafficStats#UNSUPPORTED_E@ on devices where statistics aren't available.", "history": "Added in API level 8", "FullName": "public static long getMobileTxBytes ()"}, "tagSocket(java.net.Socket)": {"Returns": [], "Parameters": [["@B_java#net#Socket_E@", "Socket no parameter comment"]], "Throws": [["@B_java#net#SocketException_E@", ""]], "SeeAlso": ["@B_android#net#TrafficStats#setThreadStatsTag_E@"], "Permissions": [], "Description": "Tag the given @B_java#net#Socket_E@ with any statistics parameters active for the current thread. Subsequent calls always replace any existing parameters. When finished, call @B_android#net#TrafficStats#untagSocket_E@ to remove statistics parameters.", "history": "Added in API level 14", "FullName": "public static void tagSocket (Socket socket)"}, "TrafficStats()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 8", "FullName": "public TrafficStats ()"}, "getTotalRxPackets()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return number of packets received since device boot. Counts packets across all network interfaces, and always increases monotonically since device boot. Statistics are measured at the network layer, so they include both TCP and UDP usage. Before @B_android#os#Build#VERSION_CODES#JELLY_BEAN_MR2_E@, this may return @B_android#net#TrafficStats#UNSUPPORTED_E@ on devices where statistics aren't available.", "history": "Added in API level 8", "FullName": "public static long getTotalRxPackets ()"}, "getUidUdpTxPackets(int)": {"Returns": [["long", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#net#TrafficStats#getUidTxPackets_E@"], "Permissions": [], "Description": "Starting in @B_android#os#Build#VERSION_CODES#JELLY_BEAN_MR2_E@, transport layer statistics are no longer available, and will always return @B_android#net#TrafficStats#UNSUPPORTED_E@.", "history": "Added in API level 12 Deprecated in API level 18", "FullName": "public static long getUidUdpTxPackets (int uid)"}, "getUidRxBytes(int)": {"Returns": [["long", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#os#Process#myUid_E@", "@B_android#content#pm#ApplicationInfo#uid_E@"], "Permissions": [], "Description": "Return number of bytes received by the given UID since device boot. Counts packets across all network interfaces, and always increases monotonically since device boot. Statistics are measured at the network layer, so they include both TCP and UDP usage. Before @B_android#os#Build#VERSION_CODES#JELLY_BEAN_MR2_E@, this may return @B_android#net#TrafficStats#UNSUPPORTED_E@ on devices where statistics aren't available. Starting in @B_android#os#Build#VERSION_CODES#N_E@ this will only report traffic statistics for the calling UID. It will return @B_android#net#TrafficStats#UNSUPPORTED_E@ for all other UIDs for privacy reasons. To access historical network statistics belonging to other UIDs, use @B_android#app#usage#NetworkStatsManager_E@.", "history": "Added in API level 8", "FullName": "public static long getUidRxBytes (int uid)"}, "clearThreadStatsUid()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#net#TrafficStats#setThreadStatsUid_E@"], "Permissions": [], "Description": "Clear any active UID set to account @B_java#net#Socket_E@ traffic originating from the current thread.", "history": "Added in API level 28", "FullName": "public static void clearThreadStatsUid ()"}, "getUidRxPackets(int)": {"Returns": [["long", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#os#Process#myUid_E@", "@B_android#content#pm#ApplicationInfo#uid_E@"], "Permissions": [], "Description": "Return number of packets received by the given UID since device boot. Counts packets across all network interfaces, and always increases monotonically since device boot. Statistics are measured at the network layer, so they include both TCP and UDP usage. Before @B_android#os#Build#VERSION_CODES#JELLY_BEAN_MR2_E@, this may return @B_android#net#TrafficStats#UNSUPPORTED_E@ on devices where statistics aren't available. Starting in @B_android#os#Build#VERSION_CODES#N_E@ this will only report traffic statistics for the calling UID. It will return @B_android#net#TrafficStats#UNSUPPORTED_E@ for all other UIDs for privacy reasons. To access historical network statistics belonging to other UIDs, use @B_android#app#usage#NetworkStatsManager_E@.", "history": "Added in API level 12", "FullName": "public static long getUidRxPackets (int uid)"}}, "Inheritance": [], "ClassName": "android.net.TrafficStats", "ClassDesc": "Class that provides network traffic statistics. These statistics include bytes transmitted and received and network packets transmitted and received, over all interfaces, over the mobile interface, and on a per-UID basis. These statistics may not be available on all platforms. If the statistics are not supported by this device, @B_android#net#TrafficStats#UNSUPPORTED_E@ will be returned. Note that the statistics returned by this class reset and start from zero after every reboot. To access more robust historical network statistics data, use @B_android#app#usage#NetworkStatsManager_E@ instead."}