{"Functions": {"setOwner(java.nio.file.attribute.UserPrincipal)": {"Returns": [], "Parameters": [["@B_java#nio#file#attribute#UserPrincipal_E@", "UserPrincipal: the new file owner"]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs, or the owner parameter is a group and this implementation does not support setting the owner to a group"], ["@B_java#lang#SecurityException_E@", "In the case of the default provider, a security manager is installed, and it denies @B_java#lang#RuntimePermission_E@(\"accessUserInformation\") or its @B_java#lang#SecurityManager#checkWrite_E@ method denies write access to the file."]], "SeeAlso": [], "Permissions": [], "Description": "Updates the file owner. It it implementation specific if the file owner can be a @B_java#nio#file#attribute#GroupPrincipal_E@. To ensure consistent and correct behavior across platforms it is recommended that this method should only be used to set the file owner to a user principal that is not a group.", "history": "Added in API level 26", "FullName": "public abstract void setOwner (UserPrincipal owner)"}, "name()": {"Returns": [["@B_java#lang#String_E@", "the name of the attribute view"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the name of the attribute view. Attribute views of this type have the name \"owner\".", "history": "Added in API level 26", "FullName": "public abstract String name ()"}, "getOwner()": {"Returns": [["@B_java#nio#file#attribute#UserPrincipal_E@", "the file owner"]], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs"], ["@B_java#lang#SecurityException_E@", "In the case of the default provider, a security manager is installed, and it denies @B_java#lang#RuntimePermission_E@(\"accessUserInformation\") or its @B_java#lang#SecurityManager#checkRead_E@ method denies read access to the file."]], "SeeAlso": [], "Permissions": [], "Description": "Read the file owner. It it implementation specific if the file owner can be a @B_java#nio#file#attribute#GroupPrincipal_E@.", "history": "Added in API level 26", "FullName": "public abstract UserPrincipal getOwner ()"}}, "Inheritance": [], "ClassName": "java.nio.file.attribute.FileOwnerAttributeView", "ClassDesc": "A file attribute view that supports reading or updating the owner of a file. This file attribute view is intended for file system implementations that support a file attribute that represents an identity that is the owner of the file. Often the owner of a file is the identity of the entity that created the file. The @B_java#nio#file#attribute#FileOwnerAttributeView#getOwner_E@ or @B_java#nio#file#attribute#FileOwnerAttributeView#setOwner_E@ methods may be used to read or update the owner of the file. The @B_java#nio#file#Files#getAttribute_E@ and @B_java#nio#file#Files#setAttribute_E@ methods may also be used to read or update the owner. In that case, the owner attribute is identified by the name \"owner\", and the value of the attribute is a @B_java#nio#file#attribute#UserPrincipal_E@."}