{"Functions": {"deactivate()": {"Returns": [], "Parameters": [], "Throws": [["IllegalStateException", "if this provider is already inactive"]], "SeeAlso": [], "Permissions": [], "Description": "Deactivates this provider. The previously-registered callback is not notified of any further updates.", "history": "", "FullName": "public abstract void deactivate ()"}, "activate(com.google.android.gms.maps.LocationSource.OnLocationChangedListener)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#maps#LocationSource#OnLocationChangedListener_E@", "listener that's called when a new location is available"]], "Throws": [["IllegalStateException", "if this provider is already active"], ["IllegalArgumentException", "if listener is null"]], "SeeAlso": [], "Permissions": [], "Description": "Activates this provider. This provider will notify the supplied listener periodically, until you call @B_com#google#android#gms#maps#LocationSource#deactivate_E@. Notifications will be broadcast on the main thread.", "history": "", "FullName": "public abstract void activate (LocationSource.OnLocationChangedListener listener)"}}, "Inheritance": [], "ClassName": "com.google.android.gms.maps.LocationSource", "ClassDesc": "Defines an interface for providing location data, typically to a @B_com#google#android#gms#maps#GoogleMap_E@ object. A @B_com#google#android#gms#maps#GoogleMap_E@ object has a built-in location provider for its my-location layer, but it can be @B_com#google#android#gms#maps#GoogleMap#setLocationSource_E@ with another one that implements this interface. A @B_com#google#android#gms#maps#GoogleMap_E@ object activates its location provider using @B_com#google#android#gms#maps#LocationSource#activate_E@. While active (between @B_com#google#android#gms#maps#LocationSource#activate_E@ and @B_com#google#android#gms#maps#LocationSource#deactivate_E@), a location provider should push periodic location updates to the listener registered in @B_com#google#android#gms#maps#LocationSource#activate_E@. It is the provider's responsibility to use location services wisely according to the map's lifecycle state. For example, it should only using battery-intensive services (like GPS) occasionally, or only while an activity is in the foreground."}