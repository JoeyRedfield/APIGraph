{"Functions": {"onSessionConfigUpdated()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a publish or subscribe discovery session configuration update request succeeds. Called in response to @B_android#net#wifi#aware#PublishDiscoverySession#updatePublish_E@ or @B_android#net#wifi#aware#SubscribeDiscoverySession#updateSubscribe_E@.", "history": "Added in API level 26", "FullName": "public void onSessionConfigUpdated ()"}, "onSessionConfigFailed()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a publish or subscribe discovery session cannot be created: @B_android#net#wifi#aware#WifiAwareSession#publish_E@ or @B_android#net#wifi#aware#WifiAwareSession#subscribe_E@, or when a configuration update fails: @B_android#net#wifi#aware#PublishDiscoverySession#updatePublish_E@ or @B_android#net#wifi#aware#SubscribeDiscoverySession#updateSubscribe_E@. For discovery session updates failure leaves the session running with its previous configuration - the discovery session is not terminated.", "history": "Added in API level 26", "FullName": "public void onSessionConfigFailed ()"}, "onServiceDiscovered(android.net.wifi.aware.PeerHandle,byte[],java.util.List<byte[]>)": {"Returns": [], "Parameters": [["@B_android#net#wifi#aware#PeerHandle_E@", "PeerHandle: An opaque handle to the peer matching our discovery operation."], ["byte[]", "byte: The service specific information (arbitrary byte array) provided by the peer as part of its discovery configuration."], ["@B_java#util#List_E@", "List: The filter which resulted in this service discovery. For @B_android#net#wifi#aware#PublishConfig#PUBLISH_TYPE_UNSOLICITED_E@, @B_android#net#wifi#aware#SubscribeConfig#SUBSCRIBE_TYPE_PASSIVE_E@ discovery sessions this is the publisher's match filter. For @B_android#net#wifi#aware#PublishConfig#PUBLISH_TYPE_SOLICITED_E@, @B_android#net#wifi#aware#SubscribeConfig#SUBSCRIBE_TYPE_ACTIVE_E@ discovery sessions this is the subscriber's match filter."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a discovery (publish or subscribe) operation results in a service discovery. Note that this method and @B_android#net#wifi#aware#DiscoverySessionCallback#onServiceDiscoveredWithinRange_E@ may be called multiple times per service discovery.", "history": "Added in API level 26", "FullName": "public void onServiceDiscovered (PeerHandle peerHandle, byte[] serviceSpecificInfo, List<byte[]> matchFilter)"}, "onMessageSendSucceeded(int)": {"Returns": [], "Parameters": [["int", "int: The arbitrary message ID specified when sending the message."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called in response to @B_android#net#wifi#aware#DiscoverySession#sendMessage_E@ when a message is transmitted successfully - i.e. when it was received successfully by the peer (corresponds to an ACK being received). Note that either this callback or @B_android#net#wifi#aware#DiscoverySessionCallback#onMessageSendFailed_E@ will be received - never both.", "history": "Added in API level 26", "FullName": "public void onMessageSendSucceeded (int messageId)"}, "onServiceDiscoveredWithinRange(android.net.wifi.aware.PeerHandle,byte[],java.util.List<byte[]>,int)": {"Returns": [], "Parameters": [["@B_android#net#wifi#aware#PeerHandle_E@", "PeerHandle: An opaque handle to the peer matching our discovery operation."], ["byte[]", "byte: The service specific information (arbitrary byte array) provided by the peer as part of its discovery configuration."], ["@B_java#util#List_E@", "List: The filter which resulted in this service discovery. For @B_android#net#wifi#aware#PublishConfig#PUBLISH_TYPE_UNSOLICITED_E@, @B_android#net#wifi#aware#SubscribeConfig#SUBSCRIBE_TYPE_PASSIVE_E@ discovery sessions this is the publisher's match filter. For @B_android#net#wifi#aware#PublishConfig#PUBLISH_TYPE_SOLICITED_E@, @B_android#net#wifi#aware#SubscribeConfig#SUBSCRIBE_TYPE_ACTIVE_E@ discovery sessions this is the subscriber's match filter."], ["int", "int: The measured distance to the Publisher in mm. Note: the measured distance may be negative for very close devices."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a discovery (publish or subscribe) operation results in a service discovery. Called when a Subscribe service was configured with a range requirement @B_android#net#wifi#aware#SubscribeConfig#Builder#setMinDistanceMm_E@ and/or @B_android#net#wifi#aware#SubscribeConfig#Builder#setMaxDistanceMm_E@ and the Publish service was configured with @B_android#net#wifi#aware#PublishConfig#Builder#setRangingEnabled_E@. If either Publisher or Subscriber does not enable Ranging, or if Ranging is temporarily disabled by the underlying device, service discovery proceeds without ranging and the @B_android#net#wifi#aware#DiscoverySessionCallback#onServiceDiscovered_E@ is called. Note that this method and @B_android#net#wifi#aware#DiscoverySessionCallback#onServiceDiscovered_E@ may be called multiple times per service discovery.", "history": "Added in API level 28", "FullName": "public void onServiceDiscoveredWithinRange (PeerHandle peerHandle, byte[] serviceSpecificInfo, List<byte[]> matchFilter, int distanceMm)"}, "onPublishStarted(android.net.wifi.aware.PublishDiscoverySession)": {"Returns": [], "Parameters": [["@B_android#net#wifi#aware#PublishDiscoverySession_E@", "PublishDiscoverySession: The @B_android#net#wifi#aware#PublishDiscoverySession_E@ used to control the discovery session. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a publish operation is started successfully in response to a @B_android#net#wifi#aware#WifiAwareSession#publish_E@ operation.", "history": "Added in API level 26", "FullName": "public void onPublishStarted (PublishDiscoverySession session)"}, "DiscoverySessionCallback()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 26", "FullName": "public DiscoverySessionCallback ()"}, "onMessageSendFailed(int)": {"Returns": [], "Parameters": [["int", "int: The arbitrary message ID specified when sending the message."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when message transmission initiated with @B_android#net#wifi#aware#DiscoverySession#sendMessage_E@ fails. E.g. when no ACK is received from the peer. Note that either this callback or @B_android#net#wifi#aware#DiscoverySessionCallback#onMessageSendSucceeded_E@ will be received - never both.", "history": "Added in API level 26", "FullName": "public void onMessageSendFailed (int messageId)"}, "onSubscribeStarted(android.net.wifi.aware.SubscribeDiscoverySession)": {"Returns": [], "Parameters": [["@B_android#net#wifi#aware#SubscribeDiscoverySession_E@", "SubscribeDiscoverySession: The @B_android#net#wifi#aware#SubscribeDiscoverySession_E@ used to control the discovery session. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a subscribe operation is started successfully in response to a @B_android#net#wifi#aware#WifiAwareSession#subscribe_E@ operation.", "history": "Added in API level 26", "FullName": "public void onSubscribeStarted (SubscribeDiscoverySession session)"}, "onSessionTerminated()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a discovery session (publish or subscribe) terminates. Termination may be due to user-request (either directly through @B_android#net#wifi#aware#DiscoverySession#close_E@ or application-specified expiration, e.g. @B_android#net#wifi#aware#PublishConfig#Builder#setTtlSec_E@ or @B_android#net#wifi#aware#SubscribeConfig#Builder#setTtlSec_E@).", "history": "Added in API level 26", "FullName": "public void onSessionTerminated ()"}, "onMessageReceived(android.net.wifi.aware.PeerHandle,byte[])": {"Returns": [], "Parameters": [["@B_android#net#wifi#aware#PeerHandle_E@", "PeerHandle: An opaque handle to the peer matching our discovery operation."], ["byte[]", "byte: A byte array containing the message."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a message is received from a discovery session peer - in response to the peer's @B_android#net#wifi#aware#DiscoverySession#sendMessage_E@.", "history": "Added in API level 26", "FullName": "public void onMessageReceived (PeerHandle peerHandle, byte[] message)"}}, "Inheritance": [], "ClassName": "android.net.wifi.aware.DiscoverySessionCallback", "ClassDesc": "Base class for Aware session events callbacks. Should be extended by applications wanting notifications. The callbacks are set when a publish or subscribe session is created using @B_android#net#wifi#aware#WifiAwareSession#publish_E@ or @B_android#net#wifi#aware#WifiAwareSession#subscribe_E@. A single callback is set at session creation - it cannot be replaced."}