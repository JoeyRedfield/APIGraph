{"Functions": {"addFile(java.lang.String, java.io.File, int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: describing the type of entry being stored"], ["@B_java#io#File_E@", "File: to read from"], ["int", "int: describing the data"]], "Throws": [["@B_java#io#IOException_E@", "if the file can't be opened"]], "SeeAlso": [], "Permissions": [], "Description": "Stores the contents of a file, which may be ignored or discarded as with @B_android#os#DropBoxManager#addText_E@.", "history": "added in API level 8", "FullName": "public void addFile (String tag, File file, int flags)"}, "addText(java.lang.String, java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: describing the type of entry being stored"], ["@B_java#lang#String_E@", "String: value to store"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Stores human-readable text. The data may be discarded eventually (or even immediately) if space is limited, or ignored entirely if the tag has been blocked (see @B_android#os#DropBoxManager#isTagEnabled_E@).", "history": "added in API level 8", "FullName": "public void addText (String tag, String data)"}, "isTagEnabled(java.lang.String)": {"Returns": [["boolean", "whether events with that tag would be accepted"]], "Parameters": [["@B_java#lang#String_E@", "String: that would be used in @B_android#os#DropBoxManager#addText_E@ or @B_android#os#DropBoxManager#addFile_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks any blacklists (set in system settings) to see whether a certain tag is allowed. Entries with disabled tags will be dropped immediately, so you can save the work of actually constructing and sending the data.", "history": "Added in API level 8", "FullName": "public boolean isTagEnabled (String tag)"}, "getNextEntry(java.lang.String,long)": {"Returns": [["@B_android#os#DropBoxManager#Entry_E@", "the next entry, or null if there are no more entries"]], "Parameters": [["@B_java#lang#String_E@", "String: of entry to look for, null for all tags"], ["long", "long: time of the last entry seen"]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#READ_LOGS_E@", "@B_android#Manifest#permission#PACKAGE_USAGE_STATS_E@"], "Description": "Gets the next entry from the drop box after the specified time. You must always call @B_android#os#DropBoxManager#Entry#close_E@ on the return value! Requires @B_android#Manifest#permission#READ_LOGS_E@ and @B_android#Manifest#permission#PACKAGE_USAGE_STATS_E@", "history": "Added in API level 8", "FullName": "public DropBoxManager.Entry getNextEntry (String tag, long msec)"}, "addData(java.lang.String,byte[],int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: describing the type of entry being stored"], ["byte[]", "byte: value to store"], ["int", "int: describing the data"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Stores binary data, which may be ignored or discarded as with @B_android#os#DropBoxManager#addText_E@.", "history": "Added in API level 8", "FullName": "public void addData (String tag, byte[] data, int flags)"}, "addText(java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: describing the type of entry being stored"], ["@B_java#lang#String_E@", "String: value to store"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Stores human-readable text. The data may be discarded eventually (or even immediately) if space is limited, or ignored entirely if the tag has been blocked (see @B_android#os#DropBoxManager#isTagEnabled_E@).", "history": "Added in API level 8", "FullName": "public void addText (String tag, String data)"}, "addData(java.lang.String, byte[], int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: describing the type of entry being stored"], ["byte[]", "byte: value to store"], ["int", "int: describing the data"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Stores binary data, which may be ignored or discarded as with @B_android#os#DropBoxManager#addText_E@.", "history": "added in API level 8", "FullName": "public void addData (String tag, byte[] data, int flags)"}, "addFile(java.lang.String,java.io.File,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: describing the type of entry being stored"], ["@B_java#io#File_E@", "File: to read from"], ["int", "int: describing the data"]], "Throws": [["@B_java#io#IOException_E@", "if the file can't be opened"]], "SeeAlso": [], "Permissions": [], "Description": "Stores the contents of a file, which may be ignored or discarded as with @B_android#os#DropBoxManager#addText_E@.", "history": "Added in API level 8", "FullName": "public void addFile (String tag, File file, int flags)"}, "DropBoxManager()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a dummy instance for testing. All methods will fail unless overridden with an appropriate mock implementation. To obtain a functional instance, use @B_android#content#Context#getSystemService_E@.", "history": "Added in API level 8", "FullName": "protected DropBoxManager ()"}, "getNextEntry(java.lang.String, long)": {"Returns": [["@B_android#os#DropBoxManager#Entry_E@", "the next entry, or null if there are no more entries"]], "Parameters": [["@B_java#lang#String_E@", "String: of entry to look for, null for all tags"], ["long", "long: time of the last entry seen"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the next entry from the drop box after the specified time. Requires android.permission.READ_LOGS. You must always call @B_android#os#DropBoxManager#Entry#close_E@ on the return value!", "history": "added in API level 8", "FullName": "public DropBoxManager.Entry getNextEntry (String tag, long msec)"}}, "Inheritance": [], "ClassName": "android.os.DropBoxManager", "ClassDesc": "Enqueues chunks of data (from various sources -- application crashes, kernel log records, etc.). The queue is size bounded and will drop old data if the enqueued data exceeds the maximum size. You can think of this as a persistent, system-wide, blob-oriented \"logcat\". DropBoxManager entries are not sent anywhere directly, but other system services and debugging tools may scan and upload entries for processing."}