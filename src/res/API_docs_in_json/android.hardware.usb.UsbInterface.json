{"Functions": {"getInterfaceClass()": {"Returns": [["int", "the interface's class"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the interface's class field. Some useful constants for USB classes can be found in @B_android#hardware#usb#UsbConstants_E@", "history": "Added in API level 12", "FullName": "public int getInterfaceClass ()"}, "getInterfaceProtocol()": {"Returns": [["int", "the interface's protocol"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the interface's protocol field.", "history": "Added in API level 12", "FullName": "public int getInterfaceProtocol ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 12", "FullName": "public void writeToParcel (Parcel parcel, int flags)"}, "getEndpointCount()": {"Returns": [["int", "the number of endpoints"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of @B_android#hardware#usb#UsbEndpoint_E@s this interface contains.", "history": "Added in API level 12", "FullName": "public int getEndpointCount ()"}, "getEndpoint(int)": {"Returns": [["@B_android#hardware#usb#UsbEndpoint_E@", "the endpoint"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#hardware#usb#UsbEndpoint_E@ at the given index.", "history": "Added in API level 12", "FullName": "public UsbEndpoint getEndpoint (int index)"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 12", "FullName": "public int describeContents ()"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 12", "FullName": "public String toString ()"}, "getInterfaceSubclass()": {"Returns": [["int", "the interface's subclass"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the interface's subclass field.", "history": "Added in API level 12", "FullName": "public int getInterfaceSubclass ()"}, "getId()": {"Returns": [["int", "the interface's ID"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the interface's bInterfaceNumber field. This is an integer that along with the alternate setting uniquely identifies the interface on the device.", "history": "Added in API level 12", "FullName": "public int getId ()"}, "getAlternateSetting()": {"Returns": [["int", "the interface's alternate setting"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the interface's bAlternateSetting field. This is an integer that along with the ID uniquely identifies the interface on the device. @B_android#hardware#usb#UsbDeviceConnection#setInterface_E@ can be used to switch between two interfaces with the same ID but different alternate setting.", "history": "Added in API level 21", "FullName": "public int getAlternateSetting ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 12", "FullName": "public void writeToParcel (Parcel parcel, int flags)"}, "getName()": {"Returns": [["@B_java#lang#String_E@", "the interface's name, or null if the property could not be read"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the interface's name.", "history": "Added in API level 21", "FullName": "public String getName ()"}}, "Inheritance": [], "ClassName": "android.hardware.usb.UsbInterface", "ClassDesc": "A class representing an interface on a @B_android#hardware#usb#UsbDevice_E@. USB devices can have one or more interfaces, each one providing a different piece of functionality, separate from the other interfaces. An interface will have one or more @B_android#hardware#usb#UsbEndpoint_E@s, which are the channels by which the host transfers data with the device."}