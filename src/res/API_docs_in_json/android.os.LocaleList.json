{"Functions": {"writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 24", "FullName": "public void writeToParcel (Parcel dest, int parcelableFlags)"}, "getDefault()": {"Returns": [["@B_android#os#LocaleList_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The result is guaranteed to include the default Locale returned by Locale.getDefault(), but not necessarily at the top of the list. The default locale not being at the top of the list is an indication that the system has set the default locale to one of the user's other preferred locales, having concluded that the primary preference is not supported but a secondary preference is. Note that the default LocaleList would change if Locale.setDefault() is called. This method takes that into account by always checking the output of Locale.getDefault() and recalculating the default LocaleList if needed.", "history": "Added in API level 24", "FullName": "public static LocaleList getDefault ()"}, "getAdjustedDefault()": {"Returns": [["@B_android#os#LocaleList_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the default locale list, adjusted by moving the default locale to its first position.", "history": "Added in API level 24", "FullName": "public static LocaleList getAdjustedDefault ()"}, "isPseudoLocale(android.icu.util.ULocale)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#icu#util#ULocale_E@", "ULocale: This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if locale is a pseudo-locale, false otherwise.", "history": "Added in API level 29", "FullName": "public static boolean isPseudoLocale (ULocale locale)"}, "indexOf(java.util.Locale)": {"Returns": [["int", "The index of the first occurrence of the @B_java#util#Locale_E@ or -1 if the item wasn't found. Value is -1 or greater"]], "Parameters": [["@B_java#util#Locale_E@", "Locale: The @B_java#util#Locale_E@ to search for."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Searches this @B_android#os#LocaleList_E@ for the specified @B_java#util#Locale_E@ and returns the index of the first occurrence.", "history": "Added in API level 24", "FullName": "public int indexOf (Locale locale)"}, "isEmpty()": {"Returns": [["boolean", "true if this @B_android#os#LocaleList_E@ has no @B_java#util#Locale_E@ items, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether the @B_android#os#LocaleList_E@ contains no @B_java#util#Locale_E@ items.", "history": "Added in API level 24", "FullName": "public boolean isEmpty ()"}, "toLanguageTags()": {"Returns": [["@B_java#lang#String_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves a String representation of the language tags in this list.", "history": "Added in API level 24", "FullName": "public String toLanguageTags ()"}, "LocaleList(java.util.Locale...)": {"Returns": [], "Parameters": [["@B_java#util#Locale_E@", "Locale: This value must never be null."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if any of the input locales is null."], ["@B_java#lang#IllegalArgumentException_E@", "if any of the input locales repeat."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new @B_android#os#LocaleList_E@. For empty lists of @B_java#util#Locale_E@ items it is better to use @B_android#os#LocaleList#getEmptyLocaleList_E@, which returns a pre-constructed empty list.", "history": "Added in API level 24", "FullName": "public LocaleList (Locale... list)"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 24", "FullName": "public int describeContents ()"}, "getFirstMatch(java.lang.String[])": {"Returns": [["@B_java#util#Locale_E@", "The first @B_java#util#Locale_E@ from this list that appears in the given array, or null if the @B_android#os#LocaleList_E@ is empty."]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the first match in the locale list given an unordered array of supported locales in BCP 47 format.", "history": "Added in API level 24", "FullName": "public Locale getFirstMatch (String[] supportedLocales)"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 24", "FullName": "public String toString ()"}, "forLanguageTags(java.lang.String)": {"Returns": [["@B_android#os#LocaleList_E@", "A new instance with the @B_java#util#Locale_E@ items identified by the given tags. This value will never be null."]], "Parameters": [["@B_java#lang#String_E@", "String: The language tags to be included as a single @B_java#lang#String_E@ separated by commas. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Generates a new LocaleList with the given language tags.", "history": "Added in API level 24", "FullName": "public static LocaleList forLanguageTags (String list)"}, "setDefault(android.os.LocaleList)": {"Returns": [], "Parameters": [["@B_android#os#LocaleList_E@", "LocaleList: This value must never be null."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if the input is null."], ["@B_java#lang#IllegalArgumentException_E@", "if the input is empty."]], "SeeAlso": [], "Permissions": [], "Description": "Also sets the default locale by calling Locale.setDefault() with the first locale in the list.", "history": "Added in API level 24", "FullName": "public static void setDefault (LocaleList locales)"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if this object is the same as the obj argument; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the reference object with which to compare."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether some other object is \"equal to\" this one. The equals method implements an equivalence relation on non-null object references: It is x, x.equals(x) should return true. It is x and y, x.equals(y) should return true if and only if y.equals(x) returns true. It is x, y, and z, if x.equals(y) returns true and y.equals(z) returns true, then x.equals(z) should return true. It is x and y, multiple invocations of x.equals(y) consistently return true or consistently return false, provided no information used in equals comparisons on the objects is modified. For any non-null reference value x, x.equals(null) should return false. The equals method for class Object implements the most discriminating possible equivalence relation on objects; that is, for any non-null reference values x and y, this method returns true if and only if x and y refer to the same object (x == y has the value true). Note that it is generally necessary to override the hashCode method whenever this method is overridden, so as to maintain the general contract for the hashCode method, which states that equal objects must have equal hash codes.", "history": "Added in API level 24", "FullName": "public boolean equals (Object other)"}, "get(int)": {"Returns": [["@B_java#util#Locale_E@", "The @B_java#util#Locale_E@ in the given index."]], "Parameters": [["int", "int: The position to retrieve."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the @B_java#util#Locale_E@ at the specified index.", "history": "Added in API level 24", "FullName": "public Locale get (int index)"}, "hashCode()": {"Returns": [["int", "a hash code value for this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code value for the object. This method is supported for the benefit of hash tables such as those provided by @B_java#util#HashMap_E@. The general contract of hashCode is: Whenever it is invoked on the same object more than once during an execution of a Java application, the hashCode method must consistently return the same integer, provided no information used in equals comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application. If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result. It is not required that if two objects are unequal according to the @B_java#lang#Object#equals_E@ method, then calling the hashCode method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables. As much as is reasonably practical, the hashCode method defined by class Object does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the Java\u2122 programming language.)", "history": "Added in API level 24", "FullName": "public int hashCode ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 24", "FullName": "public void writeToParcel (Parcel dest, int parcelableFlags)"}, "size()": {"Returns": [["int", "Value is 0 or greater"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of @B_java#util#Locale_E@ items in this @B_android#os#LocaleList_E@.", "history": "Added in API level 24", "FullName": "public int size ()"}, "getEmptyLocaleList()": {"Returns": [["@B_android#os#LocaleList_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve an empty instance of @B_android#os#LocaleList_E@.", "history": "Added in API level 24", "FullName": "public static LocaleList getEmptyLocaleList ()"}}, "Inheritance": [], "ClassName": "android.os.LocaleList", "ClassDesc": "LocaleList is an immutable list of Locales, typically used to keep an ordered list of user preferences for locales."}