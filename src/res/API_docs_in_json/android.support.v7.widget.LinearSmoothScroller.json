{"Functions": {"onStart()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when smooth scroll is started. This might be a good time to do setup.", "history": "added in version 22.0.0", "FullName": "void onStart ()"}, "calculateDxToMakeVisible(android.view.View, int)": {"Returns": [["int", "The vertical scroll amount necessary to make the view visible with the given snap preference."]], "Parameters": [["@B_android#view#View_E@", "View: The view which we want to make fully visible"], ["int", "int: The edge which the view should snap to when entering the visible area. One of @B_android#support#v7#widget#LinearSmoothScroller#SNAP_TO_START_E@, @B_android#support#v7#widget#LinearSmoothScroller#SNAP_TO_END_E@ or @B_android#support#v7#widget#LinearSmoothScroller#SNAP_TO_END_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Calculates the horizontal scroll amount necessary to make the given view fully visible inside the RecyclerView.", "history": "added in version 22.0.0", "FullName": "int calculateDxToMakeVisible (View view, int snapPreference)"}, "getVerticalSnapPreference()": {"Returns": [["int", "SNAP_TO_START, SNAP_TO_END or SNAP_TO_ANY; depending on the current target vector"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v7#widget#LinearSmoothScroller_E@"], "Permissions": [], "Description": "When scrolling towards a child view, this method defines whether we should align the top or the bottom edge of the child with the parent RecyclerView.", "history": "added in version 22.0.0", "FullName": "int getVerticalSnapPreference ()"}, "calculateTimeForDeceleration(int)": {"Returns": [["int", "Time for DecelerateInterpolator to smoothly traverse the distance when transitioning from LinearInterpolation"]], "Parameters": [["int", "int: Distance to scroll"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Calculates the time for deceleration so that transition from LinearInterpolator to DecelerateInterpolator looks smooth.", "history": "added in version 22.0.0", "FullName": "int calculateTimeForDeceleration (int dx)"}, "getHorizontalSnapPreference()": {"Returns": [["int", "SNAP_TO_START, SNAP_TO_END or SNAP_TO_ANY; depending on the current target vector"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v7#widget#LinearSmoothScroller_E@"], "Permissions": [], "Description": "When scrolling towards a child view, this method defines whether we should align the left or the right edge of the child with the parent RecyclerView.", "history": "added in version 22.0.0", "FullName": "int getHorizontalSnapPreference ()"}, "calculateTimeForScrolling(int)": {"Returns": [["int", "Time in milliseconds"]], "Parameters": [["int", "int: Distance in pixels that we want to scroll"]], "Throws": [], "SeeAlso": ["@B_android#support#v7#widget#LinearSmoothScroller#calculateSpeedPerPixel_E@"], "Permissions": [], "Description": "Calculates the time it should take to scroll the given distance (in pixels)", "history": "added in version 22.0.0", "FullName": "int calculateTimeForScrolling (int dx)"}, "computeScrollVectorForPosition(int)": {"Returns": [["@B_android#graphics#PointF_E@", "the scroll vector for a given target position"]], "Parameters": [["int", "int: the position to which the scroller is scrolling"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Compute the scroll vector for a given target position. This method can return null if the layout manager cannot calculate a scroll vector for the given position (e.g. it has no current scroll position).", "history": "added in version 22.0.0", "FullName": "PointF computeScrollVectorForPosition (int targetPosition)"}, "calculateDyToMakeVisible(android.view.View, int)": {"Returns": [["int", "The vertical scroll amount necessary to make the view visible with the given snap preference."]], "Parameters": [["@B_android#view#View_E@", "View: The view which we want to make fully visible"], ["int", "int: The edge which the view should snap to when entering the visible area. One of @B_android#support#v7#widget#LinearSmoothScroller#SNAP_TO_START_E@, @B_android#support#v7#widget#LinearSmoothScroller#SNAP_TO_END_E@ or @B_android#support#v7#widget#LinearSmoothScroller#SNAP_TO_ANY_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Calculates the vertical scroll amount necessary to make the given view fully visible inside the RecyclerView.", "history": "added in version 22.0.0", "FullName": "int calculateDyToMakeVisible (View view, int snapPreference)"}, "calculateDtToFit(int, int, int, int, int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Helper method for @B_android#support#v7#widget#LinearSmoothScroller#calculateDxToMakeVisible_E@ and @B_android#support#v7#widget#LinearSmoothScroller#calculateDyToMakeVisible_E@", "history": "added in version 22.0.0", "FullName": "int calculateDtToFit (int viewStart, int viewEnd, int boxStart, int boxEnd, int snapPreference)"}, "onStop()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when smooth scroller is stopped. This is a good place to cleanup your state etc.", "history": "added in version 22.0.0", "FullName": "void onStop ()"}, "LinearSmoothScroller(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "LinearSmoothScroller (Context context)"}}, "Inheritance": ["java.lang.Object", "@B_android#support#v7#widget#RecyclerView#SmoothScroller_E@"], "ClassName": "android.support.v7.widget.LinearSmoothScroller", "ClassDesc": "@B_android#support#v7#widget#RecyclerView#SmoothScroller_E@ implementation which uses a https:##developer#android#com@B_android#view#animation#LinearInterpolator_E@ until the target position becomes a child of the RecyclerView and then uses a https:##developer#android#com@B_android#view#animation#DecelerateInterpolator_E@ to slowly approach to target position. If the @B_android#support#v7#widget#RecyclerView#LayoutManager_E@ you are using does not implement the @B_android#support#v7#widget#RecyclerView#SmoothScroller#ScrollVectorProvider_E@ interface, then you must override the @B_android#support#v7#widget#RecyclerView#SmoothScroller#computeScrollVectorForPosition_E@ method. All the LayoutManagers bundled with the support library implement this interface."}