{"Functions": {"attachCall(android.net.sip.SipSession,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#net#sip#SipSession_E@", "SipSession: the session that receives the incoming call"], ["@B_java#lang#String_E@", "String: the session description of the incoming call"]], "Throws": [["@B_android#net#sip#SipException_E@", "if the SIP service fails to attach this object to the session or VOIP API is not supported by the device"]], "SeeAlso": ["@B_android#net#sip#SipManager#isVoipSupported_E@"], "Permissions": [], "Description": "Attaches an incoming call to this call object.", "history": "Added in API level 9", "FullName": "public void attachCall (SipSession session, String sessionDescription)"}, "isInCall()": {"Returns": [["boolean", "true if the call is established"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks if the call is established.", "history": "Added in API level 9", "FullName": "public boolean isInCall ()"}, "sendDtmf(int, android.os.Message)": {"Returns": [], "Parameters": [["int", "int: the DTMF code to send. Value 0 to 15 (inclusive) are valid inputs."], ["@B_android#os#Message_E@", "Message: the result message to send when done"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sends a DTMF code. According to", "history": "added in API level 9", "FullName": "public void sendDtmf (int code, Message result)"}, "makeCall(android.net.sip.SipProfile,android.net.sip.SipSession,int)": {"Returns": [], "Parameters": [["@B_android#net#sip#SipProfile_E@", "SipProfile: the SIP profile to make the call to"], ["@B_android#net#sip#SipSession_E@", "SipSession: the @B_android#net#sip#SipSession_E@ for carrying out the call"], ["int", "int: the timeout value in seconds. Default value (defined by SIP protocol) is used if timeout is zero or negative."]], "Throws": [["@B_android#net#sip#SipException_E@", "if the SIP service fails to create a session for the call or VOIP API is not supported by the device"]], "SeeAlso": ["@B_android#net#sip#SipAudioCall#Listener#onError_E@", "@B_android#net#sip#SipManager#isVoipSupported_E@"], "Permissions": [], "Description": "Initiates an audio call to the specified profile. The attempt will be timed out if the call is not established within timeout seconds and @B_android#net#sip#SipAudioCall#Listener#onError_E@ will be called.", "history": "Added in API level 9", "FullName": "public void makeCall (SipProfile peerProfile, SipSession sipSession, int timeout)"}, "isOnHold()": {"Returns": [["boolean", "true if the call is on hold"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks if the call is on hold.", "history": "Added in API level 9", "FullName": "public boolean isOnHold ()"}, "continueCall(int)": {"Returns": [], "Parameters": [["int", "int: the timeout value in seconds. Default value (defined by SIP protocol) is used if timeout is zero or negative."]], "Throws": [["@B_android#net#sip#SipException_E@", "if the SIP service fails to unhold the call"]], "SeeAlso": ["@B_android#net#sip#SipAudioCall#Listener#onError_E@"], "Permissions": [], "Description": "Continues a call that's on hold. When succeeds, @B_android#net#sip#SipAudioCall#Listener#onCallEstablished_E@ is called. The attempt will be timed out if the call is not established within timeout seconds and @B_android#net#sip#SipAudioCall#Listener#onError_E@ will be called.", "history": "Added in API level 9", "FullName": "public void continueCall (int timeout)"}, "endCall()": {"Returns": [], "Parameters": [], "Throws": [["@B_android#net#sip#SipException_E@", "if the SIP service fails to end the call"]], "SeeAlso": [], "Permissions": [], "Description": "Ends a call.", "history": "Added in API level 9", "FullName": "public void endCall ()"}, "answerCall(int)": {"Returns": [], "Parameters": [["int", "int: the timeout value in seconds. Default value (defined by SIP protocol) is used if timeout is zero or negative."]], "Throws": [["@B_android#net#sip#SipException_E@", "if the SIP service fails to answer the call"]], "SeeAlso": ["@B_android#net#sip#SipAudioCall#Listener#onError_E@"], "Permissions": [], "Description": "Answers a call. The attempt will be timed out if the call is not established within timeout seconds and @B_android#net#sip#SipAudioCall#Listener#onError_E@ will be called.", "history": "Added in API level 9", "FullName": "public void answerCall (int timeout)"}, "getState()": {"Returns": [["int", "the session state"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the state of the @B_android#net#sip#SipSession_E@ that carries this call. The value returned must be one of the states in @B_android#net#sip#SipSession#State_E@.", "history": "Added in API level 9", "FullName": "public int getState ()"}, "getLocalProfile()": {"Returns": [["@B_android#net#sip#SipProfile_E@", "the local SIP profile"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the local SIP profile.", "history": "Added in API level 9", "FullName": "public SipProfile getLocalProfile ()"}, "sendDtmf(int,android.os.Message)": {"Returns": [], "Parameters": [["int", "int: the DTMF code to send. Value 0 to 15 (inclusive) are valid inputs."], ["@B_android#os#Message_E@", "Message: the result message to send when done"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sends a DTMF code. According to", "history": "Added in API level 9", "FullName": "public void sendDtmf (int code, Message result)"}, "sendDtmf(int)": {"Returns": [], "Parameters": [["int", "int: the DTMF code to send. Value 0 to 15 (inclusive) are valid inputs."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sends a DTMF code. According to", "history": "Added in API level 9", "FullName": "public void sendDtmf (int code)"}, "isMuted()": {"Returns": [["boolean", "true if the call is muted"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks if the call is muted.", "history": "Added in API level 9", "FullName": "public boolean isMuted ()"}, "close()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Closes this object. This object is not usable after being closed.", "history": "Added in API level 9", "FullName": "public void close ()"}, "getPeerProfile()": {"Returns": [["@B_android#net#sip#SipProfile_E@", "the peer's SIP profile"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the peer's SIP profile.", "history": "Added in API level 9", "FullName": "public SipProfile getPeerProfile ()"}, "toggleMute()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Toggles mute.", "history": "Added in API level 9", "FullName": "public void toggleMute ()"}, "startAudio()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#RECORD_AUDIO_E@", "@B_android#Manifest#permission#ACCESS_WIFI_STATE_E@", "@B_android#Manifest#permission#WAKE_LOCK_E@"], "Description": "Starts the audio for the established call. This method should be called after @B_android#net#sip#SipAudioCall#Listener#onCallEstablished_E@ is called. @B_android#Manifest#permission#RECORD_AUDIO_E@, @B_android#Manifest#permission#ACCESS_WIFI_STATE_E@ and @B_android#Manifest#permission#WAKE_LOCK_E@ permissions.", "history": "Added in API level 9", "FullName": "public void startAudio ()"}, "setSpeakerMode(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: set true to enable speaker mode; false to disable"]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#MODIFY_AUDIO_SETTINGS_E@"], "Description": "Puts the device to speaker mode. @B_android#Manifest#permission#MODIFY_AUDIO_SETTINGS_E@ permission.", "history": "Added in API level 9", "FullName": "public void setSpeakerMode (boolean speakerMode)"}, "holdCall(int)": {"Returns": [], "Parameters": [["int", "int: the timeout value in seconds. Default value (defined by SIP protocol) is used if timeout is zero or negative."]], "Throws": [["@B_android#net#sip#SipException_E@", "if the SIP service fails to hold the call"]], "SeeAlso": ["@B_android#net#sip#SipAudioCall#Listener#onError_E@"], "Permissions": [], "Description": "Puts a call on hold. When succeeds, @B_android#net#sip#SipAudioCall#Listener#onCallHeld_E@ is called. The attempt will be timed out if the call is not established within timeout seconds and @B_android#net#sip#SipAudioCall#Listener#onError_E@ will be called.", "history": "Added in API level 9", "FullName": "public void holdCall (int timeout)"}, "SipAudioCall(android.content.Context,android.net.sip.SipProfile)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: the context for accessing system services such as ringtone, audio, WIFI etc"], ["@B_android#net#sip#SipProfile_E@", "SipProfile no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a call object with the local SIP profile.", "history": "Added in API level 9", "FullName": "public SipAudioCall (Context context, SipProfile localProfile)"}, "setListener(android.net.sip.SipAudioCall.Listener)": {"Returns": [], "Parameters": [["@B_android#net#sip#SipAudioCall#Listener_E@", "SipAudioCall.Listener: to listen to the audio call events of this object"]], "Throws": [], "SeeAlso": ["@B_android#net#sip#SipAudioCall#setListener_E@"], "Permissions": [], "Description": "Sets the listener to listen to the audio call events. The method calls @B_android#net#sip#SipAudioCall#setListener_E@.", "history": "Added in API level 9", "FullName": "public void setListener (SipAudioCall.Listener listener)"}, "setListener(android.net.sip.SipAudioCall.Listener,boolean)": {"Returns": [], "Parameters": [["@B_android#net#sip#SipAudioCall#Listener_E@", "SipAudioCall.Listener: to listen to the audio call events of this object"], ["boolean", "boolean: set to true if the caller wants to be called back immediately on the current state"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the listener to listen to the audio call events. A @B_android#net#sip#SipAudioCall_E@ can only hold one listener at a time. Subsequent calls to this method override the previous listener.", "history": "Added in API level 9", "FullName": "public void setListener (SipAudioCall.Listener listener, boolean callbackImmediately)"}}, "Inheritance": [], "ClassName": "android.net.sip.SipAudioCall", "ClassDesc": "Handles an Internet audio call over SIP. You can instantiate this class with @B_android#net#sip#SipManager_E@, using @B_android#net#sip#SipManager#makeAudioCall_E@ and @B_android#net#sip#SipManager#takeAudioCall_E@. @B_android#Manifest#permission#INTERNET_E@ and @B_android#Manifest#permission#USE_SIP_E@ permissions. In addition, @B_android#net#sip#SipAudioCall#startAudio_E@ requires the @B_android#Manifest#permission#RECORD_AUDIO_E@, @B_android#Manifest#permission#ACCESS_WIFI_STATE_E@, and @B_android#Manifest#permission#WAKE_LOCK_E@ permissions; and @B_android#net#sip#SipAudioCall#setSpeakerMode_E@ requires the @B_android#Manifest#permission#MODIFY_AUDIO_SETTINGS_E@ permission."}