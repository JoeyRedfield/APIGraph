{"Functions": {"CursorAdapter(android.content.Context,android.database.Cursor)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The context"], ["@B_android#database#Cursor_E@", "Cursor: The cursor from which to get the data."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This option is discouraged, as it results in Cursor queries being performed on the application's UI thread and thus can cause poor responsiveness or even Application Not Responding errors. As an alternative, use @B_android#app#LoaderManager_E@ with a @B_android#content#CursorLoader_E@. Constructor that always enables auto-requery.", "history": "Added in API level 1", "FullName": "public CursorAdapter (Context context, Cursor c)"}, "bindView(android.view.View,android.content.Context,android.database.Cursor)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: Existing view, returned earlier by newView"], ["@B_android#content#Context_E@", "Context: Interface to application's global information"], ["@B_android#database#Cursor_E@", "Cursor: The cursor from which to get the data. The cursor is already moved to the correct position."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Bind an existing view to the data pointed to by cursor", "history": "Added in API level 1", "FullName": "public abstract void bindView (View view, Context context, Cursor cursor)"}, "CursorAdapter(android.content.Context,android.database.Cursor,boolean)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The context"], ["@B_android#database#Cursor_E@", "Cursor: The cursor from which to get the data."], ["boolean", "boolean: If true the adapter will call requery() on the cursor whenever it changes so the most recent data is always displayed. Using true here is discouraged."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor that allows control over auto-requery. It is recommended you not use this, but instead @B_android#widget#CursorAdapter#CursorAdapter_E@. When using this constructor, @B_android#widget#CursorAdapter#FLAG_REGISTER_CONTENT_OBSERVER_E@ will always be set.", "history": "Added in API level 1", "FullName": "public CursorAdapter (Context context, Cursor c, boolean autoRequery)"}, "convertToString(android.database.Cursor)": {"Returns": [["@B_java#lang#CharSequence_E@", "a CharSequence representing the value"]], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: the cursor to convert to a CharSequence"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Converts the cursor into a CharSequence. Subclasses should override this method to convert their results. The default implementation returns an empty String for null values or the default String representation of the value.", "history": "Added in API level 1", "FullName": "public CharSequence convertToString (Cursor cursor)"}, "onContentChanged()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#database#ContentObserver#onChange_E@"], "Permissions": [], "Description": "Called when the @B_android#database#ContentObserver_E@ on the cursor receives a change notification. The default implementation provides the auto-requery logic, but may be overridden by sub classes.", "history": "Added in API level 3", "FullName": "protected void onContentChanged ()"}, "newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)": {"Returns": [["@B_android#view#View_E@", "the newly created view."]], "Parameters": [["@B_android#content#Context_E@", "Context: Interface to application's global information"], ["@B_android#database#Cursor_E@", "Cursor: The cursor from which to get the data. The cursor is already moved to the correct position."], ["@B_android#view#ViewGroup_E@", "ViewGroup: The parent to which the new view is attached to"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Makes a new view to hold the data pointed to by cursor.", "history": "Added in API level 1", "FullName": "public abstract View newView (Context context, Cursor cursor, ViewGroup parent)"}, "swapCursor(android.database.Cursor)": {"Returns": [["@B_android#database#Cursor_E@", "Returns the previously set Cursor, or null if there was not one. If the given new Cursor is the same instance is the previously set Cursor, null is also returned."]], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: The new cursor to be used."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Swap in a new Cursor, returning the old Cursor. Unlike @B_android#widget#CursorAdapter#changeCursor_E@, the returned old Cursor is not closed.", "history": "Added in API level 11", "FullName": "public Cursor swapCursor (Cursor newCursor)"}, "getCount()": {"Returns": [["int", "Count of items."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#widget#Adapter#getCount_E@"], "Permissions": [], "Description": "How many items are in the data set represented by this Adapter.", "history": "Added in API level 1", "FullName": "public int getCount ()"}, "getItem(int)": {"Returns": [["@B_java#lang#Object_E@", "The data at the specified position."]], "Parameters": [["int", "int: Position of the item whose data we want within the adapter's data set."]], "Throws": [], "SeeAlso": ["@B_android#widget#Adapter#getItem_E@"], "Permissions": [], "Description": "Get the data item associated with the specified position in the data set.", "history": "Added in API level 1", "FullName": "public Object getItem (int position)"}, "getFilter()": {"Returns": [["@B_android#widget#Filter_E@", "a filter used to constrain data"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a filter that can be used to constrain data with a filtering pattern. This method is usually implemented by @B_android#widget#Adapter_E@ classes.", "history": "Added in API level 1", "FullName": "public Filter getFilter ()"}, "setFilterQueryProvider(android.widget.FilterQueryProvider)": {"Returns": [], "Parameters": [["@B_android#widget#FilterQueryProvider_E@", "FilterQueryProvider: the filter query provider or null to remove it"]], "Throws": [], "SeeAlso": ["@B_android#widget#CursorAdapter#getFilterQueryProvider_E@", "@B_android#widget#CursorAdapter#runQueryOnBackgroundThread_E@"], "Permissions": [], "Description": "Sets the query filter provider used to filter the current Cursor. The provider's @B_android#widget#FilterQueryProvider#runQuery_E@ method is invoked when filtering is requested by a client of this adapter.", "history": "Added in API level 1", "FullName": "public void setFilterQueryProvider (FilterQueryProvider filterQueryProvider)"}, "getCursor()": {"Returns": [["@B_android#database#Cursor_E@", "the cursor."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the cursor.", "history": "Added in API level 1", "FullName": "public Cursor getCursor ()"}, "newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)": {"Returns": [["@B_android#view#View_E@", "the newly created view."]], "Parameters": [["@B_android#content#Context_E@", "Context: Interface to application's global information"], ["@B_android#database#Cursor_E@", "Cursor: The cursor from which to get the data. The cursor is already moved to the correct position."], ["@B_android#view#ViewGroup_E@", "ViewGroup: The parent to which the new view is attached to"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Makes a new drop down view to hold the data pointed to by cursor.", "history": "Added in API level 1", "FullName": "public View newDropDownView (Context context, Cursor cursor, ViewGroup parent)"}, "getFilterQueryProvider()": {"Returns": [["@B_android#widget#FilterQueryProvider_E@", "the current filter query provider or null if it does not exist"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#widget#CursorAdapter#setFilterQueryProvider_E@", "@B_android#widget#CursorAdapter#runQueryOnBackgroundThread_E@"], "Permissions": [], "Description": "Returns the query filter provider used for filtering. When the provider is null, no filtering occurs.", "history": "Added in API level 1", "FullName": "public FilterQueryProvider getFilterQueryProvider ()"}, "init(android.content.Context,android.database.Cursor,boolean)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"], ["@B_android#database#Cursor_E@", "Cursor no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Don't use this, use the normal constructor. This will be removed in the future.", "history": "Added in API level 1 Deprecated in API level 15", "FullName": "protected void init (Context context, Cursor c, boolean autoRequery)"}, "runQueryOnBackgroundThread(java.lang.CharSequence)": {"Returns": [["@B_android#database#Cursor_E@", "a Cursor representing the results of the new query"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: the constraint with which the query must be filtered"]], "Throws": [], "SeeAlso": ["@B_android#widget#CursorAdapter#getFilter_E@", "@B_android#widget#CursorAdapter#getFilterQueryProvider_E@", "@B_android#widget#CursorAdapter#setFilterQueryProvider_E@"], "Permissions": [], "Description": "Runs a query with the specified constraint. This query is requested by the filter attached to this adapter. The query is provided by a @B_android#widget#FilterQueryProvider_E@. If no provider is specified, the current cursor is not filtered and returned. After this method returns the resulting cursor is passed to @B_android#widget#CursorAdapter#changeCursor_E@ and the previous cursor is closed. This method is always executed on a background thread, not on the application's main thread (or UI thread.) Contract: when constraint is null or empty, the original results, prior to any filtering, must be returned. This method may take several seconds to complete, so it should only be called from a worker thread.", "history": "Added in API level 1", "FullName": "public Cursor runQueryOnBackgroundThread (CharSequence constraint)"}, "changeCursor(android.database.Cursor)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: The new cursor to be used"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Change the underlying cursor to a new cursor. If there is an existing cursor it will be closed.", "history": "Added in API level 1", "FullName": "public void changeCursor (Cursor cursor)"}, "getDropDownViewTheme()": {"Returns": [["@B_android#content#res#Resources#Theme_E@", "the @B_android#content#res#Resources#Theme_E@ against which drop-down views are inflated, or null if one has not been explicitly set"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value previously set by a call to @B_android#widget#ThemedSpinnerAdapter#setDropDownViewTheme_E@.", "history": "Added in API level 23", "FullName": "public Resources.Theme getDropDownViewTheme ()"}, "getItemId(int)": {"Returns": [["long", "The id of the item at the specified position."]], "Parameters": [["int", "int: The position of the item within the adapter's data set whose row id we want."]], "Throws": [], "SeeAlso": ["@B_android#widget#Adapter#getItemId_E@"], "Permissions": [], "Description": "Get the row id associated with the specified position in the list.", "history": "Added in API level 1", "FullName": "public long getItemId (int position)"}, "hasStableIds()": {"Returns": [["boolean", "True if the same id always refers to the same object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether the item ids are stable across changes to the underlying data.", "history": "Added in API level 1", "FullName": "public boolean hasStableIds ()"}, "setDropDownViewTheme(android.content.res.Resources.Theme)": {"Returns": [], "Parameters": [["@B_android#content#res#Resources#Theme_E@", "Resources.Theme: the theme against which to inflate drop-down views or null to use the theme from the adapter's context"]], "Throws": [], "SeeAlso": ["@B_android#widget#CursorAdapter#newDropDownView_E@"], "Permissions": [], "Description": "Sets the @B_android#content#res#Resources#Theme_E@ against which drop-down views are inflated. By default, drop-down views are inflated against the theme of the @B_android#content#Context_E@ passed to the adapter's constructor.", "history": "Added in API level 23", "FullName": "public void setDropDownViewTheme (Resources.Theme theme)"}, "getView(int,android.view.View,android.view.ViewGroup)": {"Returns": [["@B_android#view#View_E@", "A View corresponding to the data at the specified position."]], "Parameters": [["int", "int: The position of the item within the adapter's data set of the item whose view we want."], ["@B_android#view#View_E@", "View: The old view to reuse, if possible. Note: You should check that this view is non-null and of an appropriate type before using. If it is not possible to convert this view to display the correct data, this method can create a new view. Heterogeneous lists can specify their number of view types, so that this View is always of the right type (see @B_android#widget#BaseAdapter#getViewTypeCount_E@ and @B_android#widget#BaseAdapter#getItemViewType_E@)."], ["@B_android#view#ViewGroup_E@", "ViewGroup: The parent that this view will eventually be attached to"]], "Throws": [], "SeeAlso": ["@B_android#widget#Adapter#getView_E@"], "Permissions": [], "Description": "Get a View that displays the data at the specified position in the data set. You can either create a View manually or inflate it from an XML layout file. When the View is inflated, the parent View (GridView, ListView...) will apply default layout parameters unless you use @B_android#view#LayoutInflater#inflate_E@ to specify a root view and to prevent attachment to the root.", "history": "Added in API level 1", "FullName": "public View getView (int position, View convertView, ViewGroup parent)"}, "CursorAdapter(android.content.Context,android.database.Cursor,int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The context"], ["@B_android#database#Cursor_E@", "Cursor: The cursor from which to get the data."], ["int", "int: Flags used to determine the behavior of the adapter; may be any combination of @B_android#widget#CursorAdapter#FLAG_AUTO_REQUERY_E@ and @B_android#widget#CursorAdapter#FLAG_REGISTER_CONTENT_OBSERVER_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Recommended constructor.", "history": "Added in API level 11", "FullName": "public CursorAdapter (Context context, Cursor c, int flags)"}, "getDropDownView(int,android.view.View,android.view.ViewGroup)": {"Returns": [["@B_android#view#View_E@", "a @B_android#view#View_E@ corresponding to the data at the specified position."]], "Parameters": [["int", "int: index of the item whose view we want."], ["@B_android#view#View_E@", "View: the old view to reuse, if possible. Note: You should check that this view is non-null and of an appropriate type before using. If it is not possible to convert this view to display the correct data, this method can create a new view."], ["@B_android#view#ViewGroup_E@", "ViewGroup: the parent that this view will eventually be attached to"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets a @B_android#view#View_E@ that displays in the drop down popup the data at the specified position in the data set.", "history": "Added in API level 1", "FullName": "public View getDropDownView (int position, View convertView, ViewGroup parent)"}}, "Inheritance": ["@B_android#widget#BaseAdapter_E@"], "ClassName": "android.widget.CursorAdapter", "ClassDesc": "Adapter that exposes data from a @B_android#database#Cursor_E@ to a @B_android#widget#ListView_E@ widget. The Cursor must include a column named \"_id\" or this class will not work. Additionally, using @B_android#database#MergeCursor_E@ with this class will not work if the merged Cursors have overlapping values in their \"_id\" columns."}