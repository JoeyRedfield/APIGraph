{"Functions": {"method()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The getter method to retrieve the attribute value from the View. The default is the bean method name based on the attribute name.", "history": "", "FullName": "String method ()"}, "type()": {"Returns": [["@B_java#lang#Class_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The View type that is associated with the attribute.", "history": "", "FullName": "Class type ()"}, "attribute()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The attribute that supports two-way binding.", "history": "", "FullName": "String attribute ()"}, "event()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The event used to notify the data binding system that the attribute value has changed. Defaults to attribute() + \"AttrChanged\"", "history": "", "FullName": "String event ()"}}, "Inheritance": [], "ClassName": "android.databinding.InverseBindingMethod", "ClassDesc": "InverseBindingMethod is used to identify how to listen for changes to a View property and which getter method to call. InverseBindingMethod should be associated with any class as part of @B_android#databinding#InverseBindingMethods_E@. method is optional. If it isn't provided, the attribute name is used to find the method name, either prefixing with \"is\" or \"get\". For the attribute android:text, data binding will search for a public CharSequence getText() method on http:##developer#android#com@B_android#widget#TextView_E@. event is optional. If it isn't provided, the event name is assigned the attribute name suffixed with AttrChanged. For the android:text attribute, the default event name would be android:textAttrChanged. The event should be set using a @B_android#databinding#BindingAdapter_E@. For example:"}