{"Functions": {"evaluate(float, T, T)": {"Returns": [["T", "A linear interpolation between the start and end values, given the fraction parameter."]], "Parameters": [["float", "float: The fraction from the starting to the ending values"], ["T", "T: The start value."], ["T", "T: The end value."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This function returns the result of linearly interpolating the start and end values, with fraction representing the proportion between the start and end values. The calculation is a simple parametric calculation: result = x0 + t * (x1 - x0), where x0 is startValue, x1 is endValue, and t is fraction.", "history": "added in API level 14", "FullName": "public abstract T evaluate (float fraction, T startValue, T endValue)"}, "evaluate(float,T,T)": {"Returns": [["T", "A linear interpolation between the start and end values, given the fraction parameter."]], "Parameters": [["float", "float: The fraction from the starting to the ending values"], ["T", "T: The start value."], ["T", "T: The end value."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This function returns the result of linearly interpolating the start and end values, with fraction representing the proportion between the start and end values. The calculation is a simple parametric calculation: result = x0 + t * (x1 - x0), where x0 is startValue, x1 is endValue, and t is fraction.", "history": "Added in API level 11", "FullName": "public abstract T evaluate (float fraction, T startValue, T endValue)"}}, "Inheritance": [], "ClassName": "android.animation.TypeEvaluator<T>", "ClassDesc": "Interface for use with the @B_android#animation#ValueAnimator#setEvaluator_E@ function. Evaluators allow developers to create animations on arbitrary property types, by allowing them to supply custom evaluators for types that are not automatically understood and used by the animation system."}