{"Functions": {"getSystemContext()": {"Returns": [["@B_android#content#Context_E@", "Returns a reference to a normal Context."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a real (not mocked or instrumented) system Context that can be used when generating Mock or other Context objects for your Application under test.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public Context getSystemContext ()"}, "testApplicationTestCaseSetUpProperly()": {"Returns": [], "Parameters": [], "Throws": [["", "java.lang.Exception"], ["@B_java#lang#Exception_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "This test simply confirms that the Application class can be instantiated properly.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public final void testApplicationTestCaseSetUpProperly ()"}, "ApplicationTestCase(java.lang.Class<T>)": {"Returns": [], "Parameters": [["@B_java#lang#Class_E@", "Class no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public ApplicationTestCase (Class<T> applicationClass)"}, "createApplication()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Start the Application under test, in the same way as if it was started by the system. If you use this method to start the Application, it will automatically be stopped by @B_android#test#ApplicationTestCase#tearDown_E@. If you wish to inject a specialized Context for your test, by calling @B_android#test#AndroidTestCase#setContext_E@, you must do so before calling this method.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "protected final void createApplication ()"}, "tearDown()": {"Returns": [], "Parameters": [], "Throws": [["", "java.lang.Exception"], ["@B_java#lang#Exception_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Shuts down the Application under test. Also makes sure all resources are cleaned up and garbage collected before moving on to the next test. Subclasses that override this method should make sure they call super.tearDown() at the end of the overriding method.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "protected void tearDown ()"}, "terminateApplication()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This will make the necessary calls to terminate the Application under test (it will call onTerminate(). Ordinarily this will be called automatically (by @B_android#test#ApplicationTestCase#tearDown_E@, but you can call it directly from your test in order to check for proper shutdown behaviors.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "protected final void terminateApplication ()"}, "setUp()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#lang#Exception_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "This will do the work to instantiate the Application under test. After this, your test code must also start and stop the Application.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "protected void setUp ()"}, "getApplication()": {"Returns": [["T", "Returns the actual Application under test."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public T getApplication ()"}}, "Inheritance": ["@B_junit#framework#Assert_E@", "@B_junit#framework#TestCase_E@", "@B_android#test#AndroidTestCase_E@"], "ClassName": "@B_android#app#Application_E@", "ClassDesc": "Use This test case provides a framework in which you can test Application classes in a controlled environment. It provides basic support for the lifecycle of a Application, and hooks by which you can inject various dependencies and control the environment in which your Application is tested. @B_android#app#Application_E@ for more details). In order to support the lifecycle of a Application, this test case will make the following calls at the following times. The test case will not call onCreate() until your test calls @B_android#test#ApplicationTestCase#createApplication_E@. This gives you a chance to set up or adjust any additional framework or test logic before onCreate(). After your test completes, the test case @B_android#test#ApplicationTestCase#tearDown_E@ method is automatically called, and it will stop & destroy your application by calling its onDestroy() method. @B_android#content#Context_E@ in which it runs. This framework allows you to inject a modified, mock, or isolated replacement for this dependencies, and thus perform a true unit test. If simply run your tests as-is, your Application will be injected with a fully-functional Context. You can create and inject alternative types of Contexts by calling @B_android#test#AndroidTestCase#setContext_E@. You must do this @B_android#test#ApplicationTestCase#createApplication_E@. The test framework provides a number of alternatives for Context, including @B_android#test#mock#MockContext_E@, @B_android#test#RenamingDelegatingContext_E@, and @B_android#content#ContextWrapper_E@."}