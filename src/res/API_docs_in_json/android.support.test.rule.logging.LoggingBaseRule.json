{"Functions": {"getPackageNameUnderTest()": {"Returns": [["String", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "String getPackageNameUnderTest ()"}, "LoggingBaseRule()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "LoggingBaseRule ()"}, "getLogFileName()": {"Returns": [["String", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "String getLogFileName ()"}, "getLogFileOutputDirectory()": {"Returns": [["File", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "File getLogFileOutputDirectory ()"}, "before()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void before ()"}, "apply(org.junit.runners.model.Statement, org.junit.runner.Description)": {"Returns": [["Statement", "no returns description in source"]], "Parameters": [["Statement", "Statement no parameter comment"], ["Description", "Description no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "Statement apply (Statement base, Description description)"}, "getTestRunNumber()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "int getTestRunNumber ()"}, "setTestRunNumber(int)": {"Returns": [], "Parameters": [["int", "int: indicates the nth run for the test method in zero-index form"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicate to the Rule that this is the testRunNumberth time the test method is being called in a test instrumentation. This method only needs to be called when a test method is being called multiple times in a test instrumentation.", "history": "", "FullName": "void setTestRunNumber (int testRunNumber)"}, "getTestClass()": {"Returns": [["String", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "String getTestClass ()"}, "LoggingBaseRule(java.io.File, java.lang.String)": {"Returns": [], "Parameters": [["File", "File no parameter comment"], ["String", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Request the log be written to a specific location. File logFileOutputDirectory directory to log output to String fileName to override the default file name, if desired", "history": "", "FullName": "LoggingBaseRule (File logFileOutputDirectory, String fileName)"}, "after()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void after ()"}, "getTestName()": {"Returns": [["String", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "String getTestName ()"}}, "Inheritance": ["java.lang.Object", "org.junit.rules.ExternalResource"], "ClassName": "android.support.test.rule.logging.LoggingBaseRule", "ClassDesc": "Base class for logging rules to remove boiler-plate instance variables used by most logging rules."}