{"Functions": {"reset()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reset this XPath to its original configuration. XPath is reset to the same state as when it was created with @B_javax#xml#xpath#XPathFactory#newXPath_E@. reset() is designed to allow the reuse of existing XPaths thus saving resources associated with the creation of new XPaths. The reset XPath is not guaranteed to have the same @B_javax#xml#xpath#XPathFunctionResolver_E@, @B_javax#xml#xpath#XPathVariableResolver_E@ or @B_javax#xml#namespace#NamespaceContext_E@ Objects, e.g. @B_java#lang#Object#equals_E@. It is guaranteed to have a functionally equal XPathFunctionResolver, XPathVariableResolver and NamespaceContext.", "history": "Added in API level 8", "FullName": "public abstract void reset ()"}, "evaluate(java.lang.String,org.xml.sax.InputSource)": {"Returns": [["@B_java#lang#String_E@", "The String that is the result of evaluating the expression and converting the result to a String."]], "Parameters": [["@B_java#lang#String_E@", "String: The XPath expression."], ["@B_org#xml#sax#InputSource_E@", "InputSource: The InputSource of the document to evaluate over."]], "Throws": [["@B_javax#xml#xpath#XPathExpressionException_E@", "If expression cannot be evaluated."], ["@B_java#lang#NullPointerException_E@", "If expression or source is null."]], "SeeAlso": [], "Permissions": [], "Description": "Evaluate an XPath expression in the context of the specified InputSource and return the result as a String. This method calls @B_javax#xml#xpath#XPath#evaluate_E@ with a returnType of @B_javax#xml#xpath#XPathConstants#STRING_E@. See If expression or source is null, then a NullPointerException is thrown.", "history": "Added in API level 8", "FullName": "public abstract String evaluate (String expression, InputSource source)"}, "evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)": {"Returns": [["@B_java#lang#Object_E@", "Result of evaluating an XPath expression as an Object of returnType."]], "Parameters": [["@B_java#lang#String_E@", "String: The XPath expression."], ["@B_java#lang#Object_E@", "Object: The starting context (node or node list, for example)."], ["@B_javax#xml#namespace#QName_E@", "QName: The desired return type."]], "Throws": [["@B_javax#xml#xpath#XPathExpressionException_E@", "If expression cannot be evaluated."], ["@B_java#lang#IllegalArgumentException_E@", "If returnType is not one of the types defined in @B_javax#xml#xpath#XPathConstants_E@."], ["@B_java#lang#NullPointerException_E@", "If expression or returnType is null."]], "SeeAlso": [], "Permissions": [], "Description": "Evaluate an XPath expression in the specified context and return the result as the specified type. See QName resolution and return type conversion. If returnType is not one of the types defined in @B_javax#xml#xpath#XPathConstants_E@ ( @B_javax#xml#xpath#XPathConstants#NUMBER_E@, @B_javax#xml#xpath#XPathConstants#STRING_E@, @B_javax#xml#xpath#XPathConstants#BOOLEAN_E@, @B_javax#xml#xpath#XPathConstants#NODE_E@ or @B_javax#xml#xpath#XPathConstants#NODESET_E@) then an IllegalArgumentException is thrown. If a null value is provided for item, an empty document will be used for the context. If expression or returnType is null, then a NullPointerException is thrown.", "history": "Added in API level 8", "FullName": "public abstract Object evaluate (String expression, Object item, QName returnType)"}, "compile(java.lang.String)": {"Returns": [["@B_javax#xml#xpath#XPathExpression_E@", "Compiled XPath expression."]], "Parameters": [["@B_java#lang#String_E@", "String: The XPath expression."]], "Throws": [["@B_javax#xml#xpath#XPathExpressionException_E@", "If expression cannot be compiled."], ["@B_java#lang#NullPointerException_E@", "If expression is null."]], "SeeAlso": [], "Permissions": [], "Description": "Compile an XPath expression for later evaluation. If expression contains any @B_javax#xml#xpath#XPathFunction_E@s, they must be available via the @B_javax#xml#xpath#XPathFunctionResolver_E@. An @B_javax#xml#xpath#XPathExpressionException_E@ will be thrown if the XPathFunction cannot be resolved with the XPathFunctionResolver. If expression is null, a NullPointerException is thrown.", "history": "Added in API level 8", "FullName": "public abstract XPathExpression compile (String expression)"}, "setXPathVariableResolver(javax.xml.xpath.XPathVariableResolver)": {"Returns": [], "Parameters": [["@B_javax#xml#xpath#XPathVariableResolver_E@", "XPathVariableResolver: Variable resolver."]], "Throws": [["@B_java#lang#NullPointerException_E@", "If resolver is null."]], "SeeAlso": [], "Permissions": [], "Description": "Establish a variable resolver. A NullPointerException is thrown if resolver is null.", "history": "Added in API level 8", "FullName": "public abstract void setXPathVariableResolver (XPathVariableResolver resolver)"}, "getXPathFunctionResolver()": {"Returns": [["@B_javax#xml#xpath#XPathFunctionResolver_E@", "Current function resolver."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the current function resolver. null is returned in no function resolver is in effect.", "history": "Added in API level 8", "FullName": "public abstract XPathFunctionResolver getXPathFunctionResolver ()"}, "evaluate(java.lang.String, java.lang.Object)": {"Returns": [["@B_java#lang#String_E@", "The String that is the result of evaluating the expression and converting the result to a String."]], "Parameters": [["@B_java#lang#String_E@", "String: The XPath expression."], ["@B_java#lang#Object_E@", "Object: The starting context (node or node list, for example)."]], "Throws": [["@B_javax#xml#xpath#XPathExpressionException_E@", "If expression cannot be evaluated."], ["@B_java#lang#NullPointerException_E@", "If expression is null."]], "SeeAlso": [], "Permissions": [], "Description": "Evaluate an XPath expression in the specified context and return the result as a String. This method calls @B_javax#xml#xpath#XPath#evaluate_E@ with a returnType of @B_javax#xml#xpath#XPathConstants#STRING_E@. See If a null value is provided for item, an empty document will be used for the context. If expression is null, then a NullPointerException is thrown.", "history": "added in API level 8", "FullName": "public abstract String evaluate (String expression, Object item)"}, "setNamespaceContext(javax.xml.namespace.NamespaceContext)": {"Returns": [], "Parameters": [["@B_javax#xml#namespace#NamespaceContext_E@", "NamespaceContext: Namespace context to use."]], "Throws": [["@B_java#lang#NullPointerException_E@", "If nsContext is null."]], "SeeAlso": [], "Permissions": [], "Description": "Establish a namespace context. A NullPointerException is thrown if nsContext is null.", "history": "Added in API level 8", "FullName": "public abstract void setNamespaceContext (NamespaceContext nsContext)"}, "evaluate(java.lang.String,org.xml.sax.InputSource,javax.xml.namespace.QName)": {"Returns": [["@B_java#lang#Object_E@", "The Object that encapsulates the result of evaluating the expression."]], "Parameters": [["@B_java#lang#String_E@", "String: The XPath expression."], ["@B_org#xml#sax#InputSource_E@", "InputSource: The input source of the document to evaluate over."], ["@B_javax#xml#namespace#QName_E@", "QName: The desired return type."]], "Throws": [["@B_javax#xml#xpath#XPathExpressionException_E@", "If expression cannot be evaluated."], ["@B_java#lang#IllegalArgumentException_E@", "If returnType is not one of the types defined in @B_javax#xml#xpath#XPathConstants_E@."], ["@B_java#lang#NullPointerException_E@", "If expression, source or returnType is null."]], "SeeAlso": [], "Permissions": [], "Description": "Evaluate an XPath expression in the context of the specified InputSource and return the result as the specified type. This method builds a data model for the @B_org#xml#sax#InputSource_E@ and calls @B_javax#xml#xpath#XPath#evaluate_E@ on the resulting document object. See If returnType is not one of the types defined in @B_javax#xml#xpath#XPathConstants_E@, then an IllegalArgumentException is thrown. If expression, source or returnType is null, then a NullPointerException is thrown.", "history": "Added in API level 8", "FullName": "public abstract Object evaluate (String expression, InputSource source, QName returnType)"}, "getNamespaceContext()": {"Returns": [["@B_javax#xml#namespace#NamespaceContext_E@", "Current Namespace context."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the current namespace context. null is returned in no namespace context is in effect.", "history": "Added in API level 8", "FullName": "public abstract NamespaceContext getNamespaceContext ()"}, "setXPathFunctionResolver(javax.xml.xpath.XPathFunctionResolver)": {"Returns": [], "Parameters": [["@B_javax#xml#xpath#XPathFunctionResolver_E@", "XPathFunctionResolver: XPath function resolver."]], "Throws": [["@B_java#lang#NullPointerException_E@", "If resolver is null."]], "SeeAlso": [], "Permissions": [], "Description": "Establish a function resolver. A NullPointerException is thrown if resolver is null.", "history": "Added in API level 8", "FullName": "public abstract void setXPathFunctionResolver (XPathFunctionResolver resolver)"}, "evaluate(java.lang.String,java.lang.Object)": {"Returns": [["@B_java#lang#String_E@", "The String that is the result of evaluating the expression and converting the result to a String."]], "Parameters": [["@B_java#lang#String_E@", "String: The XPath expression."], ["@B_java#lang#Object_E@", "Object: The starting context (node or node list, for example)."]], "Throws": [["@B_javax#xml#xpath#XPathExpressionException_E@", "If expression cannot be evaluated."], ["@B_java#lang#NullPointerException_E@", "If expression is null."]], "SeeAlso": [], "Permissions": [], "Description": "Evaluate an XPath expression in the specified context and return the result as a String. This method calls @B_javax#xml#xpath#XPath#evaluate_E@ with a returnType of @B_javax#xml#xpath#XPathConstants#STRING_E@. See If a null value is provided for item, an empty document will be used for the context. If expression is null, then a NullPointerException is thrown.", "history": "Added in API level 8", "FullName": "public abstract String evaluate (String expression, Object item)"}, "getXPathVariableResolver()": {"Returns": [["@B_javax#xml#xpath#XPathVariableResolver_E@", "Current variable resolver."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the current variable resolver. null is returned in no variable resolver is in effect.", "history": "Added in API level 8", "FullName": "public abstract XPathVariableResolver getXPathVariableResolver ()"}}, "Inheritance": [], "ClassName": "javax.xml.xpath.XPath", "ClassDesc": "XPath provides access to the XPath evaluation environment and expressions."}