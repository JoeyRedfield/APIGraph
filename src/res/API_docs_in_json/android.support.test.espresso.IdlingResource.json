{"Functions": {"getName()": {"Returns": [["String", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the name of the resources (used for logging and idempotency of registration).", "history": "", "FullName": "String getName ()"}, "isIdleNow()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if resource is currently idle. Espresso will", "history": "", "FullName": "boolean isIdleNow ()"}}, "Inheritance": [], "ClassName": "android.support.test.espresso.IdlingResource", "ClassDesc": "Represents a resource of an application under test which can cause asynchronous background work to happen during test execution (e.g. an intent service that processes a button click). By default, @B_android#support#test#espresso#Espresso_E@ synchronizes all view operations with the UI thread as well as AsyncTasks; however, it has no way of doing so with \"hand-made\" resources. In such cases, test authors can register the custom resource via @B_android#support#test#espresso#IdlingRegistry_E@ and @B_android#support#test#espresso#Espresso_E@ will wait for the resource to become idle prior to executing a view operation. @B_android#support#test#espresso#idling#CountingIdlingResource_E@ instead."}