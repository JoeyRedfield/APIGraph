{"Functions": {"getTimeZone(int)": {"Returns": [["@B_java#util#TimeZone_E@", "TimeZone for this."]], "Parameters": [["int", "int: default zoneoffset if this zoneoffset is @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a java.util.TimeZone for this class. If timezone field is defined for this instance, returns TimeZone initialized with custom timezone id of zoneoffset. If timezone field is undefined, try the defaultZoneoffset that was passed in. If defaultZoneoffset is FIELD_UNDEFINED, return default timezone for this host. (Same default as java.util.GregorianCalendar).", "history": "Added in API level 8", "FullName": "public abstract TimeZone getTimeZone (int defaultZoneoffset)"}, "setHour(int)": {"Returns": [], "Parameters": [["int", "int: value constraints summarized in hour field of date/time field mapping table."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if hour parameter is outside value constraints for the field as specified in date/time field mapping table."]], "SeeAlso": [], "Permissions": [], "Description": "Set hours. Unset this field by invoking the setter with a parameter value of @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@.", "history": "Added in API level 8", "FullName": "public abstract void setHour (int hour)"}, "getMillisecond()": {"Returns": [["int", "Millisecond of this XMLGregorianCalendar."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_javax#xml#datatype#XMLGregorianCalendar#getFractionalSecond_E@", "@B_javax#xml#datatype#XMLGregorianCalendar#setTime_E@"], "Permissions": [], "Description": "Return millisecond precision of @B_javax#xml#datatype#XMLGregorianCalendar#getFractionalSecond_E@. This method represents a convenience accessor to infinite precision fractional second value returned by @B_javax#xml#datatype#XMLGregorianCalendar#getFractionalSecond_E@. The returned value is the rounded down to milliseconds value of @B_javax#xml#datatype#XMLGregorianCalendar#getFractionalSecond_E@. When @B_javax#xml#datatype#XMLGregorianCalendar#getFractionalSecond_E@ returns null, this method must return @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@. Value constraints for this value are summarized in", "history": "Added in API level 8", "FullName": "public int getMillisecond ()"}, "setMonth(int)": {"Returns": [], "Parameters": [["int", "int: value constraints summarized in month field of date/time field mapping table."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if month parameter is outside value constraints for the field as specified in date/time field mapping table."]], "SeeAlso": [], "Permissions": [], "Description": "Set month. Unset this field by invoking the setter with a parameter value of @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@.", "history": "Added in API level 8", "FullName": "public abstract void setMonth (int month)"}, "getMonth()": {"Returns": [["int", "year of this XMLGregorianCalendar."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return number of month or @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@. Value constraints for this value are summarized in", "history": "Added in API level 8", "FullName": "public abstract int getMonth ()"}, "setYear(java.math.BigInteger)": {"Returns": [], "Parameters": [["@B_java#math#BigInteger_E@", "BigInteger: value constraints summarized in year field of date/time field mapping table."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if year parameter is outside value constraints for the field as specified in date/time field mapping table."]], "SeeAlso": [], "Permissions": [], "Description": "Set low and high order component of XSD dateTime year field. Unset this field by invoking the setter with a parameter value of null.", "history": "Added in API level 8", "FullName": "public abstract void setYear (BigInteger year)"}, "XMLGregorianCalendar()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 8", "FullName": "public XMLGregorianCalendar ()"}, "getEon()": {"Returns": [["@B_java#math#BigInteger_E@", "eon of this XMLGregorianCalendar. The value returned is an integer multiple of 10^9."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_javax#xml#datatype#XMLGregorianCalendar#getYear_E@", "@B_javax#xml#datatype#XMLGregorianCalendar#getEonAndYear_E@"], "Permissions": [], "Description": "Return high order component for XML Schema 1.0 dateTime datatype field for year. null if this optional part of the year field is not defined. Value constraints for this value are summarized in", "history": "Added in API level 8", "FullName": "public abstract BigInteger getEon ()"}, "setTime(int,int,int,java.math.BigDecimal)": {"Returns": [], "Parameters": [["int", "int: value constraints are summarized in hour field of date/time field mapping table."], ["int", "int: value constraints are summarized in minute field of date/time field mapping table."], ["int", "int: value constraints are summarized in second field of date/time field mapping table."], ["@B_java#math#BigDecimal_E@", "BigDecimal: value of null indicates this optional field is not set."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if any parameter is outside value constraints for the field as specified in date/time field mapping table."]], "SeeAlso": [], "Permissions": [], "Description": "Set time as one unit, including the optional infinite precision fractional seconds.", "history": "Added in API level 8", "FullName": "public void setTime (int hour, int minute, int second, BigDecimal fractional)"}, "setTime(int,int,int)": {"Returns": [], "Parameters": [["int", "int: value constraints are summarized in hour field of date/time field mapping table."], ["int", "int: value constraints are summarized in minute field of date/time field mapping table."], ["int", "int: value constraints are summarized in second field of date/time field mapping table."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if any parameter is outside value constraints for the field as specified in date/time field mapping table."]], "SeeAlso": ["@B_javax#xml#datatype#XMLGregorianCalendar#setTime_E@"], "Permissions": [], "Description": "Set time as one unit.", "history": "Added in API level 8", "FullName": "public void setTime (int hour, int minute, int second)"}, "clear()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Unset all fields to undefined. Set all int fields to @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@ and reference fields to null.", "history": "Added in API level 8", "FullName": "public abstract void clear ()"}, "getXMLSchemaType()": {"Returns": [["@B_javax#xml#namespace#QName_E@", "One of the following class constants: @B_javax#xml#datatype#DatatypeConstants#DATETIME_E@, @B_javax#xml#datatype#DatatypeConstants#TIME_E@, @B_javax#xml#datatype#DatatypeConstants#DATE_E@, @B_javax#xml#datatype#DatatypeConstants#GYEARMONTH_E@, @B_javax#xml#datatype#DatatypeConstants#GMONTHDAY_E@, @B_javax#xml#datatype#DatatypeConstants#GYEAR_E@, @B_javax#xml#datatype#DatatypeConstants#GMONTH_E@ or @B_javax#xml#datatype#DatatypeConstants#GDAY_E@."]], "Parameters": [], "Throws": [["@B_java#lang#IllegalStateException_E@", "if the combination of set fields does not match one of the eight defined XML Schema builtin date/time datatypes."]], "SeeAlso": [], "Permissions": [], "Description": "Return the name of the XML Schema date/time type that this instance maps to. Type is computed based on fields that are set.", "history": "Added in API level 8", "FullName": "public abstract QName getXMLSchemaType ()"}, "setMillisecond(int)": {"Returns": [], "Parameters": [["int", "int: value constraints summarized in millisecond field of date/time field mapping table."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if millisecond parameter is outside value constraints for the field as specified in date/time field mapping table."]], "SeeAlso": [], "Permissions": [], "Description": "Set milliseconds. Unset this field by invoking the setter with a parameter value of @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@.", "history": "Added in API level 8", "FullName": "public abstract void setMillisecond (int millisecond)"}, "getDay()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_javax#xml#datatype#XMLGregorianCalendar#setDay_E@"], "Permissions": [], "Description": "Return day in month or @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@. Value constraints for this value are summarized in", "history": "Added in API level 8", "FullName": "public abstract int getDay ()"}, "setTime(int, int, int, java.math.BigDecimal)": {"Returns": [], "Parameters": [["int", "int: value constraints are summarized in hour field of date/time field mapping table."], ["int", "int: value constraints are summarized in minute field of date/time field mapping table."], ["int", "int: value constraints are summarized in second field of date/time field mapping table."], ["@B_java#math#BigDecimal_E@", "BigDecimal: value of null indicates this optional field is not set."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if any parameter is outside value constraints for the field as specified in date/time field mapping table."]], "SeeAlso": [], "Permissions": [], "Description": "Set time as one unit, including the optional infinite precision fractional seconds.", "history": "added in API level 8", "FullName": "public void setTime (int hour, int minute, int second, BigDecimal fractional)"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true when obj is an instance of XMLGregorianCalendar and @B_javax#xml#datatype#XMLGregorianCalendar#compare_E@ returns @B_javax#xml#datatype#DatatypeConstants#EQUAL_E@, otherwise false."]], "Parameters": [["@B_java#lang#Object_E@", "Object: to compare."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether parameter obj is \"equal to\" this one.", "history": "Added in API level 8", "FullName": "public boolean equals (Object obj)"}, "isValid()": {"Returns": [["boolean", "true if data values are valid."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Validate instance by getXMLSchemaType() constraints.", "history": "Added in API level 8", "FullName": "public abstract boolean isValid ()"}, "setFractionalSecond(java.math.BigDecimal)": {"Returns": [], "Parameters": [["@B_java#math#BigDecimal_E@", "BigDecimal: value constraints summarized in fractional field of date/time field mapping table."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if fractional parameter is outside value constraints for the field as specified in date/time field mapping table."]], "SeeAlso": [], "Permissions": [], "Description": "Set fractional seconds. Unset this field by invoking the setter with a parameter value of null.", "history": "Added in API level 8", "FullName": "public abstract void setFractionalSecond (BigDecimal fractional)"}, "setTime(int, int, int, int)": {"Returns": [], "Parameters": [["int", "int: value constraints are summarized in hour field of date/time field mapping table."], ["int", "int: value constraints are summarized in minute field of date/time field mapping table."], ["int", "int: value constraints are summarized in second field of date/time field mapping table."], ["int", "int: value of @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@ indicates this optional field is not set."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if any parameter is outside value constraints for the field as specified in date/time field mapping table."]], "SeeAlso": [], "Permissions": [], "Description": "Set time as one unit, including optional milliseconds.", "history": "added in API level 8", "FullName": "public void setTime (int hour, int minute, int second, int millisecond)"}, "clone()": {"Returns": [["@B_java#lang#Object_E@", "copy of this Object"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates and returns a copy of this object.", "history": "Added in API level 8", "FullName": "public abstract Object clone ()"}, "setTime(int,int,int,int)": {"Returns": [], "Parameters": [["int", "int: value constraints are summarized in hour field of date/time field mapping table."], ["int", "int: value constraints are summarized in minute field of date/time field mapping table."], ["int", "int: value constraints are summarized in second field of date/time field mapping table."], ["int", "int: value of @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@ indicates this optional field is not set."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if any parameter is outside value constraints for the field as specified in date/time field mapping table."]], "SeeAlso": [], "Permissions": [], "Description": "Set time as one unit, including optional milliseconds.", "history": "Added in API level 8", "FullName": "public void setTime (int hour, int minute, int second, int millisecond)"}, "getHour()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_javax#xml#datatype#XMLGregorianCalendar#setTime_E@"], "Permissions": [], "Description": "Return hours or @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@. Returns @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@ if this field is not defined. Value constraints for this value are summarized in", "history": "Added in API level 8", "FullName": "public abstract int getHour ()"}, "setTimezone(int)": {"Returns": [], "Parameters": [["int", "int: value constraints summarized in timezone field of date/time field mapping table."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if offset parameter is outside value constraints for the field as specified in date/time field mapping table."]], "SeeAlso": [], "Permissions": [], "Description": "Set the number of minutes in the timezone offset. Unset this field by invoking the setter with a parameter value of @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@.", "history": "Added in API level 8", "FullName": "public abstract void setTimezone (int offset)"}, "toGregorianCalendar()": {"Returns": [["@B_java#util#GregorianCalendar_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_javax#xml#datatype#XMLGregorianCalendar#toGregorianCalendar_E@"], "Permissions": [], "Description": "Convert this XMLGregorianCalendar to a @B_java#util#GregorianCalendar_E@. When this instance has an undefined field, this conversion relies on the java.util.GregorianCalendar default for its corresponding field. A notable difference between XML Schema 1.0 date/time datatypes and java.util.GregorianCalendar is that Timezone value is optional for date/time datatypes and it is a required field for java.util.GregorianCalendar. See javadoc for java.util.TimeZone.getDefault() on how the default is determined. To explicitly specify the TimeZone instance, see @B_javax#xml#datatype#XMLGregorianCalendar#toGregorianCalendar_E@. To ensure consistency in conversion implementations, the new GregorianCalendar should be instantiated in following manner. Using timeZone value as defined above, create a new java.util.GregorianCalendar(timeZone,Locale.getDefault()). Initialize all GregorianCalendar fields by calling {(@link GegorianCalendar#clear()}. Obtain a pure Gregorian Calendar by invoking GregorianCalendar.setGregorianChange( new Date(Long.MIN_VALUE)). Its fields ERA, YEAR, MONTH, DAY_OF_MONTH, HOUR_OF_DAY, MINUTE, SECOND and MILLISECOND are set using the method Calendar.set(int,int)", "history": "Added in API level 8", "FullName": "public abstract GregorianCalendar toGregorianCalendar ()"}, "add(javax.xml.datatype.Duration)": {"Returns": [], "Parameters": [["@B_javax#xml#datatype#Duration_E@", "Duration: Duration to add to this XMLGregorianCalendar."]], "Throws": [["@B_java#lang#NullPointerException_E@", "when duration parameter is null."]], "SeeAlso": [], "Permissions": [], "Description": "Add duration to this instance. The computation is specified in dateTime fields to this class' representation of those fields.", "history": "Added in API level 8", "FullName": "public abstract void add (Duration duration)"}, "setYear(int)": {"Returns": [], "Parameters": [["int", "int: value constraints are summarized in year field of date/time field mapping table. If year is @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@, then eon is set to null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set year of XSD dateTime year field. Unset this field by invoking the setter with a parameter value of @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@. Note: if the absolute value of the year parameter is less than 10^9, the eon component of the XSD year field is set to null by this method.", "history": "Added in API level 8", "FullName": "public abstract void setYear (int year)"}, "reset()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reset this XMLGregorianCalendar to its original values. XMLGregorianCalendar is reset to the same values as when it was created with @B_javax#xml#datatype#DatatypeFactory#newXMLGregorianCalendar_E@, @B_javax#xml#datatype#DatatypeFactory#newXMLGregorianCalendar_E@, @B_javax#xml#datatype#DatatypeFactory#newXMLGregorianCalendar_E@, @B_javax#xml#datatype#DatatypeFactory#newXMLGregorianCalendar_E@, @B_javax#xml#datatype#DatatypeFactory#newXMLGregorianCalendar_E@, @B_javax#xml#datatype#DatatypeFactory#newXMLGregorianCalendarDate_E@, @B_javax#xml#datatype#DatatypeFactory#newXMLGregorianCalendarTime_E@, @B_javax#xml#datatype#DatatypeFactory#newXMLGregorianCalendarTime_E@ or @B_javax#xml#datatype#DatatypeFactory#newXMLGregorianCalendarTime_E@. reset() is designed to allow the reuse of existing XMLGregorianCalendars thus saving resources associated with the creation of new XMLGregorianCalendars.", "history": "Added in API level 8", "FullName": "public abstract void reset ()"}, "toXMLFormat()": {"Returns": [["@B_java#lang#String_E@", "XML, as String, representation of this XMLGregorianCalendar"]], "Parameters": [], "Throws": [["@B_java#lang#IllegalStateException_E@", "if the combination of set fields does not match one of the eight defined XML Schema builtin date/time datatypes."]], "SeeAlso": [], "Permissions": [], "Description": "Return the lexical representation of this instance. The format is specified in Specific target lexical representation format is determined by @B_javax#xml#datatype#XMLGregorianCalendar#getXMLSchemaType_E@.", "history": "Added in API level 8", "FullName": "public abstract String toXMLFormat ()"}, "hashCode()": {"Returns": [["int", "hash code of this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code consistent with the definition of the equals method.", "history": "Added in API level 8", "FullName": "public int hashCode ()"}, "getEonAndYear()": {"Returns": [["@B_java#math#BigInteger_E@", "sum of eon and BigInteger.valueOf(year) when both fields are defined. When only year is defined, return it. When both eon and year are not defined, return null."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_javax#xml#datatype#XMLGregorianCalendar#getEon_E@", "@B_javax#xml#datatype#XMLGregorianCalendar#getYear_E@"], "Permissions": [], "Description": "Return XML Schema 1.0 dateTime datatype field for year. Value constraints for this value are summarized in", "history": "Added in API level 8", "FullName": "public abstract BigInteger getEonAndYear ()"}, "toGregorianCalendar(java.util.TimeZone,java.util.Locale,javax.xml.datatype.XMLGregorianCalendar)": {"Returns": [["@B_java#util#GregorianCalendar_E@", "a java.util.GregorianCalendar conversion of this instance."]], "Parameters": [["@B_java#util#TimeZone_E@", "TimeZone: provide Timezone. null is a legal value."], ["@B_java#util#Locale_E@", "Locale: provide explicit Locale. Use default GregorianCalendar locale if value is null."], ["@B_javax#xml#datatype#XMLGregorianCalendar_E@", "XMLGregorianCalendar: provide default field values to use when corresponding field for this instance is FIELD_UNDEFINED or null. If defaultsis null or a field within the specified defaults is undefined, just use java.util.GregorianCalendar defaults."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Convert this XMLGregorianCalendar along with provided parameters to a @B_java#util#GregorianCalendar_E@ instance. Since XML Schema 1.0 date/time datetypes has no concept of timezone ids or daylight savings timezone ids, this conversion operation allows the user to explicitly specify one with timezone parameter. To compute the return value's TimeZone field, when parameter timeZone is non-null, it is the timezone field. else when this.getTimezone() != FIELD_UNDEFINED, create a java.util.TimeZone with a custom timezone id using the this.getTimezone(). else when defaults.getTimezone() != FIELD_UNDEFINED, create a java.util.TimeZone with a custom timezone id using defaults.getTimezone(). else use the GregorianCalendar default timezone value for the host is defined as specified by java.util.TimeZone.getDefault(). To ensure consistency in conversion implementations, the new GregorianCalendar should be instantiated in following manner. Create a new java.util.GregorianCalendar(TimeZone, Locale) with TimeZone set as specified above and the Locale parameter. Initialize all GregorianCalendar fields by calling @B_java#util#Calendar#clear_E@ Obtain a pure Gregorian Calendar by invoking GregorianCalendar.setGregorianChange( new Date(Long.MIN_VALUE)). Its fields ERA, YEAR, MONTH, DAY_OF_MONTH, HOUR_OF_DAY, MINUTE, SECOND and MILLISECOND are set using the method Calendar.set(int,int)", "history": "Added in API level 8", "FullName": "public abstract GregorianCalendar toGregorianCalendar (TimeZone timezone, Locale aLocale, XMLGregorianCalendar defaults)"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "A non-null valid String representation of this XMLGregorianCalendar."]], "Parameters": [], "Throws": [["@B_java#lang#IllegalStateException_E@", "if the combination of set fields does not match one of the eight defined XML Schema builtin date/time datatypes."]], "SeeAlso": ["@B_javax#xml#datatype#XMLGregorianCalendar#toXMLFormat_E@"], "Permissions": [], "Description": "Returns a String representation of this XMLGregorianCalendar Object. The result is a lexical representation generated by @B_javax#xml#datatype#XMLGregorianCalendar#toXMLFormat_E@.", "history": "Added in API level 8", "FullName": "public String toString ()"}, "setMinute(int)": {"Returns": [], "Parameters": [["int", "int: value constraints summarized in minute field of date/time field mapping table."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if minute parameter is outside value constraints for the field as specified in date/time field mapping table."]], "SeeAlso": [], "Permissions": [], "Description": "Set minutes. Unset this field by invoking the setter with a parameter value of @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@.", "history": "Added in API level 8", "FullName": "public abstract void setMinute (int minute)"}, "getSecond()": {"Returns": [["int", "Second of this XMLGregorianCalendar."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_javax#xml#datatype#XMLGregorianCalendar#getFractionalSecond_E@", "@B_javax#xml#datatype#XMLGregorianCalendar#getMillisecond_E@", "@B_javax#xml#datatype#XMLGregorianCalendar#setTime_E@"], "Permissions": [], "Description": "Return seconds or @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@. Returns @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@ if this field is not defined. When this field is not defined, the optional xs:dateTime fractional seconds field, represented by @B_javax#xml#datatype#XMLGregorianCalendar#getFractionalSecond_E@ and @B_javax#xml#datatype#XMLGregorianCalendar#getMillisecond_E@, must not be defined. Value constraints for this value are summarized in", "history": "Added in API level 8", "FullName": "public abstract int getSecond ()"}, "compare(javax.xml.datatype.XMLGregorianCalendar)": {"Returns": [["int", "The relationship between this XMLGregorianCalendar and the specified xmlGregorianCalendar as @B_javax#xml#datatype#DatatypeConstants#LESSER_E@, @B_javax#xml#datatype#DatatypeConstants#EQUAL_E@, @B_javax#xml#datatype#DatatypeConstants#GREATER_E@ or @B_javax#xml#datatype#DatatypeConstants#INDETERMINATE_E@."]], "Parameters": [["@B_javax#xml#datatype#XMLGregorianCalendar_E@", "XMLGregorianCalendar: Instance of XMLGregorianCalendar to compare"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if xmlGregorianCalendar is null."]], "SeeAlso": [], "Permissions": [], "Description": "Compare two instances of W3C XML Schema 1.0 date/time datatypes according to partial order relation defined in xsd:dateTime datatype field mapping to accessors of this class are defined in", "history": "Added in API level 8", "FullName": "public abstract int compare (XMLGregorianCalendar xmlGregorianCalendar)"}, "setTime(int, int, int)": {"Returns": [], "Parameters": [["int", "int: value constraints are summarized in hour field of date/time field mapping table."], ["int", "int: value constraints are summarized in minute field of date/time field mapping table."], ["int", "int: value constraints are summarized in second field of date/time field mapping table."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if any parameter is outside value constraints for the field as specified in date/time field mapping table."]], "SeeAlso": ["@B_javax#xml#datatype#XMLGregorianCalendar#setTime_E@"], "Permissions": [], "Description": "Set time as one unit.", "history": "added in API level 8", "FullName": "public void setTime (int hour, int minute, int second)"}, "getFractionalSecond()": {"Returns": [["@B_java#math#BigDecimal_E@", "fractional seconds of this XMLGregorianCalendar."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_javax#xml#datatype#XMLGregorianCalendar#getSecond_E@", "@B_javax#xml#datatype#XMLGregorianCalendar#setTime_E@"], "Permissions": [], "Description": "Return fractional seconds. null is returned when this optional field is not defined. Value constraints are detailed in This optional field can only have a defined value when the xs:dateTime second field, represented by @B_javax#xml#datatype#XMLGregorianCalendar#getSecond_E@, does not return @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@.", "history": "Added in API level 8", "FullName": "public abstract BigDecimal getFractionalSecond ()"}, "normalize()": {"Returns": [["@B_javax#xml#datatype#XMLGregorianCalendar_E@", "this XMLGregorianCalendar normalized to UTC."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Normalize this instance to UTC. 2000-03-04T23:00:00+03:00 normalizes to 2000-03-04T20:00:00Z Implements W3C XML Schema Part 2, Section 3.2.7.3 (A).", "history": "Added in API level 8", "FullName": "public abstract XMLGregorianCalendar normalize ()"}, "setSecond(int)": {"Returns": [], "Parameters": [["int", "int: value constraints summarized in second field of date/time field mapping table."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if second parameter is outside value constraints for the field as specified in date/time field mapping table."]], "SeeAlso": [], "Permissions": [], "Description": "Set seconds. Unset this field by invoking the setter with a parameter value of @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@.", "history": "Added in API level 8", "FullName": "public abstract void setSecond (int second)"}, "getYear()": {"Returns": [["int", "year of this XMLGregorianCalendar."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_javax#xml#datatype#XMLGregorianCalendar#getEon_E@", "@B_javax#xml#datatype#XMLGregorianCalendar#getEonAndYear_E@"], "Permissions": [], "Description": "Return low order component for XML Schema 1.0 dateTime datatype field for year or @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@. Value constraints for this value are summarized in", "history": "Added in API level 8", "FullName": "public abstract int getYear ()"}, "getTimezone()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_javax#xml#datatype#XMLGregorianCalendar#setTimezone_E@"], "Permissions": [], "Description": "Return timezone offset in minutes or @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@ if this optional field is not defined. Value constraints for this value are summarized in", "history": "Added in API level 8", "FullName": "public abstract int getTimezone ()"}, "setDay(int)": {"Returns": [], "Parameters": [["int", "int: value constraints summarized in day field of date/time field mapping table."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if day parameter is outside value constraints for the field as specified in date/time field mapping table."]], "SeeAlso": [], "Permissions": [], "Description": "Set days in month. Unset this field by invoking the setter with a parameter value of @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@.", "history": "Added in API level 8", "FullName": "public abstract void setDay (int day)"}, "getMinute()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_javax#xml#datatype#XMLGregorianCalendar#setTime_E@"], "Permissions": [], "Description": "Return minutes or @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@. Returns @B_javax#xml#datatype#DatatypeConstants#FIELD_UNDEFINED_E@ if this field is not defined. Value constraints for this value are summarized in", "history": "Added in API level 8", "FullName": "public abstract int getMinute ()"}}, "Inheritance": [], "ClassName": "javax.xml.datatype.XMLGregorianCalendar", "ClassDesc": "Representation for W3C XML Schema 1.0 date/time datatypes. Specifically, these date/time datatypes are \"http://www.w3.org/2001/XMLSchema\". These datatypes are normatively defined in The table below defines the mapping between XML Schema 1.0 date/time datatype fields and this class' fields. It also summarizes the value constraints for the date and time fields defined in All maximum value space constraints listed for the fields in the table above are checked by factory methods, @{link DatatypeFactory}, setter methods and parse methods of this class. IllegalArgumentException is thrown when a parameter's value is outside the value constraint for the field or if the composite values constitute an invalid XMLGregorianCalendar instance (for example, if the 31st of June is specified). The following operations are defined for this class: accessors/mutators for independent date/time fields conversion between this class and W3C XML Schema 1.0 lexical representation, @B_javax#xml#datatype#XMLGregorianCalendar#toString_E@, @B_javax#xml#datatype#DatatypeFactory#newXMLGregorianCalendar_E@ conversion between this class and @B_java#util#GregorianCalendar_E@, @B_javax#xml#datatype#XMLGregorianCalendar#toGregorianCalendar_E@, @B_javax#xml#datatype#DatatypeFactory_E@ partial order relation comparator method, @B_javax#xml#datatype#XMLGregorianCalendar#compare_E@ @B_javax#xml#datatype#XMLGregorianCalendar#equals_E@ defined relative to @B_javax#xml#datatype#XMLGregorianCalendar#compare_E@. addition operation with @B_javax#xml#datatype#Duration_E@ instance as defined in"}