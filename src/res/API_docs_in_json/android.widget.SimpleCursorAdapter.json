{"Functions": {"setViewBinder(android.widget.SimpleCursorAdapter.ViewBinder)": {"Returns": [], "Parameters": [["@B_android#widget#SimpleCursorAdapter#ViewBinder_E@", "SimpleCursorAdapter.ViewBinder: the binder used to bind data to views, can be null to remove the existing binder"]], "Throws": [], "SeeAlso": ["@B_android#widget#SimpleCursorAdapter#bindView_E@", "@B_android#widget#SimpleCursorAdapter#getViewBinder_E@"], "Permissions": [], "Description": "Sets the binder used to bind data to views.", "history": "Added in API level 1", "FullName": "public void setViewBinder (SimpleCursorAdapter.ViewBinder viewBinder)"}, "getStringConversionColumn()": {"Returns": [["int", "a valid index in the current Cursor or -1"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#widget#CursorAdapter#convertToString_E@", "@B_android#widget#SimpleCursorAdapter#setStringConversionColumn_E@", "@B_android#widget#SimpleCursorAdapter#setCursorToStringConverter_E@", "@B_android#widget#SimpleCursorAdapter#getCursorToStringConverter_E@"], "Permissions": [], "Description": "Return the index of the column used to get a String representation of the Cursor.", "history": "Added in API level 1", "FullName": "public int getStringConversionColumn ()"}, "setViewText(android.widget.TextView,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#widget#TextView_E@", "TextView: TextView to receive text"], ["@B_java#lang#String_E@", "String: the text to be set for the TextView"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called by bindView() to set the text for a TextView but only if there is no existing ViewBinder or if the existing ViewBinder cannot handle binding to a TextView. Intended to be overridden by Adapters that need to filter strings retrieved from the database.", "history": "Added in API level 1", "FullName": "public void setViewText (TextView v, String text)"}, "SimpleCursorAdapter(android.content.Context,int,android.database.Cursor,java.lang.String[],int[])": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"], ["int", "int no parameter comment"], ["@B_android#database#Cursor_E@", "Cursor no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"], ["int[]", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This option is discouraged, as it results in Cursor queries being performed on the application's UI thread and thus can cause poor responsiveness or even Application Not Responding errors. As an alternative, use @B_android#app#LoaderManager_E@ with a @B_android#content#CursorLoader_E@. Constructor the enables auto-requery.", "history": "Added in API level 1", "FullName": "public SimpleCursorAdapter (Context context, int layout, Cursor c, String[] from, int[] to)"}, "getViewBinder()": {"Returns": [["@B_android#widget#SimpleCursorAdapter#ViewBinder_E@", "a ViewBinder or null if the binder does not exist"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#widget#SimpleCursorAdapter#bindView_E@", "@B_android#widget#SimpleCursorAdapter#setViewBinder_E@"], "Permissions": [], "Description": "Returns the @B_android#widget#SimpleCursorAdapter#ViewBinder_E@ used to bind data to views.", "history": "Added in API level 1", "FullName": "public SimpleCursorAdapter.ViewBinder getViewBinder ()"}, "setCursorToStringConverter(android.widget.SimpleCursorAdapter.CursorToStringConverter)": {"Returns": [], "Parameters": [["@B_android#widget#SimpleCursorAdapter#CursorToStringConverter_E@", "SimpleCursorAdapter.CursorToStringConverter: the Cursor to String converter, or null to remove the converter"]], "Throws": [], "SeeAlso": ["@B_android#widget#SimpleCursorAdapter#setCursorToStringConverter_E@", "@B_android#widget#SimpleCursorAdapter#getStringConversionColumn_E@", "@B_android#widget#SimpleCursorAdapter#setStringConversionColumn_E@", "@B_android#widget#CursorAdapter#convertToString_E@"], "Permissions": [], "Description": "Sets the converter used to convert the filtering Cursor into a String.", "history": "Added in API level 1", "FullName": "public void setCursorToStringConverter (SimpleCursorAdapter.CursorToStringConverter cursorToStringConverter)"}, "swapCursor(android.database.Cursor)": {"Returns": [["@B_android#database#Cursor_E@", "Returns the previously set Cursor, or null if there was not one. If the given new Cursor is the same instance is the previously set Cursor, null is also returned."]], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: The new cursor to be used."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Swap in a new Cursor, returning the old Cursor. Unlike @B_android#widget#CursorAdapter#changeCursor_E@, the returned old Cursor is not closed.", "history": "Added in API level 11", "FullName": "public Cursor swapCursor (Cursor c)"}, "SimpleCursorAdapter(android.content.Context,int,android.database.Cursor,java.lang.String[],int[],int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The context where the ListView associated with this SimpleListItemFactory is running"], ["int", "int: resource identifier of a layout file that defines the views for this list item. The layout file should include at least those named views defined in \"to\""], ["@B_android#database#Cursor_E@", "Cursor: The database cursor. Can be null if the cursor is not available yet."], ["@B_java#lang#String_E@", "String: A list of column names representing the data to bind to the UI. Can be null if the cursor is not available yet."], ["int[]", "int: The views that should display column in the \"from\" parameter. These should all be TextViews. The first N views in this list are given the values of the first N columns in the from parameter. Can be null if the cursor is not available yet."], ["int", "int: Flags used to determine the behavior of the adapter, as per @B_android#widget#CursorAdapter#CursorAdapter_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Standard constructor.", "history": "Added in API level 11", "FullName": "public SimpleCursorAdapter (Context context, int layout, Cursor c, String[] from, int[] to, int flags)"}, "setStringConversionColumn(int)": {"Returns": [], "Parameters": [["int", "int: a valid index in the current Cursor or -1 to use the default conversion mechanism"]], "Throws": [], "SeeAlso": ["@B_android#widget#CursorAdapter#convertToString_E@", "@B_android#widget#SimpleCursorAdapter#getStringConversionColumn_E@", "@B_android#widget#SimpleCursorAdapter#setCursorToStringConverter_E@", "@B_android#widget#SimpleCursorAdapter#getCursorToStringConverter_E@"], "Permissions": [], "Description": "Defines the index of the column in the Cursor used to get a String representation of that Cursor. The column is used to convert the Cursor to a String only when the current CursorToStringConverter is null.", "history": "Added in API level 1", "FullName": "public void setStringConversionColumn (int stringConversionColumn)"}, "getCursorToStringConverter()": {"Returns": [["@B_android#widget#SimpleCursorAdapter#CursorToStringConverter_E@", "null if the converter does not exist or an instance of @B_android#widget#SimpleCursorAdapter#CursorToStringConverter_E@"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#widget#SimpleCursorAdapter#setCursorToStringConverter_E@", "@B_android#widget#SimpleCursorAdapter#getStringConversionColumn_E@", "@B_android#widget#SimpleCursorAdapter#setStringConversionColumn_E@", "@B_android#widget#CursorAdapter#convertToString_E@"], "Permissions": [], "Description": "Returns the converter used to convert the filtering Cursor into a String.", "history": "Added in API level 1", "FullName": "public SimpleCursorAdapter.CursorToStringConverter getCursorToStringConverter ()"}, "bindView(android.view.View,android.content.Context,android.database.Cursor)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: Existing view, returned earlier by newView"], ["@B_android#content#Context_E@", "Context: Interface to application's global information"], ["@B_android#database#Cursor_E@", "Cursor: The cursor from which to get the data. The cursor is already moved to the correct position."]], "Throws": [["@B_java#lang#IllegalStateException_E@", "if binding cannot occur"]], "SeeAlso": ["@B_android#widget#CursorAdapter#bindView_E@", "@B_android#widget#SimpleCursorAdapter#getViewBinder_E@", "@B_android#widget#SimpleCursorAdapter#setViewBinder_E@", "@B_android#widget#SimpleCursorAdapter#setViewImage_E@", "@B_android#widget#SimpleCursorAdapter#setViewText_E@"], "Permissions": [], "Description": "Binds all of the field names passed into the \"to\" parameter of the constructor with their corresponding cursor columns as specified in the \"from\" parameter. Binding occurs in two phases. First, if a @B_android#widget#SimpleCursorAdapter#ViewBinder_E@ is available, @B_android#widget#SimpleCursorAdapter#ViewBinder#setViewValue_E@ is invoked. If the returned value is true, binding has occured. If the returned value is false and the view to bind is a TextView, @B_android#widget#SimpleCursorAdapter#setViewText_E@ is invoked. If the returned value is false and the view to bind is an ImageView, @B_android#widget#SimpleCursorAdapter#setViewImage_E@ is invoked. If no appropriate binding can be found, an @B_java#lang#IllegalStateException_E@ is thrown.", "history": "Added in API level 1", "FullName": "public void bindView (View view, Context context, Cursor cursor)"}, "convertToString(android.database.Cursor)": {"Returns": [["@B_java#lang#CharSequence_E@", "a non-null CharSequence representing the cursor"]], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: the Cursor to convert to a CharSequence"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a CharSequence representation of the specified Cursor as defined by the current CursorToStringConverter. If no CursorToStringConverter has been set, the String conversion column is used instead. If the conversion column is -1, the returned String is empty if the cursor is null or Cursor.toString().", "history": "Added in API level 1", "FullName": "public CharSequence convertToString (Cursor cursor)"}, "setViewImage(android.widget.ImageView,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#widget#ImageView_E@", "ImageView: ImageView to receive an image"], ["@B_java#lang#String_E@", "String: the value retrieved from the cursor"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called by bindView() to set the image for an ImageView but only if there is no existing ViewBinder or if the existing ViewBinder cannot handle binding to an ImageView. By default, the value will be treated as an image resource. If the value cannot be used as an image resource, the value is used as an image Uri. Intended to be overridden by Adapters that need to filter strings retrieved from the database.", "history": "Added in API level 1", "FullName": "public void setViewImage (ImageView v, String value)"}, "changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[])": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: The database cursor. Can be null if the cursor is not available yet."], ["@B_java#lang#String_E@", "String: A list of column names representing the data to bind to the UI. Can be null if the cursor is not available yet."], ["int[]", "int: The views that should display column in the \"from\" parameter. These should all be TextViews. The first N views in this list are given the values of the first N columns in the from parameter. Can be null if the cursor is not available yet."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Change the cursor and change the column-to-view mappings at the same time.", "history": "Added in API level 3", "FullName": "public void changeCursorAndColumns (Cursor c, String[] from, int[] to)"}}, "Inheritance": ["@B_android#widget#BaseAdapter_E@", "@B_android#widget#CursorAdapter_E@", "@B_android#widget#ResourceCursorAdapter_E@"], "ClassName": "android.widget.SimpleCursorAdapter", "ClassDesc": "An easy adapter to map columns from a cursor to TextViews or ImageViews defined in an XML file. You can specify which columns you want, which views you want to display the columns, and the XML file that defines the appearance of these views. Binding occurs in two phases. First, if a @B_android#widget#SimpleCursorAdapter#ViewBinder_E@ is available, @B_android#widget#SimpleCursorAdapter#ViewBinder#setViewValue_E@ is invoked. If the returned value is true, binding has occured. If the returned value is false and the view to bind is a TextView, @B_android#widget#SimpleCursorAdapter#setViewText_E@ is invoked. If the returned value is false and the view to bind is an ImageView, @B_android#widget#SimpleCursorAdapter#setViewImage_E@ is invoked. If no appropriate binding can be found, an @B_java#lang#IllegalStateException_E@ is thrown. If this adapter is used with filtering, for instance in an @B_android#widget#AutoCompleteTextView_E@, you can use the @B_android#widget#SimpleCursorAdapter#CursorToStringConverter_E@ and the @B_android#widget#FilterQueryProvider_E@ interfaces to get control over the filtering process. You can refer to @B_android#widget#SimpleCursorAdapter#convertToString_E@ and @B_android#widget#CursorAdapter#runQueryOnBackgroundThread_E@ for more information."}