{"Functions": {"writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public void writeToParcel (Parcel out, int flags)"}, "toString()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public String toString ()"}, "equals(java.lang.Object)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tests if this @B_com#google#android#gms#maps#model#LatLng_E@ is equal to another. Two points are considered equal if and only if their latitudes are bitwise equal and their longitudes are bitwise equal. This means that two LatLngs that are very near, in terms of geometric distance, might not be considered .equal().", "history": "", "FullName": "public boolean equals (Object o)"}, "LatLng(double, double)": {"Returns": [], "Parameters": [["double", "The point's latitude. This will be clamped to between -90 degrees and +90 degrees inclusive."], ["double", "The point's longitude. This will be normalized to be within -180 degrees inclusive and +180 degrees exclusive."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a LatLng with the given latitude and longitude, measured in degrees.", "history": "", "FullName": "public LatLng (double latitude, double longitude)"}, "describeContents()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int describeContents ()"}, "hashCode()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int hashCode ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.maps.model.LatLng", "ClassDesc": "An immutable class representing a pair of latitude and longitude coordinates, stored as degrees."}