{"Functions": {"computeIfAbsent(java.lang.Object,java.util.function.Function<?superjava.lang.Object,?>)": {"Returns": [["@B_java#lang#Object_E@", "the current (existing or computed) value associated with the specified key, or null if the computed value is null"]], "Parameters": [["@B_java#lang#Object_E@", "Object: key with which the specified value is to be associated"], ["@B_java#util#function#Function_E@", "Function: the mapping function to compute a value"]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its @B_java#lang#SecurityManager#checkSecurityAccess_E@ method denies access to set property values and remove properties."]], "SeeAlso": [], "Permissions": [], "Description": "If the specified key is not already associated with a value (or is mapped to null), attempts to compute its value using the given mapping function and enters it into this map unless null. If a security manager is enabled, its checkSecurityAccess method is called with the strings \"putProviderProperty.\"+name and \"removeProviderProperty.\"+name, where name is the provider name, to see if it's ok to set this provider's property values and remove this provider's properties.", "history": "Added in API level 24", "FullName": "public Object computeIfAbsent (Object key, Function<? super Object, ?> mappingFunction)"}, "removeService(java.security.Provider.Service)": {"Returns": [], "Parameters": [["@B_java#security#Provider#Service_E@", "Provider.Service: the Service to be removed"]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its @B_java#lang#SecurityManager#checkSecurityAccess_E@ method denies access to remove this provider's properties."], ["@B_java#lang#NullPointerException_E@", "if s is null"]], "SeeAlso": [], "Permissions": [], "Description": "Remove a service previously added using @B_java#security#Provider#putService_E@. The specified service is removed from this provider. It will no longer be returned by @B_java#security#Provider#getService_E@ and its information will be removed from this provider's Hashtable. Also, if there is a security manager, its checkSecurityAccess method is called with the string \"removeProviderProperty.\"+name, where name is the provider name, to see if it's ok to remove this provider's properties. If the default implementation of checkSecurityAccess is used (that is, that method is not overriden), then this results in a call to the security manager's checkPermission method with a SecurityPermission(\"removeProviderProperty.\"+name) permission.", "history": "Added in API level 1", "FullName": "protected void removeService (Provider.Service s)"}, "put(java.lang.Object,java.lang.Object)": {"Returns": [["@B_java#lang#Object_E@", "the previous value of the specified key in this hashtable, or null if it did not have one"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the hashtable key"], ["@B_java#lang#Object_E@", "Object: the value"]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its @B_java#lang#SecurityManager#checkSecurityAccess_E@ method denies access to set property values."]], "SeeAlso": [], "Permissions": [], "Description": "Sets the key property to have the specified value. If a security manager is enabled, its checkSecurityAccess method is called with the string \"putProviderProperty.\"+name, where name is the provider name, to see if it's ok to set this provider's property values.", "history": "Added in API level 1", "FullName": "public Object put (Object key, Object value)"}, "getProperty(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "the value in this property list with the specified key value."]], "Parameters": [["@B_java#lang#String_E@", "String: the property key."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Searches for the property with the specified key in this property list. If the key is not found in this property list, the default property list, and its defaults, recursively, are then checked. The method returns null if the property is not found.", "history": "Added in API level 1", "FullName": "public String getProperty (String key)"}, "replace(java.lang.Object, java.lang.Object)": {"Returns": [["@B_java#lang#Object_E@", "the previous value associated with the specified key, or null if there was no mapping for the key. (A null return can also indicate that the map previously associated null with the key, if the implementation supports null values.)"]], "Parameters": [["@B_java#lang#Object_E@", "Object: key with which the specified value is associated"], ["@B_java#lang#Object_E@", "Object: value to be associated with the specified key"]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its @B_java#lang#SecurityManager#checkSecurityAccess_E@ method denies access to set property values."]], "SeeAlso": [], "Permissions": [], "Description": "Replaces the entry for the specified key only if it is currently mapped to some value. If a security manager is enabled, its checkSecurityAccess method is called with the string \"putProviderProperty.\"+name, where name is the provider name, to see if it's ok to set this provider's property values.", "history": "added in API level 26", "FullName": "public Object replace (Object key, Object value)"}, "remove(java.lang.Object, java.lang.Object)": {"Returns": [["boolean", "true if the value was removed"]], "Parameters": [["@B_java#lang#Object_E@", "Object: key with which the specified value is associated"], ["@B_java#lang#Object_E@", "Object: value expected to be associated with the specified key"]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its @B_java#lang#SecurityManager#checkSecurityAccess_E@ method denies access to remove this provider's properties."]], "SeeAlso": [], "Permissions": [], "Description": "Removes the entry for the specified key only if it is currently mapped to the specified value. If a security manager is enabled, its checkSecurityAccess method is called with the string \"removeProviderProperty.\"+name, where name is the provider name, to see if it's ok to remove this provider's properties.", "history": "added in API level 24", "FullName": "public boolean remove (Object key, Object value)"}, "clear()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its @B_java#lang#SecurityManager#checkSecurityAccess_E@ method denies access to clear this provider"]], "SeeAlso": [], "Permissions": [], "Description": "Clears this provider so that it no longer contains the properties used to look up facilities implemented by the provider. If a security manager is enabled, its checkSecurityAccess method is called with the string \"clearProviderProperties.\"+name (where name is the provider name) to see if it's ok to clear this provider.", "history": "Added in API level 1", "FullName": "public void clear ()"}, "replace(java.lang.Object,java.lang.Object,java.lang.Object)": {"Returns": [["boolean", "true if the value was replaced"]], "Parameters": [["@B_java#lang#Object_E@", "Object: key with which the specified value is associated"], ["@B_java#lang#Object_E@", "Object: value expected to be associated with the specified key"], ["@B_java#lang#Object_E@", "Object: value to be associated with the specified key"]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its @B_java#lang#SecurityManager#checkSecurityAccess_E@ method denies access to set property values."]], "SeeAlso": [], "Permissions": [], "Description": "Replaces the entry for the specified key only if currently mapped to the specified value. If a security manager is enabled, its checkSecurityAccess method is called with the string \"putProviderProperty.\"+name, where name is the provider name, to see if it's ok to set this provider's property values.", "history": "Added in API level 24", "FullName": "public boolean replace (Object key, Object oldValue, Object newValue)"}, "Provider(java.lang.String,double,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the provider name."], ["double", "double: the provider version number."], ["@B_java#lang#String_E@", "String: a description of the provider and its services."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a provider with the specified name, version number, and information.", "history": "Added in API level 1", "FullName": "protected Provider (String name, double version, String info)"}, "keys()": {"Returns": [["@B_java#util#Enumeration_E@", "an enumeration of the keys in this hashtable."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an enumeration of the keys in this hashtable.", "history": "Added in API level 1", "FullName": "public Enumeration<Object> keys ()"}, "replaceAll(java.util.function.BiFunction<?superjava.lang.Object,?superjava.lang.Object,?>)": {"Returns": [], "Parameters": [["@B_java#util#function#BiFunction_E@", "BiFunction: the function to apply to each entry"]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its @B_java#lang#SecurityManager#checkSecurityAccess_E@ method denies access to set property values."]], "SeeAlso": [], "Permissions": [], "Description": "Replaces each entry's value with the result of invoking the given function on that entry, in the order entries are returned by an entry set iterator, until all entries have been processed or the function throws an exception. If a security manager is enabled, its checkSecurityAccess method is called with the string \"putProviderProperty.\"+name, where name is the provider name, to see if it's ok to set this provider's property values.", "history": "Added in API level 24", "FullName": "public void replaceAll (BiFunction<? super Object, ? super Object, ?> function)"}, "getService(java.lang.String, java.lang.String)": {"Returns": [["@B_java#security#Provider#Service_E@", "the service describing this Provider's matching service or null if no such service exists"]], "Parameters": [["@B_java#lang#String_E@", "String: the type of @B_java#security#Provider#Service_E@ requested (for example, MessageDigest)"], ["@B_java#lang#String_E@", "String: the case insensitive algorithm name (or alternate alias) of the service requested (for example, SHA-1)"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if type or algorithm is null"]], "SeeAlso": [], "Permissions": [], "Description": "Get the service describing this Provider's implementation of the specified type of this algorithm or alias. If no such implementation exists, this method returns null. If there are two matching services, one added to this provider using @B_java#security#Provider#putService_E@ and one added via @B_java#util#Hashtable#put_E@, the service added via @B_java#security#Provider#putService_E@ is returned.", "history": "added in API level 1", "FullName": "public Provider.Service getService (String type, String algorithm)"}, "load(java.io.InputStream)": {"Returns": [], "Parameters": [["@B_java#io#InputStream_E@", "InputStream: the input stream."]], "Throws": [["@B_java#io#IOException_E@", "if an error occurred when reading from the input stream."]], "SeeAlso": ["@B_java#util#Properties#load_E@"], "Permissions": [], "Description": "Reads a property list (key and element pairs) from the input stream.", "history": "Added in API level 1", "FullName": "public void load (InputStream inStream)"}, "elements()": {"Returns": [["@B_java#util#Enumeration_E@", "an enumeration of the values in this hashtable."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an enumeration of the values in this hashtable. Use the Enumeration methods on the returned object to fetch the elements sequentially.", "history": "Added in API level 1", "FullName": "public Enumeration<Object> elements ()"}, "keySet()": {"Returns": [["@B_java#util#Set_E@", "a set view of the keys contained in this map"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an unmodifiable Set view of the property keys contained in this provider.", "history": "Added in API level 1", "FullName": "public Set<Object> keySet ()"}, "replace(java.lang.Object,java.lang.Object)": {"Returns": [["@B_java#lang#Object_E@", "the previous value associated with the specified key, or null if there was no mapping for the key. (A null return can also indicate that the map previously associated null with the key, if the implementation supports null values.)"]], "Parameters": [["@B_java#lang#Object_E@", "Object: key with which the specified value is associated"], ["@B_java#lang#Object_E@", "Object: value to be associated with the specified key"]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its @B_java#lang#SecurityManager#checkSecurityAccess_E@ method denies access to set property values."]], "SeeAlso": [], "Permissions": [], "Description": "Replaces the entry for the specified key only if it is currently mapped to some value. If a security manager is enabled, its checkSecurityAccess method is called with the string \"putProviderProperty.\"+name, where name is the provider name, to see if it's ok to set this provider's property values.", "history": "Added in API level 24", "FullName": "public Object replace (Object key, Object value)"}, "getName()": {"Returns": [["@B_java#lang#String_E@", "the name of this provider."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the name of this provider.", "history": "Added in API level 1", "FullName": "public String getName ()"}, "get(java.lang.Object)": {"Returns": [["@B_java#lang#Object_E@", "the value to which the specified key is mapped, or null if this map contains no mapping for the key"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the key whose associated value is to be returned"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key. More formally, if this map contains a mapping from a key k to a value v such that (key.equals(k)), then this method returns v; otherwise it returns null. (There can be at most one such mapping.)", "history": "Added in API level 1", "FullName": "public Object get (Object key)"}, "forEach(java.util.function.BiConsumer<?superjava.lang.Object,?superjava.lang.Object>)": {"Returns": [], "Parameters": [["@B_java#util#function#BiConsumer_E@", "BiConsumer: The action to be performed for each entry"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Performs the given action for each entry in this map until all entries have been processed or the action throws an exception. Unless otherwise specified by the implementing class, actions are performed in the order of entry set iteration (if an iteration order is specified.) Exceptions thrown by the action are relayed to the caller.", "history": "Added in API level 24", "FullName": "public void forEach (BiConsumer<? super Object, ? super Object> action)"}, "putIfAbsent(java.lang.Object, java.lang.Object)": {"Returns": [["@B_java#lang#Object_E@", "the previous value associated with the specified key, or null if there was no mapping for the key. (A null return can also indicate that the map previously associated null with the key, if the implementation supports null values.)"]], "Parameters": [["@B_java#lang#Object_E@", "Object: key with which the specified value is to be associated"], ["@B_java#lang#Object_E@", "Object: value to be associated with the specified key"]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its @B_java#lang#SecurityManager#checkSecurityAccess_E@ method denies access to set property values."]], "SeeAlso": [], "Permissions": [], "Description": "If the specified key is not already associated with a value (or is mapped to null) associates it with the given value and returns null, else returns the current value. If a security manager is enabled, its checkSecurityAccess method is called with the string \"putProviderProperty.\"+name, where name is the provider name, to see if it's ok to set this provider's property values.", "history": "added in API level 26", "FullName": "public Object putIfAbsent (Object key, Object value)"}, "merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction<?superjava.lang.Object,?superjava.lang.Object,?>)": {"Returns": [["@B_java#lang#Object_E@", "the new value associated with the specified key, or null if no value is associated with the key"]], "Parameters": [["@B_java#lang#Object_E@", "Object: key with which the resulting value is to be associated"], ["@B_java#lang#Object_E@", "Object: the non-null value to be merged with the existing value associated with the key or, if no existing value or a null value is associated with the key, to be associated with the key"], ["@B_java#util#function#BiFunction_E@", "BiFunction: the remapping function to recompute a value if present"]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its @B_java#lang#SecurityManager#checkSecurityAccess_E@ method denies access to set property values or remove properties."]], "SeeAlso": [], "Permissions": [], "Description": "If the specified key is not already associated with a value or is associated with null, associates it with the given value. Otherwise, replaces the value with the results of the given remapping function, or removes if the result is null. This method may be of use when combining multiple mapped values for a key. If a security manager is enabled, its checkSecurityAccess method is called with the strings \"putProviderProperty.\"+name and \"removeProviderProperty.\"+name, where name is the provider name, to see if it's ok to set this provider's property values and remove this provider's properties.", "history": "Added in API level 24", "FullName": "public Object merge (Object key, Object value, BiFunction<? super Object, ? super Object, ?> remappingFunction)"}, "getServices()": {"Returns": [["@B_java#util#Set_E@", "an unmodifiable Set of all services supported by this Provider"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get an unmodifiable Set of all services supported by this Provider.", "history": "Added in API level 1", "FullName": "public Set<Provider.Service> getServices ()"}, "remove(java.lang.Object,java.lang.Object)": {"Returns": [["boolean", "true if the value was removed"]], "Parameters": [["@B_java#lang#Object_E@", "Object: key with which the specified value is associated"], ["@B_java#lang#Object_E@", "Object: value expected to be associated with the specified key"]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its @B_java#lang#SecurityManager#checkSecurityAccess_E@ method denies access to remove this provider's properties."]], "SeeAlso": [], "Permissions": [], "Description": "Removes the entry for the specified key only if it is currently mapped to the specified value. If a security manager is enabled, its checkSecurityAccess method is called with the string \"removeProviderProperty.\"+name, where name is the provider name, to see if it's ok to remove this provider's properties.", "history": "Added in API level 24", "FullName": "public boolean remove (Object key, Object value)"}, "values()": {"Returns": [["@B_java#util#Collection_E@", "a collection view of the values contained in this map"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an unmodifiable Collection view of the property values contained in this provider.", "history": "Added in API level 1", "FullName": "public Collection<Object> values ()"}, "putService(java.security.Provider.Service)": {"Returns": [], "Parameters": [["@B_java#security#Provider#Service_E@", "Provider.Service: the Service to add"]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its @B_java#lang#SecurityManager#checkSecurityAccess_E@ method denies access to set property values."], ["@B_java#lang#NullPointerException_E@", "if s is null"]], "SeeAlso": [], "Permissions": [], "Description": "Add a service. If a service of the same type with the same algorithm name exists and it was added using @B_java#security#Provider#putService_E@, it is replaced by the new service. This method also places information about this service in the provider's Hashtable values in the format described in the Also, if there is a security manager, its checkSecurityAccess method is called with the string \"putProviderProperty.\"+name, where name is the provider name, to see if it's ok to set this provider's property values. If the default implementation of checkSecurityAccess is used (that is, that method is not overriden), then this results in a call to the security manager's checkPermission method with a SecurityPermission(\"putProviderProperty.\"+name) permission.", "history": "Added in API level 1", "FullName": "protected void putService (Provider.Service s)"}, "putAll(java.util.Map<?, ?>)": {"Returns": [], "Parameters": [["@B_java#util#Map_E@", "Map: mappings to be stored in this map"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Copies all of the mappings from the specified Map to this provider. These mappings will replace any properties that this provider had for any of the keys currently in the specified Map.", "history": "added in API level 1", "FullName": "public void putAll (Map<?, ?> t)"}, "getVersion()": {"Returns": [["double", "the version number for this provider."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the version number for this provider.", "history": "Added in API level 1", "FullName": "public double getVersion ()"}, "remove(java.lang.Object)": {"Returns": [["@B_java#lang#Object_E@", "the value to which the key had been mapped in this hashtable, or null if the key did not have a mapping"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the key that needs to be removed"]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its @B_java#lang#SecurityManager#checkSecurityAccess_E@ method denies access to remove this provider's properties."]], "SeeAlso": [], "Permissions": [], "Description": "Removes the key property (and its corresponding value). If a security manager is enabled, its checkSecurityAccess method is called with the string \"removeProviderProperty.\"+name, where name is the provider name, to see if it's ok to remove this provider's properties.", "history": "Added in API level 1", "FullName": "public Object remove (Object key)"}, "compute(java.lang.Object,java.util.function.BiFunction<?superjava.lang.Object,?superjava.lang.Object,?>)": {"Returns": [["@B_java#lang#Object_E@", "the new value associated with the specified key, or null if none"]], "Parameters": [["@B_java#lang#Object_E@", "Object: key with which the specified value is to be associated"], ["@B_java#util#function#BiFunction_E@", "BiFunction: the remapping function to compute a value"]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its @B_java#lang#SecurityManager#checkSecurityAccess_E@ method denies access to set property values or remove properties."]], "SeeAlso": [], "Permissions": [], "Description": "Attempts to compute a mapping for the specified key and its current mapped value (or null if there is no current mapping). If a security manager is enabled, its checkSecurityAccess method is called with the strings \"putProviderProperty.\"+name and \"removeProviderProperty.\"+name, where name is the provider name, to see if it's ok to set this provider's property values and remove this provider's properties.", "history": "Added in API level 24", "FullName": "public Object compute (Object key, BiFunction<? super Object, ? super Object, ?> remappingFunction)"}, "computeIfPresent(java.lang.Object,java.util.function.BiFunction<?superjava.lang.Object,?superjava.lang.Object,?>)": {"Returns": [["@B_java#lang#Object_E@", "the new value associated with the specified key, or null if none"]], "Parameters": [["@B_java#lang#Object_E@", "Object: key with which the specified value is to be associated"], ["@B_java#util#function#BiFunction_E@", "BiFunction: the remapping function to compute a value"]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its @B_java#lang#SecurityManager#checkSecurityAccess_E@ method denies access to set property values or remove properties."]], "SeeAlso": [], "Permissions": [], "Description": "If the value for the specified key is present and non-null, attempts to compute a new mapping given the key and its current mapped value. If a security manager is enabled, its checkSecurityAccess method is called with the strings \"putProviderProperty.\"+name and \"removeProviderProperty.\"+name, where name is the provider name, to see if it's ok to set this provider's property values and remove this provider's properties.", "history": "Added in API level 24", "FullName": "public Object computeIfPresent (Object key, BiFunction<? super Object, ? super Object, ?> remappingFunction)"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "the string with the name and the version number for this provider."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string with the name and the version number of this provider.", "history": "Added in API level 1", "FullName": "public String toString ()"}, "getOrDefault(java.lang.Object,java.lang.Object)": {"Returns": [["@B_java#lang#Object_E@", "the value to which the specified key is mapped, or defaultValue if this map contains no mapping for the key"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the key whose associated value is to be returned"], ["@B_java#lang#Object_E@", "Object: the default mapping of the key"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value to which the specified key is mapped, or defaultValue if this map contains no mapping for the key.", "history": "Added in API level 24", "FullName": "public Object getOrDefault (Object key, Object defaultValue)"}, "entrySet()": {"Returns": [["@B_java#util#Set_E@", "a set view of the mappings contained in this map"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#util#Map#Entry_E@"], "Permissions": [], "Description": "Returns an unmodifiable Set view of the property entries contained in this Provider.", "history": "Added in API level 1", "FullName": "public Set<Entry<Object, Object>> entrySet ()"}, "putIfAbsent(java.lang.Object,java.lang.Object)": {"Returns": [["@B_java#lang#Object_E@", "the previous value associated with the specified key, or null if there was no mapping for the key. (A null return can also indicate that the map previously associated null with the key, if the implementation supports null values.)"]], "Parameters": [["@B_java#lang#Object_E@", "Object: key with which the specified value is to be associated"], ["@B_java#lang#Object_E@", "Object: value to be associated with the specified key"]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its @B_java#lang#SecurityManager#checkSecurityAccess_E@ method denies access to set property values."]], "SeeAlso": [], "Permissions": [], "Description": "If the specified key is not already associated with a value (or is mapped to null) associates it with the given value and returns null, else returns the current value. If a security manager is enabled, its checkSecurityAccess method is called with the string \"putProviderProperty.\"+name, where name is the provider name, to see if it's ok to set this provider's property values.", "history": "Added in API level 24", "FullName": "public Object putIfAbsent (Object key, Object value)"}, "getService(java.lang.String,java.lang.String)": {"Returns": [["@B_java#security#Provider#Service_E@", "the service describing this Provider's matching service or null if no such service exists"]], "Parameters": [["@B_java#lang#String_E@", "String: the type of @B_java#security#Provider#Service_E@ requested (for example, MessageDigest)"], ["@B_java#lang#String_E@", "String: the case insensitive algorithm name (or alternate alias) of the service requested (for example, SHA-1)"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if type or algorithm is null"]], "SeeAlso": [], "Permissions": [], "Description": "Get the service describing this Provider's implementation of the specified type of this algorithm or alias. If no such implementation exists, this method returns null. If there are two matching services, one added to this provider using @B_java#security#Provider#putService_E@ and one added via @B_java#util#Hashtable#put_E@, the service added via @B_java#security#Provider#putService_E@ is returned.", "history": "Added in API level 1", "FullName": "public Provider.Service getService (String type, String algorithm)"}, "putAll(java.util.Map<?,?>)": {"Returns": [], "Parameters": [["@B_java#util#Map_E@", "Map: mappings to be stored in this map"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Copies all of the mappings from the specified Map to this provider. These mappings will replace any properties that this provider had for any of the keys currently in the specified Map.", "history": "Added in API level 1", "FullName": "public void putAll (Map<?, ?> t)"}, "getOrDefault(java.lang.Object, java.lang.Object)": {"Returns": [["@B_java#lang#Object_E@", "the value to which the specified key is mapped, or defaultValue if this map contains no mapping for the key"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the key whose associated value is to be returned"], ["@B_java#lang#Object_E@", "Object: the default mapping of the key"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value to which the specified key is mapped, or defaultValue if this map contains no mapping for the key.", "history": "added in API level 26", "FullName": "public Object getOrDefault (Object key, Object defaultValue)"}, "getInfo()": {"Returns": [["@B_java#lang#String_E@", "a description of the provider and its services."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a human-readable description of the provider and its services. This may return an HTML page, with relevant links.", "history": "Added in API level 1", "FullName": "public String getInfo ()"}, "put(java.lang.Object, java.lang.Object)": {"Returns": [["@B_java#lang#Object_E@", "the previous value of the specified key in this hashtable, or null if it did not have one"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the hashtable key"], ["@B_java#lang#Object_E@", "Object: the value"]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its @B_java#lang#SecurityManager#checkSecurityAccess_E@ method denies access to set property values."]], "SeeAlso": [], "Permissions": [], "Description": "Sets the key property to have the specified value. If a security manager is enabled, its checkSecurityAccess method is called with the string \"putProviderProperty.\"+name, where name is the provider name, to see if it's ok to set this provider's property values.", "history": "added in API level 1", "FullName": "public Object put (Object key, Object value)"}}, "Inheritance": ["@B_java#util#Dictionary_E@", "@B_java#util#Hashtable_E@", "@B_java#util#Properties_E@"], "ClassName": "java.security.Provider", "ClassDesc": "This class represents a \"provider\" for the Java Security API, where a provider implements some or all parts of Java Security. Services that a provider may implement include: Algorithms (such as DSA, RSA, MD5 or SHA-1). Key generation, conversion, and management facilities (such as for algorithm-specific keys). Each provider has a name and a version number, and is configured in each runtime it is installed in. See Some provider implementations may encounter unrecoverable internal errors during their operation, for example a failure to communicate with a security token. A @B_java#security#ProviderException_E@ should be used to indicate such errors. The service type Provider is reserved for use by the security framework. Services of this type cannot be added, removed, or modified by applications. The following attributes are automatically placed in each Provider object:"}