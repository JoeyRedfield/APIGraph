{"Functions": {"append(java.lang.CharSequence, int, int)": {"Returns": [["@B_java#io#CharArrayWriter_E@", "This writer"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: The character sequence from which a subsequence will be appended. If csq is null, then characters will be appended as if csq contained the four characters \"null\"."], ["int", "int: The index of the first character in the subsequence"], ["int", "int: The index of the character following the last character in the subsequence"]], "Throws": [["@B_java#lang#IndexOutOfBoundsException_E@", "If start or end are negative, start is greater than end, or end is greater than csq.length()"]], "SeeAlso": [], "Permissions": [], "Description": "Appends a subsequence of the specified character sequence to this writer. An invocation of this method of the form", "history": "added in API level 1", "FullName": "public CharArrayWriter append (CharSequence csq, int start, int end)"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "the string."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Converts input data to a string.", "history": "Added in API level 1", "FullName": "public String toString ()"}, "append(java.lang.CharSequence,int,int)": {"Returns": [["@B_java#io#CharArrayWriter_E@", "This writer"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: The character sequence from which a subsequence will be appended. If csq is null, then characters will be appended as if csq contained the four characters \"null\"."], ["int", "int: The index of the first character in the subsequence"], ["int", "int: The index of the character following the last character in the subsequence"]], "Throws": [["@B_java#lang#IndexOutOfBoundsException_E@", "If start or end are negative, start is greater than end, or end is greater than csq.length()"]], "SeeAlso": [], "Permissions": [], "Description": "Appends a subsequence of the specified character sequence to this writer. An invocation of this method of the form", "history": "Added in API level 1", "FullName": "public CharArrayWriter append (CharSequence csq, int start, int end)"}, "size()": {"Returns": [["int", "an int representing the current size of the buffer."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current size of the buffer.", "history": "Added in API level 1", "FullName": "public int size ()"}, "reset()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Resets the buffer so that you can use it again without throwing away the already allocated buffer.", "history": "Added in API level 1", "FullName": "public void reset ()"}, "writeTo(java.io.Writer)": {"Returns": [], "Parameters": [["@B_java#io#Writer_E@", "Writer: the output stream to write to"]], "Throws": [["@B_java#io#IOException_E@", "If an I/O error occurs."]], "SeeAlso": [], "Permissions": [], "Description": "Writes the contents of the buffer to another character stream.", "history": "Added in API level 1", "FullName": "public void writeTo (Writer out)"}, "write(char[],int,int)": {"Returns": [], "Parameters": [["char[]", "char: the data to be written"], ["int", "int: the start offset in the data"], ["int", "int: the number of chars that are written"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Writes characters to the buffer.", "history": "Added in API level 1", "FullName": "public void write (char[] c, int off, int len)"}, "write(java.lang.String, int, int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: String to be written from"], ["int", "int: Offset from which to start reading characters"], ["int", "int: Number of characters to be written"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Write a portion of a string to the buffer.", "history": "added in API level 1", "FullName": "public void write (String str, int off, int len)"}, "close()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Close the stream. This method does not release the buffer, since its contents might still be required. Note: Invoking this method in this class will have no effect.", "history": "Added in API level 1", "FullName": "public void close ()"}, "write(int)": {"Returns": [], "Parameters": [["int", "int: int specifying a character to be written"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Writes a character to the buffer.", "history": "Added in API level 1", "FullName": "public void write (int c)"}, "toCharArray()": {"Returns": [["char[]", "an array of chars copied from the input data."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a copy of the input data.", "history": "Added in API level 1", "FullName": "public char[] toCharArray ()"}, "CharArrayWriter()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new CharArrayWriter.", "history": "Added in API level 1", "FullName": "public CharArrayWriter ()"}, "append(java.lang.CharSequence)": {"Returns": [["@B_java#io#CharArrayWriter_E@", "This writer"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: The character sequence to append. If csq is null, then the four characters \"null\" are appended to this writer."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Appends the specified character sequence to this writer. An invocation of this method of the form Depending on the specification of", "history": "Added in API level 1", "FullName": "public CharArrayWriter append (CharSequence csq)"}, "CharArrayWriter(int)": {"Returns": [], "Parameters": [["int", "int: an int specifying the initial buffer size."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if initialSize is negative"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new CharArrayWriter with the specified initial size.", "history": "Added in API level 1", "FullName": "public CharArrayWriter (int initialSize)"}, "flush()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flush the stream.", "history": "Added in API level 1", "FullName": "public void flush ()"}, "write(java.lang.String,int,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: String to be written from"], ["int", "int: Offset from which to start reading characters"], ["int", "int: Number of characters to be written"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Write a portion of a string to the buffer.", "history": "Added in API level 1", "FullName": "public void write (String str, int off, int len)"}, "write(char[], int, int)": {"Returns": [], "Parameters": [["char[]", "char: the data to be written"], ["int", "int: the start offset in the data"], ["int", "int: the number of chars that are written"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Writes characters to the buffer.", "history": "added in API level 1", "FullName": "public void write (char[] c, int off, int len)"}, "append(char)": {"Returns": [["@B_java#io#CharArrayWriter_E@", "This writer"]], "Parameters": [["char", "char: The 16-bit character to append"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Appends the specified character to this writer. An invocation of this method of the form", "history": "Added in API level 1", "FullName": "public CharArrayWriter append (char c)"}}, "Inheritance": ["@B_java#io#Writer_E@"], "ClassName": "java.io.CharArrayWriter", "ClassDesc": "This class implements a character buffer that can be used as an Writer. The buffer automatically grows when data is written to the stream. The data can be retrieved using toCharArray() and toString(). Note: Invoking close() on this class has no effect, and methods of this class can be called after the stream has closed without generating an IOException."}