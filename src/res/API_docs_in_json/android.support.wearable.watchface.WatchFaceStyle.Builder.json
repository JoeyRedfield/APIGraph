{"Functions": {"setAcceptsTapEvents(boolean)": {"Returns": [["@B_android#support#wearable#watchface#WatchFaceStyle#Builder_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean: whether to receive touch events."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether this watchface accepts tap events. The default is false. Watchfaces that set this true are indicating they are prepared to receive @B_android#support#wearable#watchface#WatchFaceService#TAP_TYPE_TOUCH_E@, @B_android#support#wearable#watchface#WatchFaceService#TAP_TYPE_TOUCH_CANCEL_E@, and @B_android#support#wearable#watchface#WatchFaceService#TAP_TYPE_TAP_E@", "history": "", "FullName": "WatchFaceStyle.Builder setAcceptsTapEvents (boolean acceptsTapEvents)"}, "setShowUnreadCountIndicator(boolean)": {"Returns": [["@B_android#support#wearable#watchface#WatchFaceStyle#Builder_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean: if true an indicator will be shown"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether to add an indicator of how many unread cards there are in the stream. The indicator will be displayed next to status icons (battery state, lack of connection).", "history": "", "FullName": "WatchFaceStyle.Builder setShowUnreadCountIndicator (boolean show)"}, "setStatusBarGravity(int)": {"Returns": [["@B_android#support#wearable#watchface#WatchFaceStyle#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: This must be any combination of horizontal Gravity constant (@B_android#view#Gravity#LEFT_E@, @B_android#view#Gravity#CENTER_HORIZONTAL_E@, @B_android#view#Gravity#RIGHT_E@) and vertical Gravity constants (@B_android#view#Gravity#TOP_E@, @B_android#view#Gravity#CENTER_VERTICAL_E@, @B_android#view#Gravity#BOTTOM_E@), e.g. Gravity.LEFT | Gravity.BOTTOM. On circular screens, only the vertical gravity is respected."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets position of status icons (battery state, lack of connection) on the screen.", "history": "", "FullName": "WatchFaceStyle.Builder setStatusBarGravity (int statusBarGravity)"}, "setAmbientPeekMode(int)": {"Returns": [["@B_android#support#wearable#watchface#WatchFaceStyle#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: must be either @B_android#support#wearable#watchface#WatchFaceStyle#AMBIENT_PEEK_MODE_VISIBLE_E@ or @B_android#support#wearable#watchface#WatchFaceStyle#AMBIENT_PEEK_MODE_HIDDEN_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets how the first, peeking card will be displayed while the watch is in ambient, black & white mode.", "history": "", "FullName": "WatchFaceStyle.Builder setAmbientPeekMode (int ambientPeekMode)"}, "WatchFaceStyle.Builder(android.app.Service)": {"Returns": [], "Parameters": [["Service", "Service no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "WatchFaceStyle.Builder (Service service)"}, "setBackgroundVisibility(int)": {"Returns": [["@B_android#support#wearable#watchface#WatchFaceStyle#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: must be either @B_android#support#wearable#watchface#WatchFaceStyle#BACKGROUND_VISIBILITY_INTERRUPTIVE_E@ or @B_android#support#wearable#watchface#WatchFaceStyle#BACKGROUND_VISIBILITY_PERSISTENT_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set how to display background of the first, peeking card.", "history": "", "FullName": "WatchFaceStyle.Builder setBackgroundVisibility (int backgroundVisibility)"}, "setPeekOpacityMode(int)": {"Returns": [["@B_android#support#wearable#watchface#WatchFaceStyle#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: must be either @B_android#support#wearable#watchface#WatchFaceStyle#PEEK_OPACITY_MODE_OPAQUE_E@ or @B_android#support#wearable#watchface#WatchFaceStyle#PEEK_OPACITY_MODE_TRANSLUCENT_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether the first, peeking card should be opaque when the watch face is displayed.", "history": "", "FullName": "WatchFaceStyle.Builder setPeekOpacityMode (int peekOpacityMode)"}, "setCardPeekMode(int)": {"Returns": [["@B_android#support#wearable#watchface#WatchFaceStyle#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: must be either PEEK_MODE_VARIABLE or PEEK_MODE_SHORT"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets how far into the screen the first card will peek while the watch face is displayed.", "history": "", "FullName": "WatchFaceStyle.Builder setCardPeekMode (int peekMode)"}, "setShowSystemUiTime(boolean)": {"Returns": [["@B_android#support#wearable#watchface#WatchFaceStyle#Builder_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean: Set this to false if you already draw or clearly represent the time on your watch face."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets if the system will draw the system-style time over the watch face.", "history": "", "FullName": "WatchFaceStyle.Builder setShowSystemUiTime (boolean showSystemUiTime)"}, "setViewProtectionMode(int)": {"Returns": [["@B_android#support#wearable#watchface#WatchFaceStyle#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: must be any combination of @B_android#support#wearable#watchface#WatchFaceStyle#PROTECT_STATUS_BAR_E@, @B_android#support#wearable#watchface#WatchFaceStyle#PROTECT_HOTWORD_INDICATOR_E@ and @B_android#support#wearable#watchface#WatchFaceStyle#PROTECT_WHOLE_SCREEN_E@, e.g. PROTECT_STATUS_BAR | PROTECT_HOTWORD_INDICATOR"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds background color to UI elements of the home screen, so they are readable on the watch face. This should be used if the watch face color is close to being white.", "history": "", "FullName": "WatchFaceStyle.Builder setViewProtectionMode (int viewProtectionMode)"}, "setViewProtection(int)": {"Returns": [["@B_android#support#wearable#watchface#WatchFaceStyle#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: must be any combination of @B_android#support#wearable#watchface#WatchFaceStyle#PROTECT_STATUS_BAR_E@, @B_android#support#wearable#watchface#WatchFaceStyle#PROTECT_HOTWORD_INDICATOR_E@ and @B_android#support#wearable#watchface#WatchFaceStyle#PROTECT_WHOLE_SCREEN_E@, e.g. PROTECT_STATUS_BAR | PROTECT_HOTWORD_INDICATOR"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#support#wearable#watchface#WatchFaceStyle#Builder#setViewProtectionMode_E@ instead. Adds background color to UI elements of the home screen, so they are readable on the watch face. This should be used if the watch face color is close to being white.", "history": "", "FullName": "WatchFaceStyle.Builder setViewProtection (int viewProtection)"}, "build()": {"Returns": [["@B_android#support#wearable#watchface#WatchFaceStyle_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs read only WatchFaceStyle object.", "history": "", "FullName": "WatchFaceStyle build ()"}, "setHotwordIndicatorGravity(int)": {"Returns": [["@B_android#support#wearable#watchface#WatchFaceStyle#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: This must be any combination of horizontal Gravity constant (@B_android#view#Gravity#LEFT_E@, @B_android#view#Gravity#CENTER_HORIZONTAL_E@, @B_android#view#Gravity#RIGHT_E@) and vertical Gravity constants (@B_android#view#Gravity#TOP_E@, @B_android#view#Gravity#CENTER_VERTICAL_E@, @B_android#view#Gravity#BOTTOM_E@), e.g. Gravity.LEFT | Gravity.BOTTOM. On circular screens, only the vertical gravity is respected."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets position of hotword (OK Google) on the screen.", "history": "", "FullName": "WatchFaceStyle.Builder setHotwordIndicatorGravity (int hotwordIndicatorGravity)"}}, "Inheritance": ["http:##developer#android#com@B_java#lang#Object_E@"], "ClassName": "android.support.wearable.watchface.WatchFaceStyle.Builder", "ClassDesc": "Builder for WatchFaceStyle objects."}