{"Functions": {"onSendTextSms(java.lang.String,int,java.lang.String,android.service.carrier.CarrierMessagingService.ResultCallback<android.service.carrier.CarrierMessagingService.SendSmsResult>)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the text to send This value must never be null."], ["int", "int: SMS subscription ID of the SIM"], ["@B_java#lang#String_E@", "String: phone number of the recipient of the message This value must never be null."], ["@B_android#service#carrier#CarrierMessagingService#ResultCallback_E@", "ResultCallback: result callback. Call with a @B_android#service#carrier#CarrierMessagingService#SendSmsResult_E@. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override @B_android#service#carrier#CarrierMessagingService#onSendTextSms_E@ below instead. Override this method to intercept text SMSs sent from the device.", "history": "Added in API level 22 Deprecated in API level 23", "FullName": "public void onSendTextSms (String text, int subId, String destAddress, ResultCallback<CarrierMessagingService.SendSmsResult> callback)"}, "onSendTextSms(java.lang.String,int,java.lang.String,int,android.service.carrier.CarrierMessagingService.ResultCallback<android.service.carrier.CarrierMessagingService.SendSmsResult>)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the text to send This value must never be null."], ["int", "int: SMS subscription ID of the SIM"], ["@B_java#lang#String_E@", "String: phone number of the recipient of the message This value must never be null."], ["int", "int: Flag for sending SMS. Acceptable values are 0 and @B_android#service#carrier#CarrierMessagingService#SEND_FLAG_REQUEST_DELIVERY_STATUS_E@."], ["@B_android#service#carrier#CarrierMessagingService#ResultCallback_E@", "ResultCallback: result callback. Call with a @B_android#service#carrier#CarrierMessagingService#SendSmsResult_E@. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override this method to intercept text SMSs sent from the device.", "history": "Added in API level 23", "FullName": "public void onSendTextSms (String text, int subId, String destAddress, int sendSmsFlag, ResultCallback<CarrierMessagingService.SendSmsResult> callback)"}, "onReceiveTextSms(android.service.carrier.MessagePdu,java.lang.String,int,int,android.service.carrier.CarrierMessagingService.ResultCallback<java.lang.Integer>)": {"Returns": [], "Parameters": [["@B_android#service#carrier#MessagePdu_E@", "MessagePdu: the PDUs of the message This value must never be null."], ["@B_java#lang#String_E@", "String: the format of the PDUs, typically \"3gpp\" or \"3gpp2\" This value must never be null."], ["int", "int: the destination port of a binary SMS, this will be -1 for text SMS"], ["int", "int: SMS subscription ID of the SIM"], ["@B_android#service#carrier#CarrierMessagingService#ResultCallback_E@", "ResultCallback: result callback. Call with a bitmask integer to indicate how the incoming text SMS should be handled by the platform. Use @B_android#service#carrier#CarrierMessagingService#RECEIVE_OPTIONS_DROP_E@ and @B_android#service#carrier#CarrierMessagingService#RECEIVE_OPTIONS_SKIP_NOTIFY_WHEN_CREDENTIAL_PROTECTED_STORAGE_UNAVAILABLE_E@ to set the flags in the bitmask. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override this method to filter inbound SMS messages. This method will be called once for every incoming text SMS. You can invoke the callback with a bitmask to tell the platform how to handle the SMS. For a SMS received on a file-based encryption capable device while the credential-encrypted storage is not available, this method will be called for the second time when the credential-encrypted storage becomes available after the user unlocks the phone, if the bit @B_android#service#carrier#CarrierMessagingService#RECEIVE_OPTIONS_DROP_E@ is not set when invoking the callback.", "history": "Added in API level 24", "FullName": "public void onReceiveTextSms (MessagePdu pdu, String format, int destPort, int subId, ResultCallback<Integer> callback)"}, "onDownloadMms(android.net.Uri,int,android.net.Uri,android.service.carrier.CarrierMessagingService.ResultCallback<java.lang.Integer>)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri: the content provider URI of the PDU to be downloaded. This value must never be null."], ["int", "int: SMS subscription ID of the SIM"], ["@B_android#net#Uri_E@", "Uri: the URI of the message to be downloaded. This value must never be null."], ["@B_android#service#carrier#CarrierMessagingService#ResultCallback_E@", "ResultCallback: result callback. Call with a status code which is one of @B_android#service#carrier#CarrierMessagingService#DOWNLOAD_STATUS_OK_E@, @B_android#service#carrier#CarrierMessagingService#DOWNLOAD_STATUS_RETRY_ON_CARRIER_NETWORK_E@, or @B_android#service#carrier#CarrierMessagingService#DOWNLOAD_STATUS_ERROR_E@. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override this method to download MMSs received.", "history": "Added in API level 22", "FullName": "public void onDownloadMms (Uri contentUri, int subId, Uri location, ResultCallback<Integer> callback)"}, "onSendMultipartTextSms(java.util.List<java.lang.String>,int,java.lang.String,android.service.carrier.CarrierMessagingService.ResultCallback<android.service.carrier.CarrierMessagingService.SendMultipartSmsResult>)": {"Returns": [], "Parameters": [["@B_java#util#List_E@", "List: a @B_java#util#List_E@ of the message parts This value must never be null."], ["int", "int: SMS subscription ID of the SIM"], ["@B_java#lang#String_E@", "String: phone number of the recipient of the message This value must never be null."], ["@B_android#service#carrier#CarrierMessagingService#ResultCallback_E@", "ResultCallback: result callback. Call with a @B_android#service#carrier#CarrierMessagingService#SendMultipartSmsResult_E@. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override @B_android#service#carrier#CarrierMessagingService#onSendMultipartTextSms_E@ below instead. Override this method to intercept long SMSs sent from the device.", "history": "Added in API level 22 Deprecated in API level 23", "FullName": "public void onSendMultipartTextSms (List<String> parts, int subId, String destAddress, ResultCallback<CarrierMessagingService.SendMultipartSmsResult> callback)"}, "onFilterSms(android.service.carrier.MessagePdu,java.lang.String,int,int,android.service.carrier.CarrierMessagingService.ResultCallback<java.lang.Boolean>)": {"Returns": [], "Parameters": [["@B_android#service#carrier#MessagePdu_E@", "MessagePdu: the PDUs of the message This value must never be null."], ["@B_java#lang#String_E@", "String: the format of the PDUs, typically \"3gpp\" or \"3gpp2\" This value must never be null."], ["int", "int: the destination port of a binary SMS, this will be -1 for text SMS"], ["int", "int: SMS subscription ID of the SIM"], ["@B_android#service#carrier#CarrierMessagingService#ResultCallback_E@", "ResultCallback: result callback. Call with true to keep an inbound SMS message and deliver to SMS apps, and false to drop the message. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#service#carrier#CarrierMessagingService#onReceiveTextSms_E@ instead. Override this method to filter inbound SMS messages.", "history": "Added in API level 22 Deprecated in API level 24", "FullName": "public void onFilterSms (MessagePdu pdu, String format, int destPort, int subId, ResultCallback<Boolean> callback)"}, "onBind(android.content.Intent)": {"Returns": [["@B_android#os#IBinder_E@", "This value may be null."]], "Parameters": [["@B_android#content#Intent_E@", "Intent: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the communication channel to the service. May return null if clients can not bind to the service. The returned @B_android#os#IBinder_E@ is usually for a complex interface that has been Note that unlike other application components, calls on to the IBinder interface returned here may not happen on the main thread of the process. More information about the main thread can be found in", "history": "Added in API level 22", "FullName": "public IBinder onBind (Intent intent)"}, "onSendDataSms(byte[],int,java.lang.String,int,android.service.carrier.CarrierMessagingService.ResultCallback<android.service.carrier.CarrierMessagingService.SendSmsResult>)": {"Returns": [], "Parameters": [["byte[]", "byte: the binary content This value must never be null."], ["int", "int: SMS subscription ID of the SIM"], ["@B_java#lang#String_E@", "String: phone number of the recipient of the message This value must never be null."], ["int", "int: the destination port"], ["@B_android#service#carrier#CarrierMessagingService#ResultCallback_E@", "ResultCallback: result callback. Call with a @B_android#service#carrier#CarrierMessagingService#SendSmsResult_E@. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override @B_android#service#carrier#CarrierMessagingService#onSendDataSms_E@ below instead. Override this method to intercept binary SMSs sent from the device.", "history": "Added in API level 22 Deprecated in API level 23", "FullName": "public void onSendDataSms (byte[] data, int subId, String destAddress, int destPort, ResultCallback<CarrierMessagingService.SendSmsResult> callback)"}, "onSendMultipartTextSms(java.util.List<java.lang.String>,int,java.lang.String,int,android.service.carrier.CarrierMessagingService.ResultCallback<android.service.carrier.CarrierMessagingService.SendMultipartSmsResult>)": {"Returns": [], "Parameters": [["@B_java#util#List_E@", "List: a @B_java#util#List_E@ of the message parts This value must never be null."], ["int", "int: SMS subscription ID of the SIM"], ["@B_java#lang#String_E@", "String: phone number of the recipient of the message This value must never be null."], ["int", "int: Flag for sending SMS. Acceptable values are 0 and @B_android#service#carrier#CarrierMessagingService#SEND_FLAG_REQUEST_DELIVERY_STATUS_E@."], ["@B_android#service#carrier#CarrierMessagingService#ResultCallback_E@", "ResultCallback: result callback. Call with a @B_android#service#carrier#CarrierMessagingService#SendMultipartSmsResult_E@. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override this method to intercept long SMSs sent from the device.", "history": "Added in API level 23", "FullName": "public void onSendMultipartTextSms (List<String> parts, int subId, String destAddress, int sendSmsFlag, ResultCallback<CarrierMessagingService.SendMultipartSmsResult> callback)"}, "CarrierMessagingService()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 22", "FullName": "public CarrierMessagingService ()"}, "onSendMms(android.net.Uri,int,android.net.Uri,android.service.carrier.CarrierMessagingService.ResultCallback<android.service.carrier.CarrierMessagingService.SendMmsResult>)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri: the content provider URI of the PDU to send This value must never be null."], ["int", "int: SMS subscription ID of the SIM"], ["@B_android#net#Uri_E@", "Uri: the optional URI to send this MMS PDU. If this is {code null}, the PDU should be sent to the default MMSC URL. This value may be null."], ["@B_android#service#carrier#CarrierMessagingService#ResultCallback_E@", "ResultCallback: result callback. Call with a @B_android#service#carrier#CarrierMessagingService#SendMmsResult_E@. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override this method to intercept MMSs sent from the device.", "history": "Added in API level 22", "FullName": "public void onSendMms (Uri pduUri, int subId, Uri location, ResultCallback<CarrierMessagingService.SendMmsResult> callback)"}, "onSendDataSms(byte[],int,java.lang.String,int,int,android.service.carrier.CarrierMessagingService.ResultCallback<android.service.carrier.CarrierMessagingService.SendSmsResult>)": {"Returns": [], "Parameters": [["byte[]", "byte: the binary content This value must never be null."], ["int", "int: SMS subscription ID of the SIM"], ["@B_java#lang#String_E@", "String: phone number of the recipient of the message This value must never be null."], ["int", "int: the destination port"], ["int", "int: Flag for sending SMS. Acceptable values are 0 and @B_android#service#carrier#CarrierMessagingService#SEND_FLAG_REQUEST_DELIVERY_STATUS_E@."], ["@B_android#service#carrier#CarrierMessagingService#ResultCallback_E@", "ResultCallback: result callback. Call with a @B_android#service#carrier#CarrierMessagingService#SendSmsResult_E@. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override this method to intercept binary SMSs sent from the device.", "history": "Added in API level 23", "FullName": "public void onSendDataSms (byte[] data, int subId, String destAddress, int destPort, int sendSmsFlag, ResultCallback<CarrierMessagingService.SendSmsResult> callback)"}}, "Inheritance": ["@B_android#content#Context_E@", "@B_android#content#ContextWrapper_E@", "@B_android#app#Service_E@"], "ClassName": "android.service.carrier.CarrierMessagingService", "ClassDesc": "A service that receives calls from the system when new SMS and MMS are sent or received. To extend this class, you must declare the service in your manifest file with the @B_android#Manifest#permission#BIND_CARRIER_SERVICES_E@ permission and include an intent filter with the @B_android#service#carrier#CarrierMessagingService#SERVICE_INTERFACE_E@ action. For example:"}