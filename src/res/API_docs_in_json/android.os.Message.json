{"Functions": {"setAsynchronous(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: True if the message is asynchronous."]], "Throws": [], "SeeAlso": ["@B_android#os#Message#isAsynchronous_E@"], "Permissions": [], "Description": "Sets whether the message is asynchronous, meaning that it is not subject to @B_android#os#Looper_E@ synchronization barriers. Certain operations, such as view invalidation, may introduce synchronization barriers into the @B_android#os#Looper_E@'s message queue to prevent subsequent messages from being delivered until some condition is met. In the case of view invalidation, messages which are posted after a call to @B_android#view#View#invalidate_E@ are suspended by means of a synchronization barrier until the next frame is ready to be drawn. The synchronization barrier ensures that the invalidation request is completely handled before resuming. Asynchronous messages are exempt from synchronization barriers. They typically represent interrupts, input events, and other signals that must be handled independently even while other work has been suspended. Note that asynchronous messages may be delivered out of order with respect to synchronous messages although they are always delivered in order among themselves. If the relative order of these messages matters then they probably should not be asynchronous in the first place. Use with caution.", "history": "Added in API level 22", "FullName": "public void setAsynchronous (boolean async)"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 1", "FullName": "public int describeContents ()"}, "obtain(android.os.Handler, int, int, int)": {"Returns": [["@B_android#os#Message_E@", "A Message object from the global pool."]], "Parameters": [["@B_android#os#Handler_E@", "Handler: The target value to set."], ["int", "int: The what value to set."], ["int", "int: The arg1 value to set."], ["int", "int: The arg2 value to set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as @B_android#os#Message#obtain_E@, but sets the values of the target, what, arg1, and arg2 members.", "history": "added in API level 1", "FullName": "public static Message obtain (Handler h, int what, int arg1, int arg2)"}, "getWhen()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the targeted delivery time of this message, in milliseconds.", "history": "Added in API level 1", "FullName": "public long getWhen ()"}, "obtain(android.os.Handler, java.lang.Runnable)": {"Returns": [["@B_android#os#Message_E@", "A Message object from the global pool."]], "Parameters": [["@B_android#os#Handler_E@", "Handler: Handler to assign to the returned Message object's target member."], ["@B_java#lang#Runnable_E@", "Runnable: Runnable that will execute when the message is handled."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as @B_android#os#Message#obtain_E@, but assigns a callback Runnable on the Message that is returned.", "history": "added in API level 1", "FullName": "public static Message obtain (Handler h, Runnable callback)"}, "getCallback()": {"Returns": [["@B_java#lang#Runnable_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve callback object that will execute when this message is handled. This object must implement Runnable. This is called by the target @B_android#os#Handler_E@ that is receiving this Message to dispatch it. If not set, the message will be dispatched to the receiving Handler's @B_android#os#Handler#handleMessage_E@.", "history": "Added in API level 1", "FullName": "public Runnable getCallback ()"}, "copyFrom(android.os.Message)": {"Returns": [], "Parameters": [["@B_android#os#Message_E@", "Message no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Make this message like o. Performs a shallow copy of the data field. Does not copy the linked list fields, nor the timestamp or target/callback of the original message.", "history": "Added in API level 1", "FullName": "public void copyFrom (Message o)"}, "getTarget()": {"Returns": [["@B_android#os#Handler_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the @B_android#os#Handler_E@ implementation that will receive this message. The object must implement @B_android#os#Handler#handleMessage_E@. Each Handler has its own name-space for message codes, so you do not need to worry about yours conflicting with other handlers.", "history": "Added in API level 1", "FullName": "public Handler getTarget ()"}, "obtain(android.os.Handler, int)": {"Returns": [["@B_android#os#Message_E@", "A Message object from the global pool."]], "Parameters": [["@B_android#os#Handler_E@", "Handler: Value to assign to the target member."], ["int", "int: Value to assign to the what member."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as @B_android#os#Message#obtain_E@, but sets the values for both target and what members on the Message.", "history": "added in API level 1", "FullName": "public static Message obtain (Handler h, int what)"}, "peekData()": {"Returns": [["@B_android#os#Bundle_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#os#Message#getData_E@", "@B_android#os#Message#setData_E@"], "Permissions": [], "Description": "Like getData(), but does not lazily create the Bundle. A null is returned if the Bundle does not already exist. See @B_android#os#Message#getData_E@ for further information on this.", "history": "Added in API level 1", "FullName": "public Bundle peekData ()"}, "setData(android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#os#Bundle_E@", "Bundle no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#os#Message#getData_E@", "@B_android#os#Message#peekData_E@"], "Permissions": [], "Description": "Sets a Bundle of arbitrary data values. Use arg1 and arg2 members as a lower cost way to send a few simple integer values, if you can.", "history": "Added in API level 1", "FullName": "public void setData (Bundle data)"}, "obtain(android.os.Handler, int, java.lang.Object)": {"Returns": [["@B_android#os#Message_E@", "A Message object from the global pool."]], "Parameters": [["@B_android#os#Handler_E@", "Handler: The target value to set."], ["int", "int: The what value to set."], ["@B_java#lang#Object_E@", "Object: The object method to set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as @B_android#os#Message#obtain_E@, but sets the values of the target, what, and obj members.", "history": "added in API level 1", "FullName": "public static Message obtain (Handler h, int what, Object obj)"}, "obtain(android.os.Handler,int,java.lang.Object)": {"Returns": [["@B_android#os#Message_E@", "A Message object from the global pool."]], "Parameters": [["@B_android#os#Handler_E@", "Handler: The target value to set."], ["int", "int: The what value to set."], ["@B_java#lang#Object_E@", "Object: The object method to set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as @B_android#os#Message#obtain_E@, but sets the values of the target, what, and obj members.", "history": "Added in API level 1", "FullName": "public static Message obtain (Handler h, int what, Object obj)"}, "Message()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor (but the preferred way to get a Message is to call @B_android#os#Message#obtain_E@).", "history": "Added in API level 1", "FullName": "public Message ()"}, "setTarget(android.os.Handler)": {"Returns": [], "Parameters": [["@B_android#os#Handler_E@", "Handler no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public void setTarget (Handler target)"}, "obtain(android.os.Message)": {"Returns": [["@B_android#os#Message_E@", "A Message object from the global pool."]], "Parameters": [["@B_android#os#Message_E@", "Message: Original message to copy."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as @B_android#os#Message#obtain_E@, but copies the values of an existing message (including its target) into the new one.", "history": "Added in API level 1", "FullName": "public static Message obtain (Message orig)"}, "recycle()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a Message instance to the global pool. You MUST NOT touch the Message after calling this function because it has effectively been freed. It is an error to recycle a message that is currently enqueued or that is in the process of being delivered to a Handler.", "history": "Added in API level 1", "FullName": "public void recycle ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 1", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "obtain(android.os.Handler,int,int,int)": {"Returns": [["@B_android#os#Message_E@", "A Message object from the global pool."]], "Parameters": [["@B_android#os#Handler_E@", "Handler: The target value to set."], ["int", "int: The what value to set."], ["int", "int: The arg1 value to set."], ["int", "int: The arg2 value to set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as @B_android#os#Message#obtain_E@, but sets the values of the target, what, arg1, and arg2 members.", "history": "Added in API level 1", "FullName": "public static Message obtain (Handler h, int what, int arg1, int arg2)"}, "obtain(android.os.Handler,int,int,int,java.lang.Object)": {"Returns": [["@B_android#os#Message_E@", "A Message object from the global pool."]], "Parameters": [["@B_android#os#Handler_E@", "Handler: The target value to set."], ["int", "int: The what value to set."], ["int", "int: The arg1 value to set."], ["int", "int: The arg2 value to set."], ["@B_java#lang#Object_E@", "Object: The obj value to set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as @B_android#os#Message#obtain_E@, but sets the values of the target, what, arg1, arg2, and obj members.", "history": "Added in API level 1", "FullName": "public static Message obtain (Handler h, int what, int arg1, int arg2, Object obj)"}, "sendToTarget()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sends this Message to the Handler specified by @B_android#os#Message#getTarget_E@. Throws a null pointer exception if this field has not been set.", "history": "Added in API level 1", "FullName": "public void sendToTarget ()"}, "obtain(android.os.Handler)": {"Returns": [["@B_android#os#Message_E@", "A Message object from the global pool."]], "Parameters": [["@B_android#os#Handler_E@", "Handler: Handler to assign to the returned Message object's target member."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as @B_android#os#Message#obtain_E@, but sets the value for the target member on the Message returned.", "history": "Added in API level 1", "FullName": "public static Message obtain (Handler h)"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 1", "FullName": "public String toString ()"}, "getData()": {"Returns": [["@B_android#os#Bundle_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#os#Message#peekData_E@", "@B_android#os#Message#setData_E@"], "Permissions": [], "Description": "Obtains a Bundle of arbitrary data associated with this event, lazily creating it if necessary. Set this value by calling @B_android#os#Message#setData_E@. Note that when transferring data across processes via @B_android#os#Messenger_E@, you will need to set your ClassLoader on the Bundle via @B_android#os#Bundle#setClassLoader_E@ so that it can instantiate your objects when you retrieve them.", "history": "Added in API level 1", "FullName": "public Bundle getData ()"}, "obtain(android.os.Handler,java.lang.Runnable)": {"Returns": [["@B_android#os#Message_E@", "A Message object from the global pool."]], "Parameters": [["@B_android#os#Handler_E@", "Handler: Handler to assign to the returned Message object's target member."], ["@B_java#lang#Runnable_E@", "Runnable: Runnable that will execute when the message is handled."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as @B_android#os#Message#obtain_E@, but assigns a callback Runnable on the Message that is returned.", "history": "Added in API level 1", "FullName": "public static Message obtain (Handler h, Runnable callback)"}, "isAsynchronous()": {"Returns": [["boolean", "True if the message is asynchronous."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#os#Message#setAsynchronous_E@"], "Permissions": [], "Description": "Returns true if the message is asynchronous, meaning that it is not subject to @B_android#os#Looper_E@ synchronization barriers.", "history": "Added in API level 22", "FullName": "public boolean isAsynchronous ()"}, "obtain()": {"Returns": [["@B_android#os#Message_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a new Message instance from the global pool. Allows us to avoid allocating new objects in many cases.", "history": "Added in API level 1", "FullName": "public static Message obtain ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 1", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "obtain(android.os.Handler,int)": {"Returns": [["@B_android#os#Message_E@", "A Message object from the global pool."]], "Parameters": [["@B_android#os#Handler_E@", "Handler: Value to assign to the target member."], ["int", "int: Value to assign to the what member."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as @B_android#os#Message#obtain_E@, but sets the values for both target and what members on the Message.", "history": "Added in API level 1", "FullName": "public static Message obtain (Handler h, int what)"}}, "Inheritance": [], "ClassName": "android.os.Message", "ClassDesc": "Defines a message containing a description and arbitrary data object that can be sent to a @B_android#os#Handler_E@. This object contains two extra int fields and an extra object field that allow you to not do allocations in many cases. While the constructor of Message is public, the best way to get one of these is to call @B_android#os#Message#obtain_E@ or one of the @B_android#os#Handler#obtainMessage_E@ methods, which will pull them from a pool of recycled objects."}