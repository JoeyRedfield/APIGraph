{"Functions": {"update(java.util.Observable,java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#util#Observable_E@", "Observable: the observable object."], ["@B_java#lang#Object_E@", "Object: an argument passed to the notifyObservers method."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method is called whenever the observed object is changed. An application calls an notifyObservers method to have all the object's observers notified of the change.", "history": "Added in API level 1", "FullName": "public abstract void update (Observable o, Object arg)"}, "update(java.util.Observable, java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#util#Observable_E@", "Observable: the observable object."], ["@B_java#lang#Object_E@", "Object: an argument passed to the notifyObservers method."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method is called whenever the observed object is changed. An application calls an notifyObservers method to have all the object's observers notified of the change.", "history": "added in API level 1", "FullName": "public abstract void update (Observable o, Object arg)"}}, "Inheritance": [], "ClassName": "java.util.Observer", "ClassDesc": "A class can implement the Observer interface when it wants to be informed of changes in observable objects."}