{"Functions": {"removeViewImmediate(android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: The view to be removed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Special variation of @B_android#view#ViewManager#removeView_E@ that immediately invokes the given view hierarchy's @B_android#view#View#onDetachedFromWindow_E@ methods before returning. This is not for normal applications; using it correctly requires great care.", "history": "Added in API level 1", "FullName": "public abstract void removeViewImmediate (View view)"}, "getDefaultDisplay()": {"Returns": [["@B_android#view#Display_E@", "The display that this window manager is managing."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#view#Display_E@ upon which this @B_android#view#WindowManager_E@ instance will create new windows. Despite the name of this method, the display that is returned is not necessarily the primary display of the system (see @B_android#view#Display#DEFAULT_DISPLAY_E@). The returned display could instead be a secondary display that this window manager instance is managing. Think of it as the display that this @B_android#view#WindowManager_E@ instance uses by default. To create windows on a different display, you need to obtain a @B_android#view#WindowManager_E@ for that @B_android#view#Display_E@. (See the @B_android#view#WindowManager_E@ class documentation for more information.)", "history": "Added in API level 1", "FullName": "public abstract Display getDefaultDisplay ()"}}, "Inheritance": [], "ClassName": "android.view.WindowManager", "ClassDesc": "The interface that apps use to talk to the window manager. Each window manager instance is bound to a particular @B_android#view#Display_E@. To obtain a @B_android#view#WindowManager_E@ for a different display, use @B_android#content#Context#createDisplayContext_E@ to obtain a @B_android#content#Context_E@ for that display, then use Context.getSystemService(Context.WINDOW_SERVICE) to get the WindowManager. The simplest way to show a window on another display is to create a @B_android#app#Presentation_E@. The presentation will automatically obtain a @B_android#view#WindowManager_E@ and @B_android#content#Context_E@ for that display."}