{"Functions": {"getSchemeName()": {"Returns": [["", "digest"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns textual designation of the digest authentication scheme.", "history": "Added in API level 1", "FullName": "public String getSchemeName ()"}, "createCnonce()": {"Returns": [["", "The cnonce value as String."]], "Parameters": [], "Throws": [["@B_org#apache#http#impl#auth#UnsupportedDigestAlgorithmException_E@", "if MD5 algorithm is not supported."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a random cnonce value based on the current time.", "history": "Added in API level 1", "FullName": "public static String createCnonce ()"}, "isComplete()": {"Returns": [["", "true if Digest authorization has been processed, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tests if the Digest authentication process has been completed.", "history": "Added in API level 1", "FullName": "public boolean isComplete ()"}, "processChallenge(org.apache.http.Header)": {"Returns": [], "Parameters": [["@B_org#apache#http#Header_E@", "the challenge header"]], "Throws": [["@B_org#apache#http#auth#MalformedChallengeException_E@", "is thrown if the authentication challenge is malformed"]], "SeeAlso": [], "Permissions": [], "Description": "Processes the Digest challenge.", "history": "Added in API level 1", "FullName": "public void processChallenge (Header header)"}, "overrideParamter(java.lang.String, java.lang.String)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public void overrideParamter (String name, String value)"}, "isConnectionBased()": {"Returns": [["", "false."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns", "history": "Added in API level 1", "FullName": "public boolean isConnectionBased ()"}, "DigestScheme()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Default constructor for the digest authetication scheme.", "history": "Added in API level 1", "FullName": "public DigestScheme ()"}, "authenticate(org.apache.http.auth.Credentials, org.apache.http.HttpRequest)": {"Returns": [["", "a digest authorization string"]], "Parameters": [["@B_org#apache#http#auth#Credentials_E@", "A set of credentials to be used for athentication"], ["@B_org#apache#http#HttpRequest_E@", "The request being authenticated"]], "Throws": [["@B_org#apache#http#auth#InvalidCredentialsException_E@", "if authentication credentials are not valid or not applicable for this authentication scheme"], ["@B_org#apache#http#auth#AuthenticationException_E@", "if authorization string cannot be generated due to an authentication failure"]], "SeeAlso": [], "Permissions": [], "Description": "Produces a digest authorization string for the given set of @B_org#apache#http#auth#Credentials_E@, method name and URI.", "history": "Added in API level 1", "FullName": "public Header authenticate (Credentials credentials, HttpRequest request)"}}, "Inheritance": ["@B_org#apache#http#impl#auth#AuthSchemeBase_E@", "@B_org#apache#http#impl#auth#RFC2617Scheme_E@"], "ClassName": "org.apache.http.impl.auth.DigestScheme", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Digest authentication scheme as defined in RFC 2617. Both MD5 (default) and MD5-sess are supported. Currently only qop=auth or no qop is supported. qop=auth-int is unsupported. If auth and auth-int are provided, auth is used. Credential charset is configured via the @B_org#apache#http#auth#params#AuthPNames#CREDENTIAL_CHARSET_E@ parameter. Since the digest username is included as clear text in the generated Authentication header, the charset of the username must be compatible with the @B_org#apache#http#params#CoreProtocolPNames#HTTP_ELEMENT_CHARSET_E@."}