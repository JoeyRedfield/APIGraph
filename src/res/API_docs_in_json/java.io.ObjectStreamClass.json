{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a string describing this ObjectStreamClass.", "history": "Added in API level 1", "FullName": "public String toString ()"}, "getName()": {"Returns": [["@B_java#lang#String_E@", "a string representing the name of the class"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the name of the class described by this descriptor. This method returns the name of the class in the format that is used by the @B_java#lang#Class#getName_E@ method.", "history": "Added in API level 1", "FullName": "public String getName ()"}, "getSerialVersionUID()": {"Returns": [["long", "the SUID of the class described by this descriptor"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the serialVersionUID for this class. The serialVersionUID defines a set of classes all with the same name that have evolved from a common root class and agree to be serialized and deserialized using a common format. NonSerializable classes have a serialVersionUID of 0L.", "history": "Added in API level 1", "FullName": "public long getSerialVersionUID ()"}, "lookup(java.lang.Class<?>)": {"Returns": [["@B_java#io#ObjectStreamClass_E@", "the class descriptor for the specified class"]], "Parameters": [["@B_java#lang#Class_E@", "Class: class for which to get the descriptor"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Find the descriptor for a class that can be serialized. Creates an ObjectStreamClass instance if one does not exist yet for class. Null is returned if the specified class does not implement java.io.Serializable or java.io.Externalizable.", "history": "Added in API level 1", "FullName": "public static ObjectStreamClass lookup (Class<?> cl)"}, "getFields()": {"Returns": [["@B_java#io#ObjectStreamField_E@", "an array containing an element for each persistent field of this class. Returns an array of length zero if there are no fields."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return an array of the fields of this serializable class.", "history": "Added in API level 1", "FullName": "public ObjectStreamField[] getFields ()"}, "getField(java.lang.String)": {"Returns": [["@B_java#io#ObjectStreamField_E@", "The ObjectStreamField object of the named field or null if there is no such named field."]], "Parameters": [["@B_java#lang#String_E@", "String: the name of the data field to look for"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the field of this class by name.", "history": "Added in API level 1", "FullName": "public ObjectStreamField getField (String name)"}, "lookupAny(java.lang.Class<?>)": {"Returns": [["@B_java#io#ObjectStreamClass_E@", "the class descriptor for the specified class"]], "Parameters": [["@B_java#lang#Class_E@", "Class: class for which to get the descriptor"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the descriptor for any class, regardless of whether it implements @B_java#io#Serializable_E@.", "history": "Added in API level 9", "FullName": "public static ObjectStreamClass lookupAny (Class<?> cl)"}, "forClass()": {"Returns": [["@B_java#lang#Class_E@", "the Class instance that this descriptor represents"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the class in the local VM that this version is mapped to. Null is returned if there is no corresponding local class.", "history": "Added in API level 1", "FullName": "public Class<?> forClass ()"}}, "Inheritance": [], "ClassName": "java.io.ObjectStreamClass", "ClassDesc": "Serialization's descriptor for classes. It contains the name and serialVersionUID of the class. The ObjectStreamClass for a specific class loaded in this Java VM can be found/created using the lookup method. The algorithm to compute the SerialVersionUID is described in"}