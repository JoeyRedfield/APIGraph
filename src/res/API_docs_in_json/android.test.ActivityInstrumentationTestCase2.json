{"Functions": {"ActivityInstrumentationTestCase2(java.lang.Class<T>)": {"Returns": [], "Parameters": [["@B_java#lang#Class_E@", "Class: The activity to test. This must be a class in the instrumentation targetPackage specified in the AndroidManifest.xml"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an @B_android#test#ActivityInstrumentationTestCase2_E@.", "history": "Added in API level 8", "FullName": "public ActivityInstrumentationTestCase2 (Class<T> activityClass)"}, "ActivityInstrumentationTestCase2(java.lang.String,java.lang.Class<T>)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: ignored - no longer in use."], ["@B_java#lang#Class_E@", "Class: The activity to test. This must be a class in the instrumentation targetPackage specified in the AndroidManifest.xml"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "use @B_android#test#ActivityInstrumentationTestCase2#ActivityInstrumentationTestCase2_E@ instead Creates an @B_android#test#ActivityInstrumentationTestCase2_E@.", "history": "Added in API level 3", "FullName": "public ActivityInstrumentationTestCase2 (String pkg, Class<T> activityClass)"}, "setActivityIntent(android.content.Intent)": {"Returns": [], "Parameters": [["@B_android#content#Intent_E@", "Intent: The Intent to start the Activity with, or null to reset to the default Intent."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Call this method before the first call to @B_android#test#ActivityInstrumentationTestCase2#getActivity_E@ to inject a customized Intent into the Activity under test. If you do not call this, the default intent will be provided. If you call this after your Activity has been started, it will have no effect. @B_android#test#UiThreadTest_E@, then you must call @B_android#test#ActivityInstrumentationTestCase2#setActivityIntent_E@ from @B_android#test#ActivityInstrumentationTestCase2#setUp_E@. The default Intent (if this method is not called) is: action = @B_android#content#Intent#ACTION_MAIN_E@ flags = @B_android#content#Intent#FLAG_ACTIVITY_NEW_TASK_E@ All other fields are null or empty.", "history": "Added in API level 3 Deprecated in API level 24", "FullName": "public void setActivityIntent (Intent i)"}, "tearDown()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#lang#Exception_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Make sure all resources are cleaned up and garbage collected before moving on to the next test. Subclasses that override this method should make sure they call super.tearDown() at the end of the overriding method.", "history": "Added in API level 3 Deprecated in API level 24", "FullName": "protected void tearDown ()"}, "setActivityInitialTouchMode(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true if the Activity should be placed into \"touch mode\" when started"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Call this method before the first call to @B_android#test#ActivityInstrumentationTestCase2#getActivity_E@ to set the initial touch mode for the Activity under test. If you do not call this, the touch mode will be false. If you call this after your Activity has been started, it will have no effect. @B_android#test#UiThreadTest_E@, then you must call @B_android#test#ActivityInstrumentationTestCase2#setActivityInitialTouchMode_E@ from @B_android#test#ActivityInstrumentationTestCase2#setUp_E@.", "history": "Added in API level 3 Deprecated in API level 24", "FullName": "public void setActivityInitialTouchMode (boolean initialTouchMode)"}, "setUp()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#lang#Exception_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Sets up the fixture, for example, open a network connection. This method is called before a test is executed.", "history": "Added in API level 3 Deprecated in API level 24", "FullName": "protected void setUp ()"}, "runTest()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#lang#Throwable_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Runs the current unit test. If the unit test is annotated with @B_android#test#UiThreadTest_E@, force the Activity to be created before switching to the UI thread.", "history": "Added in API level 3 Deprecated in API level 24", "FullName": "protected void runTest ()"}, "getActivity()": {"Returns": [["T", "the Activity under test"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the Activity under test, starting it if necessary. For each test method invocation, the Activity will not actually be created until the first time this method is called. If you wish to provide custom setup values to your Activity, you may call @B_android#test#ActivityInstrumentationTestCase2#setActivityIntent_E@ and/or @B_android#test#ActivityInstrumentationTestCase2#setActivityInitialTouchMode_E@ before your first call to getActivity(). Calling them after your Activity has started will have no effect. @B_android#test#UiThreadTest_E@, then your Activity will be started automatically just before your test method is run. You still call this method in order to get the Activity under test.", "history": "Added in API level 3 Deprecated in API level 24", "FullName": "public T getActivity ()"}}, "Inheritance": ["@B_junit#framework#Assert_E@", "@B_junit#framework#TestCase_E@", "@B_android#test#InstrumentationTestCase_E@", "@B_android#test#ActivityTestCase_E@"], "ClassName": "@B_android#app#Activity_E@", "ClassDesc": "Use This class provides functional testing of a single activity. The activity under test will be created using the system infrastructure (by calling InstrumentationTestCase.launchActivity()) and you will then be able to manipulate your Activity directly. Other options supported by this test case include: You can run any test method on the UI thread (see @B_android#test#UiThreadTest_E@). You can inject custom Intents into your Activity (see @B_android#test#ActivityInstrumentationTestCase2#setActivityIntent_E@). This class replaces @B_android#test#ActivityInstrumentationTestCase_E@, which is deprecated. New tests should be written using this base class. If you prefer an isolated unit test, see @B_android#test#ActivityUnitTestCase_E@."}