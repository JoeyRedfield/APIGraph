{"Functions": {"isConnected()": {"Returns": [["", "true if the client is connected to the service."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks if the client is currently connected to the service, so that requests to other methods will succeed. Applications should guard client actions caused by the user with a call to this method.", "history": "", "FullName": "public boolean isConnected ()"}, "loadPanoramaInfo(com.google.android.gms.panorama.PanoramaClient.OnPanoramaInfoLoadedListener, android.net.Uri)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#panorama#PanoramaClient#OnPanoramaInfoLoadedListener_E@", "the listener that is called, on the main thread, when the load completes"], ["Uri", "the URI of the panorama to load info about. May be a file:, content:, or android_resource: scheme."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Loads information about a panorama.", "history": "", "FullName": "public void loadPanoramaInfo (PanoramaClient.OnPanoramaInfoLoadedListener listener, Uri uri)"}, "isConnecting()": {"Returns": [["", "true if the client is attempting to connect to the service."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks if the client is attempting to connect to the service.", "history": "", "FullName": "public boolean isConnecting ()"}, "PanoramaClient(android.content.Context, com.google.android.gms.common.GooglePlayServicesClient.ConnectionCallbacks, com.google.android.gms.common.GooglePlayServicesClient.OnConnectionFailedListener)": {"Returns": [], "Parameters": [["Context", "The context to use for the connection."], ["@B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks_E@", "The callbacks invoked when the client is connected."], ["@B_com#google#android#gms#common#GooglePlayServicesClient#OnConnectionFailedListener_E@", "The listener which will be notified if the connection attempt fails."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a panorama client.", "history": "", "FullName": "public PanoramaClient (Context context, GooglePlayServicesClient.ConnectionCallbacks connectionCallbacks, GooglePlayServicesClient.OnConnectionFailedListener connectionFailedListener)"}, "loadPanoramaInfoAndGrantAccess(com.google.android.gms.panorama.PanoramaClient.OnPanoramaInfoLoadedListener, android.net.Uri)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#panorama#PanoramaClient#OnPanoramaInfoLoadedListener_E@", "the listener that is called, on the main thread, when the load completes"], ["Uri", "the URI of the panorama to load info about. May only be a content: scheme."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Loads information about a panorama from a content provider. This method will also explicitly grant and revoke access to the URI while the load is happening so images in content providers may be inspected without giving permission to an entire content provider. The returned viewer intent will also have the @B_android#content#Intent#FLAG_GRANT_READ_URI_PERMISSION_E@ set so the viewer has access.", "history": "", "FullName": "public void loadPanoramaInfoAndGrantAccess (PanoramaClient.OnPanoramaInfoLoadedListener listener, Uri uri)"}, "disconnect()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Closes the connection to Google Play services. No calls can be made on this object after calling this method.", "history": "", "FullName": "public void disconnect ()"}, "unregisterConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient.ConnectionCallbacks)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks_E@", "the listener to unregister."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes a connection listener from this GooglePlayServicesClient. Note that removing a listener does not generate any callbacks. If the specified listener is not currently registered to receive connection events, this method will have no effect.", "history": "", "FullName": "public void unregisterConnectionCallbacks (GooglePlayServicesClient.ConnectionCallbacks listener)"}, "isConnectionCallbacksRegistered(com.google.android.gms.common.GooglePlayServicesClient.ConnectionCallbacks)": {"Returns": [["", "true if the specified listener is currently registered to receive connection events."]], "Parameters": [["@B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks_E@", "The listener to check for."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the specified listener is currently registered to receive connection events.", "history": "", "FullName": "public boolean isConnectionCallbacksRegistered (GooglePlayServicesClient.ConnectionCallbacks listener)"}, "registerConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient.OnConnectionFailedListener)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#GooglePlayServicesClient#OnConnectionFailedListener_E@", "the listener where the results of the asynchronous @B_com#google#android#gms#panorama#PanoramaClient#connect_E@ call are delivered."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers a listener to receive connection failed events from this GooglePlayServicesClient. Unlike @B_com#google#android#gms#common#GooglePlayServicesClient#registerConnectionCallbacks_E@, if the service is not already connected, the listener's @B_com#google#android#gms#common#GooglePlayServicesClient#OnConnectionFailedListener#onConnectionFailed_E@ method will not be called immediately. Applications should balance calls to this method with calls to @B_com#google#android#gms#common#GooglePlayServicesClient#unregisterConnectionFailedListener_E@ to avoid leaking resources. If the specified listener is already registered to receive connection failed events, this method will not add a duplicate entry for the same listener. Note that the order of messages received here may not be stable, so clients should not rely on the order that multiple listeners receive events in.", "history": "", "FullName": "public void registerConnectionFailedListener (GooglePlayServicesClient.OnConnectionFailedListener listener)"}, "unregisterConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient.OnConnectionFailedListener)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#GooglePlayServicesClient#OnConnectionFailedListener_E@", "the listener to unregister."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes a connection failed listener from the GooglePlayServicesClient. Note that removing a listener does not generate any callbacks. If the specified listener is not currently registered to receive connection failed events, this method will have no effect.", "history": "", "FullName": "public void unregisterConnectionFailedListener (GooglePlayServicesClient.OnConnectionFailedListener listener)"}, "registerConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient.ConnectionCallbacks)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks_E@", "the listener where the results of the asynchronous @B_com#google#android#gms#panorama#PanoramaClient#connect_E@ call are delivered."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers a listener to receive connection events from this GooglePlayServicesClient. If the service is already connected, the listener's @B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks#onConnected_E@ method will be called immediately. Applications should balance calls to this method with calls to @B_com#google#android#gms#common#GooglePlayServicesClient#unregisterConnectionCallbacks_E@ to avoid leaking resources. If the specified listener is already registered to receive connection events, this method will not add a duplicate entry for the same listener, but @B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks#onConnected_E@ method if currently connected. Note that the order of messages received here may not be stable, so clients should not rely on the order that multiple listeners receive events in.", "history": "", "FullName": "public void registerConnectionCallbacks (GooglePlayServicesClient.ConnectionCallbacks listener)"}, "isConnectionFailedListenerRegistered(com.google.android.gms.common.GooglePlayServicesClient.OnConnectionFailedListener)": {"Returns": [["", "true if the specified listener is currently registered to receive connection failed events."]], "Parameters": [["@B_com#google#android#gms#common#GooglePlayServicesClient#OnConnectionFailedListener_E@", "The listener to check for."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the specified listener is currently registered to receive connection failed events.", "history": "", "FullName": "public boolean isConnectionFailedListenerRegistered (GooglePlayServicesClient.OnConnectionFailedListener listener)"}, "connect()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Connects the client to Google Play services. This method returns immediately, and connects to the service in the background. If the connection is successful, @B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks#onConnected_E@ is called. On a failure, @B_com#google#android#gms#common#GooglePlayServicesClient#OnConnectionFailedListener#onConnectionFailed_E@ is called.", "history": "", "FullName": "public void connect ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.panorama.PanoramaClient", "ClassDesc": "The main entry point for panorama integration. Use the PanoramaClient after the asynchronous @B_com#google#android#gms#panorama#PanoramaClient#connect_E@ method has been called and your listener's @B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks#onConnected_E@ method is called. When your app is done using PanoramaClient, call @B_com#google#android#gms#panorama#PanoramaClient#disconnect_E@, even if the async result from @B_com#google#android#gms#panorama#PanoramaClient#connect_E@ has not yet been delivered. You should instantiate this object in your Activity's @B_android#app#Activity#onCreate_E@ method and then call @B_com#google#android#gms#panorama#PanoramaClient#connect_E@ in @B_android#app#Activity#onStart_E@ and @B_com#google#android#gms#panorama#PanoramaClient#disconnect_E@ in @B_android#app#Activity#onStop_E@, regardless of the state."}