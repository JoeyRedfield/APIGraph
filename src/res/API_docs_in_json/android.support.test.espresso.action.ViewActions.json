{"Functions": {"pressKey(int)": {"Returns": [["@B_android#support#test#espresso#ViewAction_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an action that presses the key specified by the keyCode (eg. Keyevent.KEYCODE_BACK).", "history": "", "FullName": "ViewAction pressKey (int keyCode)"}, "swipeDown()": {"Returns": [["@B_android#support#test#espresso#ViewAction_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an action that performs a swipe top-to-bottom across the horizontal center of the view. The swipe doesn't start at the very edge of the view, but has a bit of offset. View constraints: must be displayed on screen", "history": "", "FullName": "ViewAction swipeDown ()"}, "pressBack()": {"Returns": [["@B_android#support#test#espresso#ViewAction_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an action that clicks the back button.", "history": "", "FullName": "ViewAction pressBack ()"}, "pressImeActionButton()": {"Returns": [["@B_android#support#test#espresso#ViewAction_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an action that presses the current action button (next, done, search, etc) on the IME (Input Method Editor). The selected view will have its onEditorAction method called.", "history": "", "FullName": "ViewAction pressImeActionButton ()"}, "openLinkWithUri(java.lang.String)": {"Returns": [["@B_android#support#test#espresso#ViewAction_E@", "no returns description in source"]], "Parameters": [["String", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as openLinkWithUri(Matcher<Uri> uriMatcher), but uses is(uri) as the uriMatcher.", "history": "", "FullName": "ViewAction openLinkWithUri (String uri)"}, "longClick()": {"Returns": [["@B_android#support#test#espresso#ViewAction_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an action that long clicks the view. View preconditions: must be displayed on screen", "history": "", "FullName": "ViewAction longClick ()"}, "click()": {"Returns": [["@B_android#support#test#espresso#ViewAction_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an action that clicks the view. View constraints: must be displayed on screen", "history": "", "FullName": "ViewAction click ()"}, "clearGlobalAssertions()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void clearGlobalAssertions ()"}, "clearText()": {"Returns": [["@B_android#support#test#espresso#ViewAction_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an action that clears text on the view. View constraints: must be displayed on screen", "history": "", "FullName": "ViewAction clearText ()"}, "swipeUp()": {"Returns": [["@B_android#support#test#espresso#ViewAction_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an action that performs a swipe bottom-to-top across the horizontal center of the view. The swipe doesn't start at the very edge of the view, but has a bit of offset. View constraints: must be displayed on screen", "history": "", "FullName": "ViewAction swipeUp ()"}, "swipeLeft()": {"Returns": [["@B_android#support#test#espresso#ViewAction_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an action that performs a swipe right-to-left across the vertical center of the view. The swipe doesn't start at the very edge of the view, but is a bit offset. View constraints: must be displayed on screen", "history": "", "FullName": "ViewAction swipeLeft ()"}, "click(android.support.test.espresso.ViewAction)": {"Returns": [["@B_android#support#test#espresso#ViewAction_E@", "no returns description in source"]], "Parameters": [["@B_android#support#test#espresso#ViewAction_E@", "ViewAction no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an action that performs a single click on the view. If the click takes longer than the 'long press' duration (which is possible) the provided rollback action is invoked on the view and a click is attempted again. This is only necessary if the view being clicked on has some different behaviour for long press versus a normal tap. For example - if a long press on a particular view element opens a popup menu - ViewActions.pressBack() may be an acceptable rollback action. View constraints: must be displayed on screen any constraints of the rollbackAction", "history": "", "FullName": "ViewAction click (ViewAction rollbackAction)"}, "replaceText(java.lang.String)": {"Returns": [["@B_android#support#test#espresso#ViewAction_E@", "no returns description in source"]], "Parameters": [["String", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an action that updates the text attribute of a view. View preconditions: must be displayed on screen must be assignable from EditText", "history": "", "FullName": "ViewAction replaceText (String stringToBeSet)"}, "pressMenuKey()": {"Returns": [["@B_android#support#test#espresso#ViewAction_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an action that presses the hardware menu key.", "history": "", "FullName": "ViewAction pressMenuKey ()"}, "openLinkWithText(java.lang.String)": {"Returns": [["@B_android#support#test#espresso#ViewAction_E@", "no returns description in source"]], "Parameters": [["String", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as openLinkWithText(Matcher<String> linkTextMatcher), but uses is(linkText) as the linkTextMatcher.", "history": "", "FullName": "ViewAction openLinkWithText (String linkText)"}, "doubleClick()": {"Returns": [["@B_android#support#test#espresso#ViewAction_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an action that double clicks the view. View preconditions: must be displayed on screen", "history": "", "FullName": "ViewAction doubleClick ()"}, "scrollTo()": {"Returns": [["@B_android#support#test#espresso#ViewAction_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an action that scrolls to the view. View preconditions: must be a descendant of ScrollView must have visibility set to View.VISIBLE", "history": "", "FullName": "ViewAction scrollTo ()"}, "swipeRight()": {"Returns": [["@B_android#support#test#espresso#ViewAction_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an action that performs a swipe left-to-right across the vertical center of the view. The swipe doesn't start at the very edge of the view, but is a bit offset. View constraints: must be displayed on screen", "history": "", "FullName": "ViewAction swipeRight ()"}, "typeText(java.lang.String)": {"Returns": [["@B_android#support#test#espresso#ViewAction_E@", "no returns description in source"]], "Parameters": [["String", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an action that selects the view (by clicking on it) and types the provided string into the view. Appending a \\n to the end of the string translates to a ENTER key event. Note: this method performs a tap on the view before typing to force the view into focus, if the view already contains text this tap may place the cursor at an arbitrary position within the text. View preconditions: must be displayed on screen must support input methods", "history": "", "FullName": "ViewAction typeText (String stringToBeTyped)"}, "closeSoftKeyboard()": {"Returns": [["@B_android#support#test#espresso#ViewAction_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an action that closes soft keyboard. If the keyboard is already closed, it is a no-op.", "history": "", "FullName": "ViewAction closeSoftKeyboard ()"}, "typeTextIntoFocusedView(java.lang.String)": {"Returns": [["@B_android#support#test#espresso#ViewAction_E@", "no returns description in source"]], "Parameters": [["String", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an action that types the provided string into the view. Appending a \\n to the end of the string translates to a ENTER key event. Note: this method does not change cursor position in the focused view - text is inserted at the location where the cursor is currently pointed. View preconditions: must be displayed on screen must support input methods must be already focused", "history": "", "FullName": "ViewAction typeTextIntoFocusedView (String stringToBeTyped)"}}, "Inheritance": ["https:##developer#android#com@B_java#lang#Object_E@"], "ClassName": "android.support.test.espresso.action.ViewActions", "ClassDesc": "A collection of common @B_android#support#test#espresso#action#ViewActions_E@."}