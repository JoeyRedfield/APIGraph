{"Functions": {"getAvailableMetaZoneIDs()": {"Returns": [["@B_java#util#Set_E@", "An immutable set of all available meta zone IDs."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an immutable set of all available meta zone IDs.", "history": "Added in API level 24", "FullName": "public abstract Set<String> getAvailableMetaZoneIDs ()"}, "getReferenceZoneID(java.lang.String,java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "The reference zone ID (\"golden zone\" in the LDML specification) for the given time zone ID for the region. If the meta zone is unknown or the implementation does not support meta zones, null is returned."]], "Parameters": [["@B_java#lang#String_E@", "String: The meta zone ID."], ["@B_java#lang#String_E@", "String: The region."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the reference zone ID for the given meta zone ID for the region. Note: Each meta zone must have a reference zone associated with a special region \"001\" (world). Some meta zones may have region specific reference zone IDs other than the special region \"001\". When a meta zone does not have any region specific reference zone IDs, this method return the reference zone ID for the special region \"001\" (world).", "history": "Added in API level 24", "FullName": "public abstract String getReferenceZoneID (String mzID, String region)"}, "getDisplayName(java.lang.String,android.icu.text.TimeZoneNames.NameType,long)": {"Returns": [["@B_java#lang#String_E@", "The display name for the time zone at the given date. When this object does not have a localized display name for the time zone with the specified type and date, null is returned."]], "Parameters": [["@B_java#lang#String_E@", "String: The canonical time zone ID."], ["@B_android#icu#text#TimeZoneNames#NameType_E@", "TimeZoneNames.NameType: The display name type. See @B_android#icu#text#TimeZoneNames#NameType_E@."], ["long", "long: The date"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the display name of the time zone at the given date. @B_android#icu#text#TimeZoneNames#getTimeZoneDisplayName_E@ first. When the result is null, this method calls @B_android#icu#text#TimeZoneNames#getMetaZoneID_E@ to get the meta zone ID mapped from the time zone, then calls @B_android#icu#text#TimeZoneNames#getMetaZoneDisplayName_E@.", "history": "Added in API level 24", "FullName": "public final String getDisplayName (String tzID, TimeZoneNames.NameType type, long date)"}, "getInstance(android.icu.util.ULocale)": {"Returns": [["@B_android#icu#text#TimeZoneNames_E@", "An instance of TimeZoneNames"]], "Parameters": [["@B_android#icu#util#ULocale_E@", "ULocale: The locale."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an instance of TimeZoneNames for the specified locale.", "history": "Added in API level 24", "FullName": "public static TimeZoneNames getInstance (ULocale locale)"}, "getMetaZoneID(java.lang.String,long)": {"Returns": [["@B_java#lang#String_E@", "The meta zone ID for the given time zone ID at the given date. If the time zone does not have a corresponding meta zone at the given date or the implementation does not support meta zones, null is returned."]], "Parameters": [["@B_java#lang#String_E@", "String: The canonical time zone ID."], ["long", "long: The date."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the meta zone ID for the given canonical time zone ID at the given date.", "history": "Added in API level 24", "FullName": "public abstract String getMetaZoneID (String tzID, long date)"}, "getMetaZoneID(java.lang.String, long)": {"Returns": [["@B_java#lang#String_E@", "The meta zone ID for the given time zone ID at the given date. If the time zone does not have a corresponding meta zone at the given date or the implementation does not support meta zones, null is returned."]], "Parameters": [["@B_java#lang#String_E@", "String: The canonical time zone ID."], ["long", "long: The date."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the meta zone ID for the given canonical time zone ID at the given date.", "history": "added in API level 24", "FullName": "public abstract String getMetaZoneID (String tzID, long date)"}, "getMetaZoneDisplayName(java.lang.String,android.icu.text.TimeZoneNames.NameType)": {"Returns": [["@B_java#lang#String_E@", "The display name of the meta zone. When this object does not have a localized display name for the given meta zone with the specified type or the implementation does not provide any display names associated with meta zones, null is returned."]], "Parameters": [["@B_java#lang#String_E@", "String: The meta zone ID."], ["@B_android#icu#text#TimeZoneNames#NameType_E@", "TimeZoneNames.NameType: The display name type. See @B_android#icu#text#TimeZoneNames#NameType_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the display name of the meta zone.", "history": "Added in API level 24", "FullName": "public abstract String getMetaZoneDisplayName (String mzID, TimeZoneNames.NameType type)"}, "getTZDBInstance(android.icu.util.ULocale)": {"Returns": [["@B_android#icu#text#TimeZoneNames_E@", "no returns description in source"]], "Parameters": [["@B_android#icu#util#ULocale_E@", "ULocale no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an instance of TimeZoneNames containing only short specific zone names (@B_android#icu#text#TimeZoneNames#NameType#SHORT_STANDARD_E@ and @B_android#icu#text#TimeZoneNames#NameType#SHORT_DAYLIGHT_E@), compatible with the IANA tz database's zone abbreviations (not localized). Note: The input locale is used for resolving ambiguous names (e.g. \"IST\" is parsed as Israel Standard Time for Israel, while it is parsed as India Standard Time for all other regions). The zone names returned by this instance are not localized.", "history": "Added in API level 24", "FullName": "public static TimeZoneNames getTZDBInstance (ULocale locale)"}, "getExemplarLocationName(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "The exemplar location name for the given time zone, or null when a localized location name is not available and the fallback logic described above cannot extract location from the ID."]], "Parameters": [["@B_java#lang#String_E@", "String: The canonical time zone ID"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the exemplar location name for the given time zone. When this object does not have a localized location name, the default implementation may still returns a programmatically generated name with the logic described below.", "history": "Added in API level 24", "FullName": "public String getExemplarLocationName (String tzID)"}, "getAvailableMetaZoneIDs(java.lang.String)": {"Returns": [["@B_java#util#Set_E@", "An immutable set of all available meta zone IDs used by the given time zone."]], "Parameters": [["@B_java#lang#String_E@", "String: The canonical time zone ID."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an immutable set of all available meta zone IDs used by the given time zone.", "history": "Added in API level 24", "FullName": "public abstract Set<String> getAvailableMetaZoneIDs (String tzID)"}, "getTimeZoneDisplayName(java.lang.String,android.icu.text.TimeZoneNames.NameType)": {"Returns": [["@B_java#lang#String_E@", "The display name for the time zone. When this object does not have a localized display name for the given time zone with the specified type, null is returned."]], "Parameters": [["@B_java#lang#String_E@", "String: The canonical time zone ID."], ["@B_android#icu#text#TimeZoneNames#NameType_E@", "TimeZoneNames.NameType: The display name type. See @B_android#icu#text#TimeZoneNames#NameType_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the display name of the time zone. Unlike @B_android#icu#text#TimeZoneNames#getDisplayName_E@, this method does not get a name from a meta zone used by the time zone.", "history": "Added in API level 24", "FullName": "public abstract String getTimeZoneDisplayName (String tzID, TimeZoneNames.NameType type)"}, "getInstance(java.util.Locale)": {"Returns": [["@B_android#icu#text#TimeZoneNames_E@", "An instance of TimeZoneDisplayNames"]], "Parameters": [["@B_java#util#Locale_E@", "Locale: The @B_java#util#Locale_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an instance of TimeZoneNames for the specified @B_java#util#Locale_E@.", "history": "Added in API level 24", "FullName": "public static TimeZoneNames getInstance (Locale locale)"}}, "Inheritance": [], "ClassName": "android.icu.text.TimeZoneNames", "ClassDesc": "TimeZoneNames is an abstract class representing the time zone display name data model defined by For example, people in the United States refer the zone used by the east part of North America as \"Eastern Time\". The tz database contains multiple time zones \"America/New_York\", \"America/Detroit\", \"America/Montreal\" and some others that belong to \"Eastern Time\". However, assigning different display names to these time zones does not make much sense for most of people. In Sometimes, a time zone is mapped to a different time zone in the past. For example, \"America/Indiana/Knox\" had been moving \"Eastern Time\" and \"Central Time\" back and forth. Therefore, it is necessary that time zone to meta zones mapping data are stored by date range. @B_android#icu#text#TimeZoneFormat_E@ assumes an instance of TimeZoneNames is immutable. If you want to provide your own TimeZoneNames implementation and use it with @B_android#icu#text#TimeZoneFormat_E@, you must follow the contract. The methods in this class assume that time zone IDs are already canonicalized. For example, you may not get proper result returned by a method with time zone ID \"America/Indiana/Indianapolis\", because it's not a canonical time zone ID (the canonical time zone ID for the time zone is \"America/Indianapolis\". See @B_android#icu#util#TimeZone#getCanonicalID_E@ about ICU canonical time zone IDs. In CLDR, most of time zone display names except location names are provided through meta zones. But a time zone may have a specific name that is not shared with other time zones. For example, time zone \"Europe/London\" has English long name for standard time \"Greenwich Mean Time\", which is also shared with other time zones. However, the long name for daylight saving time is \"British Summer Time\", which is only used for \"Europe/London\". @B_android#icu#text#TimeZoneNames#getTimeZoneDisplayName_E@ is designed for accessing a name only used by a single time zone. But is not necessarily mean that a subclass implementation use the same model with CLDR. A subclass implementation may provide time zone names only through @B_android#icu#text#TimeZoneNames#getTimeZoneDisplayName_E@, or only through @B_android#icu#text#TimeZoneNames#getMetaZoneDisplayName_E@, or both. The default TimeZoneNames implementation returned by @B_android#icu#text#TimeZoneNames#getInstance_E@ uses the locale data imported from CLDR. In CLDR, set of meta zone IDs and mappings between zone IDs and meta zone IDs are shared by all locales. Therefore, the behavior of @B_android#icu#text#TimeZoneNames#getAvailableMetaZoneIDs_E@, @B_android#icu#text#TimeZoneNames#getAvailableMetaZoneIDs_E@, @B_android#icu#text#TimeZoneNames#getMetaZoneID_E@, and @B_android#icu#text#TimeZoneNames#getReferenceZoneID_E@ won't be changed no matter what locale is used for getting an instance of TimeZoneNames."}