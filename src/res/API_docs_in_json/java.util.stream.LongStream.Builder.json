{"Functions": {"build()": {"Returns": [["@B_java#util#stream#LongStream_E@", "the built stream"]], "Parameters": [], "Throws": [["@B_java#lang#IllegalStateException_E@", "if the builder has already transitioned to the built state"]], "SeeAlso": [], "Permissions": [], "Description": "Builds the stream, transitioning this builder to the built state. An IllegalStateException is thrown if there are further attempts to operate on the builder after it has entered the built state.", "history": "Added in API level 24", "FullName": "public abstract LongStream build ()"}, "accept(long)": {"Returns": [], "Parameters": [["long", "long: the input argument"]], "Throws": [["@B_java#lang#IllegalStateException_E@", "if the builder has already transitioned to the built state"]], "SeeAlso": [], "Permissions": [], "Description": "Adds an element to the stream being built.", "history": "Added in API level 24", "FullName": "public abstract void accept (long t)"}, "add(long)": {"Returns": [["@B_java#util#stream#LongStream#Builder_E@", "this builder"]], "Parameters": [["long", "long: the element to add"]], "Throws": [["@B_java#lang#IllegalStateException_E@", "if the builder has already transitioned to the built state"]], "SeeAlso": [], "Permissions": [], "Description": "Adds an element to the stream being built.", "history": "Added in API level 24", "FullName": "public LongStream.Builder add (long t)"}}, "Inheritance": [], "ClassName": "java.util.stream.LongStream.Builder", "ClassDesc": "A mutable builder for a LongStream. A stream builder has a lifecycle, which starts in a building phase, during which elements can be added, and then transitions to a built phase, after which elements may not be added. The built phase begins begins when the @B_java#util#stream#LongStream#Builder#build_E@ method is called, which creates an ordered stream whose elements are the elements that were added to the stream builder, in the order they were added."}