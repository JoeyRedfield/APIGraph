{"Functions": {"toHtml(android.text.Spanned)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["@B_android#text#Spanned_E@", "Spanned no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "use @B_android#text#Html#toHtml_E@ instead.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static String toHtml (Spanned text)"}, "escapeHtml(java.lang.CharSequence)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an HTML escaped representation of the given plain text.", "history": "Added in API level 16", "FullName": "public static String escapeHtml (CharSequence text)"}, "fromHtml(java.lang.String,int,android.text.Html.ImageGetter,android.text.Html.TagHandler)": {"Returns": [["@B_android#text#Spanned_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["int", "int no parameter comment"], ["@B_android#text#Html#ImageGetter_E@", "Html.ImageGetter no parameter comment"], ["@B_android#text#Html#TagHandler_E@", "Html.TagHandler no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns displayable styled text from the provided HTML string. Any <img> tags in the HTML will use the specified ImageGetter to request a representation of the image (use null if you don't want this) and the specified TagHandler to handle unknown tags (specify null if you don't want this). This uses TagSoup to handle real HTML, including all of the brokenness found in the wild.", "history": "Added in API level 24", "FullName": "public static Spanned fromHtml (String source, int flags, Html.ImageGetter imageGetter, Html.TagHandler tagHandler)"}, "fromHtml(java.lang.String)": {"Returns": [["@B_android#text#Spanned_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "use @B_android#text#Html#fromHtml_E@ instead. Returns displayable styled text from the provided HTML string with the legacy flags @B_android#text#Html#FROM_HTML_MODE_LEGACY_E@.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static Spanned fromHtml (String source)"}, "fromHtml(java.lang.String,android.text.Html.ImageGetter,android.text.Html.TagHandler)": {"Returns": [["@B_android#text#Spanned_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_android#text#Html#ImageGetter_E@", "Html.ImageGetter no parameter comment"], ["@B_android#text#Html#TagHandler_E@", "Html.TagHandler no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "use @B_android#text#Html#fromHtml_E@ instead. Returns displayable styled text from the provided HTML string with the legacy flags @B_android#text#Html#FROM_HTML_MODE_LEGACY_E@.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static Spanned fromHtml (String source, Html.ImageGetter imageGetter, Html.TagHandler tagHandler)"}, "toHtml(android.text.Spanned,int)": {"Returns": [["@B_java#lang#String_E@", "string containing input converted to HTML"]], "Parameters": [["@B_android#text#Spanned_E@", "Spanned: input text to convert"], ["int", "int: one of @B_android#text#Html#TO_HTML_PARAGRAPH_LINES_CONSECUTIVE_E@ or @B_android#text#Html#TO_HTML_PARAGRAPH_LINES_INDIVIDUAL_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an HTML representation of the provided Spanned text. A best effort is made to add HTML tags corresponding to spans. Also note that HTML metacharacters (such as \"<\" and \"&\") within the input text are escaped.", "history": "Added in API level 24", "FullName": "public static String toHtml (Spanned text, int option)"}, "toHtml(android.text.Spanned, int)": {"Returns": [["@B_java#lang#String_E@", "string containing input converted to HTML"]], "Parameters": [["@B_android#text#Spanned_E@", "Spanned: input text to convert"], ["int", "int: one of @B_android#text#Html#TO_HTML_PARAGRAPH_LINES_CONSECUTIVE_E@ or @B_android#text#Html#TO_HTML_PARAGRAPH_LINES_INDIVIDUAL_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an HTML representation of the provided Spanned text. A best effort is made to add HTML tags corresponding to spans. Also note that HTML metacharacters (such as \"<\" and \"&\") within the input text are escaped.", "history": "added in API level 24", "FullName": "public static String toHtml (Spanned text, int option)"}, "fromHtml(java.lang.String,int)": {"Returns": [["@B_android#text#Spanned_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns displayable styled text from the provided HTML string. Any <img> tags in the HTML will display as a generic replacement image which your program can then go through and replace with real images. This uses TagSoup to handle real HTML, including all of the brokenness found in the wild.", "history": "Added in API level 24", "FullName": "public static Spanned fromHtml (String source, int flags)"}, "fromHtml(java.lang.String, int)": {"Returns": [["@B_android#text#Spanned_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns displayable styled text from the provided HTML string. Any <img> tags in the HTML will display as a generic replacement image which your program can then go through and replace with real images. This uses TagSoup to handle real HTML, including all of the brokenness found in the wild.", "history": "added in API level 24", "FullName": "public static Spanned fromHtml (String source, int flags)"}}, "Inheritance": [], "ClassName": "android.text.Html", "ClassDesc": "This class processes HTML strings into displayable styled text. Not all HTML tags are supported."}