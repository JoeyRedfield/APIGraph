{"Functions": {"is24Hour()": {"Returns": [["boolean", "true if this widget displays time in 24-hour mode, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v17#leanback#widget#picker#TimePicker#setIs24Hour_E@"], "Permissions": [], "Description": "", "history": "added in version 25.3.0", "FullName": "boolean is24Hour ()"}, "setIs24Hour(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true to display in 24-hour mode, false ti display in 12-hour mode with AM/PM."]], "Throws": [], "SeeAlso": ["@B_android#support#v17#leanback#widget#picker#TimePicker#is24Hour_E@"], "Permissions": [], "Description": "Sets whether this widget displays a 24-hour mode or a 12-hour mode with an AM/PM picker.", "history": "added in version 25.3.0", "FullName": "void setIs24Hour (boolean is24Hour)"}, "isPm()": {"Returns": [["boolean", "true if the currently selected time is in PM, false if the currently selected time in in AM."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Only meaningful for a 12-hour time.", "history": "added in version 25.3.0", "FullName": "boolean isPm ()"}, "getHour()": {"Returns": [["int", "the currently selected hour in the range (0-23)"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v17#leanback#widget#picker#TimePicker#setHour_E@"], "Permissions": [], "Description": "Returns the currently selected hour using 24-hour time.", "history": "added in version 25.3.0", "FullName": "int getHour ()"}, "setHour(int)": {"Returns": [], "Parameters": [["int", "int: the hour to set, in the range (0-23)Value is 23 or less."]], "Throws": [], "SeeAlso": ["@B_android#support#v17#leanback#widget#picker#TimePicker#getHour_E@"], "Permissions": [], "Description": "Sets the currently selected hour using a 24-hour time.", "history": "added in version 25.3.0", "FullName": "void setHour (int hour)"}, "getMinute()": {"Returns": [["int", "the currently selected minute, in the range (0-59)"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v17#leanback#widget#picker#TimePicker#setMinute_E@"], "Permissions": [], "Description": "Returns the currently selected minute.", "history": "added in version 25.3.0", "FullName": "int getMinute ()"}, "setMinute(int)": {"Returns": [], "Parameters": [["int", "int: the minute to set, in the range (0-59)Value is 59 or less."]], "Throws": [], "SeeAlso": ["@B_android#support#v17#leanback#widget#picker#TimePicker#getMinute_E@"], "Permissions": [], "Description": "Sets the currently selected minute.", "history": "added in version 25.3.0", "FullName": "void setMinute (int minute)"}, "onColumnValueChanged(int, int)": {"Returns": [], "Parameters": [["int", "int: index of which column was changed."], ["int", "int: A new value desired to be set on the column."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Classes extending @B_android#support#v17#leanback#widget#picker#Picker_E@ can override this function to supply the behavior when a list has been scrolled. Subclass may call @B_android#support#v17#leanback#widget#picker#Picker#setColumnValue_E@ and or @B_android#support#v17#leanback#widget#picker#Picker#setColumnAt_E@. Subclass should not directly call @B_android#support#v17#leanback#widget#picker#PickerColumn#setCurrentValue_E@ which does not update internal state or notify listeners.", "history": "added in version 25.3.0", "FullName": "void onColumnValueChanged (int columnIndex, int newValue)"}}, "Inheritance": ["java.lang.Object", "https:##developer#android#com@B_android#view#View_E@", "https:##developer#android#com@B_android#view#ViewGroup_E@", "https:##developer#android#com@B_android#widget#FrameLayout_E@", "@B_android#support#v17#leanback#widget#picker#Picker_E@"], "ClassName": "android.support.v17.leanback.widget.picker.TimePicker", "ClassDesc": "@B_android#support#v17#leanback#widget#picker#TimePicker_E@ is a direct subclass of @B_android#support#v17#leanback#widget#picker#Picker_E@. This class is a widget for selecting time and displays it according to the formatting for the current system locale. The time can be selected by hour, minute, and AM/PM picker columns. The AM/PM mode is determined by either explicitly setting the current mode through @B_android#support#v17#leanback#widget#picker#TimePicker#setIs24Hour_E@ or the widget attribute is24HourFormat (true for 24-hour mode, false for 12-hour mode). Otherwise, TimePicker retrieves the mode based on the current context. In 24-hour mode, TimePicker displays only the hour and minute columns. This widget can show the current time as the initial value if useCurrentTime is set to true. Each individual time picker field can be set at any time by calling @B_android#support#v17#leanback#widget#picker#TimePicker#setHour_E@, @B_android#support#v17#leanback#widget#picker#TimePicker#setMinute_E@ using 24-hour time format. The time format can also be changed at any time by calling @B_android#support#v17#leanback#widget#picker#TimePicker#setIs24Hour_E@, and the AM/PM picker column will be activated or deactivated accordingly."}