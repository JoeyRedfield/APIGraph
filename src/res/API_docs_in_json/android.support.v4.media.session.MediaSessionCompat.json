{"Functions": {"obtain(android.content.Context, java.lang.Object)": {"Returns": [["@B_android#support#v4#media#session#MediaSessionCompat_E@", "An equivalent @B_android#support#v4#media#session#MediaSessionCompat_E@ object, or null if none."]], "Parameters": [["@B_android#content#Context_E@", "Context: The context to use to create the session."], ["@B_java#lang#Object_E@", "Object: A @B_android#media#session#MediaSession_E@ object."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#support#v4#media#session#MediaSessionCompat#fromMediaSession_E@ instead. Creates an instance from a framework @B_android#media#session#MediaSession_E@ object. This method is only supported on API 21+. On API 20 and below, it returns null.", "history": "", "FullName": "MediaSessionCompat obtain (Context context, Object mediaSession)"}, "MediaSessionCompat(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent)": {"Returns": [], "Parameters": [["https:##developer#android#com@B_android#content#Context_E@", "Context: The context to use to create the session."], ["String", "String: A short name for debugging purposes."], ["https:##developer#android#com@B_android#content#ComponentName_E@", "ComponentName: The component name for your media button receiver."], ["https:##developer#android#com@B_android#app#PendingIntent_E@", "PendingIntent: The PendingIntent for your receiver component that handles media button events. This is optional and will be used on between https:##developer#android#com@B_android#os#Build#VERSION_CODES#JELLY_BEAN_MR2_E@ and https:##developer#android#com@B_android#os#Build#VERSION_CODES#KITKAT_WATCH_E@ instead of the component name."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new session with a specified media button receiver (a component name and/or a pending intent). You must call @B_android#support#v4#media#session#MediaSessionCompat#release_E@ when finished with the session. The session will automatically be registered with the system but will not be published until @B_android#support#v4#media#session#MediaSessionCompat#setActive_E@ is called. For API 20 or earlier, note that a media button receiver is required for handling https:##developer#android#com@B_android#content#Intent#ACTION_MEDIA_BUTTON_E@. This constructor will attempt to find an appropriate https:##developer#android#com@B_android#content#BroadcastReceiver_E@ from your manifest if it's not specified. See @B_androidx#media#session#MediaButtonReceiver_E@ for more details.", "history": "added in version 22.1.0", "FullName": "public MediaSessionCompat (Context context, String tag, ComponentName mbrComponent, PendingIntent mbrIntent)"}, "setShuffleModeEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true to enable the shuffle mode, false to disable."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#support#v4#media#session#MediaSessionCompat#setShuffleMode_E@ instead. Set the shuffle mode for this session. Note that if this method is not called before, @B_android#support#v4#media#session#MediaControllerCompat#isShuffleModeEnabled_E@ will return false.", "history": "added in version 25.3.0", "FullName": "void setShuffleModeEnabled (boolean enabled)"}, "removeOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat.OnActiveChangeListener)": {"Returns": [], "Parameters": [["@B_android#support#v4#media#session#MediaSessionCompat#OnActiveChangeListener_E@", "MediaSessionCompat.OnActiveChangeListener: The listener to remove."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Stops the listener from being notified when the active status of this session changes.", "history": "added in version 22.1.0", "FullName": "public void removeOnActiveChangeListener (MediaSessionCompat.OnActiveChangeListener listener)"}, "setSessionActivity(android.app.PendingIntent)": {"Returns": [], "Parameters": [["https:##developer#android#com@B_android#app#PendingIntent_E@", "PendingIntent: The intent to launch to show UI for this Session."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets an intent for launching UI for this Session. This can be used as a quick link to an ongoing media screen. The intent should be for an activity that may be started using https:##developer#android#com@B_android#app#Activity#startActivity_E@.", "history": "added in version 22.1.0", "FullName": "public void setSessionActivity (PendingIntent pi)"}, "getMediaSession()": {"Returns": [["Object", "The underlying https:##developer#android#com@B_android#media#session#MediaSession_E@ object, or null if none."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the underlying framework https:##developer#android#com@B_android#media#session#MediaSession_E@ object. This method is only supported on API 21+.", "history": "added in version 22.1.0", "FullName": "public Object getMediaSession ()"}, "addOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat.OnActiveChangeListener)": {"Returns": [], "Parameters": [["@B_android#support#v4#media#session#MediaSessionCompat#OnActiveChangeListener_E@", "MediaSessionCompat.OnActiveChangeListener: The listener to add."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds a listener to be notified when the active status of this session changes. This is primarily used by the support library and should not be needed by apps.", "history": "added in version 22.1.0", "FullName": "public void addOnActiveChangeListener (MediaSessionCompat.OnActiveChangeListener listener)"}, "MediaSessionCompat(android.content.Context,java.lang.String)": {"Returns": [], "Parameters": [["https:##developer#android#com@B_android#content#Context_E@", "Context: The context to use to create the session."], ["String", "String: A short name for debugging purposes."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new session. You must call @B_android#support#v4#media#session#MediaSessionCompat#release_E@ when finished with the session. The session will automatically be registered with the system but will not be published until @B_android#support#v4#media#session#MediaSessionCompat#setActive_E@ is called. For API 20 or earlier, note that a media button receiver is required for handling https:##developer#android#com@B_android#content#Intent#ACTION_MEDIA_BUTTON_E@. This constructor will attempt to find an appropriate https:##developer#android#com@B_android#content#BroadcastReceiver_E@ from your manifest. See @B_androidx#media#session#MediaButtonReceiver_E@ for more details.", "history": "added in version 26.0.0-alpha1", "FullName": "public MediaSessionCompat (Context context, String tag)"}, "setShuffleMode(int)": {"Returns": [], "Parameters": [["int", "int: The shuffle mode. Must be one of the followings: @B_android#support#v4#media#session#PlaybackStateCompat#SHUFFLE_MODE_NONE_E@, @B_android#support#v4#media#session#PlaybackStateCompat#SHUFFLE_MODE_ALL_E@, @B_android#support#v4#media#session#PlaybackStateCompat#SHUFFLE_MODE_GROUP_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the shuffle mode for this session. Note that if this method is not called before, @B_android#support#v4#media#session#MediaControllerCompat#getShuffleMode_E@ will return @B_android#support#v4#media#session#PlaybackStateCompat#SHUFFLE_MODE_NONE_E@.", "history": "added in version 26.1.0", "FullName": "public void setShuffleMode (int shuffleMode)"}, "setCaptioningEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true to enable captioning, false to disable."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enables/disables captioning for this session.", "history": "added in version 25.4.0", "FullName": "public void setCaptioningEnabled (boolean enabled)"}, "setRepeatMode(int)": {"Returns": [], "Parameters": [["int", "int: The repeat mode. Must be one of the followings: @B_android#support#v4#media#session#PlaybackStateCompat#REPEAT_MODE_NONE_E@, @B_android#support#v4#media#session#PlaybackStateCompat#REPEAT_MODE_ONE_E@, @B_android#support#v4#media#session#PlaybackStateCompat#REPEAT_MODE_ALL_E@, @B_android#support#v4#media#session#PlaybackStateCompat#REPEAT_MODE_GROUP_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the repeat mode for this session. Note that if this method is not called before, @B_android#support#v4#media#session#MediaControllerCompat#getRepeatMode_E@ will return @B_android#support#v4#media#session#PlaybackStateCompat#REPEAT_MODE_NONE_E@.", "history": "added in version 26.0.0-alpha1", "FullName": "public void setRepeatMode (int repeatMode)"}, "setRatingType(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the style of rating used by this session. Apps trying to set the rating should use this style. Must be one of the following: @B_android#support#v4#media#RatingCompat#RATING_NONE_E@ @B_android#support#v4#media#RatingCompat#RATING_3_STARS_E@ @B_android#support#v4#media#RatingCompat#RATING_4_STARS_E@ @B_android#support#v4#media#RatingCompat#RATING_5_STARS_E@ @B_android#support#v4#media#RatingCompat#RATING_HEART_E@ @B_android#support#v4#media#RatingCompat#RATING_PERCENTAGE_E@ @B_android#support#v4#media#RatingCompat#RATING_THUMB_UP_DOWN_E@", "history": "added in version 22.1.0", "FullName": "public void setRatingType (int type)"}, "setQueue(java.util.List<android.support.v4.media.session.MediaSessionCompat.QueueItem>)": {"Returns": [], "Parameters": [["List", "List: A list of items in the play queue."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Updates the list of items in the play queue. It is an ordered list and should contain the current item, and previous or upcoming items if they exist. Specify null if there is no current play queue. The queue should be of reasonable size. If the play queue is unbounded within your app, it is better to send a reasonable amount in a sliding window instead.", "history": "added in version 22.1.0", "FullName": "public void setQueue (List<MediaSessionCompat.QueueItem> queue)"}, "getSessionToken()": {"Returns": [["@B_android#support#v4#media#session#MediaSessionCompat#Token_E@", "A token that can be used to create a media controller for this session."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves a token object that can be used by apps to create a @B_android#support#v4#media#session#MediaControllerCompat_E@ for interacting with this session. The owner of the session is responsible for deciding how to distribute these tokens. On platform versions before https:##developer#android#com@B_android#os#Build#VERSION_CODES#LOLLIPOP_E@ this token may only be used within your app as there is no way to guarantee other apps are using the same version of the support library.", "history": "added in version 22.1.0", "FullName": "public MediaSessionCompat.Token getSessionToken ()"}, "setMetadata(android.support.v4.media.MediaMetadataCompat)": {"Returns": [], "Parameters": [["@B_android#support#v4#media#MediaMetadataCompat_E@", "MediaMetadataCompat: The new metadata"]], "Throws": [], "SeeAlso": ["@B_android#support#v4#media#MediaMetadataCompat#Builder#putBitmap_E@"], "Permissions": [], "Description": "Updates the current metadata. New metadata can be created using @B_android#support#v4#media#MediaMetadataCompat#Builder_E@. This operation may take time proportional to the size of the bitmap to replace large bitmaps with a scaled down copy.", "history": "added in version 22.1.0", "FullName": "public void setMetadata (MediaMetadataCompat metadata)"}, "setMediaButtonReceiver(android.app.PendingIntent)": {"Returns": [], "Parameters": [["https:##developer#android#com@B_android#app#PendingIntent_E@", "PendingIntent: The https:##developer#android#com@B_android#app#PendingIntent_E@ to send the media button event to."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets a pending intent for your media button receiver to allow restarting playback after the session has been stopped. If your app is started in this way an https:##developer#android#com@B_android#content#Intent#ACTION_MEDIA_BUTTON_E@ intent will be sent via the pending intent. This method will only work on https:##developer#android#com@B_android#os#Build#VERSION_CODES#LOLLIPOP_E@ and later. Earlier platform versions must include the media button receiver in the constructor.", "history": "added in version 22.1.0", "FullName": "public void setMediaButtonReceiver (PendingIntent mbr)"}, "setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)": {"Returns": [], "Parameters": [["@B_android#support#v4#media#session#PlaybackStateCompat_E@", "PlaybackStateCompat: The current state of playback"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Updates the current playback state.", "history": "added in version 22.1.0", "FullName": "public void setPlaybackState (PlaybackStateCompat state)"}, "setCallback(android.support.v4.media.session.MediaSessionCompat.Callback,android.os.Handler)": {"Returns": [], "Parameters": [["@B_android#support#v4#media#session#MediaSessionCompat#Callback_E@", "MediaSessionCompat.Callback: The callback to receive updates on."], ["https:##developer#android#com@B_android#os#Handler_E@", "Handler: The handler that events should be posted on."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the callback to receive updates for the MediaSession. This includes media button and volume events. Set the callback to null to stop receiving events.", "history": "added in version 22.1.0", "FullName": "public void setCallback (MediaSessionCompat.Callback callback, Handler handler)"}, "setQueueTitle(java.lang.CharSequence)": {"Returns": [], "Parameters": [["CharSequence", "CharSequence: The title of the play queue."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the title of the play queue. The UI should display this title along with the play queue itself. e.g. \"Play Queue\", \"Now Playing\", or an album name.", "history": "added in version 22.1.0", "FullName": "public void setQueueTitle (CharSequence title)"}, "sendSessionEvent(java.lang.String,android.os.Bundle)": {"Returns": [], "Parameters": [["String", "String: The name of the event to send"], ["https:##developer#android#com@B_android#os#Bundle_E@", "Bundle: Any extras included with the event"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sends a proprietary event to all MediaControllers listening to this Session. It's up to the Controller/Session owner to determine the meaning of any events.", "history": "added in version 22.1.0", "FullName": "public void sendSessionEvent (String event, Bundle extras)"}, "setActive(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: Whether this session is active or not."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets if this session is currently active and ready to receive commands. If set to false your session's controller may not be discoverable. You must set the session to active before it can start receiving media button events or transport commands. On platforms earlier than https:##developer#android#com@B_android#os#Build#VERSION_CODES#LOLLIPOP_E@, a media button event receiver should be set via the constructor to receive media button events.", "history": "added in version 22.1.0", "FullName": "public void setActive (boolean active)"}, "release()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This must be called when an app has finished performing playback. If playback is expected to start again shortly the session can be left open, but it must be released if your activity or service is being destroyed.", "history": "added in version 22.1.0", "FullName": "public void release ()"}, "setPlaybackToLocal(int)": {"Returns": [], "Parameters": [["int", "int: The https:##developer#android#com@B_android#media#AudioManager_E@ stream this session is playing on."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the stream this session is playing on. This will affect the system's volume handling for this session. If @B_android#support#v4#media#session#MediaSessionCompat#setPlaybackToRemote_E@ was previously called it will stop receiving volume commands and the system will begin sending volume changes to the appropriate stream. By default sessions are on https:##developer#android#com@B_android#media#AudioManager#STREAM_MUSIC_E@.", "history": "added in version 22.1.0", "FullName": "public void setPlaybackToLocal (int stream)"}, "fromMediaSession(android.content.Context,java.lang.Object)": {"Returns": [["@B_android#support#v4#media#session#MediaSessionCompat_E@", "An equivalent @B_android#support#v4#media#session#MediaSessionCompat_E@ object, or null if none."]], "Parameters": [["https:##developer#android#com@B_android#content#Context_E@", "Context: The context to use to create the session."], ["Object", "Object: A https:##developer#android#com@B_android#media#session#MediaSession_E@ object."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an instance from a framework https:##developer#android#com@B_android#media#session#MediaSession_E@ object. This method is only supported on API 21+. On API 20 and below, it returns null. Note: A @B_android#support#v4#media#session#MediaSessionCompat_E@ object returned from this method may not provide the full functionality of @B_android#support#v4#media#session#MediaSessionCompat_E@ until setting a new @B_android#support#v4#media#session#MediaSessionCompat#Callback_E@. To avoid this, when both a @B_android#support#v4#media#session#MediaSessionCompat_E@ and a framework https:##developer#android#com@B_android#media#session#MediaSession_E@ are needed, it is recommended to create a @B_android#support#v4#media#session#MediaSessionCompat_E@ first and get the framework session through @B_android#support#v4#media#session#MediaSessionCompat#getMediaSession_E@.", "history": "added in version 26.0.0-alpha1", "FullName": "public static MediaSessionCompat fromMediaSession (Context context, Object mediaSession)"}, "getController()": {"Returns": [["@B_android#support#v4#media#session#MediaControllerCompat_E@", "A controller for this session."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets a controller for this session. This is a convenience method to avoid having to cache your own controller in process.", "history": "added in version 22.1.0", "FullName": "public MediaControllerCompat getController ()"}, "setExtras(android.os.Bundle)": {"Returns": [], "Parameters": [["https:##developer#android#com@B_android#os#Bundle_E@", "Bundle: The extras associated with the session."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets some extras that can be associated with the @B_android#support#v4#media#session#MediaSessionCompat_E@. No assumptions should be made as to how a @B_android#support#v4#media#session#MediaControllerCompat_E@ will handle these extras. Keys should be fully qualified (e.g. com.example.MY_EXTRA) to avoid conflicts.", "history": "added in version 22.1.0", "FullName": "public void setExtras (Bundle extras)"}, "setCallback(android.support.v4.media.session.MediaSessionCompat.Callback)": {"Returns": [], "Parameters": [["@B_android#support#v4#media#session#MediaSessionCompat#Callback_E@", "MediaSessionCompat.Callback: The callback object"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds a callback to receive updates on for the MediaSession. This includes media button and volume events. The caller's thread will be used to post events.", "history": "added in version 22.1.0", "FullName": "public void setCallback (MediaSessionCompat.Callback callback)"}, "obtain(java.lang.Object)": {"Returns": [["", "A compat wrapper for the provided session."]], "Parameters": [["@B_java#lang#Object_E@", "The @B_android#media#session#MediaSession_E@ to wrap."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtain a compat wrapper for an existing MediaSession.", "history": "", "FullName": "public static MediaSessionCompat obtain (Object mediaSession)"}, "getRemoteControlClient()": {"Returns": [["Object", "The underlying https:##developer#android#com@B_android#media#RemoteControlClient_E@ object, or null if none."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the underlying framework https:##developer#android#com@B_android#media#RemoteControlClient_E@ object. This method is only supported on APIs 14-20. On API 21+ @B_android#support#v4#media#session#MediaSessionCompat#getMediaSession_E@ should be used instead.", "history": "added in version 22.1.0", "FullName": "public Object getRemoteControlClient ()"}, "setFlags(int)": {"Returns": [], "Parameters": [["int", "int: The flags to set for this session."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets any flags for the session.", "history": "added in version 22.1.0", "FullName": "public void setFlags (int flags)"}, "isActive()": {"Returns": [["boolean", "True if the session is active, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the current active state of this session.", "history": "added in version 22.1.0", "FullName": "public boolean isActive ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v4.media.session.MediaSessionCompat", "ClassDesc": "Allows interaction with media controllers, volume keys, media buttons, and transport controls. A MediaSession should be created when an app wants to publish media playback information or handle media keys. In general an app only needs one session for all playback, though multiple sessions can be created to provide finer grain controls of media. Once a session is created the owner of the session may pass its @B_android#support#v4#media#session#MediaSessionCompat#getSessionToken_E@ to other processes to allow them to create a @B_android#support#v4#media#session#MediaControllerCompat_E@ to interact with the session. To receive commands, media keys, and other events a @B_android#support#v4#media#session#MediaSessionCompat#Callback_E@ must be set with @B_android#support#v4#media#session#MediaSessionCompat#setCallback_E@. When an app is finished performing playback it must call @B_android#support#v4#media#session#MediaSessionCompat#release_E@ to clean up the session and notify any controllers. MediaSessionCompat objects are not thread safe and all calls should be made from the same thread. This is a helper for accessing features in https:##developer#android#com@B_android#media#session#MediaSession_E@ introduced after API level 4 in a backwards compatible fashion."}