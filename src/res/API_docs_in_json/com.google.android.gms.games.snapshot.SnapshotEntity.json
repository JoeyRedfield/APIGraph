{"Functions": {"toString()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public String toString ()"}, "readFully()": {"Returns": [["", "The bytes of the snapshot contents."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Read the contents of a snapshot. If this snapshot was not opened via @B_com#google#android#gms#games#snapshot#Snapshots#open_E@, or if the contents have already been committed via @B_com#google#android#gms#games#snapshot#Snapshots#commitAndClose_E@ this method will throw an exception.", "history": "", "FullName": "public byte[] readFully ()"}, "getSnapshotContents()": {"Returns": [["", "The @B_com#google#android#gms#games#snapshot#SnapshotContents_E@ for this snapshot, or null if the snapshot is not opened."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the @B_com#google#android#gms#games#snapshot#SnapshotContents_E@ associated with this snapshot. This object can be used to update the data of a snapshot. Note that this will return null if this snapshot was not obtained via @B_com#google#android#gms#games#snapshot#Snapshots#open_E@.", "history": "", "FullName": "public SnapshotContents getSnapshotContents ()"}, "getMetadata()": {"Returns": [["", "The @B_com#google#android#gms#games#snapshot#SnapshotMetadata_E@ associated with this snapshot."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the metadata for this snapshot.", "history": "", "FullName": "public SnapshotMetadata getMetadata ()"}, "freeze()": {"Returns": [["", "A concrete implementation of the data object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Freeze a volatile representation into an immutable representation. Objects returned from this call are safe to cache. Note that the output of freeze may not be identical to the parent object, but should be equal. In other words:", "history": "", "FullName": "public Snapshot freeze ()"}, "describeContents()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int describeContents ()"}, "getContents()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public Contents getContents ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public void writeToParcel (Parcel out, int flags)"}, "writeBytes(byte[])": {"Returns": [["", "Whether or not the data was successfully written to disk."]], "Parameters": [["byte[]", "The data to write."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Write the specified data into the snapshot. The contents of the snapshot will be replaced with the data provided in content. The data will be persisted on disk, but is not uploaded to the server until the snapshot is committed via @B_com#google#android#gms#games#snapshot#Snapshots#commitAndClose_E@. Note that this form of the API will fully overwrite the contents of the file. No previous data will be retained. Use @B_com#google#android#gms#games#snapshot#Snapshot#modifyBytes_E@ to overwrite parts of the file. If the snapshot was not opened via @B_com#google#android#gms#games#snapshot#Snapshots#open_E@, or if the contents have already been committed via @B_com#google#android#gms#games#snapshot#Snapshots#commitAndClose_E@, this method will throw an exception.", "history": "", "FullName": "public boolean writeBytes (byte[] content)"}, "modifyBytes(int, byte[], int, int)": {"Returns": [["", "Whether or not the data was successfully written to disk."]], "Parameters": [["int", "Position in the snapshot file to start writing data to. 0 indicates the head of the file."], ["byte[]", "The data to write."], ["int", "Position in content to start writing from."], ["int", "Number of bytes from content to write to this snapshot."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Write the specified data into the snapshot. The contents of the snapshot will be replaced with the data provided in content. The data will be persisted on disk, but is not uploaded to the server until the snapshot is committed via @B_com#google#android#gms#games#snapshot#Snapshots#commitAndClose_E@. Note that this form of the API does not necessarily overwrite the entire contents of the file. If you are writing less data than was previously stored in the snapshot, the excess data will remain. Use @B_com#google#android#gms#games#snapshot#Snapshot#writeBytes_E@ to fully overwrite the file. If the snapshot was not opened via @B_com#google#android#gms#games#snapshot#Snapshots#open_E@, or if the contents have already been committed via @B_com#google#android#gms#games#snapshot#Snapshots#commitAndClose_E@, this method will throw an exception.", "history": "", "FullName": "public boolean modifyBytes (int dstOffset, byte[] content, int srcOffset, int count)"}, "equals(java.lang.Object)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public boolean equals (Object obj)"}, "isDataValid()": {"Returns": [["", "whether or not the object is valid for use."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check to see if this object is valid for use. If the object is still volatile, this method will indicate whether or not the object can be safely used. The output of a call to @B_com#google#android#gms#common#data#Freezable#freeze_E@ will always be valid.", "history": "", "FullName": "public boolean isDataValid ()"}, "hashCode()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int hashCode ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.games.snapshot.SnapshotEntity", "ClassDesc": "Data object representing the data for a saved game. This is immutable, and therefore safe to cache or store. Note, however, that the data it represents may grow stale. This class exists solely to support parceling these objects and should not be used directly."}