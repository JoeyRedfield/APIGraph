{"Functions": {"cancel()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Cancel the countdown.", "history": "Added in API level 1", "FullName": "public final void cancel ()"}, "onTick(long)": {"Returns": [], "Parameters": [["long", "long: The amount of time until finished."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Callback fired on regular interval.", "history": "Added in API level 1", "FullName": "public abstract void onTick (long millisUntilFinished)"}, "onFinish()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Callback fired when the time is up.", "history": "Added in API level 1", "FullName": "public abstract void onFinish ()"}, "CountDownTimer(long, long)": {"Returns": [], "Parameters": [["long", "long: The number of millis in the future from the call to @B_android#os#CountDownTimer#start_E@ until the countdown is done and @B_android#os#CountDownTimer#onFinish_E@ is called."], ["long", "long: The interval along the way to receive @B_android#os#CountDownTimer#onTick_E@ callbacks."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public CountDownTimer (long millisInFuture, long countDownInterval)"}, "CountDownTimer(long,long)": {"Returns": [], "Parameters": [["long", "long: The number of millis in the future from the call to @B_android#os#CountDownTimer#start_E@ until the countdown is done and @B_android#os#CountDownTimer#onFinish_E@ is called."], ["long", "long: The interval along the way to receive @B_android#os#CountDownTimer#onTick_E@ callbacks."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public CountDownTimer (long millisInFuture, long countDownInterval)"}, "start()": {"Returns": [["@B_android#os#CountDownTimer_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Start the countdown.", "history": "Added in API level 1", "FullName": "public final CountDownTimer start ()"}}, "Inheritance": [], "ClassName": "android.os.CountDownTimer", "ClassDesc": "Schedule a countdown until a time in the future, with regular notifications on intervals along the way. Example of showing a 30 second countdown in a text field: @B_android#os#CountDownTimer#onTick_E@ are synchronized to this object so that one call to @B_android#os#CountDownTimer#onTick_E@ won't ever occur before the previous callback is complete. This is only relevant when the implementation of @B_android#os#CountDownTimer#onTick_E@ takes an amount of time to execute that is significant compared to the countdown interval."}