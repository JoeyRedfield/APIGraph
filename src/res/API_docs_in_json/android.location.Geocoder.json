{"Functions": {"getFromLocationName(java.lang.String,int,double,double,double,double)": {"Returns": [["@B_java#util#List_E@", "a list of Address objects. Returns null or empty list if no matches were found or there is no backend service available."]], "Parameters": [["@B_java#lang#String_E@", "String: a user-supplied description of a location"], ["int", "int: max number of addresses to return. Smaller numbers (1 to 5) are recommended"], ["double", "double: the latitude of the lower left corner of the bounding box"], ["double", "double: the longitude of the lower left corner of the bounding box"], ["double", "double: the latitude of the upper right corner of the bounding box"], ["double", "double: the longitude of the upper right corner of the bounding box"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if locationName is null"], ["@B_java#lang#IllegalArgumentException_E@", "if any latitude is less than -90 or greater than 90"], ["@B_java#lang#IllegalArgumentException_E@", "if any longitude is less than -180 or greater than 180"], ["@B_java#io#IOException_E@", "if the network is unavailable or any other I/O problem occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Returns an array of Addresses that are known to describe the named location, which may be a place name such as \"Dalvik, Iceland\", an address such as \"1600 Amphitheatre Parkway, Mountain View, CA\", an airport code such as \"SFO\", etc.. The returned addresses will be localized for the locale provided to this class's constructor. You may specify a bounding box for the search results by including the Latitude and Longitude of the Lower Left point and Upper Right point of the box. The query will block and returned values will be obtained by means of a network lookup. The results are a best guess and are not guaranteed to be meaningful or correct. It may be useful to call this method from a thread separate from your primary UI thread.", "history": "Added in API level 1", "FullName": "public List<Address> getFromLocationName (String locationName, int maxResults, double lowerLeftLatitude, double lowerLeftLongitude, double upperRightLatitude, double upperRightLongitude)"}, "isPresent()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the Geocoder methods getFromLocation and getFromLocationName are implemented. Lack of network connectivity may still cause these methods to return null or empty lists.", "history": "Added in API level 9", "FullName": "public static boolean isPresent ()"}, "getFromLocationName(java.lang.String,int)": {"Returns": [["@B_java#util#List_E@", "a list of Address objects. Returns null or empty list if no matches were found or there is no backend service available."]], "Parameters": [["@B_java#lang#String_E@", "String: a user-supplied description of a location"], ["int", "int: max number of results to return. Smaller numbers (1 to 5) are recommended"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if locationName is null"], ["@B_java#io#IOException_E@", "if the network is unavailable or any other I/O problem occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Returns an array of Addresses that are known to describe the named location, which may be a place name such as \"Dalvik, Iceland\", an address such as \"1600 Amphitheatre Parkway, Mountain View, CA\", an airport code such as \"SFO\", etc.. The returned addresses will be localized for the locale provided to this class's constructor. The query will block and returned values will be obtained by means of a network lookup. The results are a best guess and are not guaranteed to be meaningful or correct. It may be useful to call this method from a thread separate from your primary UI thread.", "history": "Added in API level 1", "FullName": "public List<Address> getFromLocationName (String locationName, int maxResults)"}, "Geocoder(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: the Context of the calling Activity"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a Geocoder whose responses will be localized for the default system Locale.", "history": "Added in API level 1", "FullName": "public Geocoder (Context context)"}, "getFromLocationName(java.lang.String, int)": {"Returns": [["@B_java#util#List_E@", "a list of Address objects. Returns null or empty list if no matches were found or there is no backend service available."]], "Parameters": [["@B_java#lang#String_E@", "String: a user-supplied description of a location"], ["int", "int: max number of results to return. Smaller numbers (1 to 5) are recommended"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if locationName is null"], ["@B_java#io#IOException_E@", "if the network is unavailable or any other I/O problem occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Returns an array of Addresses that are known to describe the named location, which may be a place name such as \"Dalvik, Iceland\", an address such as \"1600 Amphitheatre Parkway, Mountain View, CA\", an airport code such as \"SFO\", etc.. The returned addresses will be localized for the locale provided to this class's constructor. The query will block and returned values will be obtained by means of a network lookup. The results are a best guess and are not guaranteed to be meaningful or correct. It may be useful to call this method from a thread separate from your primary UI thread.", "history": "added in API level 1", "FullName": "public List<Address> getFromLocationName (String locationName, int maxResults)"}, "getFromLocation(double, double, int)": {"Returns": [["@B_java#util#List_E@", "a list of Address objects. Returns null or empty list if no matches were found or there is no backend service available."]], "Parameters": [["double", "double: the latitude a point for the search"], ["double", "double: the longitude a point for the search"], ["int", "int: max number of addresses to return. Smaller numbers (1 to 5) are recommended"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if latitude is less than -90 or greater than 90"], ["@B_java#lang#IllegalArgumentException_E@", "if longitude is less than -180 or greater than 180"], ["@B_java#io#IOException_E@", "if the network is unavailable or any other I/O problem occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Returns an array of Addresses that are known to describe the area immediately surrounding the given latitude and longitude. The returned addresses will be localized for the locale provided to this class's constructor. The returned values may be obtained by means of a network lookup. The results are a best guess and are not guaranteed to be meaningful or correct. It may be useful to call this method from a thread separate from your primary UI thread.", "history": "added in API level 1", "FullName": "public List<Address> getFromLocation (double latitude, double longitude, int maxResults)"}, "Geocoder(android.content.Context,java.util.Locale)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: the Context of the calling Activity"], ["@B_java#util#Locale_E@", "Locale: the desired Locale for the query results"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if Locale is null"]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a Geocoder whose responses will be localized for the given Locale.", "history": "Added in API level 1", "FullName": "public Geocoder (Context context, Locale locale)"}, "getFromLocation(double,double,int)": {"Returns": [["@B_java#util#List_E@", "a list of Address objects. Returns null or empty list if no matches were found or there is no backend service available."]], "Parameters": [["double", "double: the latitude a point for the search"], ["double", "double: the longitude a point for the search"], ["int", "int: max number of addresses to return. Smaller numbers (1 to 5) are recommended"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if latitude is less than -90 or greater than 90"], ["@B_java#lang#IllegalArgumentException_E@", "if longitude is less than -180 or greater than 180"], ["@B_java#io#IOException_E@", "if the network is unavailable or any other I/O problem occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Returns an array of Addresses that are known to describe the area immediately surrounding the given latitude and longitude. The returned addresses will be localized for the locale provided to this class's constructor. The returned values may be obtained by means of a network lookup. The results are a best guess and are not guaranteed to be meaningful or correct. It may be useful to call this method from a thread separate from your primary UI thread.", "history": "Added in API level 1", "FullName": "public List<Address> getFromLocation (double latitude, double longitude, int maxResults)"}}, "Inheritance": [], "ClassName": "android.location.Geocoder", "ClassDesc": "A class for handling geocoding and reverse geocoding. Geocoding is the process of transforming a street address or other description of a location into a (latitude, longitude) coordinate. Reverse geocoding is the process of transforming a (latitude, longitude) coordinate into a (partial) address. The amount of detail in a reverse geocoded location description may vary, for example one might contain the full street address of the closest building, while another might contain only a city name and postal code. The Geocoder class requires a backend service that is not included in the core android framework. The Geocoder query methods will return an empty list if there no backend service in the platform. Use the isPresent() method to determine whether a Geocoder implementation exists."}