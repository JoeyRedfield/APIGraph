{"Functions": {"openSession()": {"Returns": [["@B_android#se#omapi#Session_E@", "a Session object to be used to create Channels. This value will never be null."]], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", "if something went wrong with the communicating to the Secure Element or the reader."]], "SeeAlso": [], "Permissions": [], "Description": "Connects to a Secure Element in this reader. This method prepares (initialises) the Secure Element for communication before the Session object is returned (e.g. powers the Secure Element by ICC ON if its not already on). There might be multiple sessions opened at the same time on the same reader. The system ensures the interleaving of APDUs between the respective sessions.", "history": "Added in API level 28", "FullName": "public Session openSession ()"}, "closeSessions()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Close all the sessions opened on this reader. All the channels opened by all these sessions will be closed.", "history": "Added in API level 28", "FullName": "public void closeSessions ()"}, "isSecureElementPresent()": {"Returns": [["boolean", "true if the SE is present, false otherwise."]], "Parameters": [], "Throws": [["@B_java#lang#IllegalStateException_E@", "if the service is not connected"]], "SeeAlso": [], "Permissions": [], "Description": "Check if a Secure Element is present in this reader.", "history": "Added in API level 28", "FullName": "public boolean isSecureElementPresent ()"}, "getSEService()": {"Returns": [["@B_android#se#omapi#SEService_E@", "the SEService object. This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the Secure Element service this reader is bound to.", "history": "Added in API level 28", "FullName": "public SEService getSEService ()"}, "getName()": {"Returns": [["@B_java#lang#String_E@", "the reader name, as a String. This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the name of this reader. If this reader is a SIM reader, then its name must be \"SIM[Slot]\". If the reader is a SD or micro SD reader, then its name must be \"SD[Slot]\" If the reader is a embedded SE reader, then its name must be \"eSE[Slot]\" Slot is a decimal number without leading zeros. The Numbering must start with 1 (e.g. SIM1, SIM2, ... or SD1, SD2, ... or eSE1, eSE2, ...). The slot number \u201c1\u201d for a reader is optional (SIM and SIM1 are both valid for the first SIM-reader, but if there are two readers then the second reader must be named SIM2). This applies also for other SD or SE readers.", "history": "Added in API level 28", "FullName": "public String getName ()"}}, "Inheritance": [], "ClassName": "android.se.omapi.Reader", "ClassDesc": "Instances of this class represent Secure Element Readers supported to this device. These Readers can be physical devices or virtual devices. They can be removable or not. They can contain Secure Element that can or cannot be removed."}