{"Functions": {"FilterOutputStream(java.io.OutputStream)": {"Returns": [], "Parameters": [["@B_java#io#OutputStream_E@", "OutputStream: the underlying output stream to be assigned to the field this.out for later use, or null if this instance is to be created without an underlying stream."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an output stream filter built on top of the specified underlying output stream.", "history": "Added in API level 1", "FullName": "public FilterOutputStream (OutputStream out)"}, "write(byte[])": {"Returns": [], "Parameters": [["byte[]", "byte: the data to be written."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": ["@B_java#io#FilterOutputStream#write_E@"], "Permissions": [], "Description": "Writes b.length bytes to this output stream. The write method of FilterOutputStream calls its write method of three arguments with the arguments b, 0, and b.length. Note that this method does not call the one-argument write method of its underlying stream with the single argument b.", "history": "Added in API level 1", "FullName": "public void write (byte[] b)"}, "flush()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": ["@B_java#io#FilterOutputStream#out_E@"], "Permissions": [], "Description": "Flushes this output stream and forces any buffered output bytes to be written out to the stream. The flush method of FilterOutputStream calls the flush method of its underlying output stream.", "history": "Added in API level 1", "FullName": "public void flush ()"}, "write(byte[], int, int)": {"Returns": [], "Parameters": [["byte[]", "byte: the data."], ["int", "int: the start offset in the data."], ["int", "int: the number of bytes to write."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": ["@B_java#io#FilterOutputStream#write_E@"], "Permissions": [], "Description": "Writes len bytes from the specified byte array starting at offset off to this output stream. The write method of FilterOutputStream calls the write method of one argument on each byte to output. Note that this method does not call the write method of its underlying input stream with the same arguments. Subclasses of FilterOutputStream should provide a more efficient implementation of this method.", "history": "added in API level 1", "FullName": "public void write (byte[] b, int off, int len)"}, "write(byte[],int,int)": {"Returns": [], "Parameters": [["byte[]", "byte: the data."], ["int", "int: the start offset in the data."], ["int", "int: the number of bytes to write."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": ["@B_java#io#FilterOutputStream#write_E@"], "Permissions": [], "Description": "Writes len bytes from the specified byte array starting at offset off to this output stream. The write method of FilterOutputStream calls the write method of one argument on each byte to output. Note that this method does not call the write method of its underlying input stream with the same arguments. Subclasses of FilterOutputStream should provide a more efficient implementation of this method.", "history": "Added in API level 1", "FullName": "public void write (byte[] b, int off, int len)"}, "close()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": ["@B_java#io#FilterOutputStream#flush_E@", "@B_java#io#FilterOutputStream#out_E@"], "Permissions": [], "Description": "Closes this output stream and releases any system resources associated with the stream. The close method of FilterOutputStream calls its flush method, and then calls the close method of its underlying output stream.", "history": "Added in API level 1", "FullName": "public void close ()"}, "write(int)": {"Returns": [], "Parameters": [["int", "int: the byte."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": [], "Permissions": [], "Description": "Writes the specified byte to this output stream. The write method of FilterOutputStream calls the write method of its underlying output stream, that is, it performs Implements the abstract", "history": "Added in API level 1", "FullName": "public void write (int b)"}}, "Inheritance": ["@B_java#io#OutputStream_E@"], "ClassName": "java.io.FilterOutputStream", "ClassDesc": "This class is the superclass of all classes that filter output streams. These streams sit on top of an already existing output stream (the The class FilterOutputStream itself simply overrides all methods of OutputStream with versions that pass all requests to the underlying output stream. Subclasses of FilterOutputStream may further override some of these methods as well as provide additional methods and fields."}