{"Functions": {"isParityAdjusted(byte[],int)": {"Returns": [["boolean", "true if the given DES key material is parity-adjusted, false otherwise."]], "Parameters": [["byte[]", "byte: the buffer with the DES key material."], ["int", "int: the offset in key, where the DES key material starts."]], "Throws": [["@B_java#security#InvalidKeyException_E@", "if the given key material is null, or starting at offset inclusive, is shorter than 8 bytes."]], "SeeAlso": [], "Permissions": [], "Description": "Checks if the given DES key material, starting at offset inclusive, is parity-adjusted.", "history": "Added in API level 1", "FullName": "public static boolean isParityAdjusted (byte[] key, int offset)"}, "DESKeySpec(byte[], int)": {"Returns": [], "Parameters": [["byte[]", "byte: the buffer with the DES key material. The first 8 bytes of the buffer beginning at offset inclusive are copied to protect against subsequent modification."], ["int", "int: the offset in key, where the DES key material starts."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if the given key material is null"], ["@B_java#security#InvalidKeyException_E@", "if the given key material, starting at offset inclusive, is shorter than 8 bytes."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a DESKeySpec object using the first 8 bytes in key, beginning at offset inclusive, as the key material for the DES key. The bytes that constitute the DES key are those between key[offset] and key[offset+7] inclusive.", "history": "added in API level 1", "FullName": "public DESKeySpec (byte[] key, int offset)"}, "getKey()": {"Returns": [["byte[]", "the DES key material. Returns a new array each time this method is called."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the DES key material.", "history": "Added in API level 1", "FullName": "public byte[] getKey ()"}, "DESKeySpec(byte[],int)": {"Returns": [], "Parameters": [["byte[]", "byte: the buffer with the DES key material. The first 8 bytes of the buffer beginning at offset inclusive are copied to protect against subsequent modification."], ["int", "int: the offset in key, where the DES key material starts."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if the given key material is null"], ["@B_java#security#InvalidKeyException_E@", "if the given key material, starting at offset inclusive, is shorter than 8 bytes."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a DESKeySpec object using the first 8 bytes in key, beginning at offset inclusive, as the key material for the DES key. The bytes that constitute the DES key are those between key[offset] and key[offset+7] inclusive.", "history": "Added in API level 1", "FullName": "public DESKeySpec (byte[] key, int offset)"}, "isParityAdjusted(byte[], int)": {"Returns": [["boolean", "true if the given DES key material is parity-adjusted, false otherwise."]], "Parameters": [["byte[]", "byte: the buffer with the DES key material."], ["int", "int: the offset in key, where the DES key material starts."]], "Throws": [["@B_java#security#InvalidKeyException_E@", "if the given key material is null, or starting at offset inclusive, is shorter than 8 bytes."]], "SeeAlso": [], "Permissions": [], "Description": "Checks if the given DES key material, starting at offset inclusive, is parity-adjusted.", "history": "added in API level 1", "FullName": "public static boolean isParityAdjusted (byte[] key, int offset)"}, "isWeak(byte[],int)": {"Returns": [["boolean", "true if the given DES key material is weak or semi-weak, false otherwise."]], "Parameters": [["byte[]", "byte: the buffer with the DES key material."], ["int", "int: the offset in key, where the DES key material starts."]], "Throws": [["@B_java#security#InvalidKeyException_E@", "if the given key material is null, or starting at offset inclusive, is shorter than 8 bytes."]], "SeeAlso": [], "Permissions": [], "Description": "Checks if the given DES key material is weak or semi-weak.", "history": "Added in API level 1", "FullName": "public static boolean isWeak (byte[] key, int offset)"}, "DESKeySpec(byte[])": {"Returns": [], "Parameters": [["byte[]", "byte: the buffer with the DES key material. The first 8 bytes of the buffer are copied to protect against subsequent modification."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if the given key material is null"], ["@B_java#security#InvalidKeyException_E@", "if the given key material is shorter than 8 bytes."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a DESKeySpec object using the first 8 bytes in key as the key material for the DES key. The bytes that constitute the DES key are those between key[0] and key[7] inclusive.", "history": "Added in API level 1", "FullName": "public DESKeySpec (byte[] key)"}, "isWeak(byte[], int)": {"Returns": [["boolean", "true if the given DES key material is weak or semi-weak, false otherwise."]], "Parameters": [["byte[]", "byte: the buffer with the DES key material."], ["int", "int: the offset in key, where the DES key material starts."]], "Throws": [["@B_java#security#InvalidKeyException_E@", "if the given key material is null, or starting at offset inclusive, is shorter than 8 bytes."]], "SeeAlso": [], "Permissions": [], "Description": "Checks if the given DES key material is weak or semi-weak.", "history": "added in API level 1", "FullName": "public static boolean isWeak (byte[] key, int offset)"}}, "Inheritance": [], "ClassName": "javax.crypto.spec.DESKeySpec", "ClassDesc": "This class specifies a DES key."}