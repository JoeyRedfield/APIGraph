{"Functions": {"attachBaseContext(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The new base context for this wrapper."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the base context for this ContextWrapper. All calls will then be delegated to the base context. Throws IllegalStateException if a base context has already been set.", "history": "", "FullName": "void attachBaseContext (Context base)"}, "MultiDexApplication()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "MultiDexApplication ()"}}, "Inheritance": ["@B_android#content#Context_E@", "@B_android#content#ContextWrapper_E@", "@B_android#app#Application_E@"], "ClassName": "android.support.multidex.MultiDexApplication", "ClassDesc": "Minimal MultiDex capable application. To use the legacy multidex library there is 3 possibility: Declare this class as the application in your AndroidManifest.xml. Have your @B_android#app#Application_E@ extends this class. Have your @B_android#app#Application_E@ override attachBaseContext starting with protected void attachBaseContext(Context base) { super.attachBaseContext(base); MultiDex.install(this);"}