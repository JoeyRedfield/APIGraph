{"Functions": {"setEnabled(boolean)": {"Returns": [["@B_android#support#v4#widget#AutoScrollHelper_E@", "The scroll helper, which may used to chain setter calls."]], "Parameters": [["boolean", "boolean: Whether the scroll helper is enabled."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether the scroll helper is enabled and should respond to touch events.", "history": "added in version 22.0.0", "FullName": "AutoScrollHelper setEnabled (boolean enabled)"}, "scrollTargetBy(int, int)": {"Returns": [], "Parameters": [["int", "int: The number of pixels to scroll by horizontally."], ["int", "int: The number of pixels to scroll by vertically."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override this method to scroll the target view by the specified number of pixels.", "history": "added in version 22.0.0", "FullName": "void scrollTargetBy (int deltaX, int deltaY)"}, "setActivationDelay(int)": {"Returns": [["@B_android#support#v4#widget#AutoScrollHelper_E@", "The scroll helper, which may used to chain setter calls."]], "Parameters": [["int", "int: The activation delay in milliseconds."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the delay after entering an activation edge before activation of auto-scrolling. By default, the activation delay is set to @B_android#view#ViewConfiguration#getTapTimeout_E@. Specifying a delay of zero will start auto-scrolling immediately after the touch position enters an activation edge.", "history": "added in version 22.0.0", "FullName": "AutoScrollHelper setActivationDelay (int delayMillis)"}, "setEdgeType(int)": {"Returns": [["@B_android#support#v4#widget#AutoScrollHelper_E@", "The scroll helper, which may used to chain setter calls."]], "Parameters": [["int", "int: The type of edge to use."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the activation edge type, one of: @B_android#support#v4#widget#AutoScrollHelper#EDGE_TYPE_INSIDE_E@ for edges that respond to touches inside the bounds of the host view. If touch moves outside the bounds, scrolling will stop. @B_android#support#v4#widget#AutoScrollHelper#EDGE_TYPE_INSIDE_EXTEND_E@ for inside edges that continued to scroll when touch moves outside the bounds of the host view. @B_android#support#v4#widget#AutoScrollHelper#EDGE_TYPE_OUTSIDE_E@ for edges that only respond to touches that move outside the bounds of the host view.", "history": "added in version 22.0.0", "FullName": "AutoScrollHelper setEdgeType (int type)"}, "setExclusive(boolean)": {"Returns": [["@B_android#support#v4#widget#AutoScrollHelper_E@", "The scroll helper, which may used to chain setter calls."]], "Parameters": [["boolean", "boolean: True to exclusively handle touch events during scrolling, false to allow the target view to receive all touch events."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enables or disables exclusive handling of touch events during scrolling. By default, exclusive handling is disabled and the target view receives all touch events. When enabled, @B_android#support#v4#widget#AutoScrollHelper#onTouch_E@ will return true if the helper is currently scrolling and false otherwise.", "history": "added in version 22.0.0", "FullName": "AutoScrollHelper setExclusive (boolean exclusive)"}, "setRelativeEdges(float, float)": {"Returns": [["@B_android#support#v4#widget#AutoScrollHelper_E@", "The scroll helper, which may used to chain setter calls."]], "Parameters": [["float", "float: The horizontal edge size as a fraction of the host view width, or @B_android#support#v4#widget#AutoScrollHelper#RELATIVE_UNSPECIFIED_E@ to always use the maximum value."], ["float", "float: The vertical edge size as a fraction of the host view height, or @B_android#support#v4#widget#AutoScrollHelper#RELATIVE_UNSPECIFIED_E@ to always use the maximum value."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the activation edge size relative to the host view's dimensions. If both relative and maximum edges are specified, the maximum edge will be used to constrain the calculated relative edge size.", "history": "added in version 22.0.0", "FullName": "AutoScrollHelper setRelativeEdges (float horizontal, float vertical)"}, "isEnabled()": {"Returns": [["boolean", "True if this helper is enabled and responding to touch events."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "boolean isEnabled ()"}, "setMaximumEdges(float, float)": {"Returns": [["@B_android#support#v4#widget#AutoScrollHelper_E@", "The scroll helper, which may used to chain setter calls."]], "Parameters": [["float", "float: The maximum horizontal edge size in pixels, or @B_android#support#v4#widget#AutoScrollHelper#NO_MAX_E@ to use the unconstrained calculated relative value."], ["float", "float: The maximum vertical edge size in pixels, or @B_android#support#v4#widget#AutoScrollHelper#NO_MAX_E@ to use the unconstrained calculated relative value."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the absolute maximum edge size. If relative edge size is not specified, activation edges will always be the maximum edge size. If both relative and maximum edges are specified, the maximum edge will be used to constrain the calculated relative edge size.", "history": "added in version 22.0.0", "FullName": "AutoScrollHelper setMaximumEdges (float horizontalMax, float verticalMax)"}, "setMaximumVelocity(float, float)": {"Returns": [["@B_android#support#v4#widget#AutoScrollHelper_E@", "The scroll helper, which may used to chain setter calls."]], "Parameters": [["float", "float: The maximum horizontal scrolling velocity, or @B_android#support#v4#widget#AutoScrollHelper#NO_MAX_E@ to leave the relative value unconstrained."], ["float", "float: The maximum vertical scrolling velocity, or @B_android#support#v4#widget#AutoScrollHelper#NO_MAX_E@ to leave the relative value unconstrained."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the absolute maximum scrolling velocity. If relative velocity is not specified, scrolling will always reach the same maximum velocity. If both relative and maximum velocities are specified, the maximum velocity will be used to clamp the calculated relative velocity.", "history": "added in version 22.0.0", "FullName": "AutoScrollHelper setMaximumVelocity (float horizontalMax, float verticalMax)"}, "setRelativeVelocity(float, float)": {"Returns": [["@B_android#support#v4#widget#AutoScrollHelper_E@", "The scroll helper, which may used to chain setter calls."]], "Parameters": [["float", "float: The target horizontal velocity as a fraction of the host view width per second, or @B_android#support#v4#widget#AutoScrollHelper#RELATIVE_UNSPECIFIED_E@ to ignore."], ["float", "float: The target vertical velocity as a fraction of the host view height per second, or @B_android#support#v4#widget#AutoScrollHelper#RELATIVE_UNSPECIFIED_E@ to ignore."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the target scrolling velocity relative to the host view's dimensions. If both relative and maximum velocities are specified, the maximum velocity will be used to clamp the calculated relative velocity.", "history": "added in version 22.0.0", "FullName": "AutoScrollHelper setRelativeVelocity (float horizontal, float vertical)"}, "setRampUpDuration(int)": {"Returns": [["@B_android#support#v4#widget#AutoScrollHelper_E@", "The scroll helper, which may used to chain setter calls."]], "Parameters": [["int", "int: The ramp-up duration in milliseconds."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the amount of time after activation of auto-scrolling that is takes to reach target velocity for the current touch position. Specifying a duration greater than zero prevents sudden jumps in velocity.", "history": "added in version 22.0.0", "FullName": "AutoScrollHelper setRampUpDuration (int durationMillis)"}, "isExclusive()": {"Returns": [["boolean", "True if exclusive handling of touch events during scrolling is enabled, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v4#widget#AutoScrollHelper#setExclusive_E@"], "Permissions": [], "Description": "Indicates whether the scroll helper handles touch events exclusively during scrolling.", "history": "added in version 22.0.0", "FullName": "boolean isExclusive ()"}, "AutoScrollHelper(android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: The view to automatically scroll."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new helper for scrolling the specified target view. The resulting helper may be configured by chaining setter calls and should be set as a touch listener on the target view. By default, the helper is disabled and will not respond to touch events until it is enabled using @B_android#support#v4#widget#AutoScrollHelper#setEnabled_E@.", "history": "added in version 22.0.0", "FullName": "AutoScrollHelper (View target)"}, "setRampDownDuration(int)": {"Returns": [["@B_android#support#v4#widget#AutoScrollHelper_E@", "The scroll helper, which may used to chain setter calls."]], "Parameters": [["int", "int: The ramp-down duration in milliseconds."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the amount of time after de-activation of auto-scrolling that is takes to slow to a stop. Specifying a duration greater than zero prevents sudden jumps in velocity.", "history": "added in version 22.0.0", "FullName": "AutoScrollHelper setRampDownDuration (int durationMillis)"}, "canTargetScrollVertically(int)": {"Returns": [["boolean", "true if the target view is able to vertically scroll in the specified direction."]], "Parameters": [["int", "int: Negative to check scrolling up, positive to check scrolling down."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override this method to return whether the target view can be scrolled vertically in a certain direction.", "history": "added in version 22.0.0", "FullName": "boolean canTargetScrollVertically (int direction)"}, "setMinimumVelocity(float, float)": {"Returns": [["@B_android#support#v4#widget#AutoScrollHelper_E@", "The scroll helper, which may used to chain setter calls."]], "Parameters": [["float", "float: The minimum horizontal scrolling velocity, or @B_android#support#v4#widget#AutoScrollHelper#NO_MIN_E@ to leave the relative value unconstrained."], ["float", "float: The minimum vertical scrolling velocity, or @B_android#support#v4#widget#AutoScrollHelper#NO_MIN_E@ to leave the relative value unconstrained."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the absolute minimum scrolling velocity. If both relative and minimum velocities are specified, the minimum velocity will be used to clamp the calculated relative velocity.", "history": "added in version 22.0.0", "FullName": "AutoScrollHelper setMinimumVelocity (float horizontalMin, float verticalMin)"}, "canTargetScrollHorizontally(int)": {"Returns": [["boolean", "true if the target view is able to horizontally scroll in the specified direction."]], "Parameters": [["int", "int: Negative to check scrolling left, positive to check scrolling right."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override this method to return whether the target view can be scrolled horizontally in a certain direction.", "history": "added in version 22.0.0", "FullName": "boolean canTargetScrollHorizontally (int direction)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v4.widget.AutoScrollHelper", "ClassDesc": "AutoScrollHelper is a utility class for adding automatic edge-triggered scrolling to Views. @B_android#support#v4#widget#AutoScrollHelper#scrollTargetBy_E@, @B_android#support#v4#widget#AutoScrollHelper#canTargetScrollHorizontally_E@, and @B_android#support#v4#widget#AutoScrollHelper#canTargetScrollVertically_E@ methods. See @B_android#support#v4#widget#ListViewAutoScrollHelper_E@ for a https:##developer#android#com@B_android#widget#ListView_E@ -specific implementation. As the user touches closer to the extreme edge of the activation area, scrolling accelerates up to a maximum velocity. When using the default edge type, @B_android#support#v4#widget#AutoScrollHelper#EDGE_TYPE_INSIDE_EXTEND_E@, moving outside of the view bounds will scroll at the maximum velocity. The following activation properties may be configured: Delay after entering activation area before auto-scrolling begins, see @B_android#support#v4#widget#AutoScrollHelper#setActivationDelay_E@. Default value is https:##developer#android#com@B_android#view#ViewConfiguration#getTapTimeout_E@ to avoid conflicting with taps. Location of activation areas, see @B_android#support#v4#widget#AutoScrollHelper#setEdgeType_E@. Default value is @B_android#support#v4#widget#AutoScrollHelper#EDGE_TYPE_INSIDE_EXTEND_E@. Size of activation areas relative to view size, see @B_android#support#v4#widget#AutoScrollHelper#setRelativeEdges_E@. Default value is 20% for both vertical and horizontal edges. Maximum size used to constrain relative size, see @B_android#support#v4#widget#AutoScrollHelper#setMaximumEdges_E@. Default value is @B_android#support#v4#widget#AutoScrollHelper#NO_MAX_E@. @B_android#support#v4#widget#AutoScrollHelper#scrollTargetBy_E@ to apply new scrolling offsets. The following scrolling properties may be configured: Acceleration ramp-up duration, see @B_android#support#v4#widget#AutoScrollHelper#setRampUpDuration_E@. Default value is 500 milliseconds. Acceleration ramp-down duration, see @B_android#support#v4#widget#AutoScrollHelper#setRampDownDuration_E@. Default value is 500 milliseconds. Target velocity relative to view size, see @B_android#support#v4#widget#AutoScrollHelper#setRelativeVelocity_E@. Default value is 100% per second for both vertical and horizontal. Minimum velocity used to constrain relative velocity, see @B_android#support#v4#widget#AutoScrollHelper#setMinimumVelocity_E@. When set, scrolling will accelerate to the larger of either this value or the relative target value. Default value is approximately 5 centimeters or 315 dips per second. Maximum velocity used to constrain relative velocity, see @B_android#support#v4#widget#AutoScrollHelper#setMaximumVelocity_E@. Default value is approximately 25 centimeters or 1575 dips per second."}