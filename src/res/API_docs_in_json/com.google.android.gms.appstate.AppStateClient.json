{"Functions": {"connect()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_com#google#android#gms#common#GooglePlayServicesClient#connect_E@"], "Permissions": [], "Description": "Connect to the app state service. This method will return immediately, and @B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks#onConnected_E@ will be called if the connection is successful.", "history": "", "FullName": "public void connect ()"}, "resolveState(com.google.android.gms.appstate.OnStateLoadedListener, int, java.lang.String, byte[])": {"Returns": [], "Parameters": [["@B_com#google#android#gms#appstate#OnStateLoadedListener_E@", "The listener that is called when the operation is complete. This listener is required to be non-null. The listener is called on the main thread."], ["int", "The key to resolve data for. Must be a non-negative integer less than @B_com#google#android#gms#appstate#AppStateClient#getMaxNumKeys_E@."], ["String", "Version code from previous onStateConflict call."], ["byte[]", "Data to submit as the current data. null is a valid value here. May be a maximum of @B_com#google#android#gms#appstate#AppStateClient#getMaxStateSize_E@ bytes."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Resolve a previously detected conflict in app state data. Note that it is still possible to receive a conflict callback after this call. This will occur if data on the server continues to change. In this case, resolution should be retried until a successful status is returned. The value of resolvedVersion passed here must correspond to the value provided in the @B_com#google#android#gms#appstate#OnStateLoadedListener#onStateConflict_E@ call. The result is delivered to the given listener on the main thread. If @B_com#google#android#gms#appstate#AppStateClient#disconnect_E@ is called before the result is ready it will not be delivered.", "history": "", "FullName": "public void resolveState (OnStateLoadedListener listener, int stateKey, String resolvedVersion, byte[] resolvedData)"}, "isConnected()": {"Returns": [["", "true if the client is connected to the service."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks if the client is currently connected to the service, so that requests to other methods will succeed. Applications should guard client actions caused by the user with a call to this method.", "history": "", "FullName": "public boolean isConnected ()"}, "unregisterConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient.OnConnectionFailedListener)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#GooglePlayServicesClient#OnConnectionFailedListener_E@", "the listener to unregister."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes a connection failed listener from the GooglePlayServicesClient. Note that removing a listener does not generate any callbacks. If the specified listener is not currently registered to receive connection failed events, this method will have no effect.", "history": "", "FullName": "public void unregisterConnectionFailedListener (GooglePlayServicesClient.OnConnectionFailedListener listener)"}, "isConnecting()": {"Returns": [["", "true if the client is attempting to connect to the service."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks if the client is attempting to connect to the service.", "history": "", "FullName": "public boolean isConnecting ()"}, "signOut(com.google.android.gms.appstate.OnSignOutCompleteListener)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#appstate#OnSignOutCompleteListener_E@", "The listener that is called when sign-out is complete. This listener is required to be non-null. The listener is called on the main thread."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asynchronously signs the current user out. The listener is called when sign-out is complete. If @B_com#google#android#gms#appstate#AppStateClient#disconnect_E@ is called before sign-out is complete, the listener will not be called.", "history": "", "FullName": "public void signOut (OnSignOutCompleteListener listener)"}, "disconnect()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Closes the connection to Google Play services. No calls can be made on this object after calling this method.", "history": "", "FullName": "public void disconnect ()"}, "getMaxStateSize()": {"Returns": [["", "The maximum state size that can be stored with a given state key in bytes."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the maximum app state size per state key in bytes. Guaranteed to be at least 256 KB. May increase in the future. If the service cannot be reached for some reason, this will return @B_com#google#android#gms#appstate#AppStateClient#STATUS_CLIENT_RECONNECT_REQUIRED_E@. In this case, no further operations should be attempted until after the client has reconnected.", "history": "", "FullName": "public int getMaxStateSize ()"}, "getMaxNumKeys()": {"Returns": [["", "The maximum number of keys that an app can use for data."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the maximum number of keys that an app can store data in simultaneously. If the service cannot be reached for some reason, this will return @B_com#google#android#gms#appstate#AppStateClient#STATUS_CLIENT_RECONNECT_REQUIRED_E@. In this case, no further operations should be attempted until after the client has reconnected.", "history": "", "FullName": "public int getMaxNumKeys ()"}, "updateState(int, byte[])": {"Returns": [], "Parameters": [["int", "The key to update data for. Must be a non-negative integer less than @B_com#google#android#gms#appstate#AppStateClient#getMaxNumKeys_E@."], ["byte[]", "The data to store. May be a maximum of @B_com#google#android#gms#appstate#AppStateClient#getMaxStateSize_E@ bytes."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Updates app state for the current app. The data provided here is developer-specified and can be in any format appropriate for the app. This method updates the local copy of the app state and syncs the changes to the server. If the local data conflicts with the data on the server, this will be indicated the next time you call @B_com#google#android#gms#appstate#AppStateClient#loadState_E@. This is the fire-and-forget form of the API. Use this form if you don't need to know the results of the operation immediately. For most applications, this will be the preferred API to use. See @B_com#google#android#gms#appstate#AppStateClient#updateStateImmediate_E@ if you need the results delivered to your application.", "history": "", "FullName": "public void updateState (int stateKey, byte[] data)"}, "unregisterConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient.ConnectionCallbacks)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks_E@", "the listener to unregister."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes a connection listener from this GooglePlayServicesClient. Note that removing a listener does not generate any callbacks. If the specified listener is not currently registered to receive connection events, this method will have no effect.", "history": "", "FullName": "public void unregisterConnectionCallbacks (GooglePlayServicesClient.ConnectionCallbacks listener)"}, "isConnectionCallbacksRegistered(com.google.android.gms.common.GooglePlayServicesClient.ConnectionCallbacks)": {"Returns": [["", "true if the specified listener is currently registered to receive connection events."]], "Parameters": [["@B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks_E@", "The listener to check for."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the specified listener is currently registered to receive connection events.", "history": "", "FullName": "public boolean isConnectionCallbacksRegistered (GooglePlayServicesClient.ConnectionCallbacks listener)"}, "deleteState(com.google.android.gms.appstate.OnStateDeletedListener, int)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#appstate#OnStateDeletedListener_E@", "The listener that is called when the load is complete. This listener is required to be non-null. The listener is called on the main thread."], ["int", "The key to clear data for. Must be a non-negative integer less than @B_com#google#android#gms#appstate#AppStateClient#getMaxNumKeys_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Delete the state data for the current app. This method will delete all data associated with the provided key, as well as removing the key itself. Note that this API is not version safe. This means that it is possible to accidentally delete a user's data using this API. For a version safe alternative, consider using @B_com#google#android#gms#appstate#AppStateClient#updateState_E@ with null data instead.", "history": "", "FullName": "public void deleteState (OnStateDeletedListener listener, int stateKey)"}, "loadState(com.google.android.gms.appstate.OnStateLoadedListener, int)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#appstate#OnStateLoadedListener_E@", "The listener that is called when the load is complete. This listener is required to be non-null. The listener is called on the main thread."], ["int", "The key to load data for. Must be a non-negative integer less than @B_com#google#android#gms#appstate#AppStateClient#getMaxNumKeys_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asynchronously loads saved state for the current app. The result is delivered to the given listener on the main thread. If @B_com#google#android#gms#appstate#AppStateClient#disconnect_E@ is called before the result is ready it will not be delivered.", "history": "", "FullName": "public void loadState (OnStateLoadedListener listener, int stateKey)"}, "registerConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient.OnConnectionFailedListener)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#GooglePlayServicesClient#OnConnectionFailedListener_E@", "the listener where the results of the asynchronous @B_com#google#android#gms#appstate#AppStateClient#connect_E@ call are delivered."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers a listener to receive connection failed events from this GooglePlayServicesClient. Unlike @B_com#google#android#gms#common#GooglePlayServicesClient#registerConnectionCallbacks_E@, if the service is not already connected, the listener's @B_com#google#android#gms#common#GooglePlayServicesClient#OnConnectionFailedListener#onConnectionFailed_E@ method will not be called immediately. Applications should balance calls to this method with calls to @B_com#google#android#gms#common#GooglePlayServicesClient#unregisterConnectionFailedListener_E@ to avoid leaking resources. If the specified listener is already registered to receive connection failed events, this method will not add a duplicate entry for the same listener. Note that the order of messages received here may not be stable, so clients should not rely on the order that multiple listeners receive events in.", "history": "", "FullName": "public void registerConnectionFailedListener (GooglePlayServicesClient.OnConnectionFailedListener listener)"}, "reconnect()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_com#google#android#gms#appstate#AppStateClient#connect_E@", "@B_com#google#android#gms#appstate#AppStateClient#disconnect_E@", "@B_com#google#android#gms#common#GooglePlayServicesClient#connect_E@"], "Permissions": [], "Description": "Closes the current connection to Google Play services and creates a new connection. This method closes the current connection then returns immediately and reconnects to the service in the background. This method will call @B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks#onDisconnected_E@ followed by either @B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks#onConnected_E@ if the connection is successful or @B_com#google#android#gms#common#GooglePlayServicesClient#OnConnectionFailedListener#onConnectionFailed_E@ on a failure.", "history": "", "FullName": "public void reconnect ()"}, "updateStateImmediate(com.google.android.gms.appstate.OnStateLoadedListener, int, byte[])": {"Returns": [], "Parameters": [["@B_com#google#android#gms#appstate#OnStateLoadedListener_E@", "The listener that is called when the write operation is complete. This listener is required to be non-null. The listener is called on the main thread."], ["int", "The key to update data for. Must be a non-negative integer less than @B_com#google#android#gms#appstate#AppStateClient#getMaxNumKeys_E@."], ["byte[]", "The data to store. May be a maximum of @B_com#google#android#gms#appstate#AppStateClient#getMaxStateSize_E@ bytes."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Updates app state for the current app. The data provided here is developer-specified and can be in any format appropriate for the app. This method will attempt to update the data on the server immediately. The results of this operation will be delivered on the provided listener's @B_com#google#android#gms#appstate#OnStateLoadedListener#onStateLoaded_E@ method. The result is delivered to the given listener on the main thread. If @B_com#google#android#gms#appstate#AppStateClient#disconnect_E@ is called before the result is ready it will not be delivered.", "history": "", "FullName": "public void updateStateImmediate (OnStateLoadedListener listener, int stateKey, byte[] data)"}, "registerConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient.ConnectionCallbacks)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks_E@", "the listener where the results of the asynchronous @B_com#google#android#gms#appstate#AppStateClient#connect_E@ call are delivered."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers a listener to receive connection events from this GooglePlayServicesClient. If the service is already connected, the listener's @B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks#onConnected_E@ method will be called immediately. Applications should balance calls to this method with calls to @B_com#google#android#gms#common#GooglePlayServicesClient#unregisterConnectionCallbacks_E@ to avoid leaking resources. If the specified listener is already registered to receive connection events, this method will not add a duplicate entry for the same listener, but @B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks#onConnected_E@ method if currently connected. Note that the order of messages received here may not be stable, so clients should not rely on the order that multiple listeners receive events in.", "history": "", "FullName": "public void registerConnectionCallbacks (GooglePlayServicesClient.ConnectionCallbacks listener)"}, "isConnectionFailedListenerRegistered(com.google.android.gms.common.GooglePlayServicesClient.OnConnectionFailedListener)": {"Returns": [["", "true if the specified listener is currently registered to receive connection failed events."]], "Parameters": [["@B_com#google#android#gms#common#GooglePlayServicesClient#OnConnectionFailedListener_E@", "The listener to check for."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the specified listener is currently registered to receive connection failed events.", "history": "", "FullName": "public boolean isConnectionFailedListenerRegistered (GooglePlayServicesClient.OnConnectionFailedListener listener)"}, "listStates(com.google.android.gms.appstate.OnStateListLoadedListener)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#appstate#OnStateListLoadedListener_E@", "The listener that is called when the load is complete. This listener is required to be non-null. The listener is called on the main thread."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asynchronously lists all the saved states for the current app. The result is delivered to the given listener on the main thread. If @B_com#google#android#gms#appstate#AppStateClient#disconnect_E@ is called before the result is ready it will not be delivered.", "history": "", "FullName": "public void listStates (OnStateListLoadedListener listener)"}, "signOut()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asynchronously signs the current user out.", "history": "", "FullName": "public void signOut ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.appstate.AppStateClient", "ClassDesc": "Main public API entry point for the AppState client."}