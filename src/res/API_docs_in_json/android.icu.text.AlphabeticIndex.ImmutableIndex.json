{"Functions": {"getBucket(int)": {"Returns": [["@B_android#icu#text#AlphabeticIndex#Bucket_E@", "the index-th bucket"]], "Parameters": [["int", "int: bucket number"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the index-th bucket. Returns null if the index is out of range.", "history": "Added in API level 24", "FullName": "public Bucket<V> getBucket (int index)"}, "iterator()": {"Returns": [["@B_java#util#Iterator_E@", "an Iterator."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an iterator over elements of type T.", "history": "Added in API level 24", "FullName": "public Iterator<Bucket<V>> iterator ()"}, "getBucketCount()": {"Returns": [["int", "the number of index buckets"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of index buckets and labels, including underflow/inflow/overflow.", "history": "Added in API level 24", "FullName": "public int getBucketCount ()"}, "getBucketIndex(java.lang.CharSequence)": {"Returns": [["int", "the bucket number for the name"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: the string to be sorted into an index bucket"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Finds the index bucket for the given name and returns the number of that bucket. Use @B_android#icu#text#AlphabeticIndex#ImmutableIndex#getBucket_E@ to get the bucket's properties.", "history": "Added in API level 24", "FullName": "public int getBucketIndex (CharSequence name)"}}, "Inheritance": [], "ClassName": "android.icu.text.AlphabeticIndex.ImmutableIndex<V>", "ClassDesc": "Immutable, thread-safe version of @B_android#icu#text#AlphabeticIndex_E@. This class provides thread-safe methods for bucketing, and random access to buckets and their properties, but does not offer adding records to the index."}