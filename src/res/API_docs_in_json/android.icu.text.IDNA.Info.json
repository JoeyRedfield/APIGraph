{"Functions": {"IDNA.Info()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor.", "history": "Added in API level 24", "FullName": "public IDNA.Info ()"}, "hasErrors()": {"Returns": [["boolean", "true if there were processing errors"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Were there IDNA processing errors?", "history": "Added in API level 24", "FullName": "public boolean hasErrors ()"}, "getErrors()": {"Returns": [["@B_java#util#Set_E@", "set of processing errors (modifiable, and not null)"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a set indicating IDNA processing errors.", "history": "Added in API level 24", "FullName": "public Set<IDNA.Error> getErrors ()"}, "isTransitionalDifferent()": {"Returns": [["boolean", "true if transitional and nontransitional processing produce different results"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if transitional and nontransitional processing produce different results. This is the case when the input label or domain name contains one or more deviation characters outside a Punycode label (see UTS #46). With nontransitional processing, such characters are copied to the destination string. With transitional processing, such characters are mapped (sharp s/sigma) or removed (joiner/nonjoiner).", "history": "Added in API level 24", "FullName": "public boolean isTransitionalDifferent ()"}}, "Inheritance": [], "ClassName": "android.icu.text.IDNA.Info", "ClassDesc": "Output container for IDNA processing errors. The Info class is not suitable for subclassing."}