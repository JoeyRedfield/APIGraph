{"Functions": {"getResources()": {"Returns": [["@B_android#content#res#Resources_E@", "a Resources instance for the application's package"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a Resources instance for the application's package. @B_android#content#Context#getAssets_E@. For example, they should share the same @B_android#content#res#Configuration_E@ object.", "history": "Added in API level 1", "FullName": "public Resources getResources ()"}, "getSystemService(java.lang.String)": {"Returns": [["@B_java#lang#Object_E@", "The service or null if the name does not exist."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the desired service. Value is @B_android#content#Context#POWER_SERVICE_E@, @B_android#content#Context#WINDOW_SERVICE_E@, @B_android#content#Context#LAYOUT_INFLATER_SERVICE_E@, @B_android#content#Context#ACCOUNT_SERVICE_E@, @B_android#content#Context#ACTIVITY_SERVICE_E@, @B_android#content#Context#ALARM_SERVICE_E@, @B_android#content#Context#NOTIFICATION_SERVICE_E@, @B_android#content#Context#ACCESSIBILITY_SERVICE_E@, @B_android#content#Context#CAPTIONING_SERVICE_E@, @B_android#content#Context#KEYGUARD_SERVICE_E@, @B_android#content#Context#LOCATION_SERVICE_E@, @B_android#content#Context#SEARCH_SERVICE_E@, @B_android#content#Context#SENSOR_SERVICE_E@, android.content.Context.SENSOR_PRIVACY_SERVICE, @B_android#content#Context#STORAGE_SERVICE_E@, @B_android#content#Context#STORAGE_STATS_SERVICE_E@, @B_android#content#Context#WALLPAPER_SERVICE_E@, android.content.Context.TIME_ZONE_RULES_MANAGER_SERVICE, @B_android#content#Context#VIBRATOR_SERVICE_E@, @B_android#content#Context#CONNECTIVITY_SERVICE_E@, @B_android#content#Context#IPSEC_SERVICE_E@, android.content.Context.TEST_NETWORK_SERVICE, @B_android#content#Context#NETWORK_STATS_SERVICE_E@, @B_android#content#Context#WIFI_SERVICE_E@, @B_android#content#Context#WIFI_AWARE_SERVICE_E@, @B_android#content#Context#WIFI_P2P_SERVICE_E@, android.content.Context.WIFI_SCANNING_SERVICE, @B_android#content#Context#WIFI_RTT_RANGING_SERVICE_E@, @B_android#content#Context#NSD_SERVICE_E@, @B_android#content#Context#AUDIO_SERVICE_E@, @B_android#content#Context#FINGERPRINT_SERVICE_E@, @B_android#content#Context#BIOMETRIC_SERVICE_E@, @B_android#content#Context#MEDIA_ROUTER_SERVICE_E@, @B_android#content#Context#TELEPHONY_SERVICE_E@, @B_android#content#Context#TELEPHONY_SUBSCRIPTION_SERVICE_E@, @B_android#content#Context#CARRIER_CONFIG_SERVICE_E@, @B_android#content#Context#TELECOM_SERVICE_E@, @B_android#content#Context#CLIPBOARD_SERVICE_E@, @B_android#content#Context#INPUT_METHOD_SERVICE_E@, @B_android#content#Context#TEXT_SERVICES_MANAGER_SERVICE_E@, @B_android#content#Context#TEXT_CLASSIFICATION_SERVICE_E@, @B_android#content#Context#APPWIDGET_SERVICE_E@, android.content.Context.ROLLBACK_SERVICE, @B_android#content#Context#DROPBOX_SERVICE_E@, @B_android#content#Context#DEVICE_POLICY_SERVICE_E@, @B_android#content#Context#UI_MODE_SERVICE_E@, @B_android#content#Context#DOWNLOAD_SERVICE_E@, @B_android#content#Context#NFC_SERVICE_E@, @B_android#content#Context#BLUETOOTH_SERVICE_E@, @B_android#content#Context#USB_SERVICE_E@, @B_android#content#Context#LAUNCHER_APPS_SERVICE_E@, @B_android#content#Context#INPUT_SERVICE_E@, @B_android#content#Context#DISPLAY_SERVICE_E@, @B_android#content#Context#USER_SERVICE_E@, @B_android#content#Context#RESTRICTIONS_SERVICE_E@, @B_android#content#Context#APP_OPS_SERVICE_E@, @B_android#content#Context#ROLE_SERVICE_E@, @B_android#content#Context#CAMERA_SERVICE_E@, @B_android#content#Context#PRINT_SERVICE_E@, @B_android#content#Context#CONSUMER_IR_SERVICE_E@, @B_android#content#Context#TV_INPUT_SERVICE_E@, @B_android#content#Context#USAGE_STATS_SERVICE_E@, @B_android#content#Context#MEDIA_SESSION_SERVICE_E@, @B_android#content#Context#BATTERY_SERVICE_E@, @B_android#content#Context#JOB_SCHEDULER_SERVICE_E@, @B_android#content#Context#MEDIA_PROJECTION_SERVICE_E@, @B_android#content#Context#MIDI_SERVICE_E@, android.content.Context.RADIO_SERVICE, @B_android#content#Context#HARDWARE_PROPERTIES_SERVICE_E@, @B_android#content#Context#SHORTCUT_SERVICE_E@, @B_android#content#Context#SYSTEM_HEALTH_SERVICE_E@, @B_android#content#Context#COMPANION_DEVICE_SERVICE_E@, @B_android#content#Context#CROSS_PROFILE_APPS_SERVICE_E@, or android.content.Context.PERMISSION_SERVICE This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the handle to a system-level service by name. The class of the returned object varies by the requested name. Currently available names are: Note: System services obtained via this API may be closely associated with the Context in which they are obtained from. In general, do not share the service objects between various different contexts (Activities, Applications, Services, Providers, etc.) Note: Instant apps, for which @B_android#content#pm#PackageManager#isInstantApp_E@ returns true, don't have access to the following system services: @B_android#content#Context#DEVICE_POLICY_SERVICE_E@, @B_android#content#Context#FINGERPRINT_SERVICE_E@, @B_android#content#Context#KEYGUARD_SERVICE_E@, @B_android#content#Context#SHORTCUT_SERVICE_E@, @B_android#content#Context#USB_SERVICE_E@, @B_android#content#Context#WALLPAPER_SERVICE_E@, @B_android#content#Context#WIFI_P2P_SERVICE_E@, @B_android#content#Context#WIFI_SERVICE_E@, @B_android#content#Context#WIFI_AWARE_SERVICE_E@. For these services this method will return null. Generally, if you are running as an instant app you should always check whether the result of this method is null. Note: When implementing this method, keep in mind that new services can be added on newer Android releases, so if you're looking for just the explicit names mentioned above, make sure to return null when you don't recognize the name \u2014 if you throw a @B_java#lang#RuntimeException_E@ exception instead, you're app might break on new Android releases.", "history": "Added in API level 1", "FullName": "public Object getSystemService (String name)"}, "applyOverrideConfiguration(android.content.res.Configuration)": {"Returns": [], "Parameters": [["@B_android#content#res#Configuration_E@", "Configuration no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Call to set an \"override configuration\" on this context -- this is a configuration that replies one or more values of the standard configuration that is applied to the context. See @B_android#content#Context#createConfigurationContext_E@ for more information. This method can only be called once, and must be called before any calls to @B_android#view#ContextThemeWrapper#getResources_E@ or @B_android#view#ContextThemeWrapper#getAssets_E@ are made.", "history": "Added in API level 17", "FullName": "public void applyOverrideConfiguration (Configuration overrideConfiguration)"}, "setTheme(android.content.res.Resources.Theme)": {"Returns": [], "Parameters": [["@B_android#content#res#Resources#Theme_E@", "Resources.Theme: Theme to consume in the wrapper, a value of null resets the theme to the default This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the configure the current theme. If null is provided then the default Theme is returned on the next call to @B_android#view#ContextThemeWrapper#getTheme_E@", "history": "Added in API level 29", "FullName": "public void setTheme (Resources.Theme theme)"}, "ContextThemeWrapper(android.content.Context, int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: the base context"], ["int", "int: the resource ID of the theme to be applied on top of the base context's theme"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new context wrapper with the specified theme. The specified theme will be applied on top of the base context's theme. Any attributes not explicitly defined in the theme identified by", "history": "added in API level 1", "FullName": "public ContextThemeWrapper (Context base, int themeResId)"}, "getAssets()": {"Returns": [["@B_android#content#res#AssetManager_E@", "an AssetManager instance for the application's package"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an AssetManager instance for the application's package. @B_android#content#Context#getResources_E@. For example, they should share the same @B_android#content#res#Configuration_E@ object.", "history": "Added in API level 1", "FullName": "public AssetManager getAssets ()"}, "onApplyThemeResource(android.content.res.Resources.Theme,int,boolean)": {"Returns": [], "Parameters": [["@B_android#content#res#Resources#Theme_E@", "Resources.Theme: the theme being modified"], ["int", "int: the style resource being applied to theme"], ["boolean", "boolean: true if this is the first time a style is being applied to theme"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called by @B_android#view#ContextThemeWrapper#setTheme_E@ and @B_android#view#ContextThemeWrapper#getTheme_E@ to apply a theme resource to the current Theme object. May be overridden to change the default (simple) behavior. This method will not be called in multiple threads simultaneously.", "history": "Added in API level 1", "FullName": "protected void onApplyThemeResource (Resources.Theme theme, int resId, boolean first)"}, "attachBaseContext(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The new base context for this wrapper."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the base context for this ContextWrapper. All calls will then be delegated to the base context. Throws IllegalStateException if a base context has already been set.", "history": "Added in API level 1", "FullName": "protected void attachBaseContext (Context newBase)"}, "setTheme(int)": {"Returns": [], "Parameters": [["int", "int: The style resource describing the theme."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the base theme for this context. Note that this should be called before any views are instantiated in the Context (for example before calling @B_android#app#Activity#setContentView_E@ or @B_android#view#LayoutInflater#inflate_E@).", "history": "Added in API level 1", "FullName": "public void setTheme (int resid)"}, "ContextThemeWrapper(android.content.Context,int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: the base context"], ["int", "int: the resource ID of the theme to be applied on top of the base context's theme"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new context wrapper with the specified theme. The specified theme will be applied on top of the base context's theme. Any attributes not explicitly defined in the theme identified by", "history": "Added in API level 1", "FullName": "public ContextThemeWrapper (Context base, int themeResId)"}, "ContextThemeWrapper(android.content.Context,android.content.res.Resources.Theme)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: the base context"], ["@B_android#content#res#Resources#Theme_E@", "Resources.Theme: the theme against which resources should be inflated"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new context wrapper with the specified theme. Unlike @B_android#view#ContextThemeWrapper#ContextThemeWrapper_E@, the theme passed to this constructor will completely replace the base context's theme.", "history": "Added in API level 23", "FullName": "public ContextThemeWrapper (Context base, Resources.Theme theme)"}, "getTheme()": {"Returns": [["@B_android#content#res#Resources#Theme_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the Theme object associated with this Context.", "history": "Added in API level 1", "FullName": "public Resources.Theme getTheme ()"}, "ContextThemeWrapper()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new context wrapper with no theme and no base context. @B_android#view#ContextThemeWrapper#attachBaseContext_E@ before calling any other method on the newly constructed context wrapper.", "history": "Added in API level 1", "FullName": "public ContextThemeWrapper ()"}}, "Inheritance": ["@B_android#content#Context_E@", "@B_android#content#ContextWrapper_E@"], "ClassName": "android.view.ContextThemeWrapper", "ClassDesc": "A context wrapper that allows you to modify or replace the theme of the wrapped context."}