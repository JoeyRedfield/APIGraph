{"Functions": {"writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "", "FullName": "void writeToParcel (Parcel dest, int flags)"}, "get()": {"Returns": [["short", "the stored value."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "short get ()"}, "ObservableShort()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an ObservableShort with the initial value of 0.", "history": "", "FullName": "ObservableShort ()"}, "ObservableShort(short)": {"Returns": [], "Parameters": [["short", "short: the initial value for the ObservableShort"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an ObservableShort with the given initial value.", "history": "", "FullName": "ObservableShort (short value)"}, "set(short)": {"Returns": [], "Parameters": [["short", "short no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the stored value.", "history": "", "FullName": "void set (short value)"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "", "FullName": "int describeContents ()"}}, "Inheritance": ["http:##developer#android#com@B_java#lang#Object_E@", "@B_android#databinding#BaseObservable_E@"], "ClassName": "android.databinding.ObservableShort", "ClassDesc": "An observable class that holds a primitive short. Observable field classes may be used instead of creating an Observable object. It can also create a calculated field, depending on other fields: This class is parcelable and serializable but callbacks are ignored when the object is parcelled / serialized. Unless you add custom callbacks, this will not be an issue because data binding framework always re-registers callbacks when the view is bound. A parceled ObservableBoolean will lose its dependencies."}