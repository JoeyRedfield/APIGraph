{"Functions": {"getDayOfWeek()": {"Returns": [["@B_java#time#DayOfWeek_E@", "the day-of-week that the transition occurs, null if the rule defines an exact date"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the day-of-week of the transition. If the rule defines an exact date then this returns null. If the rule defines a week where the cutover might occur, then this method returns the day-of-week that the month-day will be adjusted to. If the day is positive then the adjustment is later. If the day is negative then the adjustment is earlier.", "history": "Added in API level 26", "FullName": "public DayOfWeek getDayOfWeek ()"}, "getOffsetBefore()": {"Returns": [["@B_java#time#ZoneOffset_E@", "the offset before, not null"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the offset before the transition.", "history": "Added in API level 26", "FullName": "public ZoneOffset getOffsetBefore ()"}, "getTimeDefinition()": {"Returns": [["@B_java#time#zone#ZoneOffsetTransitionRule#TimeDefinition_E@", "the time definition, not null"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the time definition, specifying how to convert the time to an instant. The local time can be converted to an instant using the standard offset, the wall offset or UTC.", "history": "Added in API level 26", "FullName": "public ZoneOffsetTransitionRule.TimeDefinition getTimeDefinition ()"}, "createTransition(int)": {"Returns": [["@B_java#time#zone#ZoneOffsetTransition_E@", "the transition instance, not null"]], "Parameters": [["int", "int: the year to create a transition for, not null"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a transition instance for the specified year. Calculations are performed using the ISO-8601 chronology.", "history": "Added in API level 26", "FullName": "public ZoneOffsetTransition createTransition (int year)"}, "getOffsetAfter()": {"Returns": [["@B_java#time#ZoneOffset_E@", "the offset after, not null"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the offset after the transition.", "history": "Added in API level 26", "FullName": "public ZoneOffset getOffsetAfter ()"}, "getMonth()": {"Returns": [["@B_java#time#Month_E@", "the month of the transition, not null"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the month of the transition. If the rule defines an exact date then the month is the month of that date. If the rule defines a week where the transition might occur, then the month if the month of either the earliest or latest possible date of the cutover.", "history": "Added in API level 26", "FullName": "public Month getMonth ()"}, "getStandardOffset()": {"Returns": [["@B_java#time#ZoneOffset_E@", "the standard offset, not null"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the standard offset in force at the transition.", "history": "Added in API level 26", "FullName": "public ZoneOffset getStandardOffset ()"}, "isMidnightEndOfDay()": {"Returns": [["boolean", "whether a local time of midnight is at the start or end of the day"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Is the transition local time midnight at the end of day. The transition may be represented as occurring at 24:00.", "history": "Added in API level 26", "FullName": "public boolean isMidnightEndOfDay ()"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string for debugging, not null"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string describing this object.", "history": "Added in API level 26", "FullName": "public String toString ()"}, "getDayOfMonthIndicator()": {"Returns": [["int", "the day-of-month indicator, from -28 to 31 excluding 0"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the indicator of the day-of-month of the transition. If the rule defines an exact date then the day is the month of that date. If the rule defines a week where the transition might occur, then the day defines either the start of the end of the transition week. If the value is positive, then it represents a normal day-of-month, and is the earliest possible date that the transition can be. The date may refer to 29th February which should be treated as 1st March in non-leap years. If the value is negative, then it represents the number of days back from the end of the month where -1 is the last day of the month. In this case, the day identified is the latest possible date that the transition can be.", "history": "Added in API level 26", "FullName": "public int getDayOfMonthIndicator ()"}, "of(java.time.Month,int,java.time.DayOfWeek,java.time.LocalTime,boolean,java.time.zone.ZoneOffsetTransitionRule.TimeDefinition,java.time.ZoneOffset,java.time.ZoneOffset,java.time.ZoneOffset)": {"Returns": [["@B_java#time#zone#ZoneOffsetTransitionRule_E@", "the rule, not null"]], "Parameters": [["@B_java#time#Month_E@", "Month: the month of the month-day of the first day of the cutover week, not null"], ["int", "int: the day of the month-day of the cutover week, positive if the week is that day or later, negative if the week is that day or earlier, counting from the last day of the month, from -28 to 31 excluding 0"], ["@B_java#time#DayOfWeek_E@", "DayOfWeek: the required day-of-week, null if the month-day should not be changed"], ["@B_java#time#LocalTime_E@", "LocalTime: the cutover time in the 'before' offset, not null"], ["boolean", "boolean: whether the time is midnight at the end of day"], ["@B_java#time#zone#ZoneOffsetTransitionRule#TimeDefinition_E@", "ZoneOffsetTransitionRule.TimeDefinition: how to interpret the cutover"], ["@B_java#time#ZoneOffset_E@", "ZoneOffset: the standard offset in force at the cutover, not null"], ["@B_java#time#ZoneOffset_E@", "ZoneOffset: the offset before the cutover, not null"], ["@B_java#time#ZoneOffset_E@", "ZoneOffset: the offset after the cutover, not null"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the day of month indicator is invalid"], ["@B_java#lang#IllegalArgumentException_E@", "if the end of day flag is true when the time is not midnight"]], "SeeAlso": [], "Permissions": [], "Description": "Obtains an instance defining the yearly rule to create transitions between two offsets. Applications should normally obtain an instance from @B_java#time#zone#ZoneRules_E@. This factory is only intended for use when creating @B_java#time#zone#ZoneRules_E@.", "history": "Added in API level 26", "FullName": "public static ZoneOffsetTransitionRule of (Month month, int dayOfMonthIndicator, DayOfWeek dayOfWeek, LocalTime time, boolean timeEndOfDay, ZoneOffsetTransitionRule.TimeDefinition timeDefnition, ZoneOffset standardOffset, ZoneOffset offsetBefore, ZoneOffset offsetAfter)"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if equal"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the other object to compare to, null returns false"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks if this object equals another. The entire state of the object is compared.", "history": "Added in API level 26", "FullName": "public boolean equals (Object otherRule)"}, "hashCode()": {"Returns": [["int", "the hash code"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a suitable hash code.", "history": "Added in API level 26", "FullName": "public int hashCode ()"}, "getLocalTime()": {"Returns": [["@B_java#time#LocalTime_E@", "the local time of day of the transition, not null"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the local time of day of the transition which must be checked with @B_java#time#zone#ZoneOffsetTransitionRule#isMidnightEndOfDay_E@. The time is converted into an instant using the time definition.", "history": "Added in API level 26", "FullName": "public LocalTime getLocalTime ()"}}, "Inheritance": [], "ClassName": "java.time.zone.ZoneOffsetTransitionRule", "ClassDesc": "A rule expressing how to create a transition. This class allows rules for identifying future transitions to be expressed. A rule might be written in many forms: the 16th March the Sunday on or after the 16th March the Sunday on or before the 16th March the last Sunday in February These different rule types can be expressed and queried."}