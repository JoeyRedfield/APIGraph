{"Functions": {"Typeface.Builder(android.content.res.AssetManager,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#content#res#AssetManager_E@", "AssetManager: The application's asset manager This value must never be null."], ["@B_java#lang#String_E@", "String: The file name of the font data in the asset directory This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a builder from an asset manager and a file path in an asset directory.", "history": "Added in API level 26", "FullName": "public Typeface.Builder (AssetManager assetManager, String path)"}, "setFontVariationSettings(java.lang.String)": {"Returns": [["@B_android#graphics#Typeface#Builder_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: See @B_android#widget#TextView#setFontVariationSettings_E@. This value may be null."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If given string is not a valid font variation settings format."]], "SeeAlso": [], "Permissions": [], "Description": "Sets a font variation settings.", "history": "Added in API level 26", "FullName": "public Typeface.Builder setFontVariationSettings (String variationSettings)"}, "setTtcIndex(int)": {"Returns": [["@B_android#graphics#Typeface#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: An index of the font collection. If the font source is not font collection, do not call this method or specify 0. Value is 0 or greater"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets an index of the font collection. See @B_android#R#attr#ttcIndex_E@. Can not be used for Typeface source. build() method will return null for invalid index.", "history": "Added in API level 26", "FullName": "public Typeface.Builder setTtcIndex (int ttcIndex)"}, "setFallback(java.lang.String)": {"Returns": [["@B_android#graphics#Typeface#Builder_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: A family name to be used for fallback if the provided font can not be used. By passing null, build() returns null. If @B_android#graphics#Typeface#Builder#setFallback_E@ is not called on the builder, null is assumed. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets a fallback family name. By specifying a fallback family name, a fallback Typeface will be returned if the @B_android#graphics#Typeface#Builder#build_E@ method fails to create a Typeface from the provided font. The fallback family will be resolved with the provided weight and italic information specified by @B_android#graphics#Typeface#Builder#setWeight_E@ and @B_android#graphics#Typeface#Builder#setItalic_E@. If @B_android#graphics#Typeface#Builder#setWeight_E@ is not called, the fallback family keeps the default weight. Similary, if @B_android#graphics#Typeface#Builder#setItalic_E@ is not called, the fallback family keeps the default italic information. For example, calling builder.setFallback(\"sans-serif-light\") is equivalent to calling builder.setFallback(\"sans-serif\").setWeight(300) in terms of fallback. The default weight and italic information are overridden by calling @B_android#graphics#Typeface#Builder#setWeight_E@ and @B_android#graphics#Typeface#Builder#setItalic_E@. For example, if a Typeface is constructed using builder.setFallback(\"sans-serif-light\").setWeight(700), the fallback text will render as sans serif bold.", "history": "Added in API level 26", "FullName": "public Typeface.Builder setFallback (String familyName)"}, "Typeface.Builder(java.io.FileDescriptor)": {"Returns": [], "Parameters": [["@B_java#io#FileDescriptor_E@", "FileDescriptor: The file descriptor. The passed fd must be mmap-able. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a builder with a file descriptor. Caller is responsible for closing the passed file descriptor after @B_android#graphics#Typeface#Builder#build_E@ is called.", "history": "Added in API level 26", "FullName": "public Typeface.Builder (FileDescriptor fd)"}, "Typeface.Builder(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The full path to the font file. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a builder with a file path.", "history": "Added in API level 26", "FullName": "public Typeface.Builder (String path)"}, "setWeight(int)": {"Returns": [["@B_android#graphics#Typeface#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: a weight value. Value is between 1 and 1000 inclusive"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets weight of the font. Tells the system the weight of the given font. If not provided, the system will resolve the weight value by reading font tables.", "history": "Added in API level 26", "FullName": "public Typeface.Builder setWeight (int weight)"}, "Typeface.Builder(java.io.File)": {"Returns": [], "Parameters": [["@B_java#io#File_E@", "File: The file object refers to the font file. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a builder with a file path.", "history": "Added in API level 26", "FullName": "public Typeface.Builder (File path)"}, "setFontVariationSettings(android.graphics.fonts.FontVariationAxis[])": {"Returns": [["@B_android#graphics#Typeface#Builder_E@", "no returns description in source"]], "Parameters": [["@B_android#graphics#fonts#FontVariationAxis_E@", "FontVariationAxis: An array of font variation axis tag-value pairs. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets a font variation settings.", "history": "Added in API level 26", "FullName": "public Typeface.Builder setFontVariationSettings (FontVariationAxis[] axes)"}, "build()": {"Returns": [["@B_android#graphics#Typeface_E@", "Newly created Typeface. May return null if some parameters are invalid."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Generates new Typeface from specified configuration.", "history": "Added in API level 26", "FullName": "public Typeface build ()"}, "setItalic(boolean)": {"Returns": [["@B_android#graphics#Typeface#Builder_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean: true if the font is italic. Otherwise false."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets italic information of the font. Tells the system the style of the given font. If not provided, the system will resolve the style by reading font tables.", "history": "Added in API level 26", "FullName": "public Typeface.Builder setItalic (boolean italic)"}}, "Inheritance": [], "ClassName": "android.graphics.Typeface.Builder", "ClassDesc": "A builder class for creating new Typeface instance. Examples, 1) Create Typeface from ttf file."}