{"Functions": {"changeMaskedWallet(java.lang.String, java.lang.String, int)": {"Returns": [], "Parameters": [["int", "will be passed back in onActivityResult where you can retrieve the result via @B_com#google#android#gms#wallet#WalletConstants#EXTRA_MASKED_WALLET_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method brings up a Google Wallet selector screen to allow your customer to select a new payment instrument or shipping address from their Google Wallet.", "history": "", "FullName": "public void changeMaskedWallet (String googleTransactionId, String merchantTransactionId, int requestCode)"}, "loadFullWallet(com.google.android.gms.wallet.FullWalletRequest, int)": {"Returns": [], "Parameters": [["int", "will be passed back in onActivityResult where you can retrieve the result via @B_com#google#android#gms#wallet#WalletConstants#EXTRA_FULL_WALLET_E@ or @B_com#google#android#gms#wallet#WalletConstants#EXTRA_MASKED_WALLET_E@ if the user had to make new selections."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Requests a @B_com#google#android#gms#wallet#FullWallet_E@, which contains the payment credentials. You can retrieve the @B_com#google#android#gms#wallet#FullWallet_E@ in onActivityResult using the requestCode that you provide to this method. If there is a problem with the transaction then the Google Wallet selector will be shown and a @B_com#google#android#gms#wallet#MaskedWallet_E@ will be returned to reflect new selections by the user. This function should only be called when the customer confirms the purchase. Important: Because the credentials are in plain text it is important to transfer the payment credentials following PCI standards.", "history": "", "FullName": "public void loadFullWallet (FullWalletRequest request, int requestCode)"}, "isConnected()": {"Returns": [["", "true if the client is connected to the service."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks if the client is currently connected to the service, so that requests to other methods will succeed. Applications should guard client actions caused by the user with a call to this method.", "history": "", "FullName": "public boolean isConnected ()"}, "connect()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Connects the client to Google Play services. This method returns immediately, and connects to the service in the background. If the connection is successful, @B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks#onConnected_E@ is called. On a failure, @B_com#google#android#gms#common#GooglePlayServicesClient#OnConnectionFailedListener#onConnectionFailed_E@ is called.", "history": "", "FullName": "public void connect ()"}, "isConnecting()": {"Returns": [["", "true if the client is attempting to connect to the service."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks if the client is attempting to connect to the service.", "history": "", "FullName": "public boolean isConnecting ()"}, "disconnect()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Closes the connection to Google Play services. No calls can be made on this object after calling this method.", "history": "", "FullName": "public void disconnect ()"}, "WalletClient(android.app.Activity, int, java.lang.String, int, com.google.android.gms.common.GooglePlayServicesClient.ConnectionCallbacks, com.google.android.gms.common.GooglePlayServicesClient.OnConnectionFailedListener)": {"Returns": [], "Parameters": [["Activity", "The Activity to use for the connection."], ["int", "The Google Wallet environment to use. Specify @B_com#google#android#gms#wallet#WalletConstants#ENVIRONMENT_SANDBOX_E@ until you have applied for and been granted access to the Production environment."], ["String", "Google Account to use for this transaction. null lets the Wallet SDK choose a default account."], ["int", "specify a theme to use for Wallet running on Android OS with @B_android#os#Build#VERSION#SDK_INT_E@ >= @B_android#os#Build#VERSION_CODES#HONEYCOMB_E@. The only legitimate values are @B_com#google#android#gms#wallet#WalletConstants#THEME_HOLO_DARK_E@ and @B_com#google#android#gms#wallet#WalletConstants#THEME_HOLO_LIGHT_E@ as those are the only supported themes. User-created themes are not supported. Value ignored for Android OS with @B_android#os#Build#VERSION#SDK_INT_E@ < @B_android#os#Build#VERSION_CODES#HONEYCOMB_E@."], ["@B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks_E@", "The listener where the results of the asynchronous @B_com#google#android#gms#wallet#WalletClient#connect_E@ call are delivered."], ["@B_com#google#android#gms#common#GooglePlayServicesClient#OnConnectionFailedListener_E@", "The listener which will be notified if the connection attempt fails."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a Google Wallet client to connect to Google Play services.", "history": "", "FullName": "public WalletClient (Activity activity, int environment, String accountName, int theme, GooglePlayServicesClient.ConnectionCallbacks connectionCallbacks, GooglePlayServicesClient.OnConnectionFailedListener connectionFailedListener)"}, "unregisterConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient.ConnectionCallbacks)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks_E@", "the listener to unregister."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes a connection listener from this GooglePlayServicesClient. Note that removing a listener does not generate any callbacks. If the specified listener is not currently registered to receive connection events, this method will have no effect.", "history": "", "FullName": "public void unregisterConnectionCallbacks (GooglePlayServicesClient.ConnectionCallbacks listener)"}, "isConnectionCallbacksRegistered(com.google.android.gms.common.GooglePlayServicesClient.ConnectionCallbacks)": {"Returns": [["", "true if the specified listener is currently registered to receive connection events."]], "Parameters": [["@B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks_E@", "The listener to check for."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the specified listener is currently registered to receive connection events.", "history": "", "FullName": "public boolean isConnectionCallbacksRegistered (GooglePlayServicesClient.ConnectionCallbacks listener)"}, "notifyTransactionStatus(com.google.android.gms.wallet.NotifyTransactionStatusRequest)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sends a notification to Google on whether the transaction succeeded or failed. This should always be called after payment processing as well as any failed validation checks.", "history": "", "FullName": "public void notifyTransactionStatus (NotifyTransactionStatusRequest request)"}, "loadMaskedWallet(com.google.android.gms.wallet.MaskedWalletRequest, int)": {"Returns": [], "Parameters": [["int", "will be passed back in onActivityResult where you can retrieve the result via @B_com#google#android#gms#wallet#WalletConstants#EXTRA_MASKED_WALLET_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "If an application has authorization, loadMaskedWallet() allows you to skip the Google Wallet selector and directly request the masked payment credentials. This provides a more seamless purchase experience for your customers. When you call this method, the Google Wallet selector will be shown only if necessary. Either way, you can retrieve the @B_com#google#android#gms#wallet#MaskedWallet_E@ in onActivityResult using the specified requestCode.", "history": "", "FullName": "public void loadMaskedWallet (MaskedWalletRequest request, int requestCode)"}, "registerConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient.OnConnectionFailedListener)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#GooglePlayServicesClient#OnConnectionFailedListener_E@", "the listener where the results of the asynchronous @B_com#google#android#gms#wallet#WalletClient#connect_E@ call are delivered."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers a listener to receive connection failed events from this GooglePlayServicesClient. Unlike @B_com#google#android#gms#common#GooglePlayServicesClient#registerConnectionCallbacks_E@, if the service is not already connected, the listener's @B_com#google#android#gms#common#GooglePlayServicesClient#OnConnectionFailedListener#onConnectionFailed_E@ method will not be called immediately. Applications should balance calls to this method with calls to @B_com#google#android#gms#common#GooglePlayServicesClient#unregisterConnectionFailedListener_E@ to avoid leaking resources. If the specified listener is already registered to receive connection failed events, this method will not add a duplicate entry for the same listener. Note that the order of messages received here may not be stable, so clients should not rely on the order that multiple listeners receive events in.", "history": "", "FullName": "public void registerConnectionFailedListener (GooglePlayServicesClient.OnConnectionFailedListener listener)"}, "checkForPreAuthorization(int)": {"Returns": [], "Parameters": [["int", "will be passed back in onActivityResult where you can retrieve the result via @B_com#google#android#gms#wallet#WalletConstants#EXTRA_IS_USER_PREAUTHORIZED_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This API checks to see if a user has previously authorized the application to access their Wallet account.", "history": "", "FullName": "public void checkForPreAuthorization (int requestCode)"}, "unregisterConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient.OnConnectionFailedListener)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#GooglePlayServicesClient#OnConnectionFailedListener_E@", "the listener to unregister."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes a connection failed listener from the GooglePlayServicesClient. Note that removing a listener does not generate any callbacks. If the specified listener is not currently registered to receive connection failed events, this method will have no effect.", "history": "", "FullName": "public void unregisterConnectionFailedListener (GooglePlayServicesClient.OnConnectionFailedListener listener)"}, "WalletClient(android.app.Activity, int, java.lang.String, com.google.android.gms.common.GooglePlayServicesClient.ConnectionCallbacks, com.google.android.gms.common.GooglePlayServicesClient.OnConnectionFailedListener)": {"Returns": [], "Parameters": [["Activity", "The Activity to use for the connection."], ["int", "The Google Wallet environment to use. Specify @B_com#google#android#gms#wallet#WalletConstants#ENVIRONMENT_SANDBOX_E@ until you have applied for and been granted access to the Production environment."], ["String", "Google Account to use for this transaction. null lets the Wallet SDK choose a default account."], ["@B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks_E@", "The listener where the results of the asynchronous @B_com#google#android#gms#wallet#WalletClient#connect_E@ call are delivered."], ["@B_com#google#android#gms#common#GooglePlayServicesClient#OnConnectionFailedListener_E@", "The listener which will be notified if the connection attempt fails."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a Google Wallet client to connect to Google Play services.", "history": "", "FullName": "public WalletClient (Activity activity, int environment, String accountName, GooglePlayServicesClient.ConnectionCallbacks connectionCallbacks, GooglePlayServicesClient.OnConnectionFailedListener connectionFailedListener)"}, "registerConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient.ConnectionCallbacks)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks_E@", "the listener where the results of the asynchronous @B_com#google#android#gms#wallet#WalletClient#connect_E@ call are delivered."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers a listener to receive connection events from this GooglePlayServicesClient. If the service is already connected, the listener's @B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks#onConnected_E@ method will be called immediately. Applications should balance calls to this method with calls to @B_com#google#android#gms#common#GooglePlayServicesClient#unregisterConnectionCallbacks_E@ to avoid leaking resources. If the specified listener is already registered to receive connection events, this method will not add a duplicate entry for the same listener, but @B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks#onConnected_E@ method if currently connected. Note that the order of messages received here may not be stable, so clients should not rely on the order that multiple listeners receive events in.", "history": "", "FullName": "public void registerConnectionCallbacks (GooglePlayServicesClient.ConnectionCallbacks listener)"}, "isConnectionFailedListenerRegistered(com.google.android.gms.common.GooglePlayServicesClient.OnConnectionFailedListener)": {"Returns": [["", "true if the specified listener is currently registered to receive connection failed events."]], "Parameters": [["@B_com#google#android#gms#common#GooglePlayServicesClient#OnConnectionFailedListener_E@", "The listener to check for."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the specified listener is currently registered to receive connection failed events.", "history": "", "FullName": "public boolean isConnectionFailedListenerRegistered (GooglePlayServicesClient.OnConnectionFailedListener listener)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.wallet.WalletClient", "ClassDesc": "The main entry point for Google Wallet integration. Use the WalletClient after the asynchronous @B_com#google#android#gms#wallet#WalletClient#connect_E@ method has been called and your listener's @B_com#google#android#gms#common#GooglePlayServicesClient#ConnectionCallbacks#onConnected_E@ method is called. When your app is done using WalletClient, call @B_com#google#android#gms#wallet#WalletClient#disconnect_E@, even if the async result from @B_com#google#android#gms#wallet#WalletClient#connect_E@ has not yet been delivered. You should instantiate this object in your Activity's @B_android#app#Activity#onCreate_E@ method and then call @B_com#google#android#gms#wallet#WalletClient#connect_E@ in @B_android#app#Activity#onStart_E@ and @B_com#google#android#gms#wallet#WalletClient#disconnect_E@ in @B_android#app#Activity#onStop_E@, regardless of the state. To allow the user to select and change the account associated with the transaction and Google transaction ID, use null for the accountName parameter of the constructor. No special action is required when a user changes the selected account through the UI in this case, and the Google transaction ID associated with the transaction can continue to be used. To specify the account and prevent the user from selecting another account, pass the account through the accountName parameter. To change the account, construct a new WalletClient with the new account and do not reuse the Google transaction ID associated with the old account - this is a new transaction. We recommend that you @B_com#google#android#gms#wallet#WalletConstants#ENVIRONMENT_SANDBOX_E@ in the constructor."}