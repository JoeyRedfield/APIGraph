{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 23", "FullName": "public String toString ()"}, "getReason()": {"Returns": [["@B_java#lang#String_E@", "The disconnect reason."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an explanation of the reason for the disconnect. This is not intended for display to the user and is used mainly for logging.", "history": "Added in API level 23", "FullName": "public String getReason ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 23", "FullName": "public void writeToParcel (Parcel destination, int flags)"}, "getDescription()": {"Returns": [["@B_java#lang#CharSequence_E@", "The disconnect description."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a description which explains the reason for the disconnect cause and is for display in the user interface. This optional text is generally a longer and more descriptive version of @B_android#telecom#DisconnectCause#getLabel_E@, however it can exist even if @B_android#telecom#DisconnectCause#getLabel_E@ is empty. The In-Call UI should display this relatively prominently; the traditional implementation displays this as an alert dialog. The @B_android#telecom#ConnectionService_E@ is responsible for providing and localizing this message. If there is no string provided, returns null.", "history": "Added in API level 23", "FullName": "public CharSequence getDescription ()"}, "DisconnectCause(int)": {"Returns": [], "Parameters": [["int", "int: The code for the disconnect cause."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new DisconnectCause.", "history": "Added in API level 23", "FullName": "public DisconnectCause (int code)"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 23", "FullName": "public int describeContents ()"}, "getLabel()": {"Returns": [["@B_java#lang#CharSequence_E@", "The disconnect label."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a short label which explains the reason for the disconnect cause and is for display in the user interface. If not null, it is expected that the In-Call UI should display this text where it would normally display the call state (\"Dialing\", \"Disconnected\") and is therefore expected to be relatively small. The @B_android#telecom#ConnectionService_E@ is responsible for providing and localizing this label. If there is no string provided, returns null.", "history": "Added in API level 23", "FullName": "public CharSequence getLabel ()"}, "DisconnectCause(int,java.lang.CharSequence,java.lang.CharSequence,java.lang.String,int)": {"Returns": [], "Parameters": [["int", "int: The code for the disconnect cause."], ["@B_java#lang#CharSequence_E@", "CharSequence: The localized label to show to the user to explain the disconnect."], ["@B_java#lang#CharSequence_E@", "CharSequence: The localized description to show to the user to explain the disconnect."], ["@B_java#lang#String_E@", "String: The reason for the disconnect."], ["int", "int: The tone to play on disconnect, as defined in @B_android#media#ToneGenerator_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new DisconnectCause.", "history": "Added in API level 23", "FullName": "public DisconnectCause (int code, CharSequence label, CharSequence description, String reason, int toneToPlay)"}, "DisconnectCause(int,java.lang.CharSequence,java.lang.CharSequence,java.lang.String)": {"Returns": [], "Parameters": [["int", "int: The code for the disconnect cause."], ["@B_java#lang#CharSequence_E@", "CharSequence: The localized label to show to the user to explain the disconnect."], ["@B_java#lang#CharSequence_E@", "CharSequence: The localized description to show to the user to explain the disconnect."], ["@B_java#lang#String_E@", "String: The reason for the disconnect."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new DisconnectCause.", "history": "Added in API level 23", "FullName": "public DisconnectCause (int code, CharSequence label, CharSequence description, String reason)"}, "getCode()": {"Returns": [["int", "The disconnect code."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the code for the reason for this disconnect.", "history": "Added in API level 23", "FullName": "public int getCode ()"}, "DisconnectCause(int,java.lang.String)": {"Returns": [], "Parameters": [["int", "int: The code for the disconnect cause."], ["@B_java#lang#String_E@", "String: The reason for the disconnect."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new DisconnectCause.", "history": "Added in API level 23", "FullName": "public DisconnectCause (int code, String reason)"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if this object is the same as the obj argument; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the reference object with which to compare."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether some other object is \"equal to\" this one. The equals method implements an equivalence relation on non-null object references: It is x, x.equals(x) should return true. It is x and y, x.equals(y) should return true if and only if y.equals(x) returns true. It is x, y, and z, if x.equals(y) returns true and y.equals(z) returns true, then x.equals(z) should return true. It is x and y, multiple invocations of x.equals(y) consistently return true or consistently return false, provided no information used in equals comparisons on the objects is modified. For any non-null reference value x, x.equals(null) should return false. The equals method for class Object implements the most discriminating possible equivalence relation on objects; that is, for any non-null reference values x and y, this method returns true if and only if x and y refer to the same object (x == y has the value true). Note that it is generally necessary to override the hashCode method whenever this method is overridden, so as to maintain the general contract for the hashCode method, which states that equal objects must have equal hash codes.", "history": "Added in API level 23", "FullName": "public boolean equals (Object o)"}, "getTone()": {"Returns": [["int", "the tone as defined in @B_android#media#ToneGenerator_E@ to play when disconnected."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the tone to play when disconnected.", "history": "Added in API level 23", "FullName": "public int getTone ()"}, "DisconnectCause(int, java.lang.String)": {"Returns": [], "Parameters": [["int", "int: The code for the disconnect cause."], ["@B_java#lang#String_E@", "String: The reason for the disconnect."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new DisconnectCause.", "history": "added in API level 23", "FullName": "public DisconnectCause (int code, String reason)"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 23", "FullName": "public void writeToParcel (Parcel destination, int flags)"}, "hashCode()": {"Returns": [["int", "a hash code value for this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code value for the object. This method is supported for the benefit of hash tables such as those provided by @B_java#util#HashMap_E@. The general contract of hashCode is: Whenever it is invoked on the same object more than once during an execution of a Java application, the hashCode method must consistently return the same integer, provided no information used in equals comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application. If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result. It is not required that if two objects are unequal according to the @B_java#lang#Object#equals_E@ method, then calling the hashCode method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables. As much as is reasonably practical, the hashCode method defined by class Object does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the Java\u2122 programming language.)", "history": "Added in API level 23", "FullName": "public int hashCode ()"}}, "Inheritance": [], "ClassName": "android.telecom.DisconnectCause", "ClassDesc": "Describes the cause of a disconnected call. This always includes a code describing the generic cause of the disconnect. Optionally, it may include a label and/or description to display to the user. It is the responsibility of the @B_android#telecom#ConnectionService_E@ to provide localized versions of the label and description. It also may contain a reason for the disconnect, which is intended for logging and not for display to the user."}