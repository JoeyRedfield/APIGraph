{"Functions": {"setBreadCrumbTitle(java.lang.CharSequence)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Like @B_android#app#FragmentTransaction#setBreadCrumbTitle_E@ but taking a raw string; this method is not recommended, as the string can not be changed later if the locale changes.", "history": "Added in API level 11 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction setBreadCrumbTitle (CharSequence text)"}, "setCustomAnimations(int,int,int,int)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set specific animation resources to run for the fragments that are entering and exiting in this transaction. The popEnter and popExit animations will be played for enter/exit operations specifically when popping the back stack.", "history": "Added in API level 13 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction setCustomAnimations (int enter, int exit, int popEnter, int popExit)"}, "setTransition(int)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "no returns description in source"]], "Parameters": [["int", "int: Value is @B_android#app#FragmentTransaction#TRANSIT_NONE_E@, @B_android#app#FragmentTransaction#TRANSIT_FRAGMENT_OPEN_E@, @B_android#app#FragmentTransaction#TRANSIT_FRAGMENT_CLOSE_E@, or @B_android#app#FragmentTransaction#TRANSIT_FRAGMENT_FADE_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Select a standard transition animation for this transaction. May be one of @B_android#app#FragmentTransaction#TRANSIT_NONE_E@, @B_android#app#FragmentTransaction#TRANSIT_FRAGMENT_OPEN_E@, @B_android#app#FragmentTransaction#TRANSIT_FRAGMENT_CLOSE_E@, or @B_android#app#FragmentTransaction#TRANSIT_FRAGMENT_FADE_E@.", "history": "Added in API level 11 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction setTransition (int transit)"}, "setTransitionStyle(int)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a custom style resource that will be used for resolving transit animations.", "history": "Added in API level 11 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction setTransitionStyle (int styleRes)"}, "replace(int, android.app.Fragment)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["@B_android#app#Fragment_E@", "Fragment no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Calls @B_android#app#FragmentTransaction#replace_E@ with a null tag.", "history": "added in API level 11", "FullName": "public abstract FragmentTransaction replace (int containerViewId, Fragment fragment)"}, "commitNow()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Commits this transaction synchronously. Any added fragments will be initialized and brought completely to the lifecycle state of their host and any removed fragments will be torn down accordingly before this call returns. Committing a transaction in this way allows fragments to be added as dedicated, encapsulated components that monitor the lifecycle state of their host while providing firmer ordering guarantees around when those fragments are fully initialized and ready. Fragments that manage views will have those views created and attached. Calling commitNow is preferable to calling @B_android#app#FragmentTransaction#commit_E@ followed by @B_android#app#FragmentManager#executePendingTransactions_E@ as the latter will have the side effect of attempting to commit all currently pending transactions whether that is the desired behavior or not. Transactions committed in this way may not be added to the FragmentManager's back stack, as doing so would break other expected ordering guarantees for other asynchronously committed transactions. This method will throw @B_java#lang#IllegalStateException_E@ if the transaction previously requested to be added to the back stack with @B_android#app#FragmentTransaction#addToBackStack_E@. A transaction can only be committed with this method prior to its containing activity saving its state. If the commit is attempted after that point, an exception will be thrown. This is because the state after the commit can be lost if the activity needs to be restored from its state. See @B_android#app#FragmentTransaction#commitAllowingStateLoss_E@ for situations where it may be okay to lose the commit.", "history": "Added in API level 24 Deprecated in API level 28", "FullName": "public abstract void commitNow ()"}, "runOnCommit(java.lang.Runnable)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "this FragmentTransaction"]], "Parameters": [["@B_java#lang#Runnable_E@", "Runnable: Runnable to add"]], "Throws": [["@B_java#lang#IllegalStateException_E@", "if @B_android#app#FragmentTransaction#addToBackStack_E@ has been called"]], "SeeAlso": [], "Permissions": [], "Description": "Add a Runnable to this transaction that will be run after this transaction has been committed. If fragment transactions are @B_android#app#FragmentTransaction#setReorderingAllowed_E@ this may be after other subsequent fragment operations have also taken place, or operations in this transaction may have been optimized out due to the presence of a subsequent fragment transaction in the batch. If a transaction is committed using @B_android#app#FragmentTransaction#commitAllowingStateLoss_E@ this runnable may be executed when the FragmentManager is in a state where new transactions may not be committed without allowing state loss. runOnCommit may not be used with transactions @B_android#app#FragmentTransaction#addToBackStack_E@ as Runnables cannot be persisted with back stack state. @B_java#lang#IllegalStateException_E@ will be thrown if @B_android#app#FragmentTransaction#addToBackStack_E@ has been previously called for this transaction or if it is called after a call to runOnCommit.", "history": "Added in API level 26 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction runOnCommit (Runnable runnable)"}, "setBreadCrumbTitle(int)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "no returns description in source"]], "Parameters": [["int", "int: A string resource containing the title."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the full title to show as a bread crumb when this transaction is on the back stack, as used by @B_android#app#FragmentBreadCrumbs_E@.", "history": "Added in API level 11 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction setBreadCrumbTitle (int res)"}, "detach(android.app.Fragment)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "Returns the same FragmentTransaction instance."]], "Parameters": [["@B_android#app#Fragment_E@", "Fragment: The fragment to be detached."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Detach the given fragment from the UI. This is the same state as when it is put on the back stack: the fragment is removed from the UI, however its state is still being actively managed by the fragment manager. When going into this state its view hierarchy is destroyed.", "history": "Added in API level 13 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction detach (Fragment fragment)"}, "setBreadCrumbShortTitle(int)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "no returns description in source"]], "Parameters": [["int", "int: A string resource containing the title."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the short title to show as a bread crumb when this transaction is on the back stack, as used by @B_android#app#FragmentBreadCrumbs_E@.", "history": "Added in API level 11 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction setBreadCrumbShortTitle (int res)"}, "replace(int,android.app.Fragment,java.lang.String)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "Returns the same FragmentTransaction instance."]], "Parameters": [["int", "int: Identifier of the container whose fragment(s) are to be replaced."], ["@B_android#app#Fragment_E@", "Fragment: The new fragment to place in the container."], ["@B_java#lang#String_E@", "String: Optional tag name for the fragment, to later retrieve the fragment with @B_android#app#FragmentManager#findFragmentByTag_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Replace an existing fragment that was added to a container. This is essentially the same as calling @B_android#app#FragmentTransaction#remove_E@ for all currently added fragments that were added with the same containerViewId and then @B_android#app#FragmentTransaction#add_E@ with the same arguments given here.", "history": "Added in API level 11 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction replace (int containerViewId, Fragment fragment, String tag)"}, "setCustomAnimations(int, int, int, int)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set specific animation resources to run for the fragments that are entering and exiting in this transaction. The popEnter and popExit animations will be played for enter/exit operations specifically when popping the back stack.", "history": "added in API level 13", "FullName": "public abstract FragmentTransaction setCustomAnimations (int enter, int exit, int popEnter, int popExit)"}, "add(int, android.app.Fragment, java.lang.String)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "Returns the same FragmentTransaction instance."]], "Parameters": [["int", "int: Optional identifier of the container this fragment is to be placed in. If 0, it will not be placed in a container."], ["@B_android#app#Fragment_E@", "Fragment: The fragment to be added. This fragment must not already be added to the activity."], ["@B_java#lang#String_E@", "String: Optional tag name for the fragment, to later retrieve the fragment with @B_android#app#FragmentManager#findFragmentByTag_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Add a fragment to the activity state. This fragment may optionally also have its view (if @B_android#app#Fragment#onCreateView_E@ returns non-null) inserted into a container view of the activity.", "history": "added in API level 11", "FullName": "public abstract FragmentTransaction add (int containerViewId, Fragment fragment, String tag)"}, "attach(android.app.Fragment)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "Returns the same FragmentTransaction instance."]], "Parameters": [["@B_android#app#Fragment_E@", "Fragment: The fragment to be attached."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Re-attach a fragment after it had previously been detached from the UI with @B_android#app#FragmentTransaction#detach_E@. This causes its view hierarchy to be re-created, attached to the UI, and displayed.", "history": "Added in API level 13 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction attach (Fragment fragment)"}, "setPrimaryNavigationFragment(android.app.Fragment)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "the same FragmentTransaction instance"]], "Parameters": [["@B_android#app#Fragment_E@", "Fragment: the fragment to set as the primary navigation fragment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a currently active fragment in this FragmentManager as the primary navigation fragment. The primary navigation fragment's @B_android#app#Fragment#getChildFragmentManager_E@ will be called first to process delegated navigation actions such as @B_android#app#FragmentManager#popBackStack_E@ if no ID or transaction name is provided to pop to. Navigation operations outside of the fragment system may choose to delegate those actions to the primary navigation fragment as returned by @B_android#app#FragmentManager#getPrimaryNavigationFragment_E@. The fragment provided must currently be added to the FragmentManager to be set as a primary navigation fragment, or previously added as part of this transaction.", "history": "Added in API level 26 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction setPrimaryNavigationFragment (Fragment fragment)"}, "add(int,android.app.Fragment,java.lang.String)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "Returns the same FragmentTransaction instance."]], "Parameters": [["int", "int: Optional identifier of the container this fragment is to be placed in. If 0, it will not be placed in a container."], ["@B_android#app#Fragment_E@", "Fragment: The fragment to be added. This fragment must not already be added to the activity."], ["@B_java#lang#String_E@", "String: Optional tag name for the fragment, to later retrieve the fragment with @B_android#app#FragmentManager#findFragmentByTag_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Add a fragment to the activity state. This fragment may optionally also have its view (if @B_android#app#Fragment#onCreateView_E@ returns non-null) inserted into a container view of the activity.", "history": "Added in API level 11 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction add (int containerViewId, Fragment fragment, String tag)"}, "setCustomAnimations(int,int)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set specific animation resources to run for the fragments that are entering and exiting in this transaction. These animations will not be played when popping the back stack.", "history": "Added in API level 11 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction setCustomAnimations (int enter, int exit)"}, "commitNowAllowingStateLoss()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Like @B_android#app#FragmentTransaction#commitNow_E@ but allows the commit to be executed after an activity's state is saved. This is dangerous because the commit can be lost if the activity needs to later be restored from its state, so this should only be used for cases where it is okay for the UI state to change unexpectedly on the user.", "history": "Added in API level 24 Deprecated in API level 28", "FullName": "public abstract void commitNowAllowingStateLoss ()"}, "add(int, android.app.Fragment)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["@B_android#app#Fragment_E@", "Fragment no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Calls @B_android#app#FragmentTransaction#add_E@ with a null tag.", "history": "added in API level 11", "FullName": "public abstract FragmentTransaction add (int containerViewId, Fragment fragment)"}, "setBreadCrumbShortTitle(java.lang.CharSequence)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Like @B_android#app#FragmentTransaction#setBreadCrumbShortTitle_E@ but taking a raw string; this method is not recommended, as the string can not be changed later if the locale changes.", "history": "Added in API level 11 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction setBreadCrumbShortTitle (CharSequence text)"}, "setReorderingAllowed(boolean)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean: true to enable optimizing out redundant operations or false to disable optimizing out redundant operations on this transaction."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether or not to allow optimizing operations within and across transactions. This will remove redundant operations, eliminating operations that cancel. For example, if two transactions are executed together, one that adds a fragment A and the next replaces it with fragment B, the operations will cancel and only fragment B will be added. That means that fragment A may not go through the creation/destruction lifecycle. The side effect of removing redundant operations is that fragments may have state changes out of the expected order. For example, one transaction adds fragment A, a second adds fragment B, then a third removes fragment A. Without removing the redundant operations, fragment B could expect that while it is being created, fragment A will also exist because fragment A will be removed after fragment B was added. With removing redundant operations, fragment B cannot expect fragment A to exist when it has been created because fragment A's add/remove will be optimized out. It can also reorder the state changes of Fragments to allow for better Transitions. Added Fragments may have @B_android#app#Fragment#onCreate_E@ called before replaced Fragments have @B_android#app#Fragment#onDestroy_E@ called. The default is false for applications targeting version versions prior to O and true for applications targeting O and later.", "history": "Added in API level 26 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction setReorderingAllowed (boolean reorderingAllowed)"}, "isEmpty()": {"Returns": [["boolean", "true if this transaction contains no operations, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 11 Deprecated in API level 28", "FullName": "public abstract boolean isEmpty ()"}, "disallowAddToBackStack()": {"Returns": [["@B_android#app#FragmentTransaction_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Disallow calls to @B_android#app#FragmentTransaction#addToBackStack_E@. Any future calls to addToBackStack will throw @B_java#lang#IllegalStateException_E@. If addToBackStack has already been called, this method will throw IllegalStateException.", "history": "Added in API level 11 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction disallowAddToBackStack ()"}, "commit()": {"Returns": [["int", "Returns the identifier of this transaction's back stack entry, if @B_android#app#FragmentTransaction#addToBackStack_E@ had been called. Otherwise, returns a negative number."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Schedules a commit of this transaction. The commit does not happen immediately; it will be scheduled as work on the main thread to be done the next time that thread is ready. A transaction can only be committed with this method prior to its containing activity saving its state. If the commit is attempted after that point, an exception will be thrown. This is because the state after the commit can be lost if the activity needs to be restored from its state. See @B_android#app#FragmentTransaction#commitAllowingStateLoss_E@ for situations where it may be okay to lose the commit.", "history": "Added in API level 11 Deprecated in API level 28", "FullName": "public abstract int commit ()"}, "remove(android.app.Fragment)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "Returns the same FragmentTransaction instance."]], "Parameters": [["@B_android#app#Fragment_E@", "Fragment: The fragment to be removed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Remove an existing fragment. If it was added to a container, its view is also removed from that container.", "history": "Added in API level 11 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction remove (Fragment fragment)"}, "FragmentTransaction()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 11", "FullName": "public FragmentTransaction ()"}, "show(android.app.Fragment)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "Returns the same FragmentTransaction instance."]], "Parameters": [["@B_android#app#Fragment_E@", "Fragment: The fragment to be shown."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Shows a previously hidden fragment. This is only relevant for fragments whose views have been added to a container, as this will cause the view to be shown.", "history": "Added in API level 11 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction show (Fragment fragment)"}, "setCustomAnimations(int, int)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set specific animation resources to run for the fragments that are entering and exiting in this transaction. These animations will not be played when popping the back stack.", "history": "added in API level 11", "FullName": "public abstract FragmentTransaction setCustomAnimations (int enter, int exit)"}, "addToBackStack(java.lang.String)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: An optional name for this back stack state, or null. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Add this transaction to the back stack. This means that the transaction will be remembered after it is committed, and will reverse its operation when later popped off the stack.", "history": "Added in API level 11 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction addToBackStack (String name)"}, "add(android.app.Fragment,java.lang.String)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "no returns description in source"]], "Parameters": [["@B_android#app#Fragment_E@", "Fragment no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Calls @B_android#app#FragmentTransaction#add_E@ with a 0 containerViewId.", "history": "Added in API level 11 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction add (Fragment fragment, String tag)"}, "hide(android.app.Fragment)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "Returns the same FragmentTransaction instance."]], "Parameters": [["@B_android#app#Fragment_E@", "Fragment: The fragment to be hidden."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Hides an existing fragment. This is only relevant for fragments whose views have been added to a container, as this will cause the view to be hidden.", "history": "Added in API level 11 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction hide (Fragment fragment)"}, "commitAllowingStateLoss()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Like @B_android#app#FragmentTransaction#commit_E@ but allows the commit to be executed after an activity's state is saved. This is dangerous because the commit can be lost if the activity needs to later be restored from its state, so this should only be used for cases where it is okay for the UI state to change unexpectedly on the user.", "history": "Added in API level 11 Deprecated in API level 28", "FullName": "public abstract int commitAllowingStateLoss ()"}, "add(int,android.app.Fragment)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["@B_android#app#Fragment_E@", "Fragment no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Calls @B_android#app#FragmentTransaction#add_E@ with a null tag.", "history": "Added in API level 11 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction add (int containerViewId, Fragment fragment)"}, "replace(int,android.app.Fragment)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["@B_android#app#Fragment_E@", "Fragment no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Calls @B_android#app#FragmentTransaction#replace_E@ with a null tag.", "history": "Added in API level 11 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction replace (int containerViewId, Fragment fragment)"}, "isAddToBackStackAllowed()": {"Returns": [["boolean", "True if @B_android#app#FragmentTransaction#addToBackStack_E@ is permitted on this transaction."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this FragmentTransaction is allowed to be added to the back stack. If this method would return false, @B_android#app#FragmentTransaction#addToBackStack_E@ will throw @B_java#lang#IllegalStateException_E@.", "history": "Added in API level 11 Deprecated in API level 28", "FullName": "public abstract boolean isAddToBackStackAllowed ()"}, "add(android.app.Fragment, java.lang.String)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "no returns description in source"]], "Parameters": [["@B_android#app#Fragment_E@", "Fragment no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Calls @B_android#app#FragmentTransaction#add_E@ with a 0 containerViewId.", "history": "added in API level 11", "FullName": "public abstract FragmentTransaction add (Fragment fragment, String tag)"}, "addSharedElement(android.view.View,java.lang.String)": {"Returns": [["@B_android#app#FragmentTransaction_E@", "no returns description in source"]], "Parameters": [["@B_android#view#View_E@", "View: A View in a disappearing Fragment to match with a View in an appearing Fragment."], ["@B_java#lang#String_E@", "String: The transitionName for a View in an appearing Fragment to match to the shared element."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Used with to map a View from a removed or hidden Fragment to a View from a shown or added Fragment.", "history": "Added in API level 21 Deprecated in API level 28", "FullName": "public abstract FragmentTransaction addSharedElement (View sharedElement, String name)"}}, "Inheritance": [], "ClassName": "android.app.FragmentTransaction", "ClassDesc": "Use the https:##developer#android#com@B_android#support#v4#app#FragmentTransaction_E@ API for performing a set of Fragment operations."}