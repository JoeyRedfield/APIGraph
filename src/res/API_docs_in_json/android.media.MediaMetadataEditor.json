{"Functions": {"putString(int, java.lang.String)": {"Returns": [["@B_android#media#MediaMetadataEditor_E@", "Returns a reference to the same MediaMetadataEditor object, so you can chain put calls together."]], "Parameters": [["int", "int: The identifier of a the metadata field to set. Valid values are @B_android#media#MediaMetadataRetriever#METADATA_KEY_ALBUM_E@, @B_android#media#MediaMetadataRetriever#METADATA_KEY_ALBUMARTIST_E@, @B_android#media#MediaMetadataRetriever#METADATA_KEY_TITLE_E@, @B_android#media#MediaMetadataRetriever#METADATA_KEY_ARTIST_E@, @B_android#media#MediaMetadataRetriever#METADATA_KEY_AUTHOR_E@, @B_android#media#MediaMetadataRetriever#METADATA_KEY_COMPILATION_E@, @B_android#media#MediaMetadataRetriever#METADATA_KEY_COMPOSER_E@, @B_android#media#MediaMetadataRetriever#METADATA_KEY_DATE_E@, @B_android#media#MediaMetadataRetriever#METADATA_KEY_GENRE_E@, @B_android#media#MediaMetadataRetriever#METADATA_KEY_WRITER_E@."], ["@B_java#lang#String_E@", "String: The text for the given key, or null to signify there is no valid information for the field."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Adds textual information. Note that none of the information added after @B_android#media#MediaMetadataEditor#apply_E@ has been called, will be available to consumers of metadata stored by the MediaMetadataEditor.", "history": "added in API level 19", "FullName": "public MediaMetadataEditor putString (int key, String value)"}, "putBitmap(int, android.graphics.Bitmap)": {"Returns": [["@B_android#media#MediaMetadataEditor_E@", "Returns a reference to the same MediaMetadataEditor object, so you can chain put calls together."]], "Parameters": [["int", "int: the identifier of the bitmap to set. The only valid value is @B_android#media#MediaMetadataEditor#BITMAP_KEY_ARTWORK_E@"], ["@B_android#graphics#Bitmap_E@", "Bitmap: The bitmap for the artwork, or null if there isn't any."]], "Throws": [["", "IllegalArgumentException"], ["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": ["@B_android#graphics#Bitmap_E@"], "Permissions": [], "Description": "Adds image.", "history": "added in API level 19", "FullName": "public MediaMetadataEditor putBitmap (int key, Bitmap bitmap)"}, "getLong(int,long)": {"Returns": [["long", "the long value for the key, or the supplied default value if the key is not present"]], "Parameters": [["int", "int: one of the keys supported in @B_android#media#MediaMetadataEditor#putLong_E@"], ["long", "long: the value returned if the key is not present"]], "Throws": [["", "java.lang.IllegalArgumentException"], ["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Returns the long value for the key.", "history": "Added in API level 19 Deprecated in API level 21", "FullName": "public long getLong (int key, long defaultValue)"}, "putLong(int, long)": {"Returns": [["@B_android#media#MediaMetadataEditor_E@", "Returns a reference to the same MediaMetadataEditor object, so you can chain put calls together."]], "Parameters": [["int", "int: the identifier of a the metadata field to set. Valid values are @B_android#media#MediaMetadataRetriever#METADATA_KEY_CD_TRACK_NUMBER_E@, @B_android#media#MediaMetadataRetriever#METADATA_KEY_DISC_NUMBER_E@, @B_android#media#MediaMetadataRetriever#METADATA_KEY_DURATION_E@ (with a value expressed in milliseconds), @B_android#media#MediaMetadataRetriever#METADATA_KEY_YEAR_E@."], ["long", "long: The long value for the given key"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Adds numerical information. Note that none of the information added after @B_android#media#MediaMetadataEditor#apply_E@ has been called will be available to consumers of metadata stored by the MediaMetadataEditor.", "history": "added in API level 19", "FullName": "public MediaMetadataEditor putLong (int key, long value)"}, "putBitmap(int,android.graphics.Bitmap)": {"Returns": [["@B_android#media#MediaMetadataEditor_E@", "Returns a reference to the same MediaMetadataEditor object, so you can chain put calls together."]], "Parameters": [["int", "int: the identifier of the bitmap to set. The only valid value is @B_android#media#MediaMetadataEditor#BITMAP_KEY_ARTWORK_E@"], ["@B_android#graphics#Bitmap_E@", "Bitmap: The bitmap for the artwork, or null if there isn't any."]], "Throws": [["", "java.lang.IllegalArgumentException"], ["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": ["@B_android#graphics#Bitmap_E@"], "Permissions": [], "Description": "Adds image.", "history": "Added in API level 19 Deprecated in API level 21", "FullName": "public MediaMetadataEditor putBitmap (int key, Bitmap bitmap)"}, "getString(int,java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "the @B_java#lang#String_E@ value for the key, or the supplied default value if the key is not present"]], "Parameters": [["int", "int: one of the keys supported in @B_android#media#MediaMetadataEditor#putString_E@"], ["@B_java#lang#String_E@", "String: the value returned if the key is not present"]], "Throws": [["", "java.lang.IllegalArgumentException"], ["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_java#lang#String_E@ value for the key.", "history": "Added in API level 19 Deprecated in API level 21", "FullName": "public String getString (int key, String defaultValue)"}, "clear()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Clears all the pending metadata changes set since the MediaMetadataEditor instance was created or since this method was last called. Note that clearing the metadata doesn't reset the editable keys (use @B_android#media#MediaMetadataEditor#removeEditableKeys_E@ instead).", "history": "Added in API level 19 Deprecated in API level 21", "FullName": "public void clear ()"}, "getBitmap(int,android.graphics.Bitmap)": {"Returns": [["@B_android#graphics#Bitmap_E@", "the @B_android#graphics#Bitmap_E@ value for the key, or the supplied default value if the key is not present"]], "Parameters": [["int", "int: the @B_android#media#MediaMetadataEditor#BITMAP_KEY_ARTWORK_E@ key"], ["@B_android#graphics#Bitmap_E@", "Bitmap: the value returned if the key is not present"]], "Throws": [["", "java.lang.IllegalArgumentException"], ["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#graphics#Bitmap_E@ value for the key.", "history": "Added in API level 19 Deprecated in API level 21", "FullName": "public Bitmap getBitmap (int key, Bitmap defaultValue)"}, "getLong(int, long)": {"Returns": [["long", "the long value for the key, or the supplied default value if the key is not present"]], "Parameters": [["int", "int: one of the keys supported in @B_android#media#MediaMetadataEditor#putLong_E@"], ["long", "long: the value returned if the key is not present"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Returns the long value for the key.", "history": "added in API level 19", "FullName": "public long getLong (int key, long defaultValue)"}, "getEditableKeys()": {"Returns": [["int[]", "null if there are no editable keys, or an array containing the keys."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the keys flagged as editable.", "history": "Added in API level 19 Deprecated in API level 21", "FullName": "public int[] getEditableKeys ()"}, "apply()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Applies all of the metadata changes that have been set since the MediaMetadataEditor instance was created or since @B_android#media#MediaMetadataEditor#clear_E@ was called. Subclasses should synchronize on this for thread safety.", "history": "Added in API level 19 Deprecated in API level 21", "FullName": "public abstract void apply ()"}, "putObject(int, java.lang.Object)": {"Returns": [["@B_android#media#MediaMetadataEditor_E@", "Returns a reference to the same MediaMetadataEditor object, so you can chain put calls together."]], "Parameters": [["int", "int: the identifier of a the metadata field to set. Valid keys for a: Bitmap object are BITMAP_KEY_ARTWORK, String object are the same as for putString(int, String) Long object are the same as for putLong(int, long) Rating object are RATING_KEY_BY_OTHERS and RATING_KEY_BY_USER."], ["@B_java#lang#Object_E@", "Object: the metadata to add."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Adds information stored as an instance. Note that none of the information added after @B_android#media#MediaMetadataEditor#apply_E@ has been called will be available to consumers of metadata stored by the MediaMetadataEditor.", "history": "added in API level 19", "FullName": "public MediaMetadataEditor putObject (int key, Object value)"}, "getBitmap(int, android.graphics.Bitmap)": {"Returns": [["@B_android#graphics#Bitmap_E@", "the @B_android#graphics#Bitmap_E@ value for the key, or the supplied default value if the key is not present"]], "Parameters": [["int", "int: the @B_android#media#MediaMetadataEditor#BITMAP_KEY_ARTWORK_E@ key"], ["@B_android#graphics#Bitmap_E@", "Bitmap: the value returned if the key is not present"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#graphics#Bitmap_E@ value for the key.", "history": "added in API level 19", "FullName": "public Bitmap getBitmap (int key, Bitmap defaultValue)"}, "getString(int, java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "the @B_java#lang#String_E@ value for the key, or the supplied default value if the key is not present"]], "Parameters": [["int", "int: one of the keys supported in @B_android#media#MediaMetadataEditor#putString_E@"], ["@B_java#lang#String_E@", "String: the value returned if the key is not present"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_java#lang#String_E@ value for the key.", "history": "added in API level 19", "FullName": "public String getString (int key, String defaultValue)"}, "getObject(int, java.lang.Object)": {"Returns": [["@B_java#lang#Object_E@", "the object for the key, as a @B_java#lang#Long_E@, @B_android#graphics#Bitmap_E@, @B_java#lang#String_E@, or @B_android#media#Rating_E@ depending on the key value, or the supplied default value if the key is not present"]], "Parameters": [["int", "int: one of the keys supported in @B_android#media#MediaMetadataEditor#putObject_E@"], ["@B_java#lang#Object_E@", "Object: the value returned if the key is not present"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Returns an object representation of the value for the key", "history": "added in API level 19", "FullName": "public Object getObject (int key, Object defaultValue)"}, "getObject(int,java.lang.Object)": {"Returns": [["@B_java#lang#Object_E@", "the object for the key, as a @B_java#lang#Long_E@, @B_android#graphics#Bitmap_E@, @B_java#lang#String_E@, or @B_android#media#Rating_E@ depending on the key value, or the supplied default value if the key is not present"]], "Parameters": [["int", "int: one of the keys supported in @B_android#media#MediaMetadataEditor#putObject_E@"], ["@B_java#lang#Object_E@", "Object: the value returned if the key is not present"]], "Throws": [["", "java.lang.IllegalArgumentException"], ["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Returns an object representation of the value for the key", "history": "Added in API level 19 Deprecated in API level 21", "FullName": "public Object getObject (int key, Object defaultValue)"}, "putLong(int,long)": {"Returns": [["@B_android#media#MediaMetadataEditor_E@", "Returns a reference to the same MediaMetadataEditor object, so you can chain put calls together."]], "Parameters": [["int", "int: the identifier of a the metadata field to set. Valid values are @B_android#media#MediaMetadataRetriever#METADATA_KEY_CD_TRACK_NUMBER_E@, @B_android#media#MediaMetadataRetriever#METADATA_KEY_DISC_NUMBER_E@, @B_android#media#MediaMetadataRetriever#METADATA_KEY_DURATION_E@ (with a value expressed in milliseconds), @B_android#media#MediaMetadataRetriever#METADATA_KEY_YEAR_E@."], ["long", "long: The long value for the given key"]], "Throws": [["", "java.lang.IllegalArgumentException"], ["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Adds numerical information. Note that none of the information added after @B_android#media#MediaMetadataEditor#apply_E@ has been called will be available to consumers of metadata stored by the MediaMetadataEditor.", "history": "Added in API level 19 Deprecated in API level 21", "FullName": "public MediaMetadataEditor putLong (int key, long value)"}, "removeEditableKeys()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Causes all metadata fields to be read-only.", "history": "Added in API level 19 Deprecated in API level 21", "FullName": "public void removeEditableKeys ()"}, "putString(int,java.lang.String)": {"Returns": [["@B_android#media#MediaMetadataEditor_E@", "Returns a reference to the same MediaMetadataEditor object, so you can chain put calls together."]], "Parameters": [["int", "int: The identifier of a the metadata field to set. Valid values are @B_android#media#MediaMetadataRetriever#METADATA_KEY_ALBUM_E@, @B_android#media#MediaMetadataRetriever#METADATA_KEY_ALBUMARTIST_E@, @B_android#media#MediaMetadataRetriever#METADATA_KEY_TITLE_E@, @B_android#media#MediaMetadataRetriever#METADATA_KEY_ARTIST_E@, @B_android#media#MediaMetadataRetriever#METADATA_KEY_AUTHOR_E@, @B_android#media#MediaMetadataRetriever#METADATA_KEY_COMPILATION_E@, @B_android#media#MediaMetadataRetriever#METADATA_KEY_COMPOSER_E@, @B_android#media#MediaMetadataRetriever#METADATA_KEY_DATE_E@, @B_android#media#MediaMetadataRetriever#METADATA_KEY_GENRE_E@, @B_android#media#MediaMetadataRetriever#METADATA_KEY_WRITER_E@."], ["@B_java#lang#String_E@", "String: The text for the given key, or null to signify there is no valid information for the field."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Adds textual information. Note that none of the information added after @B_android#media#MediaMetadataEditor#apply_E@ has been called, will be available to consumers of metadata stored by the MediaMetadataEditor.", "history": "Added in API level 19 Deprecated in API level 21", "FullName": "public MediaMetadataEditor putString (int key, String value)"}, "addEditableKey(int)": {"Returns": [], "Parameters": [["int", "int: the type of metadata that can be edited. The supported key is @B_android#media#MediaMetadataEditor#RATING_KEY_BY_USER_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flags the given key as being editable. This should only be used by metadata publishers, such as @B_android#media#RemoteControlClient_E@, which will declare the metadata field as eligible to be updated, with new values received through the @B_android#media#RemoteControlClient#OnMetadataUpdateListener_E@ interface.", "history": "Added in API level 19 Deprecated in API level 21", "FullName": "public void addEditableKey (int key)"}, "putObject(int,java.lang.Object)": {"Returns": [["@B_android#media#MediaMetadataEditor_E@", "Returns a reference to the same MediaMetadataEditor object, so you can chain put calls together."]], "Parameters": [["int", "int: the identifier of a the metadata field to set. Valid keys for a: Bitmap object are BITMAP_KEY_ARTWORK, String object are the same as for putString(int, java.lang.String) Long object are the same as for putLong(int, long) Rating object are RATING_KEY_BY_OTHERS and RATING_KEY_BY_USER."], ["@B_java#lang#Object_E@", "Object: the metadata to add."]], "Throws": [["", "java.lang.IllegalArgumentException"], ["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Adds information stored as an instance. Note that none of the information added after @B_android#media#MediaMetadataEditor#apply_E@ has been called will be available to consumers of metadata stored by the MediaMetadataEditor.", "history": "Added in API level 19 Deprecated in API level 21", "FullName": "public MediaMetadataEditor putObject (int key, Object value)"}}, "Inheritance": [], "ClassName": "android.media.MediaMetadataEditor", "ClassDesc": "Use @B_android#media#MediaMetadata_E@ instead together with @B_android#media#session#MediaSession_E@. An abstract class for editing and storing metadata that can be published by @B_android#media#RemoteControlClient_E@. See the @B_android#media#RemoteControlClient#editMetadata_E@ method to instantiate a @B_android#media#RemoteControlClient#MetadataEditor_E@ object."}