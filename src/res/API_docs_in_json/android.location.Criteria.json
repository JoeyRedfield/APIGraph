{"Functions": {"setSpeedRequired(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether the provider must provide speed information. Not all fixes are guaranteed to contain such information.", "history": "Added in API level 1", "FullName": "public void setSpeedRequired (boolean speedRequired)"}, "setAccuracy(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if accuracy is not one of the supported constants"]], "SeeAlso": [], "Permissions": [], "Description": "Indicates the desired accuracy for latitude and longitude. Accuracy may be @B_android#location#Criteria#ACCURACY_FINE_E@ if desired location is fine, else it can be @B_android#location#Criteria#ACCURACY_COARSE_E@. More accurate location may consume more power and may take longer.", "history": "Added in API level 1", "FullName": "public void setAccuracy (int accuracy)"}, "isCostAllowed()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether the provider is allowed to incur monetary cost.", "history": "Added in API level 1", "FullName": "public boolean isCostAllowed ()"}, "getBearingAccuracy()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a constant indicating the desired bearing accuracy. Accuracy may be @B_android#location#Criteria#ACCURACY_LOW_E@, @B_android#location#Criteria#ACCURACY_HIGH_E@, or @B_android#location#Criteria#NO_REQUIREMENT_E@.", "history": "Added in API level 9", "FullName": "public int getBearingAccuracy ()"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 1", "FullName": "public int describeContents ()"}, "setAltitudeRequired(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether the provider must provide altitude information. Not all fixes are guaranteed to contain such information.", "history": "Added in API level 1", "FullName": "public void setAltitudeRequired (boolean altitudeRequired)"}, "setBearingAccuracy(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if accuracy is not one of the supported constants"]], "SeeAlso": [], "Permissions": [], "Description": "Indicates the desired bearing accuracy. Accuracy may be @B_android#location#Criteria#ACCURACY_LOW_E@, @B_android#location#Criteria#ACCURACY_HIGH_E@, or @B_android#location#Criteria#NO_REQUIREMENT_E@. More accurate location may consume more power and may take longer.", "history": "Added in API level 9", "FullName": "public void setBearingAccuracy (int accuracy)"}, "getVerticalAccuracy()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a constant indicating the desired vertical accuracy (altitude). Accuracy may be @B_android#location#Criteria#ACCURACY_LOW_E@, @B_android#location#Criteria#ACCURACY_HIGH_E@, or @B_android#location#Criteria#NO_REQUIREMENT_E@.", "history": "Added in API level 9", "FullName": "public int getVerticalAccuracy ()"}, "getPowerRequirement()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a constant indicating the desired power requirement. The returned", "history": "Added in API level 1", "FullName": "public int getPowerRequirement ()"}, "getHorizontalAccuracy()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a constant indicating the desired horizontal accuracy (latitude and longitude). Accuracy may be @B_android#location#Criteria#ACCURACY_LOW_E@, @B_android#location#Criteria#ACCURACY_MEDIUM_E@, @B_android#location#Criteria#ACCURACY_HIGH_E@ or @B_android#location#Criteria#NO_REQUIREMENT_E@.", "history": "Added in API level 9", "FullName": "public int getHorizontalAccuracy ()"}, "setCostAllowed(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether the provider is allowed to incur monetary cost.", "history": "Added in API level 1", "FullName": "public void setCostAllowed (boolean costAllowed)"}, "isBearingRequired()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether the provider must provide bearing information. Not all fixes are guaranteed to contain such information.", "history": "Added in API level 1", "FullName": "public boolean isBearingRequired ()"}, "Criteria()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new Criteria object. The new object will have no requirements on accuracy, power, or response time; will not require altitude, speed, or bearing; and will not allow monetary cost.", "history": "Added in API level 1", "FullName": "public Criteria ()"}, "getAccuracy()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a constant indicating desired accuracy of location Accuracy may be @B_android#location#Criteria#ACCURACY_FINE_E@ if desired location is fine, else it can be @B_android#location#Criteria#ACCURACY_COARSE_E@.", "history": "Added in API level 1", "FullName": "public int getAccuracy ()"}, "setBearingRequired(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether the provider must provide bearing information. Not all fixes are guaranteed to contain such information.", "history": "Added in API level 1", "FullName": "public void setBearingRequired (boolean bearingRequired)"}, "setPowerRequirement(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates the desired maximum power level. The level parameter must be one of NO_REQUIREMENT, POWER_LOW, POWER_MEDIUM, or POWER_HIGH.", "history": "Added in API level 1", "FullName": "public void setPowerRequirement (int level)"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 1", "FullName": "public void writeToParcel (Parcel parcel, int flags)"}, "getSpeedAccuracy()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a constant indicating the desired speed accuracy Accuracy may be @B_android#location#Criteria#ACCURACY_LOW_E@, @B_android#location#Criteria#ACCURACY_HIGH_E@, or @B_android#location#Criteria#NO_REQUIREMENT_E@.", "history": "Added in API level 9", "FullName": "public int getSpeedAccuracy ()"}, "isAltitudeRequired()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether the provider must provide altitude information. Not all fixes are guaranteed to contain such information.", "history": "Added in API level 1", "FullName": "public boolean isAltitudeRequired ()"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 1", "FullName": "public String toString ()"}, "setSpeedAccuracy(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if accuracy is not one of the supported constants"]], "SeeAlso": [], "Permissions": [], "Description": "Indicates the desired speed accuracy. Accuracy may be @B_android#location#Criteria#ACCURACY_LOW_E@, @B_android#location#Criteria#ACCURACY_HIGH_E@, or @B_android#location#Criteria#NO_REQUIREMENT_E@. More accurate location may consume more power and may take longer.", "history": "Added in API level 9", "FullName": "public void setSpeedAccuracy (int accuracy)"}, "setHorizontalAccuracy(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if accuracy is not one of the supported constants"]], "SeeAlso": [], "Permissions": [], "Description": "Indicates the desired horizontal accuracy (latitude and longitude). Accuracy may be @B_android#location#Criteria#ACCURACY_LOW_E@, @B_android#location#Criteria#ACCURACY_MEDIUM_E@, @B_android#location#Criteria#ACCURACY_HIGH_E@ or @B_android#location#Criteria#NO_REQUIREMENT_E@. More accurate location may consume more power and may take longer.", "history": "Added in API level 9", "FullName": "public void setHorizontalAccuracy (int accuracy)"}, "isSpeedRequired()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether the provider must provide speed information. Not all fixes are guaranteed to contain such information.", "history": "Added in API level 1", "FullName": "public boolean isSpeedRequired ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 1", "FullName": "public void writeToParcel (Parcel parcel, int flags)"}, "Criteria(android.location.Criteria)": {"Returns": [], "Parameters": [["@B_android#location#Criteria_E@", "Criteria no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new Criteria object that is a copy of the given criteria.", "history": "Added in API level 1", "FullName": "public Criteria (Criteria criteria)"}, "setVerticalAccuracy(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if accuracy is not one of the supported constants"]], "SeeAlso": [], "Permissions": [], "Description": "Indicates the desired vertical accuracy (altitude). Accuracy may be @B_android#location#Criteria#ACCURACY_LOW_E@, @B_android#location#Criteria#ACCURACY_MEDIUM_E@, @B_android#location#Criteria#ACCURACY_HIGH_E@ or @B_android#location#Criteria#NO_REQUIREMENT_E@. More accurate location may consume more power and may take longer.", "history": "Added in API level 9", "FullName": "public void setVerticalAccuracy (int accuracy)"}}, "Inheritance": [], "ClassName": "android.location.Criteria", "ClassDesc": "A class indicating the application criteria for selecting a location provider. Providers may be ordered according to accuracy, power usage, ability to report altitude, speed, bearing, and monetary cost."}