{"Functions": {"setText(java.text.CharacterIterator)": {"Returns": [], "Parameters": [["@B_java#text#CharacterIterator_E@", "CharacterIterator: new text to scan."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a new text for scanning. The current scan position is reset to first().", "history": "Added in API level 1", "FullName": "public abstract void setText (CharacterIterator newText)"}, "preceding(int)": {"Returns": [["int", "The last boundary before the specified offset or BreakIterator.DONE if the first text boundary is passed in as the offset."]], "Parameters": [["int", "int: the character offset to begin scanning."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the specified offset is less than the first text boundary or greater than the last text boundary."]], "SeeAlso": [], "Permissions": [], "Description": "Returns the last boundary preceding the specified character offset. If the specified offset equals to the first text boundary, it returns BreakIterator.DONE and the iterator's current position is unchanged. Otherwise, the iterator's current position is set to the returned boundary. The value returned is always less than the offset or the value BreakIterator.DONE.", "history": "Added in API level 1", "FullName": "public int preceding (int offset)"}, "BreakIterator()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor. BreakIterator is stateless and has no default behavior.", "history": "Added in API level 1", "FullName": "protected BreakIterator ()"}, "getCharacterInstance(java.util.Locale)": {"Returns": [["@B_java#text#BreakIterator_E@", "A break iterator for character breaks"]], "Parameters": [["@B_java#util#Locale_E@", "Locale: the desired locale"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if locale is null"]], "SeeAlso": [], "Permissions": [], "Description": "Returns a new BreakIterator instance for", "history": "Added in API level 1", "FullName": "public static BreakIterator getCharacterInstance (Locale locale)"}, "first()": {"Returns": [["int", "The character index of the first text boundary."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the first boundary. The iterator's current position is set to the first text boundary.", "history": "Added in API level 1", "FullName": "public abstract int first ()"}, "next()": {"Returns": [["int", "The character index of the next text boundary or BreakIterator.DONE if the current boundary is the last text boundary. Equivalent to next(1)."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#text#BreakIterator#next_E@"], "Permissions": [], "Description": "Returns the boundary following the current boundary. If the current boundary is the last text boundary, it returns BreakIterator.DONE and the iterator's current position is unchanged. Otherwise, the iterator's current position is set to the boundary following the current boundary.", "history": "Added in API level 1", "FullName": "public abstract int next ()"}, "getWordInstance()": {"Returns": [["@B_java#text#BreakIterator_E@", "A break iterator for word breaks"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a new BreakIterator instance for", "history": "Added in API level 1", "FullName": "public static BreakIterator getWordInstance ()"}, "getSentenceInstance()": {"Returns": [["@B_java#text#BreakIterator_E@", "A break iterator for sentence breaks"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a new BreakIterator instance for", "history": "Added in API level 1", "FullName": "public static BreakIterator getSentenceInstance ()"}, "getLineInstance(java.util.Locale)": {"Returns": [["@B_java#text#BreakIterator_E@", "A break iterator for line breaks"]], "Parameters": [["@B_java#util#Locale_E@", "Locale: the desired locale"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if locale is null"]], "SeeAlso": [], "Permissions": [], "Description": "Returns a new BreakIterator instance for", "history": "Added in API level 1", "FullName": "public static BreakIterator getLineInstance (Locale locale)"}, "isBoundary(int)": {"Returns": [["boolean", "true if \"offset\" is a boundary position, false otherwise."]], "Parameters": [["int", "int: the character offset to check."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the specified offset is less than the first text boundary or greater than the last text boundary."]], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the specified character offset is a text boundary.", "history": "Added in API level 1", "FullName": "public boolean isBoundary (int offset)"}, "clone()": {"Returns": [["@B_java#lang#Object_E@", "A copy of this"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a copy of this iterator", "history": "Added in API level 1", "FullName": "public Object clone ()"}, "following(int)": {"Returns": [["int", "The first boundary after the specified offset or BreakIterator.DONE if the last text boundary is passed in as the offset."]], "Parameters": [["int", "int: the character offset to begin scanning."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the specified offset is less than the first text boundary or greater than the last text boundary."]], "SeeAlso": [], "Permissions": [], "Description": "Returns the first boundary following the specified character offset. If the specified offset equals to the last text boundary, it returns BreakIterator.DONE and the iterator's current position is unchanged. Otherwise, the iterator's current position is set to the returned boundary. The value returned is always greater than the offset or the value BreakIterator.DONE.", "history": "Added in API level 1", "FullName": "public abstract int following (int offset)"}, "getSentenceInstance(java.util.Locale)": {"Returns": [["@B_java#text#BreakIterator_E@", "A break iterator for sentence breaks"]], "Parameters": [["@B_java#util#Locale_E@", "Locale: the desired locale"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if locale is null"]], "SeeAlso": [], "Permissions": [], "Description": "Returns a new BreakIterator instance for", "history": "Added in API level 1", "FullName": "public static BreakIterator getSentenceInstance (Locale locale)"}, "getCharacterInstance()": {"Returns": [["@B_java#text#BreakIterator_E@", "A break iterator for character breaks"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a new BreakIterator instance for", "history": "Added in API level 1", "FullName": "public static BreakIterator getCharacterInstance ()"}, "getText()": {"Returns": [["@B_java#text#CharacterIterator_E@", "the text being scanned"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the text being scanned", "history": "Added in API level 1", "FullName": "public abstract CharacterIterator getText ()"}, "current()": {"Returns": [["int", "The text boundary returned from the above methods, first or last text boundary."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#text#BreakIterator#next_E@", "@B_java#text#BreakIterator#previous_E@", "@B_java#text#BreakIterator#first_E@", "@B_java#text#BreakIterator#last_E@", "@B_java#text#BreakIterator#following_E@", "@B_java#text#BreakIterator#preceding_E@"], "Permissions": [], "Description": "Returns character index of the text boundary that was most recently returned by next(), next(int), previous(), first(), last(), following(int) or preceding(int). If any of these methods returns BreakIterator.DONE because either first or last text boundary has been reached, it returns the first or last text boundary depending on which one is reached.", "history": "Added in API level 1", "FullName": "public abstract int current ()"}, "next(int)": {"Returns": [["int", "The character index of the nth boundary from the current position or BreakIterator.DONE if either first or last text boundary has been reached."]], "Parameters": [["int", "int: which boundary to return. A value of 0 does nothing. Negative values move to previous boundaries and positive values move to later boundaries."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the nth boundary from the current boundary. If either the first or last text boundary has been reached, it returns BreakIterator.DONE and the current position is set to either the first or last text boundary depending on which one is reached. Otherwise, the iterator's current position is set to the new boundary. For example, if the iterator's current position is the mth text boundary and three more boundaries exist from the current boundary to the last text boundary, the next(2) call will return m + 2. The new text position is set to the (m + 2)th text boundary. A next(4) call would return BreakIterator.DONE and the last text boundary would become the new text position.", "history": "Added in API level 1", "FullName": "public abstract int next (int n)"}, "previous()": {"Returns": [["int", "The character index of the previous text boundary or BreakIterator.DONE if the current boundary is the first text boundary."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the boundary preceding the current boundary. If the current boundary is the first text boundary, it returns BreakIterator.DONE and the iterator's current position is unchanged. Otherwise, the iterator's current position is set to the boundary preceding the current boundary.", "history": "Added in API level 1", "FullName": "public abstract int previous ()"}, "last()": {"Returns": [["int", "The character index of the last text boundary."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the last boundary. The iterator's current position is set to the last text boundary.", "history": "Added in API level 1", "FullName": "public abstract int last ()"}, "getLineInstance()": {"Returns": [["@B_java#text#BreakIterator_E@", "A break iterator for line breaks"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a new BreakIterator instance for", "history": "Added in API level 1", "FullName": "public static BreakIterator getLineInstance ()"}, "setText(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: new text to scan."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a new text string to be scanned. The current scan position is reset to first().", "history": "Added in API level 1", "FullName": "public void setText (String newText)"}, "getWordInstance(java.util.Locale)": {"Returns": [["@B_java#text#BreakIterator_E@", "A break iterator for word breaks"]], "Parameters": [["@B_java#util#Locale_E@", "Locale: the desired locale"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if locale is null"]], "SeeAlso": [], "Permissions": [], "Description": "Returns a new BreakIterator instance for", "history": "Added in API level 1", "FullName": "public static BreakIterator getWordInstance (Locale locale)"}, "getAvailableLocales()": {"Returns": [["@B_java#util#Locale_E@", "An array of locales for which localized BreakIterator instances are available."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an array of all locales for which the get*Instance methods of this class can return localized instances.", "history": "Added in API level 1", "FullName": "public static Locale[] getAvailableLocales ()"}}, "Inheritance": [], "ClassName": "java.text.BreakIterator", "ClassDesc": "The BreakIterator class implements methods for finding the location of boundaries in text. Instances of BreakIterator maintain a current position and scan over text returning the index of characters where boundaries occur. Internally, BreakIterator scans text using a CharacterIterator, and is thus able to scan text held by any object implementing that protocol. A StringCharacterIterator is used to scan String objects passed to setText. The CharacterIterator object must not be modified after having been passed to setText. If the text in the CharacterIterator object is changed, the caller must reset BreakIterator by calling setText. You use the factory methods provided by this class to create instances of various types of break iterators. In particular, use getWordInstance, getLineInstance, getSentenceInstance, and getCharacterInstance to create BreakIterators that perform word, line, sentence, and character boundary analysis respectively. A single BreakIterator can work only on one unit (word, line, sentence, and so on). You must use a different iterator for each unit boundary analysis you wish to perform. The BreakIterator instances returned by the factory methods of this class are intended for use with natural languages only, not for programming language text. It is however possible to define subclasses that tokenize a programming language. Creating and using text boundaries:"}