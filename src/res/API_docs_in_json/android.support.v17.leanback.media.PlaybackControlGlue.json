{"Functions": {"onHostStart()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method is called when {@link PlaybackGlueHost is started. Subclass may override.", "history": "added in version 25.1.0", "FullName": "void onHostStart ()"}, "onHostStop()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method is called when {@link PlaybackGlueHost is stopped. Subclass may override.", "history": "added in version 25.1.0", "FullName": "void onHostStop ()"}, "getFastForwardSpeeds()": {"Returns": [["int[]", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the fast forward speeds.", "history": "added in version 22.0.0", "FullName": "int[] getFastForwardSpeeds ()"}, "getPlaybackRowPresenter()": {"Returns": [["@B_android#support#v17#leanback#widget#PlaybackRowPresenter_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the playback row Presenter to be passed to @B_android#support#v17#leanback#media#PlaybackGlueHost_E@ in @B_android#support#v17#leanback#media#PlaybackControlGlue#onAttachedToHost_E@.", "history": "added in version 25.4.0", "FullName": "PlaybackRowPresenter getPlaybackRowPresenter ()"}, "getMediaArt()": {"Returns": [["@B_android#graphics#drawable#Drawable_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a bitmap of the art for the media item.", "history": "added in version 22.0.0", "FullName": "Drawable getMediaArt ()"}, "getControlsRowPresenter()": {"Returns": [["@B_android#support#v17#leanback#widget#PlaybackControlsRowPresenter_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "PlaybackControlGlue supports any PlaybackRowPresenter, use @B_android#support#v17#leanback#media#PlaybackControlGlue#getPlaybackRowPresenter_E@. Returns the playback controls row Presenter managed by the glue layer.", "history": "added in version 25.1.0", "FullName": "PlaybackControlsRowPresenter getControlsRowPresenter ()"}, "onMetadataChanged()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Must be called appropriately by a subclass when the metadata state has changed.", "history": "added in version 22.0.0", "FullName": "void onMetadataChanged ()"}, "enableProgressUpdating(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override this to start/stop a runnable to call @B_android#support#v17#leanback#media#PlaybackControlGlue#updateProgress_E@ at an interval such as @B_android#support#v17#leanback#media#PlaybackControlGlue#getUpdatePeriod_E@.", "history": "added in version 22.0.0", "FullName": "void enableProgressUpdating (boolean enable)"}, "play(int)": {"Returns": [], "Parameters": [["int", "int: The desired playback speed. For normal playback this will be @B_android#support#v17#leanback#media#PlaybackControlGlue#PLAYBACK_SPEED_NORMAL_E@; higher positive values for fast forward, and negative values for rewind."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Start playback at the given speed.", "history": "added in version 25.1.0", "FullName": "void play (int speed)"}, "getCurrentSpeedId()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current playback speed. When playing normally, @B_android#support#v17#leanback#media#PlaybackControlGlue#PLAYBACK_SPEED_NORMAL_E@ should be returned.", "history": "added in version 22.0.0", "FullName": "int getCurrentSpeedId ()"}, "isMediaPlaying()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if media is currently playing.", "history": "added in version 22.0.0", "FullName": "boolean isMediaPlaying ()"}, "updateProgress()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Updates the progress bar based on the current media playback position.", "history": "added in version 22.0.0", "FullName": "void updateProgress ()"}, "isFadingEnabled()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if controls are set to fade when media is playing.", "history": "added in version 22.0.0", "FullName": "boolean isFadingEnabled ()"}, "onCreateControlsRowAndPresenter()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Instantiating a @B_android#support#v17#leanback#widget#PlaybackControlsRow_E@ and corresponding @B_android#support#v17#leanback#widget#PlaybackControlsRowPresenter_E@. Subclass may override.", "history": "added in version 25.1.0", "FullName": "void onCreateControlsRowAndPresenter ()"}, "getMediaTitle()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the title of the media item.", "history": "added in version 22.0.0", "FullName": "CharSequence getMediaTitle ()"}, "isPlaying()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if media is currently playing.", "history": "added in version 26.0.0-beta1", "FullName": "boolean isPlaying ()"}, "getRewindSpeeds()": {"Returns": [["int[]", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the rewind speeds.", "history": "added in version 22.0.0", "FullName": "int[] getRewindSpeeds ()"}, "getCurrentPosition()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current position of the media item in milliseconds.", "history": "added in version 22.0.0", "FullName": "int getCurrentPosition ()"}, "getMediaSubtitle()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the subtitle of the media item.", "history": "added in version 22.0.0", "FullName": "CharSequence getMediaSubtitle ()"}, "getSupportedActions()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a bitmask of actions supported by the media player.", "history": "added in version 22.0.0", "FullName": "long getSupportedActions ()"}, "getControlsRow()": {"Returns": [["@B_android#support#v17#leanback#widget#PlaybackControlsRow_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the playback controls row managed by the glue layer.", "history": "added in version 22.0.0", "FullName": "PlaybackControlsRow getControlsRow ()"}, "play()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Starts the media player.", "history": "added in version 25.1.0", "FullName": "void play ()"}, "onDetachedFromHost()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method is called when current associated @B_android#support#v17#leanback#media#PlaybackGlueHost_E@ is attached to a different @B_android#support#v17#leanback#media#PlaybackGlue_E@ or @B_android#support#v17#leanback#media#PlaybackGlueHost_E@ is destroyed . Subclass may override and call super.onDetachedFromHost() at last. A typical PlaybackGlue will release resources (e.g. MediaPlayer or connection to playback service) in this method.", "history": "added in version 25.1.0", "FullName": "void onDetachedFromHost ()"}, "onStateChanged()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Must be called appropriately by a subclass when the playback state has changed. It updates the playback state displayed on the media player.", "history": "added in version 22.0.0", "FullName": "void onStateChanged ()"}, "setFadingEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the controls to fade after a timeout when media is playing.", "history": "added in version 22.0.0", "FullName": "void setFadingEnabled (boolean enable)"}, "hasValidMedia()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if there is a valid media item.", "history": "added in version 22.0.0", "FullName": "boolean hasValidMedia ()"}, "getMediaDuration()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the duration of the media item in milliseconds.", "history": "added in version 22.0.0", "FullName": "int getMediaDuration ()"}, "getUpdatePeriod()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the time period in milliseconds that should be used to update the progress. See @B_android#support#v17#leanback#media#PlaybackControlGlue#updateProgress_E@.", "history": "added in version 22.0.0", "FullName": "int getUpdatePeriod ()"}}, "Inheritance": ["java.lang.Object", "@B_android#support#v17#leanback#media#PlaybackGlue_E@"], "ClassName": "android.support.v17.leanback.media.PlaybackControlGlue", "ClassDesc": "A helper class for managing a @B_android#support#v17#leanback#widget#PlaybackControlsRow_E@ and @B_android#support#v17#leanback#media#PlaybackGlueHost_E@ that implements a recommended approach to handling standard playback control actions such as play/pause, fast forward/rewind at progressive speed levels, and skip to next/previous. This helper class is a glue layer in that manages the configuration of and interaction between the leanback UI components by defining a functional interface to the media player. You can instantiate a concrete subclass such as MediaPlayerGlue or you must subclass this abstract helper. To create a subclass you must implement all of the abstract methods and the subclass must invoke @B_android#support#v17#leanback#media#PlaybackControlGlue#onMetadataChanged_E@ and @B_android#support#v17#leanback#media#PlaybackControlGlue#onStateChanged_E@ appropriately. To use an instance of the glue layer, first construct an instance. Constructor parameters inform the glue what speed levels are supported for fast forward/rewind. You may override @B_android#support#v17#leanback#media#PlaybackControlGlue#onCreateControlsRowAndPresenter_E@ which will create a @B_android#support#v17#leanback#widget#PlaybackControlsRow_E@ and a @B_android#support#v17#leanback#widget#PlaybackControlsRowPresenter_E@. You may call @B_android#support#v17#leanback#media#PlaybackControlGlue#setControlsRow_E@ and @B_android#support#v17#leanback#media#PlaybackControlGlue#setPlaybackRowPresenter_E@ to customize your own row and presenter. The helper sets a @B_android#support#v17#leanback#widget#SparseArrayObjectAdapter_E@ on the controls row as the primary actions adapter, and adds actions to it. You can provide additional actions by overriding @B_android#support#v17#leanback#media#PlaybackControlGlue#onCreatePrimaryActions_E@. This helper does not deal in secondary actions so those you may add separately. Provide a click listener on your fragment and if an action is clicked, call @B_android#support#v17#leanback#media#PlaybackControlGlue#onActionClicked_E@. This helper implements a key event handler. If you pass a @B_android#support#v17#leanback#media#PlaybackGlueHost_E@, it will configure its fragment to intercept all key events. Otherwise, you should set the glue object as key event handler to the ViewHolder when bound by your row presenter; see @B_android#support#v17#leanback#widget#RowPresenter#ViewHolder#setOnKeyListener_E@. To update the controls row progress during playback, override @B_android#support#v17#leanback#media#PlaybackControlGlue#enableProgressUpdating_E@ to manage the lifecycle of a periodic callback to @B_android#support#v17#leanback#media#PlaybackControlGlue#updateProgress_E@. @B_android#support#v17#leanback#media#PlaybackControlGlue#getUpdatePeriod_E@ provides a recommended update period."}