{"Functions": {"writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public void writeToParcel (Parcel out, int flags)"}, "isClosed()": {"Returns": [["", "whether this snapshot contents has been closed."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public abstract boolean isClosed ()"}, "writeBytes(byte[])": {"Returns": [["", "Whether or not the data was successfully written to disk."]], "Parameters": [["byte[]", "The data to write."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Write the specified data into the snapshot. The contents of the snapshot will be replaced with the data provided in content. The data will be persisted on disk, but is not uploaded to the server until the snapshot is committed via @B_com#google#android#gms#games#snapshot#Snapshots#commitAndClose_E@. Note that this form of the API will fully overwrite the contents of the file. No previous data will be retained. Use @B_com#google#android#gms#games#snapshot#SnapshotContents#modifyBytes_E@ to overwrite parts of the file. If the snapshot was not opened via @B_com#google#android#gms#games#snapshot#Snapshots#open_E@, or if the contents have already been committed via @B_com#google#android#gms#games#snapshot#Snapshots#commitAndClose_E@, this method will throw an exception.", "history": "", "FullName": "public abstract boolean writeBytes (byte[] content)"}, "modifyBytes(int, byte[], int, int)": {"Returns": [["", "Whether or not the data was successfully written to disk."]], "Parameters": [["int", "Position in the snapshot file to start writing data to. 0 indicates the head of the file."], ["byte[]", "The data to write."], ["int", "Position in content to start writing from."], ["int", "Number of bytes from content to write to this snapshot."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Write the specified data into the snapshot. The contents of the snapshot will be replaced with the data provided in content. The data will be persisted on disk, but is not uploaded to the server until the snapshot is committed via @B_com#google#android#gms#games#snapshot#Snapshots#commitAndClose_E@. Note that this form of the API does not necessarily overwrite the entire contents of the file. If you are writing less data than was previously stored in the snapshot, the excess data will remain. Use @B_com#google#android#gms#games#snapshot#SnapshotContents#writeBytes_E@ to fully overwrite the file. If the snapshot was not opened via @B_com#google#android#gms#games#snapshot#Snapshots#open_E@, or if the contents have already been committed via @B_com#google#android#gms#games#snapshot#Snapshots#commitAndClose_E@, this method will throw an exception.", "history": "", "FullName": "public abstract boolean modifyBytes (int dstOffset, byte[] content, int srcOffset, int count)"}, "getParcelFileDescriptor()": {"Returns": [["", "The @B_android#os#ParcelFileDescriptor_E@ for this snapshot, or null if the snapshot is not opened."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the @B_android#os#ParcelFileDescriptor_E@ associated with the underlying file for this snapshot contents. This object can be used to update the data of a snapshot, but the snapshot should still be committed using @B_com#google#android#gms#games#snapshot#Snapshots#commitAndClose_E@ or @B_com#google#android#gms#games#snapshot#Snapshots#resolveConflict_E@ (in case of conflict resolution). If this SnapshotContentsEntity was not obtained via @B_com#google#android#gms#games#snapshot#Snapshot#getSnapshotContents_E@ or @B_com#google#android#gms#games#snapshot#Snapshots#OpenSnapshotResult#getResolutionSnapshotContents_E@, or if the contents have already been committed and closed via @B_com#google#android#gms#games#snapshot#Snapshots#commitAndClose_E@ or @B_com#google#android#gms#games#snapshot#Snapshots#resolveConflict_E@, this method will throw an exception.", "history": "", "FullName": "public abstract ParcelFileDescriptor getParcelFileDescriptor ()"}, "readFully()": {"Returns": [["", "The bytes of the snapshot contents."]], "Parameters": [], "Throws": [["IOException", "if reading the snapshot failed."]], "SeeAlso": [], "Permissions": [], "Description": "Read the contents of a snapshot. If this snapshot was not opened via @B_com#google#android#gms#games#snapshot#Snapshots#open_E@, or if the contents have already been committed via @B_com#google#android#gms#games#snapshot#Snapshots#commitAndClose_E@ this method will throw an exception.", "history": "", "FullName": "public abstract byte[] readFully ()"}, "describeContents()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int describeContents ()"}}, "Inheritance": [], "ClassName": "com.google.android.gms.games.snapshot.SnapshotContents", "ClassDesc": "Data interface for a representation of @B_com#google#android#gms#games#snapshot#Snapshot_E@ contents."}