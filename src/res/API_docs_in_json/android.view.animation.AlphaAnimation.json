{"Functions": {"AlphaAnimation(android.content.Context,android.util.AttributeSet)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: Application context to use"], ["@B_android#util#AttributeSet_E@", "AttributeSet: Attribute set from which to read values"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor used when an AlphaAnimation is loaded from a resource.", "history": "Added in API level 1", "FullName": "public AlphaAnimation (Context context, AttributeSet attrs)"}, "AlphaAnimation(float, float)": {"Returns": [], "Parameters": [["float", "float: Starting alpha value for the animation, where 1.0 means fully opaque and 0.0 means fully transparent."], ["float", "float: Ending alpha value for the animation."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor to use when building an AlphaAnimation from code", "history": "added in API level 1", "FullName": "public AlphaAnimation (float fromAlpha, float toAlpha)"}, "willChangeBounds()": {"Returns": [["boolean", "true if this animation will change the view's bounds"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether or not this animation will affect the bounds of the animated view. For instance, a fade animation will not affect the bounds whereas a 200% scale animation will.", "history": "Added in API level 1", "FullName": "public boolean willChangeBounds ()"}, "applyTransformation(float,android.view.animation.Transformation)": {"Returns": [], "Parameters": [["float", "float: The value of the normalized time (0.0 to 1.0) after it has been run through the interpolation function."], ["@B_android#view#animation#Transformation_E@", "Transformation: The Transformation object to fill in with the current transforms."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Changes the alpha property of the supplied @B_android#view#animation#Transformation_E@", "history": "Added in API level 1", "FullName": "protected void applyTransformation (float interpolatedTime, Transformation t)"}, "willChangeTransformationMatrix()": {"Returns": [["boolean", "true if this animation will change the transformation matrix"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether or not this animation will affect the transformation matrix. For instance, a fade animation will not affect the matrix whereas a scale animation will.", "history": "Added in API level 1", "FullName": "public boolean willChangeTransformationMatrix ()"}, "AlphaAnimation(float,float)": {"Returns": [], "Parameters": [["float", "float: Starting alpha value for the animation, where 1.0 means fully opaque and 0.0 means fully transparent."], ["float", "float: Ending alpha value for the animation."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor to use when building an AlphaAnimation from code", "history": "Added in API level 1", "FullName": "public AlphaAnimation (float fromAlpha, float toAlpha)"}}, "Inheritance": ["@B_android#view#animation#Animation_E@"], "ClassName": "android.view.animation.AlphaAnimation", "ClassDesc": "An animation that controls the alpha level of an object. Useful for fading things in and out. This animation ends up changing the alpha property of a @B_android#view#animation#Transformation_E@"}