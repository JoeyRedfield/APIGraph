{"Functions": {"error(java.lang.String,java.lang.Exception,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a descriptive string (may be null)"], ["@B_java#lang#Exception_E@", "Exception: an exception (may be null)"], ["int", "int: an error code defined in ErrorManager"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The error method is called when a Handler failure occurs. This method may be overridden in subclasses. The default behavior in this base class is that the first call is reported to System.err, and subsequent calls are ignored.", "history": "Added in API level 1", "FullName": "public void error (String msg, Exception ex, int code)"}, "error(java.lang.String, java.lang.Exception, int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a descriptive string (may be null)"], ["@B_java#lang#Exception_E@", "Exception: an exception (may be null)"], ["int", "int: an error code defined in ErrorManager"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The error method is called when a Handler failure occurs. This method may be overridden in subclasses. The default behavior in this base class is that the first call is reported to System.err, and subsequent calls are ignored.", "history": "added in API level 1", "FullName": "public void error (String msg, Exception ex, int code)"}, "ErrorManager()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public ErrorManager ()"}}, "Inheritance": [], "ClassName": "java.util.logging.ErrorManager", "ClassDesc": "ErrorManager objects can be attached to Handlers to process any error that occurs on a Handler during Logging. When processing logging output, if a Handler encounters problems then rather than throwing an Exception back to the issuer of the logging call (who is unlikely to be interested) the Handler should call its associated ErrorManager."}