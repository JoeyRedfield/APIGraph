{"Functions": {"instantiateProvider(java.lang.ClassLoader,java.lang.String)": {"Returns": [["@B_android#content#ContentProvider_E@", "This value will never be null."]], "Parameters": [["@B_java#lang#ClassLoader_E@", "ClassLoader: The default classloader to use for instantiation. This value must never be null."], ["@B_java#lang#String_E@", "String: The class to be instantiated. This value must never be null."]], "Throws": [["@B_java#lang#ClassNotFoundException_E@", ""], ["@B_java#lang#IllegalAccessException_E@", ""], ["@B_java#lang#InstantiationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Allows application to override the creation of providers. This can be used to perform things such as dependency injection or class loader changes to these classes. This method is only intended to provide a hook for instantiation. It does not provide earlier access to the ContentProvider object. The returned object will not be initialized with a Context yet and should not be used to interact with other android APIs.", "history": "Added in API level 28", "FullName": "public ContentProvider instantiateProvider (ClassLoader cl, String className)"}, "instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)": {"Returns": [["@B_android#content#BroadcastReceiver_E@", "This value will never be null."]], "Parameters": [["@B_java#lang#ClassLoader_E@", "ClassLoader: The default classloader to use for instantiation. This value must never be null."], ["@B_java#lang#String_E@", "String: The class to be instantiated. This value must never be null."], ["@B_android#content#Intent_E@", "Intent: Intent creating the class. This value may be null."]], "Throws": [["@B_java#lang#ClassNotFoundException_E@", ""], ["@B_java#lang#IllegalAccessException_E@", ""], ["@B_java#lang#InstantiationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Allows application to override the creation of receivers. This can be used to perform things such as dependency injection or class loader changes to these classes.", "history": "Added in API level 28", "FullName": "public BroadcastReceiver instantiateReceiver (ClassLoader cl, String className, Intent intent)"}, "instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)": {"Returns": [["@B_android#app#Service_E@", "This value will never be null."]], "Parameters": [["@B_java#lang#ClassLoader_E@", "ClassLoader: The default classloader to use for instantiation. This value must never be null."], ["@B_java#lang#String_E@", "String: The class to be instantiated. This value must never be null."], ["@B_android#content#Intent_E@", "Intent: Intent creating the class. This value may be null."]], "Throws": [["@B_java#lang#ClassNotFoundException_E@", ""], ["@B_java#lang#IllegalAccessException_E@", ""], ["@B_java#lang#InstantiationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Allows application to override the creation of services. This can be used to perform things such as dependency injection or class loader changes to these classes. This method is only intended to provide a hook for instantiation. It does not provide earlier access to the Service object. The returned object will not be initialized as a Context yet and should not be used to interact with other android APIs.", "history": "Added in API level 28", "FullName": "public Service instantiateService (ClassLoader cl, String className, Intent intent)"}, "instantiateApplication(java.lang.ClassLoader,java.lang.String)": {"Returns": [["@B_android#app#Application_E@", "This value will never be null."]], "Parameters": [["@B_java#lang#ClassLoader_E@", "ClassLoader: The default classloader to use for instantiation. This value must never be null."], ["@B_java#lang#String_E@", "String: The class to be instantiated. This value must never be null."]], "Throws": [["@B_java#lang#ClassNotFoundException_E@", ""], ["@B_java#lang#IllegalAccessException_E@", ""], ["@B_java#lang#InstantiationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Allows application to override the creation of the application object. This can be used to perform things such as dependency injection or class loader changes to these classes. This method is only intended to provide a hook for instantiation. It does not provide earlier access to the Application object. The returned object will not be initialized as a Context yet and should not be used to interact with other android APIs.", "history": "Added in API level 28", "FullName": "public Application instantiateApplication (ClassLoader cl, String className)"}, "AppComponentFactory()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 28", "FullName": "public AppComponentFactory ()"}, "instantiateClassLoader(java.lang.ClassLoader,android.content.pm.ApplicationInfo)": {"Returns": [["@B_java#lang#ClassLoader_E@", "This value will never be null."]], "Parameters": [["@B_java#lang#ClassLoader_E@", "ClassLoader: The default class loader created by the platform. This value must never be null."], ["@B_android#content#pm#ApplicationInfo_E@", "ApplicationInfo: Information about the application being loaded. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Selects the class loader which will be used by the platform to instantiate app components. The default implementation of this method returns the cl parameter unchanged. Applications can override this method to set up a custom class loader or a custom class loader hierarchy and return it to the platform. The method is a hook invoked before any application components are instantiated or the application Context is initialized. It is intended to allow the application's classes to be loaded from a different source than the base/split APK(s). The default class loader cl is created by the platform and used to load the application's base or split APK(s). Its parent is typically the boot class loader, unless running under instrumentation. Its classname is configurable using the @B_android#R#attr#classLoader_E@ manifest attribute.", "history": "Added in API level 29", "FullName": "public ClassLoader instantiateClassLoader (ClassLoader cl, ApplicationInfo aInfo)"}, "instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)": {"Returns": [["@B_android#app#Activity_E@", "This value will never be null."]], "Parameters": [["@B_java#lang#ClassLoader_E@", "ClassLoader: The default classloader to use for instantiation. This value must never be null."], ["@B_java#lang#String_E@", "String: The class to be instantiated. This value must never be null."], ["@B_android#content#Intent_E@", "Intent: Intent creating the class. This value may be null."]], "Throws": [["@B_java#lang#ClassNotFoundException_E@", ""], ["@B_java#lang#IllegalAccessException_E@", ""], ["@B_java#lang#InstantiationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Allows application to override the creation of activities. This can be used to perform things such as dependency injection or class loader changes to these classes. This method is only intended to provide a hook for instantiation. It does not provide earlier access to the Activity object. The returned object will not be initialized as a Context yet and should not be used to interact with other android APIs.", "history": "Added in API level 28", "FullName": "public Activity instantiateActivity (ClassLoader cl, String className, Intent intent)"}}, "Inheritance": [], "ClassName": "android.app.AppComponentFactory", "ClassDesc": "Interface used to control the instantiation of manifest elements."}