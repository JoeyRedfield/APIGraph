{"Functions": {"addAll(T...)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["T...", "T no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#icu#text#UnicodeSet#addAll_E@"], "Permissions": [], "Description": "", "history": "Added in API level 24", "FullName": "public UnicodeSet addAll (T... collection)"}, "matchesIndexValue(int)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Implementation of UnicodeMatcher API. Returns", "history": "Added in API level 24", "FullName": "public boolean matchesIndexValue (int v)"}, "UnicodeSet(java.lang.String,java.text.ParsePosition,android.icu.text.SymbolTable)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a string specifying what characters are in the set"], ["@B_java#text#ParsePosition_E@", "ParsePosition: on input, the position in pattern at which to start parsing. On output, the position after the last character parsed."], ["@B_android#icu#text#SymbolTable_E@", "SymbolTable: a symbol table mapping variables to char[] arrays and chars to UnicodeSets"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the pattern contains a syntax error."]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a set from the given pattern. See the class description for the syntax of the pattern language.", "history": "Added in API level 24", "FullName": "public UnicodeSet (String pattern, ParsePosition pos, SymbolTable symbols)"}, "span(java.lang.CharSequence,int,android.icu.text.UnicodeSet.SpanCondition)": {"Returns": [["int", "the string index which ends the span (i.e. exclusive)"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: The string to be spanned"], ["int", "int: The start index that the span begins"], ["@B_android#icu#text#UnicodeSet#SpanCondition_E@", "UnicodeSet.SpanCondition: The span condition"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Span a string using this UnicodeSet. If the start index is less than 0, span will start from 0. If the start index is greater than the string length, span returns the string length. To replace, count elements, or delete spans, see @B_android#icu#text#UnicodeSetSpanner_E@.", "history": "Added in API level 24", "FullName": "public int span (CharSequence s, int start, UnicodeSet.SpanCondition spanCondition)"}, "spanBack(java.lang.CharSequence,int,android.icu.text.UnicodeSet.SpanCondition)": {"Returns": [["int", "The string index which starts the span (i.e. inclusive)."]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: The string to be spanned"], ["int", "int: The index of the char (exclusive) that the string should be spanned backwards"], ["@B_android#icu#text#UnicodeSet#SpanCondition_E@", "UnicodeSet.SpanCondition: The span condition"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Span a string backwards (from the fromIndex) using this UnicodeSet. If the fromIndex is less than 0, spanBack will return 0. If fromIndex is greater than the string length, spanBack will start from the string length. To replace, count elements, or delete spans, see @B_android#icu#text#UnicodeSetSpanner_E@.", "history": "Added in API level 24", "FullName": "public int spanBack (CharSequence s, int fromIndex, UnicodeSet.SpanCondition spanCondition)"}, "containsAll(java.lang.String)": {"Returns": [["boolean", "true if the test condition is met"]], "Parameters": [["@B_java#lang#String_E@", "String: string containing characters to be checked for containment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if there is a partition of the string such that this set contains each of the partitioned strings. For example, for the Unicode set [a{bc}{cd}] containsAll is true for each of: \"a\", \"bc\", \"\"cdbca\" containsAll is false for each of: \"acb\", \"bcda\", \"bcx\"", "history": "Added in API level 24", "FullName": "public boolean containsAll (String s)"}, "retainAll(java.lang.Iterable<T>)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#Iterable_E@", "Iterable no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#icu#text#UnicodeSet#retainAll_E@"], "Permissions": [], "Description": "", "history": "Added in API level 24", "FullName": "public UnicodeSet retainAll (Iterable<T> collection)"}, "remove(int,int)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["int", "int: first character, inclusive, of range to be removed from this set."], ["int", "int: last character, inclusive, of range to be removed from this set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes the specified range from this set if it is present. The set will not contain the specified range once the call returns. If end > start then an empty range is removed, leaving the set unchanged.", "history": "Added in API level 24", "FullName": "public UnicodeSet remove (int start, int end)"}, "closeOver(int)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "a reference to this set."]], "Parameters": [["int", "int: bitmask for attributes to close over. Currently only the CASE bit is supported. Any undefined bits are ignored."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Close this set over the given attribute. For the attribute CASE, the result is to modify this set so that: 1. For each character or string 'a' in this set, all strings 'b' such that foldCase(a) == foldCase(b) are added to this set. (For most 'a' that are single characters, 'b' will have b.length() == 1.) 2. For each string 'e' in the resulting set, if e != foldCase(e), 'e' will be removed. Example: [aq\u00df{Bc}{bC}{Fi}] => [aAqQ\u00df\ufb01{ss}{bc}{fi}] (Here foldCase(x) refers to the operation UCharacter.foldCase(x, true), and a == b actually denotes a.equals(b), not pointer comparison.)", "history": "Added in API level 24", "FullName": "public UnicodeSet closeOver (int attribute)"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if the specified Object is equal to this set."]], "Parameters": [["@B_java#lang#Object_E@", "Object: Object to be compared for equality with this set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Compares the specified object with this set for equality. Returns", "history": "Added in API level 24", "FullName": "public boolean equals (Object o)"}, "removeAll(android.icu.text.UnicodeSet)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["@B_android#icu#text#UnicodeSet_E@", "UnicodeSet: set that defines which elements will be removed from this set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes from this set all of its elements that are contained in the specified set. This operation effectively modifies this set so that its value is the", "history": "Added in API level 24", "FullName": "public UnicodeSet removeAll (UnicodeSet c)"}, "retainAll(android.icu.text.UnicodeSet)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["@B_android#icu#text#UnicodeSet_E@", "UnicodeSet: set that defines which elements this set will retain."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retains only the elements in this set that are contained in the specified set. In other words, removes from this set all of its elements that are not contained in the specified set. This operation effectively modifies this set so that its value is the", "history": "Added in API level 24", "FullName": "public UnicodeSet retainAll (UnicodeSet c)"}, "set(int, int)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["int", "int: first character in the set, inclusive"], ["int", "int: last character in the set, inclusive"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Make this object represent the range start - end. If end > start then this object is set to an an empty range.", "history": "added in API level 24", "FullName": "public UnicodeSet set (int start, int end)"}, "retainAll(java.lang.CharSequence)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "this object, for chaining"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: the source string"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retains EACH of the characters in this string. Note: \"ch\" == {\"c\", \"h\"} If this set already any particular character, it has no effect on that character.", "history": "Added in API level 24", "FullName": "public final UnicodeSet retainAll (CharSequence s)"}, "applyPattern(java.lang.String)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: a string specifying what characters are in the set"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the pattern contains a syntax error."]], "SeeAlso": [], "Permissions": [], "Description": "Modifies this set to represent the set specified by the given pattern. See the class description for the syntax of the pattern language. Whitespace is ignored.", "history": "Added in API level 24", "FullName": "public final UnicodeSet applyPattern (String pattern)"}, "remove(int)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "this object, for chaining"]], "Parameters": [["int", "int: the character to be removed"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes the specified character from this set if it is present. The set will not contain the specified character once the call returns.", "history": "Added in API level 24", "FullName": "public final UnicodeSet remove (int c)"}, "add(int)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds the specified character to this set if it is not already present. If this set already contains the specified character, the call leaves this set unchanged.", "history": "Added in API level 24", "FullName": "public final UnicodeSet add (int c)"}, "getRangeStart(int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "if index is outside the range 0..getRangeCount()-1"]], "SeeAlso": ["@B_android#icu#text#UnicodeSet#getRangeCount_E@", "@B_android#icu#text#UnicodeSet#getRangeEnd_E@"], "Permissions": [], "Description": "Iteration method that returns the first character in the specified range of this set.", "history": "Added in API level 24", "FullName": "public int getRangeStart (int index)"}, "cloneAsThawed()": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "the clone, not frozen"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Clone a thawed version of this class, according to the Freezable interface.", "history": "Added in API level 24", "FullName": "public UnicodeSet cloneAsThawed ()"}, "retain(int, int)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["int", "int: first character, inclusive, of range to be retained to this set."], ["int", "int: last character, inclusive, of range to be retained to this set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retain only the elements in this set that are contained in the specified range. If end > start then an empty range is retained, leaving the set empty.", "history": "added in API level 24", "FullName": "public UnicodeSet retain (int start, int end)"}, "applyPattern(java.lang.String,int)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: a string specifying what characters are in the set"], ["int", "int: a bitmask indicating which options to apply. Valid options are IGNORE_SPACE and CASE."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the pattern contains a syntax error."]], "SeeAlso": [], "Permissions": [], "Description": "Modifies this set to represent the set specified by the given pattern, optionally ignoring whitespace. See the class description for the syntax of the pattern language.", "history": "Added in API level 24", "FullName": "public UnicodeSet applyPattern (String pattern, int options)"}, "containsAll(android.icu.text.UnicodeSet)": {"Returns": [["boolean", "true if the test condition is met"]], "Parameters": [["@B_android#icu#text#UnicodeSet_E@", "UnicodeSet: set to be checked for containment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this set contains all the characters and strings of the given set.", "history": "Added in API level 24", "FullName": "public boolean containsAll (UnicodeSet b)"}, "contains(int,int)": {"Returns": [["boolean", "true if the test condition is met"]], "Parameters": [["int", "int: first character, inclusive, of the range"], ["int", "int: last character, inclusive, of the range"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this set contains every character of the given range.", "history": "Added in API level 24", "FullName": "public boolean contains (int start, int end)"}, "add(java.lang.Iterable<?>)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "a reference to this object"]], "Parameters": [["@B_java#lang#Iterable_E@", "Iterable: the collection to add"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Add the contents of the collection (as strings) into this UnicodeSet. The collection must not contain null.", "history": "Added in API level 24", "FullName": "public UnicodeSet add (Iterable<?> source)"}, "matches(android.icu.text.Replaceable,int[],int,boolean)": {"Returns": [["int", "a match degree value indicating a full match, a partial match, or a mismatch. If incremental is FALSE then U_PARTIAL_MATCH should never be returned."]], "Parameters": [["@B_android#icu#text#Replaceable_E@", "Replaceable: the text to be matched"], ["int[]", "int: on input, the index into text at which to begin matching. On output, the limit of the matched text. The number of matched characters is the output value of offset minus the input value. Offset should always point to the HIGH SURROGATE (leading code unit) of a pair of surrogates, both on entry and upon return."], ["int", "int: the limit index of text to be matched. Greater than offset for a forward direction match, less than offset for a backward direction match. The last character to be considered for matching will be text.charAt(limit-1) in the forward direction or text.charAt(limit+1) in the backward direction."], ["boolean", "boolean: if TRUE, then assume further characters may be inserted at limit and check for partial matching. Otherwise assume the text as given is complete."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Implementation of UnicodeMatcher.matches(). Always matches the longest possible multichar string.", "history": "Added in API level 24", "FullName": "public int matches (Replaceable text, int[] offset, int limit, boolean incremental)"}, "clone()": {"Returns": [["@B_java#lang#Object_E@", "a clone of this instance."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a new set that is equivalent to this one.", "history": "Added in API level 24", "FullName": "public Object clone ()"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a programmer-readable string representation of this object.", "history": "Added in API level 24", "FullName": "public String toString ()"}, "containsNone(int,int)": {"Returns": [["boolean", "true if the test condition is met"]], "Parameters": [["int", "int: first character, inclusive, of the range"], ["int", "int: last character, inclusive, of the range"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this set contains none of the characters of the given range.", "history": "Added in API level 24", "FullName": "public boolean containsNone (int start, int end)"}, "set(android.icu.text.UnicodeSet)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["@B_android#icu#text#UnicodeSet_E@", "UnicodeSet: a UnicodeSet whose value will be copied to this object"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Make this object represent the same set as other.", "history": "Added in API level 24", "FullName": "public UnicodeSet set (UnicodeSet other)"}, "contains(java.lang.CharSequence)": {"Returns": [["boolean", "true if this set contains the specified string"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: string to be checked for containment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns", "history": "Added in API level 24", "FullName": "public final boolean contains (CharSequence s)"}, "indexOf(int)": {"Returns": [["int", "an index from 0..size()-1, or -1"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the index of the given character within this set, where the set is ordered by ascending code point. If the character is not in this set, return -1. The inverse of this method is charAt().", "history": "Added in API level 24", "FullName": "public int indexOf (int c)"}, "retain(java.lang.CharSequence)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "this object, for chaining"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: the string to be retained"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retain the specified string in this set if it is present. Upon return this set will be empty if it did not contain s, or will only contain s if it did contain s.", "history": "Added in API level 24", "FullName": "public final UnicodeSet retain (CharSequence cs)"}, "from(java.lang.CharSequence)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "a newly created set containing the given string"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: the source string"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Makes a set from a multicharacter string. Thus \"ch\" => {\"ch\"}", "history": "Added in API level 24", "FullName": "public static UnicodeSet from (CharSequence s)"}, "addAll(java.lang.CharSequence)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "this object, for chaining"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: the source string"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds each of the characters in this string to the set. Thus \"ch\" => {\"c\", \"h\"} If this set already any particular character, it has no effect on that character.", "history": "Added in API level 24", "FullName": "public final UnicodeSet addAll (CharSequence s)"}, "UnicodeSet(int,int)": {"Returns": [], "Parameters": [["int", "int: first character, inclusive, of range"], ["int", "int: last character, inclusive, of range"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a set containing the given range. If end > start then an empty set is created.", "history": "Added in API level 24", "FullName": "public UnicodeSet (int start, int end)"}, "applyPropertyAlias(java.lang.String,java.lang.String,android.icu.text.SymbolTable)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "this set"]], "Parameters": [["@B_java#lang#String_E@", "String: A string of the property alias."], ["@B_java#lang#String_E@", "String: A string of the value alias."], ["@B_android#icu#text#SymbolTable_E@", "SymbolTable: if not null, then symbols are first called to see if a property is available. If true, then everything else is skipped."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Modifies this set to contain those code points which have the given value for the given property. Prior contents of this set are lost.", "history": "Added in API level 24", "FullName": "public UnicodeSet applyPropertyAlias (String propertyAlias, String valueAlias, SymbolTable symbols)"}, "removeAll(java.lang.Iterable<T>)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#Iterable_E@", "Iterable no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#icu#text#UnicodeSet#removeAll_E@"], "Permissions": [], "Description": "", "history": "Added in API level 24", "FullName": "public UnicodeSet removeAll (Iterable<T> collection)"}, "applyPropertyAlias(java.lang.String,java.lang.String)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "a reference to this set"]], "Parameters": [["@B_java#lang#String_E@", "String: a property alias, either short or long. The name is matched loosely. See PropertyAliases.txt for names and a description of loose matching. If the value string is empty, then this string is interpreted as either a General_Category value alias, a Script value alias, a binary property alias, or a special ID. Special IDs are matched loosely and correspond to the following sets: \"ANY\" = [\\\\u0000-\\\\U0010FFFF], \"ASCII\" = [\\\\u0000-\\\\u007F]."], ["@B_java#lang#String_E@", "String: a value alias, either short or long. The name is matched loosely. See PropertyValueAliases.txt for names and a description of loose matching. In addition to aliases listed, numeric values and canonical combining classes may be expressed numerically, e.g., (\"nv\", \"0.5\") or (\"ccc\", \"220\"). The value string may also be empty."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Modifies this set to contain those code points which have the given value for the given property. Prior contents of this set are lost.", "history": "Added in API level 24", "FullName": "public UnicodeSet applyPropertyAlias (String propertyAlias, String valueAlias)"}, "_generatePattern(java.lang.StringBuffer, boolean)": {"Returns": [["@B_java#lang#StringBuffer_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#StringBuffer_E@", "StringBuffer: the buffer into which to generate the pattern"], ["boolean", "boolean: escape unprintable characters if true"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Generate and append a string representation of this set to result. This does not use this.pat, the cleaned up copy of the string passed to applyPattern().", "history": "added in API level 24", "FullName": "public StringBuffer _generatePattern (StringBuffer result, boolean escapeUnprintable)"}, "span(java.lang.CharSequence,android.icu.text.UnicodeSet.SpanCondition)": {"Returns": [["int", "the length of the span"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: The string to be spanned"], ["@B_android#icu#text#UnicodeSet#SpanCondition_E@", "UnicodeSet.SpanCondition: The span condition"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Span a string using this UnicodeSet. To replace, count elements, or delete spans, see @B_android#icu#text#UnicodeSetSpanner_E@.", "history": "Added in API level 24", "FullName": "public int span (CharSequence s, UnicodeSet.SpanCondition spanCondition)"}, "retain(int,int)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["int", "int: first character, inclusive, of range to be retained to this set."], ["int", "int: last character, inclusive, of range to be retained to this set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retain only the elements in this set that are contained in the specified range. If end > start then an empty range is retained, leaving the set empty.", "history": "Added in API level 24", "FullName": "public UnicodeSet retain (int start, int end)"}, "applyIntPropertyValue(int,int)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "a reference to this set"]], "Parameters": [["int", "int: a property in the range UProperty.BIN_START..UProperty.BIN_LIMIT-1 or UProperty.INT_START..UProperty.INT_LIMIT-1 or. UProperty.MASK_START..UProperty.MASK_LIMIT-1."], ["int", "int: a value in the range UCharacter.getIntPropertyMinValue(prop).. UCharacter.getIntPropertyMaxValue(prop), with one exception. If prop is UProperty.GENERAL_CATEGORY_MASK, then value should not be a UCharacter.getType() result, but rather a mask value produced by logically ORing (1 << UCharacter.getType()) values together. This allows grouped categories such as [:L:] to be represented."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Modifies this set to contain those code points which have the given value for the given binary or enumerated property, as returned by UCharacter.getIntPropertyValue. Prior contents of this set are lost.", "history": "Added in API level 24", "FullName": "public UnicodeSet applyIntPropertyValue (int prop, int value)"}, "set(int,int)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["int", "int: first character in the set, inclusive"], ["int", "int: last character in the set, inclusive"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Make this object represent the range start - end. If end > start then this object is set to an empty range.", "history": "Added in API level 24", "FullName": "public UnicodeSet set (int start, int end)"}, "addAll(android.icu.text.UnicodeSet)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["@B_android#icu#text#UnicodeSet_E@", "UnicodeSet: set whose elements are to be added to this set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds all of the elements in the specified set to this set if they're not already present. This operation effectively modifies this set so that its value is the", "history": "Added in API level 24", "FullName": "public UnicodeSet addAll (UnicodeSet c)"}, "UnicodeSet(int...)": {"Returns": [], "Parameters": [["int...", "int: pairs of character representing ranges"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Quickly constructs a set from a set of ranges <s0, e0, s1, e1, s2, e2, ..., sn, en>. There must be an even number of integers, and they must be all greater than zero, all less than or equal to Character.MAX_CODE_POINT. In each pair (..., si, ei, ...) it must be true that si <= ei Between adjacent pairs (...ei, sj...), it must be true that ei+1 < sj", "history": "Added in API level 24", "FullName": "public UnicodeSet (int... pairs)"}, "contains(int)": {"Returns": [["boolean", "true if the test condition is met"]], "Parameters": [["int", "int: character to be checked for containment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this set contains the given character.", "history": "Added in API level 24", "FullName": "public boolean contains (int c)"}, "retain(int)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "this object, for chaining"]], "Parameters": [["int", "int: the character to be retained"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retain the specified character from this set if it is present. Upon return this set will be empty if it did not contain c, or will only contain c if it did contain c.", "history": "Added in API level 24", "FullName": "public final UnicodeSet retain (int c)"}, "containsSome(android.icu.text.UnicodeSet)": {"Returns": [["boolean", "true if the condition is met"]], "Parameters": [["@B_android#icu#text#UnicodeSet_E@", "UnicodeSet: set to be checked for containment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this set contains one or more of the characters and strings of the given set.", "history": "Added in API level 24", "FullName": "public final boolean containsSome (UnicodeSet s)"}, "applyPattern(java.lang.String, int)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: a string specifying what characters are in the set"], ["int", "int: a bitmask indicating which options to apply. Valid options are IGNORE_SPACE and CASE."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the pattern contains a syntax error."]], "SeeAlso": [], "Permissions": [], "Description": "Modifies this set to represent the set specified by the given pattern, optionally ignoring whitespace. See the class description for the syntax of the pattern language.", "history": "added in API level 24", "FullName": "public UnicodeSet applyPattern (String pattern, int options)"}, "complementAll(android.icu.text.UnicodeSet)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["@B_android#icu#text#UnicodeSet_E@", "UnicodeSet: set that defines which elements will be complemented from this set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Complements in this set all elements contained in the specified set. Any character in the other set will be removed if it is in this set, or will be added if it is not in this set.", "history": "Added in API level 24", "FullName": "public UnicodeSet complementAll (UnicodeSet c)"}, "contains(int, int)": {"Returns": [["boolean", "true if the test condition is met"]], "Parameters": [["int", "int: first character, inclusive, of the range"], ["int", "int: last character, inclusive, of the range"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this set contains every character of the given range.", "history": "added in API level 24", "FullName": "public boolean contains (int start, int end)"}, "isEmpty()": {"Returns": [["boolean", "true if this set contains no elements."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns", "history": "Added in API level 24", "FullName": "public boolean isEmpty ()"}, "addMatchSetTo(android.icu.text.UnicodeSet)": {"Returns": [], "Parameters": [["@B_android#icu#text#UnicodeSet_E@", "UnicodeSet: the set into which to union the source characters"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Implementation of UnicodeMatcher API. Union the set of all characters that may be matched by this object into the given set.", "history": "Added in API level 24", "FullName": "public void addMatchSetTo (UnicodeSet toUnionTo)"}, "containsNone(java.lang.CharSequence)": {"Returns": [["boolean", "true if the test condition is met"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: string containing characters to be checked for containment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this set contains none of the characters of the given string.", "history": "Added in API level 24", "FullName": "public boolean containsNone (CharSequence s)"}, "ranges()": {"Returns": [["@B_java#lang#Iterable_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Provide for faster iteration than by String. Returns an Iterable/Iterator over ranges of code points. The UnicodeSet must not be altered during the iteration. The EntryRange instance is the same each time; the contents are just reset.", "history": "Added in API level 24", "FullName": "public Iterable<UnicodeSet.EntryRange> ranges ()"}, "applyPattern(java.lang.String, boolean)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: a string specifying what characters are in the set"], ["boolean", "boolean: if true then Unicode Pattern_White_Space characters are ignored"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the pattern contains a syntax error."]], "SeeAlso": [], "Permissions": [], "Description": "Modifies this set to represent the set specified by the given pattern, optionally ignoring whitespace. See the class description for the syntax of the pattern language.", "history": "added in API level 24", "FullName": "public UnicodeSet applyPattern (String pattern, boolean ignoreWhitespace)"}, "add(int,int)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["int", "int: first character, inclusive, of range to be added to this set."], ["int", "int: last character, inclusive, of range to be added to this set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds the specified range to this set if it is not already present. If this set already contains the specified range, the call leaves this set unchanged. If end > start then an empty range is added, leaving the set unchanged.", "history": "Added in API level 24", "FullName": "public UnicodeSet add (int start, int end)"}, "containsSome(java.lang.Iterable<T>)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_java#lang#Iterable_E@", "Iterable no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#icu#text#UnicodeSet#containsAll_E@"], "Permissions": [], "Description": "", "history": "Added in API level 24", "FullName": "public final boolean containsSome (Iterable<T> collection)"}, "complement(int,int)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["int", "int: first character, inclusive, of range to be removed from this set."], ["int", "int: last character, inclusive, of range to be removed from this set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Complements the specified range in this set. Any character in the range will be removed if it is in this set, or will be added if it is not in this set. If end > start then an empty range is complemented, leaving the set unchanged.", "history": "Added in API level 24", "FullName": "public UnicodeSet complement (int start, int end)"}, "UnicodeSet(java.lang.String,boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a string specifying what characters are in the set"], ["boolean", "boolean: if true, ignore Unicode Pattern_White_Space characters"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the pattern contains a syntax error."]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a set from the given pattern. See the class description for the syntax of the pattern language.", "history": "Added in API level 24", "FullName": "public UnicodeSet (String pattern, boolean ignoreWhitespace)"}, "complement(java.lang.CharSequence)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "this object, for chaining"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: the string to complement"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Complement the specified string in this set. The set will not contain the specified string once the call returns.", "history": "Added in API level 24", "FullName": "public final UnicodeSet complement (CharSequence s)"}, "_generatePattern(java.lang.StringBuffer,boolean)": {"Returns": [["@B_java#lang#StringBuffer_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#StringBuffer_E@", "StringBuffer: the buffer into which to generate the pattern"], ["boolean", "boolean: escape unprintable characters if true"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Generate and append a string representation of this set to result. This does not use this.pat, the cleaned up copy of the string passed to applyPattern().", "history": "Added in API level 24", "FullName": "public StringBuffer _generatePattern (StringBuffer result, boolean escapeUnprintable)"}, "applyIntPropertyValue(int, int)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "a reference to this set"]], "Parameters": [["int", "int: a property in the range UProperty.BIN_START..UProperty.BIN_LIMIT-1 or UProperty.INT_START..UProperty.INT_LIMIT-1 or. UProperty.MASK_START..UProperty.MASK_LIMIT-1."], ["int", "int: a value in the range UCharacter.getIntPropertyMinValue(prop).. UCharacter.getIntPropertyMaxValue(prop), with one exception. If prop is UProperty.GENERAL_CATEGORY_MASK, then value should not be a UCharacter.getType() result, but rather a mask value produced by logically ORing (1 << UCharacter.getType()) values together. This allows grouped categories such as [:L:] to be represented."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Modifies this set to contain those code points which have the given value for the given binary or enumerated property, as returned by UCharacter.getIntPropertyValue. Prior contents of this set are lost.", "history": "added in API level 24", "FullName": "public UnicodeSet applyIntPropertyValue (int prop, int value)"}, "charAt(int)": {"Returns": [["int", "the character at the given index, or -1."]], "Parameters": [["int", "int: an index from 0..size()-1"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the character at the given index within this set, where the set is ordered by ascending code point. If the index is out of range, return -1. The inverse of this method is indexOf().", "history": "Added in API level 24", "FullName": "public int charAt (int index)"}, "spanBack(java.lang.CharSequence,android.icu.text.UnicodeSet.SpanCondition)": {"Returns": [["int", "The string index which starts the span (i.e. inclusive)."]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: The string to be spanned"], ["@B_android#icu#text#UnicodeSet#SpanCondition_E@", "UnicodeSet.SpanCondition: The span condition"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Span a string backwards (from the end) using this UnicodeSet. To replace, count elements, or delete spans, see @B_android#icu#text#UnicodeSetSpanner_E@.", "history": "Added in API level 24", "FullName": "public int spanBack (CharSequence s, UnicodeSet.SpanCondition spanCondition)"}, "containsSome(int,int)": {"Returns": [["boolean", "true if the condition is met"]], "Parameters": [["int", "int: first character, inclusive, of the range"], ["int", "int: last character, inclusive, of the range"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this set contains one or more of the characters in the given range.", "history": "Added in API level 24", "FullName": "public final boolean containsSome (int start, int end)"}, "complementAll(java.lang.CharSequence)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "this object, for chaining"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: the source string"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Complement EACH of the characters in this string. Note: \"ch\" == {\"c\", \"h\"} If this set already any particular character, it has no effect on that character.", "history": "Added in API level 24", "FullName": "public final UnicodeSet complementAll (CharSequence s)"}, "addAllTo(T)": {"Returns": [["T", "no returns description in source"]], "Parameters": [["T", "T: collection to add into"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Add the contents of the UnicodeSet (as strings) into a collection.", "history": "Added in API level 24", "FullName": "public T addAllTo (T target)"}, "strings()": {"Returns": [["@B_java#util#Collection_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "For iterating through the strings in the set. Example:", "history": "Added in API level 24", "FullName": "public Collection<String> strings ()"}, "isFrozen()": {"Returns": [["boolean", "value"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Is this frozen, according to the Freezable interface?", "history": "Added in API level 24", "FullName": "public boolean isFrozen ()"}, "removeAllStrings()": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "this object, for chaining"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Remove all strings from this UnicodeSet", "history": "Added in API level 24", "FullName": "public final UnicodeSet removeAllStrings ()"}, "hashCode()": {"Returns": [["int", "the hash code value for this set."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#lang#Object#hashCode_E@"], "Permissions": [], "Description": "Returns the hash code value for this set.", "history": "Added in API level 24", "FullName": "public int hashCode ()"}, "complement()": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This is equivalent to complement(MIN_VALUE, MAX_VALUE).", "history": "Added in API level 24", "FullName": "public UnicodeSet complement ()"}, "containsNone(int, int)": {"Returns": [["boolean", "true if the test condition is met"]], "Parameters": [["int", "int: first character, inclusive, of the range"], ["int", "int: last character, inclusive, of the range"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this set contains none of the characters of the given range.", "history": "added in API level 24", "FullName": "public boolean containsNone (int start, int end)"}, "size()": {"Returns": [["int", "the number of elements in this set (its cardinality)."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of elements in this set (its cardinality) Note than the elements of a set may include both individual codepoints and strings.", "history": "Added in API level 24", "FullName": "public int size ()"}, "compareTo(android.icu.text.UnicodeSet,android.icu.text.UnicodeSet.ComparisonStyle)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_android#icu#text#UnicodeSet_E@", "UnicodeSet no parameter comment"], ["@B_android#icu#text#UnicodeSet#ComparisonStyle_E@", "UnicodeSet.ComparisonStyle no parameter comment"]], "Throws": [], "SeeAlso": ["@B_java#lang#Comparable#compareTo_E@"], "Permissions": [], "Description": "Compares UnicodeSets, in three different ways.", "history": "Added in API level 24", "FullName": "public int compareTo (UnicodeSet o, UnicodeSet.ComparisonStyle style)"}, "fromAll(java.lang.CharSequence)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "a newly created set containing the given characters"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: the source string"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Makes a set from each of the characters in the string. Thus \"ch\" => {\"c\", \"h\"}", "history": "Added in API level 24", "FullName": "public static UnicodeSet fromAll (CharSequence s)"}, "containsAll(java.lang.Iterable<T>)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_java#lang#Iterable_E@", "Iterable no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#icu#text#UnicodeSet#containsAll_E@"], "Permissions": [], "Description": "", "history": "Added in API level 24", "FullName": "public boolean containsAll (Iterable<T> collection)"}, "removeAll(java.lang.CharSequence)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "this object, for chaining"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: the source string"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Remove EACH of the characters in this string. Note: \"ch\" == {\"c\", \"h\"} If this set already any particular character, it has no effect on that character.", "history": "Added in API level 24", "FullName": "public final UnicodeSet removeAll (CharSequence s)"}, "UnicodeSet(android.icu.text.UnicodeSet)": {"Returns": [], "Parameters": [["@B_android#icu#text#UnicodeSet_E@", "UnicodeSet no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a copy of an existing set.", "history": "Added in API level 24", "FullName": "public UnicodeSet (UnicodeSet other)"}, "containsSome(int, int)": {"Returns": [["boolean", "true if the condition is met"]], "Parameters": [["int", "int: first character, inclusive, of the range"], ["int", "int: last character, inclusive, of the range"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this set contains one or more of the characters in the given range.", "history": "added in API level 24", "FullName": "public final boolean containsSome (int start, int end)"}, "UnicodeSet()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs an empty set.", "history": "Added in API level 24", "FullName": "public UnicodeSet ()"}, "toPattern(boolean)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of this set. If the result of calling this function is passed to a UnicodeSet constructor, it will produce another set that is equal to this one.", "history": "Added in API level 24", "FullName": "public String toPattern (boolean escapeUnprintable)"}, "remove(int, int)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["int", "int: first character, inclusive, of range to be removed from this set."], ["int", "int: last character, inclusive, of range to be removed from this set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes the specified range from this set if it is present. The set will not contain the specified range once the call returns. If end > start then an empty range is removed, leaving the set unchanged.", "history": "added in API level 24", "FullName": "public UnicodeSet remove (int start, int end)"}, "addAll(int, int)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "a reference to this object"]], "Parameters": [["int", "int: The index of where to start on adding all characters."], ["int", "int: The index of where to end on adding all characters."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds all characters in range (uses preferred naming convention).", "history": "added in API level 24", "FullName": "public UnicodeSet addAll (int start, int end)"}, "UnicodeSet(int, int)": {"Returns": [], "Parameters": [["int", "int: first character, inclusive, of range"], ["int", "int: last character, inclusive, of range"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a set containing the given range. If end > start then an empty set is created.", "history": "added in API level 24", "FullName": "public UnicodeSet (int start, int end)"}, "addAll(int,int)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "a reference to this object"]], "Parameters": [["int", "int: The index of where to start on adding all characters."], ["int", "int: The index of where to end on adding all characters."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds all characters in range (uses preferred naming convention).", "history": "Added in API level 24", "FullName": "public UnicodeSet addAll (int start, int end)"}, "compareTo(java.lang.Iterable<java.lang.String>)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_java#lang#Iterable_E@", "Iterable no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 24", "FullName": "public int compareTo (Iterable<String> other)"}, "compareTo(android.icu.text.UnicodeSet)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_android#icu#text#UnicodeSet_E@", "UnicodeSet no parameter comment"]], "Throws": [], "SeeAlso": ["@B_java#lang#Comparable#compareTo_E@"], "Permissions": [], "Description": "Compares UnicodeSets, where shorter come first, and otherwise lexigraphically (according to the comparison of the first characters that differ).", "history": "Added in API level 24", "FullName": "public int compareTo (UnicodeSet o)"}, "containsNone(java.lang.Iterable<T>)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_java#lang#Iterable_E@", "Iterable no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#icu#text#UnicodeSet#containsNone_E@"], "Permissions": [], "Description": "", "history": "Added in API level 24", "FullName": "public boolean containsNone (Iterable<T> collection)"}, "UnicodeSet(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a string specifying what characters are in the set"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the pattern contains a syntax error."]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a set from the given pattern. See the class description for the syntax of the pattern language. Whitespace is ignored.", "history": "Added in API level 24", "FullName": "public UnicodeSet (String pattern)"}, "getRangeCount()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#icu#text#UnicodeSet#getRangeStart_E@", "@B_android#icu#text#UnicodeSet#getRangeEnd_E@"], "Permissions": [], "Description": "Iteration method that returns the number of ranges contained in this set.", "history": "Added in API level 24", "FullName": "public int getRangeCount ()"}, "clear()": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes all of the elements from this set. This set will be empty after this call returns.", "history": "Added in API level 24", "FullName": "public UnicodeSet clear ()"}, "complement(int)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Complements the specified character in this set. The character will be removed if it is in this set, or will be added if it is not in this set.", "history": "Added in API level 24", "FullName": "public final UnicodeSet complement (int c)"}, "iterator()": {"Returns": [["@B_java#util#Iterator_E@", "an Iterator."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#util#Set#iterator_E@"], "Permissions": [], "Description": "Returns a string iterator. Uses the same order of iteration as @B_android#icu#text#UnicodeSetIterator_E@.", "history": "Added in API level 24", "FullName": "public Iterator<String> iterator ()"}, "UnicodeSet(java.lang.String, boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a string specifying what characters are in the set"], ["boolean", "boolean: if true, ignore Unicode Pattern_White_Space characters"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the pattern contains a syntax error."]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a set from the given pattern. See the class description for the syntax of the pattern language.", "history": "added in API level 24", "FullName": "public UnicodeSet (String pattern, boolean ignoreWhitespace)"}, "UnicodeSet(java.lang.String,java.text.ParsePosition,android.icu.text.SymbolTable,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a string specifying what characters are in the set"], ["@B_java#text#ParsePosition_E@", "ParsePosition: on input, the position in pattern at which to start parsing. On output, the position after the last character parsed."], ["@B_android#icu#text#SymbolTable_E@", "SymbolTable: a symbol table mapping variables to char[] arrays and chars to UnicodeSets"], ["int", "int: a bitmask indicating which options to apply. Valid options are IGNORE_SPACE and CASE."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the pattern contains a syntax error."]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a set from the given pattern. See the class description for the syntax of the pattern language.", "history": "Added in API level 24", "FullName": "public UnicodeSet (String pattern, ParsePosition pos, SymbolTable symbols, int options)"}, "getRangeEnd(int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [["@B_java#lang#ArrayIndexOutOfBoundsException_E@", "if index is outside the range 0..getRangeCount()-1"]], "SeeAlso": ["@B_android#icu#text#UnicodeSet#getRangeStart_E@", "@B_android#icu#text#UnicodeSet#getRangeEnd_E@"], "Permissions": [], "Description": "Iteration method that returns the last character in the specified range of this set.", "history": "Added in API level 24", "FullName": "public int getRangeEnd (int index)"}, "containsNone(android.icu.text.UnicodeSet)": {"Returns": [["boolean", "true if the test condition is met"]], "Parameters": [["@B_android#icu#text#UnicodeSet_E@", "UnicodeSet: set to be checked for containment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if none of the characters or strings in this UnicodeSet appears in the string. For example, for the Unicode set [a{bc}{cd}] containsNone is true for: \"xy\", \"cb\" containsNone is false for: \"a\", \"bc\", \"bcd\"", "history": "Added in API level 24", "FullName": "public boolean containsNone (UnicodeSet b)"}, "add(java.lang.CharSequence)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "this object, for chaining"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: the source string"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds the specified multicharacter to this set if it is not already present. If this set already contains the multicharacter, the call leaves this set unchanged. Thus \"ch\" => {\"ch\"}", "history": "Added in API level 24", "FullName": "public final UnicodeSet add (CharSequence s)"}, "compact()": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reallocate this objects internal structures to take up the least possible space, without changing this object's value.", "history": "Added in API level 24", "FullName": "public UnicodeSet compact ()"}, "UnicodeSet(java.lang.String,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a string specifying what characters are in the set"], ["int", "int: a bitmask indicating which options to apply. Valid options are IGNORE_SPACE and CASE."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the pattern contains a syntax error."]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a set from the given pattern. See the class description for the syntax of the pattern language.", "history": "Added in API level 24", "FullName": "public UnicodeSet (String pattern, int options)"}, "containsSome(java.lang.CharSequence)": {"Returns": [["boolean", "true if the condition is met"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: string containing characters to be checked for containment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this set contains one or more of the characters of the given string.", "history": "Added in API level 24", "FullName": "public final boolean containsSome (CharSequence s)"}, "remove(java.lang.CharSequence)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "this object, for chaining"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: the string to be removed"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes the specified string from this set if it is present. The set will not contain the specified string once the call returns.", "history": "Added in API level 24", "FullName": "public final UnicodeSet remove (CharSequence s)"}, "addAll(java.lang.Iterable<?>)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "a reference to this object"]], "Parameters": [["@B_java#lang#Iterable_E@", "Iterable: collection to add into"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Add a collection (as strings) into this UnicodeSet. Uses standard naming convention.", "history": "Added in API level 24", "FullName": "public UnicodeSet addAll (Iterable<?> source)"}, "add(int, int)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["int", "int: first character, inclusive, of range to be added to this set."], ["int", "int: last character, inclusive, of range to be added to this set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds the specified range to this set if it is not already present. If this set already contains the specified range, the call leaves this set unchanged. If end > start then an empty range is added, leaving the set unchanged.", "history": "added in API level 24", "FullName": "public UnicodeSet add (int start, int end)"}, "UnicodeSet(java.lang.String, int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a string specifying what characters are in the set"], ["int", "int: a bitmask indicating which options to apply. Valid options are IGNORE_SPACE and CASE."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the pattern contains a syntax error."]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a set from the given pattern. See the class description for the syntax of the pattern language.", "history": "added in API level 24", "FullName": "public UnicodeSet (String pattern, int options)"}, "complement(int, int)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["int", "int: first character, inclusive, of range to be removed from this set."], ["int", "int: last character, inclusive, of range to be removed from this set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Complements the specified range in this set. Any character in the range will be removed if it is in this set, or will be added if it is not in this set. If end > start then an empty range is complemented, leaving the set unchanged.", "history": "added in API level 24", "FullName": "public UnicodeSet complement (int start, int end)"}, "_generatePattern(java.lang.StringBuffer,boolean,boolean)": {"Returns": [["@B_java#lang#StringBuffer_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#StringBuffer_E@", "StringBuffer no parameter comment"], ["boolean", "boolean no parameter comment"], ["boolean", "boolean: if false, doesn't include the strings."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Generate and append a string representation of this set to result. This does not use this.pat, the cleaned up copy of the string passed to applyPattern().", "history": "Added in API level 24", "FullName": "public StringBuffer _generatePattern (StringBuffer result, boolean escapeUnprintable, boolean includeStrings)"}, "applyPattern(java.lang.String,boolean)": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: a string specifying what characters are in the set"], ["boolean", "boolean: if true then Unicode Pattern_White_Space characters are ignored"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the pattern contains a syntax error."]], "SeeAlso": [], "Permissions": [], "Description": "Modifies this set to represent the set specified by the given pattern, optionally ignoring whitespace. See the class description for the syntax of the pattern language.", "history": "Added in API level 24", "FullName": "public UnicodeSet applyPattern (String pattern, boolean ignoreWhitespace)"}, "freeze()": {"Returns": [["@B_android#icu#text#UnicodeSet_E@", "this"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Freeze this class, according to the Freezable interface.", "history": "Added in API level 24", "FullName": "public UnicodeSet freeze ()"}}, "Inheritance": ["@B_android#icu#text#UnicodeFilter_E@"], "ClassName": "android.icu.text.UnicodeSet", "ClassDesc": "A mutable set of Unicode characters and multicharacter strings. Objects of this class represent character classes used in regular expressions. A character specifies a subset of Unicode code points. Legal code points are U+0000 to U+10FFFF, inclusive. Note: method freeze() will not only make the set immutable, but also makes important methods much higher performance: contains(c), containsNone(...), span(...), spanBack(...) etc. After the object is frozen, any subsequent call that wants to change the object will throw UnsupportedOperationException. The UnicodeSet class is not designed to be subclassed. UnicodeSet supports two APIs. The first is the operand API that allows the caller to modify the value of a UnicodeSet object. It conforms to Java 2's java.util.Set interface, although UnicodeSet does not actually implement that interface. All methods of Set are supported, with the modification that they take a character range or single character instead of an Object, and they take a UnicodeSet instead of a Collection. The operand API may be thought of in terms of boolean logic: a boolean OR is implemented by add, a boolean AND is implemented by retain, a boolean XOR is implemented by complement taking an argument, and a boolean NOT is implemented by complement with no argument. In terms of traditional set theory function names, add is a union, retain is an intersection, remove is an asymmetric difference, and complement with no argument is a set complement with respect to the superset range MIN_VALUE-MAX_VALUE The second API is the applyPattern()/toPattern() API from the java.text.Format-derived classes. Unlike the methods that add characters, add categories, and control the logic of the set, the method applyPattern() sets all attributes of a UnicodeSet at once, based on a string pattern. Patterns are accepted by the constructors and the applyPattern() methods and returned by the toPattern() method. These patterns follow a syntax similar to that employed by version 8 regular expression character classes. Here are some simple examples: Property patterns specify a set of characters having a certain property as defined by the Unicode standard. Both the POSIX-like \"[:Lu:]\" and the Perl-like syntax \"\\p{Lu}\" are recognized. For a complete list of supported property patterns, see the User's Guide for UnicodeSet at Patterns specify individual characters, ranges of characters, and Unicode property sets. When elements are concatenated, they specify their union. To complement a set, place a '^' immediately after the opening '['. Property patterns are inverted by modifying their delimiters; \"[:^foo]\" and \"\\P{foo}\". In any other location, '^' has no special meaning. Ranges are indicated by placing two a '-' between two characters, as in \"a-z\". This specifies the range of all characters from the left to the right, in Unicode order. If the left character is greater than or equal to the right character it is a syntax error. If a '-' occurs as the first character after the opening '[' or '[^', or if it occurs as the last character before the closing ']', then it is taken as a literal. Thus \"[a\\\\-b]\", \"[-ab]\", and \"[ab-]\" all indicate the same set of three characters, 'a', 'b', and '-'. Sets may be intersected using the '&' operator or the asymmetric set difference may be taken using the '-' operator, for example, \"[[:L:]&[\\\\u0000-\\\\u0FFF]]\" indicates the set of all Unicode letters with values less than 4096. Operators ('&' and '|') have equal precedence and bind left-to-right. Thus \"[[:L:]-[a-z]-[\\\\u0100-\\\\u01FF]]\" is equivalent to \"[[[:L:]-[a-z]]-[\\\\u0100-\\\\u01FF]]\". This only really matters for difference; intersection is commutative. To iterate over contents of UnicodeSet, the following are available: @B_android#icu#text#UnicodeSet#ranges_E@ to iterate through the ranges @B_android#icu#text#UnicodeSet#strings_E@ to iterate through the strings @B_android#icu#text#UnicodeSet#iterator_E@ to iterate through the entire contents in a single loop. That method is, however, not particularly efficient, since it \"boxes\" each code point into a String. All of the above can be used in @B_android#icu#text#UnicodeSetIterator_E@ can also be used, but not in To replace, count elements, or delete spans, see @B_android#icu#text#UnicodeSetSpanner_E@."}