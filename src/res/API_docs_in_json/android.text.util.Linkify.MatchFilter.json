{"Functions": {"acceptMatch(java.lang.CharSequence,int,int)": {"Returns": [["boolean", "Whether this match should be turned into a link"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: The body of text against which the pattern was matched"], ["int", "int: The index of the first character in s that was matched by the pattern - inclusive"], ["int", "int: The index of the last character in s that was matched - exclusive"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Examines the character span matched by the pattern and determines if the match should be turned into an actionable link.", "history": "Added in API level 1", "FullName": "public abstract boolean acceptMatch (CharSequence s, int start, int end)"}, "acceptMatch(java.lang.CharSequence, int, int)": {"Returns": [["boolean", "Whether this match should be turned into a link"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: The body of text against which the pattern was matched"], ["int", "int: The index of the first character in s that was matched by the pattern - inclusive"], ["int", "int: The index of the last character in s that was matched - exclusive"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Examines the character span matched by the pattern and determines if the match should be turned into an actionable link.", "history": "added in API level 1", "FullName": "public abstract boolean acceptMatch (CharSequence s, int start, int end)"}}, "Inheritance": [], "ClassName": "android.text.util.Linkify.MatchFilter", "ClassDesc": "MatchFilter enables client code to have more control over what is allowed to match and become a link, and what is not. For example: when matching web URLs you would like things like http://www.example.com to match, as well as just example.com itelf. However, you would not want to match against the domain in support@example.com. So, when matching against a web URL pattern you might also include a MatchFilter that disallows the match if it is immediately preceded by an at-sign (@)."}