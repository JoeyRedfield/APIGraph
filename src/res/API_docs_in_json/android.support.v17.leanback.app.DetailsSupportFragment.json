{"Functions": {"setTitle(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "The title of the browse fragment."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets a title for the browse fragment.", "history": "", "FullName": "public void setTitle (String title)"}, "getRowsSupportFragment()": {"Returns": [["@B_android#support#v17#leanback#app#RowsSupportFragment_E@", "Embedded RowsSupportFragment showing multiple rows for DetailsSupportFragment."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets embedded RowsSupportFragment showing multiple rows for DetailsSupportFragment. If view of DetailsSupportFragment is not created, the method returns null.", "history": "added in version 23.2.0", "FullName": "RowsSupportFragment getRowsSupportFragment ()"}, "setSelectedPosition(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the selected row position with smooth animation.", "history": "added in version 22.0.0", "FullName": "void setSelectedPosition (int position)"}, "getBadgeDrawable()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the badge drawable used in the fragment title.", "history": "", "FullName": "public Drawable getBadgeDrawable ()"}, "onPause()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the Fragment is no longer resumed. This is generally tied to @B_android#app#Activity#onPause_E@ of the containing Activity's lifecycle.", "history": "", "FullName": "public void onPause ()"}, "DetailsSupportFragment()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "DetailsSupportFragment ()"}, "onDestroyView()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the view previously created by @B_android#support#v4#app#Fragment#onCreateView_E@ has been detached from the fragment. The next time the fragment needs to be displayed, a new view will be created. This is called after @B_android#support#v4#app#Fragment#onStop_E@ and before @B_android#support#v4#app#Fragment#onDestroy_E@. It is called regardless of whether @B_android#support#v4#app#Fragment#onCreateView_E@ returned a non-null view. Internally it is called after the view's state has been saved but before it has been removed from its parent.", "history": "", "FullName": "public void onDestroyView ()"}, "prepareEntranceTransition()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enables entrance transition. Entrance transition is the standard slide-in transition that shows rows of data in browse screen and details screen. The method is ignored before LOLLIPOP (API21). This method must be called in or before onCreate(). Typically entrance transition should be enabled when savedInstance is null so that fragment restored from instanceState does not run an extra entrance transition. When the entrance transition is enabled, the fragment will make headers and content hidden initially. When data of rows are ready, app must call @B_android#support#v17#leanback#app#DetailsSupportFragment#startEntranceTransition_E@ to kick off the transition, otherwise the rows will be invisible forever. It is similar to android:windowsEnterTransition and can be considered a late-executed android:windowsEnterTransition controlled by app. There are two reasons that app needs it: Workaround the problem that activity transition is not available between launcher and app. Browse activity must programmatically start the slide-in transition. Separates DetailsOverviewRow transition from other rows transition. So that the DetailsOverviewRow transition can be executed earlier without waiting for all rows to be loaded. Transition object is returned by createEntranceTransition(). Typically the app does not need override the default transition that browse and details provides.", "history": "", "FullName": "void prepareEntranceTransition ()"}, "runEntranceTransition(java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Run entrance transition. Subclass may use TransitionManager to perform go(Scene) or beginDelayedTransition(). App should not override the default implementation of browse and details fragment.", "history": "added in version 23.1.0", "FullName": "void runEntranceTransition (Object entranceTransition)"}, "onStart()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the Fragment is visible to the user. This is generally tied to @B_android#app#Activity#onStart_E@ of the containing Activity's lifecycle.", "history": "added in version 22.0.0", "FullName": "void onStart ()"}, "getOnItemClickedListener()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the item Clicked listener.", "history": "", "FullName": "public OnItemClickedListener getOnItemClickedListener ()"}, "onCreate(android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: If the fragment is being re-created from a previous saved state, this is the state."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called to do initial creation of a fragment. This is called after @B_android#support#v4#app#Fragment#onAttach_E@ and before @B_android#support#v4#app#Fragment#onCreateView_E@. Note that this can be called while the fragment's activity is still in the process of being created. As such, you can not rely on things like the activity's content view hierarchy being initialized at this point. If you want to do work once the activity itself is created, see @B_android#support#v4#app#Fragment#onActivityCreated_E@. Any restored child fragments will be created before the base Fragment.onCreate method returns.", "history": "added in version 22.0.0", "FullName": "void onCreate (Bundle savedInstanceState)"}, "onEntranceTransitionEnd()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Callback when entrance transition is ended.", "history": "added in version 23.1.0", "FullName": "void onEntranceTransitionEnd ()"}, "getAdapter()": {"Returns": [["@B_android#support#v17#leanback#widget#ObjectAdapter_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the list of rows.", "history": "added in version 22.0.0", "FullName": "ObjectAdapter getAdapter ()"}, "onStop()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the Fragment is no longer started. This is generally tied to @B_android#app#Activity#onStop_E@ of the containing Activity's lifecycle.", "history": "added in version 22.0.0", "FullName": "void onStop ()"}, "getParallax()": {"Returns": [["@B_android#support#v17#leanback#widget#DetailsParallax_E@", "The DetailsParallax instance attached to the DetailsSupportFragment."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#support#v17#leanback#widget#DetailsParallax_E@ instance used by @B_android#support#v17#leanback#app#DetailsSupportFragmentBackgroundController_E@ to configure parallax effect of background and control embedded video playback. App usually does not use this method directly. App may use this method for other custom parallax tasks.", "history": "added in version 25.3.0", "FullName": "DetailsParallax getParallax ()"}, "onResume()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the fragment is visible to the user and actively running. This is generally tied to @B_android#app#Activity#onResume_E@ of the containing Activity's lifecycle.", "history": "", "FullName": "public void onResume ()"}, "getProgressBarManager()": {"Returns": [["@B_android#support#v17#leanback#app#ProgressBarManager_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#support#v17#leanback#app#ProgressBarManager_E@.", "history": "", "FullName": "ProgressBarManager getProgressBarManager ()"}, "startEntranceTransition()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "When fragment finishes loading data, it should call startEntranceTransition() to execute the entrance transition. startEntranceTransition() will start transition only if both two conditions are satisfied: prepareEntranceTransition() was called. has not executed entrance transition yet. If startEntranceTransition() is called before onViewCreated(), it will be pending and executed when view is created.", "history": "", "FullName": "void startEntranceTransition ()"}, "onEntranceTransitionStart()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Callback when entrance transition is started. This is when fragment should stop processing layout.", "history": "added in version 23.1.0", "FullName": "void onEntranceTransitionStart ()"}, "getOnItemViewClickedListener()": {"Returns": [["@B_android#support#v17#leanback#widget#BaseOnItemViewClickedListener_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the item clicked listener.", "history": "added in version 22.0.0", "FullName": "BaseOnItemViewClickedListener getOnItemViewClickedListener ()"}, "onEntranceTransitionPrepare()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Callback when entrance transition is prepared. This is when fragment should stop user input and animations.", "history": "added in version 23.1.0", "FullName": "void onEntranceTransitionPrepare ()"}, "getTitle()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the title for the browse fragment.", "history": "", "FullName": "public String getTitle ()"}, "createEntranceTransition()": {"Returns": [["@B_java#lang#Object_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create entrance transition. Subclass can override to load transition from resource or construct manually. Typically app does not need to override the default transition that browse and details provides.", "history": "added in version 23.1.0", "FullName": "Object createEntranceTransition ()"}, "setSearchAffordanceColor(int)": {"Returns": [], "Parameters": [["int", "The color to use for the search affordance."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the color used to draw the search affordance. A default brighter color will be set by the framework.", "history": "", "FullName": "public void setSearchAffordanceColor (int color)"}, "onSaveInstanceState(android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#os#Bundle_E@", "Bundle in which to place your saved state."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called to ask the fragment to save its current dynamic state, so it can later be reconstructed in a new instance of its process is restarted. If a new instance of the fragment later needs to be created, the data you place in the Bundle here will be available in the Bundle given to @B_android#support#v4#app#Fragment#onCreate_E@, @B_android#support#v4#app#Fragment#onCreateView_E@, and @B_android#support#v4#app#Fragment#onActivityCreated_E@. This corresponds to @B_android#app#Activity#onSaveInstanceState_E@ and most of the discussion there applies here as well. Note however: this method may be called at any time before @B_android#support#v4#app#Fragment#onDestroy_E@. There are many situations where a fragment may be mostly torn down (such as when placed on the back stack with no UI showing), but its state will not be saved until its owning activity actually needs to save its state.", "history": "", "FullName": "public void onSaveInstanceState (Bundle outState)"}, "getSearchAffordanceColors()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#support#v17#leanback#widget#SearchOrbView#Colors_E@ used to draw the search affordance.", "history": "", "FullName": "public SearchOrbView.Colors getSearchAffordanceColors ()"}, "setSelectedPosition(int, boolean)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the selected row position.", "history": "added in version 22.0.0", "FullName": "void setSelectedPosition (int position, boolean smooth)"}, "getSearchAffordanceColor()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the color used to draw the search affordance.", "history": "", "FullName": "public int getSearchAffordanceColor ()"}}, "Inheritance": ["java.lang.Object", "@B_android#support#v4#app#Fragment_E@", "@B_android#support#v17#leanback#app#BrandedSupportFragment_E@", "@B_android#support#v17#leanback#app#BaseSupportFragment_E@"], "ClassName": "android.support.v17.leanback.app.DetailsSupportFragment", "ClassDesc": "A fragment for creating Leanback details screens. A DetailsSupportFragment renders the elements of its @B_android#support#v17#leanback#widget#ObjectAdapter_E@ as a set of rows in a vertical list.The Adapter's @B_android#support#v17#leanback#widget#PresenterSelector_E@ must maintain subclasses of @B_android#support#v17#leanback#widget#RowPresenter_E@. When @B_android#support#v17#leanback#widget#FullWidthDetailsOverviewRowPresenter_E@ is found in adapter, DetailsSupportFragment will setup default behavior of the DetailsOverviewRow: The alignment of FullWidthDetailsOverviewRowPresenter is setup in @B_android#support#v17#leanback#app#DetailsSupportFragment#setupDetailsOverviewRowPresenter_E@. The view status switching of FullWidthDetailsOverviewRowPresenter is done in @B_android#support#v17#leanback#app#DetailsSupportFragment#onSetDetailsOverviewRowStatus_E@. The recommended activity themes to use with a DetailsSupportFragment are @B_android#support#v17#leanback#R#style#Theme_Leanback_Details_E@ with activity shared element transition for @B_android#support#v17#leanback#widget#FullWidthDetailsOverviewRowPresenter_E@. @B_android#support#v17#leanback#R#style#Theme_Leanback_Details_NoSharedElementTransition_E@ if shared element transition is not needed, for example if first row is not rendered by @B_android#support#v17#leanback#widget#FullWidthDetailsOverviewRowPresenter_E@. DetailsSupportFragment can use @B_android#support#v17#leanback#app#DetailsSupportFragmentBackgroundController_E@ to add a parallax drawable background and embedded video playing fragment."}