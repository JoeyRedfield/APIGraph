{"Functions": {"get(java.lang.Object)": {"Returns": [["V", "the value to which the key is mapped in this dictionary;"]], "Parameters": [["@B_java#lang#Object_E@", "Object: a key in this dictionary. null if the key is not mapped to any value in this dictionary."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if the key is null."]], "SeeAlso": ["@B_java#util#Dictionary#put_E@"], "Permissions": [], "Description": "Returns the value to which the key is mapped in this dictionary. The general contract for the", "history": "Added in API level 1", "FullName": "public abstract V get (Object key)"}, "size()": {"Returns": [["int", "the number of keys in this dictionary."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of entries (distinct keys) in this dictionary.", "history": "Added in API level 1", "FullName": "public abstract int size ()"}, "keys()": {"Returns": [["@B_java#util#Enumeration_E@", "an enumeration of the keys in this dictionary."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#util#Dictionary#elements_E@", "@B_java#util#Enumeration_E@"], "Permissions": [], "Description": "Returns an enumeration of the keys in this dictionary. The general contract for the keys method is that an", "history": "Added in API level 1", "FullName": "public abstract Enumeration<K> keys ()"}, "Dictionary()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sole constructor. (For invocation by subclass constructors, typically implicit.)", "history": "Added in API level 1", "FullName": "public Dictionary ()"}, "isEmpty()": {"Returns": [["boolean", "true if this dictionary maps no keys to values; false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tests if this dictionary maps no keys to value. The general contract for the", "history": "Added in API level 1", "FullName": "public abstract boolean isEmpty ()"}, "elements()": {"Returns": [["@B_java#util#Enumeration_E@", "an enumeration of the values in this dictionary."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#util#Dictionary#keys_E@", "@B_java#util#Enumeration_E@"], "Permissions": [], "Description": "Returns an enumeration of the values in this dictionary. The general contract for the", "history": "Added in API level 1", "FullName": "public abstract Enumeration<V> elements ()"}, "remove(java.lang.Object)": {"Returns": [["V", "the value to which the key had been mapped in this dictionary, or null if the key did not have a mapping."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the key that needs to be removed."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if key is null."]], "SeeAlso": [], "Permissions": [], "Description": "Removes the key (and its corresponding value) from this dictionary. This method does nothing if the key is not in this dictionary.", "history": "Added in API level 1", "FullName": "public abstract V remove (Object key)"}, "put(K,V)": {"Returns": [["V", "the previous value to which the key was mapped in this dictionary, or null if the key did not have a previous mapping."]], "Parameters": [["K", "K: the hashtable key."], ["V", "V: the value."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if the key or value is null."]], "SeeAlso": ["@B_java#lang#Object#equals_E@", "@B_java#util#Dictionary#get_E@"], "Permissions": [], "Description": "Maps the specified key to the specified value in this dictionary. Neither the key nor the value can be null. If this dictionary already contains an entry for the specified If this dictionary does not already have an entry for the specified The value can be retrieved by calling the get method with a key that is equal to the original key.", "history": "Added in API level 1", "FullName": "public abstract V put (K key, V value)"}, "put(K, V)": {"Returns": [["V", "the previous value to which the key was mapped in this dictionary, or null if the key did not have a previous mapping."]], "Parameters": [["K", "K: the hashtable key."], ["V", "V: the value."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if the key or value is null."]], "SeeAlso": ["@B_java#lang#Object#equals_E@", "@B_java#util#Dictionary#get_E@"], "Permissions": [], "Description": "Maps the specified key to the specified value in this dictionary. Neither the key nor the value can be null. If this dictionary already contains an entry for the specified If this dictionary does not already have an entry for the specified The value can be retrieved by calling the get method with a key that is equal to the original key.", "history": "added in API level 1", "FullName": "public abstract V put (K key, V value)"}}, "Inheritance": [], "ClassName": "java.util.Dictionary<K, V>", "ClassDesc": "The Dictionary class is the abstract parent of any class, such as Hashtable, which maps keys to values. Every key and every value is an object. In any one null object can be used as a key and as a value. As a rule, the equals method should be used by implementations of this class to decide if two keys are the same."}