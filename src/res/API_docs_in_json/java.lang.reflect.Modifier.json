{"Functions": {"isAbstract(int)": {"Returns": [["boolean", "true if mod includes the abstract modifier; false otherwise."]], "Parameters": [["int", "int: a set of modifiers"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the integer argument includes the abstract modifier, false otherwise.", "history": "Added in API level 1", "FullName": "public static boolean isAbstract (int mod)"}, "constructorModifiers()": {"Returns": [["int", "an int value OR-ing together the source language modifiers that can be applied to a constructor."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return an int value OR-ing together the source language modifiers that can be applied to a constructor.", "history": "Added in API level 19", "FullName": "public static int constructorModifiers ()"}, "parameterModifiers()": {"Returns": [["int", "an int value OR-ing together the source language modifiers that can be applied to a parameter."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return an int value OR-ing together the source language modifiers that can be applied to a parameter.", "history": "Added in API level 26", "FullName": "public static int parameterModifiers ()"}, "isStrict(int)": {"Returns": [["boolean", "true if mod includes the strictfp modifier; false otherwise."]], "Parameters": [["int", "int: a set of modifiers"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the integer argument includes the strictfp modifier, false otherwise.", "history": "Added in API level 1", "FullName": "public static boolean isStrict (int mod)"}, "methodModifiers()": {"Returns": [["int", "an int value OR-ing together the source language modifiers that can be applied to a method."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return an int value OR-ing together the source language modifiers that can be applied to a method.", "history": "Added in API level 19", "FullName": "public static int methodModifiers ()"}, "isVolatile(int)": {"Returns": [["boolean", "true if mod includes the volatile modifier; false otherwise."]], "Parameters": [["int", "int: a set of modifiers"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the integer argument includes the volatile modifier, false otherwise.", "history": "Added in API level 1", "FullName": "public static boolean isVolatile (int mod)"}, "isInterface(int)": {"Returns": [["boolean", "true if mod includes the interface modifier; false otherwise."]], "Parameters": [["int", "int: a set of modifiers"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the integer argument includes the interface modifier, false otherwise.", "history": "Added in API level 1", "FullName": "public static boolean isInterface (int mod)"}, "isStatic(int)": {"Returns": [["boolean", "true if mod includes the static modifier; false otherwise."]], "Parameters": [["int", "int: a set of modifiers"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the integer argument includes the static modifier, false otherwise.", "history": "Added in API level 1", "FullName": "public static boolean isStatic (int mod)"}, "isNative(int)": {"Returns": [["boolean", "true if mod includes the native modifier; false otherwise."]], "Parameters": [["int", "int: a set of modifiers"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the integer argument includes the native modifier, false otherwise.", "history": "Added in API level 1", "FullName": "public static boolean isNative (int mod)"}, "isFinal(int)": {"Returns": [["boolean", "true if mod includes the final modifier; false otherwise."]], "Parameters": [["int", "int: a set of modifiers"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the integer argument includes the final modifier, false otherwise.", "history": "Added in API level 1", "FullName": "public static boolean isFinal (int mod)"}, "fieldModifiers()": {"Returns": [["int", "an int value OR-ing together the source language modifiers that can be applied to a field."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return an int value OR-ing together the source language modifiers that can be applied to a field.", "history": "Added in API level 19", "FullName": "public static int fieldModifiers ()"}, "interfaceModifiers()": {"Returns": [["int", "an int value OR-ing together the source language modifiers that can be applied to an interface."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return an int value OR-ing together the source language modifiers that can be applied to an interface.", "history": "Added in API level 19", "FullName": "public static int interfaceModifiers ()"}, "isSynchronized(int)": {"Returns": [["boolean", "true if mod includes the synchronized modifier; false otherwise."]], "Parameters": [["int", "int: a set of modifiers"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the integer argument includes the synchronized modifier, false otherwise.", "history": "Added in API level 1", "FullName": "public static boolean isSynchronized (int mod)"}, "isProtected(int)": {"Returns": [["boolean", "true if mod includes the protected modifier; false otherwise."]], "Parameters": [["int", "int: a set of modifiers"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the integer argument includes the protected modifier, false otherwise.", "history": "Added in API level 1", "FullName": "public static boolean isProtected (int mod)"}, "toString(int)": {"Returns": [["@B_java#lang#String_E@", "a string representation of the set of modifiers represented by mod"]], "Parameters": [["int", "int: a set of modifiers"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a string describing the access modifier flags in the specified modifier. For example: interface modifier discussed in this class is not a true modifier in the Java language and it appears after all other modifiers listed by this method. This method may return a string of modifiers that are not valid modifiers of a Java entity; in other words, no checking is done on the possible validity of the combination of modifiers represented by the input. Note that to perform such checking for a known kind of entity, such as a constructor or method, first AND the argument of toString with the appropriate mask from a method like @B_java#lang#reflect#Modifier#constructorModifiers_E@ or @B_java#lang#reflect#Modifier#methodModifiers_E@.", "history": "Added in API level 1", "FullName": "public static String toString (int mod)"}, "isTransient(int)": {"Returns": [["boolean", "true if mod includes the transient modifier; false otherwise."]], "Parameters": [["int", "int: a set of modifiers"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the integer argument includes the transient modifier, false otherwise.", "history": "Added in API level 1", "FullName": "public static boolean isTransient (int mod)"}, "classModifiers()": {"Returns": [["int", "an int value OR-ing together the source language modifiers that can be applied to a class."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return an int value OR-ing together the source language modifiers that can be applied to a class.", "history": "Added in API level 19", "FullName": "public static int classModifiers ()"}, "isPublic(int)": {"Returns": [["boolean", "true if mod includes the public modifier; false otherwise."]], "Parameters": [["int", "int: a set of modifiers"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the integer argument includes the public modifier, false otherwise.", "history": "Added in API level 1", "FullName": "public static boolean isPublic (int mod)"}, "isPrivate(int)": {"Returns": [["boolean", "true if mod includes the private modifier; false otherwise."]], "Parameters": [["int", "int: a set of modifiers"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the integer argument includes the private modifier, false otherwise.", "history": "Added in API level 1", "FullName": "public static boolean isPrivate (int mod)"}, "Modifier()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public Modifier ()"}}, "Inheritance": [], "ClassName": "java.lang.reflect.Modifier", "ClassDesc": "The Modifier class provides static methods and constants to decode class and member access modifiers. The sets of modifiers are represented as integers with distinct bit positions representing different modifiers. The values for the constants representing the modifiers are taken from the tables in sections 4.1, 4.4, 4.5, and 4.7 of"}