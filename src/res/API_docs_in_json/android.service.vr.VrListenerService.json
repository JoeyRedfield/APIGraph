{"Functions": {"isVrModePackageEnabled(android.content.Context,android.content.ComponentName)": {"Returns": [["boolean", "true if this component is enabled in settings."]], "Parameters": [["@B_android#content#Context_E@", "Context: the @B_android#content#Context_E@ to use for looking up the requested component. This value must never be null."], ["@B_android#content#ComponentName_E@", "ComponentName: the name of the component that implements @B_android#service#vr#VrListenerService_E@ to check. This value must never be null."]], "Throws": [], "SeeAlso": ["@B_android#provider#Settings_E@"], "Permissions": [], "Description": "Checks if the given component is enabled in user settings. If this component is not enabled in the user's settings, it will not be started when the system enters VR mode. The user interface for enabling VrListenerService components can be started by sending the @B_android#provider#Settings#ACTION_VR_LISTENER_SETTINGS_E@ intent.", "history": "Added in API level 24", "FullName": "public static final boolean isVrModePackageEnabled (Context context, ComponentName requestedComponent)"}, "onCurrentVrActivityChanged(android.content.ComponentName)": {"Returns": [], "Parameters": [["@B_android#content#ComponentName_E@", "ComponentName: the @B_android#content#ComponentName_E@ of the VR activity that the system has switched to, or null if the system is displaying a 2D activity in VR compatibility mode."]], "Throws": [], "SeeAlso": ["@B_android#app#Activity#setVrModeEnabled_E@", "@B_android#R#attr#enableVrMode_E@"], "Permissions": [], "Description": "Called when the current activity using VR mode has changed. This will be called when this service is initially bound, but is not guaranteed to be called before onUnbind. In general, this is intended to be used to determine when user focus has transitioned between two VR activities. If both activities have declared @B_android#R#attr#enableVrMode_E@ with this service (and this service is present and enabled), this service will not be unbound during the activity transition.", "history": "Added in API level 24", "FullName": "public void onCurrentVrActivityChanged (ComponentName component)"}, "onBind(android.content.Intent)": {"Returns": [["@B_android#os#IBinder_E@", "Return an IBinder through which clients can call on to the service."]], "Parameters": [["@B_android#content#Intent_E@", "Intent: The Intent that was used to bind to this service, as given to @B_android#content#Context#bindService_E@. Note that any extras that were included with the Intent at that point will not be seen here."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the communication channel to the service. May return null if clients can not bind to the service. The returned @B_android#os#IBinder_E@ is usually for a complex interface that has been Note that unlike other application components, calls on to the IBinder interface returned here may not happen on the main thread of the process. More information about the main thread can be found in", "history": "Added in API level 24", "FullName": "public IBinder onBind (Intent intent)"}, "VrListenerService()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 24", "FullName": "public VrListenerService ()"}}, "Inheritance": ["@B_android#content#Context_E@", "@B_android#content#ContextWrapper_E@", "@B_android#app#Service_E@"], "ClassName": "android.service.vr.VrListenerService", "ClassDesc": "A service that is bound from the system while running in virtual reality (VR) mode. To extend this class, you must declare the service in your manifest file with the @B_android#Manifest#permission#BIND_VR_LISTENER_SERVICE_E@ permission and include an intent filter with the @B_android#service#vr#VrListenerService#SERVICE_INTERFACE_E@ action. For example: This service is bound when the system enters VR mode and is unbound when the system leaves VR mode. The system will enter VR mode when an application that has previously called @B_android#app#Activity#setVrModeEnabled_E@ gains user focus. The system will only start this service if the VR application has specifically targeted this service by specifying its @B_android#content#ComponentName_E@ in the call to @B_android#app#Activity#setVrModeEnabled_E@ and if this service is installed and enabled in the current user's settings."}