{"Functions": {"equals(java.lang.Object)": {"Returns": [["boolean", "true if the specified object is equal to this Spec; false otherwise"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the object to compare this spec with"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the class, alignment and span properties of this Spec and the supplied parameter are pairwise equal, false otherwise.", "history": "", "FullName": "boolean equals (Object that)"}, "getAbsoluteAlignment(boolean)": {"Returns": [["@B_android#support#v7#widget#GridLayout#Alignment_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 24.2.0", "FullName": "GridLayout.Alignment getAbsoluteAlignment (boolean horizontal)"}, "hashCode()": {"Returns": [["int", "a hash code value for this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code value for the object. This method is supported for the benefit of hash tables such as those provided by @B_java#util#HashMap_E@. The general contract of hashCode is: Whenever it is invoked on the same object more than once during an execution of a Java application, the hashCode method must consistently return the same integer, provided no information used in equals comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application. If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result. It is not required that if two objects are unequal according to the @B_java#lang#Object#equals_E@ method, then calling the hashCode method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables. As much as is reasonably practical, the hashCode method defined by class Object does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the Java\u2122 programming language.)", "history": "", "FullName": "int hashCode ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v7.widget.GridLayout.Spec", "ClassDesc": "A Spec defines the horizontal or vertical characteristics of a group of cells. Each spec. defines the grid indices and alignment along the appropriate axis. The grid indices are the leading and trailing edges of this cell group. See @B_android#support#v7#widget#GridLayout_E@ for a description of the conventions used by GridLayout for grid indices. The alignment property specifies how cells should be aligned in this group. For row groups, this specifies the vertical alignment. For column groups, this specifies the horizontal alignment. Use the following static methods to create specs: @B_android#support#v7#widget#GridLayout#spec_E@ @B_android#support#v7#widget#GridLayout#spec_E@ @B_android#support#v7#widget#GridLayout#spec_E@ @B_android#support#v7#widget#GridLayout#spec_E@ @B_android#support#v7#widget#GridLayout#spec_E@ @B_android#support#v7#widget#GridLayout#spec_E@ @B_android#support#v7#widget#GridLayout#spec_E@ @B_android#support#v7#widget#GridLayout#spec_E@"}