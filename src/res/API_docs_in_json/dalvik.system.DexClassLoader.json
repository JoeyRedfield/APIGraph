{"Functions": {"DexClassLoader(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the list of jar/apk files containing classes and resources, delimited by File.pathSeparator, which defaults to \":\" on Android"], ["@B_java#lang#String_E@", "String: this parameter is deprecated and has no effect since API level 26."], ["@B_java#lang#String_E@", "String: the list of directories containing native libraries, delimited by File.pathSeparator; may be null"], ["@B_java#lang#ClassLoader_E@", "ClassLoader: the parent class loader"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a DexClassLoader that finds interpreted and native code. Interpreted classes are found in a set of DEX files contained in Jar or APK files. The path lists are separated using the character specified by the path.separator system property, which defaults to :.", "history": "Added in API level 3", "FullName": "public DexClassLoader (String dexPath, String optimizedDirectory, String librarySearchPath, ClassLoader parent)"}}, "Inheritance": ["@B_java#lang#ClassLoader_E@", "@B_dalvik#system#BaseDexClassLoader_E@"], "ClassName": "dalvik.system.DexClassLoader", "ClassDesc": "A class loader that loads classes from .jar and .apk files containing a classes.dex entry. This can be used to execute code not installed as part of an application. Prior to API level 26, this class loader requires an application-private, writable directory to cache optimized classes. Use Context.getCodeCacheDir() to create such a directory:"}