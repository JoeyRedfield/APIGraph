{"Functions": {"getResultKey()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the key that the result of this input will be set in from the Bundle returned by @B_android#app#RemoteInput#getResultsFromIntent_E@ when the @B_android#app#PendingIntent_E@ is sent.", "history": "Added in API level 20", "FullName": "public String getResultKey ()"}, "getDataResultsFromIntent(android.content.Intent,java.lang.String)": {"Returns": [["@B_java#util#Map_E@", "no returns description in source"]], "Parameters": [["@B_android#content#Intent_E@", "Intent: The intent object that fired in response to an action or content intent which also had one or more remote input requested."], ["@B_java#lang#String_E@", "String: The result key for the RemoteInput you want results for."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Similar as @B_android#app#RemoteInput#getResultsFromIntent_E@ but retrieves data results for a specific RemoteInput result. To retrieve a value use:", "history": "Added in API level 26", "FullName": "public static Map<String, Uri> getDataResultsFromIntent (Intent intent, String remoteInputResultKey)"}, "getAllowedDataTypes()": {"Returns": [["@B_java#util#Set_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get possible non-textual inputs that are accepted. This can be null if the input does not accept non-textual values. See @B_android#app#RemoteInput#Builder#setAllowDataType_E@.", "history": "Added in API level 26", "FullName": "public Set<String> getAllowedDataTypes ()"}, "getResultsSource(android.content.Intent)": {"Returns": [["int", "The source of the results. If no source was set, @B_android#app#RemoteInput#SOURCE_FREE_FORM_INPUT_E@ will be returned. Value is @B_android#app#RemoteInput#SOURCE_FREE_FORM_INPUT_E@, or @B_android#app#RemoteInput#SOURCE_CHOICE_E@"]], "Parameters": [["@B_android#content#Intent_E@", "Intent: The intent object that fired in response to an action or content intent which also had one or more remote input requested."]], "Throws": [], "SeeAlso": ["@B_android#app#RemoteInput_E@"], "Permissions": [], "Description": "Get the source of the RemoteInput results.", "history": "Added in API level 28", "FullName": "public static int getResultsSource (Intent intent)"}, "getEditChoicesBeforeSending()": {"Returns": [["int", "Value is @B_android#app#RemoteInput#EDIT_CHOICES_BEFORE_SENDING_AUTO_E@, @B_android#app#RemoteInput#EDIT_CHOICES_BEFORE_SENDING_DISABLED_E@, or @B_android#app#RemoteInput#EDIT_CHOICES_BEFORE_SENDING_ENABLED_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets whether tapping on a choice should let the user edit the input before it is sent to the app.", "history": "Added in API level 29", "FullName": "public int getEditChoicesBeforeSending ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 20", "FullName": "public void writeToParcel (Parcel out, int flags)"}, "addResultsToIntent(android.app.RemoteInput[],android.content.Intent,android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#app#RemoteInput_E@", "RemoteInput: The remote inputs for which results are being provided"], ["@B_android#content#Intent_E@", "Intent: The intent to add remote inputs to. The @B_android#content#ClipData_E@ field of the intent will be modified to contain the results."], ["@B_android#os#Bundle_E@", "Bundle: A bundle holding the remote input results. This bundle should be populated with keys matching the result keys specified in remoteInputs with values being the CharSequence results per key."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Populate an intent object with the text results gathered from remote input. This method should only be called by remote input collection services when sending results to a pending intent.", "history": "Added in API level 20", "FullName": "public static void addResultsToIntent (RemoteInput[] remoteInputs, Intent intent, Bundle results)"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 20", "FullName": "public int describeContents ()"}, "getLabel()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the label to display to users when collecting this input.", "history": "Added in API level 20", "FullName": "public CharSequence getLabel ()"}, "getExtras()": {"Returns": [["@B_android#os#Bundle_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get additional metadata carried around with this remote input.", "history": "Added in API level 20", "FullName": "public Bundle getExtras ()"}, "getChoices()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get possible input choices. This can be null if there are no choices to present.", "history": "Added in API level 20", "FullName": "public CharSequence[] getChoices ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 20", "FullName": "public void writeToParcel (Parcel out, int flags)"}, "getResultsFromIntent(android.content.Intent)": {"Returns": [["@B_android#os#Bundle_E@", "no returns description in source"]], "Parameters": [["@B_android#content#Intent_E@", "Intent: The intent object that fired in response to an action or content intent which also had one or more remote input requested."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the remote input text results bundle from an intent. The returned Bundle will contain a key/value for every result key populated with text by remote input collector. Use the @B_android#os#Bundle#getCharSequence_E@ method to retrieve a value. For non-text results use @B_android#app#RemoteInput#getDataResultsFromIntent_E@.", "history": "Added in API level 20", "FullName": "public static Bundle getResultsFromIntent (Intent intent)"}, "setResultsSource(android.content.Intent, int)": {"Returns": [], "Parameters": [["@B_android#content#Intent_E@", "Intent: The intent to add remote input source to. The @B_android#content#ClipData_E@ field of the intent will be modified to contain the source."], ["int", "int: The source of the results. Value is SOURCE_FREE_FORM_INPUT or SOURCE_CHOICE."]], "Throws": [], "SeeAlso": ["@B_android#app#RemoteInput_E@"], "Permissions": [], "Description": "Set the source of the RemoteInput results. This method should only be called by remote input collection services (e.g. @B_android#service#notification#NotificationListenerService_E@) when sending results to a pending intent.", "history": "added in API level 28", "FullName": "public static void setResultsSource (Intent intent, int source)"}, "isDataOnly()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the input only accepts data, meaning @B_android#app#RemoteInput#getAllowFreeFormInput_E@ is false, @B_android#app#RemoteInput#getChoices_E@ is null or empty, and @B_android#app#RemoteInput#getAllowedDataTypes_E@ is non-null and not empty.", "history": "Added in API level 26", "FullName": "public boolean isDataOnly ()"}, "setResultsSource(android.content.Intent,int)": {"Returns": [], "Parameters": [["@B_android#content#Intent_E@", "Intent: The intent to add remote input source to. The @B_android#content#ClipData_E@ field of the intent will be modified to contain the source."], ["int", "int: The source of the results. Value is @B_android#app#RemoteInput#SOURCE_FREE_FORM_INPUT_E@, or @B_android#app#RemoteInput#SOURCE_CHOICE_E@"]], "Throws": [], "SeeAlso": ["@B_android#app#RemoteInput_E@"], "Permissions": [], "Description": "Set the source of the RemoteInput results. This method should only be called by remote input collection services (e.g. @B_android#service#notification#NotificationListenerService_E@) when sending results to a pending intent.", "history": "Added in API level 28", "FullName": "public static void setResultsSource (Intent intent, int source)"}, "getAllowFreeFormInput()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get whether or not users can provide an arbitrary value for input. If you set this to false, users must select one of the choices in @B_android#app#RemoteInput#getChoices_E@. An @B_java#lang#IllegalArgumentException_E@ is thrown if you set this to false and @B_android#app#RemoteInput#getChoices_E@ returns null or empty.", "history": "Added in API level 20", "FullName": "public boolean getAllowFreeFormInput ()"}, "addDataResultToIntent(android.app.RemoteInput,android.content.Intent,java.util.Map<java.lang.String,android.net.Uri>)": {"Returns": [], "Parameters": [["@B_android#app#RemoteInput_E@", "RemoteInput: The remote input for which results are being provided"], ["@B_android#content#Intent_E@", "Intent: The intent to add remote input results to. The @B_android#content#ClipData_E@ field of the intent will be modified to contain the results."], ["@B_java#util#Map_E@", "Map: A map of mime type to the Uri result for that mime type."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as @B_android#app#RemoteInput#addResultsToIntent_E@ but for setting data results. This is used for inputs that accept non-textual results (see @B_android#app#RemoteInput#Builder#setAllowDataType_E@). Only one result can be provided for every mime type accepted by the RemoteInput. If multiple inputs of the same mime type are expected then multiple RemoteInputs should be used.", "history": "Added in API level 26", "FullName": "public static void addDataResultToIntent (RemoteInput remoteInput, Intent intent, Map<String, Uri> results)"}}, "Inheritance": [], "ClassName": "android.app.RemoteInput", "ClassDesc": "A RemoteInput object specifies input to be collected from a user to be passed along with an intent inside a @B_android#app#PendingIntent_E@ that is sent. Always use @B_android#app#RemoteInput#Builder_E@ to create instances of this class. See The following example adds a RemoteInput to a @B_android#app#Notification#Action_E@, sets the result key as quick_reply, and sets the label as Quick reply. Users are prompted to input a response when they trigger the action. The results are sent along with the intent and can be retrieved with the result key (provided to the @B_android#app#RemoteInput#Builder_E@ constructor) from the Bundle returned by @B_android#app#RemoteInput#getResultsFromIntent_E@. When the @B_android#app#PendingIntent_E@ is fired, the intent inside will contain the input results if collected. To access these results, use the @B_android#app#RemoteInput#getResultsFromIntent_E@ function. The result values will present under the result key passed to the @B_android#app#RemoteInput#Builder_E@ constructor."}