{"Functions": {"setLookasideConfig(int,int)": {"Returns": [["@B_android#database#sqlite#SQLiteDatabase#OpenParams#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: The size in bytes of each lookaside slot. Value is 0 or greater"], ["int", "int: The total number of lookaside memory slots per database connection. Value is 0 or greater"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Configures SQLite default settings will be used, if this method isn't called. Use setLookasideConfig(0,0) to disable lookaside", "history": "Added in API level 27", "FullName": "public SQLiteDatabase.OpenParams.Builder setLookasideConfig (int slotSize, int slotCount)"}, "setIdleConnectionTimeout(long)": {"Returns": [["@B_android#database#sqlite#SQLiteDatabase#OpenParams#Builder_E@", "This value will never be null."]], "Parameters": [["long", "long: timeout in milliseconds. Use @B_java#lang#Long#MAX_VALUE_E@ to allow unlimited idle connections. Value is 0 or greater"]], "Throws": [], "SeeAlso": ["@B_android#database#sqlite#SQLiteOpenHelper#setIdleConnectionTimeout_E@"], "Permissions": [], "Description": "DO NOT USE this method. See the javadoc for the details. Sets the maximum number of milliseconds that SQLite connection is allowed to be idle before it is closed and removed from the pool. A connection timeout allows the system to internally close a connection to a SQLite database after a given timeout, which is good for reducing app's memory consumption. PRAGMA statement, and these states", "history": "Added in API level 27 Deprecated in API level 29", "FullName": "public SQLiteDatabase.OpenParams.Builder setIdleConnectionTimeout (long idleConnectionTimeoutMs)"}, "SQLiteDatabase.OpenParams.Builder()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 27", "FullName": "public SQLiteDatabase.OpenParams.Builder ()"}, "setErrorHandler(android.database.DatabaseErrorHandler)": {"Returns": [["@B_android#database#sqlite#SQLiteDatabase#OpenParams#Builder_E@", "This value will never be null."]], "Parameters": [["@B_android#database#DatabaseErrorHandler_E@", "DatabaseErrorHandler: This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets @B_android#database#DatabaseErrorHandler_E@ object to handle db corruption errors", "history": "Added in API level 27", "FullName": "public SQLiteDatabase.OpenParams.Builder setErrorHandler (DatabaseErrorHandler errorHandler)"}, "setLookasideConfig(int, int)": {"Returns": [["@B_android#database#sqlite#SQLiteDatabase#OpenParams#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: The size in bytes of each lookaside slot."], ["int", "int: The total number of lookaside memory slots per database connection."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Configures SQLite default settings will be used, if this method isn't called. Use setLookasideConfig(0,0) to disable lookaside", "history": "added in API level 27", "FullName": "public SQLiteDatabase.OpenParams.Builder setLookasideConfig (int slotSize, int slotCount)"}, "addOpenFlags(int)": {"Returns": [["@B_android#database#sqlite#SQLiteDatabase#OpenParams#Builder_E@", "same builder instance for chaining multiple calls into a single statement This value will never be null."]], "Parameters": [["int", "int: The new flags to add Value is either 0 or a combination of @B_android#database#sqlite#SQLiteDatabase#OPEN_READWRITE_E@, @B_android#database#sqlite#SQLiteDatabase#OPEN_READONLY_E@, @B_android#database#sqlite#SQLiteDatabase#CREATE_IF_NECESSARY_E@, @B_android#database#sqlite#SQLiteDatabase#NO_LOCALIZED_COLLATORS_E@, and @B_android#database#sqlite#SQLiteDatabase#ENABLE_WRITE_AHEAD_LOGGING_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds flags to control database access mode", "history": "Added in API level 27", "FullName": "public SQLiteDatabase.OpenParams.Builder addOpenFlags (int openFlags)"}, "setJournalMode(java.lang.String)": {"Returns": [["@B_android#database#sqlite#SQLiteDatabase#OpenParams#Builder_E@", "This value will never be null."]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets @B_android#database#sqlite#SQLiteDatabase#ENABLE_WRITE_AHEAD_LOGGING_E@ flag is not set.", "history": "Added in API level 28", "FullName": "public SQLiteDatabase.OpenParams.Builder setJournalMode (String journalMode)"}, "setOpenFlags(int)": {"Returns": [["@B_android#database#sqlite#SQLiteDatabase#OpenParams#Builder_E@", "same builder instance for chaining multiple calls into a single statement This value will never be null."]], "Parameters": [["int", "int: The new flags to set Value is either 0 or a combination of @B_android#database#sqlite#SQLiteDatabase#OPEN_READWRITE_E@, @B_android#database#sqlite#SQLiteDatabase#OPEN_READONLY_E@, @B_android#database#sqlite#SQLiteDatabase#CREATE_IF_NECESSARY_E@, @B_android#database#sqlite#SQLiteDatabase#NO_LOCALIZED_COLLATORS_E@, and @B_android#database#sqlite#SQLiteDatabase#ENABLE_WRITE_AHEAD_LOGGING_E@"]], "Throws": [], "SeeAlso": ["@B_android#database#sqlite#SQLiteDatabase_E@"], "Permissions": [], "Description": "Sets flags to control database access mode", "history": "Added in API level 27", "FullName": "public SQLiteDatabase.OpenParams.Builder setOpenFlags (int openFlags)"}, "removeOpenFlags(int)": {"Returns": [["@B_android#database#sqlite#SQLiteDatabase#OpenParams#Builder_E@", "same builder instance for chaining multiple calls into a single statement This value will never be null."]], "Parameters": [["int", "int: Flags to remove Value is either 0 or a combination of @B_android#database#sqlite#SQLiteDatabase#OPEN_READWRITE_E@, @B_android#database#sqlite#SQLiteDatabase#OPEN_READONLY_E@, @B_android#database#sqlite#SQLiteDatabase#CREATE_IF_NECESSARY_E@, @B_android#database#sqlite#SQLiteDatabase#NO_LOCALIZED_COLLATORS_E@, and @B_android#database#sqlite#SQLiteDatabase#ENABLE_WRITE_AHEAD_LOGGING_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes database access mode flags", "history": "Added in API level 27", "FullName": "public SQLiteDatabase.OpenParams.Builder removeOpenFlags (int openFlags)"}, "setSynchronousMode(java.lang.String)": {"Returns": [["@B_android#database#sqlite#SQLiteDatabase#OpenParams#Builder_E@", "This value will never be null."]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "w Sets", "history": "Added in API level 28", "FullName": "public SQLiteDatabase.OpenParams.Builder setSynchronousMode (String syncMode)"}, "setCursorFactory(android.database.sqlite.SQLiteDatabase.CursorFactory)": {"Returns": [["@B_android#database#sqlite#SQLiteDatabase#OpenParams#Builder_E@", "same builder instance for chaining multiple calls into a single statement This value will never be null."]], "Parameters": [["@B_android#database#sqlite#SQLiteDatabase#CursorFactory_E@", "SQLiteDatabase.CursorFactory: instance This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set an optional factory class that is called to instantiate a cursor when query is called.", "history": "Added in API level 27", "FullName": "public SQLiteDatabase.OpenParams.Builder setCursorFactory (SQLiteDatabase.CursorFactory cursorFactory)"}, "SQLiteDatabase.OpenParams.Builder(android.database.sqlite.SQLiteDatabase.OpenParams)": {"Returns": [], "Parameters": [["@B_android#database#sqlite#SQLiteDatabase#OpenParams_E@", "SQLiteDatabase.OpenParams no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 27", "FullName": "public SQLiteDatabase.OpenParams.Builder (SQLiteDatabase.OpenParams params)"}, "build()": {"Returns": [["@B_android#database#sqlite#SQLiteDatabase#OpenParams_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an instance of @B_android#database#sqlite#SQLiteDatabase#OpenParams_E@ with the options that were previously set on this builder", "history": "Added in API level 27", "FullName": "public SQLiteDatabase.OpenParams build ()"}}, "Inheritance": [], "ClassName": "android.database.sqlite.SQLiteDatabase.OpenParams.Builder", "ClassDesc": "Builder for @B_android#database#sqlite#SQLiteDatabase#OpenParams_E@."}