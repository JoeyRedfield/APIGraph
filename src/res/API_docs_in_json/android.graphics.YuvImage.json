{"Functions": {"compressToJpeg(android.graphics.Rect,int,java.io.OutputStream)": {"Returns": [["boolean", "True if the compression is successful."]], "Parameters": [["@B_android#graphics#Rect_E@", "Rect: The rectangle region to be compressed. The medthod checks if rectangle is inside the image. Also, the method modifies rectangle if the chroma pixels in it are not matched with the luma pixels in it."], ["int", "int: Hint to the compressor, 0-100. 0 meaning compress for small size, 100 meaning compress for max quality."], ["@B_java#io#OutputStream_E@", "OutputStream: OutputStream to write the compressed data."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if rectangle is invalid; quality is not within [0, 100]; or stream is null."]], "SeeAlso": [], "Permissions": [], "Description": "Compress a rectangle region in the YuvImage to a jpeg. Only ImageFormat.NV21 and ImageFormat.YUY2 are supported for now.", "history": "Added in API level 8", "FullName": "public boolean compressToJpeg (Rect rectangle, int quality, OutputStream stream)"}, "getHeight()": {"Returns": [["int", "the height of the image."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 8", "FullName": "public int getHeight ()"}, "getYuvFormat()": {"Returns": [["int", "the YUV format as defined in @B_android#graphics#ImageFormat_E@."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 8", "FullName": "public int getYuvFormat ()"}, "getYuvData()": {"Returns": [["byte[]", "the YUV data."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 8", "FullName": "public byte[] getYuvData ()"}, "YuvImage(byte[],int,int,int,int[])": {"Returns": [], "Parameters": [["byte[]", "byte: The YUV data. In the case of more than one image plane, all the planes must be concatenated into a single byte array."], ["int", "int: The YUV data format as defined in @B_android#graphics#ImageFormat_E@."], ["int", "int: The width of the YuvImage."], ["int", "int: The height of the YuvImage."], ["int[]", "int: (Optional) Row bytes of each image plane. If yuv contains padding, the stride of each image must be provided. If strides is null, the method assumes no padding and derives the row bytes by format and width itself."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if format is not support; width or height <= 0; or yuv is null."]], "SeeAlso": [], "Permissions": [], "Description": "Construct an YuvImage.", "history": "Added in API level 8", "FullName": "public YuvImage (byte[] yuv, int format, int width, int height, int[] strides)"}, "YuvImage(byte[], int, int, int, int[])": {"Returns": [], "Parameters": [["byte[]", "byte: The YUV data. In the case of more than one image plane, all the planes must be concatenated into a single byte array."], ["int", "int: The YUV data format as defined in @B_android#graphics#ImageFormat_E@."], ["int", "int: The width of the YuvImage."], ["int", "int: The height of the YuvImage."], ["int[]", "int: (Optional) Row bytes of each image plane. If yuv contains padding, the stride of each image must be provided. If strides is null, the method assumes no padding and derives the row bytes by format and width itself."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if format is not support; width or height <= 0; or yuv is null."]], "SeeAlso": [], "Permissions": [], "Description": "Construct an YuvImage.", "history": "added in API level 8", "FullName": "public YuvImage (byte[] yuv, int format, int width, int height, int[] strides)"}, "getWidth()": {"Returns": [["int", "the width of the image."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 8", "FullName": "public int getWidth ()"}, "getStrides()": {"Returns": [["int[]", "the number of row bytes in each image plane."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 8", "FullName": "public int[] getStrides ()"}}, "Inheritance": [], "ClassName": "android.graphics.YuvImage", "ClassDesc": "YuvImage contains YUV data and provides a method that compresses a region of the YUV data to a Jpeg. The YUV data should be provided as a single byte array irrespective of the number of image planes in it. Currently only ImageFormat.NV21 and ImageFormat.YUY2 are supported. To compress a rectangle region in the YUV data, users have to specify the region by left, top, width and height."}