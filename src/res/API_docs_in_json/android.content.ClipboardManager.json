{"Functions": {"hasText()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#content#ClipboardManager#hasPrimaryClip_E@ instead. Returns true if the clipboard contains text; false otherwise.", "history": "Added in API level 11", "FullName": "public boolean hasText ()"}, "setText(java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#content#ClipboardManager#setPrimaryClip_E@ instead. This creates a ClippedItem holding the given text and sets it as the primary clip. It has no label or icon. Sets the contents of the clipboard to the specified text.", "history": "Added in API level 11", "FullName": "public void setText (CharSequence text)"}, "removePrimaryClipChangedListener(android.content.ClipboardManager.OnPrimaryClipChangedListener)": {"Returns": [], "Parameters": [["@B_android#content#ClipboardManager#OnPrimaryClipChangedListener_E@", "ClipboardManager.OnPrimaryClipChangedListener no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 11", "FullName": "public void removePrimaryClipChangedListener (ClipboardManager.OnPrimaryClipChangedListener what)"}, "getPrimaryClip()": {"Returns": [["@B_android#content#ClipData_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#content#ClipboardManager#setPrimaryClip_E@"], "Permissions": [], "Description": "Returns the current primary clip on the clipboard. If the application is not the default IME or does not have input focus this return null.", "history": "Added in API level 11", "FullName": "public ClipData getPrimaryClip ()"}, "addPrimaryClipChangedListener(android.content.ClipboardManager.OnPrimaryClipChangedListener)": {"Returns": [], "Parameters": [["@B_android#content#ClipboardManager#OnPrimaryClipChangedListener_E@", "ClipboardManager.OnPrimaryClipChangedListener no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 11", "FullName": "public void addPrimaryClipChangedListener (ClipboardManager.OnPrimaryClipChangedListener what)"}, "clearPrimaryClip()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#content#ClipboardManager#setPrimaryClip_E@"], "Permissions": [], "Description": "Clears any current primary clip on the clipboard.", "history": "Added in API level 28", "FullName": "public void clearPrimaryClip ()"}, "getPrimaryClipDescription()": {"Returns": [["@B_android#content#ClipDescription_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#content#ClipboardManager#setPrimaryClip_E@"], "Permissions": [], "Description": "Returns a description of the current primary clip on the clipboard but not a copy of its data. If the application is not the default IME or does not have input focus this return null.", "history": "Added in API level 11", "FullName": "public ClipDescription getPrimaryClipDescription ()"}, "setPrimaryClip(android.content.ClipData)": {"Returns": [], "Parameters": [["@B_android#content#ClipData_E@", "ClipData: The clipped data item to set. This value must never be null."]], "Throws": [], "SeeAlso": ["@B_android#content#ClipboardManager#getPrimaryClip_E@", "@B_android#content#ClipboardManager#clearPrimaryClip_E@"], "Permissions": [], "Description": "Sets the current primary clip on the clipboard. This is the clip that is involved in normal cut and paste operations.", "history": "Added in API level 11", "FullName": "public void setPrimaryClip (ClipData clip)"}, "hasPrimaryClip()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if there is currently a primary clip on the clipboard. If the application is not the default IME or the does not have input focus this will return false.", "history": "Added in API level 11", "FullName": "public boolean hasPrimaryClip ()"}, "getText()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#content#ClipboardManager#getPrimaryClip_E@ instead. This retrieves the primary clip and tries to coerce it to a string. Returns the text on the clipboard. It will eventually be possible to store types other than text too, in which case this will return null if the type cannot be coerced to text.", "history": "Added in API level 11", "FullName": "public CharSequence getText ()"}}, "Inheritance": ["@B_android#text#ClipboardManager_E@"], "ClassName": "android.content.ClipboardManager", "ClassDesc": "Interface to the clipboard service, for placing and retrieving text in the global clipboard. The ClipboardManager API itself is very simple: it consists of methods to atomically get and set the current primary clipboard data. That data is expressed as a @B_android#content#ClipData_E@ object, which defines the protocol for data exchange between applications."}