{"Functions": {"setTintMode(android.graphics.PorterDuff.Mode)": {"Returns": [["@B_android#graphics#drawable#Icon_E@", "this same object, for use in chained construction"]], "Parameters": [["@B_android#graphics#PorterDuff#Mode_E@", "PorterDuff.Mode: a blending mode, as in @B_android#graphics#drawable#Drawable#setTintMode_E@, may be null This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Store a blending mode to use whenever this Icon is drawn.", "history": "Added in API level 23", "FullName": "public Icon setTintMode (PorterDuff.Mode mode)"}, "setTint(int)": {"Returns": [["@B_android#graphics#drawable#Icon_E@", "this same object, for use in chained construction"]], "Parameters": [["int", "int: a color, as in @B_android#graphics#drawable#Drawable#setTint_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Store a color to use whenever this Icon is drawn.", "history": "Added in API level 23", "FullName": "public Icon setTint (int tint)"}, "createWithResource(android.content.Context, int)": {"Returns": [["@B_android#graphics#drawable#Icon_E@", "no returns description in source"]], "Parameters": [["@B_android#content#Context_E@", "Context: The context for the application whose resources should be used to resolve the given resource ID."], ["int", "int: ID of the drawable resource"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create an Icon pointing to a drawable resource.", "history": "added in API level 23", "FullName": "public static Icon createWithResource (Context context, int resId)"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Parcelable interface", "history": "Added in API level 23", "FullName": "public int describeContents ()"}, "loadDrawableAsync(android.content.Context,android.graphics.drawable.Icon.OnDrawableLoadedListener,android.os.Handler)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: @B_android#content#Context_E@ in which to load the drawable; see @B_android#graphics#drawable#Icon#loadDrawable_E@"], ["@B_android#graphics#drawable#Icon#OnDrawableLoadedListener_E@", "Icon.OnDrawableLoadedListener: to be @B_android#graphics#drawable#Icon#OnDrawableLoadedListener#onDrawableLoaded_E@ when @B_android#graphics#drawable#Icon#loadDrawable_E@ finished"], ["@B_android#os#Handler_E@", "Handler: @B_android#os#Handler_E@ on which to notify the listener"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Invokes @B_android#graphics#drawable#Icon#loadDrawable_E@ on a background thread and notifies the OnDrawableLoadedListener#onDrawableLoaded on the handler when finished.", "history": "Added in API level 23", "FullName": "public void loadDrawableAsync (Context context, Icon.OnDrawableLoadedListener listener, Handler handler)"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 23", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "createWithResource(android.content.Context,int)": {"Returns": [["@B_android#graphics#drawable#Icon_E@", "no returns description in source"]], "Parameters": [["@B_android#content#Context_E@", "Context: The context for the application whose resources should be used to resolve the given resource ID."], ["int", "int: ID of the drawable resource"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create an Icon pointing to a drawable resource.", "history": "Added in API level 23", "FullName": "public static Icon createWithResource (Context context, int resId)"}, "createWithResource(java.lang.String,int)": {"Returns": [["@B_android#graphics#drawable#Icon_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: Name of the package containing the resource in question"], ["int", "int: ID of the drawable resource"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create an Icon pointing to a drawable resource.", "history": "Added in API level 23", "FullName": "public static Icon createWithResource (String resPackage, int resId)"}, "createWithAdaptiveBitmap(android.graphics.Bitmap)": {"Returns": [["@B_android#graphics#drawable#Icon_E@", "no returns description in source"]], "Parameters": [["@B_android#graphics#Bitmap_E@", "Bitmap: A valid @B_android#graphics#Bitmap_E@ object"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create an Icon pointing to a bitmap in memory that follows the icon design guideline defined by @B_android#graphics#drawable#AdaptiveIconDrawable_E@.", "history": "Added in API level 26", "FullName": "public static Icon createWithAdaptiveBitmap (Bitmap bits)"}, "getResPackage()": {"Returns": [["@B_java#lang#String_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the package used to create this icon. Only valid for icons of type @B_android#graphics#drawable#Icon#TYPE_RESOURCE_E@. Note: This package may not be available if referenced in the future, and it is up to the caller to ensure safety if this package is re-used and/or persisted.", "history": "Added in API level 28", "FullName": "public String getResPackage ()"}, "createWithData(byte[], int, int)": {"Returns": [["@B_android#graphics#drawable#Icon_E@", "no returns description in source"]], "Parameters": [["byte[]", "byte: Byte array storing compressed bitmap data of a type that @B_android#graphics#BitmapFactory_E@ can decode (see @B_android#graphics#Bitmap#CompressFormat_E@)."], ["int", "int: Offset into data at which the bitmap data starts"], ["int", "int: Length of the bitmap data"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create an Icon pointing to a compressed bitmap stored in a byte array.", "history": "added in API level 23", "FullName": "public static Icon createWithData (byte[] data, int offset, int length)"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 23", "FullName": "public String toString ()"}, "loadDrawableAsync(android.content.Context,android.os.Message)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: @B_android#content#Context_E@ in which to load the drawable; see @B_android#graphics#drawable#Icon#loadDrawable_E@"], ["@B_android#os#Message_E@", "Message: @B_android#os#Message_E@ to send to its target once the drawable is available. The @B_android#os#Message#obj_E@ property is populated with the Drawable."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Invokes @B_android#graphics#drawable#Icon#loadDrawable_E@ on the given @B_android#os#Handler_E@ and then sends andThen to the same Handler when finished.", "history": "Added in API level 23", "FullName": "public void loadDrawableAsync (Context context, Message andThen)"}, "createWithContentUri(java.lang.String)": {"Returns": [["@B_android#graphics#drawable#Icon_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: A uri referring to local content:// or file:// image data."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create an Icon pointing to an image file specified by URI.", "history": "Added in API level 23", "FullName": "public static Icon createWithContentUri (String uri)"}, "getResId()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the resource used to create this icon. Only valid for icons of type @B_android#graphics#drawable#Icon#TYPE_RESOURCE_E@. Note: This resource may not be available if the application changes at all, and it is up to the caller to ensure safety if this resource is re-used and/or persisted.", "history": "Added in API level 28", "FullName": "public int getResId ()"}, "createWithContentUri(android.net.Uri)": {"Returns": [["@B_android#graphics#drawable#Icon_E@", "no returns description in source"]], "Parameters": [["@B_android#net#Uri_E@", "Uri: A uri referring to local content:// or file:// image data."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create an Icon pointing to an image file specified by URI.", "history": "Added in API level 23", "FullName": "public static Icon createWithContentUri (Uri uri)"}, "createWithFilePath(java.lang.String)": {"Returns": [["@B_android#graphics#drawable#Icon_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: A path to a file that contains compressed bitmap data of a type that @B_android#graphics#BitmapFactory_E@ can decode."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create an Icon pointing to an image file specified by path.", "history": "Added in API level 23", "FullName": "public static Icon createWithFilePath (String path)"}, "loadDrawable(android.content.Context)": {"Returns": [["@B_android#graphics#drawable#Drawable_E@", "A fresh instance of a drawable for this image, yours to keep."]], "Parameters": [["@B_android#content#Context_E@", "Context: @B_android#content#Context_E@ in which to load the drawable; used to access @B_android#content#res#Resources_E@, for example."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a Drawable that can be used to draw the image inside this Icon, constructing it if necessary. Depending on the type of image, this may not be something you want to do on the UI thread, so consider using @B_android#graphics#drawable#Icon#loadDrawableAsync_E@ instead.", "history": "Added in API level 23", "FullName": "public Drawable loadDrawable (Context context)"}, "createWithData(byte[],int,int)": {"Returns": [["@B_android#graphics#drawable#Icon_E@", "no returns description in source"]], "Parameters": [["byte[]", "byte: Byte array storing compressed bitmap data of a type that @B_android#graphics#BitmapFactory_E@ can decode (see @B_android#graphics#Bitmap#CompressFormat_E@)."], ["int", "int: Offset into data at which the bitmap data starts"], ["int", "int: Length of the bitmap data"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create an Icon pointing to a compressed bitmap stored in a byte array.", "history": "Added in API level 23", "FullName": "public static Icon createWithData (byte[] data, int offset, int length)"}, "setTintBlendMode(android.graphics.BlendMode)": {"Returns": [["@B_android#graphics#drawable#Icon_E@", "this same object, for use in chained construction"]], "Parameters": [["@B_android#graphics#BlendMode_E@", "BlendMode: a blending mode, as in @B_android#graphics#drawable#Drawable#setTintMode_E@, may be null This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Store a blending mode to use whenever this Icon is drawn.", "history": "Added in API level 29", "FullName": "public Icon setTintBlendMode (BlendMode mode)"}, "setTintList(android.content.res.ColorStateList)": {"Returns": [["@B_android#graphics#drawable#Icon_E@", "this same object, for use in chained construction"]], "Parameters": [["@B_android#content#res#ColorStateList_E@", "ColorStateList: as in @B_android#graphics#drawable#Drawable#setTintList_E@, null to remove tint"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Store a color to use whenever this Icon is drawn.", "history": "Added in API level 23", "FullName": "public Icon setTintList (ColorStateList tintList)"}, "createWithBitmap(android.graphics.Bitmap)": {"Returns": [["@B_android#graphics#drawable#Icon_E@", "no returns description in source"]], "Parameters": [["@B_android#graphics#Bitmap_E@", "Bitmap: A valid @B_android#graphics#Bitmap_E@ object"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create an Icon pointing to a bitmap in memory.", "history": "Added in API level 23", "FullName": "public static Icon createWithBitmap (Bitmap bits)"}, "getType()": {"Returns": [["int", "Value is @B_android#graphics#drawable#Icon#TYPE_BITMAP_E@, @B_android#graphics#drawable#Icon#TYPE_RESOURCE_E@, @B_android#graphics#drawable#Icon#TYPE_DATA_E@, @B_android#graphics#drawable#Icon#TYPE_URI_E@, or @B_android#graphics#drawable#Icon#TYPE_ADAPTIVE_BITMAP_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the type of the icon provided. Note that new types may be added later, so callers should guard against other types being returned.", "history": "Added in API level 28", "FullName": "public int getType ()"}, "getUri()": {"Returns": [["@B_android#net#Uri_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the uri used to create this icon. Only valid for icons of type @B_android#graphics#drawable#Icon#TYPE_URI_E@. Note: This uri may not be available in the future, and it is up to the caller to ensure safety if this uri is re-used and/or persisted.", "history": "Added in API level 28", "FullName": "public Uri getUri ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 23", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "createWithResource(java.lang.String, int)": {"Returns": [["@B_android#graphics#drawable#Icon_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: Name of the package containing the resource in question"], ["int", "int: ID of the drawable resource"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create an Icon pointing to a drawable resource.", "history": "added in API level 23", "FullName": "public static Icon createWithResource (String resPackage, int resId)"}}, "Inheritance": [], "ClassName": "android.graphics.drawable.Icon", "ClassDesc": "An umbrella container for several serializable graphics representations, including Bitmaps, compressed bitmap images (e.g. JPG or PNG), and drawable resources (including vectors)."}