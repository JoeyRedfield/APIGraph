{"Functions": {"setZoom(float)": {"Returns": [], "Parameters": [["float", "float: The camera zoom ratio."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets camera zoom ratio. Handled by @B_android#telecom#Connection#VideoProvider#onSetZoom_E@.", "history": "Added in API level 23", "FullName": "public abstract void setZoom (float value)"}, "setDisplaySurface(android.view.Surface)": {"Returns": [], "Parameters": [["@B_android#view#Surface_E@", "Surface: The @B_android#view#Surface_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the surface to be used for displaying the video received from the remote device. Handled by @B_android#telecom#Connection#VideoProvider#onSetDisplaySurface_E@.", "history": "Added in API level 23", "FullName": "public abstract void setDisplaySurface (Surface surface)"}, "registerCallback(android.telecom.InCallService.VideoCall.Callback)": {"Returns": [], "Parameters": [["@B_android#telecom#InCallService#VideoCall#Callback_E@", "InCallService.VideoCall.Callback: The video call callback."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers a callback to receive commands and state changes for video calls.", "history": "Added in API level 23", "FullName": "public abstract void registerCallback (InCallService.VideoCall.Callback callback)"}, "requestCameraCapabilities()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Issues a request to the @B_android#telecom#Connection#VideoProvider_E@ to retrieve the capabilities of the current camera. The current camera is selected using @B_android#telecom#InCallService#VideoCall#setCamera_E@. Camera capabilities are reported to the caller via @B_android#telecom#InCallService#VideoCall#Callback#onCameraCapabilitiesChanged_E@. Handled by @B_android#telecom#Connection#VideoProvider#onRequestCameraCapabilities_E@.", "history": "Added in API level 23", "FullName": "public abstract void requestCameraCapabilities ()"}, "sendSessionModifyResponse(android.telecom.VideoProfile)": {"Returns": [], "Parameters": [["@B_android#telecom#VideoProfile_E@", "VideoProfile: The response call video properties."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Provides a response to a request to change the current call video session properties. This should be called in response to a request the @B_android#telecom#InCallService_E@ has received via @B_android#telecom#InCallService#VideoCall#Callback#onSessionModifyRequestReceived_E@. Handled by @B_android#telecom#Connection#VideoProvider#onSendSessionModifyResponse_E@.", "history": "Added in API level 23", "FullName": "public abstract void sendSessionModifyResponse (VideoProfile responseProfile)"}, "setPauseImage(android.net.Uri)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri: URI of image to display."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Provides the @B_android#telecom#Connection#VideoProvider_E@ with the @B_android#net#Uri_E@ of an image to be displayed to the peer device when the video signal is paused. Handled by @B_android#telecom#Connection#VideoProvider#onSetPauseImage_E@.", "history": "Added in API level 23", "FullName": "public abstract void setPauseImage (Uri uri)"}, "requestCallDataUsage()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Issues a request to the @B_android#telecom#Connection#VideoProvider_E@ to retrieve the cumulative data usage for the video component of the current call (in bytes). Data usage is reported to the caller via @B_android#telecom#InCallService#VideoCall#Callback#onCallDataUsageChanged_E@. Handled by @B_android#telecom#Connection#VideoProvider#onRequestConnectionDataUsage_E@.", "history": "Added in API level 23", "FullName": "public abstract void requestCallDataUsage ()"}, "unregisterCallback(android.telecom.InCallService.VideoCall.Callback)": {"Returns": [], "Parameters": [["@B_android#telecom#InCallService#VideoCall#Callback_E@", "InCallService.VideoCall.Callback: The video call callback to clear."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Clears the video call callback set via @B_android#telecom#InCallService#VideoCall#registerCallback_E@.", "history": "Added in API level 23", "FullName": "public abstract void unregisterCallback (InCallService.VideoCall.Callback callback)"}, "registerCallback(android.telecom.InCallService.VideoCall.Callback,android.os.Handler)": {"Returns": [], "Parameters": [["@B_android#telecom#InCallService#VideoCall#Callback_E@", "InCallService.VideoCall.Callback: The video call callback."], ["@B_android#os#Handler_E@", "Handler: A handler which commands and status changes will be delivered to."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers a callback to receive commands and state changes for video calls.", "history": "Added in API level 23", "FullName": "public abstract void registerCallback (InCallService.VideoCall.Callback callback, Handler handler)"}, "InCallService.VideoCall()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 23", "FullName": "public InCallService.VideoCall ()"}, "setCamera(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The id of the camera (use ids as reported by @B_android#hardware#camera2#CameraManager#getCameraIdList_E@)."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the camera to be used for the outgoing video. Handled by @B_android#telecom#Connection#VideoProvider#onSetCamera_E@.", "history": "Added in API level 23", "FullName": "public abstract void setCamera (String cameraId)"}, "setPreviewSurface(android.view.Surface)": {"Returns": [], "Parameters": [["@B_android#view#Surface_E@", "Surface: The @B_android#view#Surface_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the surface to be used for displaying a preview of what the user's camera is currently capturing. When video transmission is enabled, this is the video signal which is sent to the remote device. Handled by @B_android#telecom#Connection#VideoProvider#onSetPreviewSurface_E@.", "history": "Added in API level 23", "FullName": "public abstract void setPreviewSurface (Surface surface)"}, "setDeviceOrientation(int)": {"Returns": [], "Parameters": [["int", "int: The device orientation, in degrees."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the device orientation, in degrees. Assumes that a standard portrait orientation of the device is 0 degrees. Handled by @B_android#telecom#Connection#VideoProvider#onSetDeviceOrientation_E@.", "history": "Added in API level 23", "FullName": "public abstract void setDeviceOrientation (int rotation)"}, "sendSessionModifyRequest(android.telecom.VideoProfile)": {"Returns": [], "Parameters": [["@B_android#telecom#VideoProfile_E@", "VideoProfile: The requested call video properties."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Issues a request to modify the properties of the current video session. Example scenarios include: requesting an audio-only call to be upgraded to a bi-directional video call, turning on or off the user's camera, sending a pause signal when the @B_android#telecom#InCallService_E@ is no longer the foreground application. Handled by @B_android#telecom#Connection#VideoProvider#onSendSessionModifyRequest_E@.", "history": "Added in API level 23", "FullName": "public abstract void sendSessionModifyRequest (VideoProfile requestProfile)"}}, "Inheritance": [], "ClassName": "android.telecom.InCallService.VideoCall", "ClassDesc": "Used to issue commands to the @B_android#telecom#Connection#VideoProvider_E@ associated with a @B_android#telecom#Call_E@."}