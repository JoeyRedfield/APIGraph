{"Functions": {"getCodec(int,java.lang.String,java.lang.String)": {"Returns": [["@B_android#net#rtp#AudioCodec_E@", "The configured AudioCodec or null if it is not supported."]], "Parameters": [["int", "int: The payload type of the encoding defined in RTP/AVP."], ["@B_java#lang#String_E@", "String: The encoding parameters specified in the corresponding SDP attribute, or null if it is not available."], ["@B_java#lang#String_E@", "String: The format parameters specified in the corresponding SDP attribute, or null if it is not available."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an AudioCodec according to the given configuration.", "history": "Added in API level 12", "FullName": "public static AudioCodec getCodec (int type, String rtpmap, String fmtp)"}, "getCodecs()": {"Returns": [["@B_android#net#rtp#AudioCodec_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns system supported audio codecs.", "history": "Added in API level 12", "FullName": "public static AudioCodec[] getCodecs ()"}, "getCodec(int, java.lang.String, java.lang.String)": {"Returns": [["@B_android#net#rtp#AudioCodec_E@", "The configured AudioCodec or null if it is not supported."]], "Parameters": [["int", "int: The payload type of the encoding defined in RTP/AVP."], ["@B_java#lang#String_E@", "String: The encoding parameters specified in the corresponding SDP attribute, or null if it is not available."], ["@B_java#lang#String_E@", "String: The format parameters specified in the corresponding SDP attribute, or null if it is not available."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an AudioCodec according to the given configuration.", "history": "added in API level 12", "FullName": "public static AudioCodec getCodec (int type, String rtpmap, String fmtp)"}}, "Inheritance": [], "ClassName": "android.net.rtp.AudioCodec", "ClassDesc": "This class defines a collection of audio codecs to be used with @B_android#net#rtp#AudioStream_E@s. Their parameters are designed to be exchanged using Session Description Protocol (SDP). Most of the values listed here can be found in RFC 3551, while others are described in separated standards. Few simple configurations are defined as public static instances for the convenience of direct uses. More complicated ones could be obtained using @B_android#net#rtp#AudioCodec#getCodec_E@. For example, one can use the following snippet to create a mode-1-only AMR codec."}