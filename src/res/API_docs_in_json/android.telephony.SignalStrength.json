{"Functions": {"getGsmSignalStrength()": {"Returns": [["int", "RSSI in ASU 0..31, 99, or UNAVAILABLE"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#telephony#package-summary_E@", "@B_android#telephony#SignalStrength#getCellSignalStrengths_E@"], "Permissions": [], "Description": "this information should be retrieved from @B_android#telephony#CellSignalStrengthGsm#getAsuLevel_E@. Get the GSM RSSI in ASU. Asu is calculated based on 3GPP RSRP. Refer to 3GPP 27.007 (Ver 10.3.0) Sec 8.69", "history": "Added in API level 7 Deprecated in API level 29", "FullName": "public int getGsmSignalStrength ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "@B_android#os#Parcelable#writeToParcel_E@", "history": "added in API level 7", "FullName": "public void writeToParcel (Parcel out, int flags)"}, "getCellSignalStrengths()": {"Returns": [["@B_java#util#List_E@", "a List of CellSignalStrength or an empty List if there are no valid measurements. This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#telephony#package-summary_E@"], "Permissions": [], "Description": "Returns a List of CellSignalStrength Components of this SignalStrength Report. Use this API to access underlying @B_android#telephony#package-summary_E@ objects that provide more granular information about the SignalStrength report. Only valid (non-empty) CellSignalStrengths will be returned. The order of any returned elements is not guaranteed, and the list may contain more than one instance of a CellSignalStrength type.", "history": "Added in API level 29", "FullName": "public List<CellSignalStrength> getCellSignalStrengths ()"}, "isGsm()": {"Returns": [["boolean", "true if this is for GSM"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method returns true if there are any 3gpp type SignalStrength elements in this SignalStrength report or if the report contains no valid SignalStrength information. Instead callers should use @B_android#telephony#SignalStrength#getCellSignalStrengths_E@ to determine which types of information are contained in the SignalStrength report.", "history": "Added in API level 7 Deprecated in API level 29", "FullName": "public boolean isGsm ()"}, "getEvdoSnr()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#telephony#package-summary_E@", "@B_android#telephony#SignalStrength#getCellSignalStrengths_E@"], "Permissions": [], "Description": "this information should be retrieved from @B_android#telephony#CellSignalStrengthCdma#getEvdoSnr_E@. Get the signal to noise ratio. Valid values are 0-8. 8 is the highest.", "history": "Added in API level 7 Deprecated in API level 29", "FullName": "public int getEvdoSnr ()"}, "getLevel()": {"Returns": [["int", "a single integer from 0 to 4 representing the general signal quality. This may take into account many different radio technology inputs. 0 represents very poor signal strength while 4 represents a very strong signal strength."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve an abstract level value for the overall signal strength.", "history": "Added in API level 23", "FullName": "public int getLevel ()"}, "getEvdoDbm()": {"Returns": [["int", "the EVDO RSSI value or @B_android#telephony#SignalStrength#INVALID_E@ if invalid"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#telephony#package-summary_E@", "@B_android#telephony#SignalStrength#getCellSignalStrengths_E@"], "Permissions": [], "Description": "this information should be retrieved from @B_android#telephony#CellSignalStrengthCdma#getEvdoDbm_E@. Get the EVDO RSSI value in dBm", "history": "Added in API level 7 Deprecated in API level 29", "FullName": "public int getEvdoDbm ()"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "@B_android#os#Parcelable#describeContents_E@", "history": "Added in API level 7", "FullName": "public int describeContents ()"}, "getCdmaEcio()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#telephony#package-summary_E@", "@B_android#telephony#SignalStrength#getCellSignalStrengths_E@"], "Permissions": [], "Description": "this information should be retrieved from @B_android#telephony#CellSignalStrengthCdma#getCdmaEcio_E@. Get the CDMA Ec/Io value in dB*10", "history": "Added in API level 7 Deprecated in API level 29", "FullName": "public int getCdmaEcio ()"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "string representation."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 7", "FullName": "public String toString ()"}, "getCdmaDbm()": {"Returns": [["int", "the CDMA RSSI value or @B_android#telephony#SignalStrength#INVALID_E@ if invalid"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#telephony#package-summary_E@", "@B_android#telephony#SignalStrength#getCellSignalStrengths_E@"], "Permissions": [], "Description": "this information should be retrieved from @B_android#telephony#CellSignalStrengthCdma#getCdmaDbm_E@. Get the CDMA RSSI value in dBm", "history": "Added in API level 7 Deprecated in API level 29", "FullName": "public int getCdmaDbm ()"}, "getCellSignalStrengths(java.lang.Class<T>)": {"Returns": [["@B_java#util#List_E@", "a List of CellSignalStrength or an empty List if there are no valid measurements. This value will never be null."]], "Parameters": [["@B_java#lang#Class_E@", "Class: a class type that extends @B_android#telephony#CellSignalStrength_E@ to filter possible return values. This value must never be null."]], "Throws": [], "SeeAlso": ["@B_android#telephony#package-summary_E@"], "Permissions": [], "Description": "Returns a List of CellSignalStrength Components of this SignalStrength Report. Use this API to access underlying @B_android#telephony#package-summary_E@ objects that provide more granular information about the SignalStrength report. Only valid (non-empty) CellSignalStrengths will be returned. The order of any returned elements is not guaranteed, and the list may contain more than one instance of a CellSignalStrength type.", "history": "Added in API level 29", "FullName": "public List<T> getCellSignalStrengths (Class<T> clazz)"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if the signal strengths are the same"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the reference object with which to compare."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether some other object is \"equal to\" this one. The equals method implements an equivalence relation on non-null object references: It is x, x.equals(x) should return true. It is x and y, x.equals(y) should return true if and only if y.equals(x) returns true. It is x, y, and z, if x.equals(y) returns true and y.equals(z) returns true, then x.equals(z) should return true. It is x and y, multiple invocations of x.equals(y) consistently return true or consistently return false, provided no information used in equals comparisons on the objects is modified. For any non-null reference value x, x.equals(null) should return false. The equals method for class Object implements the most discriminating possible equivalence relation on objects; that is, for any non-null reference values x and y, this method returns true if and only if x and y refer to the same object (x == y has the value true). Note that it is generally necessary to override the hashCode method whenever this method is overridden, so as to maintain the general contract for the hashCode method, which states that equal objects must have equal hash codes.", "history": "Added in API level 7", "FullName": "public boolean equals (Object o)"}, "getEvdoEcio()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#telephony#package-summary_E@", "@B_android#telephony#SignalStrength#getCellSignalStrengths_E@"], "Permissions": [], "Description": "this information should be retrieved from @B_android#telephony#CellSignalStrengthCdma#getEvdoEcio_E@. Get the EVDO Ec/Io value in dB*10", "history": "Added in API level 7 Deprecated in API level 29", "FullName": "public int getEvdoEcio ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "@B_android#os#Parcelable#writeToParcel_E@", "history": "Added in API level 7", "FullName": "public void writeToParcel (Parcel out, int flags)"}, "getGsmBitErrorRate()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#telephony#package-summary_E@", "@B_android#telephony#SignalStrength#getCellSignalStrengths_E@"], "Permissions": [], "Description": "this information should be retrieved from @B_android#telephony#CellSignalStrengthGsm#getBitErrorRate_E@. Get the GSM bit error rate (0-7, 99) as defined in TS 27.007 8.5", "history": "Added in API level 7 Deprecated in API level 29", "FullName": "public int getGsmBitErrorRate ()"}, "hashCode()": {"Returns": [["int", "hash code"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code value for the object. This method is supported for the benefit of hash tables such as those provided by @B_java#util#HashMap_E@. The general contract of hashCode is: Whenever it is invoked on the same object more than once during an execution of a Java application, the hashCode method must consistently return the same integer, provided no information used in equals comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application. If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result. It is not required that if two objects are unequal according to the @B_java#lang#Object#equals_E@ method, then calling the hashCode method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables. As much as is reasonably practical, the hashCode method defined by class Object does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the Java\u2122 programming language.)", "history": "Added in API level 7", "FullName": "public int hashCode ()"}}, "Inheritance": [], "ClassName": "android.telephony.SignalStrength", "ClassDesc": "Contains phone signal strength related information."}