{"Functions": {"principal()": {"Returns": [["@B_java#nio#file#attribute#UserPrincipal_E@", "the principal component"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the principal component.", "history": "Added in API level 26", "FullName": "public UserPrincipal principal ()"}, "newBuilder()": {"Returns": [["@B_java#nio#file#attribute#AclEntry#Builder_E@", "a new builder"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new builder. The initial value of the type and who components is null. The initial value of the permissions and flags components is the empty set.", "history": "Added in API level 26", "FullName": "public static AclEntry.Builder newBuilder ()"}, "newBuilder(java.nio.file.attribute.AclEntry)": {"Returns": [["@B_java#nio#file#attribute#AclEntry#Builder_E@", "a new builder"]], "Parameters": [["@B_java#nio#file#attribute#AclEntry_E@", "AclEntry: an ACL entry"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new builder with the components of an existing ACL entry.", "history": "Added in API level 26", "FullName": "public static AclEntry.Builder newBuilder (AclEntry entry)"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if, and only if, the given object is an AclEntry that is identical to this AclEntry"]], "Parameters": [["@B_java#lang#Object_E@", "Object: the object to which this object is to be compared"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Compares the specified object with this ACL entry for equality. If the given object is not an AclEntry then this method immediately returns false. For two ACL entries to be considered equals requires that they are both the same type, their who components are equal, their permissions components are equal, and their flags components are equal. This method satisfies the general contract of the @B_java#lang#Object#equals_E@ method.", "history": "Added in API level 26", "FullName": "public boolean equals (Object ob)"}, "permissions()": {"Returns": [["@B_java#util#Set_E@", "the permissions component"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a copy of the permissions component. The returned set is a modifiable copy of the permissions.", "history": "Added in API level 26", "FullName": "public Set<AclEntryPermission> permissions ()"}, "flags()": {"Returns": [["@B_java#util#Set_E@", "the flags component"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a copy of the flags component. The returned set is a modifiable copy of the flags.", "history": "Added in API level 26", "FullName": "public Set<AclEntryFlag> flags ()"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "the string representation of this entry"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the string representation of this ACL entry.", "history": "Added in API level 26", "FullName": "public String toString ()"}, "type()": {"Returns": [["@B_java#nio#file#attribute#AclEntryType_E@", "the ACL entry type"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the ACL entry type.", "history": "Added in API level 26", "FullName": "public AclEntryType type ()"}, "hashCode()": {"Returns": [["int", "a hash code value for this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the hash-code value for this ACL entry. This method satisfies the general contract of the @B_java#lang#Object#hashCode_E@ method.", "history": "Added in API level 26", "FullName": "public int hashCode ()"}}, "Inheritance": [], "ClassName": "java.nio.file.attribute.AclEntry", "ClassDesc": "An entry in an access control list (ACL). The ACL entry represented by this class is based on the ACL model specified in ACL entries are created using an associated @B_java#nio#file#attribute#AclEntry#Builder_E@ object by invoking its @B_java#nio#file#attribute#AclEntry#Builder#build_E@ method. ACL entries are immutable and are safe for use by multiple concurrent threads."}