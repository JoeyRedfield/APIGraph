{"Functions": {"claimBleDevice(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.fitness.data.BleDevice)": {"Returns": [["", "a pending result containing if the claim was made successfully"]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "an existing GoogleApiClient. Must be connected at the time of this call."], ["@B_com#google#android#gms#fitness#data#BleDevice_E@", "the device to claim"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Associates a BLE device with the current user. When a device is claimed by a user, the device will be available through Google Fit. Prior to calling this method, you should stop any active Bluetooth scans you have started. In order to prevent Bluetooth issues, the application should avoid connecting directly to the device, but instead using Google Fit to do so.", "history": "", "FullName": "public abstract PendingResult<Status> claimBleDevice (GoogleApiClient client, BleDevice bleDevice)"}, "unclaimBleDevice(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.fitness.data.BleDevice)": {"Returns": [["", "a pending result containing if the unclaim was made successfully"]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "an existing GoogleApiClient. Must be connected at the time of this call."], ["@B_com#google#android#gms#fitness#data#BleDevice_E@", "the device to unclaim"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Disassociates a BLE device with the current user. The device's associated @B_com#google#android#gms#fitness#data#DataSource_E@ will no longer be available in Google Fit, and all of the registrations for this device will be removed. .", "history": "", "FullName": "public abstract PendingResult<Status> unclaimBleDevice (GoogleApiClient client, BleDevice bleDevice)"}, "unclaimBleDevice(com.google.android.gms.common.api.GoogleApiClient, java.lang.String)": {"Returns": [["", "a pending result containing if the unclaim was made successfully"]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "an existing GoogleApiClient. Must be connected at the time of this call."], ["String", "the hardware address of the device"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Disassociates a BLE device with the current user, using the device's address. The device's associated @B_com#google#android#gms#fitness#data#DataSource_E@ will no longer be available in Google Fit, and all of the registrations for this device will be removed. .", "history": "", "FullName": "public abstract PendingResult<Status> unclaimBleDevice (GoogleApiClient client, String deviceAddress)"}, "listClaimedBleDevices(com.google.android.gms.common.api.GoogleApiClient)": {"Returns": [["", "a pending result containing found claimed BLE devices."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "an existing GoogleApiClient. It does not need to be connected at the time of this call, but the find operation will be delayed until the connection is complete."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Lists all BLE devices that are associated with the current user.", "history": "", "FullName": "public abstract PendingResult<BleDevicesResult> listClaimedBleDevices (GoogleApiClient client)"}, "claimBleDevice(com.google.android.gms.common.api.GoogleApiClient, java.lang.String)": {"Returns": [["", "a pending result containing if the claim was made successfully"]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "an existing GoogleApiClient. Must be connected at the time of this call."], ["String", "the hardware address of the device. A scan will be performed to find a matching device."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Associates a BLE device with the current user, using only the device address. When a device is claimed by a user, the device will be available through Google Fit. If a full @B_com#google#android#gms#fitness#data#BleDevice_E@ is available, calling @B_com#google#android#gms#fitness#BleApi#claimBleDevice_E@ is preferred. Prior to calling this method, you should stop any active Bluetooth scans you have started. In order to prevent Bluetooth issues, the application should avoid connecting directly to the device, but instead using Google Fit to do so. Since this method requires Bluetooth, please refer to @B_com#google#android#gms#fitness#BleApi_E@ doc about handling disabled Bluetooth.", "history": "", "FullName": "public abstract PendingResult<Status> claimBleDevice (GoogleApiClient client, String deviceAddress)"}, "stopBleScan(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.fitness.request.BleScanCallback)": {"Returns": [["", "a pending result containing if the scan was stopped successfully"]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "an existing GoogleApiClient. It does not need to be connected at the time of this call, but the stop scan operation will be delayed until the connection is complete."], ["@B_com#google#android#gms#fitness#request#BleScanCallback_E@", "the callback originally used to start the scan"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Stops a BLE devices scan. Should be called immediately after scanning is no longer needed. If the scan is already stopped, or if it was never started, this method will succeed silently. Since this method requires Bluetooth, please refer to @B_com#google#android#gms#fitness#BleApi_E@ doc about handling disabled Bluetooth.", "history": "", "FullName": "public abstract PendingResult<Status> stopBleScan (GoogleApiClient client, BleScanCallback callback)"}, "startBleScan(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.fitness.request.StartBleScanRequest)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Starts a scan for BLE devices compatible with Google Fit. Results are returned asynchronously through the BleScanCallback in the request. The callback's @B_com#google#android#gms#fitness#request#BleScanCallback#onDeviceFound_E@ method may be called multiple times, for each device that is found. This method will normally be used to present a list of devices to the user, and to allow the user to pick a device to claim. Once the user selects a device or dismisses the picker activity, the scan can be stopped using @B_com#google#android#gms#fitness#BleApi#stopBleScan_E@, and @B_com#google#android#gms#fitness#BleApi#claimBleDevice_E@ can be used to associate the selected device with the user. This scanning is battery-intensive, so try to minimize the amount of time scanning. Since this method requires Bluetooth, please refer to @B_com#google#android#gms#fitness#BleApi_E@ doc about handling disabled Bluetooth.", "history": "", "FullName": "public abstract PendingResult<Status> startBleScan (GoogleApiClient client, StartBleScanRequest request)"}}, "Inheritance": [], "ClassName": "com.google.android.gms.fitness.BleApi", "ClassDesc": "API for scanning, claiming, and using Bluetooth Low Energy devices in Google Fit. Most BLE devices will accept connections from any other device, without the need for pairing. To prevent Google Fit from using data from a device the user does not own, we require a device to be claimed before it can be used in the platform. The API supports scanning and claiming devices. Once a device is claimed, its data sources are exposed via the @B_com#google#android#gms#fitness#SensorsApi_E@ and @B_com#google#android#gms#fitness#RecordingApi_E@ APIs, similar to local sensors. The BLE API should be accessed from the @B_com#google#android#gms#fitness#Fitness_E@ entry point. Example: @B_com#google#android#gms#fitness#FitnessStatusCodes#DISABLED_BLUETOOTH_E@. In this case, the app should use @B_com#google#android#gms#common#api#Status#startResolutionForResult_E@ to show the dialog allowing the user to enable Bluetooth. Example:"}