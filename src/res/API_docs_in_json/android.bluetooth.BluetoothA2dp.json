{"Functions": {"getConnectedDevices()": {"Returns": [["@B_java#util#List_E@", "List of devices. The list will be empty on error."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Get connected devices for this specific profile. Return the set of devices which are in state @B_android#bluetooth#BluetoothProfile#STATE_CONNECTED_E@ Requires @B_android#Manifest#permission#BLUETOOTH_E@", "history": "Added in API level 11", "FullName": "public List<BluetoothDevice> getConnectedDevices ()"}, "finalize()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called by the garbage collector on an object when garbage collection determines that there are no more references to the object. A subclass overrides the finalize method to dispose of system resources or to perform other cleanup. The general contract of finalize is that it is invoked if and when the Java\u2122 virtual machine has determined that there is no longer any means by which this object can be accessed by any thread that has not yet died, except as a result of an action taken by the finalization of some other object or class which is ready to be finalized. The finalize method may take any action, including making this object available again to other threads; the usual purpose of finalize, however, is to perform cleanup actions before the object is irrevocably discarded. For example, the finalize method for an object that represents an input/output connection might perform explicit I/O transactions to break the connection before the object is permanently discarded. The finalize method of class Object performs no special action; it simply returns normally. Subclasses of Object may override this definition. The Java programming language does not guarantee which thread will invoke the finalize method for any given object. It is guaranteed, however, that the thread that invokes finalize will not be holding any user-visible synchronization locks when finalize is invoked. If an uncaught exception is thrown by the finalize method, the exception is ignored and finalization of that object terminates. After the finalize method has been invoked for an object, no further action is taken until the Java virtual machine has again determined that there is no longer any means by which this object can be accessed by any thread that has not yet died, including possible actions by other objects or classes which are ready to be finalized, at which point the object may be discarded. The finalize method is never invoked more than once by a Java virtual machine for any given object. Any exception thrown by the finalize method causes the finalization of this object to be halted, but is otherwise ignored.", "history": "Added in API level 11", "FullName": "public void finalize ()"}, "getConnectionState(android.bluetooth.BluetoothDevice)": {"Returns": [["int", "Value is @B_android#bluetooth#BluetoothProfile#STATE_DISCONNECTED_E@, @B_android#bluetooth#BluetoothProfile#STATE_CONNECTING_E@, @B_android#bluetooth#BluetoothProfile#STATE_CONNECTED_E@, or @B_android#bluetooth#BluetoothProfile#STATE_DISCONNECTING_E@"]], "Parameters": [["@B_android#bluetooth#BluetoothDevice_E@", "BluetoothDevice: Remote bluetooth device."]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Get the current connection state of the profile Requires @B_android#Manifest#permission#BLUETOOTH_E@", "history": "Added in API level 11", "FullName": "public int getConnectionState (BluetoothDevice device)"}, "getDevicesMatchingConnectionStates(int[])": {"Returns": [["@B_java#util#List_E@", "List of devices. The list will be empty on error."]], "Parameters": [["int[]", "int: Array of states. States can be one of @B_android#bluetooth#BluetoothProfile#STATE_CONNECTED_E@, @B_android#bluetooth#BluetoothProfile#STATE_CONNECTING_E@, @B_android#bluetooth#BluetoothProfile#STATE_DISCONNECTED_E@, @B_android#bluetooth#BluetoothProfile#STATE_DISCONNECTING_E@,"]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Get a list of devices that match any of the given connection states. If none of the devices match any of the given states, an empty list will be returned. Requires @B_android#Manifest#permission#BLUETOOTH_E@", "history": "Added in API level 11", "FullName": "public List<BluetoothDevice> getDevicesMatchingConnectionStates (int[] states)"}, "isA2dpPlaying(android.bluetooth.BluetoothDevice)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#bluetooth#BluetoothDevice_E@", "BluetoothDevice: BluetoothDevice device"]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#BLUETOOTH_E@"], "Description": "Check if A2DP profile is streaming music. Requires @B_android#Manifest#permission#BLUETOOTH_E@ permission.", "history": "Added in API level 11", "FullName": "public boolean isA2dpPlaying (BluetoothDevice device)"}}, "Inheritance": [], "ClassName": "android.bluetooth.BluetoothA2dp", "ClassDesc": "This class provides the public APIs to control the Bluetooth A2DP profile. BluetoothA2dp is a proxy object for controlling the Bluetooth A2DP Service via IPC. Use @B_android#bluetooth#BluetoothAdapter#getProfileProxy_E@ to get the BluetoothA2dp proxy object. Android only supports one connected Bluetooth A2dp device at a time. Each method is protected with its appropriate permission."}