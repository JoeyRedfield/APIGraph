{"Functions": {"propertyChange(java.beans.PropertyChangeEvent)": {"Returns": [], "Parameters": [["@B_java#beans#PropertyChangeEvent_E@", "PropertyChangeEvent: A PropertyChangeEvent object describing the event source and the property that has changed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method gets called when a bound property is changed.", "history": "Added in API level 3", "FullName": "public abstract void propertyChange (PropertyChangeEvent evt)"}}, "Inheritance": [], "ClassName": "java.beans.PropertyChangeListener", "ClassDesc": "A \"PropertyChange\" event gets fired whenever a bean changes a \"bound\" property. You can register a PropertyChangeListener with a source bean so as to be notified of any bound property updates."}