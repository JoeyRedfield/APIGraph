{"Functions": {"showDialog()": {"Returns": [["boolean", "True if the dialog was actually shown."]], "Parameters": [], "Throws": [["@B_java#lang#IllegalStateException_E@", "if the activity is not a subclass of @B_android#support#v4#app#FragmentActivity_E@."]], "SeeAlso": [], "Permissions": [], "Description": "Show the route chooser or controller dialog. If the default route is selected or if the currently selected route does not match the @B_android#support#v7#app#MediaRouteButton#getRouteSelector_E@, then shows the route chooser dialog. Otherwise, shows the route controller dialog to offer the user a choice to disconnect from the route or perform other control actions such as setting the route's volume. The application can customize the dialogs by calling @B_android#support#v7#app#MediaRouteButton#setDialogFactory_E@ to provide a customized dialog factory.", "history": "added in version 22.0.0", "FullName": "boolean showDialog ()"}, "verifyDrawable(android.graphics.drawable.Drawable)": {"Returns": [["boolean", "boolean If true than the Drawable is being displayed in the view; else false and it is not allowed to animate."]], "Parameters": [["@B_android#graphics#drawable#Drawable_E@", "Drawable: The Drawable to verify. Return true if it is one you are displaying, else return the result of calling through to the super class."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "If your view subclass is displaying its own Drawable objects, it should override this function and return true for any Drawable it is displaying. This allows animations for those drawables to be scheduled. Be sure to call through to the super class when overriding this function.", "history": "", "FullName": "boolean verifyDrawable (Drawable who)"}, "getRouteSelector()": {"Returns": [["@B_android#support#v7#media#MediaRouteSelector_E@", "The selector, never null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the media route selector for filtering the routes that the user can select using the media route chooser dialog.", "history": "added in version 22.0.0", "FullName": "MediaRouteSelector getRouteSelector ()"}, "jumpDrawablesToCurrentState()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Call @B_android#graphics#drawable#Drawable#jumpToCurrentState_E@ on all Drawable objects associated with this view. Also calls @B_android#animation#StateListAnimator#jumpToCurrentState_E@ if there is a StateListAnimator attached to this view.", "history": "", "FullName": "void jumpDrawablesToCurrentState ()"}, "drawableStateChanged()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This function is called whenever the state of the view changes in such a way that it impacts the state of drawables being shown. If the View has a StateListAnimator, it will also be called to run necessary state change animations. Be sure to call through to the superclass when overriding this function.", "history": "", "FullName": "void drawableStateChanged ()"}, "MediaRouteButton(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "MediaRouteButton (Context context)"}, "performLongClick()": {"Returns": [["boolean", "true if one of the above receivers consumed the event, false otherwise"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Calls this view's OnLongClickListener, if it is defined. Invokes the context menu if the OnLongClickListener did not consume the event.", "history": "", "FullName": "boolean performLongClick ()"}, "performClick()": {"Returns": [["boolean", "True there was an assigned OnClickListener that was called, false otherwise is returned."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Call this view's OnClickListener, if it is defined. Performs all normal actions associated with clicking: reporting accessibility event, playing a sound, etc.", "history": "", "FullName": "boolean performClick ()"}, "onAttachedToWindow()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This is called when the view is attached to a window. At this point it has a Surface and will start drawing. Note that this function is guaranteed to be called before @B_android#view#View#onDraw_E@, however it may be called any time before the first onDraw -- including before or after @B_android#view#View#onMeasure_E@.", "history": "added in version 22.0.0", "FullName": "void onAttachedToWindow ()"}, "setVisibility(int)": {"Returns": [], "Parameters": [["int", "int: One of @B_android#view#View#VISIBLE_E@, @B_android#view#View#INVISIBLE_E@, or @B_android#view#View#GONE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the visibility state of this view.", "history": "", "FullName": "void setVisibility (int visibility)"}, "onMeasure(int, int)": {"Returns": [], "Parameters": [["int", "int: horizontal space requirements as imposed by the parent. The requirements are encoded with @B_android#view#View#MeasureSpec_E@."], ["int", "int: vertical space requirements as imposed by the parent. The requirements are encoded with @B_android#view#View#MeasureSpec_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Measure the view and its content to determine the measured width and the measured height. This method is invoked by @B_android#view#View#measure_E@ and should be overridden by subclasses to provide accurate and efficient measurement of their contents. must call @B_android#view#View#setMeasuredDimension_E@ to store the measured width and height of this view. Failure to do so will trigger an IllegalStateException, thrown by @B_android#view#View#measure_E@. Calling the superclass' @B_android#view#View#onMeasure_E@ is a valid use. The base class implementation of measure defaults to the background size, unless a larger size is allowed by the MeasureSpec. Subclasses should override @B_android#view#View#onMeasure_E@ to provide better measurements of their content. If this method is overridden, it is the subclass's responsibility to make sure the measured height and width are at least the view's minimum height and width (@B_android#view#View#getSuggestedMinimumHeight_E@ and @B_android#view#View#getSuggestedMinimumWidth_E@).", "history": "", "FullName": "void onMeasure (int widthMeasureSpec, int heightMeasureSpec)"}, "onCreateDrawableState(int)": {"Returns": [["int[]", "Returns an array holding the current @B_android#graphics#drawable#Drawable_E@ state of the view."]], "Parameters": [["int", "int: if non-zero, this is the number of extra entries you would like in the returned array in which you can place your own states."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Generate the new @B_android#graphics#drawable#Drawable_E@ state for this view. This is called by the view system when the cached Drawable state is determined to be invalid. To retrieve the current state, you should use @B_android#view#View#getDrawableState_E@.", "history": "", "FullName": "int[] onCreateDrawableState (int extraSpace)"}, "onDetachedFromWindow()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This is called when the view is detached from a window. At this point it no longer has a surface for drawing.", "history": "added in version 22.0.0", "FullName": "void onDetachedFromWindow ()"}, "onDraw(android.graphics.Canvas)": {"Returns": [], "Parameters": [["@B_android#graphics#Canvas_E@", "Canvas: the canvas on which the background will be drawn"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Implement this to do your drawing.", "history": "", "FullName": "void onDraw (Canvas canvas)"}, "getDialogFactory()": {"Returns": [["@B_android#support#v7#app#MediaRouteDialogFactory_E@", "The dialog factory, never null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the media route dialog factory to use when showing the route chooser or controller dialog.", "history": "added in version 22.0.0", "FullName": "MediaRouteDialogFactory getDialogFactory ()"}}, "Inheritance": ["java.lang.Object", "https:##developer#android#com@B_android#view#View_E@"], "ClassName": "android.support.v7.app.MediaRouteButton", "ClassDesc": "The media route button allows the user to select routes and to control the currently selected route. The application must specify the kinds of routes that the user should be allowed to select by specifying a @B_android#support#v7#media#MediaRouteSelector_E@ with the @B_android#support#v7#app#MediaRouteButton#setRouteSelector_E@ method. When the default route is selected or when the currently selected route does not match the @B_android#support#v7#app#MediaRouteButton#getRouteSelector_E@, the button will appear in an inactive state indicating that the application is not connected to a route of the kind that it wants to use. Clicking on the button opens a @B_android#support#v7#app#MediaRouteChooserDialog_E@ to allow the user to select a route. If no non-default routes match the selector and it is not possible for an active scan to discover any matching routes, then the button is disabled and cannot be clicked. When a non-default route is selected that matches the selector, the button will appear in an active state indicating that the application is connected to a route of the kind that it wants to use. The button may also appear in an intermediary connecting state if the route is in the process of connecting to the destination but has not yet completed doing so. In either case, clicking on the button opens a @B_android#support#v7#app#MediaRouteControllerDialog_E@ to allow the user to control or disconnect from the current route. To use the media route button, the activity must be a subclass of @B_android#support#v4#app#FragmentActivity_E@ from the android.support.v4 support library. Refer to support library documentation for details."}