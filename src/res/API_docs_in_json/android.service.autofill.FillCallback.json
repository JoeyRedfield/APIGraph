{"Functions": {"onFailure(java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: error message. Note: this message should not contain PII (Personally Identifiable Information, such as username or email address). This value may be null."]], "Throws": [["@B_java#lang#IllegalStateException_E@", "if this method or @B_android#service#autofill#FillCallback#onSuccess_E@ was already called."]], "SeeAlso": [], "Permissions": [], "Description": "Notifies the Android System that a fill request ( @B_android#service#autofill#AutofillService#onFillRequest_E@) could not be fulfilled by the service (for example, because the user data was not available yet), so the request could be retried later. @B_android#service#autofill#FillCallback#onSuccess_E@ instead. @B_android#os#Build#VERSION_CODES#Q_E@, this method was not working as intended and the service should always call @B_android#service#autofill#FillCallback#onSuccess_E@ instead. @B_android#os#Build#VERSION_CODES#Q_E@ or higher, this method just logs the message on logcat; for apps targetting older SDKs, it also displays the message to user using a @B_android#widget#Toast_E@. Generally speaking, you should not display an error to the user if the request failed, unless the request had the @B_android#service#autofill#FillRequest#FLAG_MANUAL_REQUEST_E@ flag.", "history": "Added in API level 26", "FullName": "public void onFailure (CharSequence message)"}, "onSuccess(android.service.autofill.FillResponse)": {"Returns": [], "Parameters": [["@B_android#service#autofill#FillResponse_E@", "FillResponse: autofill information for that activity, or null when the service cannot autofill the activity. This value may be null."]], "Throws": [["@B_java#lang#IllegalStateException_E@", "if this method or @B_android#service#autofill#FillCallback#onFailure_E@ was already called."]], "SeeAlso": [], "Permissions": [], "Description": "Notifies the Android System that a fill request (@B_android#service#autofill#AutofillService#onFillRequest_E@) was successfully fulfilled by the service. This method should always be called, even if the service doesn't have the heuristics to fulfill the request (in which case it should be called with null). See the main @B_android#service#autofill#AutofillService_E@ documentation for more details and examples.", "history": "Added in API level 26", "FullName": "public void onSuccess (FillResponse response)"}}, "Inheritance": [], "ClassName": "android.service.autofill.FillCallback", "ClassDesc": "FillCallback handles autofill requests from the @B_android#service#autofill#AutofillService_E@ into the @B_android#app#Activity_E@ being autofilled. To learn about using Autofill services in your app, read"}