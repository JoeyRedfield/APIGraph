{"Functions": {"setTitle(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "The title of the browse fragment."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets a title for the browse fragment.", "history": "", "FullName": "public void setTitle (String title)"}, "setSelectedPosition(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the selected item position.", "history": "added in version 22.0.0", "FullName": "void setSelectedPosition (int position)"}, "getBadgeDrawable()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the badge drawable used in the fragment title.", "history": "", "FullName": "public Drawable getBadgeDrawable ()"}, "onPause()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the Fragment is no longer resumed. This is generally tied to @B_android#app#Activity#onPause_E@ of the containing Activity's lifecycle.", "history": "", "FullName": "public void onPause ()"}, "VerticalGridSupportFragment()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "VerticalGridSupportFragment ()"}, "onDestroyView()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the view previously created by @B_android#support#v4#app#Fragment#onCreateView_E@ has been detached from the fragment. The next time the fragment needs to be displayed, a new view will be created. This is called after @B_android#support#v4#app#Fragment#onStop_E@ and before @B_android#support#v4#app#Fragment#onDestroy_E@. It is called regardless of whether @B_android#support#v4#app#Fragment#onCreateView_E@ returned a non-null view. Internally it is called after the view's state has been saved but before it has been removed from its parent.", "history": "added in version 22.0.0", "FullName": "void onDestroyView ()"}, "prepareEntranceTransition()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enables entrance transition. Entrance transition is the standard slide-in transition that shows rows of data in browse screen and details screen. The method is ignored before LOLLIPOP (API21). This method must be called in or before onCreate(). Typically entrance transition should be enabled when savedInstance is null so that fragment restored from instanceState does not run an extra entrance transition. When the entrance transition is enabled, the fragment will make headers and content hidden initially. When data of rows are ready, app must call @B_android#support#v17#leanback#app#VerticalGridSupportFragment#startEntranceTransition_E@ to kick off the transition, otherwise the rows will be invisible forever. It is similar to android:windowsEnterTransition and can be considered a late-executed android:windowsEnterTransition controlled by app. There are two reasons that app needs it: Workaround the problem that activity transition is not available between launcher and app. Browse activity must programmatically start the slide-in transition. Separates DetailsOverviewRow transition from other rows transition. So that the DetailsOverviewRow transition can be executed earlier without waiting for all rows to be loaded. Transition object is returned by createEntranceTransition(). Typically the app does not need override the default transition that browse and details provides.", "history": "", "FullName": "void prepareEntranceTransition ()"}, "runEntranceTransition(java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Run entrance transition. Subclass may use TransitionManager to perform go(Scene) or beginDelayedTransition(). App should not override the default implementation of browse and details fragment.", "history": "added in version 23.1.0", "FullName": "void runEntranceTransition (Object entranceTransition)"}, "onStart()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the Fragment is visible to the user. This is generally tied to @B_android#app#Activity#onStart_E@ of the containing Activity's lifecycle.", "history": "added in version 22.0.0", "FullName": "void onStart ()"}, "getOnItemClickedListener()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the item clicked listener.", "history": "", "FullName": "public OnItemClickedListener getOnItemClickedListener ()"}, "setSearchAffordanceColor(int)": {"Returns": [], "Parameters": [["int", "The color to use for the search affordance."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the color used to draw the search affordance. A default brighter color will be set by the framework.", "history": "", "FullName": "public void setSearchAffordanceColor (int color)"}, "getAdapter()": {"Returns": [["@B_android#support#v17#leanback#widget#ObjectAdapter_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the object adapter.", "history": "added in version 22.0.0", "FullName": "ObjectAdapter getAdapter ()"}, "onEntranceTransitionEnd()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Callback when entrance transition is ended.", "history": "", "FullName": "void onEntranceTransitionEnd ()"}, "onResume()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the fragment is visible to the user and actively running. This is generally tied to @B_android#app#Activity#onResume_E@ of the containing Activity's lifecycle.", "history": "", "FullName": "public void onResume ()"}, "getProgressBarManager()": {"Returns": [["@B_android#support#v17#leanback#app#ProgressBarManager_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#support#v17#leanback#app#ProgressBarManager_E@.", "history": "", "FullName": "ProgressBarManager getProgressBarManager ()"}, "startEntranceTransition()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "When fragment finishes loading data, it should call startEntranceTransition() to execute the entrance transition. startEntranceTransition() will start transition only if both two conditions are satisfied: prepareEntranceTransition() was called. has not executed entrance transition yet. If startEntranceTransition() is called before onViewCreated(), it will be pending and executed when view is created.", "history": "", "FullName": "void startEntranceTransition ()"}, "onEntranceTransitionStart()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Callback when entrance transition is started. This is when fragment should stop processing layout.", "history": "", "FullName": "void onEntranceTransitionStart ()"}, "getOnItemViewClickedListener()": {"Returns": [["@B_android#support#v17#leanback#widget#OnItemViewClickedListener_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the item clicked listener.", "history": "added in version 22.0.0", "FullName": "OnItemViewClickedListener getOnItemViewClickedListener ()"}, "onEntranceTransitionPrepare()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Callback when entrance transition is prepared. This is when fragment should stop user input and animations.", "history": "", "FullName": "void onEntranceTransitionPrepare ()"}, "getTitle()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the title for the browse fragment.", "history": "", "FullName": "public String getTitle ()"}, "createEntranceTransition()": {"Returns": [["@B_java#lang#Object_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create entrance transition. Subclass can override to load transition from resource or construct manually. Typically app does not need to override the default transition that browse and details provides.", "history": "added in version 23.1.0", "FullName": "Object createEntranceTransition ()"}, "getGridPresenter()": {"Returns": [["@B_android#support#v17#leanback#widget#VerticalGridPresenter_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the grid presenter.", "history": "added in version 22.0.0", "FullName": "VerticalGridPresenter getGridPresenter ()"}, "onSaveInstanceState(android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#os#Bundle_E@", "Bundle in which to place your saved state."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called to ask the fragment to save its current dynamic state, so it can later be reconstructed in a new instance of its process is restarted. If a new instance of the fragment later needs to be created, the data you place in the Bundle here will be available in the Bundle given to @B_android#support#v4#app#Fragment#onCreate_E@, @B_android#support#v4#app#Fragment#onCreateView_E@, and @B_android#support#v4#app#Fragment#onActivityCreated_E@. This corresponds to @B_android#app#Activity#onSaveInstanceState_E@ and most of the discussion there applies here as well. Note however: this method may be called at any time before @B_android#support#v4#app#Fragment#onDestroy_E@. There are many situations where a fragment may be mostly torn down (such as when placed on the back stack with no UI showing), but its state will not be saved until its owning activity actually needs to save its state.", "history": "", "FullName": "public void onSaveInstanceState (Bundle outState)"}, "getSearchAffordanceColors()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#support#v17#leanback#widget#SearchOrbView#Colors_E@ used to draw the search affordance.", "history": "", "FullName": "public SearchOrbView.Colors getSearchAffordanceColors ()"}, "getSearchAffordanceColor()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the color used to draw the search affordance.", "history": "", "FullName": "public int getSearchAffordanceColor ()"}}, "Inheritance": ["java.lang.Object", "@B_android#support#v4#app#Fragment_E@", "@B_android#support#v17#leanback#app#BrandedSupportFragment_E@", "@B_android#support#v17#leanback#app#BaseSupportFragment_E@"], "ClassName": "android.support.v17.leanback.app.VerticalGridSupportFragment", "ClassDesc": "A fragment for creating leanback vertical grids. Renders a vertical grid of objects given a @B_android#support#v17#leanback#widget#VerticalGridPresenter_E@ and an @B_android#support#v17#leanback#widget#ObjectAdapter_E@."}