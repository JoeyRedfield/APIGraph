{"Functions": {"canCurrentUserBlockNumbers(android.content.Context)": {"Returns": [["boolean", "true if the current user can block numbers."]], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks if blocking numbers is supported for the current user. Typically, blocking numbers is only supported for one user at a time.", "history": "Added in API level 24", "FullName": "public static boolean canCurrentUserBlockNumbers (Context context)"}, "unblock(android.content.Context, java.lang.String)": {"Returns": [["int", "the number of rows deleted in the blocked number provider as a result of unblock."]], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Unblocks the phoneNumber if it is blocked. This deletes all rows where the phoneNumber matches the @B_android#provider#BlockedNumberContract#BlockedNumbers#COLUMN_ORIGINAL_NUMBER_E@ column or the E164 representation of the phoneNumber matches the @B_android#provider#BlockedNumberContract#BlockedNumbers#COLUMN_E164_NUMBER_E@ column. To delete rows based on exact match with specific columns such as @B_android#provider#BlockedNumberContract#BlockedNumbers#COLUMN_ID_E@ use @B_android#content#ContentProvider#delete_E@ with @B_android#provider#BlockedNumberContract#BlockedNumbers#CONTENT_URI_E@ URI. Note that if the @B_android#provider#BlockedNumberContract#canCurrentUserBlockNumbers_E@ is false for the user context context, this method will throw a @B_java#lang#SecurityException_E@.This method may take several seconds to complete, so it should only be called from a worker thread.", "history": "added in API level 24", "FullName": "public static int unblock (Context context, String phoneNumber)"}, "isBlocked(android.content.Context,java.lang.String)": {"Returns": [["boolean", "true if the phoneNumber is blocked."]], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether a given number is in the blocked list. This matches the phoneNumber against the @B_android#provider#BlockedNumberContract#BlockedNumbers#COLUMN_ORIGINAL_NUMBER_E@ column, and the E164 representation of the phoneNumber with the @B_android#provider#BlockedNumberContract#BlockedNumbers#COLUMN_E164_NUMBER_E@ column. Note that if the @B_android#provider#BlockedNumberContract#canCurrentUserBlockNumbers_E@ is false for the user context context, this method will throw a @B_java#lang#SecurityException_E@. This method may take several seconds to complete, so it should only be called from a worker thread.", "history": "Added in API level 24", "FullName": "public static boolean isBlocked (Context context, String phoneNumber)"}, "unblock(android.content.Context,java.lang.String)": {"Returns": [["int", "the number of rows deleted in the blocked number provider as a result of unblock."]], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Unblocks the phoneNumber if it is blocked. This deletes all rows where the phoneNumber matches the @B_android#provider#BlockedNumberContract#BlockedNumbers#COLUMN_ORIGINAL_NUMBER_E@ column or the E164 representation of the phoneNumber matches the @B_android#provider#BlockedNumberContract#BlockedNumbers#COLUMN_E164_NUMBER_E@ column. To delete rows based on exact match with specific columns such as @B_android#provider#BlockedNumberContract#BlockedNumbers#COLUMN_ID_E@ use @B_android#content#ContentProvider#delete_E@ with @B_android#provider#BlockedNumberContract#BlockedNumbers#CONTENT_URI_E@ URI. Note that if the @B_android#provider#BlockedNumberContract#canCurrentUserBlockNumbers_E@ is false for the user context context, this method will throw a @B_java#lang#SecurityException_E@. This method may take several seconds to complete, so it should only be called from a worker thread.", "history": "Added in API level 24", "FullName": "public static int unblock (Context context, String phoneNumber)"}}, "Inheritance": [], "ClassName": "android.provider.BlockedNumberContract", "ClassDesc": "The contract between the blockednumber provider and applications. Contains definitions for the supported URIs and columns. The content provider exposes a table containing blocked numbers. The columns and URIs for accessing this table are defined by the @B_android#provider#BlockedNumberContract#BlockedNumbers_E@ class. Messages, and calls from blocked numbers are discarded by the platform. Notifications upon provider changes can be received using a @B_android#database#ContentObserver_E@. The platform will not block messages, and calls from emergency numbers as defined by @B_android#telephony#PhoneNumberUtils#isEmergencyNumber_E@. If the user contacts emergency services, number blocking is disabled by the platform for a duration defined by @B_android#telephony#CarrierConfigManager#KEY_DURATION_BLOCKING_DISABLED_AFTER_EMERGENCY_INT_E@. Only the system, the default SMS application, and the default phone app (See @B_android#telecom#TelecomManager#getDefaultDialerPackage_E@), and carrier apps (See @B_android#service#carrier#CarrierService_E@) can read, and write to the blockednumber provider. However, @B_android#provider#BlockedNumberContract#canCurrentUserBlockNumbers_E@ can be accessed by any application. Other than regular phone numbers, the blocked number provider can also store addresses (such as email) from which a user can receive messages, and calls. The blocked numbers are stored in the @B_android#provider#BlockedNumberContract#BlockedNumbers#COLUMN_ORIGINAL_NUMBER_E@ column. A normalized version of phone numbers (if normalization is possible) is stored in @B_android#provider#BlockedNumberContract#BlockedNumbers#COLUMN_E164_NUMBER_E@ column. The platform blocks calls, and messages from an address if it is present in in the @B_android#provider#BlockedNumberContract#BlockedNumbers#COLUMN_ORIGINAL_NUMBER_E@ column or if the E164 version of the address matches the @B_android#provider#BlockedNumberContract#BlockedNumbers#COLUMN_E164_NUMBER_E@ column."}