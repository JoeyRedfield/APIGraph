{"Functions": {"nameToUnicode(java.lang.CharSequence,java.lang.StringBuilder,android.icu.text.IDNA.Info)": {"Returns": [["@B_java#lang#StringBuilder_E@", "dest"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: Input domain name"], ["@B_java#lang#StringBuilder_E@", "StringBuilder: Destination string object"], ["@B_android#icu#text#IDNA#Info_E@", "IDNA.Info: Output container of IDNA processing details."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Converts a whole domain name into its Unicode form for human-readable display. If any processing step fails, then info.hasErrors() will be true. The domain name might be modified according to the types of errors.", "history": "Added in API level 24", "FullName": "public abstract StringBuilder nameToUnicode (CharSequence name, StringBuilder dest, IDNA.Info info)"}, "labelToASCII(java.lang.CharSequence,java.lang.StringBuilder,android.icu.text.IDNA.Info)": {"Returns": [["@B_java#lang#StringBuilder_E@", "dest"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: Input domain name label"], ["@B_java#lang#StringBuilder_E@", "StringBuilder: Destination string object"], ["@B_android#icu#text#IDNA#Info_E@", "IDNA.Info: Output container of IDNA processing details."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Converts a single domain name label into its ASCII form for DNS lookup. If any processing step fails, then info.hasErrors() will be true and the result might not be an ASCII string. The label might be modified according to the types of errors. Labels with severe errors will be left in (or turned into) their Unicode form.", "history": "Added in API level 24", "FullName": "public abstract StringBuilder labelToASCII (CharSequence label, StringBuilder dest, IDNA.Info info)"}, "labelToUnicode(java.lang.CharSequence,java.lang.StringBuilder,android.icu.text.IDNA.Info)": {"Returns": [["@B_java#lang#StringBuilder_E@", "dest"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: Input domain name label"], ["@B_java#lang#StringBuilder_E@", "StringBuilder: Destination string object"], ["@B_android#icu#text#IDNA#Info_E@", "IDNA.Info: Output container of IDNA processing details."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Converts a single domain name label into its Unicode form for human-readable display. If any processing step fails, then info.hasErrors() will be true. The label might be modified according to the types of errors.", "history": "Added in API level 24", "FullName": "public abstract StringBuilder labelToUnicode (CharSequence label, StringBuilder dest, IDNA.Info info)"}, "nameToASCII(java.lang.CharSequence,java.lang.StringBuilder,android.icu.text.IDNA.Info)": {"Returns": [["@B_java#lang#StringBuilder_E@", "dest"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: Input domain name"], ["@B_java#lang#StringBuilder_E@", "StringBuilder: Destination string object"], ["@B_android#icu#text#IDNA#Info_E@", "IDNA.Info: Output container of IDNA processing details."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Converts a whole domain name into its ASCII form for DNS lookup. If any processing step fails, then info.hasErrors() will be true and the result might not be an ASCII string. The domain name might be modified according to the types of errors. Labels with severe errors will be left in (or turned into) their Unicode form.", "history": "Added in API level 24", "FullName": "public abstract StringBuilder nameToASCII (CharSequence name, StringBuilder dest, IDNA.Info info)"}, "getUTS46Instance(int)": {"Returns": [["@B_android#icu#text#IDNA_E@", "the UTS #46 IDNA instance, if successful"]], "Parameters": [["int", "int: Bit set to modify the processing and error checking."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an IDNA instance which implements UTS #46. Returns an unmodifiable instance, owned by the caller. Cache it for multiple operations, and delete it when done. The instance is thread-safe, that is, it can be used concurrently. UTS #46 defines Unicode IDNA Compatibility Processing, updated to the latest version of Unicode and compatible with both IDNA2003 and IDNA2008. The worker functions use transitional processing, including deviation mappings, unless NONTRANSITIONAL_TO_ASCII or NONTRANSITIONAL_TO_UNICODE is used in which case the deviation characters are passed through without change. Disallowed characters are mapped to U+FFFD. Operations with the UTS #46 instance do not support the ALLOW_UNASSIGNED option. By default, the UTS #46 implementation allows all ASCII characters (as valid or mapped). When the USE_STD3_RULES option is used, ASCII characters other than letters, digits, hyphen (LDH) and dot/full stop are disallowed and mapped to U+FFFD.", "history": "Added in API level 24", "FullName": "public static IDNA getUTS46Instance (int options)"}}, "Inheritance": [], "ClassName": "android.icu.text.IDNA", "ClassDesc": "Abstract base class for IDNA processing. See http://www.unicode.org/reports/tr46/ and http://www.ietf.org/rfc/rfc3490.txt The IDNA class is not intended for public subclassing. The non-static methods implement UTS #46 and IDNA2008. IDNA2008 is implemented according to UTS #46, see getUTS46Instance(). IDNA2003 is obsolete. The static methods implement IDNA2003. They are all deprecated. IDNA2003 API Overview: The static IDNA API methods implement the IDNA protocol as defined in the"}