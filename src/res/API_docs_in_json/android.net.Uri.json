{"Functions": {"writeToParcel(android.os.Parcel, android.net.Uri)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: parcel to write to"], ["@B_android#net#Uri_E@", "Uri: to write, can be null"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Writes a Uri to a Parcel.", "history": "added in API level 1", "FullName": "public static void writeToParcel (Parcel out, Uri uri)"}, "getQueryParameterNames()": {"Returns": [["@B_java#util#Set_E@", "a set of decoded names"]], "Parameters": [], "Throws": [["@B_java#lang#UnsupportedOperationException_E@", "if this isn't a hierarchical URI"]], "SeeAlso": [], "Permissions": [], "Description": "Returns a set of the unique names of all query parameters. Iterating over the set will return the names in order of their first occurrence.", "history": "Added in API level 11", "FullName": "public Set<String> getQueryParameterNames ()"}, "isOpaque()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this URI is opaque like \"mailto:nobody@google.com\". The scheme-specific part of an opaque URI cannot start with a '/'.", "history": "Added in API level 1", "FullName": "public boolean isOpaque ()"}, "writeToParcel(android.os.Parcel,android.net.Uri)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: parcel to write to"], ["@B_android#net#Uri_E@", "Uri: to write, can be null"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Writes a Uri to a Parcel.", "history": "Added in API level 1", "FullName": "public static void writeToParcel (Parcel out, Uri uri)"}, "isHierarchical()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this URI is hierarchical like \"http://google.com\". Absolute URIs are hierarchical if the scheme-specific part starts with a '/'. Relative URIs are always hierarchical.", "history": "Added in API level 1", "FullName": "public abstract boolean isHierarchical ()"}, "normalizeScheme()": {"Returns": [["@B_android#net#Uri_E@", "normalized Uri (never null)"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#content#Intent#setData_E@", "@B_android#content#Intent#setDataAndNormalize_E@"], "Permissions": [], "Description": "Return an equivalent URI with a lowercase scheme component. This aligns the Uri with Android best practices for intent filtering. For example, \"HTTP://www.android.com\" becomes \"http://www.android.com\" All URIs received from outside Android (such as user input, or external sources like Bluetooth, NFC, or the Internet) should be normalized before they are used to create an Intent. This method does not validate bad URI's, or 'fix' poorly formatted URI's - so do not use it for input validation. A Uri will always be returned, even if the Uri is badly formatted to begin with and a scheme component cannot be found.", "history": "Added in API level 16", "FullName": "public Uri normalizeScheme ()"}, "encode(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "an encoded version of s suitable for use as a URI component, or null if s is null"]], "Parameters": [["@B_java#lang#String_E@", "String: string to encode"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Encodes characters in the given string as '%'-escaped octets using the UTF-8 scheme. Leaves letters (\"A-Z\", \"a-z\"), numbers (\"0-9\"), and unreserved characters (\"_-!.~'()*\") intact. Encodes all other characters.", "history": "Added in API level 1", "FullName": "public static String encode (String s)"}, "getEncodedQuery()": {"Returns": [["@B_java#lang#String_E@", "the encoded query or null if there isn't one"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the encoded query component from this URI. The query comes after the query separator ('?') and before the fragment separator ('#'). This method would return \"q=android\" for \"http://www.google.com/search?q=android\".", "history": "Added in API level 1", "FullName": "public abstract String getEncodedQuery ()"}, "getEncodedFragment()": {"Returns": [["@B_java#lang#String_E@", "the encoded fragment or null if there isn't one"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the encoded fragment part of this URI, everything after the '#'.", "history": "Added in API level 1", "FullName": "public abstract String getEncodedFragment ()"}, "getUserInfo()": {"Returns": [["@B_java#lang#String_E@", "the user info for this URI or null if not present"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the decoded user information from the authority. For example, if the authority is \"nobody@google.com\", this method will return \"nobody\".", "history": "Added in API level 1", "FullName": "public abstract String getUserInfo ()"}, "getEncodedAuthority()": {"Returns": [["@B_java#lang#String_E@", "the authority for this URI or null if not present"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the encoded authority part of this URI. For server addresses, the authority is structured as follows: [ userinfo '@' ] host [ ':' port ] Examples: \"google.com\", \"bob@google.com:80\"", "history": "Added in API level 1", "FullName": "public abstract String getEncodedAuthority ()"}, "getEncodedUserInfo()": {"Returns": [["@B_java#lang#String_E@", "the user info for this URI or null if not present"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the encoded user information from the authority. For example, if the authority is \"nobody@google.com\", this method will return \"nobody\".", "history": "Added in API level 1", "FullName": "public abstract String getEncodedUserInfo ()"}, "compareTo(android.net.Uri)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_android#net#Uri_E@", "Uri no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Compares the string representation of this Uri with that of another.", "history": "Added in API level 1", "FullName": "public int compareTo (Uri other)"}, "parse(java.lang.String)": {"Returns": [["@B_android#net#Uri_E@", "Uri for this given uri string"]], "Parameters": [["@B_java#lang#String_E@", "String: an RFC 2396-compliant, encoded URI"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if uriString is null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a Uri which parses the given encoded URI string.", "history": "Added in API level 1", "FullName": "public static Uri parse (String uriString)"}, "getAuthority()": {"Returns": [["@B_java#lang#String_E@", "the authority for this URI or null if not present"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the decoded authority part of this URI. For server addresses, the authority is structured as follows: [ userinfo '@' ] host [ ':' port ] Examples: \"google.com\", \"bob@google.com:80\"", "history": "Added in API level 1", "FullName": "public abstract String getAuthority ()"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if this object is the same as the obj argument; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the reference object with which to compare."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Compares this Uri to another object for equality. Returns true if the encoded string representations of this Uri and the given Uri are equal. Case counts. Paths are not normalized. If one Uri specifies a default port explicitly and the other leaves it implicit, they will not be considered equal.", "history": "Added in API level 1", "FullName": "public boolean equals (Object o)"}, "fromFile(java.io.File)": {"Returns": [["@B_android#net#Uri_E@", "a Uri for the given file"]], "Parameters": [["@B_java#io#File_E@", "File no parameter comment"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if file is null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a Uri from a file. The URI has the form \"file://", "history": "Added in API level 1", "FullName": "public static Uri fromFile (File file)"}, "isRelative()": {"Returns": [["boolean", "true if this URI is relative, false if it's absolute"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this URI is relative, i.e. if it doesn't contain an explicit scheme.", "history": "Added in API level 1", "FullName": "public abstract boolean isRelative ()"}, "hashCode()": {"Returns": [["int", "a hash code value for this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Hashes the encoded string represention of this Uri consistently with @B_android#net#Uri#equals_E@.", "history": "Added in API level 1", "FullName": "public int hashCode ()"}, "getPort()": {"Returns": [["int", "the port for this URI or -1 if invalid or not present"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the port from the authority for this URI. For example, if the authority is \"google.com:80\", this method will return 80.", "history": "Added in API level 1", "FullName": "public abstract int getPort ()"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the encoded string representation of this URI. Example: \"http://google.com/\"", "history": "Added in API level 1", "FullName": "public abstract String toString ()"}, "getFragment()": {"Returns": [["@B_java#lang#String_E@", "the decoded fragment or null if there isn't one"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the decoded fragment part of this URI, everything after the '#'.", "history": "Added in API level 1", "FullName": "public abstract String getFragment ()"}, "getScheme()": {"Returns": [["@B_java#lang#String_E@", "the scheme or null if this is a relative URI"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the scheme of this URI. Example: \"http\"", "history": "Added in API level 1", "FullName": "public abstract String getScheme ()"}, "decode(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "the given string with escaped octets decoded, or null if s is null"]], "Parameters": [["@B_java#lang#String_E@", "String: encoded string to decode"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Decodes '%'-escaped octets in the given string using the UTF-8 scheme. Replaces invalid octets with the unicode replacement character (\"\\\\uFFFD\").", "history": "Added in API level 1", "FullName": "public static String decode (String s)"}, "getQuery()": {"Returns": [["@B_java#lang#String_E@", "the decoded query or null if there isn't one"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the decoded query component from this URI. The query comes after the query separator ('?') and before the fragment separator ('#'). This method would return \"q=android\" for \"http://www.google.com/search?q=android\".", "history": "Added in API level 1", "FullName": "public abstract String getQuery ()"}, "withAppendedPath(android.net.Uri,java.lang.String)": {"Returns": [["@B_android#net#Uri_E@", "a new Uri based on baseUri with the given segment appended to the path"]], "Parameters": [["@B_android#net#Uri_E@", "Uri: Uri to append path segment to"], ["@B_java#lang#String_E@", "String: encoded path segment to append"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if baseUri is null"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new Uri by appending an already-encoded path segment to a base Uri.", "history": "Added in API level 1", "FullName": "public static Uri withAppendedPath (Uri baseUri, String pathSegment)"}, "buildUpon()": {"Returns": [["@B_android#net#Uri#Builder_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new builder, copying the attributes from this Uri.", "history": "Added in API level 1", "FullName": "public abstract Uri.Builder buildUpon ()"}, "getPathSegments()": {"Returns": [["@B_java#util#List_E@", "decoded path segments, each without a leading or trailing '/'"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the decoded path segments.", "history": "Added in API level 1", "FullName": "public abstract List<String> getPathSegments ()"}, "encode(java.lang.String, java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "an encoded version of s suitable for use as a URI component, or null if s is null"]], "Parameters": [["@B_java#lang#String_E@", "String: string to encode"], ["@B_java#lang#String_E@", "String: set of additional characters to allow in the encoded form, null if no characters should be skipped"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Encodes characters in the given string as '%'-escaped octets using the UTF-8 scheme. Leaves letters (\"A-Z\", \"a-z\"), numbers (\"0-9\"), and unreserved characters (\"_-!.~'()*\") intact. Encodes all other characters with the exception of those specified in the allow argument.", "history": "added in API level 1", "FullName": "public static String encode (String s, String allow)"}, "getQueryParameter(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "the decoded value or null if no parameter is found"]], "Parameters": [["@B_java#lang#String_E@", "String: which will be encoded"]], "Throws": [["@B_java#lang#UnsupportedOperationException_E@", "if this isn't a hierarchical URI"], ["@B_java#lang#NullPointerException_E@", "if key is null"]], "SeeAlso": [], "Permissions": [], "Description": "Searches the query string for the first value with the given key.", "history": "Added in API level 1", "FullName": "public String getQueryParameter (String key)"}, "getLastPathSegment()": {"Returns": [["@B_java#lang#String_E@", "the decoded last segment or null if the path is empty"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the decoded last segment in the path.", "history": "Added in API level 1", "FullName": "public abstract String getLastPathSegment ()"}, "encode(java.lang.String,java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "an encoded version of s suitable for use as a URI component, or null if s is null"]], "Parameters": [["@B_java#lang#String_E@", "String: string to encode"], ["@B_java#lang#String_E@", "String: set of additional characters to allow in the encoded form, null if no characters should be skipped"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Encodes characters in the given string as '%'-escaped octets using the UTF-8 scheme. Leaves letters (\"A-Z\", \"a-z\"), numbers (\"0-9\"), and unreserved characters (\"_-!.~'()*\") intact. Encodes all other characters with the exception of those specified in the allow argument.", "history": "Added in API level 1", "FullName": "public static String encode (String s, String allow)"}, "fromParts(java.lang.String,java.lang.String,java.lang.String)": {"Returns": [["@B_android#net#Uri_E@", "Uri composed of the given scheme, ssp, and fragment"]], "Parameters": [["@B_java#lang#String_E@", "String: of the URI"], ["@B_java#lang#String_E@", "String: scheme-specific-part, everything between the scheme separator (':') and the fragment separator ('#'), which will get encoded"], ["@B_java#lang#String_E@", "String: fragment, everything after the '#', null if undefined, will get encoded"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if scheme or ssp is null"]], "SeeAlso": ["@B_android#net#Uri#Builder_E@"], "Permissions": [], "Description": "Creates an opaque Uri from the given components. Encodes the ssp which means this method cannot be used to create hierarchical URIs.", "history": "Added in API level 1", "FullName": "public static Uri fromParts (String scheme, String ssp, String fragment)"}, "getEncodedPath()": {"Returns": [["@B_java#lang#String_E@", "the encoded path, or null if this is not a hierarchical URI (like \"mailto:nobody@google.com\") or the URI is invalid"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the encoded path.", "history": "Added in API level 1", "FullName": "public abstract String getEncodedPath ()"}, "getEncodedSchemeSpecificPart()": {"Returns": [["@B_java#lang#String_E@", "the encoded scheme-specific-part"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the scheme-specific part of this URI, i.e. everything between the scheme separator ':' and the fragment separator '#'. If this is a relative URI, this method returns the entire URI. Leaves escaped octets intact. Example: \"//www.google.com/search?q=android\"", "history": "Added in API level 1", "FullName": "public abstract String getEncodedSchemeSpecificPart ()"}, "getSchemeSpecificPart()": {"Returns": [["@B_java#lang#String_E@", "the decoded scheme-specific-part"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the scheme-specific part of this URI, i.e. everything between the scheme separator ':' and the fragment separator '#'. If this is a relative URI, this method returns the entire URI. Decodes escaped octets. Example: \"//www.google.com/search?q=android\"", "history": "Added in API level 1", "FullName": "public abstract String getSchemeSpecificPart ()"}, "getQueryParameters(java.lang.String)": {"Returns": [["@B_java#util#List_E@", "a list of decoded values"]], "Parameters": [["@B_java#lang#String_E@", "String: which will be encoded"]], "Throws": [["@B_java#lang#UnsupportedOperationException_E@", "if this isn't a hierarchical URI"], ["@B_java#lang#NullPointerException_E@", "if key is null"]], "SeeAlso": [], "Permissions": [], "Description": "Searches the query string for parameter values with the given key.", "history": "Added in API level 1", "FullName": "public List<String> getQueryParameters (String key)"}, "getHost()": {"Returns": [["@B_java#lang#String_E@", "the host for this URI or null if not present"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the encoded host from the authority for this URI. For example, if the authority is \"bob@google.com\", this method will return \"google.com\".", "history": "Added in API level 1", "FullName": "public abstract String getHost ()"}, "isAbsolute()": {"Returns": [["boolean", "true if this URI is absolute, false if it's relative"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this URI is absolute, i.e. if it contains an explicit scheme.", "history": "Added in API level 1", "FullName": "public boolean isAbsolute ()"}, "getPath()": {"Returns": [["@B_java#lang#String_E@", "the decoded path, or null if this is not a hierarchical URI (like \"mailto:nobody@google.com\") or the URI is invalid"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the decoded path.", "history": "Added in API level 1", "FullName": "public abstract String getPath ()"}, "getBooleanQueryParameter(java.lang.String,boolean)": {"Returns": [["boolean", "the boolean interpretation of the query parameter key"]], "Parameters": [["@B_java#lang#String_E@", "String: which will be decoded"], ["boolean", "boolean: the default value to return if there is no query parameter for key"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Searches the query string for the first value with the given key and interprets it as a boolean value. \"false\" and \"0\" are interpreted as false, everything else is interpreted as true.", "history": "Added in API level 11", "FullName": "public boolean getBooleanQueryParameter (String key, boolean defaultValue)"}}, "Inheritance": [], "ClassName": "android.net.Uri", "ClassDesc": "Immutable URI reference. A URI reference includes a URI and a fragment, the component of the URI following a '#'. Builds and parses URI references which conform to In the interest of performance, this class performs little to no validation. Behavior is undefined for invalid input. This class is very forgiving--in the face of invalid input, it will return garbage rather than throw an exception unless otherwise specified."}