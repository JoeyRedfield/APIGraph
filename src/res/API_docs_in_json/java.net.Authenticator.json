{"Functions": {"setDefault(java.net.Authenticator)": {"Returns": [], "Parameters": [["@B_java#net#Authenticator_E@", "Authenticator: The authenticator to be set. If a is null then any previously set authenticator is removed."]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its checkPermission method doesn't allow setting the default authenticator."]], "SeeAlso": ["@B_java#lang#SecurityManager#checkPermission_E@", "@B_java#net#NetPermission_E@"], "Permissions": [], "Description": "Sets the authenticator that will be used by the networking code when a proxy or an HTTP server asks for authentication. First, if there is a security manager, its checkPermission method is called with a NetPermission(\"setDefaultAuthenticator\") permission. This may result in a java.lang.SecurityException.", "history": "Added in API level 1", "FullName": "public static void setDefault (Authenticator a)"}, "getRequestorType()": {"Returns": [["@B_java#net#Authenticator#RequestorType_E@", "the authentication type of the requestor"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether the requestor is a Proxy or a Server.", "history": "Added in API level 1", "FullName": "protected Authenticator.RequestorType getRequestorType ()"}, "getRequestingPrompt()": {"Returns": [["@B_java#lang#String_E@", "the prompt string given by the requestor (realm for http requests)"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the prompt string given by the requestor.", "history": "Added in API level 1", "FullName": "protected final String getRequestingPrompt ()"}, "getRequestingHost()": {"Returns": [["@B_java#lang#String_E@", "the hostname of the connection requiring authentication, or null if it's not available."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the hostname of the site or proxy requesting authentication, or null if not available.", "history": "Added in API level 1", "FullName": "protected final String getRequestingHost ()"}, "getRequestingScheme()": {"Returns": [["@B_java#lang#String_E@", "the scheme of the requestor"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the scheme of the requestor (the HTTP scheme for an HTTP firewall, for example).", "history": "Added in API level 1", "FullName": "protected final String getRequestingScheme ()"}, "requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator.RequestorType)": {"Returns": [["@B_java#net#PasswordAuthentication_E@", "The username/password, or null if one can't be gotten."]], "Parameters": [["@B_java#lang#String_E@", "String: The hostname of the site requesting authentication."], ["@B_java#net#InetAddress_E@", "InetAddress: The InetAddress of the site requesting authorization, or null if not known."], ["int", "int: the port for the requested connection"], ["@B_java#lang#String_E@", "String: The protocol that's requesting the connection (@B_java#net#Authenticator#getRequestingProtocol_E@)"], ["@B_java#lang#String_E@", "String: A prompt string for the user"], ["@B_java#lang#String_E@", "String: The authentication scheme"], ["@B_java#net#URL_E@", "URL: The requesting URL that caused the authentication"], ["@B_java#net#Authenticator#RequestorType_E@", "Authenticator.RequestorType: The type (server or proxy) of the entity requesting authentication."]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its checkPermission method doesn't allow the password authentication request."]], "SeeAlso": ["@B_java#lang#SecurityManager#checkPermission_E@", "@B_java#net#NetPermission_E@"], "Permissions": [], "Description": "Ask the authenticator that has been registered with the system for a password. First, if there is a security manager, its checkPermission method is called with a NetPermission(\"requestPasswordAuthentication\") permission. This may result in a java.lang.SecurityException.", "history": "Added in API level 1", "FullName": "public static PasswordAuthentication requestPasswordAuthentication (String host, InetAddress addr, int port, String protocol, String prompt, String scheme, URL url, Authenticator.RequestorType reqType)"}, "getRequestingSite()": {"Returns": [["@B_java#net#InetAddress_E@", "the InetAddress of the site requesting authorization, or null if it's not available."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the InetAddress of the site requesting authorization, or null if not available.", "history": "Added in API level 1", "FullName": "protected final InetAddress getRequestingSite ()"}, "Authenticator()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public Authenticator ()"}, "getRequestingProtocol()": {"Returns": [["@B_java#lang#String_E@", "the protocol, optionally followed by \"/version\", where version is a version number."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#net#URL#getProtocol_E@"], "Permissions": [], "Description": "Give the protocol that's requesting the connection. Often this will be based on a URL, but in a future JDK it could be, for example, \"SOCKS\" for a password-protected SOCKS5 firewall.", "history": "Added in API level 1", "FullName": "protected final String getRequestingProtocol ()"}, "requestPasswordAuthentication(java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)": {"Returns": [["@B_java#net#PasswordAuthentication_E@", "The username/password, or null if one can't be gotten."]], "Parameters": [["@B_java#net#InetAddress_E@", "InetAddress: The InetAddress of the site requesting authorization, or null if not known."], ["int", "int: the port for the requested connection"], ["@B_java#lang#String_E@", "String: The protocol that's requesting the connection (@B_java#net#Authenticator#getRequestingProtocol_E@)"], ["@B_java#lang#String_E@", "String: A prompt string for the user"], ["@B_java#lang#String_E@", "String: The authentication scheme"]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its checkPermission method doesn't allow the password authentication request."]], "SeeAlso": ["@B_java#lang#SecurityManager#checkPermission_E@", "@B_java#net#NetPermission_E@"], "Permissions": [], "Description": "Ask the authenticator that has been registered with the system for a password. First, if there is a security manager, its checkPermission method is called with a NetPermission(\"requestPasswordAuthentication\") permission. This may result in a java.lang.SecurityException.", "history": "Added in API level 1", "FullName": "public static PasswordAuthentication requestPasswordAuthentication (InetAddress addr, int port, String protocol, String prompt, String scheme)"}, "getRequestingURL()": {"Returns": [["@B_java#net#URL_E@", "the requesting URL"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the URL that resulted in this request for authentication.", "history": "Added in API level 1", "FullName": "protected URL getRequestingURL ()"}, "requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)": {"Returns": [["@B_java#net#PasswordAuthentication_E@", "The username/password, or null if one can't be gotten."]], "Parameters": [["@B_java#lang#String_E@", "String: The hostname of the site requesting authentication."], ["@B_java#net#InetAddress_E@", "InetAddress: The InetAddress of the site requesting authentication, or null if not known."], ["int", "int: the port for the requested connection."], ["@B_java#lang#String_E@", "String: The protocol that's requesting the connection (@B_java#net#Authenticator#getRequestingProtocol_E@)"], ["@B_java#lang#String_E@", "String: A prompt string for the user which identifies the authentication realm."], ["@B_java#lang#String_E@", "String: The authentication scheme"]], "Throws": [["@B_java#lang#SecurityException_E@", "if a security manager exists and its checkPermission method doesn't allow the password authentication request."]], "SeeAlso": ["@B_java#lang#SecurityManager#checkPermission_E@", "@B_java#net#NetPermission_E@"], "Permissions": [], "Description": "Ask the authenticator that has been registered with the system for a password. This is the preferred method for requesting a password because the hostname can be provided in cases where the InetAddress is not available. First, if there is a security manager, its checkPermission method is called with a NetPermission(\"requestPasswordAuthentication\") permission. This may result in a java.lang.SecurityException.", "history": "Added in API level 1", "FullName": "public static PasswordAuthentication requestPasswordAuthentication (String host, InetAddress addr, int port, String protocol, String prompt, String scheme)"}, "getPasswordAuthentication()": {"Returns": [["@B_java#net#PasswordAuthentication_E@", "The PasswordAuthentication collected from the user, or null if none is provided."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when password authorization is needed. Subclasses should override the default implementation, which returns null.", "history": "Added in API level 1", "FullName": "protected PasswordAuthentication getPasswordAuthentication ()"}, "getRequestingPort()": {"Returns": [["int", "an int indicating the port for the requested connection."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the port number for the requested connection.", "history": "Added in API level 1", "FullName": "protected final int getRequestingPort ()"}}, "Inheritance": [], "ClassName": "java.net.Authenticator", "ClassDesc": "The class Authenticator represents an object that knows how to obtain authentication for a network connection. Usually, it will do this by prompting the user for information. Applications use this class by overriding @B_java#net#Authenticator#getPasswordAuthentication_E@ in a sub-class. This method will typically use the various getXXX() accessor methods to get information about the entity requesting authentication. It must then acquire a username and password either by interacting with the user or through some other non-interactive means. The credentials are then returned as a @B_java#net#PasswordAuthentication_E@ return value. An instance of this concrete sub-class is then registered with the system by calling @B_java#net#Authenticator#setDefault_E@. When authentication is required, the system will invoke one of the requestPasswordAuthentication() methods which in turn will call the getPasswordAuthentication() method of the registered object. All methods that request authentication have a default implementation that fails."}