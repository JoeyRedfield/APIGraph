{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 12", "FullName": "public String toString ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 12", "FullName": "public void writeToParcel (Parcel parcel, int flags)"}, "getDirection()": {"Returns": [["int", "the endpoint's direction"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#hardware#usb#UsbConstants_E@"], "Permissions": [], "Description": "Returns the endpoint's direction. Returns @B_android#hardware#usb#UsbConstants#USB_DIR_OUT_E@ if the direction is host to device, and @B_android#hardware#usb#UsbConstants#USB_DIR_IN_E@ if the direction is device to host.", "history": "Added in API level 12", "FullName": "public int getDirection ()"}, "getEndpointNumber()": {"Returns": [["int", "the endpoint's endpoint number"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Extracts the endpoint's endpoint number from its address", "history": "Added in API level 12", "FullName": "public int getEndpointNumber ()"}, "getAddress()": {"Returns": [["int", "the endpoint's address"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the endpoint's address field. The address is a bitfield containing both the endpoint number as well as the data direction of the endpoint. the endpoint number and direction can also be accessed via @B_android#hardware#usb#UsbEndpoint#getEndpointNumber_E@ and @B_android#hardware#usb#UsbEndpoint#getDirection_E@.", "history": "Added in API level 12", "FullName": "public int getAddress ()"}, "getType()": {"Returns": [["int", "the endpoint's type"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the endpoint's type. Possible results are: @B_android#hardware#usb#UsbConstants#USB_ENDPOINT_XFER_CONTROL_E@ (endpoint zero) @B_android#hardware#usb#UsbConstants#USB_ENDPOINT_XFER_ISOC_E@ (isochronous endpoint) @B_android#hardware#usb#UsbConstants#USB_ENDPOINT_XFER_BULK_E@ (bulk endpoint) @B_android#hardware#usb#UsbConstants#USB_ENDPOINT_XFER_INT_E@ (interrupt endpoint)", "history": "Added in API level 12", "FullName": "public int getType ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 12", "FullName": "public void writeToParcel (Parcel parcel, int flags)"}, "getAttributes()": {"Returns": [["int", "the endpoint's attributes"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the endpoint's attributes field.", "history": "Added in API level 12", "FullName": "public int getAttributes ()"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 12", "FullName": "public int describeContents ()"}, "getMaxPacketSize()": {"Returns": [["int", "the endpoint's maximum packet size"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the endpoint's maximum packet size.", "history": "Added in API level 12", "FullName": "public int getMaxPacketSize ()"}, "getInterval()": {"Returns": [["int", "the endpoint's interval"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the endpoint's interval field.", "history": "Added in API level 12", "FullName": "public int getInterval ()"}}, "Inheritance": [], "ClassName": "android.hardware.usb.UsbEndpoint", "ClassDesc": "A class representing an endpoint on a @B_android#hardware#usb#UsbInterface_E@. Endpoints are the channels for sending and receiving data over USB. Typically bulk endpoints are used for sending non-trivial amounts of data. Interrupt endpoints are used for sending small amounts of data, typically events, separately from the main data streams. The endpoint zero is a special endpoint for control messages sent from the host to device. Isochronous endpoints are currently unsupported."}