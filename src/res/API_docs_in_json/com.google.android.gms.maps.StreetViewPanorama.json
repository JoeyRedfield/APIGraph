{"Functions": {"isUserNavigationEnabled()": {"Returns": [["", "True if navigation is enabled"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether or not the navigation is enabled for the user. This includes double tapping as well as using the navigation links", "history": "", "FullName": "public boolean isUserNavigationEnabled ()"}, "isStreetNamesEnabled()": {"Returns": [["", "True if street names are shown"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether or not the street names appear on the panorama", "history": "", "FullName": "public boolean isStreetNamesEnabled ()"}, "setZoomGesturesEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "True if users are allowed to use zoom gestures"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether the user is able to use zoom gestures", "history": "", "FullName": "public void setZoomGesturesEnabled (boolean enableZoom)"}, "setPanningGesturesEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "True if users are allowed to use panning gestures"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether the user is able to use panning gestures", "history": "", "FullName": "public void setPanningGesturesEnabled (boolean enablePanning)"}, "setPosition(com.google.android.gms.maps.model.LatLng, int)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#maps#model#LatLng_E@", "Latitude and longitude of the desired location"], ["int", "Radius, specified in meters, that defines the area in which to search for a panorama, centered on the given latitude and longitude"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the StreetViewPanorama to a given location", "history": "", "FullName": "public void setPosition (LatLng position, int radius)"}, "setUserNavigationEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "True if users are allowed to move to another panorama"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether the user is able to move to another panorama", "history": "", "FullName": "public void setUserNavigationEnabled (boolean enableUserNavigation)"}, "setOnStreetViewPanoramaChangeListener(com.google.android.gms.maps.StreetViewPanorama.OnStreetViewPanoramaChangeListener)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#maps#StreetViewPanorama#OnStreetViewPanoramaChangeListener_E@", "The callback that's invoked when the panorama changes. To unset the callback, use null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets a callback that's invoked when the panorama changes", "history": "", "FullName": "public final void setOnStreetViewPanoramaChangeListener (StreetViewPanorama.OnStreetViewPanoramaChangeListener listener)"}, "isZoomGesturesEnabled()": {"Returns": [["", "True if zoom gestures are enabled"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether or not the zoom gestures are enabled for the user", "history": "", "FullName": "public boolean isZoomGesturesEnabled ()"}, "orientationToPoint(com.google.android.gms.maps.model.StreetViewPanoramaOrientation)": {"Returns": [["", "A @B_android#graphics#Point_E@ representing the screen location in screen pixels. Returns null if the orientation is unable to be projected on the screen (e.g. behind the user's field of view)"]], "Parameters": [["@B_com#google#android#gms#maps#model#StreetViewPanoramaOrientation_E@", "A @B_com#google#android#gms#maps#model#StreetViewPanoramaOrientation_E@ on the Street View panorama to convert to a screen location."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a screen location that corresponds to an orientation (@B_com#google#android#gms#maps#model#StreetViewPanoramaOrientation_E@). The screen location is in screen pixels (not display pixels) relative to the top left of the Street View panorama (not of the whole screen).", "history": "", "FullName": "public Point orientationToPoint (StreetViewPanoramaOrientation orientation)"}, "pointToOrientation(android.graphics.Point)": {"Returns": [["", "The @B_com#google#android#gms#maps#model#StreetViewPanoramaOrientation_E@ corresponding to the point on the screen, or null if the Street View panorama has not been initialized or if the given point is not a valid point on the screen"]], "Parameters": [["Point", "A @B_android#graphics#Point_E@ on the screen in screen pixels."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the orientation that corresponds to a screen location. The screen location is specified in screen pixels (not display pixels) relative to the top left of the Street View panorama (not the top left of the whole screen).", "history": "", "FullName": "public StreetViewPanoramaOrientation pointToOrientation (Point point)"}, "getPanoramaCamera()": {"Returns": [["", "The current camera"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current orientation and zoom", "history": "", "FullName": "public StreetViewPanoramaCamera getPanoramaCamera ()"}, "getLocation()": {"Returns": [["", "The current location of the user"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current location of the user and information regarding the current panorama's adjacent panoramas", "history": "", "FullName": "public StreetViewPanoramaLocation getLocation ()"}, "setStreetNamesEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "True if users are able to see street names on panoramas"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether the user is able to see street names on panoramas", "history": "", "FullName": "public void setStreetNamesEnabled (boolean enableStreetNames)"}, "animateTo(com.google.android.gms.maps.model.StreetViewPanoramaCamera, long)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#maps#model#StreetViewPanoramaCamera_E@", "The camera position to animate to"], ["long", "The length of time, in milliseconds, it takes to transition from the current camera position to the given one"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Changes the current camera position, orientation and zoom, to a given position over a specified duration", "history": "", "FullName": "public void animateTo (StreetViewPanoramaCamera camera, long duration)"}, "setOnStreetViewPanoramaLongClickListener(com.google.android.gms.maps.StreetViewPanorama.OnStreetViewPanoramaLongClickListener)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#maps#StreetViewPanorama#OnStreetViewPanoramaLongClickListener_E@", "The callback that's invoked when the panorama is long-pressed. To unset the callback, use null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets a callback that's invoked when the panorama is long-pressed.", "history": "", "FullName": "public final void setOnStreetViewPanoramaLongClickListener (StreetViewPanorama.OnStreetViewPanoramaLongClickListener listener)"}, "setPosition(java.lang.String)": {"Returns": [], "Parameters": [["String", "Panorama ID of the desired location"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the StreetViewPanorama to a given location", "history": "", "FullName": "public void setPosition (String panoId)"}, "setPosition(com.google.android.gms.maps.model.LatLng)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#maps#model#LatLng_E@", "Latitude and longitude of the desired location"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the StreetViewPanorama to a given location", "history": "", "FullName": "public void setPosition (LatLng position)"}, "setOnStreetViewPanoramaCameraChangeListener(com.google.android.gms.maps.StreetViewPanorama.OnStreetViewPanoramaCameraChangeListener)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#maps#StreetViewPanorama#OnStreetViewPanoramaCameraChangeListener_E@", "The callback that's invoked when the camera changes. To unset the callback, use null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets a callback that's invoked when the camera changes", "history": "", "FullName": "public final void setOnStreetViewPanoramaCameraChangeListener (StreetViewPanorama.OnStreetViewPanoramaCameraChangeListener listener)"}, "isPanningGesturesEnabled()": {"Returns": [["", "True if panning gestures are enabled"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether or not the panning gestures are enabled for the user", "history": "", "FullName": "public boolean isPanningGesturesEnabled ()"}, "setOnStreetViewPanoramaClickListener(com.google.android.gms.maps.StreetViewPanorama.OnStreetViewPanoramaClickListener)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#maps#StreetViewPanorama#OnStreetViewPanoramaClickListener_E@", "The callback that's invoked when the panorama is tapped. To unset the callback, use null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets a callback that's invoked when the panorama is tapped.", "history": "", "FullName": "public final void setOnStreetViewPanoramaClickListener (StreetViewPanorama.OnStreetViewPanoramaClickListener listener)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.maps.StreetViewPanorama", "ClassDesc": "This is the main class of the Street View feature in the Google Maps Android API and is the entry point for all methods related to Street View panoramas. You cannot instantiate a @B_com#google#android#gms#maps#StreetViewPanorama_E@ object directly, rather, you must obtain one from the getStreetViewPanorama() method on a @B_com#google#android#gms#maps#MapFragment_E@ or @B_com#google#android#gms#maps#MapView_E@ that you have added to your application. Note: Similar to a @B_android#view#View_E@ object, a @B_com#google#android#gms#maps#StreetViewPanorama_E@ can only be read and modified from the main thread. Calling @B_com#google#android#gms#maps#StreetViewPanorama_E@ methods from another thread will result in an exception. To get started with the Google Maps Android API, read the"}