{"Functions": {"getTitle()": {"Returns": [["", "A string containing the marker's title."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the title of the marker.", "history": "", "FullName": "public String getTitle ()"}, "showInfoWindow()": {"Returns": [], "Parameters": [], "Throws": [["IllegalArgumentException", "if marker is not on this map"]], "SeeAlso": [], "Permissions": [], "Description": "Shows the info window of this marker on the map, if this marker @B_com#google#android#gms#maps#model#Marker#isVisible_E@.", "history": "", "FullName": "public void showInfoWindow ()"}, "setRotation(float)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the rotation of the marker in degrees clockwise about the marker's anchor point. The axis of rotation is perpendicular to the marker. A rotation of 0 corresponds to the default position of the marker.", "history": "", "FullName": "public void setRotation (float rotation)"}, "setDraggable(boolean)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the draggability of the marker. When a marker is draggable, it can be moved by the user by long pressing on the marker.", "history": "", "FullName": "public void setDraggable (boolean draggable)"}, "isFlat()": {"Returns": [["", "true if the marker is flat against the map; false if the marker should face the camera."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the flat setting of the Marker.", "history": "", "FullName": "public boolean isFlat ()"}, "setIcon(com.google.android.gms.maps.model.BitmapDescriptor)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#maps#model#BitmapDescriptor_E@", "if null, the default marker is used."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the icon for the marker.", "history": "", "FullName": "public void setIcon (BitmapDescriptor icon)"}, "isVisible()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public boolean isVisible ()"}, "setInfoWindowAnchor(float, float)": {"Returns": [], "Parameters": [["float", "u-coordinate of the info window anchor, as a ratio of the image width (in the range [0, 1])"], ["float", "v-coordinate of the info window anchor, as a ratio of the image height (in the range [0, 1])"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Specifies the point in the marker image at which to anchor the info window when it is displayed. This is specified in the same coordinate system as the anchor. See @B_com#google#android#gms#maps#model#Marker#setAnchor_E@ for more details. The default is the top middle of the image.", "history": "", "FullName": "public void setInfoWindowAnchor (float anchorU, float anchorV)"}, "getAlpha()": {"Returns": [["", "the alpha of the marker in the range [0, 1]."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the alpha of the marker.", "history": "", "FullName": "public float getAlpha ()"}, "equals(java.lang.Object)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public boolean equals (Object other)"}, "getId()": {"Returns": [["", "this marker's id."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets this marker's id. The id will be unique amongst all Markers on a map.", "history": "", "FullName": "public String getId ()"}, "setPosition(com.google.android.gms.maps.model.LatLng)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the position of the marker.", "history": "", "FullName": "public void setPosition (LatLng latlng)"}, "isInfoWindowShown()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether the info window is currently shown above this marker. This does not consider whether or not the info window is actually visible on screen.", "history": "", "FullName": "public boolean isInfoWindowShown ()"}, "hideInfoWindow()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Hides the info window if it is shown from this marker. This method has no effect if this marker is not visible.", "history": "", "FullName": "public void hideInfoWindow ()"}, "setTitle(java.lang.String)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the title of the marker.", "history": "", "FullName": "public void setTitle (String title)"}, "setSnippet(java.lang.String)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the snippet of the marker.", "history": "", "FullName": "public void setSnippet (String snippet)"}, "setFlat(boolean)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether this marker should be flat against the map true or a billboard facing the camera false.", "history": "", "FullName": "public void setFlat (boolean flat)"}, "getPosition()": {"Returns": [["", "A @B_com#google#android#gms#maps#model#LatLng_E@ object specifying the marker's current position."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the position of the marker.", "history": "", "FullName": "public LatLng getPosition ()"}, "getRotation()": {"Returns": [["", "the rotation of the marker in degrees clockwise from the default position."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the rotation of the marker.", "history": "", "FullName": "public float getRotation ()"}, "setAlpha(float)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the alpha (opacity) of the marker. This is a value from 0 to 1, where 0 means the marker is completely transparent and 1 means the marker is completely opaque.", "history": "", "FullName": "public void setAlpha (float alpha)"}, "isDraggable()": {"Returns": [["", "true if the marker is draggable; otherwise, returns false."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the draggability of the marker. When a marker is draggable, it can be moved by the user by long pressing on the marker.", "history": "", "FullName": "public boolean isDraggable ()"}, "getSnippet()": {"Returns": [["", "A string containing the marker's snippet."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the snippet of the marker.", "history": "", "FullName": "public String getSnippet ()"}, "remove()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes this marker from the map. After a marker has been removed, the behavior of all its methods is undefined.", "history": "", "FullName": "public void remove ()"}, "setAnchor(float, float)": {"Returns": [], "Parameters": [["float", "u-coordinate of the anchor, as a ratio of the image width (in the range [0, 1])"], ["float", "v-coordinate of the anchor, as a ratio of the image height (in the range [0, 1])"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the anchor point for the marker. The anchor specifies the point in the icon image that is anchored to the marker's position on the Earth's surface. The anchor point is specified in the continuous space [0.0, 1.0] x [0.0, 1.0], where (0, 0) is the top-left corner of the image, and (1, 1) is the bottom-right corner. The anchoring point in a W x H image is the nearest discrete grid point in a (W + 1) x (H + 1) grid, obtained by scaling the then rounding. For example, in a 4 x 2 image, the anchor point (0.7, 0.6) resolves to the grid point at (3, 1).", "history": "", "FullName": "public void setAnchor (float anchorU, float anchorV)"}, "hashCode()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int hashCode ()"}, "setVisible(boolean)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the visibility of this marker. If set to false and an info window is currently showing for this marker, this will hide the info window.", "history": "", "FullName": "public void setVisible (boolean visible)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.maps.model.Marker", "ClassDesc": "An icon placed at a particular point on the map's surface. A marker icon is drawn oriented against the device's screen rather than the map's surface; i.e., it will not necessarily change orientation due to map rotations, tilting, or zooming. A marker has the following properties: For more information, read the"}