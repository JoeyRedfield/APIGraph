{"Functions": {"getProperties()": {"Returns": [["@B_android#media#audiofx#BassBoost#Settings_E@", "a BassBoost.Settings object containing all current parameters values"]], "Parameters": [], "Throws": [["", "java.lang.IllegalStateException"], ["", "java.lang.IllegalArgumentException"], ["", "java.lang.UnsupportedOperationException"], ["@B_java#lang#IllegalArgumentException_E@", ""], ["@B_java#lang#IllegalStateException_E@", ""], ["@B_java#lang#UnsupportedOperationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Gets the bass boost properties. This method is useful when a snapshot of current bass boost settings must be saved by the application.", "history": "Added in API level 9", "FullName": "public BassBoost.Settings getProperties ()"}, "getRoundedStrength()": {"Returns": [["short", "the strength of the effect. The valid range for strength is [0, 1000], where 0 per mille designates the mildest effect and 1000 per mille the strongest"]], "Parameters": [], "Throws": [["", "java.lang.IllegalStateException"], ["", "java.lang.IllegalArgumentException"], ["", "java.lang.UnsupportedOperationException"], ["@B_java#lang#IllegalArgumentException_E@", ""], ["@B_java#lang#IllegalStateException_E@", ""], ["@B_java#lang#UnsupportedOperationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Gets the current strength of the effect.", "history": "Added in API level 9", "FullName": "public short getRoundedStrength ()"}, "setProperties(android.media.audiofx.BassBoost.Settings)": {"Returns": [], "Parameters": [["@B_android#media#audiofx#BassBoost#Settings_E@", "BassBoost.Settings: a BassBoost.Settings object containing the properties to apply"]], "Throws": [["", "java.lang.IllegalStateException"], ["", "java.lang.IllegalArgumentException"], ["", "java.lang.UnsupportedOperationException"], ["@B_java#lang#IllegalArgumentException_E@", ""], ["@B_java#lang#IllegalStateException_E@", ""], ["@B_java#lang#UnsupportedOperationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Sets the bass boost properties. This method is useful when bass boost settings have to be applied from a previous backup.", "history": "Added in API level 9", "FullName": "public void setProperties (BassBoost.Settings settings)"}, "setStrength(short)": {"Returns": [], "Parameters": [["short", "short: strength of the effect. The valid range for strength strength is [0, 1000], where 0 per mille designates the mildest effect and 1000 per mille designates the strongest."]], "Throws": [["", "java.lang.IllegalStateException"], ["", "java.lang.IllegalArgumentException"], ["", "java.lang.UnsupportedOperationException"], ["@B_java#lang#IllegalArgumentException_E@", ""], ["@B_java#lang#IllegalStateException_E@", ""], ["@B_java#lang#UnsupportedOperationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Sets the strength of the bass boost effect. If the implementation does not support per mille accuracy for setting the strength, it is allowed to round the given strength to the nearest supported value. You can use the @B_android#media#audiofx#BassBoost#getRoundedStrength_E@ method to query the (possibly rounded) value that was actually set.", "history": "Added in API level 9", "FullName": "public void setStrength (short strength)"}, "setParameterListener(android.media.audiofx.BassBoost.OnParameterChangeListener)": {"Returns": [], "Parameters": [["@B_android#media#audiofx#BassBoost#OnParameterChangeListener_E@", "BassBoost.OnParameterChangeListener: OnParameterChangeListener interface registered"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers an OnParameterChangeListener interface.", "history": "Added in API level 9", "FullName": "public void setParameterListener (BassBoost.OnParameterChangeListener listener)"}, "BassBoost(int,int)": {"Returns": [], "Parameters": [["int", "int: the priority level requested by the application for controlling the BassBoost engine. As the same engine can be shared by several applications, this parameter indicates how much the requesting application needs control of effect parameters. The normal priority is 0, above normal is a positive number, below normal a negative number."], ["int", "int: system wide unique audio session identifier. The BassBoost will be attached to the MediaPlayer or AudioTrack in the same audio session."]], "Throws": [["", "java.lang.IllegalStateException"], ["", "java.lang.IllegalArgumentException"], ["", "java.lang.UnsupportedOperationException"], ["", "java.lang.RuntimeException"], ["@B_java#lang#IllegalArgumentException_E@", ""], ["@B_java#lang#IllegalStateException_E@", ""], ["@B_java#lang#RuntimeException_E@", ""], ["@B_java#lang#UnsupportedOperationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Class constructor.", "history": "Added in API level 9", "FullName": "public BassBoost (int priority, int audioSession)"}, "getStrengthSupported()": {"Returns": [["boolean", "true is strength parameter is supported, false otherwise"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether setting strength is supported. If this method returns false, only one strength is supported and the setStrength() method always rounds to that value.", "history": "Added in API level 9", "FullName": "public boolean getStrengthSupported ()"}, "BassBoost(int, int)": {"Returns": [], "Parameters": [["int", "int: the priority level requested by the application for controlling the BassBoost engine. As the same engine can be shared by several applications, this parameter indicates how much the requesting application needs control of effect parameters. The normal priority is 0, above normal is a positive number, below normal a negative number."], ["int", "int: system wide unique audio session identifier. The BassBoost will be attached to the MediaPlayer or AudioTrack in the same audio session."]], "Throws": [["", "java.lang.IllegalStateException"], ["", "java.lang.IllegalArgumentException"], ["", "java.lang.UnsupportedOperationException"], ["@B_java#lang#RuntimeException_E@", ""], ["@B_java#lang#IllegalStateException_E@", ""], ["@B_java#lang#IllegalArgumentException_E@", ""], ["@B_java#lang#UnsupportedOperationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Class constructor.", "history": "added in API level 9", "FullName": "public BassBoost (int priority, int audioSession)"}}, "Inheritance": ["@B_android#media#audiofx#AudioEffect_E@"], "ClassName": "android.media.audiofx.BassBoost", "ClassDesc": "Bass boost is an audio effect to boost or amplify low frequencies of the sound. It is comparable to a simple equalizer but limited to one band amplification in the low frequency range. An application creates a BassBoost object to instantiate and control a bass boost engine in the audio framework. The methods, parameter types and units exposed by the BassBoost implementation are directly mapping those defined by the OpenSL ES 1.0.1 Specification (http://www.khronos.org/opensles/) for the SLBassBoostItf interface. Please refer to this specification for more details. To attach the BassBoost to a particular AudioTrack or MediaPlayer, specify the audio session ID of this AudioTrack or MediaPlayer when constructing the BassBoost. NOTE: attaching a BassBoost to the global audio output mix by use of session 0 is deprecated. See @B_android#media#MediaPlayer#getAudioSessionId_E@ for details on audio sessions. See @B_android#media#audiofx#AudioEffect_E@ class for more details on controlling audio effects."}