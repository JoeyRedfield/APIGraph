{"Functions": {"deleteAllSessions()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public DataDeleteRequest.Builder deleteAllSessions ()"}, "DataDeleteRequest.Builder()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public DataDeleteRequest.Builder ()"}, "addSession(com.google.android.gms.fitness.data.Session)": {"Returns": [], "Parameters": [], "Throws": [["IllegalArgumentException", "if the input session is invalid or is still ongoing, or if all sessions are already marked for deletion"]], "SeeAlso": [], "Permissions": [], "Description": "Adds a specific session to delete from the Google Fit store. Apps can either use this function or use @B_com#google#android#gms#fitness#request#DataDeleteRequest#Builder#deleteAllSessions_E@ to mark all sessions for deletion. Only sessions that have already ended can be marked for deletion.", "history": "", "FullName": "public DataDeleteRequest.Builder addSession (Session session)"}, "setTimeInterval(long, long, java.util.concurrent.TimeUnit)": {"Returns": [], "Parameters": [], "Throws": [["IllegalArgumentException", "if the input time interval is invalid."]], "SeeAlso": [], "Permissions": [], "Description": "Sets the time interval for the data delete query.", "history": "", "FullName": "public DataDeleteRequest.Builder setTimeInterval (long startTime, long endTime, TimeUnit timeUnit)"}, "deleteAllData()": {"Returns": [], "Parameters": [], "Throws": [["IllegalArgumentException", "if a specific data source/type is already added for deletion"]], "SeeAlso": [], "Permissions": [], "Description": "Adds option to delete data for all data types. Apps can either use this function to delete all data or specify a specific data source using @B_com#google#android#gms#fitness#request#DataDeleteRequest#Builder#addDataSource_E@ or a specific data type using @B_com#google#android#gms#fitness#request#DataDeleteRequest#Builder#addDataType_E@ for data deletion.", "history": "", "FullName": "public DataDeleteRequest.Builder deleteAllData ()"}, "build()": {"Returns": [], "Parameters": [], "Throws": [["IllegalStateException", "if time interval is not set or if input sessions are outside the query time interval, or if no data or session is marked for deletion"]], "SeeAlso": [], "Permissions": [], "Description": "Finishes building and returns the request.", "history": "", "FullName": "public DataDeleteRequest build ()"}, "addDataType(com.google.android.gms.fitness.data.DataType)": {"Returns": [], "Parameters": [], "Throws": [["IllegalArgumentException", "if invalid data type is specified or if all data is already marked for deletion"]], "SeeAlso": [], "Permissions": [], "Description": "Adds a specific data type to delete data from the Google Fit store. Apps can either use this function or use @B_com#google#android#gms#fitness#request#DataDeleteRequest#Builder#addDataSource_E@ to add a specific data source, or use @B_com#google#android#gms#fitness#request#DataDeleteRequest#Builder#deleteAllData_E@ to mark data for all data types to be deleted.", "history": "", "FullName": "public DataDeleteRequest.Builder addDataType (DataType dataType)"}, "addDataSource(com.google.android.gms.fitness.data.DataSource)": {"Returns": [], "Parameters": [], "Throws": [["IllegalArgumentException", "if the input data source is invalid or if all data is already marked for deletion"]], "SeeAlso": [], "Permissions": [], "Description": "Adds a specific data source to delete data from the Google Fit store. Apps can either use this function or use @B_com#google#android#gms#fitness#request#DataDeleteRequest#Builder#addDataType_E@ to add a specific data type, or use @B_com#google#android#gms#fitness#request#DataDeleteRequest#Builder#deleteAllData_E@ to mark data for all data types to be deleted.", "history": "", "FullName": "public DataDeleteRequest.Builder addDataSource (DataSource dataSource)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.fitness.request.DataDeleteRequest.Builder", "ClassDesc": "Builder used to create new DataDeleteRequests."}