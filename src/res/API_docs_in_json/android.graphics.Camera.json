{"Functions": {"getMatrix(android.graphics.Matrix)": {"Returns": [], "Parameters": [["@B_android#graphics#Matrix_E@", "Matrix: The matrix to copy the current transforms into"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Computes the matrix corresponding to the current transformation and copies it to the supplied matrix object.", "history": "Added in API level 1", "FullName": "public void getMatrix (Matrix matrix)"}, "rotateX(float)": {"Returns": [], "Parameters": [["float", "float: The angle of rotation around the X axis, in degrees"]], "Throws": [], "SeeAlso": ["@B_android#graphics#Camera#rotateY_E@", "@B_android#graphics#Camera#rotateZ_E@", "@B_android#graphics#Camera#rotate_E@"], "Permissions": [], "Description": "Applies a rotation transform around the X axis.", "history": "Added in API level 1", "FullName": "public void rotateX (float deg)"}, "rotate(float,float,float)": {"Returns": [], "Parameters": [["float", "float: The angle of rotation around the X axis, in degrees"], ["float", "float: The angle of rotation around the Y axis, in degrees"], ["float", "float: The angle of rotation around the Z axis, in degrees"]], "Throws": [], "SeeAlso": ["@B_android#graphics#Camera#rotateX_E@", "@B_android#graphics#Camera#rotateY_E@", "@B_android#graphics#Camera#rotateZ_E@"], "Permissions": [], "Description": "Applies a rotation transform around all three axis.", "history": "Added in API level 12", "FullName": "public void rotate (float x, float y, float z)"}, "restore()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#graphics#Camera#restore_E@"], "Permissions": [], "Description": "Restores the saved state, if any.", "history": "Added in API level 1", "FullName": "public void restore ()"}, "dotWithNormal(float,float,float)": {"Returns": [["float", "no returns description in source"]], "Parameters": [["float", "float no parameter comment"], ["float", "float no parameter comment"], ["float", "float no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public float dotWithNormal (float dx, float dy, float dz)"}, "getLocationY()": {"Returns": [["float", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#graphics#Camera#setLocation_E@"], "Permissions": [], "Description": "Gets the y location of the camera.", "history": "Added in API level 16", "FullName": "public float getLocationY ()"}, "finalize()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#lang#Throwable_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Called by the garbage collector on an object when garbage collection determines that there are no more references to the object. A subclass overrides the finalize method to dispose of system resources or to perform other cleanup. The general contract of finalize is that it is invoked if and when the Java\u2122 virtual machine has determined that there is no longer any means by which this object can be accessed by any thread that has not yet died, except as a result of an action taken by the finalization of some other object or class which is ready to be finalized. The finalize method may take any action, including making this object available again to other threads; the usual purpose of finalize, however, is to perform cleanup actions before the object is irrevocably discarded. For example, the finalize method for an object that represents an input/output connection might perform explicit I/O transactions to break the connection before the object is permanently discarded. The finalize method of class Object performs no special action; it simply returns normally. Subclasses of Object may override this definition. The Java programming language does not guarantee which thread will invoke the finalize method for any given object. It is guaranteed, however, that the thread that invokes finalize will not be holding any user-visible synchronization locks when finalize is invoked. If an uncaught exception is thrown by the finalize method, the exception is ignored and finalization of that object terminates. After the finalize method has been invoked for an object, no further action is taken until the Java virtual machine has again determined that there is no longer any means by which this object can be accessed by any thread that has not yet died, including possible actions by other objects or classes which are ready to be finalized, at which point the object may be discarded. The finalize method is never invoked more than once by a Java virtual machine for any given object. Any exception thrown by the finalize method causes the finalization of this object to be halted, but is otherwise ignored.", "history": "Added in API level 1", "FullName": "protected void finalize ()"}, "getLocationZ()": {"Returns": [["float", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#graphics#Camera#setLocation_E@"], "Permissions": [], "Description": "Gets the z location of the camera.", "history": "Added in API level 16", "FullName": "public float getLocationZ ()"}, "getLocationX()": {"Returns": [["float", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#graphics#Camera#setLocation_E@"], "Permissions": [], "Description": "Gets the x location of the camera.", "history": "Added in API level 16", "FullName": "public float getLocationX ()"}, "save()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#graphics#Camera#save_E@"], "Permissions": [], "Description": "Saves the camera state. Each save should be balanced with a call to @B_android#graphics#Camera#restore_E@.", "history": "Added in API level 1", "FullName": "public void save ()"}, "rotateY(float)": {"Returns": [], "Parameters": [["float", "float: The angle of rotation around the Y axis, in degrees"]], "Throws": [], "SeeAlso": ["@B_android#graphics#Camera#rotateX_E@", "@B_android#graphics#Camera#rotateZ_E@", "@B_android#graphics#Camera#rotate_E@"], "Permissions": [], "Description": "Applies a rotation transform around the Y axis.", "history": "Added in API level 1", "FullName": "public void rotateY (float deg)"}, "setLocation(float, float, float)": {"Returns": [], "Parameters": [["float", "float: The x location of the camera"], ["float", "float: The y location of the camera"], ["float", "float: The z location of the camera"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the location of the camera. The default location is set at 0, 0, -8.", "history": "added in API level 12", "FullName": "public void setLocation (float x, float y, float z)"}, "applyToCanvas(android.graphics.Canvas)": {"Returns": [], "Parameters": [["@B_android#graphics#Canvas_E@", "Canvas: The Canvas to set the transform matrix onto"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Computes the matrix corresponding to the current transformation and applies it to the specified Canvas.", "history": "Added in API level 1", "FullName": "public void applyToCanvas (Canvas canvas)"}, "translate(float,float,float)": {"Returns": [], "Parameters": [["float", "float: The distance to translate by on the X axis"], ["float", "float: The distance to translate by on the Y axis"], ["float", "float: The distance to translate by on the Z axis"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Applies a translation transform on all three axis.", "history": "Added in API level 1", "FullName": "public void translate (float x, float y, float z)"}, "setLocation(float,float,float)": {"Returns": [], "Parameters": [["float", "float: The x location of the camera"], ["float", "float: The y location of the camera"], ["float", "float: The z location of the camera"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the location of the camera. The default location is set at 0, 0, -8.", "history": "Added in API level 12", "FullName": "public void setLocation (float x, float y, float z)"}, "translate(float, float, float)": {"Returns": [], "Parameters": [["float", "float: The distance to translate by on the X axis"], ["float", "float: The distance to translate by on the Y axis"], ["float", "float: The distance to translate by on the Z axis"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Applies a translation transform on all three axis.", "history": "added in API level 1", "FullName": "public void translate (float x, float y, float z)"}, "rotateZ(float)": {"Returns": [], "Parameters": [["float", "float: The angle of rotation around the Z axis, in degrees"]], "Throws": [], "SeeAlso": ["@B_android#graphics#Camera#rotateX_E@", "@B_android#graphics#Camera#rotateY_E@", "@B_android#graphics#Camera#rotate_E@"], "Permissions": [], "Description": "Applies a rotation transform around the Z axis.", "history": "Added in API level 1", "FullName": "public void rotateZ (float deg)"}, "Camera()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new camera, with empty transformations.", "history": "Added in API level 1", "FullName": "public Camera ()"}, "dotWithNormal(float, float, float)": {"Returns": [["float", "no returns description in source"]], "Parameters": [["float", "float no parameter comment"], ["float", "float no parameter comment"], ["float", "float no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public float dotWithNormal (float dx, float dy, float dz)"}, "rotate(float, float, float)": {"Returns": [], "Parameters": [["float", "float: The angle of rotation around the X axis, in degrees"], ["float", "float: The angle of rotation around the Y axis, in degrees"], ["float", "float: The angle of rotation around the Z axis, in degrees"]], "Throws": [], "SeeAlso": ["@B_android#graphics#Camera#rotateX_E@", "@B_android#graphics#Camera#rotateY_E@", "@B_android#graphics#Camera#rotateZ_E@"], "Permissions": [], "Description": "Applies a rotation transform around all three axis.", "history": "added in API level 12", "FullName": "public void rotate (float x, float y, float z)"}}, "Inheritance": [], "ClassName": "android.graphics.Camera", "ClassDesc": "A camera instance can be used to compute 3D transformations and generate a matrix that can be applied, for instance, on a @B_android#graphics#Canvas_E@."}