{"Functions": {"notifyChange(android.net.Uri,android.database.ContentObserver,boolean)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri: (Ignored) The uri of the content provider."], ["@B_android#database#ContentObserver_E@", "ContentObserver: (Ignored) The observer that originated the change."], ["boolean", "boolean: (Ignored) If true, attempt to sync the change to the network."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Overrides @B_android#content#ContentResolver#notifyChange_E@. All parameters are ignored. The method hides providers linked to MockContentResolver from other observers in the system.", "history": "Added in API level 1", "FullName": "public void notifyChange (Uri uri, ContentObserver observer, boolean syncToNetwork)"}, "MockContentResolver()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a local map of providers. This map is used instead of the global map when an API call tries to acquire a provider.", "history": "Added in API level 1", "FullName": "public MockContentResolver ()"}, "addProvider(java.lang.String,android.content.ContentProvider)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The authority name associated with the provider."], ["@B_android#content#ContentProvider_E@", "ContentProvider: An instance of @B_android#content#ContentProvider_E@ or one of its subclasses, or null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds access to a provider based on its authority", "history": "Added in API level 1", "FullName": "public void addProvider (String name, ContentProvider provider)"}, "MockContentResolver(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a local map of providers. This map is used instead of the global map when an API call tries to acquire a provider.", "history": "Added in API level 18", "FullName": "public MockContentResolver (Context context)"}}, "Inheritance": ["@B_android#content#ContentResolver_E@"], "ClassName": "android.test.mock.MockContentResolver", "ClassDesc": "An extension of @B_android#content#ContentResolver_E@ that is designed for testing. MockContentResolver overrides Android's normal way of resolving providers by authority. To have access to a provider based on its authority, users of MockContentResolver first instantiate the provider and use @B_android#test#mock#MockContentResolver#addProvider_E@. Resolution of an authority occurs entirely within MockContentResolver. Users can also set an authority's entry in the map to null, so that a provider is completely mocked out."}