{"Functions": {"setExpandedTitleMarginEnd(int)": {"Returns": [], "Parameters": [["int", "int: the ending title margin in pixels"]], "Throws": [], "SeeAlso": ["@B_android#support#design#widget#CollapsingToolbarLayout#getExpandedTitleMarginEnd_E@"], "Permissions": [], "Description": "Sets the ending expanded title margin in pixels.", "history": "added in version 23.2.0", "FullName": "void setExpandedTitleMarginEnd (int margin)"}, "setCollapsedTitleGravity(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the horizontal alignment of the collapsed title and the vertical gravity that will be used when there is extra space in the collapsed bounds beyond what is required for the title itself.", "history": "added in version 23.0.0", "FullName": "void setCollapsedTitleGravity (int gravity)"}, "onMeasure(int, int)": {"Returns": [], "Parameters": [["int", "int: horizontal space requirements as imposed by the parent. The requirements are encoded with @B_android#view#View#MeasureSpec_E@."], ["int", "int: vertical space requirements as imposed by the parent. The requirements are encoded with @B_android#view#View#MeasureSpec_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Measure the view and its content to determine the measured width and the measured height. This method is invoked by @B_android#view#View#measure_E@ and should be overridden by subclasses to provide accurate and efficient measurement of their contents. must call @B_android#view#View#setMeasuredDimension_E@ to store the measured width and height of this view. Failure to do so will trigger an IllegalStateException, thrown by @B_android#view#View#measure_E@. Calling the superclass' @B_android#view#View#onMeasure_E@ is a valid use. The base class implementation of measure defaults to the background size, unless a larger size is allowed by the MeasureSpec. Subclasses should override @B_android#view#View#onMeasure_E@ to provide better measurements of their content. If this method is overridden, it is the subclass's responsibility to make sure the measured height and width are at least the view's minimum height and width (@B_android#view#View#getSuggestedMinimumHeight_E@ and @B_android#view#View#getSuggestedMinimumWidth_E@).", "history": "", "FullName": "void onMeasure (int widthMeasureSpec, int heightMeasureSpec)"}, "getExpandedTitleMarginBottom()": {"Returns": [["int", "the bottom expanded title margin in pixels"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#design#widget#CollapsingToolbarLayout#setExpandedTitleMarginBottom_E@"], "Permissions": [], "Description": "", "history": "added in version 23.2.0", "FullName": "int getExpandedTitleMarginBottom ()"}, "setExpandedTitleMargin(int, int, int, int)": {"Returns": [], "Parameters": [["int", "int: the starting title margin in pixels"], ["int", "int: the top title margin in pixels"], ["int", "int: the ending title margin in pixels"], ["int", "int: the bottom title margin in pixels"]], "Throws": [], "SeeAlso": ["@B_android#support#design#widget#CollapsingToolbarLayout#getExpandedTitleMarginStart_E@", "@B_android#support#design#widget#CollapsingToolbarLayout#getExpandedTitleMarginTop_E@", "@B_android#support#design#widget#CollapsingToolbarLayout#getExpandedTitleMarginEnd_E@", "@B_android#support#design#widget#CollapsingToolbarLayout#getExpandedTitleMarginBottom_E@"], "Permissions": [], "Description": "Sets the expanded title margins.", "history": "added in version 23.2.0", "FullName": "void setExpandedTitleMargin (int start, int top, int end, int bottom)"}, "setExpandedTitleMarginTop(int)": {"Returns": [], "Parameters": [["int", "int: the top title margin in pixels"]], "Throws": [], "SeeAlso": ["@B_android#support#design#widget#CollapsingToolbarLayout#getExpandedTitleMarginTop_E@"], "Permissions": [], "Description": "Sets the top expanded title margin in pixels.", "history": "added in version 23.2.0", "FullName": "void setExpandedTitleMarginTop (int margin)"}, "getScrimVisibleHeightTrigger()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#design#widget#CollapsingToolbarLayout#setScrimVisibleHeightTrigger_E@"], "Permissions": [], "Description": "Returns the amount of visible height in pixels used to define when to trigger a scrim visibility change.", "history": "added in version 24.0.0", "FullName": "int getScrimVisibleHeightTrigger ()"}, "getContentScrim()": {"Returns": [["@B_android#graphics#drawable#Drawable_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#design#widget#CollapsingToolbarLayout#setContentScrim_E@"], "Permissions": [], "Description": "Returns the drawable which is used for the foreground scrim.", "history": "added in version 22.2.0", "FullName": "Drawable getContentScrim ()"}, "setExpandedTitleMarginStart(int)": {"Returns": [], "Parameters": [["int", "int: the starting title margin in pixels"]], "Throws": [], "SeeAlso": ["@B_android#support#design#widget#CollapsingToolbarLayout#getExpandedTitleMarginStart_E@"], "Permissions": [], "Description": "Sets the starting expanded title margin in pixels.", "history": "added in version 23.2.0", "FullName": "void setExpandedTitleMarginStart (int margin)"}, "setScrimVisibleHeightTrigger(int)": {"Returns": [], "Parameters": [["int", "int: value in pixels used to define when to trigger a scrim visibility change"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the amount of visible height in pixels used to define when to trigger a scrim visibility change. If the visible height of this view is less than the given value, the scrims will be made visible, otherwise they are hidden.", "history": "added in version 24.0.0", "FullName": "void setScrimVisibleHeightTrigger (int height)"}, "drawableStateChanged()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This function is called whenever the state of the view changes in such a way that it impacts the state of drawables being shown. If the View has a StateListAnimator, it will also be called to run necessary state change animations. Be sure to call through to the superclass when overriding this function.", "history": "", "FullName": "void drawableStateChanged ()"}, "setStatusBarScrimResource(int)": {"Returns": [], "Parameters": [["int", "int: drawable resource id"]], "Throws": [], "SeeAlso": ["@B_android#support#design#widget#CollapsingToolbarLayout#getStatusBarScrim_E@"], "Permissions": [], "Description": "Set the drawable to use for the content scrim from resources.", "history": "added in version 22.2.0", "FullName": "void setStatusBarScrimResource (int resId)"}, "getStatusBarScrim()": {"Returns": [["@B_android#graphics#drawable#Drawable_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#design#widget#CollapsingToolbarLayout#setStatusBarScrim_E@"], "Permissions": [], "Description": "Returns the drawable which is used for the status bar scrim.", "history": "added in version 22.2.0", "FullName": "Drawable getStatusBarScrim ()"}, "getTitle()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the title currently being displayed by this view. If the title is not enabled, then this will return null.", "history": "added in version 23.0.0", "FullName": "CharSequence getTitle ()"}, "setScrimsShown(boolean, boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: whether the scrims should be shown"], ["boolean", "boolean: whether to animate the visibility change"]], "Throws": [], "SeeAlso": ["@B_android#support#design#widget#CollapsingToolbarLayout#getStatusBarScrim_E@", "@B_android#support#design#widget#CollapsingToolbarLayout#getContentScrim_E@"], "Permissions": [], "Description": "Set whether the content scrim and/or status bar scrim should be shown or not. Any change in the vertical scroll may overwrite this value.", "history": "added in version 23.1.0", "FullName": "void setScrimsShown (boolean shown, boolean animate)"}, "setTitleEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#support#design#widget#CollapsingToolbarLayout#setTitle_E@", "@B_android#support#design#widget#CollapsingToolbarLayout#isTitleEnabled_E@"], "Permissions": [], "Description": "Sets whether this view should display its own title. The title displayed by this view will shrink and grow based on the scroll offset.", "history": "added in version 23.0.0", "FullName": "void setTitleEnabled (boolean enabled)"}, "setScrimsShown(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: whether the scrims should be shown"]], "Throws": [], "SeeAlso": ["@B_android#support#design#widget#CollapsingToolbarLayout#getStatusBarScrim_E@", "@B_android#support#design#widget#CollapsingToolbarLayout#getContentScrim_E@"], "Permissions": [], "Description": "Set whether the content scrim and/or status bar scrim should be shown or not. Any change in the vertical scroll may overwrite this value. Any visibility change will be animated if this view has already been laid out.", "history": "added in version 23.1.0", "FullName": "void setScrimsShown (boolean shown)"}, "setTitle(java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#support#design#widget#CollapsingToolbarLayout#setTitleEnabled_E@", "@B_android#support#design#widget#CollapsingToolbarLayout#getTitle_E@"], "Permissions": [], "Description": "Sets the title to be displayed by this view, if enabled.", "history": "added in version 22.2.0", "FullName": "void setTitle (CharSequence title)"}, "isTitleEnabled()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#design#widget#CollapsingToolbarLayout#setTitleEnabled_E@"], "Permissions": [], "Description": "Returns whether this view is currently displaying its own title.", "history": "added in version 23.0.0", "FullName": "boolean isTitleEnabled ()"}, "getExpandedTitleTypeface()": {"Returns": [["@B_android#graphics#Typeface_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the typeface used for the expanded title.", "history": "added in version 23.1.0", "FullName": "Typeface getExpandedTitleTypeface ()"}, "CollapsingToolbarLayout(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.2.0", "FullName": "CollapsingToolbarLayout (Context context)"}, "setExpandedTitleGravity(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the horizontal alignment of the expanded title and the vertical gravity that will be used when there is extra space in the expanded bounds beyond what is required for the title itself.", "history": "added in version 23.0.0", "FullName": "void setExpandedTitleGravity (int gravity)"}, "draw(android.graphics.Canvas)": {"Returns": [], "Parameters": [["@B_android#graphics#Canvas_E@", "Canvas: The Canvas to which the View is rendered."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Manually render this view (and all of its children) to the given Canvas. The view must have already done a full layout before this function is called. When implementing a view, implement @B_android#view#View#onDraw_E@ instead of overriding this method. If you do need to override this method, call the superclass version.", "history": "", "FullName": "void draw (Canvas canvas)"}, "getExpandedTitleGravity()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the horizontal and vertical alignment for title when expanded.", "history": "added in version 23.0.0", "FullName": "int getExpandedTitleGravity ()"}, "onSizeChanged(int, int, int, int)": {"Returns": [], "Parameters": [["int", "int: Current width of this view."], ["int", "int: Current height of this view."], ["int", "int: Old width of this view."], ["int", "int: Old height of this view."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This is called during layout when the size of this view has changed. If you were just added to the view hierarchy, you're called with the old values of 0.", "history": "", "FullName": "void onSizeChanged (int w, int h, int oldw, int oldh)"}, "generateLayoutParams(android.util.AttributeSet)": {"Returns": [["@B_android#widget#FrameLayout#LayoutParams_E@", "an instance of @B_android#view#ViewGroup#LayoutParams_E@ or one of its descendants"]], "Parameters": [["@B_android#util#AttributeSet_E@", "AttributeSet: the attributes to build the layout parameters from"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a new set of layout parameters based on the supplied attributes set.", "history": "", "FullName": "FrameLayout.LayoutParams generateLayoutParams (AttributeSet attrs)"}, "getCollapsedTitleGravity()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the horizontal and vertical alignment for title when collapsed.", "history": "added in version 23.0.0", "FullName": "int getCollapsedTitleGravity ()"}, "setCollapsedTitleTextColor(int)": {"Returns": [], "Parameters": [["int", "int: The new text color in ARGB format"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the text color of the collapsed title.", "history": "added in version 22.2.0", "FullName": "void setCollapsedTitleTextColor (int color)"}, "setContentScrimColor(int)": {"Returns": [], "Parameters": [["int", "int: the color to display"]], "Throws": [], "SeeAlso": ["@B_android#support#design#widget#CollapsingToolbarLayout#getContentScrim_E@"], "Permissions": [], "Description": "Set the color to use for the content scrim.", "history": "added in version 22.2.0", "FullName": "void setContentScrimColor (int color)"}, "generateDefaultLayoutParams()": {"Returns": [["@B_android#support#design#widget#CollapsingToolbarLayout#LayoutParams_E@", "a set of default layout parameters or null"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a set of layout parameters with a width of @B_android#view#ViewGroup#LayoutParams#MATCH_PARENT_E@, and a height of @B_android#view#ViewGroup#LayoutParams#MATCH_PARENT_E@.", "history": "", "FullName": "CollapsingToolbarLayout.LayoutParams generateDefaultLayoutParams ()"}, "onLayout(boolean, int, int, int, int)": {"Returns": [], "Parameters": [["boolean", "boolean: This is a new size or position for this view"], ["int", "int: Left position, relative to parent"], ["int", "int: Top position, relative to parent"], ["int", "int: Right position, relative to parent"], ["int", "int: Bottom position, relative to parent"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called from layout when this view should assign a size and position to each of its children. Derived classes with children should override this method and call layout on each of their children.", "history": "", "FullName": "void onLayout (boolean changed, int left, int top, int right, int bottom)"}, "setExpandedTitleMarginBottom(int)": {"Returns": [], "Parameters": [["int", "int: the bottom title margin in pixels"]], "Throws": [], "SeeAlso": ["@B_android#support#design#widget#CollapsingToolbarLayout#getExpandedTitleMarginBottom_E@"], "Permissions": [], "Description": "Sets the bottom expanded title margin in pixels.", "history": "added in version 23.2.0", "FullName": "void setExpandedTitleMarginBottom (int margin)"}, "setStatusBarScrimColor(int)": {"Returns": [], "Parameters": [["int", "int: the color to display"]], "Throws": [], "SeeAlso": ["@B_android#support#design#widget#CollapsingToolbarLayout#getStatusBarScrim_E@"], "Permissions": [], "Description": "Set the color to use for the status bar scrim. This scrim is only shown when we have been given a top system inset.", "history": "added in version 22.2.0", "FullName": "void setStatusBarScrimColor (int color)"}, "getScrimAnimationDuration()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the duration in milliseconds used for scrim visibility animations.", "history": "added in version 24.0.0", "FullName": "long getScrimAnimationDuration ()"}, "onDetachedFromWindow()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This is called when the view is detached from a window. At this point it no longer has a surface for drawing.", "history": "", "FullName": "void onDetachedFromWindow ()"}, "setExpandedTitleTextAppearance(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the text color and size for the expanded title from the specified TextAppearance resource.", "history": "added in version 22.2.0", "FullName": "void setExpandedTitleTextAppearance (int resId)"}, "verifyDrawable(android.graphics.drawable.Drawable)": {"Returns": [["boolean", "boolean If true than the Drawable is being displayed in the view; else false and it is not allowed to animate."]], "Parameters": [["@B_android#graphics#drawable#Drawable_E@", "Drawable: The Drawable to verify. Return true if it is one you are displaying, else return the result of calling through to the super class."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "If your view subclass is displaying its own Drawable objects, it should override this function and return true for any Drawable it is displaying. This allows animations for those drawables to be scheduled. Be sure to call through to the super class when overriding this function.", "history": "", "FullName": "boolean verifyDrawable (Drawable who)"}, "getExpandedTitleMarginTop()": {"Returns": [["int", "the top expanded title margin in pixels"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#design#widget#CollapsingToolbarLayout#setExpandedTitleMarginTop_E@"], "Permissions": [], "Description": "", "history": "added in version 23.2.0", "FullName": "int getExpandedTitleMarginTop ()"}, "setScrimAnimationDuration(long)": {"Returns": [], "Parameters": [["long", "long: the duration to use in milliseconds"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the duration used for scrim visibility animations.", "history": "added in version 24.0.0", "FullName": "void setScrimAnimationDuration (long duration)"}, "setContentScrimResource(int)": {"Returns": [], "Parameters": [["int", "int: drawable resource id"]], "Throws": [], "SeeAlso": ["@B_android#support#design#widget#CollapsingToolbarLayout#getContentScrim_E@"], "Permissions": [], "Description": "Set the drawable to use for the content scrim from resources.", "history": "added in version 22.2.0", "FullName": "void setContentScrimResource (int resId)"}, "getExpandedTitleMarginStart()": {"Returns": [["int", "the starting expanded title margin in pixels"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#design#widget#CollapsingToolbarLayout#setExpandedTitleMarginStart_E@"], "Permissions": [], "Description": "", "history": "added in version 23.2.0", "FullName": "int getExpandedTitleMarginStart ()"}, "onAttachedToWindow()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This is called when the view is attached to a window. At this point it has a Surface and will start drawing. Note that this function is guaranteed to be called before @B_android#view#View#onDraw_E@, however it may be called any time before the first onDraw -- including before or after @B_android#view#View#onMeasure_E@.", "history": "", "FullName": "void onAttachedToWindow ()"}, "setVisibility(int)": {"Returns": [], "Parameters": [["int", "int: One of @B_android#view#View#VISIBLE_E@, @B_android#view#View#INVISIBLE_E@, or @B_android#view#View#GONE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the visibility state of this view.", "history": "", "FullName": "void setVisibility (int visibility)"}, "getCollapsedTitleTypeface()": {"Returns": [["@B_android#graphics#Typeface_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the typeface used for the collapsed title.", "history": "added in version 23.1.0", "FullName": "Typeface getCollapsedTitleTypeface ()"}, "setExpandedTitleColor(int)": {"Returns": [], "Parameters": [["int", "int: The new text color in ARGB format"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the text color of the expanded title.", "history": "added in version 22.2.0", "FullName": "void setExpandedTitleColor (int color)"}, "getExpandedTitleMarginEnd()": {"Returns": [["int", "the ending expanded title margin in pixels"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#design#widget#CollapsingToolbarLayout#setExpandedTitleMarginEnd_E@"], "Permissions": [], "Description": "", "history": "added in version 23.2.0", "FullName": "int getExpandedTitleMarginEnd ()"}, "setCollapsedTitleTextAppearance(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the text color and size for the collapsed title from the specified TextAppearance resource.", "history": "added in version 22.2.0", "FullName": "void setCollapsedTitleTextAppearance (int resId)"}}, "Inheritance": ["java.lang.Object", "https:##developer#android#com@B_android#view#View_E@", "https:##developer#android#com@B_android#view#ViewGroup_E@", "https:##developer#android#com@B_android#widget#FrameLayout_E@"], "ClassName": "android.support.design.widget.CollapsingToolbarLayout", "ClassDesc": "CollapsingToolbarLayout is a wrapper for @B_android#support#v7#widget#Toolbar_E@ which implements a collapsing app bar. It is designed to be used as a direct child of a @B_android#support#design#widget#AppBarLayout_E@. CollapsingToolbarLayout contains the following features: @B_android#support#design#widget#CollapsingToolbarLayout#setTitle_E@. The title appearance can be tweaked via the collapsedTextAppearance and expandedTextAppearance attributes. @B_android#support#design#widget#CollapsingToolbarLayout#setContentScrim_E@. @B_android#support#design#widget#CollapsingToolbarLayout#setStatusBarScrim_E@. This only works on https:##developer#android#com@B_android#os#Build#VERSION_CODES#LOLLIPOP_E@ devices when we set to fit system windows. @B_android#support#design#widget#CollapsingToolbarLayout#LayoutParams#COLLAPSE_MODE_PARALLAX_E@ and @B_android#support#design#widget#CollapsingToolbarLayout#LayoutParams#setParallaxMultiplier_E@. @B_android#support#v7#widget#Toolbar_E@ to be fixed in place even though this layout is moving. See @B_android#support#design#widget#CollapsingToolbarLayout#LayoutParams#COLLAPSE_MODE_PIN_E@."}