{"Functions": {"next()": {"Returns": [["@B_java#lang#Double_E@", "the next element in the iteration"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the next element in the iteration.", "history": "Added in API level 24", "FullName": "public Double next ()"}, "forEachRemaining(java.util.function.DoubleConsumer)": {"Returns": [], "Parameters": [["@B_java#util#function#DoubleConsumer_E@", "DoubleConsumer: The action to be performed for each element"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if the specified action is null"]], "SeeAlso": [], "Permissions": [], "Description": "Performs the given action for each remaining element until all elements have been processed or the action throws an exception. Actions are performed in the order of iteration, if that order is specified. Exceptions thrown by the action are relayed to the caller.", "history": "Added in API level 24", "FullName": "public void forEachRemaining (DoubleConsumer action)"}, "nextDouble()": {"Returns": [["double", "the next double element in the iteration"]], "Parameters": [], "Throws": [["@B_java#util#NoSuchElementException_E@", "if the iteration has no more elements"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the next double element in the iteration.", "history": "Added in API level 24", "FullName": "public abstract double nextDouble ()"}, "forEachRemaining(java.util.function.Consumer<?superjava.lang.Double>)": {"Returns": [], "Parameters": [["@B_java#util#function#Consumer_E@", "Consumer no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 24", "FullName": "public void forEachRemaining (Consumer<? super Double> action)"}}, "Inheritance": [], "ClassName": "java.util.PrimitiveIterator.OfDouble", "ClassDesc": "An Iterator specialized for double values."}