{"Functions": {"registerCallback(android.media.tv.TvInputManager.TvInputCallback,android.os.Handler)": {"Returns": [], "Parameters": [["@B_android#media#tv#TvInputManager#TvInputCallback_E@", "TvInputManager.TvInputCallback: A callback used to monitor status of the TV inputs. This value must never be null."], ["@B_android#os#Handler_E@", "Handler: A @B_android#os#Handler_E@ that the status change will be delivered to. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers a @B_android#media#tv#TvInputManager#TvInputCallback_E@.", "history": "Added in API level 21", "FullName": "public void registerCallback (TvInputManager.TvInputCallback callback, Handler handler)"}, "getTvInputList()": {"Returns": [["@B_java#util#List_E@", "List of @B_android#media#tv#TvInputInfo_E@ for each TV input that describes its meta information."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the complete list of TV inputs on the system.", "history": "Added in API level 21", "FullName": "public List<TvInputInfo> getTvInputList ()"}, "unregisterCallback(android.media.tv.TvInputManager.TvInputCallback)": {"Returns": [], "Parameters": [["@B_android#media#tv#TvInputManager#TvInputCallback_E@", "TvInputManager.TvInputCallback: The existing callback to remove. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Unregisters the existing @B_android#media#tv#TvInputManager#TvInputCallback_E@.", "history": "Added in API level 21", "FullName": "public void unregisterCallback (TvInputManager.TvInputCallback callback)"}, "getTvInputInfo(java.lang.String)": {"Returns": [["@B_android#media#tv#TvInputInfo_E@", "the @B_android#media#tv#TvInputInfo_E@ for a given TV input. null if not found."]], "Parameters": [["@B_java#lang#String_E@", "String: The ID of the TV input. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#media#tv#TvInputInfo_E@ for a given TV input.", "history": "Added in API level 21", "FullName": "public TvInputInfo getTvInputInfo (String inputId)"}, "isParentalControlsEnabled()": {"Returns": [["boolean", "true if the user enabled the parental controls, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the user's parental controls enabled state.", "history": "Added in API level 21", "FullName": "public boolean isParentalControlsEnabled ()"}, "isRatingBlocked(android.media.tv.TvContentRating)": {"Returns": [["boolean", "true if the given TV content rating is blocked, false otherwise."]], "Parameters": [["@B_android#media#tv#TvContentRating_E@", "TvContentRating: The TV content rating to check. Can be @B_android#media#tv#TvContentRating#UNRATED_E@. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether a given TV content rating is blocked by the user.", "history": "Added in API level 21", "FullName": "public boolean isRatingBlocked (TvContentRating rating)"}, "getInputState(java.lang.String)": {"Returns": [["int", "Value is @B_android#media#tv#TvInputManager#INPUT_STATE_CONNECTED_E@, @B_android#media#tv#TvInputManager#INPUT_STATE_CONNECTED_STANDBY_E@, or @B_android#media#tv#TvInputManager#INPUT_STATE_DISCONNECTED_E@"]], "Parameters": [["@B_java#lang#String_E@", "String: The ID of the TV input. This value must never be null."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the argument is null."]], "SeeAlso": [], "Permissions": [], "Description": "Returns the state of a given TV input. The state is one of the following: @B_android#media#tv#TvInputManager#INPUT_STATE_CONNECTED_E@ @B_android#media#tv#TvInputManager#INPUT_STATE_CONNECTED_STANDBY_E@ @B_android#media#tv#TvInputManager#INPUT_STATE_DISCONNECTED_E@", "history": "Added in API level 21", "FullName": "public int getInputState (String inputId)"}, "getBlockedRatings()": {"Returns": [["@B_java#util#List_E@", "the list of content ratings blocked by the user."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the list of blocked content ratings.", "history": "Added in API level 28", "FullName": "public List<TvContentRating> getBlockedRatings ()"}, "updateTvInputInfo(android.media.tv.TvInputInfo)": {"Returns": [], "Parameters": [["@B_android#media#tv#TvInputInfo_E@", "TvInputInfo: The TvInputInfo object that contains new information. This value must never be null."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the argument is null."]], "SeeAlso": ["@B_android#media#tv#TvInputManager#TvInputCallback#onTvInputInfoUpdated_E@"], "Permissions": [], "Description": "Updates the TvInputInfo for an existing TV input. A TV input service implementation may call this method to pass the application and system an up-to-date TvInputInfo object that describes itself. The system automatically creates a TvInputInfo object for each TV input, based on the information collected from the AndroidManifest.xml, thus it is not necessary to call this method unless such information has changed dynamically. Use @B_android#media#tv#TvInputInfo#Builder_E@ to build a new TvInputInfo object. Attempting to change information about a TV input that the calling package does not own does nothing.", "history": "Added in API level 24", "FullName": "public void updateTvInputInfo (TvInputInfo inputInfo)"}}, "Inheritance": [], "ClassName": "android.media.tv.TvInputManager", "ClassDesc": "Central system API to the overall TV input framework (TIF) architecture, which arbitrates interaction between applications and the selected TV inputs. There are three primary parties involved in the TV input framework (TIF) architecture: The A @B_android#media#tv#TvInputService_E@ represents an input source of TV, which can be a pass-through input such as HDMI, or a tuner input which provides broadcast TV programs. The system binds to the TV input per application\u2019s request. on implementing TV inputs. @B_android#media#tv#TvView_E@ or @B_android#media#tv#TvRecordingClient_E@ for further interaction such as watching and recording broadcast TV programs."}