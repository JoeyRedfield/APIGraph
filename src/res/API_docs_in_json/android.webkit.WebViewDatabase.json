{"Functions": {"clearFormData()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#webkit#WebViewDatabase#hasFormData_E@"], "Permissions": [], "Description": "Clears any saved data for web forms.", "history": "Added in API level 1 Deprecated in API level 26", "FullName": "public abstract void clearFormData ()"}, "clearHttpAuthUsernamePassword()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#webkit#WebViewDatabase#getHttpAuthUsernamePassword_E@", "@B_android#webkit#WebViewDatabase#setHttpAuthUsernamePassword_E@", "@B_android#webkit#WebViewDatabase#hasHttpAuthUsernamePassword_E@"], "Permissions": [], "Description": "Clears any saved credentials for HTTP authentication. This method only clears the username and password stored in WebViewDatabase instance. The username and password are not read from the @B_android#webkit#WebViewDatabase_E@ during @B_android#webkit#WebViewClient#onReceivedHttpAuthRequest_E@. It is up to the app to do this or not. The username and password used for http authentication might be cached in the network stack itself, and are not cleared when this method is called. WebView does not provide a special mechanism to clear HTTP authentication for implementing client logout. The client logout mechanism should be implemented by the Web site designer (such as server sending a HTTP 401 for invalidating credentials).", "history": "Added in API level 1", "FullName": "public abstract void clearHttpAuthUsernamePassword ()"}, "hasHttpAuthUsernamePassword()": {"Returns": [["boolean", "whether there are any saved credentials"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#webkit#WebViewDatabase#getHttpAuthUsernamePassword_E@", "@B_android#webkit#WebViewDatabase#setHttpAuthUsernamePassword_E@", "@B_android#webkit#WebViewDatabase#clearHttpAuthUsernamePassword_E@"], "Permissions": [], "Description": "Gets whether there are any saved credentials for HTTP authentication.", "history": "Added in API level 1", "FullName": "public abstract boolean hasHttpAuthUsernamePassword ()"}, "setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the host to which the credentials apply"], ["@B_java#lang#String_E@", "String: the realm to which the credentials apply"], ["@B_java#lang#String_E@", "String: the username"], ["@B_java#lang#String_E@", "String: the password"]], "Throws": [], "SeeAlso": ["@B_android#webkit#WebViewDatabase#getHttpAuthUsernamePassword_E@", "@B_android#webkit#WebViewDatabase#hasHttpAuthUsernamePassword_E@", "@B_android#webkit#WebViewDatabase#clearHttpAuthUsernamePassword_E@"], "Permissions": [], "Description": "Stores HTTP authentication credentials for a given host and realm to the @B_android#webkit#WebViewDatabase_E@ instance. To use HTTP authentication, the embedder application has to implement @B_android#webkit#WebViewClient#onReceivedHttpAuthRequest_E@, and call @B_android#webkit#HttpAuthHandler#proceed_E@ with the correct username and password. The embedder app can get the username and password any way it chooses, and does not have to use @B_android#webkit#WebViewDatabase_E@. Notes: @B_android#webkit#WebViewDatabase_E@ is provided only as a convenience to store and retrieve http authentication credentials. WebView does not read from it during HTTP authentication. WebView does not provide a special mechanism to clear HTTP authentication credentials for implementing client logout. The client logout mechanism should be implemented by the Web site designer (such as server sending a HTTP 401 for invalidating credentials).", "history": "Added in API level 26", "FullName": "public abstract void setHttpAuthUsernamePassword (String host, String realm, String username, String password)"}, "hasFormData()": {"Returns": [["boolean", "whether there is any saved data for web forms"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#webkit#WebViewDatabase#clearFormData_E@"], "Permissions": [], "Description": "Gets whether there is any saved data for web forms.", "history": "Added in API level 1 Deprecated in API level 26", "FullName": "public abstract boolean hasFormData ()"}, "getInstance(android.content.Context)": {"Returns": [["@B_android#webkit#WebViewDatabase_E@", "no returns description in source"]], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public static WebViewDatabase getInstance (Context context)"}, "clearUsernamePassword()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#webkit#WebView#savePassword_E@", "@B_android#webkit#WebViewDatabase#hasUsernamePassword_E@"], "Permissions": [], "Description": "Saving passwords in WebView will not be supported in future versions. Clears any saved username/password pairs for web forms. Note that these are unrelated to HTTP authentication credentials.", "history": "Added in API level 1 Deprecated in API level 18", "FullName": "public abstract void clearUsernamePassword ()"}, "WebViewDatabase()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This class should not be constructed by applications, use @B_android#webkit#WebViewDatabase#getInstance_E@ instead to fetch the singleton instance.", "history": "Added in API level 22", "FullName": "public WebViewDatabase ()"}, "hasUsernamePassword()": {"Returns": [["boolean", "true if there are any saved username/password pairs"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#webkit#WebView#savePassword_E@", "@B_android#webkit#WebViewDatabase#clearUsernamePassword_E@"], "Permissions": [], "Description": "Saving passwords in WebView will not be supported in future versions. Gets whether there are any saved username/password pairs for web forms. Note that these are unrelated to HTTP authentication credentials.", "history": "Added in API level 1 Deprecated in API level 18", "FullName": "public abstract boolean hasUsernamePassword ()"}, "getHttpAuthUsernamePassword(java.lang.String,java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "the credentials as a String array, if found. The first element is the username and the second element is the password. null if no credentials are found."]], "Parameters": [["@B_java#lang#String_E@", "String: the host to which the credentials apply"], ["@B_java#lang#String_E@", "String: the realm to which the credentials apply"]], "Throws": [], "SeeAlso": ["@B_android#webkit#WebViewDatabase#setHttpAuthUsernamePassword_E@", "@B_android#webkit#WebViewDatabase#hasHttpAuthUsernamePassword_E@", "@B_android#webkit#WebViewDatabase#clearHttpAuthUsernamePassword_E@"], "Permissions": [], "Description": "Retrieves HTTP authentication credentials for a given host and realm from the @B_android#webkit#WebViewDatabase_E@ instance.", "history": "Added in API level 26", "FullName": "public abstract String[] getHttpAuthUsernamePassword (String host, String realm)"}}, "Inheritance": [], "ClassName": "android.webkit.WebViewDatabase", "ClassDesc": "This class allows developers to determine whether any WebView used in the application has stored any of the following types of browsing data and to clear any such stored data for all WebViews in the application. Username/password pairs for web forms HTTP authentication username/password pairs Data entered into text fields (e.g. for autocomplete suggestions)"}