{"Functions": {"stopNestedScroll(int)": {"Returns": [], "Parameters": [["int", "int: the type of input which cause this scroll event"]], "Throws": [], "SeeAlso": ["@B_android#support#v4#view#NestedScrollingChild2#startNestedScroll_E@"], "Permissions": [], "Description": "Stop a nested scroll in progress for the given input type. Calling this method when a nested scroll is not currently in progress is harmless.", "history": "added in version 26.0.0-beta2", "FullName": "void stopNestedScroll (int type)"}, "hasNestedScrollingParent(int)": {"Returns": [["boolean", "whether this view has a nested scrolling parent"]], "Parameters": [["int", "int: the type of input which cause this scroll event"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this view has a nested scrolling parent for the given input type. The presence of a nested scrolling parent indicates that this view has initiated a nested scroll and it was accepted by an ancestor view further up the view hierarchy.", "history": "added in version 26.0.0-beta2", "FullName": "boolean hasNestedScrollingParent (int type)"}, "startNestedScroll(int, int)": {"Returns": [["boolean", "true if a cooperative parent was found and nested scrolling has been enabled for the current gesture."]], "Parameters": [["int", "int: Flags consisting of a combination of @B_android#support#v4#view#ViewCompat#SCROLL_AXIS_HORIZONTAL_E@ and/or @B_android#support#v4#view#ViewCompat#SCROLL_AXIS_VERTICAL_E@."], ["int", "int: the type of input which cause this scroll event"]], "Throws": [], "SeeAlso": ["@B_android#support#v4#view#NestedScrollingChild2#stopNestedScroll_E@", "@B_android#support#v4#view#NestedScrollingChild2#dispatchNestedPreScroll_E@", "@B_android#support#v4#view#NestedScrollingChild2#dispatchNestedScroll_E@"], "Permissions": [], "Description": "Begin a nestable scroll operation along the given axes, for the given input type. A view starting a nested scroll promises to abide by the following contract: The view will call startNestedScroll upon initiating a scroll operation. In the case of a touch scroll type this corresponds to the initial @B_android#view#MotionEvent#ACTION_DOWN_E@. In the case of touch scrolling the nested scroll will be terminated automatically in the same manner as @B_android#view#ViewParent#requestDisallowInterceptTouchEvent_E@. In the event of programmatic scrolling the caller must explicitly call @B_android#support#v4#view#NestedScrollingChild2#stopNestedScroll_E@ to indicate the end of the nested scroll. If startNestedScroll returns true, a cooperative parent was found. If it returns false the caller may ignore the rest of this contract until the next scroll. Calling startNestedScroll while a nested scroll is already in progress will return true. At each incremental step of the scroll the caller should invoke @B_android#support#v4#view#NestedScrollingChild2#dispatchNestedPreScroll_E@ once it has calculated the requested scrolling delta. If it returns true the nested scrolling parent at least partially consumed the scroll and the caller should adjust the amount it scrolls by. After applying the remainder of the scroll delta the caller should invoke @B_android#support#v4#view#NestedScrollingChild2#dispatchNestedScroll_E@, passing both the delta consumed and the delta unconsumed. A nested scrolling parent may treat these values differently. See @B_android#support#v4#view#NestedScrollingParent2#onNestedScroll_E@.", "history": "added in version 26.0.0-beta2", "FullName": "boolean startNestedScroll (int axes, int type)"}}, "Inheritance": [], "ClassName": "android.support.v4.view.NestedScrollingChild2", "ClassDesc": "This interface should be implemented by https:##developer#android#com@B_android#view#View_E@ subclasses that wish to support dispatching nested scrolling operations to a cooperating parent https:##developer#android#com@B_android#view#ViewGroup_E@. Classes implementing this interface should create a final instance of a @B_android#support#v4#view#NestedScrollingChildHelper_E@ as a field and delegate any View methods to the NestedScrollingChildHelper methods of the same signature. Views invoking nested scrolling functionality should always do so from the relevant @B_android#support#v4#view#ViewCompat_E@, @B_android#support#v4#view#ViewGroupCompat_E@ or @B_android#support#v4#view#ViewParentCompat_E@ compatibility shim static methods. This ensures interoperability with nested scrolling views on all versions of Android."}