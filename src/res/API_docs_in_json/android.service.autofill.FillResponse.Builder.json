{"Functions": {"setFlags(int)": {"Returns": [["@B_android#service#autofill#FillResponse#Builder_E@", "This builder. This value will never be null."]], "Parameters": [["int", "int: a combination of @B_android#service#autofill#FillResponse#FLAG_TRACK_CONTEXT_COMMITED_E@ and @B_android#service#autofill#FillResponse#FLAG_DISABLE_ACTIVITY_ONLY_E@, or 0. Value is either 0 or a combination of @B_android#service#autofill#FillResponse#FLAG_TRACK_CONTEXT_COMMITED_E@, and @B_android#service#autofill#FillResponse#FLAG_DISABLE_ACTIVITY_ONLY_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets flags changing the response behavior.", "history": "Added in API level 28", "FullName": "public FillResponse.Builder setFlags (int flags)"}, "setFooter(android.widget.RemoteViews)": {"Returns": [["@B_android#service#autofill#FillResponse#Builder_E@", "this builder This value will never be null."]], "Parameters": [["@B_android#widget#RemoteViews_E@", "RemoteViews: a presentation to represent the footer. This presentation is not clickable \u2014calling @B_android#widget#RemoteViews#setOnClickPendingIntent_E@ on it would have no effect. This value must never be null."]], "Throws": [["@B_java#lang#IllegalStateException_E@", "if the FillResponse @B_android#service#autofill#FillResponse#Builder#setAuthentication_E@."]], "SeeAlso": [], "Permissions": [], "Description": "Sets a footer to be shown as the last element in the list of datasets. When this method is called, you must also @B_android#service#autofill#FillResponse#Builder#addDataset_E@, otherwise @B_android#service#autofill#FillResponse#Builder#build_E@ throws an @B_java#lang#IllegalStateException_E@. Similarly, this method should only be used on @B_android#service#autofill#FillResponse_E@ that do not require authentication (as the footer could have been set directly in the main presentation in these cases). Theme does not work with RemoteViews layout. Avoid hardcoded text color or background color: Autofill on different platforms may have different themes.", "history": "Added in API level 28", "FullName": "public FillResponse.Builder setFooter (RemoteViews footer)"}, "setFieldClassificationIds(android.view.autofill.AutofillId...)": {"Returns": [["@B_android#service#autofill#FillResponse#Builder_E@", "no returns description in source"]], "Parameters": [["@B_android#view#autofill#AutofillId_E@", "AutofillId: This value must never be null."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "is length of ids args is more than @B_android#service#autofill#UserData#getMaxFieldClassificationIdsSize_E@."], ["@B_java#lang#IllegalStateException_E@", "if @B_android#service#autofill#FillResponse#Builder#build_E@ or @B_android#service#autofill#FillResponse#Builder#disableAutofill_E@ was already called."], ["@B_java#lang#NullPointerException_E@", "if ids or any element on it is null."]], "SeeAlso": [], "Permissions": [], "Description": "Sets which fields are used for @B_android#service#autofill#FillResponse#FLAG_TRACK_CONTEXT_COMMITED_E@ to the @B_android#service#autofill#FillResponse#Builder#setFlags_E@.", "history": "Added in API level 28", "FullName": "public FillResponse.Builder setFieldClassificationIds (AutofillId... ids)"}, "setHeader(android.widget.RemoteViews)": {"Returns": [["@B_android#service#autofill#FillResponse#Builder_E@", "this builder This value will never be null."]], "Parameters": [["@B_android#widget#RemoteViews_E@", "RemoteViews: a presentation to represent the header. This presentation is not clickable \u2014calling @B_android#widget#RemoteViews#setOnClickPendingIntent_E@ on it would have no effect. This value must never be null."]], "Throws": [["@B_java#lang#IllegalStateException_E@", "if an @B_android#service#autofill#FillResponse#Builder#setAuthentication_E@ was already set for this builder."]], "SeeAlso": [], "Permissions": [], "Description": "Sets a header to be shown as the first element in the list of datasets. When this method is called, you must also @B_android#service#autofill#FillResponse#Builder#addDataset_E@, otherwise @B_android#service#autofill#FillResponse#Builder#build_E@ throws an @B_java#lang#IllegalStateException_E@. Similarly, this method should only be used on @B_android#service#autofill#FillResponse_E@ that do not require authentication (as the header could have been set directly in the main presentation in these cases). Theme does not work with RemoteViews layout. Avoid hardcoded text color or background color: Autofill on different platforms may have different themes.", "history": "Added in API level 28", "FullName": "public FillResponse.Builder setHeader (RemoteViews header)"}, "setClientState(android.os.Bundle)": {"Returns": [["@B_android#service#autofill#FillResponse#Builder_E@", "This builder. This value will never be null."]], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: The custom client state. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets a bundle with state that is passed to subsequent APIs that manipulate this response. You can use this bundle to store intermediate state that is passed to subsequent calls to @B_android#service#autofill#AutofillService#onFillRequest_E@ and @B_android#service#autofill#AutofillService#onSaveRequest_E@, and you can also retrieve it by calling @B_android#service#autofill#FillEventHistory#Event#getClientState_E@. If this method is called on multiple @B_android#service#autofill#FillResponse_E@ objects for the same screen, just the latest bundle is passed back to the service.", "history": "Added in API level 26", "FullName": "public FillResponse.Builder setClientState (Bundle clientState)"}, "FillResponse.Builder()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 26", "FullName": "public FillResponse.Builder ()"}, "disableAutofill(long)": {"Returns": [["@B_android#service#autofill#FillResponse#Builder_E@", "this builder This value will never be null."]], "Parameters": [["long", "long: duration to disable autofill, in milliseconds."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if duration is not a positive number."], ["@B_java#lang#IllegalStateException_E@", "if either @B_android#service#autofill#FillResponse#Builder#addDataset_E@, @B_android#service#autofill#FillResponse#Builder#setAuthentication_E@, @B_android#service#autofill#FillResponse#Builder#setSaveInfo_E@, @B_android#service#autofill#FillResponse#Builder#setClientState_E@, or @B_android#service#autofill#FillResponse#Builder#setFieldClassificationIds_E@ was already called."]], "SeeAlso": [], "Permissions": [], "Description": "Disables autofill for the app or activity. This method is useful to optimize performance in cases where the service knows it can not autofill an app\u2014for example, when the service has a list of \"blacklisted\" apps such as office suites. By default, it disables autofill for all activities in the app, unless the response is @B_android#service#autofill#FillResponse#Builder#setFlags_E@ with @B_android#service#autofill#FillResponse#FLAG_DISABLE_ACTIVITY_ONLY_E@. Autofill for the app or activity is automatically re-enabled after any of the following conditions:", "history": "Added in API level 28", "FullName": "public FillResponse.Builder disableAutofill (long duration)"}, "setSaveInfo(android.service.autofill.SaveInfo)": {"Returns": [["@B_android#service#autofill#FillResponse#Builder_E@", "This builder. This value will never be null."]], "Parameters": [["@B_android#service#autofill#SaveInfo_E@", "SaveInfo: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the @B_android#service#autofill#SaveInfo_E@ associated with this response.", "history": "Added in API level 26", "FullName": "public FillResponse.Builder setSaveInfo (SaveInfo saveInfo)"}, "setIgnoredIds(android.view.autofill.AutofillId...)": {"Returns": [["@B_android#service#autofill#FillResponse#Builder_E@", "This value will never be null."]], "Parameters": [["@B_android#view#autofill#AutofillId_E@", "AutofillId no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Specifies views that should not trigger new @B_android#service#autofill#AutofillService#onFillRequest_E@ requests. This is typically used when the service cannot autofill the view; for example, a text field representing the result of a Captcha challenge.", "history": "Added in API level 26", "FullName": "public FillResponse.Builder setIgnoredIds (AutofillId... ids)"}, "setUserData(android.service.autofill.UserData)": {"Returns": [["@B_android#service#autofill#FillResponse#Builder_E@", "this builder This value will never be null."]], "Parameters": [["@B_android#service#autofill#UserData_E@", "UserData: This value must never be null."]], "Throws": [["@B_java#lang#IllegalStateException_E@", "if the FillResponse @B_android#service#autofill#FillResponse#Builder#setAuthentication_E@."]], "SeeAlso": [], "Permissions": [], "Description": "Sets a specific @B_android#service#autofill#UserData_E@ for field classification for this request only. Any fields in this UserData will override corresponding fields in the generic UserData object", "history": "Added in API level 29", "FullName": "public FillResponse.Builder setUserData (UserData userData)"}, "build()": {"Returns": [["@B_android#service#autofill#FillResponse_E@", "A built response. This value will never be null."]], "Parameters": [], "Throws": [["@B_java#lang#IllegalStateException_E@", "if any of the following conditions occur: build() was already called. No call was made to addDataset(android.service.autofill.Dataset), setAuthentication(android.view.autofill.AutofillId[], android.content.IntentSender, android.widget.RemoteViews), setSaveInfo(android.service.autofill.SaveInfo), disableAutofill(long), setClientState(android.os.Bundle), or setFieldClassificationIds(android.view.autofill.AutofillId). setHeader(android.widget.RemoteViews) or setFooter(android.widget.RemoteViews) is called without any previous calls to addDataset(android.service.autofill.Dataset)."]], "SeeAlso": [], "Permissions": [], "Description": "Builds a new @B_android#service#autofill#FillResponse_E@ instance.", "history": "Added in API level 26", "FullName": "public FillResponse build ()"}, "addDataset(android.service.autofill.Dataset)": {"Returns": [["@B_android#service#autofill#FillResponse#Builder_E@", "This builder. This value will never be null."]], "Parameters": [["@B_android#service#autofill#Dataset_E@", "Dataset: This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds a new @B_android#service#autofill#Dataset_E@ to this response. @B_android#os#Build#VERSION_CODES#O_E@, the total number of datasets is limited by the Binder transaction size, so it's recommended to keep it small (in the range of 10-20 at most) and use pagination by adding a fake @B_android#service#autofill#Dataset#Builder#setAuthentication_E@ at the end with a presentation string like \"Next 10\" that would return a new @B_android#service#autofill#FillResponse_E@ with the next 10 datasets, and so on. This limitation was lifted on Android @B_android#os#Build#VERSION_CODES#O_MR1_E@, although the Binder transaction size can still be reached if each dataset itself is too big.", "history": "Added in API level 26", "FullName": "public FillResponse.Builder addDataset (Dataset dataset)"}, "setAuthentication(android.view.autofill.AutofillId[],android.content.IntentSender,android.widget.RemoteViews)": {"Returns": [["@B_android#service#autofill#FillResponse#Builder_E@", "This builder."]], "Parameters": [["@B_android#view#autofill#AutofillId_E@", "AutofillId: id of Views that when focused will display the authentication UI. This value must never be null."], ["@B_android#content#IntentSender_E@", "IntentSender: Intent to an activity with your authentication flow. This value may be null."], ["@B_android#widget#RemoteViews_E@", "RemoteViews: The presentation to visualize the response. This value may be null."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if any of the following occurs: ids is null ids is empty ids contains a null element both authentication and presentation are null both authentication and presentation are non-null"], ["@B_java#lang#IllegalStateException_E@", "if a @B_android#service#autofill#FillResponse#Builder#setHeader_E@ or a @B_android#service#autofill#FillResponse#Builder#setFooter_E@ are already set for this builder."]], "SeeAlso": ["@B_android#app#PendingIntent#getIntentSender_E@"], "Permissions": [], "Description": "Triggers a custom UI before before autofilling the screen with any data set in this response. @B_android#service#autofill#AutofillService_E@ for examples. This is typically useful when a user interaction is required to unlock their data vault if you encrypt the data set labels and data set data. It is recommended to encrypt only the sensitive data and not the data set labels which would allow auth on the data set level leading to a better user experience. Note that if you use sensitive data as a label, for example an email address, then it should also be encrypted. The provided @B_android#app#PendingIntent_E@ must be an @B_android#app#Activity_E@ which implements your authentication flow. Also if you provide an auth intent you also need to specify the presentation view to be shown in the fill UI for the user to trigger your authentication flow. When a user triggers autofill, the system launches the provided intent whose extras will have the @B_android#view#autofill#AutofillManager#EXTRA_ASSIST_STRUCTURE_E@ and your @B_android#view#autofill#AutofillManager#EXTRA_CLIENT_STATE_E@. Once you complete your authentication flow you should set the @B_android#app#Activity_E@ result to @B_android#app#Activity#RESULT_OK_E@ and set the @B_android#view#autofill#AutofillManager#EXTRA_AUTHENTICATION_RESULT_E@ extra with the fully populated @B_android#service#autofill#FillResponse_E@ (or null if the screen cannot be autofilled). For example, if you provided an empty @B_android#service#autofill#FillResponse_E@ because the user's data was locked and marked that the response needs an authentication then in the response returned if authentication succeeds you need to provide all available data sets some of which may need to be further authenticated, for example a credit card whose CVV needs to be entered. If you provide an authentication intent you must also provide a presentation which is used to visualize visualize the response for triggering the authentication flow. @B_android#app#PendingIntent#FLAG_IMMUTABLE_E@ as the platform needs to fill in the authentication arguments. Theme does not work with RemoteViews layout. Avoid hardcoded text color or background color: Autofill on different platforms may have different themes.", "history": "Added in API level 26", "FullName": "public FillResponse.Builder setAuthentication (AutofillId[] ids, IntentSender authentication, RemoteViews presentation)"}}, "Inheritance": [], "ClassName": "android.service.autofill.FillResponse.Builder", "ClassDesc": "Builder for @B_android#service#autofill#FillResponse_E@ objects. You must to provide at least one dataset or set an authentication intent with a presentation view."}