{"Functions": {"NotificationChannel(java.lang.String,java.lang.CharSequence,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The id of the channel. Must be unique per package. The value may be truncated if it is too long."], ["@B_java#lang#CharSequence_E@", "CharSequence: The user visible name of the channel. You can rename this channel when the system locale changes by listening for the @B_android#content#Intent#ACTION_LOCALE_CHANGED_E@ broadcast. The recommended maximum length is 40 characters; the value may be truncated if it is too long."], ["int", "int: The importance of the channel. This controls how interruptive notifications posted to this channel are. Value is @B_android#app#NotificationManager#IMPORTANCE_UNSPECIFIED_E@, @B_android#app#NotificationManager#IMPORTANCE_NONE_E@, @B_android#app#NotificationManager#IMPORTANCE_MIN_E@, @B_android#app#NotificationManager#IMPORTANCE_LOW_E@, @B_android#app#NotificationManager#IMPORTANCE_DEFAULT_E@, or @B_android#app#NotificationManager#IMPORTANCE_HIGH_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a notification channel.", "history": "Added in API level 26", "FullName": "public NotificationChannel (String id, CharSequence name, int importance)"}, "setDescription(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the user visible description of this channel. The recommended maximum length is 300 characters; the value may be truncated if it is too long.", "history": "Added in API level 26", "FullName": "public void setDescription (String description)"}, "setVibrationPattern(long[])": {"Returns": [], "Parameters": [["long[]", "long no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the vibration pattern for notifications posted to this channel. If the provided pattern is valid (non-null, non-empty), will @B_android#app#NotificationChannel#enableVibration_E@ enable vibration} as well. Otherwise, vibration will be disabled. Only modifiable before the channel is submitted to @B_android#app#NotificationManager#createNotificationChannel_E@.", "history": "Added in API level 26", "FullName": "public void setVibrationPattern (long[] vibrationPattern)"}, "getLightColor()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the notification light color for notifications posted to this channel. Irrelevant unless @B_android#app#NotificationChannel#shouldShowLights_E@.", "history": "Added in API level 26", "FullName": "public int getLightColor ()"}, "getGroup()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns what group this channel belongs to. This is used only for visually grouping channels in the UI.", "history": "Added in API level 26", "FullName": "public String getGroup ()"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 26", "FullName": "public int describeContents ()"}, "setAllowBubbles(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#app#Notification#getBubbleMetadata_E@"], "Permissions": [], "Description": "Sets whether notifications posted to this channel can appear outside of the notification shade, floating over other apps' content as a bubble. This value will be ignored for channels that aren't allowed to pop on screen (that is, channels whose @B_android#app#NotificationChannel#getImportance_E@ is < @B_android#app#NotificationManager#IMPORTANCE_HIGH_E@. Only modifiable before the channel is submitted to * @B_android#app#NotificationManager#createNotificationChannel_E@.", "history": "Added in API level 29", "FullName": "public void setAllowBubbles (boolean allowBubbles)"}, "setSound(android.net.Uri,android.media.AudioAttributes)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri no parameter comment"], ["@B_android#media#AudioAttributes_E@", "AudioAttributes no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the sound that should be played for notifications posted to this channel and its audio attributes. Notification channels with an @B_android#app#NotificationChannel#getImportance_E@ of at least @B_android#app#NotificationManager#IMPORTANCE_DEFAULT_E@ should have a sound. Only modifiable before the channel is submitted to @B_android#app#NotificationManager#createNotificationChannel_E@.", "history": "Added in API level 26", "FullName": "public void setSound (Uri sound, AudioAttributes audioAttributes)"}, "enableVibration(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether notification posted to this channel should vibrate. The vibration pattern can be set with @B_android#app#NotificationChannel#setVibrationPattern_E@. Only modifiable before the channel is submitted to @B_android#app#NotificationManager#createNotificationChannel_E@.", "history": "Added in API level 26", "FullName": "public void enableVibration (boolean vibration)"}, "getSound()": {"Returns": [["@B_android#net#Uri_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the notification sound for this channel.", "history": "Added in API level 26", "FullName": "public Uri getSound ()"}, "setImportance(int)": {"Returns": [], "Parameters": [["int", "int: the amount the user should be interrupted by notifications from this channel. Value is @B_android#app#NotificationManager#IMPORTANCE_UNSPECIFIED_E@, @B_android#app#NotificationManager#IMPORTANCE_NONE_E@, @B_android#app#NotificationManager#IMPORTANCE_MIN_E@, @B_android#app#NotificationManager#IMPORTANCE_LOW_E@, @B_android#app#NotificationManager#IMPORTANCE_DEFAULT_E@, or @B_android#app#NotificationManager#IMPORTANCE_HIGH_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the level of interruption of this notification channel. Only modifiable before the channel is submitted to @B_android#app#NotificationManager#createNotificationChannel_E@.", "history": "Added in API level 26", "FullName": "public void setImportance (int importance)"}, "getAudioAttributes()": {"Returns": [["@B_android#media#AudioAttributes_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the audio attributes for sound played by notifications posted to this channel.", "history": "Added in API level 26", "FullName": "public AudioAttributes getAudioAttributes ()"}, "setName(java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the user visible name of this channel. The recommended maximum length is 40 characters; the value may be truncated if it is too long.", "history": "Added in API level 26", "FullName": "public void setName (CharSequence name)"}, "getId()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the id of this channel.", "history": "Added in API level 26", "FullName": "public String getId ()"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if this object is the same as the obj argument; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the reference object with which to compare."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether some other object is \"equal to\" this one. The equals method implements an equivalence relation on non-null object references: It is x, x.equals(x) should return true. It is x and y, x.equals(y) should return true if and only if y.equals(x) returns true. It is x, y, and z, if x.equals(y) returns true and y.equals(z) returns true, then x.equals(z) should return true. It is x and y, multiple invocations of x.equals(y) consistently return true or consistently return false, provided no information used in equals comparisons on the objects is modified. For any non-null reference value x, x.equals(null) should return false. The equals method for class Object implements the most discriminating possible equivalence relation on objects; that is, for any non-null reference values x and y, this method returns true if and only if x and y refer to the same object (x == y has the value true). Note that it is generally necessary to override the hashCode method whenever this method is overridden, so as to maintain the general contract for the hashCode method, which states that equal objects must have equal hash codes.", "history": "Added in API level 26", "FullName": "public boolean equals (Object o)"}, "setLightColor(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the notification light color for notifications posted to this channel, if lights are @B_android#app#NotificationChannel#enableLights_E@ on this channel and the device supports that feature. Only modifiable before the channel is submitted to @B_android#app#NotificationManager#createNotificationChannel_E@.", "history": "Added in API level 26", "FullName": "public void setLightColor (int argb)"}, "getDescription()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the user visible description of this channel.", "history": "Added in API level 26", "FullName": "public String getDescription ()"}, "getName()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the user visible name of this channel.", "history": "Added in API level 26", "FullName": "public CharSequence getName ()"}, "hashCode()": {"Returns": [["int", "a hash code value for this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code value for the object. This method is supported for the benefit of hash tables such as those provided by @B_java#util#HashMap_E@. The general contract of hashCode is: Whenever it is invoked on the same object more than once during an execution of a Java application, the hashCode method must consistently return the same integer, provided no information used in equals comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application. If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result. It is not required that if two objects are unequal according to the @B_java#lang#Object#equals_E@ method, then calling the hashCode method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables. As much as is reasonably practical, the hashCode method defined by class Object does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the Java\u2122 programming language.)", "history": "Added in API level 26", "FullName": "public int hashCode ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 26", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "canBypassDnd()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Whether or not notifications posted to this channel can bypass the Do Not Disturb @B_android#app#NotificationManager#INTERRUPTION_FILTER_PRIORITY_E@ mode.", "history": "Added in API level 26", "FullName": "public boolean canBypassDnd ()"}, "setGroup(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the id of a group created by @B_android#app#NotificationManager#createNotificationChannelGroup_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets what group this channel belongs to. Group information is only used for presentation, not for behavior. Only modifiable before the channel is submitted to @B_android#app#NotificationManager#createNotificationChannel_E@, unless the channel is not currently part of a group.", "history": "Added in API level 26", "FullName": "public void setGroup (String groupId)"}, "hasUserSetImportance()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#app#NotificationChannel#getImportance_E@"], "Permissions": [], "Description": "Returns whether the user has chosen the importance of this channel, either to affirm the initial selection from the app, or changed it to be higher or lower.", "history": "Added in API level 29", "FullName": "public boolean hasUserSetImportance ()"}, "shouldVibrate()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether notifications posted to this channel always vibrate.", "history": "Added in API level 26", "FullName": "public boolean shouldVibrate ()"}, "getImportance()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the user specified importance e.g. @B_android#app#NotificationManager#IMPORTANCE_LOW_E@ for notifications posted to this channel. Note: This value might be > @B_android#app#NotificationManager#IMPORTANCE_NONE_E@, but notifications posted to this channel will not be shown to the user if the parent @B_android#app#NotificationChannelGroup_E@ or app is blocked. See @B_android#app#NotificationChannelGroup#isBlocked_E@ and @B_android#app#NotificationManager#areNotificationsEnabled_E@.", "history": "Added in API level 26", "FullName": "public int getImportance ()"}, "setBypassDnd(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether or not notifications posted to this channel can interrupt the user in @B_android#app#NotificationManager#INTERRUPTION_FILTER_PRIORITY_E@ mode. Only modifiable by the system and notification ranker.", "history": "Added in API level 26", "FullName": "public void setBypassDnd (boolean bypassDnd)"}, "canShowBadge()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether notifications posted to this channel can appear as badges in a Launcher application. Note that badging may be disabled for other reasons.", "history": "Added in API level 26", "FullName": "public boolean canShowBadge ()"}, "shouldShowLights()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether notifications posted to this channel trigger notification lights.", "history": "Added in API level 26", "FullName": "public boolean shouldShowLights ()"}, "setShowBadge(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true if badges should be allowed to be shown."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether notifications posted to this channel can appear as application icon badges in a Launcher. Only modifiable before the channel is submitted to @B_android#app#NotificationManager#createNotificationChannel_E@.", "history": "Added in API level 26", "FullName": "public void setShowBadge (boolean showBadge)"}, "canBubble()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether notifications posted to this channel can display outside of the notification shade, in a floating window on top of other apps.", "history": "Added in API level 29", "FullName": "public boolean canBubble ()"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 26", "FullName": "public String toString ()"}, "enableLights(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether notifications posted to this channel should display notification lights, on devices that support that feature. Only modifiable before the channel is submitted to @B_android#app#NotificationManager#createNotificationChannel_E@.", "history": "Added in API level 26", "FullName": "public void enableLights (boolean lights)"}, "getVibrationPattern()": {"Returns": [["long[]", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the vibration pattern for notifications posted to this channel. Will be ignored if vibration is not enabled (@B_android#app#NotificationChannel#shouldVibrate_E@.", "history": "Added in API level 26", "FullName": "public long[] getVibrationPattern ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 26", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getLockscreenVisibility()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether or not notifications posted to this channel are shown on the lockscreen in full or redacted form.", "history": "Added in API level 26", "FullName": "public int getLockscreenVisibility ()"}, "setLockscreenVisibility(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether notifications posted to this channel appear on the lockscreen or not, and if so, whether they appear in a redacted form. See e.g. @B_android#app#Notification#VISIBILITY_SECRET_E@. Only modifiable by the system and notification ranker.", "history": "Added in API level 26", "FullName": "public void setLockscreenVisibility (int lockscreenVisibility)"}}, "Inheritance": [], "ClassName": "android.app.NotificationChannel", "ClassDesc": "A representation of settings that apply to a collection of similarly themed notifications."}