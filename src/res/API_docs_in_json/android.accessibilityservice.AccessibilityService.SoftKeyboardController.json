{"Functions": {"addOnShowModeChangedListener(android.accessibilityservice.AccessibilityService.SoftKeyboardController.OnShowModeChangedListener)": {"Returns": [], "Parameters": [["@B_android#accessibilityservice#AccessibilityService#SoftKeyboardController#OnShowModeChangedListener_E@", "AccessibilityService.SoftKeyboardController.OnShowModeChangedListener: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds the specified change listener to the list of show mode change listeners. The callback will occur on the service's main thread. Listener is not called on registration.", "history": "Added in API level 24", "FullName": "public void addOnShowModeChangedListener (AccessibilityService.SoftKeyboardController.OnShowModeChangedListener listener)"}, "removeOnShowModeChangedListener(android.accessibilityservice.AccessibilityService.SoftKeyboardController.OnShowModeChangedListener)": {"Returns": [["boolean", "true if the listener was removed, false otherwise"]], "Parameters": [["@B_android#accessibilityservice#AccessibilityService#SoftKeyboardController#OnShowModeChangedListener_E@", "AccessibilityService.SoftKeyboardController.OnShowModeChangedListener: the listener to remove, must be non-null This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes the specified change listener from the list of keyboard show mode change listeners.", "history": "Added in API level 24", "FullName": "public boolean removeOnShowModeChangedListener (AccessibilityService.SoftKeyboardController.OnShowModeChangedListener listener)"}, "setShowMode(int)": {"Returns": [["boolean", "true on success"]], "Parameters": [["int", "int: the new show mode for the soft keyboard Value is @B_android#accessibilityservice#AccessibilityService#SHOW_MODE_AUTO_E@, @B_android#accessibilityservice#AccessibilityService#SHOW_MODE_HIDDEN_E@, or @B_android#accessibilityservice#AccessibilityService#SHOW_MODE_IGNORE_HARD_KEYBOARD_E@"]], "Throws": [], "SeeAlso": ["@B_android#accessibilityservice#AccessibilityService_E@"], "Permissions": [], "Description": "Sets the soft keyboard show mode. @B_android#accessibilityservice#AccessibilityService#onServiceConnected_E@ has not yet been called) or the service has been disconnected, this method will have no effect and return false.", "history": "Added in API level 24", "FullName": "public boolean setShowMode (int showMode)"}, "addOnShowModeChangedListener(android.accessibilityservice.AccessibilityService.SoftKeyboardController.OnShowModeChangedListener,android.os.Handler)": {"Returns": [], "Parameters": [["@B_android#accessibilityservice#AccessibilityService#SoftKeyboardController#OnShowModeChangedListener_E@", "AccessibilityService.SoftKeyboardController.OnShowModeChangedListener: the listener to add, must be non-null This value must never be null."], ["@B_android#os#Handler_E@", "Handler: the handler on which to callback should execute, or null to execute on the service's main thread This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds the specified change listener to the list of soft keyboard show mode change listeners. The callback will occur on the specified @B_android#os#Handler_E@'s thread, or on the services's main thread if the handler is null.", "history": "Added in API level 24", "FullName": "public void addOnShowModeChangedListener (AccessibilityService.SoftKeyboardController.OnShowModeChangedListener listener, Handler handler)"}, "getShowMode()": {"Returns": [["int", "the current soft keyboard show mode Value is @B_android#accessibilityservice#AccessibilityService#SHOW_MODE_AUTO_E@, @B_android#accessibilityservice#AccessibilityService#SHOW_MODE_HIDDEN_E@, or @B_android#accessibilityservice#AccessibilityService#SHOW_MODE_IGNORE_HARD_KEYBOARD_E@"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#accessibilityservice#AccessibilityService_E@"], "Permissions": [], "Description": "Returns the show mode of the soft keyboard.", "history": "Added in API level 24", "FullName": "public int getShowMode ()"}}, "Inheritance": [], "ClassName": "android.accessibilityservice.AccessibilityService.SoftKeyboardController", "ClassDesc": "Used to control, query, and listen for changes to the soft keyboard show mode. Accessibility services may request to override the decisions normally made about whether or not the soft keyboard is shown. If multiple services make conflicting requests, the last request is honored. A service may register a listener to find out if the mode has changed under it. If the user takes action to override the behavior behavior requested by an accessibility service, the user's request takes precendence, the show mode will be reset to @B_android#accessibilityservice#AccessibilityService#SHOW_MODE_AUTO_E@, and services will no longer be able to control that aspect of the soft keyboard's behavior. Note: Because soft keyboards are independent apps, the framework does not have total control over their behavior. They may choose to show themselves, or not, without regard to requests made here. So the framework will make a best effort to deliver the behavior requested, but cannot guarantee success."}