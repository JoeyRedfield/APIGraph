{"Functions": {"permitAll()": {"Returns": [["@B_android#os#StrictMode#ThreadPolicy#Builder_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Disable the detection of everything.", "history": "Added in API level 9", "FullName": "public StrictMode.ThreadPolicy.Builder permitAll ()"}, "detectDiskReads()": {"Returns": [["@B_android#os#StrictMode#ThreadPolicy#Builder_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enable detection of disk reads.", "history": "Added in API level 9", "FullName": "public StrictMode.ThreadPolicy.Builder detectDiskReads ()"}, "permitUnbufferedIo()": {"Returns": [["@B_android#os#StrictMode#ThreadPolicy#Builder_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Disable detection of unbuffered input/output operations.", "history": "Added in API level 26", "FullName": "public StrictMode.ThreadPolicy.Builder permitUnbufferedIo ()"}, "penaltyDropBox()": {"Returns": [["@B_android#os#StrictMode#ThreadPolicy#Builder_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enable detected violations log a stacktrace and timing data to the @B_android#os#DropBoxManager_E@ on policy violation. Intended mostly for platform integrators doing beta user field data collection.", "history": "Added in API level 9", "FullName": "public StrictMode.ThreadPolicy.Builder penaltyDropBox ()"}, "detectAll()": {"Returns": [["@B_android#os#StrictMode#ThreadPolicy#Builder_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Detect everything that's potentially suspect. As of the Gingerbread release this includes network and disk operations but will likely expand in future releases.", "history": "Added in API level 9", "FullName": "public StrictMode.ThreadPolicy.Builder detectAll ()"}, "detectDiskWrites()": {"Returns": [["@B_android#os#StrictMode#ThreadPolicy#Builder_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enable detection of disk writes.", "history": "Added in API level 9", "FullName": "public StrictMode.ThreadPolicy.Builder detectDiskWrites ()"}, "permitDiskReads()": {"Returns": [["@B_android#os#StrictMode#ThreadPolicy#Builder_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Disable detection of disk reads.", "history": "Added in API level 9", "FullName": "public StrictMode.ThreadPolicy.Builder permitDiskReads ()"}, "permitCustomSlowCalls()": {"Returns": [["@B_android#os#StrictMode#ThreadPolicy#Builder_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Disable detection of slow calls.", "history": "Added in API level 11", "FullName": "public StrictMode.ThreadPolicy.Builder permitCustomSlowCalls ()"}, "penaltyLog()": {"Returns": [["@B_android#os#StrictMode#ThreadPolicy#Builder_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Log detected violations to the system log.", "history": "Added in API level 9", "FullName": "public StrictMode.ThreadPolicy.Builder penaltyLog ()"}, "StrictMode.ThreadPolicy.Builder()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a Builder that detects nothing and has no violations. (but note that @B_android#os#StrictMode#ThreadPolicy#Builder#build_E@ will default to enabling @B_android#os#StrictMode#ThreadPolicy#Builder#penaltyLog_E@ if no other penalties are specified)", "history": "Added in API level 9", "FullName": "public StrictMode.ThreadPolicy.Builder ()"}, "build()": {"Returns": [["@B_android#os#StrictMode#ThreadPolicy_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Construct the ThreadPolicy instance. Note: if no penalties are enabled before calling build, @B_android#os#StrictMode#ThreadPolicy#Builder#penaltyLog_E@ is implicitly set.", "history": "Added in API level 9", "FullName": "public StrictMode.ThreadPolicy build ()"}, "penaltyFlashScreen()": {"Returns": [["@B_android#os#StrictMode#ThreadPolicy#Builder_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flash the screen during a violation.", "history": "Added in API level 11", "FullName": "public StrictMode.ThreadPolicy.Builder penaltyFlashScreen ()"}, "penaltyListener(java.util.concurrent.Executor,android.os.StrictMode.OnThreadViolationListener)": {"Returns": [["@B_android#os#StrictMode#ThreadPolicy#Builder_E@", "This value will never be null."]], "Parameters": [["@B_java#util#concurrent#Executor_E@", "Executor: This value must never be null."], ["@B_android#os#StrictMode#OnThreadViolationListener_E@", "StrictMode.OnThreadViolationListener: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Call #@B_android#os#StrictMode#OnThreadViolationListener#onThreadViolation_E@ on specified executor every violation.", "history": "Added in API level 28", "FullName": "public StrictMode.ThreadPolicy.Builder penaltyListener (Executor executor, StrictMode.OnThreadViolationListener listener)"}, "StrictMode.ThreadPolicy.Builder(android.os.StrictMode.ThreadPolicy)": {"Returns": [], "Parameters": [["@B_android#os#StrictMode#ThreadPolicy_E@", "StrictMode.ThreadPolicy no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Initialize a Builder from an existing ThreadPolicy.", "history": "Added in API level 9", "FullName": "public StrictMode.ThreadPolicy.Builder (StrictMode.ThreadPolicy policy)"}, "detectUnbufferedIo()": {"Returns": [["@B_android#os#StrictMode#ThreadPolicy#Builder_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Detect unbuffered input/output operations.", "history": "Added in API level 26", "FullName": "public StrictMode.ThreadPolicy.Builder detectUnbufferedIo ()"}, "penaltyDialog()": {"Returns": [["@B_android#os#StrictMode#ThreadPolicy#Builder_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Show an annoying dialog to the developer on detected violations, rate-limited to be only a little annoying.", "history": "Added in API level 9", "FullName": "public StrictMode.ThreadPolicy.Builder penaltyDialog ()"}, "penaltyDeathOnNetwork()": {"Returns": [["@B_android#os#StrictMode#ThreadPolicy#Builder_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Crash the whole process on any network usage. Unlike @B_android#os#StrictMode#ThreadPolicy#Builder#penaltyDeath_E@, this penalty runs before anything else. You must still have called @B_android#os#StrictMode#ThreadPolicy#Builder#detectNetwork_E@ to enable this. In the Honeycomb or later SDKs, this is on by default.", "history": "Added in API level 11", "FullName": "public StrictMode.ThreadPolicy.Builder penaltyDeathOnNetwork ()"}, "penaltyDeath()": {"Returns": [["@B_android#os#StrictMode#ThreadPolicy#Builder_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Crash the whole process on violation. This penalty runs at the end of all enabled penalties so you'll still get see logging or other violations before the process dies. Unlike @B_android#os#StrictMode#ThreadPolicy#Builder#penaltyDeathOnNetwork_E@, this applies to disk reads, disk writes, and network usage if their corresponding detect flags are set.", "history": "Added in API level 9", "FullName": "public StrictMode.ThreadPolicy.Builder penaltyDeath ()"}, "permitNetwork()": {"Returns": [["@B_android#os#StrictMode#ThreadPolicy#Builder_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Disable detection of network operations.", "history": "Added in API level 9", "FullName": "public StrictMode.ThreadPolicy.Builder permitNetwork ()"}, "detectNetwork()": {"Returns": [["@B_android#os#StrictMode#ThreadPolicy#Builder_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enable detection of network operations.", "history": "Added in API level 9", "FullName": "public StrictMode.ThreadPolicy.Builder detectNetwork ()"}, "permitDiskWrites()": {"Returns": [["@B_android#os#StrictMode#ThreadPolicy#Builder_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Disable detection of disk writes.", "history": "Added in API level 9", "FullName": "public StrictMode.ThreadPolicy.Builder permitDiskWrites ()"}, "permitResourceMismatches()": {"Returns": [["@B_android#os#StrictMode#ThreadPolicy#Builder_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Disable detection of mismatches between defined resource types and getter calls.", "history": "Added in API level 23", "FullName": "public StrictMode.ThreadPolicy.Builder permitResourceMismatches ()"}, "detectCustomSlowCalls()": {"Returns": [["@B_android#os#StrictMode#ThreadPolicy#Builder_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enable detection of slow calls.", "history": "Added in API level 11", "FullName": "public StrictMode.ThreadPolicy.Builder detectCustomSlowCalls ()"}, "detectResourceMismatches()": {"Returns": [["@B_android#os#StrictMode#ThreadPolicy#Builder_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enables detection of mismatches between defined resource types and getter calls. This helps detect accidental type mismatches and potentially expensive type conversions when obtaining typed resources. For example, a strict mode violation would be thrown when calling @B_android#content#res#TypedArray#getInt_E@ on an index that contains a String-type resource. If the string value can be parsed as an integer, this method call will return a value without crashing; however, the developer should format the resource as an integer to avoid unnecessary type conversion.", "history": "Added in API level 23", "FullName": "public StrictMode.ThreadPolicy.Builder detectResourceMismatches ()"}}, "Inheritance": [], "ClassName": "android.os.StrictMode.ThreadPolicy.Builder", "ClassDesc": "Creates @B_android#os#StrictMode#ThreadPolicy_E@ instances. Methods whose names start with detect specify what problems we should look for. Methods whose names start with penalty specify what we should do when we detect a problem. You can call as many detect and penalty methods as you like. Currently order is insignificant: all penalties apply to all detected problems. For example, detect everything and log anything that's found:"}