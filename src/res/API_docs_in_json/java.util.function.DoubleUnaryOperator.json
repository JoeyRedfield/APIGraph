{"Functions": {"compose(java.util.function.DoubleUnaryOperator)": {"Returns": [["@B_java#util#function#DoubleUnaryOperator_E@", "a composed operator that first applies the before operator and then applies this operator"]], "Parameters": [["@B_java#util#function#DoubleUnaryOperator_E@", "DoubleUnaryOperator: the operator to apply before this operator is applied"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if before is null"]], "SeeAlso": ["@B_java#util#function#DoubleUnaryOperator#andThen_E@"], "Permissions": [], "Description": "Returns a composed operator that first applies the before operator to its input, and then applies this operator to the result. If evaluation of either operator throws an exception, it is relayed to the caller of the composed operator.", "history": "Added in API level 24", "FullName": "public DoubleUnaryOperator compose (DoubleUnaryOperator before)"}, "applyAsDouble(double)": {"Returns": [["double", "the operator result"]], "Parameters": [["double", "double: the operand"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Applies this operator to the given operand.", "history": "Added in API level 24", "FullName": "public abstract double applyAsDouble (double operand)"}, "andThen(java.util.function.DoubleUnaryOperator)": {"Returns": [["@B_java#util#function#DoubleUnaryOperator_E@", "a composed operator that first applies this operator and then applies the after operator"]], "Parameters": [["@B_java#util#function#DoubleUnaryOperator_E@", "DoubleUnaryOperator: the operator to apply after this operator is applied"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if after is null"]], "SeeAlso": ["@B_java#util#function#DoubleUnaryOperator#compose_E@"], "Permissions": [], "Description": "Returns a composed operator that first applies this operator to its input, and then applies the after operator to the result. If evaluation of either operator throws an exception, it is relayed to the caller of the composed operator.", "history": "Added in API level 24", "FullName": "public DoubleUnaryOperator andThen (DoubleUnaryOperator after)"}, "identity()": {"Returns": [["@B_java#util#function#DoubleUnaryOperator_E@", "a unary operator that always returns its input argument"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a unary operator that always returns its input argument.", "history": "Added in API level 24", "FullName": "public static DoubleUnaryOperator identity ()"}}, "Inheritance": [], "ClassName": "java.util.function.DoubleUnaryOperator", "ClassDesc": "Represents an operation on a single double-valued operand that produces a double-valued result. This is the primitive type specialization of @B_java#util#function#UnaryOperator_E@ for double. This is a @B_java#util#function#DoubleUnaryOperator#applyAsDouble_E@."}