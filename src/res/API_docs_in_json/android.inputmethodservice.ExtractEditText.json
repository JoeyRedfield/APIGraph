{"Functions": {"isInputMethodTarget()": {"Returns": [["boolean", "True if the TextView is a current input method target; false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "We are always considered to be an input method target.", "history": "Added in API level 3", "FullName": "public boolean isInputMethodTarget ()"}, "startInternalChanges()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Start making changes that will not be reported to the client. That is, @B_android#inputmethodservice#ExtractEditText#onSelectionChanged_E@ will not result in sending the new selection to the client", "history": "Added in API level 3", "FullName": "public void startInternalChanges ()"}, "hasWindowFocus()": {"Returns": [["boolean", "True if this view is in a window that currently has window focus."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Pretend like the window this view is in always has focus, so its highlight and cursor will be displayed.", "history": "Added in API level 3", "FullName": "public boolean hasWindowFocus ()"}, "ExtractEditText(android.content.Context,android.util.AttributeSet)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"], ["@B_android#util#AttributeSet_E@", "AttributeSet no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 3", "FullName": "public ExtractEditText (Context context, AttributeSet attrs)"}, "performClick()": {"Returns": [["boolean", "True there was an assigned OnClickListener that was called, false otherwise is returned."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Redirect clicks to the IME for handling there. First allows any on click handler to run, though.", "history": "Added in API level 3", "FullName": "public boolean performClick ()"}, "onTextContextMenuItem(int)": {"Returns": [["boolean", "true if the context menu item action was performed."]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a context menu option for the text view is selected. Currently this will be one of @B_android#R#id#selectAll_E@, @B_android#R#id#cut_E@, @B_android#R#id#copy_E@, @B_android#R#id#paste_E@ or @B_android#R#id#shareText_E@.", "history": "Added in API level 3", "FullName": "public boolean onTextContextMenuItem (int id)"}, "isFocused()": {"Returns": [["boolean", "True if this view has focus, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Pretend like this view always has focus, so its highlight and cursor will be displayed.", "history": "Added in API level 3", "FullName": "public boolean isFocused ()"}, "onSelectionChanged(int,int)": {"Returns": [], "Parameters": [["int", "int: The new selection start location."], ["int", "int: The new selection end location."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Report to the underlying text editor about selection changes.", "history": "Added in API level 3", "FullName": "protected void onSelectionChanged (int selStart, int selEnd)"}, "ExtractEditText(android.content.Context,android.util.AttributeSet,int,int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"], ["@B_android#util#AttributeSet_E@", "AttributeSet no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 21", "FullName": "public ExtractEditText (Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes)"}, "hasVerticalScrollBar()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the edit text is currently showing a scroll bar.", "history": "Added in API level 3", "FullName": "public boolean hasVerticalScrollBar ()"}, "hasFocus()": {"Returns": [["boolean", "True if this view has or contains focus, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Pretend like this view always has focus, so its highlight and cursor will be displayed.", "history": "Added in API level 3", "FullName": "public boolean hasFocus ()"}, "ExtractEditText(android.content.Context,android.util.AttributeSet,int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"], ["@B_android#util#AttributeSet_E@", "AttributeSet no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 3", "FullName": "public ExtractEditText (Context context, AttributeSet attrs, int defStyleAttr)"}, "ExtractEditText(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 3", "FullName": "public ExtractEditText (Context context)"}, "onSelectionChanged(int, int)": {"Returns": [], "Parameters": [["int", "int: The new selection start location."], ["int", "int: The new selection end location."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Report to the underlying text editor about selection changes.", "history": "added in API level 3", "FullName": "protected void onSelectionChanged (int selStart, int selEnd)"}, "finishInternalChanges()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Finish making changes that will not be reported to the client. That is, @B_android#inputmethodservice#ExtractEditText#onSelectionChanged_E@ will not result in sending the new selection to the client", "history": "Added in API level 3", "FullName": "public void finishInternalChanges ()"}, "setExtractedText(android.view.inputmethod.ExtractedText)": {"Returns": [], "Parameters": [["@B_android#view#inputmethod#ExtractedText_E@", "ExtractedText no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Implement just to keep track of when we are setting text from the client (vs. seeing changes in ourself from the user).", "history": "Added in API level 3", "FullName": "public void setExtractedText (ExtractedText text)"}}, "Inheritance": ["@B_android#view#View_E@", "@B_android#widget#TextView_E@", "@B_android#widget#EditText_E@"], "ClassName": "android.inputmethodservice.ExtractEditText", "ClassDesc": "Specialization of @B_android#widget#EditText_E@ for showing and interacting with the extracted text in a full-screen input method."}