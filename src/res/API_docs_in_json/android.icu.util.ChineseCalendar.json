{"Functions": {"handleComputeMonthStart(int, int, boolean)": {"Returns": [["int", "the Julian day number of the day before the first day of the given month and year"]], "Parameters": [["int", "int: the extended year"], ["int", "int: the zero-based month. The month is also determined by reading the IS_LEAP_MONTH field."], ["boolean", "boolean: if false, compute the day before the first day of the given year, otherwise, compute the day before the first day of the given month"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the Julian day number of day before the first day of the given month in the given extended year. Note: This method reads the IS_LEAP_MONTH field to determine whether the given month is a leap month.", "history": "added in API level 24", "FullName": "protected int handleComputeMonthStart (int eyear, int month, boolean useMonth)"}, "ChineseCalendar(java.util.Locale)": {"Returns": [], "Parameters": [["@B_java#util#Locale_E@", "Locale: The given locale"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a ChineseCalendar based on the current time in the default time zone with the given locale.", "history": "Added in API level 24", "FullName": "public ChineseCalendar (Locale aLocale)"}, "ChineseCalendar(android.icu.util.TimeZone)": {"Returns": [], "Parameters": [["@B_android#icu#util#TimeZone_E@", "TimeZone: the given time zone"]], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Construct a ChineseCalendar based on the current time in the given time zone with the default FORMAT locale.", "history": "Added in API level 24", "FullName": "public ChineseCalendar (TimeZone zone)"}, "getFieldResolutionTable()": {"Returns": [["int[][][]", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override Calendar to add IS_LEAP_MONTH to the field resolution table.", "history": "Added in API level 24", "FullName": "protected int[][][] getFieldResolutionTable ()"}, "ChineseCalendar(int,int,int,int,int)": {"Returns": [], "Parameters": [["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#ERA_E@ time field."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#YEAR_E@ time field."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#MONTH_E@ time field. The value is 0-based. e.g., 0 for January."], ["int", "int: The value used to set the Chinese calendar's @B_android#icu#util#Calendar#IS_LEAP_MONTH_E@ time field."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#DATE_E@ time field."]], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Constructs a ChineseCalendar with the given date set in the default time zone with the default FORMAT locale.", "history": "Added in API level 24", "FullName": "public ChineseCalendar (int era, int year, int month, int isLeapMonth, int date)"}, "roll(int, int)": {"Returns": [], "Parameters": [["int", "int: the calendar field to roll."], ["int", "int: the amount by which the field should be rolled."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override Calendar to handle leap months properly.", "history": "added in API level 24", "FullName": "public void roll (int field, int amount)"}, "handleGetMonthLength(int, int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override Calendar method to return the number of days in the given extended year and month. Note: This method also reads the IS_LEAP_MONTH field to determine whether or not the given month is a leap month.", "history": "added in API level 24", "FullName": "protected int handleGetMonthLength (int extendedYear, int month)"}, "ChineseCalendar(int, int, int, int, int)": {"Returns": [], "Parameters": [["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#ERA_E@ time field."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#YEAR_E@ time field."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#MONTH_E@ time field. The value is 0-based. e.g., 0 for January."], ["int", "int: The value used to set the Chinese calendar's @B_android#icu#util#Calendar#IS_LEAP_MONTH_E@ time field."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#DATE_E@ time field."]], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Constructs a ChineseCalendar with the given date set in the default time zone with the default FORMAT locale.", "history": "added in API level 24", "FullName": "public ChineseCalendar (int era, int year, int month, int isLeapMonth, int date)"}, "handleGetMonthLength(int,int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override Calendar method to return the number of days in the given extended year and month. Note: This method also reads the IS_LEAP_MONTH field to determine whether or not the given month is a leap month.", "history": "Added in API level 24", "FullName": "protected int handleGetMonthLength (int extendedYear, int month)"}, "add(int, int)": {"Returns": [], "Parameters": [["int", "int: the time field."], ["int", "int: the amount to add to the field."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override Calendar to handle leap months properly.", "history": "added in API level 24", "FullName": "public void add (int field, int amount)"}, "handleGetLimit(int, int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int: one of the above field numbers"], ["int", "int: one of MINIMUM, GREATEST_MINIMUM, LEAST_MAXIMUM, or MAXIMUM"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override Calendar to return the limit value for the given field.", "history": "added in API level 24", "FullName": "protected int handleGetLimit (int field, int limitType)"}, "ChineseCalendar(android.icu.util.TimeZone,java.util.Locale)": {"Returns": [], "Parameters": [["@B_android#icu#util#TimeZone_E@", "TimeZone: the given time zone"], ["@B_java#util#Locale_E@", "Locale: the given locale"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Construct a ChineseCalendar based on the current time in the given time zone with the given locale.", "history": "Added in API level 24", "FullName": "public ChineseCalendar (TimeZone zone, Locale aLocale)"}, "ChineseCalendar(java.util.Date)": {"Returns": [], "Parameters": [["@B_java#util#Date_E@", "Date: The date to which the new calendar is set."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Construct a ChineseCalendar with the give date set in the default time zone with the default locale.", "history": "Added in API level 24", "FullName": "public ChineseCalendar (Date date)"}, "ChineseCalendar(android.icu.util.ULocale)": {"Returns": [], "Parameters": [["@B_android#icu#util#ULocale_E@", "ULocale: the given ulocale"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a ChineseCalendar based on the current time in the default time zone with the given locale.", "history": "Added in API level 24", "FullName": "public ChineseCalendar (ULocale locale)"}, "handleGetExtendedYear()": {"Returns": [["int", "the extended year"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Implement abstract Calendar method to return the extended year defined by the current fields. This will use either the ERA and YEAR field as the cycle and year-of-cycle, or the EXTENDED_YEAR field as the continuous year count, depending on which is newer.", "history": "Added in API level 24", "FullName": "protected int handleGetExtendedYear ()"}, "ChineseCalendar(int,int,int,int,int,int,int,int)": {"Returns": [], "Parameters": [["int", "int: the value used to set the calendar's @B_android#icu#util#Calendar#ERA_E@ time field."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#YEAR_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#MONTH_E@ time field in the calendar. Note that the month value is 0-based. e.g., 0 for January."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#IS_LEAP_MONTH_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#DATE_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#HOUR_OF_DAY_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#MINUTE_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#SECOND_E@ time field in the calendar."]], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Constructs a ChineseCalendar with the given date and time set for the default time zone with the default FORMAT locale.", "history": "Added in API level 24", "FullName": "public ChineseCalendar (int era, int year, int month, int isLeapMonth, int date, int hour, int minute, int second)"}, "roll(int,int)": {"Returns": [], "Parameters": [["int", "int: the calendar field to roll."], ["int", "int: the amount by which the field should be rolled."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override Calendar to handle leap months properly.", "history": "Added in API level 24", "FullName": "public void roll (int field, int amount)"}, "ChineseCalendar(int,int,int,int)": {"Returns": [], "Parameters": [["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#YEAR_E@ time field."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#MONTH_E@ time field. The value is 0-based. e.g., 0 for January."], ["int", "int: The value used to set the Chinese calendar's @B_android#icu#util#Calendar#IS_LEAP_MONTH_E@ time field."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#DATE_E@ time field."]], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Constructs a ChineseCalendar with the given date set in the default time zone with the default FORMAT locale.", "history": "Added in API level 24", "FullName": "public ChineseCalendar (int year, int month, int isLeapMonth, int date)"}, "handleGetLimit(int,int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int: one of the above field numbers"], ["int", "int: one of MINIMUM, GREATEST_MINIMUM, LEAST_MAXIMUM, or MAXIMUM"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override Calendar to return the limit value for the given field.", "history": "Added in API level 24", "FullName": "protected int handleGetLimit (int field, int limitType)"}, "add(int,int)": {"Returns": [], "Parameters": [["int", "int: the time field."], ["int", "int: the amount to add to the field."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override Calendar to handle leap months properly.", "history": "Added in API level 24", "FullName": "public void add (int field, int amount)"}, "ChineseCalendar(int, int, int, int, int, int, int)": {"Returns": [], "Parameters": [["int", "int: the value used to set the @B_android#icu#util#Calendar#YEAR_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#MONTH_E@ time field in the calendar. Note that the month value is 0-based. e.g., 0 for January."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#IS_LEAP_MONTH_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#DATE_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#HOUR_OF_DAY_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#MINUTE_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#SECOND_E@ time field in the calendar."]], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Constructs a ChineseCalendar with the given date and time set for the default time zone with the default FORMAT locale.", "history": "added in API level 24", "FullName": "public ChineseCalendar (int year, int month, int isLeapMonth, int date, int hour, int minute, int second)"}, "handleComputeMonthStart(int,int,boolean)": {"Returns": [["int", "the Julian day number of the day before the first day of the given month and year"]], "Parameters": [["int", "int: the extended year"], ["int", "int: the zero-based month. The month is also determined by reading the IS_LEAP_MONTH field."], ["boolean", "boolean: if false, compute the day before the first day of the given year, otherwise, compute the day before the first day of the given month"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the Julian day number of day before the first day of the given month in the given extended year. Note: This method reads the IS_LEAP_MONTH field to determine whether the given month is a leap month.", "history": "Added in API level 24", "FullName": "protected int handleComputeMonthStart (int eyear, int month, boolean useMonth)"}, "ChineseCalendar(android.icu.util.TimeZone,android.icu.util.ULocale)": {"Returns": [], "Parameters": [["@B_android#icu#util#TimeZone_E@", "TimeZone: the given time zone"], ["@B_android#icu#util#ULocale_E@", "ULocale: the given ulocale"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Construct a ChineseCalendar based on the current time with the given time zone with the given locale.", "history": "Added in API level 24", "FullName": "public ChineseCalendar (TimeZone zone, ULocale locale)"}, "ChineseCalendar()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Construct a ChineseCalendar with the default time zone and locale.", "history": "Added in API level 24", "FullName": "public ChineseCalendar ()"}, "ChineseCalendar(int, int, int, int)": {"Returns": [], "Parameters": [["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#YEAR_E@ time field."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#MONTH_E@ time field. The value is 0-based. e.g., 0 for January."], ["int", "int: The value used to set the Chinese calendar's @B_android#icu#util#Calendar#IS_LEAP_MONTH_E@ time field."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#DATE_E@ time field."]], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Constructs a ChineseCalendar with the given date set in the default time zone with the default FORMAT locale.", "history": "added in API level 24", "FullName": "public ChineseCalendar (int year, int month, int isLeapMonth, int date)"}, "ChineseCalendar(int,int,int,int,int,int,int)": {"Returns": [], "Parameters": [["int", "int: the value used to set the @B_android#icu#util#Calendar#YEAR_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#MONTH_E@ time field in the calendar. Note that the month value is 0-based. e.g., 0 for January."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#IS_LEAP_MONTH_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#DATE_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#HOUR_OF_DAY_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#MINUTE_E@ time field in the calendar."], ["int", "int: the value used to set the @B_android#icu#util#Calendar#SECOND_E@ time field in the calendar."]], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Constructs a ChineseCalendar with the given date and time set for the default time zone with the default FORMAT locale.", "history": "Added in API level 24", "FullName": "public ChineseCalendar (int year, int month, int isLeapMonth, int date, int hour, int minute, int second)"}, "getType()": {"Returns": [["@B_java#lang#String_E@", "legacy calendar type name string"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "See type=\"old type name\" for the calendar attribute of locale IDs at http://www.unicode.org/reports/tr35/#Key_Type_Definitions", "history": "Added in API level 24", "FullName": "public String getType ()"}, "handleComputeFields(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override Calendar to compute several fields specific to the Chinese calendar system. These are: ERA YEAR MONTH DAY_OF_MONTH DAY_OF_YEAR EXTENDED_YEAR The DAY_OF_WEEK and DOW_LOCAL fields are already set when this method is called. The getGregorianXxx() methods return Gregorian calendar equivalents for the given Julian day. Compute the ChineseCalendar-specific field IS_LEAP_MONTH.", "history": "Added in API level 24", "FullName": "protected void handleComputeFields (int julianDay)"}, "handleGetDateFormat(java.lang.String,java.lang.String,android.icu.util.ULocale)": {"Returns": [["@B_android#icu#text#DateFormat_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"], ["@B_android#icu#util#ULocale_E@", "ULocale no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 24", "FullName": "protected DateFormat handleGetDateFormat (String pattern, String override, ULocale locale)"}}, "Inheritance": ["@B_android#icu#util#Calendar_E@"], "ClassName": "android.icu.util.ChineseCalendar", "ClassDesc": "ChineseCalendar is a concrete subclass of @B_android#icu#util#Calendar_E@ that implements a traditional Chinese calendar. The traditional Chinese calendar is a lunisolar calendar: Each month starts on a new moon, and the months are numbered according to solar events, specifically, to guarantee that month 11 always contains the winter solstice. In order to accomplish this, leap months are inserted in certain years. Leap months are numbered the same as the month they follow. The decision of which month is a leap month depends on the relative movements of the sun and moon. All astronomical computations are performed with respect to a time zone of GMT+8:00 and a longitude of 120 degrees east. Although some calendars implement a historically more accurate convention of using Beijing's local longitude (116 degrees 25 minutes east) and time zone (GMT+7:45:40) for dates before 1929, we do not implement this here. Years are counted in two different ways in the Chinese calendar. The first method is by sequential numbering from the 61st year of the reign of Huang Di, 2637 BCE, which is designated year 1 on the Chinese calendar. The second method uses 60-year cycles from the same starting point, which is designated year 1 of cycle 1. In this class, the EXTENDED_YEAR field contains the sequential year count. The ERA field contains the cycle number, and the YEAR field contains the year of the cycle, a value between 1 and 60. There is some variation in what is considered the starting point of the calendar, with some sources starting in the first year of the reign of Huang Di, rather than the 61st. This gives continuous year numbers 60 years greater and cycle numbers one greater than what this class implements. Because ChineseCalendar defines an additional field and redefines the way the ERA field is used, it requires a new format class, ChineseDateFormat. As always, use the methods DateFormat.getXxxInstance(Calendar cal,...) to obtain a formatter for this calendar. References: Dershowitz and Reingold, Helmer Aslaksen's The This class should not be subclassed. ChineseCalendar usually should be instantiated using @B_android#icu#util#Calendar#getInstance_E@ passing in a ULocale with the tag \"@calendar=chinese\"."}