{"Functions": {"getSeekBarIncrement()": {"Returns": [["int", "The amount of increment on the SeekBar performed after each user's arrow key press."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the amount of increment change via each arrow key click. This value is derived from user's specified increment value if it's not zero. Otherwise, the default value is picked from the default mKeyProgressIncrement value in @B_android#widget#AbsSeekBar_E@.", "history": "added in version 25.1.0", "FullName": "int getSeekBarIncrement ()"}, "setSeekBarIncrement(int)": {"Returns": [], "Parameters": [["int", "int: The amount to increment or decrement when the user presses an arrow key."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the increment amount on the SeekBar for each arrow key press.", "history": "added in version 25.1.0", "FullName": "void setSeekBarIncrement (int seekBarIncrement)"}, "onRestoreInstanceState(android.os.Parcelable)": {"Returns": [], "Parameters": [["@B_android#os#Parcelable_E@", "Parcelable: The saved state that had previously been returned by @B_android#support#v7#preference#SeekBarPreference#onSaveInstanceState_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Hook allowing a Preference to re-apply a representation of its internal state that had previously been generated by @B_android#support#v7#preference#Preference#onSaveInstanceState_E@. This function will never be called with a null state.", "history": "added in version 25.1.0", "FullName": "void onRestoreInstanceState (Parcelable state)"}, "SeekBarPreference(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 25.1.0", "FullName": "SeekBarPreference (Context context)"}, "isAdjustable()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 25.1.0", "FullName": "boolean isAdjustable ()"}, "setValue(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 25.1.0", "FullName": "void setValue (int seekBarValue)"}, "getMin()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 25.1.0", "FullName": "int getMin ()"}, "setMin(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 25.1.0", "FullName": "void setMin (int min)"}, "getMax()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 25.1.0", "FullName": "int getMax ()"}, "getValue()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 25.1.0", "FullName": "int getValue ()"}, "setAdjustable(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 25.1.0", "FullName": "void setAdjustable (boolean adjustable)"}, "onSaveInstanceState()": {"Returns": [["@B_android#os#Parcelable_E@", "A Parcelable object containing the current dynamic state of this Preference, or null if there is nothing interesting to save. The default implementation returns null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Hook allowing a Preference to generate a representation of its internal state that can later be used to create a new instance with that same state. This state should only contain information that is not persistent or can be reconstructed later.", "history": "added in version 25.1.0", "FullName": "Parcelable onSaveInstanceState ()"}, "setMax(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 25.1.0", "FullName": "void setMax (int max)"}, "onSetInitialValue(boolean, java.lang.Object)": {"Returns": [], "Parameters": [["boolean", "boolean: True to restore the persisted value; false to use the given defaultValue."], ["@B_java#lang#Object_E@", "Object: The default value for this Preference. Only use this if restorePersistedValue is false."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Implement this to set the initial value of the Preference. If @B_android#content#SharedPreferences_E@. If @B_android#support#v7#preference#Preference#shouldPersist_E@ is true). In case of using @B_android#support#v7#preference#PreferenceDataStore_E@, the true but the default value (if provided) is set. This may not always be called. One example is if it should not persist but there is no default value given.", "history": "added in version 25.1.0", "FullName": "void onSetInitialValue (boolean restoreValue, Object defaultValue)"}}, "Inheritance": ["java.lang.Object", "@B_android#support#v7#preference#Preference_E@"], "ClassName": "android.support.v7.preference.SeekBarPreference", "ClassDesc": "Preference based on android.preference.SeekBarPreference but uses support v7 preference as base. It contains a title and a seekbar and an optional seekbar value TextView. The actual preference layout is customizable by setting android:layout on the preference widget layout or seekBarPreferenceStyle attribute. The seekbar within the preference can be defined adjustable or not by setting adjustable attribute. If adjustable, the preference will be responsive to DPAD left/right keys. Otherwise, it skips those keys. The seekbar value view can be shown or disabled by setting showSeekBarValue attribute to true or false, respectively. Other SeekBar specific attributes (e.g. title, summary, defaultValue, min, max) can be set directly on the preference widget layout."}