{"Functions": {"capabilityToString(int)": {"Returns": [["@B_java#lang#String_E@", "The string representation."]], "Parameters": [["int", "int: The capability."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the string representation of a capability. For example, @B_android#accessibilityservice#AccessibilityServiceInfo#CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT_E@ is represented by the string CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT.", "history": "Added in API level 18", "FullName": "public static String capabilityToString (int capability)"}, "loadDescription(android.content.pm.PackageManager)": {"Returns": [["@B_java#lang#String_E@", "The localized description."]], "Parameters": [["@B_android#content#pm#PackageManager_E@", "PackageManager no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The localized description of the accessibility service.", "history": "Added in API level 16", "FullName": "public String loadDescription (PackageManager packageManager)"}, "setInteractiveUiTimeoutMillis(int)": {"Returns": [], "Parameters": [["int", "int: The timeout in milliseconds. Value is 0 or greater"]], "Throws": [], "SeeAlso": ["@B_android#R#styleable#AccessibilityService_interactiveUiTimeout_E@"], "Permissions": [], "Description": "Set the recommended time that interactive controls need to remain on the screen to support the user.", "history": "Added in API level 29", "FullName": "public void setInteractiveUiTimeoutMillis (int timeout)"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 4", "FullName": "public int describeContents ()"}, "getCapabilities()": {"Returns": [["int", "The capability bit mask."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#accessibilityservice#AccessibilityServiceInfo_E@"], "Permissions": [], "Description": "Returns the bit mask of capabilities this accessibility service has such as being able to retrieve the active window content, etc.", "history": "Added in API level 18", "FullName": "public int getCapabilities ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 4", "FullName": "public void writeToParcel (Parcel parcel, int flagz)"}, "getCanRetrieveWindowContent()": {"Returns": [["boolean", "True if window content can be retrieved."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#accessibilityservice#AccessibilityServiceInfo#getCapabilities_E@. Whether this service can retrieve the current window's content.", "history": "Added in API level 14 Deprecated in API level 18", "FullName": "public boolean getCanRetrieveWindowContent ()"}, "getInteractiveUiTimeoutMillis()": {"Returns": [["int", "The timeout in milliseconds."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#accessibilityservice#AccessibilityServiceInfo#setInteractiveUiTimeoutMillis_E@"], "Permissions": [], "Description": "Get the recommended timeout for interactive controls.", "history": "Added in API level 29", "FullName": "public int getInteractiveUiTimeoutMillis ()"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if this object is the same as the obj argument; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the reference object with which to compare."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether some other object is \"equal to\" this one. The equals method implements an equivalence relation on non-null object references: It is x, x.equals(x) should return true. It is x and y, x.equals(y) should return true if and only if y.equals(x) returns true. It is x, y, and z, if x.equals(y) returns true and y.equals(z) returns true, then x.equals(z) should return true. It is x and y, multiple invocations of x.equals(y) consistently return true or consistently return false, provided no information used in equals comparisons on the objects is modified. For any non-null reference value x, x.equals(null) should return false. The equals method for class Object implements the most discriminating possible equivalence relation on objects; that is, for any non-null reference values x and y, this method returns true if and only if x and y refer to the same object (x == y has the value true). Note that it is generally necessary to override the hashCode method whenever this method is overridden, so as to maintain the general contract for the hashCode method, which states that equal objects must have equal hash codes.", "history": "Added in API level 4", "FullName": "public boolean equals (Object obj)"}, "getId()": {"Returns": [["@B_java#lang#String_E@", "The id."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The accessibility service id.", "history": "Added in API level 14", "FullName": "public String getId ()"}, "feedbackTypeToString(int)": {"Returns": [["@B_java#lang#String_E@", "The string representation."]], "Parameters": [["int", "int: The feedback type."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the string representation of a feedback type. For example, @B_android#accessibilityservice#AccessibilityServiceInfo#FEEDBACK_SPOKEN_E@ is represented by the string FEEDBACK_SPOKEN.", "history": "Added in API level 14", "FullName": "public static String feedbackTypeToString (int feedbackType)"}, "hashCode()": {"Returns": [["int", "a hash code value for this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code value for the object. This method is supported for the benefit of hash tables such as those provided by @B_java#util#HashMap_E@. The general contract of hashCode is: Whenever it is invoked on the same object more than once during an execution of a Java application, the hashCode method must consistently return the same integer, provided no information used in equals comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application. If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result. It is not required that if two objects are unequal according to the @B_java#lang#Object#equals_E@ method, then calling the hashCode method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables. As much as is reasonably practical, the hashCode method defined by class Object does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the Java\u2122 programming language.)", "history": "Added in API level 4", "FullName": "public int hashCode ()"}, "setNonInteractiveUiTimeoutMillis(int)": {"Returns": [], "Parameters": [["int", "int: The timeout in milliseconds. Value is 0 or greater"]], "Throws": [], "SeeAlso": ["@B_android#R#styleable#AccessibilityService_nonInteractiveUiTimeout_E@"], "Permissions": [], "Description": "Set the recommended time that non-interactive controls need to remain on the screen to support the user.", "history": "Added in API level 29", "FullName": "public void setNonInteractiveUiTimeoutMillis (int timeout)"}, "getDescription()": {"Returns": [["@B_java#lang#String_E@", "The description."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#accessibilityservice#AccessibilityServiceInfo#loadDescription_E@. Gets the non-localized description of the accessibility service.", "history": "Added in API level 14 Deprecated in API level 16", "FullName": "public String getDescription ()"}, "getResolveInfo()": {"Returns": [["@B_android#content#pm#ResolveInfo_E@", "The info."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The service @B_android#content#pm#ResolveInfo_E@.", "history": "Added in API level 14", "FullName": "public ResolveInfo getResolveInfo ()"}, "loadSummary(android.content.pm.PackageManager)": {"Returns": [["@B_java#lang#CharSequence_E@", "The localized summary if available, and null if a summary has not been provided."]], "Parameters": [["@B_android#content#pm#PackageManager_E@", "PackageManager no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The localized summary of the accessibility service.", "history": "Added in API level 26", "FullName": "public CharSequence loadSummary (PackageManager packageManager)"}, "flagToString(int)": {"Returns": [["@B_java#lang#String_E@", "The string representation."]], "Parameters": [["int", "int: The flag."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the string representation of a flag. For example, @B_android#accessibilityservice#AccessibilityServiceInfo#DEFAULT_E@ is represented by the string DEFAULT.", "history": "Added in API level 14", "FullName": "public static String flagToString (int flag)"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 4", "FullName": "public String toString ()"}, "AccessibilityServiceInfo()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new instance.", "history": "Added in API level 4", "FullName": "public AccessibilityServiceInfo ()"}, "getSettingsActivityName()": {"Returns": [["@B_java#lang#String_E@", "The settings activity name."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The settings activity name.", "history": "Added in API level 14", "FullName": "public String getSettingsActivityName ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 4", "FullName": "public void writeToParcel (Parcel parcel, int flagz)"}, "getNonInteractiveUiTimeoutMillis()": {"Returns": [["int", "The timeout in milliseconds."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#accessibilityservice#AccessibilityServiceInfo#setNonInteractiveUiTimeoutMillis_E@"], "Permissions": [], "Description": "Get the recommended timeout for non-interactive controls.", "history": "Added in API level 29", "FullName": "public int getNonInteractiveUiTimeoutMillis ()"}}, "Inheritance": [], "ClassName": "android.accessibilityservice.AccessibilityServiceInfo", "ClassDesc": "This class describes an @B_android#accessibilityservice#AccessibilityService_E@. The system notifies an @B_android#accessibilityservice#AccessibilityService_E@ for @B_android#view#accessibility#AccessibilityEvent_E@s according to the information encapsulated in this class."}