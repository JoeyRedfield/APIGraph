{"Functions": {"SQLClientInfoException(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.sql.ClientInfoStatus>,java.lang.Throwable)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a description of the exception"], ["@B_java#lang#String_E@", "String: an XOPEN or SQL:2003 code identifying the exception"], ["@B_java#util#Map_E@", "Map: A Map containing the property values that could not be set. The keys in the Map contain the names of the client info properties that could not be set and the values contain one of the reason codes defined in ClientInfoStatus"], ["@B_java#lang#Throwable_E@", "Throwable: the underlying reason for this SQLException (which is saved for later retrieval by the getCause() method); may be null indicating the cause is non-existent or unknown."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a SQLClientInfoException object initialized with a given reason, SQLState, cause and failedProperties. The vendor code is initialized to 0.", "history": "Added in API level 9", "FullName": "public SQLClientInfoException (String reason, String SQLState, Map<String, ClientInfoStatus> failedProperties, Throwable cause)"}, "SQLClientInfoException(java.lang.String,java.lang.String,int,java.util.Map<java.lang.String,java.sql.ClientInfoStatus>)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a description of the exception"], ["@B_java#lang#String_E@", "String: an XOPEN or SQL:2003 code identifying the exception"], ["int", "int: a database vendor-specific exception code"], ["@B_java#util#Map_E@", "Map: A Map containing the property values that could not be set. The keys in the Map contain the names of the client info properties that could not be set and the values contain one of the reason codes defined in ClientInfoStatus"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a SQLClientInfoException object initialized with a given reason, SQLState, vendorCode and failedProperties. The cause is not initialized, and may subsequently be initialized by a call to the @B_java#lang#Throwable#initCause_E@ method.", "history": "Added in API level 9", "FullName": "public SQLClientInfoException (String reason, String SQLState, int vendorCode, Map<String, ClientInfoStatus> failedProperties)"}, "SQLClientInfoException(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.sql.ClientInfoStatus>)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a description of the exception"], ["@B_java#lang#String_E@", "String: an XOPEN or SQL:2003 code identifying the exception"], ["@B_java#util#Map_E@", "Map: A Map containing the property values that could not be set. The keys in the Map contain the names of the client info properties that could not be set and the values contain one of the reason codes defined in ClientInfoStatus"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a SQLClientInfoException object initialized with a given reason, SQLState and failedProperties. The cause is not initialized, and may subsequently be initialized by a call to the @B_java#lang#Throwable#initCause_E@ method. The vendor code is initialized to 0.", "history": "Added in API level 9", "FullName": "public SQLClientInfoException (String reason, String SQLState, Map<String, ClientInfoStatus> failedProperties)"}, "SQLClientInfoException(java.util.Map<java.lang.String,java.sql.ClientInfoStatus>,java.lang.Throwable)": {"Returns": [], "Parameters": [["@B_java#util#Map_E@", "Map: A Map containing the property values that could not be set. The keys in the Map contain the names of the client info properties that could not be set and the values contain one of the reason codes defined in ClientInfoStatus"], ["@B_java#lang#Throwable_E@", "Throwable: the (which is saved for later retrieval by the getCause() method); may be null indicating the cause is non-existent or unknown."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a SQLClientInfoException object initialized with a given cause and failedProperties. The reason is initialized to null if cause==null or to cause.toString() if cause!=null and the vendor code is initialized to 0.", "history": "Added in API level 9", "FullName": "public SQLClientInfoException (Map<String, ClientInfoStatus> failedProperties, Throwable cause)"}, "SQLClientInfoException(java.lang.String,java.util.Map<java.lang.String,java.sql.ClientInfoStatus>,java.lang.Throwable)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a description of the exception"], ["@B_java#util#Map_E@", "Map: A Map containing the property values that could not be set. The keys in the Map contain the names of the client info properties that could not be set and the values contain one of the reason codes defined in ClientInfoStatus"], ["@B_java#lang#Throwable_E@", "Throwable: the underlying reason for this SQLException (which is saved for later retrieval by the getCause() method); may be null indicating the cause is non-existent or unknown."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a SQLClientInfoException object initialized with a given reason, cause and failedProperties. The SQLState is initialized to null and the vendor code is initialized to 0.", "history": "Added in API level 9", "FullName": "public SQLClientInfoException (String reason, Map<String, ClientInfoStatus> failedProperties, Throwable cause)"}, "getFailedProperties()": {"Returns": [["@B_java#util#Map_E@", "Map list containing the client info properties that could not be set"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the list of client info properties that could not be set. The keys in the Map contain the names of the client info properties that could not be set and the values contain one of the reason codes defined in ClientInfoStatus", "history": "Added in API level 9", "FullName": "public Map<String, ClientInfoStatus> getFailedProperties ()"}, "SQLClientInfoException(java.lang.String,java.util.Map<java.lang.String,java.sql.ClientInfoStatus>)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a description of the exception"], ["@B_java#util#Map_E@", "Map: A Map containing the property values that could not be set. The keys in the Map contain the names of the client info properties that could not be set and the values contain one of the reason codes defined in ClientInfoStatus"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a SQLClientInfoException object initialized with a given reason and failedProperties. The SQLState is initialized to null and the vendor code is initialized to 0. The cause is not initialized, and may subsequently be initialized by a call to the @B_java#lang#Throwable#initCause_E@ method.", "history": "Added in API level 9", "FullName": "public SQLClientInfoException (String reason, Map<String, ClientInfoStatus> failedProperties)"}, "SQLClientInfoException(java.util.Map<java.lang.String,java.sql.ClientInfoStatus>)": {"Returns": [], "Parameters": [["@B_java#util#Map_E@", "Map: A Map containing the property values that could not be set. The keys in the Map contain the names of the client info properties that could not be set and the values contain one of the reason codes defined in ClientInfoStatus"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a SQLClientInfoException object initialized with a given failedProperties. The reason and SQLState are initialized to null and the vendor code is initialized to 0. The cause is not initialized, and may subsequently be initialized by a call to the @B_java#lang#Throwable#initCause_E@ method.", "history": "Added in API level 9", "FullName": "public SQLClientInfoException (Map<String, ClientInfoStatus> failedProperties)"}, "SQLClientInfoException()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a SQLClientInfoException Object. The reason, SQLState, and failedProperties list are initialized to null and the vendor code is initialized to 0. The cause is not initialized, and may subsequently be initialized by a call to the @B_java#lang#Throwable#initCause_E@ method.", "history": "Added in API level 9", "FullName": "public SQLClientInfoException ()"}, "SQLClientInfoException(java.lang.String,java.lang.String,int,java.util.Map<java.lang.String,java.sql.ClientInfoStatus>,java.lang.Throwable)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a description of the exception"], ["@B_java#lang#String_E@", "String: an XOPEN or SQL:2003 code identifying the exception"], ["int", "int: a database vendor-specific exception code"], ["@B_java#util#Map_E@", "Map: A Map containing the property values that could not be set. The keys in the Map contain the names of the client info properties that could not be set and the values contain one of the reason codes defined in ClientInfoStatus"], ["@B_java#lang#Throwable_E@", "Throwable: the underlying reason for this SQLException (which is saved for later retrieval by the getCause() method); may be null indicating the cause is non-existent or unknown."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a SQLClientInfoException object initialized with a given reason, SQLState, cause, vendorCode and failedProperties.", "history": "Added in API level 9", "FullName": "public SQLClientInfoException (String reason, String SQLState, int vendorCode, Map<String, ClientInfoStatus> failedProperties, Throwable cause)"}}, "Inheritance": ["@B_java#lang#Throwable_E@", "@B_java#lang#Exception_E@", "@B_java#sql#SQLException_E@"], "ClassName": "java.sql.SQLClientInfoException", "ClassDesc": "The subclass of @B_java#sql#SQLException_E@ is thrown when one or more client info properties could not be set on a Connection. In addition to the information provided by SQLException, a SQLClientInfoException provides a list of client info properties that were not set. Some databases do not allow multiple client info properties to be set atomically. For those databases, it is possible that some of the client info properties had been set even though the Connection.setClientInfo method threw an exception. An application can use the getFailedProperties method to retrieve a list of client info properties that were not set. The properties are identified by passing a Map<String,ClientInfoStatus> to the appropriate SQLClientInfoException constructor."}