{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "A descriptive string"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string describing this coder result.", "history": "Added in API level 1", "FullName": "public String toString ()"}, "isUnderflow()": {"Returns": [["boolean", "true if, and only if, this object denotes underflow"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tells whether or not this object describes an underflow condition.", "history": "Added in API level 1", "FullName": "public boolean isUnderflow ()"}, "throwException()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#nio#BufferUnderflowException_E@", "If this object is @B_java#nio#charset#CoderResult#UNDERFLOW_E@"], ["@B_java#nio#BufferOverflowException_E@", "If this object is @B_java#nio#charset#CoderResult#OVERFLOW_E@"], ["@B_java#nio#charset#MalformedInputException_E@", "If this object represents a malformed-input error; the exception's length value will be that of this object"], ["@B_java#nio#charset#UnmappableCharacterException_E@", "If this object represents an unmappable-character error; the exceptions length value will be that of this object"], ["@B_java#nio#charset#CharacterCodingException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Throws an exception appropriate to the result described by this object.", "history": "Added in API level 1", "FullName": "public void throwException ()"}, "unmappableForLength(int)": {"Returns": [["@B_java#nio#charset#CoderResult_E@", "The requested coder-result object"]], "Parameters": [["int", "int: The given length"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Static factory method that returns the unique result object describing an unmappable-character error of the given length.", "history": "Added in API level 1", "FullName": "public static CoderResult unmappableForLength (int length)"}, "length()": {"Returns": [["int", "The length of the erroneous input, a positive integer"]], "Parameters": [], "Throws": [["@B_java#lang#UnsupportedOperationException_E@", "If this object does not describe an error condition, that is, if the @B_java#nio#charset#CoderResult#isError_E@ does not return true"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the length of the erroneous input described by this object", "history": "Added in API level 1", "FullName": "public int length ()"}, "isUnmappable()": {"Returns": [["boolean", "true if, and only if, this object denotes an unmappable-character error"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tells whether or not this object describes an unmappable-character error.", "history": "Added in API level 1", "FullName": "public boolean isUnmappable ()"}, "malformedForLength(int)": {"Returns": [["@B_java#nio#charset#CoderResult_E@", "The requested coder-result object"]], "Parameters": [["int", "int: The given length"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Static factory method that returns the unique object describing a malformed-input error of the given length.", "history": "Added in API level 1", "FullName": "public static CoderResult malformedForLength (int length)"}, "isError()": {"Returns": [["boolean", "true if, and only if, this object denotes either a malformed-input error or an unmappable-character error"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tells whether or not this object describes an error condition.", "history": "Added in API level 1", "FullName": "public boolean isError ()"}, "isMalformed()": {"Returns": [["boolean", "true if, and only if, this object denotes a malformed-input error"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tells whether or not this object describes a malformed-input error.", "history": "Added in API level 1", "FullName": "public boolean isMalformed ()"}, "isOverflow()": {"Returns": [["boolean", "true if, and only if, this object denotes overflow"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tells whether or not this object describes an overflow condition.", "history": "Added in API level 1", "FullName": "public boolean isOverflow ()"}}, "Inheritance": [], "ClassName": "java.nio.charset.CoderResult", "ClassDesc": "A description of the result state of a coder. A charset coder, that is, either a decoder or an encoder, consumes bytes (or characters) from an input buffer, translates them, and writes the resulting characters (or bytes) to an output buffer. A coding process terminates for one of four categories of reasons, which are described by instances of this class: @B_java#nio#charset#CoderResult#UNDERFLOW_E@, whose @B_java#nio#charset#CoderResult#isUnderflow_E@ method returns @B_java#nio#charset#CoderResult#OVERFLOW_E@, whose @B_java#nio#charset#CoderResult#isOverflow_E@ method returns A @B_java#nio#charset#CoderResult#isMalformed_E@ method returns @B_java#nio#charset#CoderResult#length_E@ method returns the length of the malformed sequence. There is one unique instance of this class for all malformed-input errors of a given length. An @B_java#nio#charset#CoderResult#isUnmappable_E@ method returns @B_java#nio#charset#CoderResult#length_E@ method returns the length of the input sequence denoting the unmappable character. There is one unique instance of this class for all unmappable-character errors of a given length. For convenience, the @B_java#nio#charset#CoderResult#isError_E@ method returns"}