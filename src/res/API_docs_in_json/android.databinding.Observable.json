{"Functions": {}, "Inheritance": [], "ClassName": "android.databinding.Observable", "ClassDesc": "Observable classes provide a way in which data bound UI can be notified of changes. @B_android#databinding#ObservableList_E@ and @B_android#databinding#ObservableMap_E@ also provide the ability to notify when changes occur. ObservableField, ObservableParcelable, ObservableBoolean, ObservableByte, ObservableShort, ObservableInt, ObservableLong, ObservableFloat, and ObservableDouble provide a means by which properties may be notified without implementing Observable. An Observable object should notify the @B_android#databinding#Observable#OnPropertyChangedCallback_E@ whenever an observed property of the class changes. The getter for an observable property should be annotated with @B_android#databinding#Bindable_E@. Convenience class BaseObservable implements this interface and PropertyChangeRegistry can help classes that don't extend BaseObservable to implement the listener registry."}