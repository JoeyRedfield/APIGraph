{"Functions": {"register(java.lang.String, org.apache.http.auth.AuthSchemeFactory)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "the identifier for this scheme"], ["@B_org#apache#http#auth#AuthSchemeFactory_E@", "the @B_org#apache#http#auth#AuthSchemeFactory_E@ class to register"]], "Throws": [], "SeeAlso": ["@B_org#apache#http#auth#AuthSchemeRegistry#getAuthScheme_E@"], "Permissions": [], "Description": "Registers a @B_org#apache#http#auth#AuthSchemeFactory_E@ with the given identifier. If a factory with the given name already exists it will be overridden. This name is the same one used to retrieve the @B_org#apache#http#auth#AuthScheme_E@ from @B_org#apache#http#auth#AuthSchemeRegistry#getAuthScheme_E@. Please note that custom authentication preferences, if used, need to be updated accordingly for the new @B_org#apache#http#auth#AuthScheme_E@ to take effect.", "history": "Added in API level 1", "FullName": "public synchronized void register (String name, AuthSchemeFactory factory)"}, "setItems(java.util.Map<java.lang.String, org.apache.http.auth.AuthSchemeFactory>)": {"Returns": [], "Parameters": [["@B_java#util#Map_E@", "authentication schemes"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Populates the internal collection of registered @B_org#apache#http#auth#AuthScheme_E@ with the content of the map passed as a parameter.", "history": "Added in API level 1", "FullName": "public synchronized void setItems (Map<String, AuthSchemeFactory> map)"}, "unregister(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "the identifier of the class to unregister"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Unregisters the class implementing an @B_org#apache#http#auth#AuthScheme_E@ with the given name.", "history": "Added in API level 1", "FullName": "public synchronized void unregister (String name)"}, "getSchemeNames()": {"Returns": [["", "list of registered scheme names"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtains a list containing names of all registered @B_org#apache#http#auth#AuthScheme_E@ in their default order.", "history": "Added in API level 1", "FullName": "public synchronized List<String> getSchemeNames ()"}, "getAuthScheme(java.lang.String, org.apache.http.params.HttpParams)": {"Returns": [["", "@B_org#apache#http#auth#AuthScheme_E@"]], "Parameters": [["@B_java#lang#String_E@", "the @B_org#apache#http#auth#AuthScheme_E@ identifier"], ["@B_org#apache#http#params#HttpParams_E@", "the @B_org#apache#http#params#HttpParams_E@ for the authentication scheme."]], "Throws": [["@B_java#lang#IllegalStateException_E@", "if a scheme with the given name cannot be found"]], "SeeAlso": [], "Permissions": [], "Description": "Gets the @B_org#apache#http#auth#AuthScheme_E@ with the given name.", "history": "Added in API level 1", "FullName": "public synchronized AuthScheme getAuthScheme (String name, HttpParams params)"}, "AuthSchemeRegistry()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public AuthSchemeRegistry ()"}}, "Inheritance": [], "ClassName": "org.apache.http.auth.AuthSchemeRegistry", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Authentication scheme registry that can be used to obtain the corresponding authentication scheme implementation for a given type of authorization challenge."}