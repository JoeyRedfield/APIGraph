{"Functions": {"shutdown()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Shuts down this connection manager and releases allocated resources. This includes closing all connections, whether they are currently used or not.", "history": "Added in API level 1", "FullName": "public abstract void shutdown ()"}, "requestConnection(org.apache.http.conn.routing.HttpRoute, java.lang.Object)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a new @B_org#apache#http#conn#ClientConnectionRequest_E@, from which a @B_org#apache#http#conn#ManagedClientConnection_E@ can be obtained or the request can be aborted.", "history": "Added in API level 1", "FullName": "public abstract ClientConnectionRequest requestConnection (HttpRoute route, Object state)"}, "closeExpiredConnections()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Closes all expired connections in the pool. Open connections in the pool that have not been used for the timespan defined when the connection was released will be closed. Currently allocated connections are not subject to this method. Times will be checked with milliseconds precision.", "history": "Added in API level 1", "FullName": "public abstract void closeExpiredConnections ()"}, "getSchemeRegistry()": {"Returns": [["", "the scheme registry, never null"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtains the scheme registry used by this manager.", "history": "Added in API level 1", "FullName": "public abstract SchemeRegistry getSchemeRegistry ()"}, "releaseConnection(org.apache.http.conn.ManagedClientConnection, long, java.util.concurrent.TimeUnit)": {"Returns": [], "Parameters": [["@B_org#apache#http#conn#ManagedClientConnection_E@", "the connection to release"], ["long", "the duration of time this connection is valid for reuse"], ["@B_java#util#concurrent#TimeUnit_E@", "the unit of time validDuration is measured in"]], "Throws": [], "SeeAlso": ["@B_org#apache#http#conn#ClientConnectionManager#closeExpiredConnections_E@"], "Permissions": [], "Description": "Releases a connection for use by others. You may optionally specify how long the connection is valid to be reused. Values <= 0 are considered to be valid forever. If the connection is not marked as reusable, the connection will not be reused regardless of the valid duration. If the connection has been released before, the call will be ignored.", "history": "Added in API level 1", "FullName": "public abstract void releaseConnection (ManagedClientConnection conn, long validDuration, TimeUnit timeUnit)"}, "closeIdleConnections(long, java.util.concurrent.TimeUnit)": {"Returns": [], "Parameters": [["long", "the idle time of connections to be closed"], ["@B_java#util#concurrent#TimeUnit_E@", "the unit for the idletime"]], "Throws": [], "SeeAlso": ["@B_org#apache#http#conn#ClientConnectionManager#closeExpiredConnections_E@"], "Permissions": [], "Description": "Closes idle connections in the pool. Open connections in the pool that have not been used for the timespan given by the argument will be closed. Currently allocated connections are not subject to this method. Times will be checked with milliseconds precision All expired connections will also be closed.", "history": "Added in API level 1", "FullName": "public abstract void closeIdleConnections (long idletime, TimeUnit tunit)"}}, "Inheritance": [], "ClassName": "org.apache.http.conn.ClientConnectionManager", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Management interface for @B_org#apache#http#conn#ManagedClientConnection_E@."}