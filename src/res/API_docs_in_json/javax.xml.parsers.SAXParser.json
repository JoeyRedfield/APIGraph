{"Functions": {"parse(java.io.File,org.xml.sax.helpers.DefaultHandler)": {"Returns": [], "Parameters": [["@B_java#io#File_E@", "File: The file containing the XML to parse"], ["@B_org#xml#sax#helpers#DefaultHandler_E@", "DefaultHandler: The SAX DefaultHandler to use."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the File object is null."], ["@B_java#io#IOException_E@", "If any IO errors occur."], ["@B_org#xml#sax#SAXException_E@", "If any SAX errors occur during processing."]], "SeeAlso": ["@B_org#xml#sax#DocumentHandler_E@"], "Permissions": [], "Description": "Parse the content of the file specified as XML using the specified @B_org#xml#sax#helpers#DefaultHandler_E@.", "history": "Added in API level 1", "FullName": "public void parse (File f, DefaultHandler dh)"}, "parse(org.xml.sax.InputSource,org.xml.sax.HandlerBase)": {"Returns": [], "Parameters": [["@B_org#xml#sax#InputSource_E@", "InputSource: The InputSource containing the content to be parsed."], ["@B_org#xml#sax#HandlerBase_E@", "HandlerBase: The SAX HandlerBase to use."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the InputSource object is null."], ["@B_java#io#IOException_E@", "If any IO errors occur."], ["@B_org#xml#sax#SAXException_E@", "If any SAX errors occur during processing."]], "SeeAlso": ["@B_org#xml#sax#DocumentHandler_E@"], "Permissions": [], "Description": "Parse the content given @B_org#xml#sax#InputSource_E@ as XML using the specified @B_org#xml#sax#HandlerBase_E@.", "history": "Added in API level 1", "FullName": "public void parse (InputSource is, HandlerBase hb)"}, "parse(org.xml.sax.InputSource,org.xml.sax.helpers.DefaultHandler)": {"Returns": [], "Parameters": [["@B_org#xml#sax#InputSource_E@", "InputSource: The InputSource containing the content to be parsed."], ["@B_org#xml#sax#helpers#DefaultHandler_E@", "DefaultHandler: The SAX DefaultHandler to use."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the InputSource object is null."], ["@B_java#io#IOException_E@", "If any IO errors occur."], ["@B_org#xml#sax#SAXException_E@", "If any SAX errors occur during processing."]], "SeeAlso": ["@B_org#xml#sax#DocumentHandler_E@"], "Permissions": [], "Description": "Parse the content given @B_org#xml#sax#InputSource_E@ as XML using the specified @B_org#xml#sax#helpers#DefaultHandler_E@.", "history": "Added in API level 1", "FullName": "public void parse (InputSource is, DefaultHandler dh)"}, "isXIncludeAware()": {"Returns": [["boolean", "the return value of the @B_javax#xml#parsers#SAXParserFactory#isXIncludeAware_E@ when this parser was created from factory."]], "Parameters": [], "Throws": [["@B_java#lang#UnsupportedOperationException_E@", "For backward compatibility, when implementations for earlier versions of JAXP is used, this exception will be thrown."]], "SeeAlso": ["@B_javax#xml#parsers#SAXParserFactory#setXIncludeAware_E@"], "Permissions": [], "Description": "Get the XInclude processing mode for this parser.", "history": "Added in API level 1", "FullName": "public boolean isXIncludeAware ()"}, "getProperty(java.lang.String)": {"Returns": [["@B_java#lang#Object_E@", "Value of the requested property."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the property to be retrieved."]], "Throws": [["@B_org#xml#sax#SAXNotRecognizedException_E@", "When the underlying XMLReader does not recognize the property name."], ["@B_org#xml#sax#SAXNotSupportedException_E@", "When the underlying XMLReader recognizes the property name but doesn't support the property."]], "SeeAlso": ["@B_org#xml#sax#XMLReader#getProperty_E@"], "Permissions": [], "Description": "Returns the particular property requested for in the underlying implementation of @B_org#xml#sax#XMLReader_E@.", "history": "Added in API level 1", "FullName": "public abstract Object getProperty (String name)"}, "parse(java.lang.String, org.xml.sax.HandlerBase)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The location of the content to be parsed."], ["@B_org#xml#sax#HandlerBase_E@", "HandlerBase: The SAX HandlerBase to use."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the uri is null."], ["@B_java#io#IOException_E@", "If any IO errors occur."], ["@B_org#xml#sax#SAXException_E@", "If any SAX errors occur during processing."]], "SeeAlso": ["@B_org#xml#sax#DocumentHandler_E@"], "Permissions": [], "Description": "Parse the content described by the giving Uniform Resource Identifier (URI) as XML using the specified @B_org#xml#sax#HandlerBase_E@.", "history": "added in API level 1", "FullName": "public void parse (String uri, HandlerBase hb)"}, "getParser()": {"Returns": [["@B_org#xml#sax#Parser_E@", "The SAX parser that is encapsulated by the implementation of this class."]], "Parameters": [], "Throws": [["@B_org#xml#sax#SAXException_E@", "If any SAX errors occur during processing."]], "SeeAlso": [], "Permissions": [], "Description": "Returns the SAX parser that is encapsulated by the implementation of this class.", "history": "Added in API level 1", "FullName": "public abstract Parser getParser ()"}, "parse(java.lang.String,org.xml.sax.HandlerBase)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The location of the content to be parsed."], ["@B_org#xml#sax#HandlerBase_E@", "HandlerBase: The SAX HandlerBase to use."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the uri is null."], ["@B_java#io#IOException_E@", "If any IO errors occur."], ["@B_org#xml#sax#SAXException_E@", "If any SAX errors occur during processing."]], "SeeAlso": ["@B_org#xml#sax#DocumentHandler_E@"], "Permissions": [], "Description": "Parse the content described by the giving Uniform Resource Identifier (URI) as XML using the specified @B_org#xml#sax#HandlerBase_E@.", "history": "Added in API level 1", "FullName": "public void parse (String uri, HandlerBase hb)"}, "parse(java.io.File, org.xml.sax.HandlerBase)": {"Returns": [], "Parameters": [["@B_java#io#File_E@", "File: The file containing the XML to parse"], ["@B_org#xml#sax#HandlerBase_E@", "HandlerBase: The SAX HandlerBase to use."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the File object is null."], ["@B_java#io#IOException_E@", "If any IO errors occur."], ["@B_org#xml#sax#SAXException_E@", "If any SAX errors occur during processing."]], "SeeAlso": ["@B_org#xml#sax#DocumentHandler_E@"], "Permissions": [], "Description": "Parse the content of the file specified as XML using the specified @B_org#xml#sax#HandlerBase_E@.", "history": "added in API level 1", "FullName": "public void parse (File f, HandlerBase hb)"}, "parse(java.io.InputStream,org.xml.sax.helpers.DefaultHandler,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#io#InputStream_E@", "InputStream: InputStream containing the content to be parsed."], ["@B_org#xml#sax#helpers#DefaultHandler_E@", "DefaultHandler: The SAX DefaultHandler to use."], ["@B_java#lang#String_E@", "String: The systemId which is needed for resolving relative URIs."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the given InputStream is null."], ["@B_java#io#IOException_E@", "If any IO errors occur."], ["@B_org#xml#sax#SAXException_E@", "If any SAX errors occur during processing."]], "SeeAlso": ["@B_org#xml#sax#DocumentHandler_E@"], "Permissions": [], "Description": "Parse the content of the given @B_java#io#InputStream_E@ instance as XML using the specified @B_org#xml#sax#helpers#DefaultHandler_E@.", "history": "Added in API level 1", "FullName": "public void parse (InputStream is, DefaultHandler dh, String systemId)"}, "parse(java.io.InputStream,org.xml.sax.helpers.DefaultHandler)": {"Returns": [], "Parameters": [["@B_java#io#InputStream_E@", "InputStream: InputStream containing the content to be parsed."], ["@B_org#xml#sax#helpers#DefaultHandler_E@", "DefaultHandler: The SAX DefaultHandler to use."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the given InputStream is null."], ["@B_java#io#IOException_E@", "If any IO errors occur."], ["@B_org#xml#sax#SAXException_E@", "If any SAX errors occur during processing."]], "SeeAlso": ["@B_org#xml#sax#DocumentHandler_E@"], "Permissions": [], "Description": "Parse the content of the given @B_java#io#InputStream_E@ instance as XML using the specified @B_org#xml#sax#helpers#DefaultHandler_E@.", "history": "Added in API level 1", "FullName": "public void parse (InputStream is, DefaultHandler dh)"}, "reset()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reset this SAXParser to its original configuration. SAXParser is reset to the same state as when it was created with @B_javax#xml#parsers#SAXParserFactory#newSAXParser_E@. reset() is designed to allow the reuse of existing SAXParsers thus saving resources associated with the creation of new SAXParsers. The reset SAXParser is not guaranteed to have the same @B_javax#xml#validation#Schema_E@ Object, e.g. @B_java#lang#Object#equals_E@. It is guaranteed to have a functionally equal Schema.", "history": "Added in API level 1", "FullName": "public void reset ()"}, "isNamespaceAware()": {"Returns": [["boolean", "true if this parser is configured to understand namespaces; false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether or not this parser is configured to understand namespaces.", "history": "Added in API level 1", "FullName": "public abstract boolean isNamespaceAware ()"}, "parse(java.io.InputStream,org.xml.sax.HandlerBase)": {"Returns": [], "Parameters": [["@B_java#io#InputStream_E@", "InputStream: InputStream containing the content to be parsed."], ["@B_org#xml#sax#HandlerBase_E@", "HandlerBase: The SAX HandlerBase to use."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the given InputStream is null."], ["@B_org#xml#sax#SAXException_E@", "If parse produces a SAX error."], ["@B_java#io#IOException_E@", "If an IO error occurs interacting with the InputStream."]], "SeeAlso": ["@B_org#xml#sax#DocumentHandler_E@"], "Permissions": [], "Description": "Parse the content of the given @B_java#io#InputStream_E@ instance as XML using the specified @B_org#xml#sax#HandlerBase_E@.", "history": "Added in API level 1", "FullName": "public void parse (InputStream is, HandlerBase hb)"}, "parse(java.lang.String,org.xml.sax.helpers.DefaultHandler)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The location of the content to be parsed."], ["@B_org#xml#sax#helpers#DefaultHandler_E@", "DefaultHandler: The SAX DefaultHandler to use."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the uri is null."], ["@B_java#io#IOException_E@", "If any IO errors occur."], ["@B_org#xml#sax#SAXException_E@", "If any SAX errors occur during processing."]], "SeeAlso": ["@B_org#xml#sax#DocumentHandler_E@"], "Permissions": [], "Description": "Parse the content described by the giving Uniform Resource Identifier (URI) as XML using the specified @B_org#xml#sax#helpers#DefaultHandler_E@.", "history": "Added in API level 1", "FullName": "public void parse (String uri, DefaultHandler dh)"}, "SAXParser()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Protected constructor to prevent instantiation. Use @B_javax#xml#parsers#SAXParserFactory#newSAXParser_E@.", "history": "Added in API level 1", "FullName": "protected SAXParser ()"}, "getSchema()": {"Returns": [["@B_javax#xml#validation#Schema_E@", "@B_javax#xml#validation#Schema_E@ being used or null if none in use"]], "Parameters": [], "Throws": [["@B_java#lang#UnsupportedOperationException_E@", "For backward compatibility, when implementations for earlier versions of JAXP is used, this exception will be thrown."]], "SeeAlso": [], "Permissions": [], "Description": "Get a reference to the the @B_javax#xml#validation#Schema_E@ being used by the XML processor. If no schema is being used, null is returned.", "history": "Added in API level 8", "FullName": "public Schema getSchema ()"}, "parse(java.io.File,org.xml.sax.HandlerBase)": {"Returns": [], "Parameters": [["@B_java#io#File_E@", "File: The file containing the XML to parse"], ["@B_org#xml#sax#HandlerBase_E@", "HandlerBase: The SAX HandlerBase to use."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the File object is null."], ["@B_java#io#IOException_E@", "If any IO errors occur."], ["@B_org#xml#sax#SAXException_E@", "If any SAX errors occur during processing."]], "SeeAlso": ["@B_org#xml#sax#DocumentHandler_E@"], "Permissions": [], "Description": "Parse the content of the file specified as XML using the specified @B_org#xml#sax#HandlerBase_E@.", "history": "Added in API level 1", "FullName": "public void parse (File f, HandlerBase hb)"}, "isValidating()": {"Returns": [["boolean", "true if this parser is configured to validate XML documents; false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether or not this parser is configured to validate XML documents.", "history": "Added in API level 1", "FullName": "public abstract boolean isValidating ()"}, "parse(java.io.InputStream,org.xml.sax.HandlerBase,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#io#InputStream_E@", "InputStream: InputStream containing the content to be parsed."], ["@B_org#xml#sax#HandlerBase_E@", "HandlerBase: The SAX HandlerBase to use."], ["@B_java#lang#String_E@", "String: The systemId which is needed for resolving relative URIs."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the given InputStream is null."], ["@B_java#io#IOException_E@", "If any IO error occurs interacting with the InputStream."], ["@B_org#xml#sax#SAXException_E@", "If any SAX errors occur during processing."]], "SeeAlso": ["@B_org#xml#sax#DocumentHandler_E@"], "Permissions": [], "Description": "Parse the content of the given @B_java#io#InputStream_E@ instance as XML using the specified @B_org#xml#sax#HandlerBase_E@.", "history": "Added in API level 1", "FullName": "public void parse (InputStream is, HandlerBase hb, String systemId)"}, "setProperty(java.lang.String,java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The name of the property to be set."], ["@B_java#lang#Object_E@", "Object: The value of the property to be set."]], "Throws": [["@B_org#xml#sax#SAXNotRecognizedException_E@", "When the underlying XMLReader does not recognize the property name."], ["@B_org#xml#sax#SAXNotSupportedException_E@", "When the underlying XMLReader recognizes the property name but doesn't support the property."]], "SeeAlso": ["@B_org#xml#sax#XMLReader#setProperty_E@"], "Permissions": [], "Description": "Sets the particular property in the underlying implementation of @B_org#xml#sax#XMLReader_E@. A list of the core features and properties can be found at", "history": "Added in API level 1", "FullName": "public abstract void setProperty (String name, Object value)"}, "setProperty(java.lang.String, java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The name of the property to be set."], ["@B_java#lang#Object_E@", "Object: The value of the property to be set."]], "Throws": [["@B_org#xml#sax#SAXNotRecognizedException_E@", "When the underlying XMLReader does not recognize the property name."], ["@B_org#xml#sax#SAXNotSupportedException_E@", "When the underlying XMLReader recognizes the property name but doesn't support the property."]], "SeeAlso": ["@B_org#xml#sax#XMLReader#setProperty_E@"], "Permissions": [], "Description": "Sets the particular property in the underlying implementation of @B_org#xml#sax#XMLReader_E@. A list of the core features and properties can be found at", "history": "added in API level 1", "FullName": "public abstract void setProperty (String name, Object value)"}, "getXMLReader()": {"Returns": [["@B_org#xml#sax#XMLReader_E@", "The XMLReader that is encapsulated by the implementation of this class."]], "Parameters": [], "Throws": [["@B_org#xml#sax#SAXException_E@", "If any SAX errors occur during processing."]], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_org#xml#sax#XMLReader_E@ that is encapsulated by the implementation of this class.", "history": "Added in API level 1", "FullName": "public abstract XMLReader getXMLReader ()"}}, "Inheritance": [], "ClassName": "javax.xml.parsers.SAXParser", "ClassDesc": "Defines the API that wraps an @B_org#xml#sax#XMLReader_E@ implementation class. In JAXP 1.0, this class wrapped the @B_org#xml#sax#Parser_E@ interface, however this interface was replaced by the @B_org#xml#sax#XMLReader_E@. For ease of transition, this class continues to support the same name and interface as well as supporting new methods. An instance of this class can be obtained from the @B_javax#xml#parsers#SAXParserFactory#newSAXParser_E@ method. Once an instance of this class is obtained, XML can be parsed from a variety of input sources. These input sources are InputStreams, Files, URLs, and SAX InputSources. This static method creates a new factory instance based on a system property setting or uses the platform default if no property has been defined. The system property that controls which Factory implementation to create is named \"javax.xml.parsers.SAXParserFactory\". This property names a class that is a concrete subclass of this abstract class. If no property is defined, a platform default will be used. As the content is parsed by the underlying parser, methods of the given @B_org#xml#sax#HandlerBase_E@ or the @B_org#xml#sax#helpers#DefaultHandler_E@ are called. Implementations of this class which wrap an underlying implementation can consider using the @B_org#xml#sax#helpers#ParserAdapter_E@ class to initially adapt their SAX1 implementation to work under this revised class."}