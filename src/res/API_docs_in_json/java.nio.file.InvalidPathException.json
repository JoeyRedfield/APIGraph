{"Functions": {"InvalidPathException(java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the input string"], ["@B_java#lang#String_E@", "String: a string explaining why the input was rejected"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if either the input or reason strings are null"]], "SeeAlso": [], "Permissions": [], "Description": "Constructs an instance from the given input string and reason. The resulting object will have an error index of", "history": "Added in API level 26", "FullName": "public InvalidPathException (String input, String reason)"}, "getReason()": {"Returns": [["@B_java#lang#String_E@", "the reason string"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string explaining why the input string was rejected.", "history": "Added in API level 26", "FullName": "public String getReason ()"}, "InvalidPathException(java.lang.String,java.lang.String,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the input string"], ["@B_java#lang#String_E@", "String: a string explaining why the input was rejected"], ["int", "int: the index at which the error occurred, or -1 if the index is not known"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if either the input or reason strings are null"], ["@B_java#lang#IllegalArgumentException_E@", "if the error index is less than -1"]], "SeeAlso": [], "Permissions": [], "Description": "Constructs an instance from the given input string, reason, and error index.", "history": "Added in API level 26", "FullName": "public InvalidPathException (String input, String reason, int index)"}, "getMessage()": {"Returns": [["@B_java#lang#String_E@", "a string describing the error"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string describing the error. The resulting string consists of the reason string followed by a colon character (", "history": "Added in API level 26", "FullName": "public String getMessage ()"}, "getInput()": {"Returns": [["@B_java#lang#String_E@", "the input string"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the input string.", "history": "Added in API level 26", "FullName": "public String getInput ()"}, "getIndex()": {"Returns": [["int", "the error index"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an index into the input string of the position at which the error occurred, or", "history": "Added in API level 26", "FullName": "public int getIndex ()"}}, "Inheritance": ["@B_java#lang#Throwable_E@", "@B_java#lang#Exception_E@", "@B_java#lang#RuntimeException_E@", "@B_java#lang#IllegalArgumentException_E@"], "ClassName": "java.nio.file.InvalidPathException", "ClassDesc": "Unchecked exception thrown when path string cannot be converted into a @B_java#nio#file#Path_E@ because the path string contains invalid characters, or the path string is invalid for other file system specific reasons."}