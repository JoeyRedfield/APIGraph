{"Functions": {"clearHistory(android.content.ContentResolver)": {"Returns": [], "Parameters": [["@B_android#content#ContentResolver_E@", "The ContentResolver used to access the database."]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#WRITE_HISTORY_BOOKMARKS_E@"], "Description": "Delete all entries from the bookmarks/history table which are not bookmarks. Also set all visited bookmarks to unvisited. Requires @B_android#Manifest#permission#WRITE_HISTORY_BOOKMARKS_E@", "history": "Added in API level 1", "FullName": "public static final void clearHistory (ContentResolver cr)"}, "sendString(android.content.Context,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: the context used to start the activity"], ["@B_java#lang#String_E@", "String: the string to send"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sends the given string using an Intent with @B_android#content#Intent#ACTION_SEND_E@ and a mime type of text/plain. The string is put into @B_android#content#Intent#EXTRA_TEXT_E@.", "history": "Added in API level 1", "FullName": "public static final void sendString (Context context, String string)"}, "clearSearches(android.content.ContentResolver)": {"Returns": [], "Parameters": [["@B_android#content#ContentResolver_E@", "The ContentResolver used to access the database."]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#WRITE_HISTORY_BOOKMARKS_E@"], "Description": "Remove all searches from the search database. Requires @B_android#Manifest#permission#WRITE_HISTORY_BOOKMARKS_E@", "history": "Added in API level 1", "FullName": "public static final void clearSearches (ContentResolver cr)"}, "getAllVisitedUrls(android.content.ContentResolver)": {"Returns": [], "Parameters": [["@B_android#content#ContentResolver_E@", "The ContentResolver used to access the database."]], "Throws": [["@B_java#lang#IllegalStateException_E@", ""]], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#READ_HISTORY_BOOKMARKS_E@"], "Description": "Return a cursor pointing to a list of all visited site urls. The cursor will have a single column, @B_android#provider#Browser#BookmarkColumns#URL_E@. Requires @B_android#Manifest#permission#READ_HISTORY_BOOKMARKS_E@", "history": "Added in API level 1", "FullName": "public static final Cursor getAllVisitedUrls (ContentResolver cr)"}, "getAllBookmarks(android.content.ContentResolver)": {"Returns": [], "Parameters": [["@B_android#content#ContentResolver_E@", "The ContentResolver used to access the database."]], "Throws": [["@B_java#lang#IllegalStateException_E@", ""]], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#READ_HISTORY_BOOKMARKS_E@"], "Description": "Return a cursor pointing to a list of all the bookmarks. The cursor will have a single column, @B_android#provider#Browser#BookmarkColumns#URL_E@. Requires @B_android#Manifest#permission#READ_HISTORY_BOOKMARKS_E@", "history": "Added in API level 1", "FullName": "public static final Cursor getAllBookmarks (ContentResolver cr)"}, "canClearHistory(android.content.ContentResolver)": {"Returns": [["", "boolean True if the history can be cleared."]], "Parameters": [["@B_android#content#ContentResolver_E@", "The ContentResolver used to access the database."]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#READ_HISTORY_BOOKMARKS_E@"], "Description": "Returns whether there is any history to clear. Requires @B_android#Manifest#permission#READ_HISTORY_BOOKMARKS_E@", "history": "Added in API level 1", "FullName": "public static final boolean canClearHistory (ContentResolver cr)"}, "Browser()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public Browser ()"}, "truncateHistory(android.content.ContentResolver)": {"Returns": [], "Parameters": [["@B_android#content#ContentResolver_E@", "The ContentResolver used to access the database."]], "Throws": [], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#READ_HISTORY_BOOKMARKS_E@", "@B_android#Manifest#permission#WRITE_HISTORY_BOOKMARKS_E@"], "Description": "If there are more than MAX_HISTORY_COUNT non-bookmark history items in the bookmark/history table, delete TRUNCATE_N_OLDEST of them. This is used to keep our history table to a reasonable size. Note: it does not prune bookmarks. If the user wants 1000 bookmarks, the user gets 1000 bookmarks. Requires @B_android#Manifest#permission#READ_HISTORY_BOOKMARKS_E@ Requires @B_android#Manifest#permission#WRITE_HISTORY_BOOKMARKS_E@", "history": "Added in API level 1", "FullName": "public static final void truncateHistory (ContentResolver cr)"}}, "Inheritance": [], "ClassName": "android.provider.Browser", "ClassDesc": ""}