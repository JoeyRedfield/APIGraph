{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 11", "FullName": "public String toString ()"}, "CorrectionInfo(int,java.lang.CharSequence,java.lang.CharSequence)": {"Returns": [], "Parameters": [["int", "int: The offset in the edited text where the old and new text start."], ["@B_java#lang#CharSequence_E@", "CharSequence: The old text that has been replaced."], ["@B_java#lang#CharSequence_E@", "CharSequence: The replacement text."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 11", "FullName": "public CorrectionInfo (int offset, CharSequence oldText, CharSequence newText)"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The @B_android#os#Parcel_E@ to be written."], ["int", "int: The flags used for parceling."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Used to package this object into a @B_android#os#Parcel_E@.", "history": "added in API level 11", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getNewText()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the new text that corrects what was typed by the user.", "history": "Added in API level 11", "FullName": "public CharSequence getNewText ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The @B_android#os#Parcel_E@ to be written."], ["int", "int: The flags used for parceling."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Used to package this object into a @B_android#os#Parcel_E@.", "history": "Added in API level 11", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getOldText()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the text that has actually been typed by the user, and which has been corrected.", "history": "Added in API level 11", "FullName": "public CharSequence getOldText ()"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 11", "FullName": "public int describeContents ()"}, "getOffset()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the offset position of this correction in the text. Both the @B_android#view#inputmethod#CorrectionInfo#getOldText_E@ and @B_android#view#inputmethod#CorrectionInfo#getNewText_E@ start at this offset.", "history": "Added in API level 11", "FullName": "public int getOffset ()"}}, "Inheritance": [], "ClassName": "android.view.inputmethod.CorrectionInfo", "ClassDesc": "Information about a single text correction that an editor has reported to an input method."}