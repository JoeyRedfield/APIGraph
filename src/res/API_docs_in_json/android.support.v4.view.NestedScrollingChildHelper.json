{"Functions": {"isNestedScrollingEnabled()": {"Returns": [["boolean", "true if nested scrolling is enabled for this view"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check if nested scrolling is enabled for this view. This is a delegate method. Call it from your @B_android#view#View_E@ subclass method/@B_android#support#v4#view#NestedScrollingChild_E@ interface method with the same signature to implement the standard policy.", "history": "added in version 22.1.0", "FullName": "boolean isNestedScrollingEnabled ()"}, "NestedScrollingChildHelper(android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Construct a new helper for a given view.", "history": "added in version 22.1.0", "FullName": "NestedScrollingChildHelper (View view)"}, "startNestedScroll(int)": {"Returns": [["boolean", "true if a cooperating parent view was found and nested scrolling started successfully"]], "Parameters": [["int", "int: Supported nested scroll axes. See @B_android#support#v4#view#NestedScrollingChild#startNestedScroll_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Start a new nested scroll for this view. This is a delegate method. Call it from your @B_android#view#View_E@ subclass method/@B_android#support#v4#view#NestedScrollingChild_E@ interface method with the same signature to implement the standard policy.", "history": "added in version 22.1.0", "FullName": "boolean startNestedScroll (int axes)"}, "onStopNestedScroll(android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: Child view stopping its nested scroll. This may not be a direct child view."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a nested scrolling child stops its current nested scroll operation. This is a delegate method. Call it from your @B_android#view#View_E@ subclass method/@B_android#support#v4#view#NestedScrollingChild_E@ interface method with the same signature to implement the standard policy.", "history": "added in version 22.1.0", "FullName": "void onStopNestedScroll (View child)"}, "stopNestedScroll()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Stop a nested scroll in progress. This is a delegate method. Call it from your @B_android#view#View_E@ subclass method/@B_android#support#v4#view#NestedScrollingChild_E@ interface method with the same signature to implement the standard policy.", "history": "added in version 22.1.0", "FullName": "void stopNestedScroll ()"}, "hasNestedScrollingParent(int)": {"Returns": [["boolean", "true if this view has a nested scrolling parent, false otherwise"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check if this view has a nested scrolling parent view currently receiving events for a nested scroll in progress with the given type. This is a delegate method. Call it from your @B_android#view#View_E@ subclass method/@B_android#support#v4#view#NestedScrollingChild_E@ interface method with the same signature to implement the standard policy.", "history": "added in version 26.0.0-beta2", "FullName": "boolean hasNestedScrollingParent (int type)"}, "startNestedScroll(int, int)": {"Returns": [["boolean", "true if a cooperating parent view was found and nested scrolling started successfully"]], "Parameters": [["int", "int: Supported nested scroll axes. See @B_android#support#v4#view#NestedScrollingChild2#startNestedScroll_E@."], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Start a new nested scroll for this view. This is a delegate method. Call it from your @B_android#view#View_E@ subclass method/@B_android#support#v4#view#NestedScrollingChild2_E@ interface method with the same signature to implement the standard policy.", "history": "added in version 26.0.0-beta2", "FullName": "boolean startNestedScroll (int axes, int type)"}, "setNestedScrollingEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true to enable nested scrolling dispatch from this view, false otherwise"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enable nested scrolling. This is a delegate method. Call it from your @B_android#view#View_E@ subclass method/@B_android#support#v4#view#NestedScrollingChild_E@ interface method with the same signature to implement the standard policy.", "history": "added in version 22.1.0", "FullName": "void setNestedScrollingEnabled (boolean enabled)"}, "dispatchNestedPreFling(float, float)": {"Returns": [["boolean", "true if the parent consumed the nested fling"]], "Parameters": [["float", "float no parameter comment"], ["float", "float no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Dispatch a nested pre-fling operation to the current nested scrolling parent. This is a delegate method. Call it from your @B_android#view#View_E@ subclass method/@B_android#support#v4#view#NestedScrollingChild_E@ interface method with the same signature to implement the standard policy.", "history": "added in version 22.1.0", "FullName": "boolean dispatchNestedPreFling (float velocityX, float velocityY)"}, "dispatchNestedScroll(int, int, int, int, int[])": {"Returns": [["boolean", "true if the parent consumed any of the nested scroll"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int[]", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Dispatch one step of a nested scrolling operation to the current nested scrolling parent. This is a delegate method. Call it from your @B_android#view#View_E@ subclass method/@B_android#support#v4#view#NestedScrollingChild_E@ interface method with the same signature to implement the standard policy.", "history": "added in version 22.1.0", "FullName": "boolean dispatchNestedScroll (int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int[] offsetInWindow)"}, "stopNestedScroll(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Stop a nested scroll in progress. This is a delegate method. Call it from your @B_android#view#View_E@ subclass method/@B_android#support#v4#view#NestedScrollingChild2_E@ interface method with the same signature to implement the standard policy.", "history": "added in version 26.0.0-beta2", "FullName": "void stopNestedScroll (int type)"}, "dispatchNestedFling(float, float, boolean)": {"Returns": [["boolean", "true if the parent consumed the nested fling"]], "Parameters": [["float", "float no parameter comment"], ["float", "float no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Dispatch a nested fling operation to the current nested scrolling parent. This is a delegate method. Call it from your @B_android#view#View_E@ subclass method/@B_android#support#v4#view#NestedScrollingChild_E@ interface method with the same signature to implement the standard policy.", "history": "added in version 22.1.0", "FullName": "boolean dispatchNestedFling (float velocityX, float velocityY, boolean consumed)"}, "onDetachedFromWindow()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "View subclasses should always call this method on their NestedScrollingChildHelper when detached from a window. This is a delegate method. Call it from your @B_android#view#View_E@ subclass method/@B_android#support#v4#view#NestedScrollingChild_E@ interface method with the same signature to implement the standard policy.", "history": "added in version 22.1.0", "FullName": "void onDetachedFromWindow ()"}, "dispatchNestedPreScroll(int, int, int[], int[])": {"Returns": [["boolean", "true if the parent consumed any of the nested scroll"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int[]", "int no parameter comment"], ["int[]", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Dispatch one step of a nested pre-scrolling operation to the current nested scrolling parent. This is a delegate method. Call it from your @B_android#view#View_E@ subclass method/@B_android#support#v4#view#NestedScrollingChild_E@ interface method with the same signature to implement the standard policy.", "history": "added in version 22.1.0", "FullName": "boolean dispatchNestedPreScroll (int dx, int dy, int[] consumed, int[] offsetInWindow)"}, "hasNestedScrollingParent()": {"Returns": [["boolean", "true if this view has a nested scrolling parent, false otherwise"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check if this view has a nested scrolling parent view currently receiving events for a nested scroll in progress with the type of touch. This is a delegate method. Call it from your @B_android#view#View_E@ subclass method/@B_android#support#v4#view#NestedScrollingChild_E@ interface method with the same signature to implement the standard policy.", "history": "added in version 22.1.0", "FullName": "boolean hasNestedScrollingParent ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v4.view.NestedScrollingChildHelper", "ClassDesc": "Helper class for implementing nested scrolling child views compatible with Android platform versions earlier than Android 5.0 Lollipop (API 21). https:##developer#android#com@B_android#view#View_E@ subclasses should instantiate a final instance of this class as a field at construction. For each View method that has a matching method signature in this class, delegate the operation to the helper instance in an overridden method implementation. This implements the standard framework policy for nested scrolling. Views invoking nested scrolling functionality should always do so from the relevant @B_android#support#v4#view#ViewCompat_E@, @B_android#support#v4#view#ViewGroupCompat_E@ or @B_android#support#v4#view#ViewParentCompat_E@ compatibility shim static methods. This ensures interoperability with nested scrolling views on Android 5.0 Lollipop and newer."}