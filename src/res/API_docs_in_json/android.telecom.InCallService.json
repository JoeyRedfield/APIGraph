{"Functions": {"getCalls()": {"Returns": [["@B_java#util#List_E@", "A list of the relevant Calls."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtains the current list of Calls to be displayed by this in-call service.", "history": "Added in API level 23", "FullName": "public final List<Call> getCalls ()"}, "InCallService()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public InCallService ()"}, "onConnectionEvent(android.telecom.Call,java.lang.String,android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#telecom#Call_E@", "Call: The call the event is associated with."], ["@B_java#lang#String_E@", "String: The event."], ["@B_android#os#Bundle_E@", "Bundle: Any associated extras."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Unused; to handle connection events issued by a @B_android#telecom#ConnectionService_E@, implement the @B_android#telecom#Call#Callback#onConnectionEvent_E@ callback. See @B_android#telecom#Connection#sendConnectionEvent_E@.", "history": "Added in API level 25", "FullName": "public void onConnectionEvent (Call call, String event, Bundle extras)"}, "onCallRemoved(android.telecom.Call)": {"Returns": [], "Parameters": [["@B_android#telecom#Call_E@", "Call: A newly removed Call."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a Call has been removed from this in-call session. The in-call user experience should remove any state listeners from the specified Call and immediately stop displaying any information about this Call. Subsequent invocations of @B_android#telecom#InCallService#getCalls_E@ will no longer include this Call.", "history": "Added in API level 23", "FullName": "public void onCallRemoved (Call call)"}, "onBringToForeground(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: If true, put up the dialpad when the screen is shown."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called to bring the in-call screen to the foreground. The in-call experience should respond immediately by coming to the foreground to inform the user of the state of ongoing Calls.", "history": "Added in API level 23", "FullName": "public void onBringToForeground (boolean showDialpad)"}, "onUnbind(android.content.Intent)": {"Returns": [["boolean", "Return true if you would like to have the service's @B_android#app#Service#onRebind_E@ method later called when new clients bind to it."]], "Parameters": [["@B_android#content#Intent_E@", "Intent: The Intent that was used to bind to this service, as given to @B_android#content#Context#bindService_E@. Note that any extras that were included with the Intent at that point will not be seen here."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when all clients have disconnected from a particular interface published by the service. The default implementation does nothing and returns false.", "history": "Added in API level 23", "FullName": "public boolean onUnbind (Intent intent)"}, "getCallAudioState()": {"Returns": [["@B_android#telecom#CallAudioState_E@", "An object encapsulating the audio state. Returns null if the service is not fully initialized."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtains the current phone call audio state.", "history": "Added in API level 23", "FullName": "public final CallAudioState getCallAudioState ()"}, "onBind(android.content.Intent)": {"Returns": [["@B_android#os#IBinder_E@", "Return an IBinder through which clients can call on to the service."]], "Parameters": [["@B_android#content#Intent_E@", "Intent: The Intent that was used to bind to this service, as given to @B_android#content#Context#bindService_E@. Note that any extras that were included with the Intent at that point will not be seen here."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the communication channel to the service. May return null if clients can not bind to the service. The returned @B_android#os#IBinder_E@ is usually for a complex interface that has been Note that unlike other application components, calls on to the IBinder interface returned here may not happen on the main thread of the process. More information about the main thread can be found in", "history": "Added in API level 23", "FullName": "public IBinder onBind (Intent intent)"}, "onSilenceRinger()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called to silence the ringer if a ringing call exists.", "history": "Added in API level 24", "FullName": "public void onSilenceRinger ()"}, "canAddCall()": {"Returns": [["boolean", "Whether the phone supports adding more calls."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns if the device can support additional calls.", "history": "Added in API level 23", "FullName": "public final boolean canAddCall ()"}, "setMuted(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true if the microphone should be muted; false otherwise."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the microphone mute state. When this request is honored, there will be change to the @B_android#telecom#InCallService#getCallAudioState_E@.", "history": "Added in API level 23", "FullName": "public final void setMuted (boolean state)"}, "setAudioRoute(int)": {"Returns": [], "Parameters": [["int", "int: The audio route to use."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the audio route (speaker, bluetooth, etc...). When this request is honored, there will be change to the @B_android#telecom#InCallService#getCallAudioState_E@.", "history": "Added in API level 23", "FullName": "public final void setAudioRoute (int route)"}, "requestBluetoothAudio(android.bluetooth.BluetoothDevice)": {"Returns": [], "Parameters": [["@B_android#bluetooth#BluetoothDevice_E@", "BluetoothDevice: The bluetooth device to connect to. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Request audio routing to a specific bluetooth device. Calling this method may result in the device routing audio to a different bluetooth device than the one specified if the bluetooth stack is unable to route audio to the requested device. A list of available devices can be obtained via @B_android#telecom#CallAudioState#getSupportedBluetoothDevices_E@", "history": "Added in API level 28", "FullName": "public final void requestBluetoothAudio (BluetoothDevice bluetoothDevice)"}, "onCanAddCallChanged(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: Indicates whether an additional call can be added."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the ability to add more calls changes. If the phone cannot support more calls then canAddCall is set to false. If it can, then it is set to true. This can be used to control the visibility of UI to add more calls.", "history": "Added in API level 23", "FullName": "public void onCanAddCallChanged (boolean canAddCall)"}, "onCallAdded(android.telecom.Call)": {"Returns": [], "Parameters": [["@B_android#telecom#Call_E@", "Call: A newly added Call."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a Call has been added to this in-call session. The in-call user experience should add necessary state listeners to the specified Call and immediately start to show the user information about the existence and nature of this Call. Subsequent invocations of @B_android#telecom#InCallService#getCalls_E@ will include this Call.", "history": "Added in API level 23", "FullName": "public void onCallAdded (Call call)"}, "onCallAudioStateChanged(android.telecom.CallAudioState)": {"Returns": [], "Parameters": [["@B_android#telecom#CallAudioState_E@", "CallAudioState: The new @B_android#telecom#CallAudioState_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the audio state changes.", "history": "Added in API level 23", "FullName": "public void onCallAudioStateChanged (CallAudioState audioState)"}}, "Inheritance": ["@B_android#content#Context_E@", "@B_android#content#ContextWrapper_E@", "@B_android#app#Service_E@"], "ClassName": "android.telecom.InCallService", "ClassDesc": "This service is implemented by an app that wishes to provide functionality for managing phone calls. android.app.role.RoleManager to request that they fill the role. An app filling the role of the default phone app provides a user interface while the device is in a call, and the device is not in car mode. Below is an example manifest registration for an InCallService. The meta-data @B_android#telecom#TelecomManager#METADATA_IN_CALL_SERVICE_UI_E@ indicates that this particular InCallService implementation intends to replace the built-in in-call UI. The meta-data @B_android#telecom#TelecomManager#METADATA_IN_CALL_SERVICE_RINGING_E@ indicates that this @B_android#telecom#InCallService_E@ will play the ringtone for incoming calls. See In addition to implementing the @B_android#telecom#InCallService_E@ API, you must also declare an activity in your manifest which handles the @B_android#content#Intent#ACTION_DIAL_E@ intent. The example below illustrates how this is done: When a user installs your application and runs it for the first time, you should use the @B_android#app#role#RoleManager_E@ to prompt the user to see if they would like your app to be the new default phone app. The code below shows how your app can request to become the default phone/dialer app: Where your app declares the meta-data {@link TelecomManager#METADATA_IN_CALL_SERVICE_RINGING}, it is responsible for playing the ringtone for incoming calls. Your app should create a {@link android.app.NotificationChannel} which specifies the desired ringtone. For example: When your app receives a new incoming call, it creates a {@link android.app.Notification} for the incoming call and associates it with your incoming call notification channel. You can specify a {@link android.app.PendingIntent} on the notification which will launch your full screen incoming call UI. The notification manager framework will display your notification as a heads-up notification if the user is actively using the phone. When the user is not using the phone, your full-screen incoming call UI is used instead. For example:"}