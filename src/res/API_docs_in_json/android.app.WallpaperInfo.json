{"Functions": {"loadLabel(android.content.pm.PackageManager)": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [["@B_android#content#pm#PackageManager_E@", "PackageManager: Supply a PackageManager used to load the wallpaper's resources."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Load the user-displayed label for this wallpaper.", "history": "Added in API level 7", "FullName": "public CharSequence loadLabel (PackageManager pm)"}, "supportsMultipleDisplays()": {"Returns": [["boolean", "true if multiple engines can render independently on each surface."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#service#wallpaper#WallpaperService#onCreateEngine_E@", "@B_android#service#wallpaper#WallpaperService#Engine#onCreate_E@"], "Permissions": [], "Description": "Returns whether this wallpaper service can support multiple engines to render on each surface independently. An example use case is a multi-display set-up where the wallpaper service can render surfaces to each of the connected displays. This corresponds to the value @B_android#R#styleable#Wallpaper_supportsMultipleDisplays_E@ in the XML description of the wallpaper. The default value is false.", "history": "Added in API level 29", "FullName": "public boolean supportsMultipleDisplays ()"}, "dump(android.util.Printer,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#util#Printer_E@", "Printer no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 7", "FullName": "public void dump (Printer pw, String prefix)"}, "loadDescription(android.content.pm.PackageManager)": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [["@B_android#content#pm#PackageManager_E@", "PackageManager no parameter comment"]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Return a brief summary of this wallpaper's behavior.", "history": "Added in API level 7", "FullName": "public CharSequence loadDescription (PackageManager pm)"}, "loadContextUri(android.content.pm.PackageManager)": {"Returns": [["@B_android#net#Uri_E@", "The URI."]], "Parameters": [["@B_android#content#pm#PackageManager_E@", "PackageManager: An instance of @B_android#content#pm#PackageManager_E@ to retrieve the URI."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Returns an URI that specifies a link for further context about this wallpaper.", "history": "Added in API level 25", "FullName": "public Uri loadContextUri (PackageManager pm)"}, "getServiceInfo()": {"Returns": [["@B_android#content#pm#ServiceInfo_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the raw information about the Service implementing this wallpaper. Do not modify the returned object.", "history": "Added in API level 7", "FullName": "public ServiceInfo getServiceInfo ()"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 7", "FullName": "public int describeContents ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The @B_android#os#Parcel_E@ to be written."], ["int", "int: The flags used for parceling."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Used to package this object into a @B_android#os#Parcel_E@.", "history": "added in API level 7", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "loadIcon(android.content.pm.PackageManager)": {"Returns": [["@B_android#graphics#drawable#Drawable_E@", "no returns description in source"]], "Parameters": [["@B_android#content#pm#PackageManager_E@", "PackageManager: Supply a PackageManager used to load the wallpaper's resources."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Load the user-displayed icon for this wallpaper.", "history": "Added in API level 7", "FullName": "public Drawable loadIcon (PackageManager pm)"}, "getSettingsSliceUri()": {"Returns": [["@B_android#net#Uri_E@", "The URI."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an URI that provides a settings @B_android#app#slice#Slice_E@ for this wallpaper. The wallpaper should implement a SliceProvider associated with this URI. The system will display the Slice in the customization section while previewing the live wallpaper. Because this URI is accessible to other apps, it is recommended to protect it with the android.permission.BIND_WALLPAPER permission. null will be returned if there is no settings Slice URI associated with the wallpaper.", "history": "Added in API level 29", "FullName": "public Uri getSettingsSliceUri ()"}, "loadThumbnail(android.content.pm.PackageManager)": {"Returns": [["@B_android#graphics#drawable#Drawable_E@", "no returns description in source"]], "Parameters": [["@B_android#content#pm#PackageManager_E@", "PackageManager: Supply a PackageManager used to load the wallpaper's resources."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Load the thumbnail image for this wallpaper.", "history": "Added in API level 7", "FullName": "public Drawable loadThumbnail (PackageManager pm)"}, "getComponent()": {"Returns": [["@B_android#content#ComponentName_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the component of the service that implements this wallpaper.", "history": "Added in API level 7", "FullName": "public ComponentName getComponent ()"}, "WallpaperInfo(android.content.Context,android.content.pm.ResolveInfo)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The Context in which we are parsing the wallpaper."], ["@B_android#content#pm#ResolveInfo_E@", "ResolveInfo: The ResolveInfo returned from the package manager about this wallpaper's component."]], "Throws": [["@B_java#io#IOException_E@", ""], ["@B_org#xmlpull#v1#XmlPullParserException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Constructor.", "history": "Added in API level 7", "FullName": "public WallpaperInfo (Context context, ResolveInfo service)"}, "loadContextDescription(android.content.pm.PackageManager)": {"Returns": [["@B_java#lang#CharSequence_E@", "The title."]], "Parameters": [["@B_android#content#pm#PackageManager_E@", "PackageManager: An instance of @B_android#content#pm#PackageManager_E@ to retrieve the title."]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Retrieves a title of the URI that specifies a link for further context about this wallpaper.", "history": "Added in API level 25", "FullName": "public CharSequence loadContextDescription (PackageManager pm)"}, "dump(android.util.Printer, java.lang.String)": {"Returns": [], "Parameters": [["@B_android#util#Printer_E@", "Printer no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 7", "FullName": "public void dump (Printer pw, String prefix)"}, "loadAuthor(android.content.pm.PackageManager)": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [["@B_android#content#pm#PackageManager_E@", "PackageManager no parameter comment"]], "Throws": [["@B_android#content#res#Resources#NotFoundException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Return a string indicating the author(s) of this wallpaper.", "history": "Added in API level 7", "FullName": "public CharSequence loadAuthor (PackageManager pm)"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 7", "FullName": "public String toString ()"}, "getSettingsActivity()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the class name of an activity that provides a settings UI for the wallpaper. You can launch this activity be starting it with an @B_android#content#Intent_E@ whose action is MAIN and with an explicit @B_android#content#ComponentName_E@ composed of @B_android#app#WallpaperInfo#getPackageName_E@ and the class name returned here. null will be returned if there is no settings activity associated with the wallpaper.", "history": "Added in API level 7", "FullName": "public String getSettingsActivity ()"}, "getPackageName()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the .apk package that implements this wallpaper.", "history": "Added in API level 7", "FullName": "public String getPackageName ()"}, "getServiceName()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the class name of the service component that implements this wallpaper.", "history": "Added in API level 7", "FullName": "public String getServiceName ()"}, "getShowMetadataInPreview()": {"Returns": [["boolean", "Whether any metadata should be shown when previewing the wallpaper."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Queries whether any metadata should be shown when previewing the wallpaper. If this value is set to true, any component that shows a preview of this live wallpaper should also show accompanying information like @B_android#app#WallpaperInfo#loadLabel_E@, @B_android#app#WallpaperInfo#loadDescription_E@, @B_android#app#WallpaperInfo#loadAuthor_E@ and @B_android#app#WallpaperInfo#loadContextDescription_E@, so the user gets to know further information about this wallpaper.", "history": "Added in API level 25", "FullName": "public boolean getShowMetadataInPreview ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The @B_android#os#Parcel_E@ to be written."], ["int", "int: The flags used for parceling."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Used to package this object into a @B_android#os#Parcel_E@.", "history": "Added in API level 7", "FullName": "public void writeToParcel (Parcel dest, int flags)"}}, "Inheritance": [], "ClassName": "android.app.WallpaperInfo", "ClassDesc": "This class is used to specify meta information of a wallpaper service."}