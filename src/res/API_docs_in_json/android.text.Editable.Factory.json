{"Functions": {"getInstance()": {"Returns": [["@B_android#text#Editable#Factory_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the standard Editable Factory.", "history": "Added in API level 1", "FullName": "public static Editable.Factory getInstance ()"}, "newEditable(java.lang.CharSequence)": {"Returns": [["@B_android#text#Editable_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a new SpannedStringBuilder from the specified CharSequence. You can override this to provide a different kind of Spanned.", "history": "Added in API level 1", "FullName": "public Editable newEditable (CharSequence source)"}, "Editable.Factory()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public Editable.Factory ()"}}, "Inheritance": [], "ClassName": "android.text.Editable.Factory", "ClassDesc": "Factory used by TextView to create new @B_android#text#Editable_E@. You can subclass it to provide something other than @B_android#text#SpannableStringBuilder_E@."}