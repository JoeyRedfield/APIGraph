{"Functions": {"addMember(java.security.Principal)": {"Returns": [["boolean", "true if the member was successfully added, false if the principal was already a member."]], "Parameters": [["@B_java#security#Principal_E@", "Principal: the principal to add to this group."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds the specified member to the group.", "history": "Added in API level 1", "FullName": "public abstract boolean addMember (Principal user)"}, "isMember(java.security.Principal)": {"Returns": [["boolean", "true if the principal is a member of this group, false otherwise."]], "Parameters": [["@B_java#security#Principal_E@", "Principal: the principal whose membership is to be checked."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the passed principal is a member of the group. This method does a recursive search, so if a principal belongs to a group which is a member of this group, true is returned.", "history": "Added in API level 1", "FullName": "public abstract boolean isMember (Principal member)"}, "members()": {"Returns": [["@B_java#util#Enumeration_E@", "an enumeration of the group members."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an enumeration of the members in the group. The returned objects can be instances of either Principal or Group (which is a subclass of Principal).", "history": "Added in API level 1", "FullName": "public abstract Enumeration<? extends Principal> members ()"}, "removeMember(java.security.Principal)": {"Returns": [["boolean", "true if the principal was removed, or false if the principal was not a member."]], "Parameters": [["@B_java#security#Principal_E@", "Principal: the principal to remove from this group."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes the specified member from the group.", "history": "Added in API level 1", "FullName": "public abstract boolean removeMember (Principal user)"}}, "Inheritance": [], "ClassName": "java.security.acl.Group", "ClassDesc": "This interface is used to represent a group of principals. (A principal represents an entity such as an individual user or a company). Note that Group extends Principal. Thus, either a Principal or a Group can be passed as an argument to methods containing a Principal parameter. For example, you can add either a Principal or a Group to a Group object by calling the object's addMember method, passing it the Principal or Group."}