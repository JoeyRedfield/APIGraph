{"Functions": {"isCallerNeeded()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#app#slice#Slice#Builder#setCallerNeeded_E@"], "Permissions": [], "Description": "Returns whether the caller for this slice matters.", "history": "Added in API level 28", "FullName": "public boolean isCallerNeeded ()"}, "getItems()": {"Returns": [["@B_java#util#List_E@", "All child @B_android#app#slice#SliceItem_E@s that this Slice contains."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 28", "FullName": "public List<SliceItem> getItems ()"}, "Slice(android.os.Parcel)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 28", "FullName": "protected Slice (Parcel in)"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 28", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getUri()": {"Returns": [["@B_android#net#Uri_E@", "The Uri that this Slice represents."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 28", "FullName": "public Uri getUri ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 28", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 28", "FullName": "public int describeContents ()"}, "getSpec()": {"Returns": [["@B_android#app#slice#SliceSpec_E@", "The spec for this slice This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 28", "FullName": "public SliceSpec getSpec ()"}, "getHints()": {"Returns": [["@B_java#util#List_E@", "All hints associated with this Slice. Value is @B_android#app#slice#Slice#HINT_TITLE_E@, @B_android#app#slice#Slice#HINT_LIST_E@, @B_android#app#slice#Slice#HINT_LIST_ITEM_E@, @B_android#app#slice#Slice#HINT_LARGE_E@, @B_android#app#slice#Slice#HINT_ACTIONS_E@, @B_android#app#slice#Slice#HINT_SELECTED_E@, @B_android#app#slice#Slice#HINT_NO_TINT_E@, @B_android#app#slice#Slice#HINT_SHORTCUT_E@, android.app.slice.Slice.HINT_TOGGLE, @B_android#app#slice#Slice#HINT_HORIZONTAL_E@, @B_android#app#slice#Slice#HINT_PARTIAL_E@, @B_android#app#slice#Slice#HINT_SEE_MORE_E@, @B_android#app#slice#Slice#HINT_KEYWORDS_E@, @B_android#app#slice#Slice#HINT_ERROR_E@, @B_android#app#slice#Slice#HINT_TTL_E@, @B_android#app#slice#Slice#HINT_LAST_UPDATED_E@, or @B_android#app#slice#Slice#HINT_PERMISSION_REQUEST_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 28", "FullName": "public List<String> getHints ()"}}, "Inheritance": [], "ClassName": "android.app.slice.Slice", "ClassDesc": "A slice is a piece of app content and actions that can be surfaced outside of the app. They are constructed using @B_android#app#slice#Slice#Builder_E@ in a tree structure that provides the OS some information about how the content should be displayed."}