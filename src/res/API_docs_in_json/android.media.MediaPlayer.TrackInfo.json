{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 16", "FullName": "public String toString ()"}, "getLanguage()": {"Returns": [["@B_java#lang#String_E@", "a language code in either way of ISO-639-1 or ISO-639-2. When the language is unknown or could not be determined, ISO-639-2 language code, \"und\", is returned."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the language code of the track.", "history": "Added in API level 16", "FullName": "public String getLanguage ()"}, "getTrackType()": {"Returns": [["int", "TrackType which indicates if the track is video, audio, timed text. Value is @B_android#media#MediaPlayer#TrackInfo#MEDIA_TRACK_TYPE_UNKNOWN_E@, @B_android#media#MediaPlayer#TrackInfo#MEDIA_TRACK_TYPE_VIDEO_E@, @B_android#media#MediaPlayer#TrackInfo#MEDIA_TRACK_TYPE_AUDIO_E@, @B_android#media#MediaPlayer#TrackInfo#MEDIA_TRACK_TYPE_TIMEDTEXT_E@, @B_android#media#MediaPlayer#TrackInfo#MEDIA_TRACK_TYPE_SUBTITLE_E@, or @B_android#media#MediaPlayer#TrackInfo#MEDIA_TRACK_TYPE_METADATA_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the track type.", "history": "Added in API level 16", "FullName": "public int getTrackType ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 16", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 16", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 16", "FullName": "public int describeContents ()"}, "getFormat()": {"Returns": [["@B_android#media#MediaFormat_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the @B_android#media#MediaFormat_E@ of the track. If the format is unknown or could not be determined, null is returned.", "history": "Added in API level 19", "FullName": "public MediaFormat getFormat ()"}}, "Inheritance": [], "ClassName": "android.media.MediaPlayer.TrackInfo", "ClassDesc": "Class for MediaPlayer to return each audio/video/subtitle track's metadata."}