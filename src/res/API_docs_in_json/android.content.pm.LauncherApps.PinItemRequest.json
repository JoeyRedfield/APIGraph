{"Functions": {"writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 26", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "accept()": {"Returns": [["boolean", "TRUE if the shortcut or the AppWidget has actually been pinned. FALSE if the item hasn't been pinned, for example, because the request had already been canceled, in which case the launcher must not pin the requested item."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called by the receiving launcher app when the user accepts the request, with no options.", "history": "Added in API level 26", "FullName": "public boolean accept ()"}, "getShortcutInfo()": {"Returns": [["@B_android#content#pm#ShortcutInfo_E@", "requested @B_android#content#pm#ShortcutInfo_E@ when a request is of the @B_android#content#pm#LauncherApps#PinItemRequest#REQUEST_TYPE_SHORTCUT_E@ type. Null otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "@B_android#content#pm#ShortcutInfo_E@ sent by the requesting app. Always non-null for a @B_android#content#pm#LauncherApps#PinItemRequest#REQUEST_TYPE_SHORTCUT_E@ request, and always null for a different request type.", "history": "Added in API level 26", "FullName": "public ShortcutInfo getShortcutInfo ()"}, "isValid()": {"Returns": [["boolean", "TRUE if a request is valid and @B_android#content#pm#LauncherApps#PinItemRequest#accept_E@ may be called."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return whether a request is still valid.", "history": "Added in API level 26", "FullName": "public boolean isValid ()"}, "getRequestType()": {"Returns": [["int", "one of the REQUEST_TYPE_ constants. Value is @B_android#content#pm#LauncherApps#PinItemRequest#REQUEST_TYPE_SHORTCUT_E@, or @B_android#content#pm#LauncherApps#PinItemRequest#REQUEST_TYPE_APPWIDGET_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Represents the type of a request, which is one of the REQUEST_TYPE_ constants.", "history": "Added in API level 26", "FullName": "public int getRequestType ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 26", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "accept(android.os.Bundle)": {"Returns": [["boolean", "TRUE if the shortcut or the AppWidget has actually been pinned. FALSE if the item hasn't been pinned, for example, because the request had already been canceled, in which case the launcher must not pin the requested item."]], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: must be set for a @B_android#content#pm#LauncherApps#PinItemRequest#REQUEST_TYPE_APPWIDGET_E@ request. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called by the receiving launcher app when the user accepts the request.", "history": "Added in API level 26", "FullName": "public boolean accept (Bundle options)"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 26", "FullName": "public int describeContents ()"}, "getExtras()": {"Returns": [["@B_android#os#Bundle_E@", "For a shortcut request, this method always return null. For an AppWidget request, this method returns the extras passed to the @B_android#appwidget#AppWidgetManager#requestPinAppWidget_E@ API. See @B_android#appwidget#AppWidgetManager_E@ for details."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Any extras sent by the requesting app.", "history": "Added in API level 26", "FullName": "public Bundle getExtras ()"}, "getAppWidgetProviderInfo(android.content.Context)": {"Returns": [["@B_android#appwidget#AppWidgetProviderInfo_E@", "requested @B_android#appwidget#AppWidgetProviderInfo_E@ when a request is of the @B_android#content#pm#LauncherApps#PinItemRequest#REQUEST_TYPE_APPWIDGET_E@ type. Null otherwise."]], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "@B_android#appwidget#AppWidgetProviderInfo_E@ sent by the requesting app. Always non-null for a @B_android#content#pm#LauncherApps#PinItemRequest#REQUEST_TYPE_APPWIDGET_E@ request, and always null for a different request type. Launcher should not show any configuration activity associated with the provider, and assume that the widget is already fully configured. Upon accepting the widget, it should pass the widgetId in @B_android#content#pm#LauncherApps#PinItemRequest#accept_E@.", "history": "Added in API level 26", "FullName": "public AppWidgetProviderInfo getAppWidgetProviderInfo (Context context)"}}, "Inheritance": [], "ClassName": "android.content.pm.LauncherApps.PinItemRequest", "ClassDesc": "Represents a \"pin shortcut\" or a \"pin appwidget\" request made by an app, which is sent with an @B_android#content#pm#LauncherApps#ACTION_CONFIRM_PIN_SHORTCUT_E@ or @B_android#content#pm#LauncherApps#ACTION_CONFIRM_PIN_APPWIDGET_E@ intent respectively to the default launcher app. A @B_android#content#pm#LauncherApps#PinItemRequest#REQUEST_TYPE_SHORTCUT_E@ request represents a request to pin a @B_android#content#pm#ShortcutInfo_E@. If the launcher accepts a request, call @B_android#content#pm#LauncherApps#PinItemRequest#accept_E@, or @B_android#content#pm#LauncherApps#PinItemRequest#accept_E@ with a null or empty Bundle. No options are defined for pin-shortcuts requests. @B_android#content#pm#LauncherApps#PinItemRequest#getShortcutInfo_E@ always returns a non-null @B_android#content#pm#ShortcutInfo_E@ for this type. The launcher may receive a request with a @B_android#content#pm#ShortcutInfo_E@ that is already pinned, in which case @B_android#content#pm#ShortcutInfo#isPinned_E@ returns true. This means the user wants to create another pinned shortcut for a shortcut that's already pinned. If the launcher accepts it, @B_android#content#pm#LauncherApps#PinItemRequest#accept_E@ must still be called even though the shortcut is already pinned, and create a new pinned shortcut icon for it. See also @B_android#content#pm#ShortcutManager_E@ for more details. A @B_android#content#pm#LauncherApps#PinItemRequest#REQUEST_TYPE_SHORTCUT_E@ request represents a request to pin a an AppWidget. If the launcher accepts a request, call @B_android#content#pm#LauncherApps#PinItemRequest#accept_E@ with the appwidget integer ID set to the @B_android#appwidget#AppWidgetManager#EXTRA_APPWIDGET_ID_E@ extra. @B_android#content#pm#LauncherApps#PinItemRequest#getAppWidgetProviderInfo_E@ always returns a non-null @B_android#appwidget#AppWidgetProviderInfo_E@ for this type. See also @B_android#appwidget#AppWidgetManager_E@ for more details."}