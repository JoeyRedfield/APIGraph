{"Functions": {"removeOnSession2TokensChangedListener(android.media.session.MediaSessionManager.OnSession2TokensChangedListener)": {"Returns": [], "Parameters": [["@B_android#media#session#MediaSessionManager#OnSession2TokensChangedListener_E@", "MediaSessionManager.OnSession2TokensChangedListener: The listener to remove. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This API is not generally intended for third party application developers. Use the Removes the @B_android#media#session#MediaSessionManager#OnSession2TokensChangedListener_E@ to stop receiving session token updates.", "history": "Added in API level 29", "FullName": "public void removeOnSession2TokensChangedListener (MediaSessionManager.OnSession2TokensChangedListener listener)"}, "notifySession2Created(android.media.Session2Token)": {"Returns": [], "Parameters": [["@B_android#media#Session2Token_E@", "Session2Token: newly created session2 token This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This API is not generally intended for third party application developers. Use the Notifies that a new @B_android#media#MediaSession2_E@ with type @B_android#media#Session2Token#TYPE_SESSION_E@ is created. Do not use this API directly, but create a new instance through the @B_android#media#MediaSession2#Builder_E@ instead.", "history": "Added in API level 29", "FullName": "public void notifySession2Created (Session2Token token)"}, "isTrustedForMediaControl(android.media.session.MediaSessionManager.RemoteUserInfo)": {"Returns": [["boolean", "true if the remote user is trusted and its package name matches with the UID. false otherwise."]], "Parameters": [["@B_android#media#session#MediaSessionManager#RemoteUserInfo_E@", "MediaSessionManager.RemoteUserInfo: The remote user info from either @B_android#media#session#MediaSession#getCurrentControllerInfo_E@ or @B_android#service#media#MediaBrowserService#getCurrentBrowserInfo_E@. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether the remote user is a trusted app. An app is trusted if the app holds the android.Manifest.permission.MEDIA_CONTENT_CONTROL permission or has an enabled notification listener.", "history": "Added in API level 28", "FullName": "public boolean isTrustedForMediaControl (MediaSessionManager.RemoteUserInfo userInfo)"}, "addOnSession2TokensChangedListener(android.media.session.MediaSessionManager.OnSession2TokensChangedListener,android.os.Handler)": {"Returns": [], "Parameters": [["@B_android#media#session#MediaSessionManager#OnSession2TokensChangedListener_E@", "MediaSessionManager.OnSession2TokensChangedListener: The listener to add This value must never be null."], ["@B_android#os#Handler_E@", "Handler: The handler to call listener on. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This API is not generally intended for third party application developers. Use the Adds a listener to be notified when the @B_android#media#session#MediaSessionManager#getSession2Tokens_E@ changes.", "history": "Added in API level 29", "FullName": "public void addOnSession2TokensChangedListener (MediaSessionManager.OnSession2TokensChangedListener listener, Handler handler)"}, "getActiveSessions(android.content.ComponentName)": {"Returns": [["@B_java#util#List_E@", "A list of controllers for ongoing sessions."]], "Parameters": [["@B_android#content#ComponentName_E@", "ComponentName: The enabled notification listener component. May be null. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get a list of controllers for all ongoing sessions. The controllers will be provided in priority order with the most important controller at index 0. This requires the android.Manifest.permission.MEDIA_CONTENT_CONTROL permission be held by the calling app. You may also retrieve this list if your app is an enabled notification listener using the @B_android#service#notification#NotificationListenerService_E@ APIs, in which case you must pass the @B_android#content#ComponentName_E@ of your enabled listener.", "history": "Added in API level 21", "FullName": "public List<MediaController> getActiveSessions (ComponentName notificationListener)"}, "addOnSession2TokensChangedListener(android.media.session.MediaSessionManager.OnSession2TokensChangedListener)": {"Returns": [], "Parameters": [["@B_android#media#session#MediaSessionManager#OnSession2TokensChangedListener_E@", "MediaSessionManager.OnSession2TokensChangedListener: The listener to add This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This API is not generally intended for third party application developers. Use the Adds a listener to be notified when the @B_android#media#session#MediaSessionManager#getSession2Tokens_E@ changes.", "history": "Added in API level 29", "FullName": "public void addOnSession2TokensChangedListener (MediaSessionManager.OnSession2TokensChangedListener listener)"}, "addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener,android.content.ComponentName,android.os.Handler)": {"Returns": [], "Parameters": [["@B_android#media#session#MediaSessionManager#OnActiveSessionsChangedListener_E@", "MediaSessionManager.OnActiveSessionsChangedListener: The listener to add. This value must never be null."], ["@B_android#content#ComponentName_E@", "ComponentName: The enabled notification listener component. May be null. This value may be null."], ["@B_android#os#Handler_E@", "Handler: The handler to post events to. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Add a listener to be notified when the list of active sessions changes.This requires the android.Manifest.permission.MEDIA_CONTENT_CONTROL permission be held by the calling app. You may also retrieve this list if your app is an enabled notification listener using the @B_android#service#notification#NotificationListenerService_E@ APIs, in which case you must pass the @B_android#content#ComponentName_E@ of your enabled listener. Updates will be posted to the handler specified or to the caller's thread if the handler is null.", "history": "Added in API level 21", "FullName": "public void addOnActiveSessionsChangedListener (MediaSessionManager.OnActiveSessionsChangedListener sessionListener, ComponentName notificationListener, Handler handler)"}, "getSession2Tokens()": {"Returns": [["@B_java#util#List_E@", "A list of @B_android#media#Session2Token_E@. This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This API is not generally intended for third party application developers. Use the Gets a list of @B_android#media#Session2Token_E@ with type @B_android#media#Session2Token#TYPE_SESSION_E@ for the current user. Although this API can be used without any restriction, each session owners can accept or reject your uses of @B_android#media#MediaSession2_E@.", "history": "Added in API level 29", "FullName": "public List<Session2Token> getSession2Tokens ()"}, "addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener,android.content.ComponentName)": {"Returns": [], "Parameters": [["@B_android#media#session#MediaSessionManager#OnActiveSessionsChangedListener_E@", "MediaSessionManager.OnActiveSessionsChangedListener: The listener to add. This value must never be null."], ["@B_android#content#ComponentName_E@", "ComponentName: The enabled notification listener component. May be null. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Add a listener to be notified when the list of active sessions changes.This requires the android.Manifest.permission.MEDIA_CONTENT_CONTROL permission be held by the calling app. You may also retrieve this list if your app is an enabled notification listener using the @B_android#service#notification#NotificationListenerService_E@ APIs, in which case you must pass the @B_android#content#ComponentName_E@ of your enabled listener. Updates will be posted to the thread that registered the listener.", "history": "Added in API level 21", "FullName": "public void addOnActiveSessionsChangedListener (MediaSessionManager.OnActiveSessionsChangedListener sessionListener, ComponentName notificationListener)"}, "removeOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener)": {"Returns": [], "Parameters": [["@B_android#media#session#MediaSessionManager#OnActiveSessionsChangedListener_E@", "MediaSessionManager.OnActiveSessionsChangedListener: The listener to remove. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Stop receiving active sessions updates on the specified listener.", "history": "Added in API level 21", "FullName": "public void removeOnActiveSessionsChangedListener (MediaSessionManager.OnActiveSessionsChangedListener listener)"}}, "Inheritance": [], "ClassName": "android.media.session.MediaSessionManager", "ClassDesc": "Provides support for interacting with @B_android#media#session#MediaSession_E@ that applications have published to express their ongoing media playback state."}