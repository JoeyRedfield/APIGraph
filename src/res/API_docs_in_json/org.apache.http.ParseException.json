{"Functions": {"ParseException(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "the exception detail message, or null"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a @B_org#apache#http#ParseException_E@ with a detail message.", "history": "Added in API level 1", "FullName": "public ParseException (String message)"}, "ParseException()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a @B_org#apache#http#ParseException_E@ without details.", "history": "Added in API level 1", "FullName": "public ParseException ()"}}, "Inheritance": ["@B_java#lang#Throwable_E@", "@B_java#lang#Exception_E@", "@B_java#lang#RuntimeException_E@"], "ClassName": "org.apache.http.ParseException", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Indicates a parse error. Parse errors when receiving a message will typically trigger @B_org#apache#http#ProtocolException_E@. Parse errors that do not occur during protocol execution may be handled differently. This is an unchecked exceptions, since there are cases where the data to be parsed has been generated and is therefore known to be parseable."}