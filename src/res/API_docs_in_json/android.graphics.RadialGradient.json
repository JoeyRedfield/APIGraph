{"Functions": {"RadialGradient(float,float,float,int[],float[],android.graphics.Shader.TileMode)": {"Returns": [], "Parameters": [["float", "float: The x-coordinate of the center of the radius"], ["float", "float: The y-coordinate of the center of the radius"], ["float", "float: Must be positive. The radius of the circle for this gradient."], ["int[]", "int: The sRGB colors to be distributed between the center and edge of the circle This value must never be null."], ["float[]", "float: May be null. Valid values are between 0.0f and 1.0f. The relative position of each corresponding color in the colors array. If null, colors are distributed evenly between the center and edge of the circle. This value may be null."], ["@B_android#graphics#Shader#TileMode_E@", "Shader.TileMode: The Shader tiling mode This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a shader that draws a radial gradient given the center and radius.", "history": "Added in API level 1", "FullName": "public RadialGradient (float centerX, float centerY, float radius, int[] colors, float[] stops, Shader.TileMode tileMode)"}, "RadialGradient(float,float,float,long,long,android.graphics.Shader.TileMode)": {"Returns": [], "Parameters": [["float", "float: The x-coordinate of the center of the radius"], ["float", "float: The y-coordinate of the center of the radius"], ["float", "float: Must be positive. The radius of the circle for this gradient"], ["long", "long: The color at the center of the circle."], ["long", "long: The color at the edge of the circle."], ["@B_android#graphics#Shader#TileMode_E@", "Shader.TileMode: The Shader tiling mode This value must never be null."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the colors do not share the same @B_android#graphics#ColorSpace_E@ or do not use a valid one."]], "SeeAlso": [], "Permissions": [], "Description": "Create a shader that draws a radial gradient given the center and radius.", "history": "Added in API level 29", "FullName": "public RadialGradient (float centerX, float centerY, float radius, long centerColor, long edgeColor, Shader.TileMode tileMode)"}, "RadialGradient(float,float,float,int,int,android.graphics.Shader.TileMode)": {"Returns": [], "Parameters": [["float", "float: The x-coordinate of the center of the radius"], ["float", "float: The y-coordinate of the center of the radius"], ["float", "float: Must be positive. The radius of the circle for this gradient"], ["int", "int: The sRGB color at the center of the circle."], ["int", "int: The sRGB color at the edge of the circle."], ["@B_android#graphics#Shader#TileMode_E@", "Shader.TileMode: The Shader tiling mode This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a shader that draws a radial gradient given the center and radius.", "history": "Added in API level 1", "FullName": "public RadialGradient (float centerX, float centerY, float radius, int centerColor, int edgeColor, Shader.TileMode tileMode)"}, "RadialGradient(float,float,float,long[],float[],android.graphics.Shader.TileMode)": {"Returns": [], "Parameters": [["float", "float: The x-coordinate of the center of the radius"], ["float", "float: The y-coordinate of the center of the radius"], ["float", "float: Must be positive. The radius of the circle for this gradient."], ["long[]", "long: The colors to be distributed between the center and edge of the circle This value must never be null."], ["float[]", "float: May be null. Valid values are between 0.0f and 1.0f. The relative position of each corresponding color in the colors array. If null, colors are distributed evenly between the center and edge of the circle. This value may be null."], ["@B_android#graphics#Shader#TileMode_E@", "Shader.TileMode: The Shader tiling mode This value must never be null."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if there are less than two colors, the colors do not share the same @B_android#graphics#ColorSpace_E@ or do not use a valid one, or stops is not null and has a different length from colors."]], "SeeAlso": [], "Permissions": [], "Description": "Create a shader that draws a radial gradient given the center and radius.", "history": "Added in API level 29", "FullName": "public RadialGradient (float centerX, float centerY, float radius, long[] colors, float[] stops, Shader.TileMode tileMode)"}}, "Inheritance": ["@B_android#graphics#Shader_E@"], "ClassName": "android.graphics.RadialGradient", "ClassDesc": ""}