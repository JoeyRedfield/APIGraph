{"Functions": {"getResult()": {"Returns": [["ListenableFuture<String>", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The future that will be resolved when the Javascript evaluation completes.", "history": "", "FullName": "ListenableFuture<String> getResult ()"}, "wrapScriptInConduit(java.lang.StringBuilder)": {"Returns": [["StringBuilder", "the StringBuilder passed in."]], "Parameters": [["StringBuilder", "StringBuilder: the buffer holding the script, it will be modified in place."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Wraps a script within additional javascript code that will allow the function to return its results back thru this conduit.", "history": "", "FullName": "StringBuilder wrapScriptInConduit (StringBuilder script)"}, "wrapScriptInConduit(java.lang.String)": {"Returns": [["String", "no returns description in source"]], "Parameters": [["String", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Takes Javascript code and wraps it within a statement that will pipe the results of evaluation to the ListenableFuture this conduit holds.", "history": "", "FullName": "String wrapScriptInConduit (String script)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.test.espresso.web.bridge.Conduit", "ClassDesc": "A mechanism to get results out of a Javascript context and into a Java context. Users can get instances of this class via JavaScriptBridge.makeConduit(). Each conduit can be used once (and only once) to transmit results. Before evaluating javascript via a loadUrl call the caller should call wrapScriptInConduit with the script to be evaluated. The script is wrapped up into an additional handler statement which forwards the result of the script to the JavaScriptBridge object. After calling loadUrl the caller can use the getResult method to get a Future which will contain the result of the javascript execution."}