{"Functions": {"Exception(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the detail message. The detail message is saved for later retrieval by the @B_java#lang#Throwable#getMessage_E@ method."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new exception with the specified detail message. The cause is not initialized, and may subsequently be initialized by a call to @B_java#lang#Throwable#initCause_E@.", "history": "Added in API level 1", "FullName": "public Exception (String message)"}, "Exception(java.lang.String,java.lang.Throwable)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the detail message (which is saved for later retrieval by the @B_java#lang#Throwable#getMessage_E@ method)."], ["@B_java#lang#Throwable_E@", "Throwable: the cause (which is saved for later retrieval by the @B_java#lang#Throwable#getCause_E@ method). (A null value is permitted, and indicates that the cause is nonexistent or unknown.)"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new exception with the specified detail message and cause. Note that the detail message associated with cause is", "history": "Added in API level 1", "FullName": "public Exception (String message, Throwable cause)"}, "Exception(java.lang.String, java.lang.Throwable)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the detail message (which is saved for later retrieval by the @B_java#lang#Throwable#getMessage_E@ method)."], ["@B_java#lang#Throwable_E@", "Throwable: the cause (which is saved for later retrieval by the @B_java#lang#Throwable#getCause_E@ method). (A null value is permitted, and indicates that the cause is nonexistent or unknown.)"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new exception with the specified detail message and cause. Note that the detail message associated with cause is", "history": "added in API level 1", "FullName": "public Exception (String message, Throwable cause)"}, "Exception()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new exception with null as its detail message. The cause is not initialized, and may subsequently be initialized by a call to @B_java#lang#Throwable#initCause_E@.", "history": "Added in API level 1", "FullName": "public Exception ()"}, "Exception(java.lang.String,java.lang.Throwable,boolean,boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the detail message."], ["@B_java#lang#Throwable_E@", "Throwable: the cause. (A null value is permitted, and indicates that the cause is nonexistent or unknown.)"], ["boolean", "boolean: whether or not suppression is enabled or disabled"], ["boolean", "boolean: whether or not the stack trace should be writable"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new exception with the specified detail message, cause, suppression enabled or disabled, and writable stack trace enabled or disabled.", "history": "Added in API level 24", "FullName": "protected Exception (String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace)"}, "Exception(java.lang.Throwable)": {"Returns": [], "Parameters": [["@B_java#lang#Throwable_E@", "Throwable: the cause (which is saved for later retrieval by the @B_java#lang#Throwable#getCause_E@ method). (A null value is permitted, and indicates that the cause is nonexistent or unknown.)"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new exception with the specified cause and a detail message of @B_java#security#PrivilegedActionException_E@).", "history": "Added in API level 1", "FullName": "public Exception (Throwable cause)"}}, "Inheritance": ["@B_java#lang#Throwable_E@"], "ClassName": "java.lang.Exception", "ClassDesc": "The class Exception and its subclasses are a form of Throwable that indicates conditions that a reasonable application might want to catch. The class Exception and any subclasses that are not also subclasses of @B_java#lang#RuntimeException_E@ are checked exceptions. Checked exceptions need to be declared in a method or constructor's throws clause if they can be thrown by the execution of the method or constructor and propagate outside the method or constructor boundary."}