{"Functions": {"group()": {"Returns": [["@B_java#lang#String_E@", "The (possibly empty) subsequence matched by the previous match, in string form"]], "Parameters": [], "Throws": [["@B_java#lang#IllegalStateException_E@", "If no match has yet been attempted, or if the previous match operation failed"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the input subsequence matched by the previous match. For a matcher Note that some patterns, for example", "history": "Added in API level 1", "FullName": "public abstract String group ()"}, "start()": {"Returns": [["int", "The index of the first character matched"]], "Parameters": [], "Throws": [["@B_java#lang#IllegalStateException_E@", "If no match has yet been attempted, or if the previous match operation failed"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the start index of the match.", "history": "Added in API level 1", "FullName": "public abstract int start ()"}, "end()": {"Returns": [["int", "The offset after the last character matched"]], "Parameters": [], "Throws": [["@B_java#lang#IllegalStateException_E@", "If no match has yet been attempted, or if the previous match operation failed"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the offset after the last character matched.", "history": "Added in API level 1", "FullName": "public abstract int end ()"}, "start(int)": {"Returns": [["int", "The index of the first character captured by the group, or -1 if the match was successful but the group itself did not match anything"]], "Parameters": [["int", "int: The index of a capturing group in this matcher's pattern"]], "Throws": [["@B_java#lang#IllegalStateException_E@", "If no match has yet been attempted, or if the previous match operation failed"], ["@B_java#lang#IndexOutOfBoundsException_E@", "If there is no capturing group in the pattern with the given index"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the start index of the subsequence captured by the given group during this match.", "history": "Added in API level 1", "FullName": "public abstract int start (int group)"}, "end(int)": {"Returns": [["int", "The offset after the last character captured by the group, or -1 if the match was successful but the group itself did not match anything"]], "Parameters": [["int", "int: The index of a capturing group in this matcher's pattern"]], "Throws": [["@B_java#lang#IllegalStateException_E@", "If no match has yet been attempted, or if the previous match operation failed"], ["@B_java#lang#IndexOutOfBoundsException_E@", "If there is no capturing group in the pattern with the given index"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the offset after the last character of the subsequence captured by the given group during this match.", "history": "Added in API level 1", "FullName": "public abstract int end (int group)"}, "groupCount()": {"Returns": [["int", "The number of capturing groups in this matcher's pattern"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of capturing groups in this match result's pattern. Group zero denotes the entire pattern by convention. It is not included in this count. Any non-negative integer smaller than or equal to the value returned by this method is guaranteed to be a valid group index for this matcher.", "history": "Added in API level 1", "FullName": "public abstract int groupCount ()"}, "group(int)": {"Returns": [["@B_java#lang#String_E@", "The (possibly empty) subsequence captured by the group during the previous match, or null if the group failed to match part of the input"]], "Parameters": [["int", "int: The index of a capturing group in this matcher's pattern"]], "Throws": [["@B_java#lang#IllegalStateException_E@", "If no match has yet been attempted, or if the previous match operation failed"], ["@B_java#lang#IndexOutOfBoundsException_E@", "If there is no capturing group in the pattern with the given index"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the input subsequence captured by the given group during the previous match operation. For a matcher If the match was successful but the group specified failed to match any part of the input sequence, then", "history": "Added in API level 1", "FullName": "public abstract String group (int group)"}}, "Inheritance": [], "ClassName": "java.util.regex.MatchResult", "ClassDesc": "The result of a match operation. This interface contains query methods used to determine the results of a match against a regular expression. The match boundaries, groups and group boundaries can be seen but not modified through a MatchResult."}