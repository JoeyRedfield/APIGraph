{"Functions": {"current()": {"Returns": [["char", "the character at the current position or DONE if the current position is off the end of the text."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#text#CharacterIterator#getIndex_E@"], "Permissions": [], "Description": "Gets the character at the current position (as returned by getIndex()).", "history": "Added in API level 1", "FullName": "public abstract char current ()"}, "previous()": {"Returns": [["char", "the character at the new position or DONE if the current position is equal to getBeginIndex()."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Decrements the iterator's index by one and returns the character at the new index. If the current index is getBeginIndex(), the index remains at getBeginIndex() and a value of DONE is returned.", "history": "Added in API level 1", "FullName": "public abstract char previous ()"}, "getBeginIndex()": {"Returns": [["int", "the index at which the text begins."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the start index of the text.", "history": "Added in API level 1", "FullName": "public abstract int getBeginIndex ()"}, "getEndIndex()": {"Returns": [["int", "the index after the last character in the text"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the end index of the text. This index is the index of the first character following the end of the text.", "history": "Added in API level 1", "FullName": "public abstract int getEndIndex ()"}, "last()": {"Returns": [["char", "the last character in the text, or DONE if the text is empty"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#text#CharacterIterator#getEndIndex_E@"], "Permissions": [], "Description": "Sets the position to getEndIndex()-1 (getEndIndex() if the text is empty) and returns the character at that position.", "history": "Added in API level 1", "FullName": "public abstract char last ()"}, "first()": {"Returns": [["char", "the first character in the text, or DONE if the text is empty"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#text#CharacterIterator#getBeginIndex_E@"], "Permissions": [], "Description": "Sets the position to getBeginIndex() and returns the character at that position.", "history": "Added in API level 1", "FullName": "public abstract char first ()"}, "next()": {"Returns": [["char", "the character at the new position or DONE if the new position is off the end of the text range."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Increments the iterator's index by one and returns the character at the new index. If the resulting index is greater or equal to getEndIndex(), the current index is reset to getEndIndex() and a value of DONE is returned.", "history": "Added in API level 1", "FullName": "public abstract char next ()"}, "clone()": {"Returns": [["@B_java#lang#Object_E@", "A copy of this"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a copy of this iterator", "history": "Added in API level 1", "FullName": "public abstract Object clone ()"}, "getIndex()": {"Returns": [["int", "the current index."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current index.", "history": "Added in API level 1", "FullName": "public abstract int getIndex ()"}, "setIndex(int)": {"Returns": [["char", "the character at the specified position or DONE if the specified position is equal to getEndIndex()"]], "Parameters": [["int", "int: the position within the text. Valid values range from getBeginIndex() to getEndIndex(). An IllegalArgumentException is thrown if an invalid value is supplied."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the position to the specified position in the text and returns that character.", "history": "Added in API level 1", "FullName": "public abstract char setIndex (int position)"}}, "Inheritance": [], "ClassName": "java.text.CharacterIterator", "ClassDesc": "This interface defines a protocol for bidirectional iteration over text. The iterator iterates over a bounded sequence of characters. Characters are indexed with values beginning with the value returned by getBeginIndex() and continuing through the value returned by getEndIndex()-1. Iterators maintain a current character index, whose valid range is from getBeginIndex() to getEndIndex(); the value getEndIndex() is included to allow handling of zero-length text ranges and for historical reasons. The current index can be retrieved by calling getIndex() and set directly by calling setIndex(), first(), and last(). The methods previous() and next() are used for iteration. They return DONE if they would move outside the range from getBeginIndex() to getEndIndex() -1, signaling that the iterator has reached the end of the sequence. DONE is also returned by other methods to indicate that the current index is outside this range. Examples: Traverse the text from start to finish"}