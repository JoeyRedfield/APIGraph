{"Functions": {"PopupMenu(android.content.Context,android.view.View,int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: Context the popup menu is running in, through which it can access the current theme, resources, etc."], ["@B_android#view#View_E@", "View: Anchor view for this popup. The popup will appear below the anchor if there is room, or above it if there is not."], ["int", "int: The @B_android#view#Gravity_E@ value for aligning the popup with its anchor."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor to create a new popup menu with an anchor view and alignment gravity.", "history": "Added in API level 19", "FullName": "public PopupMenu (Context context, View anchor, int gravity)"}, "PopupMenu(android.content.Context,android.view.View)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: Context the popup menu is running in, through which it can access the current theme, resources, etc."], ["@B_android#view#View_E@", "View: Anchor view for this popup. The popup will appear below the anchor if there is room, or above it if there is not."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor to create a new popup menu with an anchor view.", "history": "Added in API level 11", "FullName": "public PopupMenu (Context context, View anchor)"}, "show()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#widget#PopupMenu#dismiss_E@"], "Permissions": [], "Description": "Show the menu popup anchored to the view specified during construction.", "history": "Added in API level 11", "FullName": "public void show ()"}, "setOnMenuItemClickListener(android.widget.PopupMenu.OnMenuItemClickListener)": {"Returns": [], "Parameters": [["@B_android#widget#PopupMenu#OnMenuItemClickListener_E@", "PopupMenu.OnMenuItemClickListener: the listener to notify"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets a listener that will be notified when the user selects an item from the menu.", "history": "Added in API level 11", "FullName": "public void setOnMenuItemClickListener (PopupMenu.OnMenuItemClickListener listener)"}, "dismiss()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#widget#PopupMenu#show_E@"], "Permissions": [], "Description": "Dismiss the menu popup.", "history": "Added in API level 11", "FullName": "public void dismiss ()"}, "getGravity()": {"Returns": [["int", "the gravity used to align the popup window to its anchor view"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#widget#PopupMenu#setGravity_E@"], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public int getGravity ()"}, "PopupMenu(android.content.Context,android.view.View,int,int,int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: Context the popup menu is running in, through which it can access the current theme, resources, etc."], ["@B_android#view#View_E@", "View: Anchor view for this popup. The popup will appear below the anchor if there is room, or above it if there is not."], ["int", "int: The @B_android#view#Gravity_E@ value for aligning the popup with its anchor."], ["int", "int: An attribute in the current theme that contains a reference to a style resource that supplies default values for the popup window. Can be 0 to not look for defaults."], ["int", "int: A resource identifier of a style resource that supplies default values for the popup window, used only if popupStyleAttr is 0 or can not be found in the theme. Can be 0 to not look for defaults."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor a create a new popup menu with a specific style.", "history": "Added in API level 22", "FullName": "public PopupMenu (Context context, View anchor, int gravity, int popupStyleAttr, int popupStyleRes)"}, "getMenuInflater()": {"Returns": [["@B_android#view#MenuInflater_E@", "a @B_android#view#MenuInflater_E@ that can be used to inflate menu items from XML into the menu returned by @B_android#widget#PopupMenu#getMenu_E@"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#widget#PopupMenu#getMenu_E@"], "Permissions": [], "Description": "", "history": "Added in API level 11", "FullName": "public MenuInflater getMenuInflater ()"}, "setGravity(int)": {"Returns": [], "Parameters": [["int", "int: the gravity used to align the popup window"]], "Throws": [], "SeeAlso": ["@B_android#widget#PopupMenu#getGravity_E@"], "Permissions": [], "Description": "Sets the gravity used to align the popup window to its anchor view. If the popup is showing, calling this method will take effect only the next time the popup is shown.", "history": "Added in API level 23", "FullName": "public void setGravity (int gravity)"}, "setForceShowIcon(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true to force icons to be shown, or false for icons to be optionally shown"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether the popup menu's adapter is forced to show icons in the menu item views. Changes take effect on the next call to show().", "history": "Added in API level 29", "FullName": "public void setForceShowIcon (boolean forceShowIcon)"}, "inflate(int)": {"Returns": [], "Parameters": [["int", "int: Menu resource to inflate"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Inflate a menu resource into this PopupMenu. This is equivalent to calling popupMenu.getMenuInflater().inflate(menuRes, popupMenu.getMenu()).", "history": "Added in API level 14", "FullName": "public void inflate (int menuRes)"}, "getDragToOpenListener()": {"Returns": [["@B_android#view#View#OnTouchListener_E@", "a touch listener that controls drag-to-open behavior"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an @B_android#view#View#OnTouchListener_E@ that can be added to the anchor view to implement drag-to-open behavior. When the listener is set on a view, touching that view and dragging outside of its bounds will open the popup window. Lifting will select the currently touched list item. Example usage:", "history": "Added in API level 19", "FullName": "public View.OnTouchListener getDragToOpenListener ()"}, "setOnDismissListener(android.widget.PopupMenu.OnDismissListener)": {"Returns": [], "Parameters": [["@B_android#widget#PopupMenu#OnDismissListener_E@", "PopupMenu.OnDismissListener: the listener to notify"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets a listener that will be notified when this menu is dismissed.", "history": "Added in API level 14", "FullName": "public void setOnDismissListener (PopupMenu.OnDismissListener listener)"}, "getMenu()": {"Returns": [["@B_android#view#Menu_E@", "the @B_android#view#Menu_E@ associated with this popup"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#widget#PopupMenu#show_E@", "@B_android#widget#PopupMenu#getMenuInflater_E@"], "Permissions": [], "Description": "Returns the @B_android#view#Menu_E@ associated with this popup. Populate the returned Menu with items before calling @B_android#widget#PopupMenu#show_E@.", "history": "Added in API level 11", "FullName": "public Menu getMenu ()"}}, "Inheritance": [], "ClassName": "android.widget.PopupMenu", "ClassDesc": "A PopupMenu displays a @B_android#view#Menu_E@ in a modal popup window anchored to a @B_android#view#View_E@. The popup will appear below the anchor view if there is room, or above it if there is not. If the IME is visible the popup will not overlap it until it is touched. Touching outside of the popup will dismiss it."}