{"Functions": {"getIcon()": {"Returns": [["@B_android#graphics#drawable#Icon_E@", "The icon held by this @B_android#app#slice#SliceItem#FORMAT_IMAGE_E@ SliceItem"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 28", "FullName": "public Icon getIcon ()"}, "getAction()": {"Returns": [["@B_android#app#PendingIntent_E@", "The pending intent held by this @B_android#app#slice#SliceItem#FORMAT_ACTION_E@ SliceItem"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 28", "FullName": "public PendingIntent getAction ()"}, "getSlice()": {"Returns": [["@B_android#app#slice#Slice_E@", "The slice held by this @B_android#app#slice#SliceItem#FORMAT_ACTION_E@ or @B_android#app#slice#SliceItem#FORMAT_SLICE_E@ SliceItem"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 28", "FullName": "public Slice getSlice ()"}, "getLong()": {"Returns": [["long", "The long held by this @B_android#app#slice#SliceItem#FORMAT_LONG_E@ SliceItem"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 28", "FullName": "public long getLong ()"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 28", "FullName": "public int describeContents ()"}, "getText()": {"Returns": [["@B_java#lang#CharSequence_E@", "The text held by this @B_android#app#slice#SliceItem#FORMAT_TEXT_E@ SliceItem"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 28", "FullName": "public CharSequence getText ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 28", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getBundle()": {"Returns": [["@B_android#os#Bundle_E@", "The parcelable held by this @B_android#app#slice#SliceItem#FORMAT_BUNDLE_E@ SliceItem"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 28", "FullName": "public Bundle getBundle ()"}, "getFormat()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#app#slice#SliceItem#getSubType_E@"], "Permissions": [], "Description": "Get the format of this SliceItem. The format will be one of the following types supported by the platform: @B_android#app#slice#SliceItem#FORMAT_SLICE_E@ @B_android#app#slice#SliceItem#FORMAT_TEXT_E@ @B_android#app#slice#SliceItem#FORMAT_IMAGE_E@ @B_android#app#slice#SliceItem#FORMAT_ACTION_E@ @B_android#app#slice#SliceItem#FORMAT_INT_E@ @B_android#app#slice#SliceItem#FORMAT_LONG_E@ @B_android#app#slice#SliceItem#FORMAT_REMOTE_INPUT_E@ @B_android#app#slice#SliceItem#FORMAT_BUNDLE_E@", "history": "Added in API level 28", "FullName": "public String getFormat ()"}, "hasHint(java.lang.String)": {"Returns": [["boolean", "true if this item contains the given hint"]], "Parameters": [["@B_java#lang#String_E@", "String: The hint to check for Value is @B_android#app#slice#Slice#HINT_TITLE_E@, @B_android#app#slice#Slice#HINT_LIST_E@, @B_android#app#slice#Slice#HINT_LIST_ITEM_E@, @B_android#app#slice#Slice#HINT_LARGE_E@, @B_android#app#slice#Slice#HINT_ACTIONS_E@, @B_android#app#slice#Slice#HINT_SELECTED_E@, @B_android#app#slice#Slice#HINT_NO_TINT_E@, @B_android#app#slice#Slice#HINT_SHORTCUT_E@, android.app.slice.Slice.HINT_TOGGLE, @B_android#app#slice#Slice#HINT_HORIZONTAL_E@, @B_android#app#slice#Slice#HINT_PARTIAL_E@, @B_android#app#slice#Slice#HINT_SEE_MORE_E@, @B_android#app#slice#Slice#HINT_KEYWORDS_E@, @B_android#app#slice#Slice#HINT_ERROR_E@, @B_android#app#slice#Slice#HINT_TTL_E@, @B_android#app#slice#Slice#HINT_LAST_UPDATED_E@, or @B_android#app#slice#Slice#HINT_PERMISSION_REQUEST_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 28", "FullName": "public boolean hasHint (String hint)"}, "getInt()": {"Returns": [["int", "The color held by this @B_android#app#slice#SliceItem#FORMAT_INT_E@ SliceItem"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 28", "FullName": "public int getInt ()"}, "getSubType()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#app#slice#SliceItem#getFormat_E@"], "Permissions": [], "Description": "Get the sub-type of this SliceItem. Subtypes provide additional information about the type of this information beyond basic interpretations inferred by @B_android#app#slice#SliceItem#getFormat_E@. For example a slice may contain many @B_android#app#slice#SliceItem#FORMAT_TEXT_E@ items, but only some of them may be @B_android#app#slice#Slice#SUBTYPE_MESSAGE_E@.", "history": "Added in API level 28", "FullName": "public String getSubType ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 28", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getRemoteInput()": {"Returns": [["@B_android#app#RemoteInput_E@", "The remote input held by this @B_android#app#slice#SliceItem#FORMAT_REMOTE_INPUT_E@ SliceItem"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 28", "FullName": "public RemoteInput getRemoteInput ()"}, "getHints()": {"Returns": [["@B_java#util#List_E@", "Array of hints. This value will never be null. Value is @B_android#app#slice#Slice#HINT_TITLE_E@, @B_android#app#slice#Slice#HINT_LIST_E@, @B_android#app#slice#Slice#HINT_LIST_ITEM_E@, @B_android#app#slice#Slice#HINT_LARGE_E@, @B_android#app#slice#Slice#HINT_ACTIONS_E@, @B_android#app#slice#Slice#HINT_SELECTED_E@, @B_android#app#slice#Slice#HINT_NO_TINT_E@, @B_android#app#slice#Slice#HINT_SHORTCUT_E@, android.app.slice.Slice.HINT_TOGGLE, @B_android#app#slice#Slice#HINT_HORIZONTAL_E@, @B_android#app#slice#Slice#HINT_PARTIAL_E@, @B_android#app#slice#Slice#HINT_SEE_MORE_E@, @B_android#app#slice#Slice#HINT_KEYWORDS_E@, @B_android#app#slice#Slice#HINT_ERROR_E@, @B_android#app#slice#Slice#HINT_TTL_E@, @B_android#app#slice#Slice#HINT_LAST_UPDATED_E@, or @B_android#app#slice#Slice#HINT_PERMISSION_REQUEST_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets all hints associated with this SliceItem.", "history": "Added in API level 28", "FullName": "public List<String> getHints ()"}}, "Inheritance": [], "ClassName": "android.app.slice.SliceItem", "ClassDesc": "A SliceItem is a single unit in the tree structure of a @B_android#app#slice#Slice_E@. A SliceItem a piece of content and some hints about what that content means or how it should be displayed. The types of content can be: @B_android#app#slice#SliceItem#FORMAT_SLICE_E@ @B_android#app#slice#SliceItem#FORMAT_TEXT_E@ @B_android#app#slice#SliceItem#FORMAT_IMAGE_E@ @B_android#app#slice#SliceItem#FORMAT_ACTION_E@ @B_android#app#slice#SliceItem#FORMAT_INT_E@ @B_android#app#slice#SliceItem#FORMAT_LONG_E@ @B_android#app#slice#SliceItem#FORMAT_REMOTE_INPUT_E@ @B_android#app#slice#SliceItem#FORMAT_BUNDLE_E@ The hints that a @B_android#app#slice#SliceItem_E@ are a set of strings which annotate the content. The hints that are guaranteed to be understood by the system are defined on @B_android#app#slice#Slice_E@."}