{"Functions": {"finish()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Must be called to ensure the internal cache is flushed and the closing chunk is written.", "history": "Added in API level 1", "FullName": "public void finish ()"}, "writeClosingChunk()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "protected void writeClosingChunk ()"}, "ChunkedOutputStream(org.apache.http.io.SessionOutputBuffer, int)": {"Returns": [], "Parameters": [["@B_org#apache#http#io#SessionOutputBuffer_E@", "the session output buffer to wrap"], ["int", "minimum chunk size (excluding last chunk)"]], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Wraps a session output buffer and chunks the output.", "history": "Added in API level 1", "FullName": "public ChunkedOutputStream (SessionOutputBuffer out, int bufferSize)"}, "write(byte[])": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Writes the array. If the array does not fit within the buffer, it is not split, but rather written out as one large chunk.", "history": "Added in API level 1", "FullName": "public void write (byte[] b)"}, "flushCacheWithAppend(byte[], int, int)": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Writes the cache and bufferToAppend to the underlying stream as one large chunk", "history": "Added in API level 1", "FullName": "protected void flushCacheWithAppend (byte[] bufferToAppend, int off, int len)"}, "flushCache()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Writes the cache out onto the underlying stream", "history": "Added in API level 1", "FullName": "protected void flushCache ()"}, "close()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Finishes writing to the underlying stream, but does NOT close the underlying stream.", "history": "Added in API level 1", "FullName": "public void close ()"}, "ChunkedOutputStream(org.apache.http.io.SessionOutputBuffer)": {"Returns": [], "Parameters": [["@B_org#apache#http#io#SessionOutputBuffer_E@", "the output buffer to wrap"]], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Wraps a session output buffer and chunks the output. The default buffer size of 2048 was chosen because the chunk overhead is less than 0.5%", "history": "Added in API level 1", "FullName": "public ChunkedOutputStream (SessionOutputBuffer out)"}, "flush()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Flushes the content buffer and the underlying stream.", "history": "Added in API level 1", "FullName": "public void flush ()"}, "write(byte[], int, int)": {"Returns": [], "Parameters": [["byte[]", "the buffer to be written."], ["int", "the start position in buffer from where to get bytes."], ["int", "the number of bytes from buffer to write to this stream."]], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Writes count bytes from the byte array buffer starting at position offset to this stream.", "history": "Added in API level 1", "FullName": "public void write (byte[] src, int off, int len)"}, "write(int)": {"Returns": [], "Parameters": [["int", "the byte to be written."]], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Writes a single byte to this stream. Only the least significant byte of the integer oneByte is written to the stream.", "history": "Added in API level 1", "FullName": "public void write (int b)"}}, "Inheritance": ["@B_java#io#OutputStream_E@"], "ClassName": "org.apache.http.impl.io.ChunkedOutputStream", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Implements chunked transfer coding. See"}