{"Functions": {"getParent()": {"Returns": [["@B_org#xml#sax#XMLReader_E@", "The parent filter, or null if none has been set."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the parent reader. This method allows the application to query the parent reader (which may be another filter). It is generally a bad idea to perform any operations on the parent reader directly: they should all pass through this filter.", "history": "Added in API level 1", "FullName": "public abstract XMLReader getParent ()"}, "setParent(org.xml.sax.XMLReader)": {"Returns": [], "Parameters": [["@B_org#xml#sax#XMLReader_E@", "XMLReader: The parent reader."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the parent reader. This method allows the application to link the filter to a parent reader (which may be another filter). The argument may not be null.", "history": "Added in API level 1", "FullName": "public abstract void setParent (XMLReader parent)"}}, "Inheritance": [], "ClassName": "org.xml.sax.XMLFilter", "ClassDesc": "Interface for an XML filter. An XML filter is like an XML reader, except that it obtains its events from another XML reader rather than a primary source like an XML document or database. Filters can modify a stream of events as they pass on to the final application. The XMLFilterImpl helper class provides a convenient base for creating SAX2 filters, by passing on all @B_org#xml#sax#EntityResolver_E@, @B_org#xml#sax#DTDHandler_E@, @B_org#xml#sax#ContentHandler_E@ and @B_org#xml#sax#ErrorHandler_E@ events automatically."}