{"Functions": {"SSLSessionCache(java.io.File)": {"Returns": [], "Parameters": [["@B_java#io#File_E@", "File: to store session files in (created if necessary)"]], "Throws": [["@B_java#io#IOException_E@", "if the cache can't be opened"]], "SeeAlso": [], "Permissions": [], "Description": "Create a session cache using the specified directory. Individual session entries will be files within the directory. Multiple instances for the same directory share data internally.", "history": "Added in API level 8", "FullName": "public SSLSessionCache (File dir)"}, "SSLSessionCache(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: for the application"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a session cache at the default location for this app. Multiple instances share data internally.", "history": "Added in API level 8", "FullName": "public SSLSessionCache (Context context)"}}, "Inheritance": [], "ClassName": "android.net.SSLSessionCache", "ClassDesc": "File-based cache of established SSL sessions. When re-establishing a connection to the same server, using an SSL session cache can save some time, power, and bandwidth by skipping directly to an encrypted stream. This is a persistent cache which can span executions of the application."}