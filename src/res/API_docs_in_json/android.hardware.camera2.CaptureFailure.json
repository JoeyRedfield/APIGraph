{"Functions": {"getReason()": {"Returns": [["int", "int The reason code. Value is @B_android#hardware#camera2#CaptureFailure#REASON_ERROR_E@, or @B_android#hardware#camera2#CaptureFailure#REASON_FLUSHED_E@"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#hardware#camera2#CaptureFailure_E@"], "Permissions": [], "Description": "Determine why the request was dropped, whether due to an error or to a user action.", "history": "Added in API level 21", "FullName": "public int getReason ()"}, "getPhysicalCameraId()": {"Returns": [["@B_java#lang#String_E@", "String The physical camera device ID of the respective failing output. null in case the capture request has no associated physical camera device."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#hardware#camera2#CaptureRequest#Builder#setPhysicalCameraKey_E@", "@B_android#hardware#camera2#params#OutputConfiguration#setPhysicalCameraId_E@"], "Permissions": [], "Description": "The physical camera device ID in case the capture failure comes from a @B_android#hardware#camera2#CaptureRequest_E@ with configured physical camera streams for a logical camera.", "history": "Added in API level 29", "FullName": "public String getPhysicalCameraId ()"}, "getRequest()": {"Returns": [["@B_android#hardware#camera2#CaptureRequest_E@", "The request associated with this failed capture. Never null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the request associated with this failed capture. Whenever a request is unsuccessfully captured, with @B_android#hardware#camera2#CameraCaptureSession#CaptureCallback#onCaptureFailed_E@, the failed capture's getRequest() will return that request. In particular, cameraDevice.capture(someRequest, new CaptureCallback() { @Override void onCaptureFailed(CaptureRequest myRequest, CaptureFailure myFailure) { assert(myFailure.getRequest.equals(myRequest) == true); } };", "history": "Added in API level 21", "FullName": "public CaptureRequest getRequest ()"}, "getSequenceId()": {"Returns": [["int", "int The ID for the sequence of requests that this capture failure is the result of"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#hardware#camera2#CameraCaptureSession#CaptureCallback#onCaptureSequenceCompleted_E@"], "Permissions": [], "Description": "The sequence ID for this failed capture that was returned by the @B_android#hardware#camera2#CameraCaptureSession#capture_E@ family of functions. The sequence ID is a unique monotonically increasing value starting from 0, incremented every time a new group of requests is submitted to the CameraDevice.", "history": "Added in API level 21", "FullName": "public int getSequenceId ()"}, "wasImageCaptured()": {"Returns": [["boolean", "boolean True if the image was captured, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Determine if the image was captured from the camera. If the image was not captured, no image buffers will be available. If the image was captured, then image buffers may be available.", "history": "Added in API level 21", "FullName": "public boolean wasImageCaptured ()"}, "getFrameNumber()": {"Returns": [["long", "long frame number"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the frame number associated with this failed capture. Whenever a request has been processed, regardless of failed capture or success, it gets a unique frame number assigned to its future result/failed capture. This value monotonically increments, starting with 0, for every new result or failure; and the scope is the lifetime of the @B_android#hardware#camera2#CameraDevice_E@.", "history": "Added in API level 21", "FullName": "public long getFrameNumber ()"}}, "Inheritance": [], "ClassName": "android.hardware.camera2.CaptureFailure", "ClassDesc": "A report of failed capture for a single image capture from the image sensor. CaptureFailures are produced by a @B_android#hardware#camera2#CameraDevice_E@ if processing a @B_android#hardware#camera2#CaptureRequest_E@ fails, either partially or fully. Use @B_android#hardware#camera2#CaptureFailure#getReason_E@ to determine the specific nature of the failed capture. Receiving a CaptureFailure means that the metadata associated with that frame number has been dropped -- no @B_android#hardware#camera2#CaptureResult_E@ with the same frame number will be produced."}