{"Functions": {"obtainMessage()": {"Returns": [["@B_android#os#Message_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a new @B_android#os#Message_E@ from the global message pool. More efficient than creating and allocating new instances. The retrieved message has its handler set to this instance (Message.target == this). If you don't want that facility, just call Message.obtain() instead.", "history": "Added in API level 1", "FullName": "public final Message obtainMessage ()"}, "postDelayed(java.lang.Runnable, long)": {"Returns": [["boolean", "Returns true if the Runnable was successfully placed in to the message queue. Returns false on failure, usually because the looper processing the message queue is exiting. Note that a result of true does not mean the Runnable will be processed -- if the looper is quit before the delivery time of the message occurs then the message will be dropped."]], "Parameters": [["@B_java#lang#Runnable_E@", "Runnable: The Runnable that will be executed."], ["long", "long: The delay (in milliseconds) until the Runnable will be executed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Causes the Runnable r to be added to the message queue, to be run after the specified amount of time elapses. The runnable will be run on the thread to which this handler is attached.", "history": "added in API level 1", "FullName": "public final boolean postDelayed (Runnable r, long delayMillis)"}, "dump(android.util.Printer,java.lang.String)": {"Returns": [], "Parameters": [["@B_android#util#Printer_E@", "Printer: This value must never be null."], ["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public final void dump (Printer pw, String prefix)"}, "postAtFrontOfQueue(java.lang.Runnable)": {"Returns": [["boolean", "Returns true if the message was successfully placed in to the message queue. Returns false on failure, usually because the looper processing the message queue is exiting."]], "Parameters": [["@B_java#lang#Runnable_E@", "Runnable: The Runnable that will be executed. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Posts a message to an object that implements Runnable. Causes the Runnable r to executed on the next iteration through the message queue. The runnable will be run on the thread to which this handler is attached.", "history": "Added in API level 1", "FullName": "public final boolean postAtFrontOfQueue (Runnable r)"}, "removeCallbacks(java.lang.Runnable)": {"Returns": [], "Parameters": [["@B_java#lang#Runnable_E@", "Runnable: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Remove any pending posts of Runnable r that are in the message queue.", "history": "Added in API level 1", "FullName": "public final void removeCallbacks (Runnable r)"}, "removeMessages(int,java.lang.Object)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["@B_java#lang#Object_E@", "Object: This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Remove any pending posts of messages with code 'what' and whose obj is 'object' that are in the message queue. If", "history": "Added in API level 1", "FullName": "public final void removeMessages (int what, Object object)"}, "obtainMessage(int, int, int, java.lang.Object)": {"Returns": [["@B_android#os#Message_E@", "A Message from the global message pool."]], "Parameters": [["int", "int: Value to assign to the returned Message.what field."], ["int", "int: Value to assign to the returned Message.arg1 field."], ["int", "int: Value to assign to the returned Message.arg2 field."], ["@B_java#lang#Object_E@", "Object: Value to assign to the returned Message.obj field."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as @B_android#os#Handler#obtainMessage_E@, except that it also sets the what, obj, arg1,and arg2 values on the returned Message.", "history": "added in API level 1", "FullName": "public final Message obtainMessage (int what, int arg1, int arg2, Object obj)"}, "postDelayed(java.lang.Runnable,long)": {"Returns": [["boolean", "Returns true if the Runnable was successfully placed in to the message queue. Returns false on failure, usually because the looper processing the message queue is exiting. Note that a result of true does not mean the Runnable will be processed -- if the looper is quit before the delivery time of the message occurs then the message will be dropped."]], "Parameters": [["@B_java#lang#Runnable_E@", "Runnable: The Runnable that will be executed. This value must never be null."], ["long", "long: The delay (in milliseconds) until the Runnable will be executed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Causes the Runnable r to be added to the message queue, to be run after the specified amount of time elapses. The runnable will be run on the thread to which this handler is attached.", "history": "Added in API level 1", "FullName": "public final boolean postDelayed (Runnable r, long delayMillis)"}, "hasCallbacks(java.lang.Runnable)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_java#lang#Runnable_E@", "Runnable: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check if there are any pending posts of messages with callback r in the message queue.", "history": "Added in API level 29", "FullName": "public final boolean hasCallbacks (Runnable r)"}, "sendEmptyMessage(int)": {"Returns": [["boolean", "Returns true if the message was successfully placed in to the message queue. Returns false on failure, usually because the looper processing the message queue is exiting."]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sends a Message containing only the what value.", "history": "Added in API level 1", "FullName": "public final boolean sendEmptyMessage (int what)"}, "dispatchMessage(android.os.Message)": {"Returns": [], "Parameters": [["@B_android#os#Message_E@", "Message: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Handle system messages here.", "history": "Added in API level 1", "FullName": "public void dispatchMessage (Message msg)"}, "obtainMessage(int, int, int)": {"Returns": [["@B_android#os#Message_E@", "A Message from the global message pool."]], "Parameters": [["int", "int: Value to assign to the returned Message.what field."], ["int", "int: Value to assign to the returned Message.arg1 field."], ["int", "int: Value to assign to the returned Message.arg2 field."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as @B_android#os#Handler#obtainMessage_E@, except that it also sets the what, arg1 and arg2 members of the returned Message.", "history": "added in API level 1", "FullName": "public final Message obtainMessage (int what, int arg1, int arg2)"}, "postAtTime(java.lang.Runnable,java.lang.Object,long)": {"Returns": [["boolean", "Returns true if the Runnable was successfully placed in to the message queue. Returns false on failure, usually because the looper processing the message queue is exiting. Note that a result of true does not mean the Runnable will be processed -- if the looper is quit before the delivery time of the message occurs then the message will be dropped."]], "Parameters": [["@B_java#lang#Runnable_E@", "Runnable: The Runnable that will be executed. This value must never be null."], ["@B_java#lang#Object_E@", "Object: An instance which can be used to cancel r via @B_android#os#Handler#removeCallbacksAndMessages_E@. This value may be null."], ["long", "long: The absolute time at which the callback should run, using the @B_android#os#SystemClock#uptimeMillis_E@ time-base."]], "Throws": [], "SeeAlso": ["@B_android#os#SystemClock#uptimeMillis_E@"], "Permissions": [], "Description": "Causes the Runnable r to be added to the message queue, to be run at a specific time given by", "history": "Added in API level 1", "FullName": "public final boolean postAtTime (Runnable r, Object token, long uptimeMillis)"}, "obtainMessage(int,java.lang.Object)": {"Returns": [["@B_android#os#Message_E@", "A Message from the global message pool. This value will never be null."]], "Parameters": [["int", "int: Value to assign to the returned Message.what field."], ["@B_java#lang#Object_E@", "Object: Value to assign to the returned Message.obj field. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as @B_android#os#Handler#obtainMessage_E@, except that it also sets the what and obj members of the returned Message.", "history": "Added in API level 1", "FullName": "public final Message obtainMessage (int what, Object obj)"}, "sendEmptyMessageAtTime(int,long)": {"Returns": [["boolean", "Returns true if the message was successfully placed in to the message queue. Returns false on failure, usually because the looper processing the message queue is exiting."]], "Parameters": [["int", "int no parameter comment"], ["long", "long no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#os#Handler#sendMessageAtTime_E@"], "Permissions": [], "Description": "Sends a Message containing only the what value, to be delivered at a specific time.", "history": "Added in API level 1", "FullName": "public final boolean sendEmptyMessageAtTime (int what, long uptimeMillis)"}, "Handler(android.os.Looper,android.os.Handler.Callback)": {"Returns": [], "Parameters": [["@B_android#os#Looper_E@", "Looper: The looper, must not be null. This value must never be null."], ["@B_android#os#Handler#Callback_E@", "Handler.Callback: The callback interface in which to handle messages, or null. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use the provided @B_android#os#Looper_E@ instead of the default one and take a callback interface in which to handle messages.", "history": "Added in API level 3", "FullName": "public Handler (Looper looper, Handler.Callback callback)"}, "sendMessage(android.os.Message)": {"Returns": [["boolean", "Returns true if the message was successfully placed in to the message queue. Returns false on failure, usually because the looper processing the message queue is exiting."]], "Parameters": [["@B_android#os#Message_E@", "Message: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Pushes a message onto the end of the message queue after all pending messages before the current time. It will be received in @B_android#os#Handler#handleMessage_E@, in the thread attached to this handler.", "history": "Added in API level 1", "FullName": "public final boolean sendMessage (Message msg)"}, "dump(android.util.Printer, java.lang.String)": {"Returns": [], "Parameters": [["@B_android#util#Printer_E@", "Printer no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public final void dump (Printer pw, String prefix)"}, "sendEmptyMessageDelayed(int,long)": {"Returns": [["boolean", "Returns true if the message was successfully placed in to the message queue. Returns false on failure, usually because the looper processing the message queue is exiting."]], "Parameters": [["int", "int no parameter comment"], ["long", "long no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#os#Handler#sendMessageDelayed_E@"], "Permissions": [], "Description": "Sends a Message containing only the what value, to be delivered after the specified amount of time elapses.", "history": "Added in API level 1", "FullName": "public final boolean sendEmptyMessageDelayed (int what, long delayMillis)"}, "removeCallbacksAndMessages(java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Remove any pending posts of callbacks and sent messages whose", "history": "Added in API level 1", "FullName": "public final void removeCallbacksAndMessages (Object token)"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 1", "FullName": "public String toString ()"}, "postAtTime(java.lang.Runnable, long)": {"Returns": [["boolean", "Returns true if the Runnable was successfully placed in to the message queue. Returns false on failure, usually because the looper processing the message queue is exiting. Note that a result of true does not mean the Runnable will be processed -- if the looper is quit before the delivery time of the message occurs then the message will be dropped."]], "Parameters": [["@B_java#lang#Runnable_E@", "Runnable: The Runnable that will be executed."], ["long", "long: The absolute time at which the callback should run, using the @B_android#os#SystemClock#uptimeMillis_E@ time-base."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Causes the Runnable r to be added to the message queue, to be run at a specific time given by", "history": "added in API level 1", "FullName": "public final boolean postAtTime (Runnable r, long uptimeMillis)"}, "removeMessages(int, java.lang.Object)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Remove any pending posts of messages with code 'what' and whose obj is 'object' that are in the message queue. If", "history": "added in API level 1", "FullName": "public final void removeMessages (int what, Object object)"}, "hasMessages(int, java.lang.Object)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check if there are any pending posts of messages with code 'what' and whose obj is 'object' in the message queue.", "history": "added in API level 1", "FullName": "public final boolean hasMessages (int what, Object object)"}, "hasMessages(int,java.lang.Object)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["@B_java#lang#Object_E@", "Object: This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check if there are any pending posts of messages with code 'what' and whose obj is 'object' in the message queue.", "history": "Added in API level 1", "FullName": "public final boolean hasMessages (int what, Object object)"}, "createAsync(android.os.Looper)": {"Returns": [["@B_android#os#Handler_E@", "a new async Handler instance This value will never be null."]], "Parameters": [["@B_android#os#Looper_E@", "Looper: the Looper that the new Handler should be bound to This value must never be null."]], "Throws": [], "SeeAlso": ["@B_android#os#Handler#createAsync_E@"], "Permissions": [], "Description": "Create a new Handler whose posted messages and runnables are not subject to synchronization barriers such as display vsync. Messages sent to an async handler are guaranteed to be ordered with respect to one another, but not necessarily with respect to messages from other Handlers.", "history": "Added in API level 28", "FullName": "public static Handler createAsync (Looper looper)"}, "Handler(android.os.Handler.Callback)": {"Returns": [], "Parameters": [["@B_android#os#Handler#Callback_E@", "Handler.Callback: The callback interface in which to handle messages, or null. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor associates this handler with the @B_android#os#Looper_E@ for the current thread and takes a callback interface in which you can handle messages. If this thread does not have a looper, this handler won't be able to receive messages so an exception is thrown.", "history": "Added in API level 3", "FullName": "public Handler (Handler.Callback callback)"}, "getMessageName(android.os.Message)": {"Returns": [["@B_java#lang#String_E@", "This value will never be null."]], "Parameters": [["@B_android#os#Message_E@", "Message: The message whose name is being queried This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representing the name of the specified message. The default implementation will either return the class name of the message callback if any, or the hexadecimal representation of the message \"what\" field.", "history": "Added in API level 14", "FullName": "public String getMessageName (Message message)"}, "sendMessageDelayed(android.os.Message,long)": {"Returns": [["boolean", "Returns true if the message was successfully placed in to the message queue. Returns false on failure, usually because the looper processing the message queue is exiting. Note that a result of true does not mean the message will be processed -- if the looper is quit before the delivery time of the message occurs then the message will be dropped."]], "Parameters": [["@B_android#os#Message_E@", "Message: This value must never be null."], ["long", "long no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enqueue a message into the message queue after all pending messages before (current time + delayMillis). You will receive it in @B_android#os#Handler#handleMessage_E@, in the thread attached to this handler.", "history": "Added in API level 1", "FullName": "public final boolean sendMessageDelayed (Message msg, long delayMillis)"}, "post(java.lang.Runnable)": {"Returns": [["boolean", "Returns true if the Runnable was successfully placed in to the message queue. Returns false on failure, usually because the looper processing the message queue is exiting."]], "Parameters": [["@B_java#lang#Runnable_E@", "Runnable: The Runnable that will be executed. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Causes the Runnable r to be added to the message queue. The runnable will be run on the thread to which this handler is attached.", "history": "Added in API level 1", "FullName": "public final boolean post (Runnable r)"}, "hasMessages(int)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check if there are any pending posts of messages with code 'what' in the message queue.", "history": "Added in API level 1", "FullName": "public final boolean hasMessages (int what)"}, "sendEmptyMessageAtTime(int, long)": {"Returns": [["boolean", "Returns true if the message was successfully placed in to the message queue. Returns false on failure, usually because the looper processing the message queue is exiting."]], "Parameters": [["int", "int no parameter comment"], ["long", "long no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#os#Handler#sendMessageAtTime_E@"], "Permissions": [], "Description": "Sends a Message containing only the what value, to be delivered at a specific time.", "history": "added in API level 1", "FullName": "public final boolean sendEmptyMessageAtTime (int what, long uptimeMillis)"}, "obtainMessage(int)": {"Returns": [["@B_android#os#Message_E@", "A Message from the global message pool. This value will never be null."]], "Parameters": [["int", "int: Value to assign to the returned Message.what field."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as @B_android#os#Handler#obtainMessage_E@, except that it also sets the what member of the returned Message.", "history": "Added in API level 1", "FullName": "public final Message obtainMessage (int what)"}, "Handler()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Default constructor associates this handler with the @B_android#os#Looper_E@ for the current thread. If this thread does not have a looper, this handler won't be able to receive messages so an exception is thrown.", "history": "Added in API level 1", "FullName": "public Handler ()"}, "sendEmptyMessageDelayed(int, long)": {"Returns": [["boolean", "Returns true if the message was successfully placed in to the message queue. Returns false on failure, usually because the looper processing the message queue is exiting."]], "Parameters": [["int", "int no parameter comment"], ["long", "long no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#os#Handler#sendMessageDelayed_E@"], "Permissions": [], "Description": "Sends a Message containing only the what value, to be delivered after the specified amount of time elapses.", "history": "added in API level 1", "FullName": "public final boolean sendEmptyMessageDelayed (int what, long delayMillis)"}, "obtainMessage(int,int,int,java.lang.Object)": {"Returns": [["@B_android#os#Message_E@", "A Message from the global message pool. This value will never be null."]], "Parameters": [["int", "int: Value to assign to the returned Message.what field."], ["int", "int: Value to assign to the returned Message.arg1 field."], ["int", "int: Value to assign to the returned Message.arg2 field."], ["@B_java#lang#Object_E@", "Object: Value to assign to the returned Message.obj field. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as @B_android#os#Handler#obtainMessage_E@, except that it also sets the what, obj, arg1,and arg2 values on the returned Message.", "history": "Added in API level 1", "FullName": "public final Message obtainMessage (int what, int arg1, int arg2, Object obj)"}, "obtainMessage(int, java.lang.Object)": {"Returns": [["@B_android#os#Message_E@", "A Message from the global message pool."]], "Parameters": [["int", "int: Value to assign to the returned Message.what field."], ["@B_java#lang#Object_E@", "Object: Value to assign to the returned Message.obj field."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as @B_android#os#Handler#obtainMessage_E@, except that it also sets the what and obj members of the returned Message.", "history": "added in API level 1", "FullName": "public final Message obtainMessage (int what, Object obj)"}, "obtainMessage(int,int,int)": {"Returns": [["@B_android#os#Message_E@", "A Message from the global message pool. This value will never be null."]], "Parameters": [["int", "int: Value to assign to the returned Message.what field."], ["int", "int: Value to assign to the returned Message.arg1 field."], ["int", "int: Value to assign to the returned Message.arg2 field."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as @B_android#os#Handler#obtainMessage_E@, except that it also sets the what, arg1 and arg2 members of the returned Message.", "history": "Added in API level 1", "FullName": "public final Message obtainMessage (int what, int arg1, int arg2)"}, "postAtTime(java.lang.Runnable,long)": {"Returns": [["boolean", "Returns true if the Runnable was successfully placed in to the message queue. Returns false on failure, usually because the looper processing the message queue is exiting. Note that a result of true does not mean the Runnable will be processed -- if the looper is quit before the delivery time of the message occurs then the message will be dropped."]], "Parameters": [["@B_java#lang#Runnable_E@", "Runnable: The Runnable that will be executed. This value must never be null."], ["long", "long: The absolute time at which the callback should run, using the @B_android#os#SystemClock#uptimeMillis_E@ time-base."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Causes the Runnable r to be added to the message queue, to be run at a specific time given by", "history": "Added in API level 1", "FullName": "public final boolean postAtTime (Runnable r, long uptimeMillis)"}, "sendMessageAtFrontOfQueue(android.os.Message)": {"Returns": [["boolean", "Returns true if the message was successfully placed in to the message queue. Returns false on failure, usually because the looper processing the message queue is exiting."]], "Parameters": [["@B_android#os#Message_E@", "Message: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enqueue a message at the front of the message queue, to be processed on the next iteration of the message loop. You will receive it in @B_android#os#Handler#handleMessage_E@, in the thread attached to this handler.", "history": "Added in API level 1", "FullName": "public final boolean sendMessageAtFrontOfQueue (Message msg)"}, "sendMessageAtTime(android.os.Message,long)": {"Returns": [["boolean", "Returns true if the message was successfully placed in to the message queue. Returns false on failure, usually because the looper processing the message queue is exiting. Note that a result of true does not mean the message will be processed -- if the looper is quit before the delivery time of the message occurs then the message will be dropped."]], "Parameters": [["@B_android#os#Message_E@", "Message: This value must never be null."], ["long", "long: The absolute time at which the message should be delivered, using the @B_android#os#SystemClock#uptimeMillis_E@ time-base."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enqueue a message into the message queue after all pending messages before the absolute time (in milliseconds) @B_android#os#Handler#handleMessage_E@, in the thread attached to this handler.", "history": "Added in API level 1", "FullName": "public boolean sendMessageAtTime (Message msg, long uptimeMillis)"}, "sendMessageDelayed(android.os.Message, long)": {"Returns": [["boolean", "Returns true if the message was successfully placed in to the message queue. Returns false on failure, usually because the looper processing the message queue is exiting. Note that a result of true does not mean the message will be processed -- if the looper is quit before the delivery time of the message occurs then the message will be dropped."]], "Parameters": [["@B_android#os#Message_E@", "Message no parameter comment"], ["long", "long no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enqueue a message into the message queue after all pending messages before (current time + delayMillis). You will receive it in @B_android#os#Handler#handleMessage_E@, in the thread attached to this handler.", "history": "added in API level 1", "FullName": "public final boolean sendMessageDelayed (Message msg, long delayMillis)"}, "sendMessageAtTime(android.os.Message, long)": {"Returns": [["boolean", "Returns true if the message was successfully placed in to the message queue. Returns false on failure, usually because the looper processing the message queue is exiting. Note that a result of true does not mean the message will be processed -- if the looper is quit before the delivery time of the message occurs then the message will be dropped."]], "Parameters": [["@B_android#os#Message_E@", "Message no parameter comment"], ["long", "long: The absolute time at which the message should be delivered, using the @B_android#os#SystemClock#uptimeMillis_E@ time-base."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enqueue a message into the message queue after all pending messages before the absolute time (in milliseconds) @B_android#os#Handler#handleMessage_E@, in the thread attached to this handler.", "history": "added in API level 1", "FullName": "public boolean sendMessageAtTime (Message msg, long uptimeMillis)"}, "handleMessage(android.os.Message)": {"Returns": [], "Parameters": [["@B_android#os#Message_E@", "Message: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Subclasses must implement this to receive messages.", "history": "Added in API level 1", "FullName": "public void handleMessage (Message msg)"}, "Handler(android.os.Looper)": {"Returns": [], "Parameters": [["@B_android#os#Looper_E@", "Looper: The looper, must not be null. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use the provided @B_android#os#Looper_E@ instead of the default one.", "history": "Added in API level 1", "FullName": "public Handler (Looper looper)"}, "removeMessages(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Remove any pending posts of messages with code 'what' that are in the message queue.", "history": "Added in API level 1", "FullName": "public final void removeMessages (int what)"}, "postDelayed(java.lang.Runnable,java.lang.Object,long)": {"Returns": [["boolean", "Returns true if the Runnable was successfully placed in to the message queue. Returns false on failure, usually because the looper processing the message queue is exiting. Note that a result of true does not mean the Runnable will be processed -- if the looper is quit before the delivery time of the message occurs then the message will be dropped."]], "Parameters": [["@B_java#lang#Runnable_E@", "Runnable: The Runnable that will be executed. This value must never be null."], ["@B_java#lang#Object_E@", "Object: An instance which can be used to cancel r via @B_android#os#Handler#removeCallbacksAndMessages_E@. This value may be null."], ["long", "long: The delay (in milliseconds) until the Runnable will be executed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Causes the Runnable r to be added to the message queue, to be run after the specified amount of time elapses. The runnable will be run on the thread to which this handler is attached.", "history": "Added in API level 28", "FullName": "public final boolean postDelayed (Runnable r, Object token, long delayMillis)"}, "getLooper()": {"Returns": [["@B_android#os#Looper_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public final Looper getLooper ()"}, "createAsync(android.os.Looper,android.os.Handler.Callback)": {"Returns": [["@B_android#os#Handler_E@", "a new async Handler instance This value will never be null."]], "Parameters": [["@B_android#os#Looper_E@", "Looper: the Looper that the new Handler should be bound to This value must never be null."], ["@B_android#os#Handler#Callback_E@", "Handler.Callback: This value must never be null."]], "Throws": [], "SeeAlso": ["@B_android#os#Handler#createAsync_E@"], "Permissions": [], "Description": "Create a new Handler whose posted messages and runnables are not subject to synchronization barriers such as display vsync. Messages sent to an async handler are guaranteed to be ordered with respect to one another, but not necessarily with respect to messages from other Handlers.", "history": "Added in API level 28", "FullName": "public static Handler createAsync (Looper looper, Handler.Callback callback)"}, "removeCallbacks(java.lang.Runnable,java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Runnable_E@", "Runnable: This value must never be null."], ["@B_java#lang#Object_E@", "Object: This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Remove any pending posts of Runnable", "history": "Added in API level 1", "FullName": "public final void removeCallbacks (Runnable r, Object token)"}}, "Inheritance": [], "ClassName": "android.os.Handler", "ClassDesc": "A Handler allows you to send and process @B_android#os#Message_E@ and Runnable objects associated with a thread's @B_android#os#MessageQueue_E@. Each Handler instance is associated with a single thread and that thread's message queue. When you create a new Handler, it is bound to the thread / message queue of the thread that is creating it -- from that point on, it will deliver messages and runnables to that message queue and execute them as they come out of the message queue. There are two main uses for a Handler: (1) to schedule messages and runnables to be executed at some point in the future; and (2) to enqueue an action to be performed on a different thread than your own. Scheduling messages is accomplished with the @B_android#os#Handler#post_E@, @B_android#os#Handler#postAtTime_E@, @B_android#os#Handler#postDelayed_E@, @B_android#os#Handler#sendEmptyMessage_E@, @B_android#os#Handler#sendMessage_E@, @B_android#os#Handler#sendMessageAtTime_E@, and @B_android#os#Handler#sendMessageDelayed_E@ methods. The post versions allow you to enqueue Runnable objects to be called by the message queue when they are received; the sendMessage versions allow you to enqueue a @B_android#os#Message_E@ object containing a bundle of data that will be processed by the Handler's @B_android#os#Handler#handleMessage_E@ method (requiring that you implement a subclass of Handler). When posting or sending to a Handler, you can either allow the item to be processed as soon as the message queue is ready to do so, or specify a delay before it gets processed or absolute time for it to be processed. The latter two allow you to implement timeouts, ticks, and other timing-based behavior. When a process is created for your application, its main thread is dedicated to running a message queue that takes care of managing the top-level application objects (activities, broadcast receivers, etc) and any windows they create. You can create your own threads, and communicate back with the main application thread through a Handler. This is done by calling the same post or sendMessage methods as before, but from your new thread. The given Runnable or Message will then be scheduled in the Handler's message queue and processed when appropriate."}