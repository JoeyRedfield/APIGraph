{"Functions": {"onCreated(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "New session has been created. Details about the session can be obtained from @B_android#content#pm#PackageInstaller#getSessionInfo_E@.", "history": "Added in API level 21", "FullName": "public abstract void onCreated (int sessionId)"}, "onActiveChanged(int,boolean)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Active state for session has been changed. A session is considered active whenever there is ongoing forward progress being made, such as the installer holding an open @B_android#content#pm#PackageInstaller#Session_E@ instance while streaming data into place, or the system optimizing code as the result of @B_android#content#pm#PackageInstaller#Session#commit_E@. If the installer closes the @B_android#content#pm#PackageInstaller#Session_E@ without committing, the session is considered inactive until the installer opens the session again.", "history": "Added in API level 21", "FullName": "public abstract void onActiveChanged (int sessionId, boolean active)"}, "onProgressChanged(int,float)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["float", "float no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Progress for given session has been updated. Note that this progress may not directly correspond to the value reported by @B_android#content#pm#PackageInstaller#Session#setStagingProgress_E@, as the system may carve out a portion of the overall progress to represent its own internal installation work.", "history": "Added in API level 21", "FullName": "public abstract void onProgressChanged (int sessionId, float progress)"}, "PackageInstaller.SessionCallback()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 21", "FullName": "public PackageInstaller.SessionCallback ()"}, "onFinished(int,boolean)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Session has completely finished, either with success or failure.", "history": "Added in API level 21", "FullName": "public abstract void onFinished (int sessionId, boolean success)"}, "onFinished(int, boolean)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Session has completely finished, either with success or failure.", "history": "added in API level 21", "FullName": "public abstract void onFinished (int sessionId, boolean success)"}, "onActiveChanged(int, boolean)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Active state for session has been changed. A session is considered active whenever there is ongoing forward progress being made, such as the installer holding an open @B_android#content#pm#PackageInstaller#Session_E@ instance while streaming data into place, or the system optimizing code as the result of @B_android#content#pm#PackageInstaller#Session#commit_E@. If the installer closes the @B_android#content#pm#PackageInstaller#Session_E@ without committing, the session is considered inactive until the installer opens the session again.", "history": "added in API level 21", "FullName": "public abstract void onActiveChanged (int sessionId, boolean active)"}, "onProgressChanged(int, float)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["float", "float no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Progress for given session has been updated. Note that this progress may not directly correspond to the value reported by @B_android#content#pm#PackageInstaller#Session#setStagingProgress_E@, as the system may carve out a portion of the overall progress to represent its own internal installation work.", "history": "added in API level 21", "FullName": "public abstract void onProgressChanged (int sessionId, float progress)"}, "onBadgingChanged(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Badging details for an existing session has changed. For example, the app icon or label has been updated.", "history": "Added in API level 21", "FullName": "public abstract void onBadgingChanged (int sessionId)"}}, "Inheritance": [], "ClassName": "android.content.pm.PackageInstaller.SessionCallback", "ClassDesc": "Events for observing session lifecycle. A typical session lifecycle looks like this: An installer creates a session to indicate pending app delivery. All install details are available at this point. The installer opens the session to deliver APK data. Note that a session may be opened and closed multiple times as network connectivity changes. The installer may deliver periodic progress updates. The installer commits or abandons the session, resulting in the session being finished."}