{"Functions": {"getRoute()": {"Returns": [["", "the planned route"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtain the planned route for the referenced entry. The planned route is still available, even if the entry is gone.", "history": "Added in API level 1", "FullName": "public final HttpRoute getRoute ()"}, "BasicPoolEntryRef(org.apache.http.impl.conn.tsccm.BasicPoolEntry, java.lang.ref.ReferenceQueue<java.lang.Object>)": {"Returns": [], "Parameters": [["@B_org#apache#http#impl#conn#tsccm#BasicPoolEntry_E@", "the pool entry, must not be null"], ["@B_java#lang#ref#ReferenceQueue_E@", "the reference queue, or null"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new reference to a pool entry.", "history": "Added in API level 1", "FullName": "public BasicPoolEntryRef (BasicPoolEntry entry, ReferenceQueue<Object> queue)"}}, "Inheritance": ["@B_java#lang#ref#Reference_E@", "@B_java#lang#ref#WeakReference_E@"], "ClassName": "org.apache.http.impl.conn.tsccm.BasicPoolEntryRef", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit A weak reference to a @B_org#apache#http#impl#conn#tsccm#BasicPoolEntry_E@. This reference explicitly keeps the planned route, so the connection can be reclaimed if it is lost to garbage collection."}