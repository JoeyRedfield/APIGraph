{"Functions": {"rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor)": {"Returns": [], "Parameters": [["@B_java#lang#Runnable_E@", "Runnable: the runnable task requested to be executed"], ["@B_java#util#concurrent#ThreadPoolExecutor_E@", "ThreadPoolExecutor: the executor attempting to execute this task"]], "Throws": [["@B_java#util#concurrent#RejectedExecutionException_E@", "if there is no remedy"]], "SeeAlso": [], "Permissions": [], "Description": "Method that may be invoked by a @B_java#util#concurrent#ThreadPoolExecutor_E@ when @B_java#util#concurrent#ThreadPoolExecutor#execute_E@ cannot accept a task. This may occur when no more threads or queue slots are available because their bounds would be exceeded, or upon shutdown of the Executor. In the absence of other alternatives, the method may throw an unchecked @B_java#util#concurrent#RejectedExecutionException_E@, which will be propagated to the caller of execute.", "history": "Added in API level 1", "FullName": "public abstract void rejectedExecution (Runnable r, ThreadPoolExecutor executor)"}}, "Inheritance": [], "ClassName": "java.util.concurrent.RejectedExecutionHandler", "ClassDesc": "A handler for tasks that cannot be executed by a @B_java#util#concurrent#ThreadPoolExecutor_E@."}