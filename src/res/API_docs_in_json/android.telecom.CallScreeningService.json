{"Functions": {"onUnbind(android.content.Intent)": {"Returns": [["boolean", "Return true if you would like to have the service's @B_android#app#Service#onRebind_E@ method later called when new clients bind to it."]], "Parameters": [["@B_android#content#Intent_E@", "Intent: The Intent that was used to bind to this service, as given to @B_android#content#Context#bindService_E@. Note that any extras that were included with the Intent at that point will not be seen here."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when all clients have disconnected from a particular interface published by the service. The default implementation does nothing and returns false.", "history": "Added in API level 24", "FullName": "public boolean onUnbind (Intent intent)"}, "CallScreeningService()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 24", "FullName": "public CallScreeningService ()"}, "onBind(android.content.Intent)": {"Returns": [["@B_android#os#IBinder_E@", "Return an IBinder through which clients can call on to the service."]], "Parameters": [["@B_android#content#Intent_E@", "Intent: The Intent that was used to bind to this service, as given to @B_android#content#Context#bindService_E@. Note that any extras that were included with the Intent at that point will not be seen here."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the communication channel to the service. May return null if clients can not bind to the service. The returned @B_android#os#IBinder_E@ is usually for a complex interface that has been Note that unlike other application components, calls on to the IBinder interface returned here may not happen on the main thread of the process. More information about the main thread can be found in", "history": "Added in API level 24", "FullName": "public IBinder onBind (Intent intent)"}, "onScreenCall(android.telecom.Call.Details)": {"Returns": [], "Parameters": [["@B_android#telecom#Call#Details_E@", "Call.Details: Information about a new call, see @B_android#telecom#Call#Details_E@. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a new incoming or outgoing call is added which is not in the user's contact list. A @B_android#telecom#CallScreeningService_E@ must indicate whether an incoming call is allowed or not by calling @B_android#telecom#CallScreeningService#respondToCall_E@. Your app can tell if a call is an incoming call by checking to see if @B_android#telecom#Call#Details#getCallDirection_E@ is @B_android#telecom#Call#Details#DIRECTION_INCOMING_E@. Note: The @B_android#telecom#Call#Details_E@ instance provided to a call screening service will only have the following properties set. The rest of the @B_android#telecom#Call#Details_E@ properties will be set to their default value or null. @B_android#telecom#Call#Details#getCallDirection_E@ @B_android#telecom#Call#Details#getConnectTimeMillis_E@ @B_android#telecom#Call#Details#getCreationTimeMillis_E@ @B_android#telecom#Call#Details#getHandle_E@ @B_android#telecom#Call#Details#getHandlePresentation_E@ Only calls where the @B_android#telecom#Call#Details#getHandle_E@ @B_android#net#Uri#getScheme_E@ is @B_android#telecom#PhoneAccount#SCHEME_TEL_E@ are passed for call screening. Further, only calls which are not in the user's contacts are passed for screening. For outgoing calls, no post-dial digits are passed.", "history": "Added in API level 24", "FullName": "public abstract void onScreenCall (Call.Details callDetails)"}, "respondToCall(android.telecom.Call.Details,android.telecom.CallScreeningService.CallResponse)": {"Returns": [], "Parameters": [["@B_android#telecom#Call#Details_E@", "Call.Details: The call to allow. Must be the same Call.Details which was provided to the CallScreeningService via onScreenCall(android.telecom.Call.Details). This value must never be null."], ["@B_android#telecom#CallScreeningService#CallResponse_E@", "CallScreeningService.CallResponse: The @B_android#telecom#CallScreeningService#CallResponse_E@ which contains information about how to respond to a call. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Responds to the given incoming call, either allowing it, silencing it or disallowing it. The @B_android#telecom#CallScreeningService_E@ calls this method to inform the system whether the call should be silently blocked or not. In the event that it should not be blocked, it may also be requested to ring silently. Calls to this method are ignored unless the @B_android#telecom#Call#Details#getCallDirection_E@ is @B_android#telecom#Call#Details#DIRECTION_INCOMING_E@.", "history": "Added in API level 24", "FullName": "public final void respondToCall (Call.Details callDetails, CallScreeningService.CallResponse response)"}}, "Inheritance": ["@B_android#content#Context_E@", "@B_android#content#ContextWrapper_E@", "@B_android#app#Service_E@"], "ClassName": "android.telecom.CallScreeningService", "ClassDesc": "This service can be implemented by the default dialer (see @B_android#telecom#TelecomManager#getDefaultDialerPackage_E@) or a third party app to allow or disallow incoming calls before they are shown to a user. A @B_android#telecom#CallScreeningService_E@ can also see outgoing calls for the purpose of providing caller ID services for those calls. Below is an example manifest registration for a CallScreeningService. A CallScreeningService performs two functions: @B_android#telecom#CallScreeningService_E@ API when there are new incoming and outgoing calls. The code snippet below illustrates how your app can request that it fills the call screening role."}