{"Functions": {"abort()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Aborts the attempt to cache the response. If an IOException is encountered while reading the response or writing to the cache, the current cache store operation will be abandoned.", "history": "Added in API level 1", "FullName": "public abstract void abort ()"}, "CacheRequest()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public CacheRequest ()"}, "getBody()": {"Returns": [["@B_java#io#OutputStream_E@", "an OutputStream to which the response body can be written"]], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs while writing the response body"]], "SeeAlso": [], "Permissions": [], "Description": "Returns an OutputStream to which the response body can be written.", "history": "Added in API level 1", "FullName": "public abstract OutputStream getBody ()"}}, "Inheritance": [], "ClassName": "java.net.CacheRequest", "ClassDesc": "Represents channels for storing resources in the ResponseCache. Instances of such a class provide an OutputStream object which is called by protocol handlers to store the resource data into the cache, and also an abort() method which allows a cache store operation to be interrupted and abandoned. If an IOException is encountered while reading the response or writing to the cache, the current cache store operation will be aborted."}