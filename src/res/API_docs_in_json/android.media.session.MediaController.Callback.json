{"Functions": {"onMetadataChanged(android.media.MediaMetadata)": {"Returns": [], "Parameters": [["@B_android#media#MediaMetadata_E@", "MediaMetadata: The current metadata for the session or null if none. This value may be null."]], "Throws": [], "SeeAlso": ["@B_android#media#MediaMetadata_E@"], "Permissions": [], "Description": "Override to handle changes to the current metadata.", "history": "Added in API level 21", "FullName": "public void onMetadataChanged (MediaMetadata metadata)"}, "onSessionEvent(java.lang.String,android.os.Bundle)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The event from the session. This value must never be null."], ["@B_android#os#Bundle_E@", "Bundle: Optional parameters for the event, may be null. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override to handle custom events sent by the session owner without a specified interface. Controllers should only handle these for sessions they own.", "history": "Added in API level 21", "FullName": "public void onSessionEvent (String event, Bundle extras)"}, "onQueueTitleChanged(java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: The title that should be displayed along with the play queue such as \"Now Playing\". May be null if there is no such title. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override to handle changes to the queue title.", "history": "Added in API level 21", "FullName": "public void onQueueTitleChanged (CharSequence title)"}, "MediaController.Callback()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 21", "FullName": "public MediaController.Callback ()"}, "onAudioInfoChanged(android.media.session.MediaController.PlaybackInfo)": {"Returns": [], "Parameters": [["@B_android#media#session#MediaController#PlaybackInfo_E@", "MediaController.PlaybackInfo: The current audio info for this session."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override to handle changes to the audio info.", "history": "Added in API level 21", "FullName": "public void onAudioInfoChanged (MediaController.PlaybackInfo info)"}, "onPlaybackStateChanged(android.media.session.PlaybackState)": {"Returns": [], "Parameters": [["@B_android#media#session#PlaybackState_E@", "PlaybackState: The new playback state of the session This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override to handle changes in playback state.", "history": "Added in API level 21", "FullName": "public void onPlaybackStateChanged (PlaybackState state)"}, "onExtrasChanged(android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: The extras that can include other information associated with the @B_android#media#session#MediaSession_E@. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override to handle changes to the @B_android#media#session#MediaSession_E@ extras.", "history": "Added in API level 21", "FullName": "public void onExtrasChanged (Bundle extras)"}, "onQueueChanged(java.util.List<android.media.session.MediaSession.QueueItem>)": {"Returns": [], "Parameters": [["@B_java#util#List_E@", "List: A list of items in the current play queue. It should include the currently playing item as well as previous and upcoming items if applicable. This value may be null."]], "Throws": [], "SeeAlso": ["@B_android#media#session#MediaSession#QueueItem_E@"], "Permissions": [], "Description": "Override to handle changes to items in the queue.", "history": "Added in API level 21", "FullName": "public void onQueueChanged (List<MediaSession.QueueItem> queue)"}, "onSessionDestroyed()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override to handle the session being destroyed. The session is no longer valid after this call and calls to it will be ignored.", "history": "Added in API level 21", "FullName": "public void onSessionDestroyed ()"}}, "Inheritance": [], "ClassName": "android.media.session.MediaController.Callback", "ClassDesc": "Callback for receiving updates from the session. A Callback can be registered using @B_android#media#session#MediaController#registerCallback_E@."}