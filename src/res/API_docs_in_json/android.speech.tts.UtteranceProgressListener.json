{"Functions": {"onError(java.lang.String,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The utterance ID of the utterance."], ["int", "int: one of the ERROR_* codes from @B_android#speech#tts#TextToSpeech_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when an error has occurred during processing. This can be called at any point in the synthesis process. Note that there might be calls to @B_android#speech#tts#UtteranceProgressListener#onStart_E@ for specified utteranceId but there will never be a call to both @B_android#speech#tts#UtteranceProgressListener#onDone_E@ and @B_android#speech#tts#UtteranceProgressListener#onError_E@ for the same utterance. The default implementation calls @B_android#speech#tts#UtteranceProgressListener#onError_E@.", "history": "Added in API level 21", "FullName": "public void onError (String utteranceId, int errorCode)"}, "onStop(java.lang.String,boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The utterance ID of the utterance."], ["boolean", "boolean: If true, then the utterance was interrupted while being synthesized and its output is incomplete. If false, then the utterance was flushed before the synthesis started."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when an utterance has been stopped while in progress or flushed from the synthesis queue. This can happen if a client calls @B_android#speech#tts#TextToSpeech#stop_E@ or uses @B_android#speech#tts#TextToSpeech#QUEUE_FLUSH_E@ as an argument with the @B_android#speech#tts#TextToSpeech#speak_E@ or @B_android#speech#tts#TextToSpeech#synthesizeToFile_E@ methods.", "history": "Added in API level 23", "FullName": "public void onStop (String utteranceId, boolean interrupted)"}, "onBeginSynthesis(java.lang.String, int, int, int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The utterance ID of the utterance."], ["int", "int: Sample rate in hertz of the generated audio."], ["int", "int: Audio format of the generated audio. Should be one of @B_android#media#AudioFormat#ENCODING_PCM_8BIT_E@, @B_android#media#AudioFormat#ENCODING_PCM_16BIT_E@ or @B_android#media#AudioFormat#ENCODING_PCM_FLOAT_E@."], ["int", "int: The number of channels."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the TTS engine begins to synthesize the audio for a request. It provides information about the format of the byte array for subsequent @B_android#speech#tts#UtteranceProgressListener#onAudioAvailable_E@ calls. This is called when the TTS engine starts synthesizing audio for the request. If an application wishes to know when the audio is about to start playing, {#onStart(String)} should be used instead.", "history": "added in API level 24", "FullName": "public void onBeginSynthesis (String utteranceId, int sampleRateInHz, int audioFormat, int channelCount)"}, "onAudioAvailable(java.lang.String, byte[])": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The utterance ID of the utterance."], ["byte[]", "byte: A chunk of audio; the format can be known by listening to @B_android#speech#tts#UtteranceProgressListener#onBeginSynthesis_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This is called when a chunk of audio is ready for consumption. The audio parameter is a copy of what will be synthesized to the speakers (when synthesis was initiated with a @B_android#speech#tts#TextToSpeech#speak_E@ call) or written to the file system (for @B_android#speech#tts#TextToSpeech#synthesizeToFile_E@). The audio bytes are delivered in one or more chunks; if @B_android#speech#tts#UtteranceProgressListener#onDone_E@ or @B_android#speech#tts#UtteranceProgressListener#onError_E@ is called all chunks have been received. The audio received here may not be played for some time depending on buffer sizes and the amount of items on the synthesis queue.", "history": "added in API level 24", "FullName": "public void onAudioAvailable (String utteranceId, byte[] audio)"}, "onStart(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The utterance ID of the utterance."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when an utterance \"starts\" as perceived by the caller. This will be soon before audio is played back in the case of a @B_android#speech#tts#TextToSpeech#speak_E@ or before the first bytes of a file are written to the file system in the case of @B_android#speech#tts#TextToSpeech#synthesizeToFile_E@.", "history": "Added in API level 15", "FullName": "public abstract void onStart (String utteranceId)"}, "onBeginSynthesis(java.lang.String,int,int,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The utterance ID of the utterance."], ["int", "int: Sample rate in hertz of the generated audio."], ["int", "int: Audio format of the generated audio. Should be one of @B_android#media#AudioFormat#ENCODING_PCM_8BIT_E@, @B_android#media#AudioFormat#ENCODING_PCM_16BIT_E@ or @B_android#media#AudioFormat#ENCODING_PCM_FLOAT_E@."], ["int", "int: The number of channels."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the TTS engine begins to synthesize the audio for a request. It provides information about the format of the byte array for subsequent @B_android#speech#tts#UtteranceProgressListener#onAudioAvailable_E@ calls. This is called when the TTS engine starts synthesizing audio for the request. If an application wishes to know when the audio is about to start playing, {#onStart(String)} should be used instead.", "history": "Added in API level 24", "FullName": "public void onBeginSynthesis (String utteranceId, int sampleRateInHz, int audioFormat, int channelCount)"}, "onRangeStart(java.lang.String,int,int,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: Unique id identifying the synthesis request."], ["int", "int: The start index of the range in the utterance text."], ["int", "int: The end index of the range (exclusive) in the utterance text."], ["int", "int: The position in frames in the audio of the request where this range is spoken."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This is called when the TTS service is about to speak the specified range of the utterance with the given utteranceId. This method is called when the audio is expected to start playing on the speaker. Note that this is different from @B_android#speech#tts#UtteranceProgressListener#onAudioAvailable_E@ which is called as soon as the audio is generated. This information can be used, for example, to highlight ranges of the text while it is spoken. Only called if the engine supplies timing information by calling @B_android#speech#tts#SynthesisCallback#rangeStart_E@.", "history": "Added in API level 26", "FullName": "public void onRangeStart (String utteranceId, int start, int end, int frame)"}, "UtteranceProgressListener()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 15", "FullName": "public UtteranceProgressListener ()"}, "onAudioAvailable(java.lang.String,byte[])": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The utterance ID of the utterance."], ["byte[]", "byte: A chunk of audio; the format can be known by listening to @B_android#speech#tts#UtteranceProgressListener#onBeginSynthesis_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This is called when a chunk of audio is ready for consumption. The audio parameter is a copy of what will be synthesized to the speakers (when synthesis was initiated with a @B_android#speech#tts#TextToSpeech#speak_E@ call) or written to the file system (for @B_android#speech#tts#TextToSpeech#synthesizeToFile_E@). The audio bytes are delivered in one or more chunks; if @B_android#speech#tts#UtteranceProgressListener#onDone_E@ or @B_android#speech#tts#UtteranceProgressListener#onError_E@ is called all chunks have been received. The audio received here may not be played for some time depending on buffer sizes and the amount of items on the synthesis queue.", "history": "Added in API level 24", "FullName": "public void onAudioAvailable (String utteranceId, byte[] audio)"}, "onRangeStart(java.lang.String, int, int, int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: Unique id identifying the synthesis request."], ["int", "int: The start index of the range in the utterance text."], ["int", "int: The end index of the range (exclusive) in the utterance text."], ["int", "int: The position in frames in the audio of the request where this range is spoken."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This is called when the TTS service is about to speak the specified range of the utterance with the given utteranceId. This method is called when the audio is expected to start playing on the speaker. Note that this is different from @B_android#speech#tts#UtteranceProgressListener#onAudioAvailable_E@ which is called as soon as the audio is generated. This information can be used, for example, to highlight ranges of the text while it is spoken. Only called if the engine supplies timing information by calling @B_android#speech#tts#SynthesisCallback#rangeStart_E@.", "history": "added in API level 26", "FullName": "public void onRangeStart (String utteranceId, int start, int end, int frame)"}, "onError(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The utterance ID of the utterance."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#speech#tts#UtteranceProgressListener#onError_E@ instead Called when an error has occurred during processing. This can be called at any point in the synthesis process. Note that there might be calls to @B_android#speech#tts#UtteranceProgressListener#onStart_E@ for specified utteranceId but there will never be a call to both @B_android#speech#tts#UtteranceProgressListener#onDone_E@ and @B_android#speech#tts#UtteranceProgressListener#onError_E@ for the same utterance.", "history": "Added in API level 15 Deprecated in API level 21", "FullName": "public abstract void onError (String utteranceId)"}, "onError(java.lang.String, int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The utterance ID of the utterance."], ["int", "int: one of the ERROR_* codes from @B_android#speech#tts#TextToSpeech_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when an error has occurred during processing. This can be called at any point in the synthesis process. Note that there might be calls to @B_android#speech#tts#UtteranceProgressListener#onStart_E@ for specified utteranceId but there will never be a call to both @B_android#speech#tts#UtteranceProgressListener#onDone_E@ and @B_android#speech#tts#UtteranceProgressListener#onError_E@ for the same utterance. The default implementation calls @B_android#speech#tts#UtteranceProgressListener#onError_E@.", "history": "added in API level 21", "FullName": "public void onError (String utteranceId, int errorCode)"}, "onStop(java.lang.String, boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The utterance ID of the utterance."], ["boolean", "boolean: If true, then the utterance was interrupted while being synthesized and its output is incomplete. If false, then the utterance was flushed before the synthesis started."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when an utterance has been stopped while in progress or flushed from the synthesis queue. This can happen if a client calls @B_android#speech#tts#TextToSpeech#stop_E@ or uses @B_android#speech#tts#TextToSpeech#QUEUE_FLUSH_E@ as an argument with the @B_android#speech#tts#TextToSpeech#speak_E@ or @B_android#speech#tts#TextToSpeech#synthesizeToFile_E@ methods.", "history": "added in API level 23", "FullName": "public void onStop (String utteranceId, boolean interrupted)"}, "onDone(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The utterance ID of the utterance."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when an utterance has successfully completed processing. All audio will have been played back by this point for audible output, and all output will have been written to disk for file synthesis requests. This request is guaranteed to be called after @B_android#speech#tts#UtteranceProgressListener#onStart_E@.", "history": "Added in API level 15", "FullName": "public abstract void onDone (String utteranceId)"}}, "Inheritance": [], "ClassName": "android.speech.tts.UtteranceProgressListener", "ClassDesc": "Listener for events relating to the progress of an utterance through the synthesis queue. Each utterance is associated with a call to @B_android#speech#tts#TextToSpeech#speak_E@ or @B_android#speech#tts#TextToSpeech#synthesizeToFile_E@ with an associated utterance identifier, as per @B_android#speech#tts#TextToSpeech#Engine#KEY_PARAM_UTTERANCE_ID_E@. The callbacks specified in this method can be called from multiple threads."}