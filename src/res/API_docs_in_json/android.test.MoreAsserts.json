{"Functions": {"assertContentsInAnyOrder(java.lang.String,java.lang.Iterable<?>,java.lang.Object...)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Iterable_E@", "Iterable no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that actual contains precisely the elements expected, but in any order.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertContentsInAnyOrder (String message, Iterable<?> actual, Object... expected)"}, "assertContentsInOrder(java.lang.String,java.lang.Iterable<?>,java.lang.Object...)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Iterable_E@", "Iterable no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that actual contains precisely the elements expected, and in the same order.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertContentsInOrder (String message, Iterable<?> actual, Object... expected)"}, "assertEquals(java.lang.String,int[],int[])": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["int[]", "int no parameter comment"], ["int[]", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that array actual is the same size and every element equals those in array expected. On failure, message indicates first specific element mismatch.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertEquals (String message, int[] expected, int[] actual)"}, "assertAssignableFrom(java.lang.Class<?>,java.lang.Class<?>)": {"Returns": [], "Parameters": [["@B_java#lang#Class_E@", "Class no parameter comment"], ["@B_java#lang#Class_E@", "Class no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that class expected is assignable from the class actual. This verifies expected is a parent class or a interface that actual implements.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertAssignableFrom (Class<?> expected, Class<?> actual)"}, "assertNotEmpty(java.lang.String,java.lang.Iterable<?>)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Iterable_E@", "Iterable no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that iterable is not empty.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertNotEmpty (String message, Iterable<?> iterable)"}, "assertEquals(byte[],byte[])": {"Returns": [], "Parameters": [["byte[]", "byte no parameter comment"], ["byte[]", "byte no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that array actual is the same size and every element equals those in array expected. On failure, message indicates specific element mismatch.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertEquals (byte[] expected, byte[] actual)"}, "assertNotMatchesRegex(java.lang.String,java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that expectedRegex does not exactly match actual, and fails with message if it does. Note that you can also use this for a literal string, by wrapping your expected string in @B_java#util#regex#Pattern#quote_E@.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertNotMatchesRegex (String message, String expectedRegex, String actual)"}, "assertEmpty(java.lang.String, java.util.Map<?, ?>)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#util#Map_E@", "Map no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that map is empty.", "history": "added in API level 1", "FullName": "public static void assertEmpty (String message, Map<?, ?> map)"}, "assertNotEqual(java.lang.Object,java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Variant of @B_android#test#MoreAsserts#assertNotEqual_E@ using a generic message.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertNotEqual (Object unexpected, Object actual)"}, "assertEquals(double[],double[])": {"Returns": [], "Parameters": [["double[]", "double no parameter comment"], ["double[]", "double no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that array actual is the same size and every element equals those in array expected. On failure, message indicates first specific element mismatch.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertEquals (double[] expected, double[] actual)"}, "assertContainsRegex(java.lang.String,java.lang.String)": {"Returns": [["@B_java#util#regex#MatchResult_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Variant of @B_android#test#MoreAsserts#assertContainsRegex_E@ using a generic message.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static MatchResult assertContainsRegex (String expectedRegex, String actual)"}, "assertEmpty(java.lang.String,java.util.Map<?,?>)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#util#Map_E@", "Map no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that map is empty.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertEmpty (String message, Map<?, ?> map)"}, "assertContentsInOrder(java.lang.Iterable<?>,java.lang.Object...)": {"Returns": [], "Parameters": [["@B_java#lang#Iterable_E@", "Iterable no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Variant of assertContentsInOrder(String, Iterable>, Object...) using a generic message.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertContentsInOrder (Iterable<?> actual, Object... expected)"}, "assertEquals(java.lang.String, int[], int[])": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["int[]", "int no parameter comment"], ["int[]", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that array actual is the same size and every element equals those in array expected. On failure, message indicates first specific element mismatch.", "history": "added in API level 1", "FullName": "public static void assertEquals (String message, int[] expected, int[] actual)"}, "assertEquals(java.lang.String, double[], double[])": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["double[]", "double no parameter comment"], ["double[]", "double no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that array actual is the same size and every element equals those in array expected. On failure, message indicates first specific element mismatch.", "history": "added in API level 1", "FullName": "public static void assertEquals (String message, double[] expected, double[] actual)"}, "assertNotMatchesRegex(java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Variant of @B_android#test#MoreAsserts#assertNotMatchesRegex_E@ using a generic message.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertNotMatchesRegex (String expectedRegex, String actual)"}, "assertEquals(java.lang.Object[],java.lang.Object[])": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that array actual is the same size and every element is the same as those in array expected. Note that this uses == instead of equals() to compare the objects. On failure, message indicates first specific element mismatch.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertEquals (Object[] expected, Object[] actual)"}, "assertEmpty(java.lang.Iterable<?>)": {"Returns": [], "Parameters": [["@B_java#lang#Iterable_E@", "Iterable no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Variant of @B_android#test#MoreAsserts#assertEmpty_E@ using a generic message.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertEmpty (Iterable<?> iterable)"}, "assertMatchesRegex(java.lang.String,java.lang.String,java.lang.String)": {"Returns": [["@B_java#util#regex#MatchResult_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that expectedRegex exactly matches actual and fails with message if it does not. The MatchResult is returned in case the test needs access to any captured groups. Note that you can also use this for a literal string, by wrapping your expected string in @B_java#util#regex#Pattern#quote_E@.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static MatchResult assertMatchesRegex (String message, String expectedRegex, String actual)"}, "assertEquals(byte[], byte[])": {"Returns": [], "Parameters": [["byte[]", "byte no parameter comment"], ["byte[]", "byte no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that array actual is the same size and every element equals those in array expected. On failure, message indicates specific element mismatch.", "history": "added in API level 1", "FullName": "public static void assertEquals (byte[] expected, byte[] actual)"}, "assertEquals(int[],int[])": {"Returns": [], "Parameters": [["int[]", "int no parameter comment"], ["int[]", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that array actual is the same size and every element equals those in array expected. On failure, message indicates first specific element mismatch.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertEquals (int[] expected, int[] actual)"}, "assertEquals(java.lang.String,java.lang.Object[],java.lang.Object[])": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that array actual is the same size and every element is the same as those in array expected. Note that this uses equals() instead of == to compare the objects. null will be considered equal to null (unlike SQL). On failure, message indicates first specific element mismatch.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertEquals (String message, Object[] expected, Object[] actual)"}, "assertEquals(java.lang.String,byte[],byte[])": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["byte[]", "byte no parameter comment"], ["byte[]", "byte no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that array actual is the same size and every element equals those in array expected. On failure, message indicates specific element mismatch.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertEquals (String message, byte[] expected, byte[] actual)"}, "assertNotEmpty(java.util.Map<?,?>)": {"Returns": [], "Parameters": [["@B_java#util#Map_E@", "Map no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Variant of @B_android#test#MoreAsserts#assertNotEmpty_E@ using a generic message.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertNotEmpty (Map<?, ?> map)"}, "assertNotEmpty(java.lang.String,java.util.Map<?,?>)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#util#Map_E@", "Map no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that map is not empty.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertNotEmpty (String message, Map<?, ?> map)"}, "assertEquals(java.util.Set<?>,java.util.Set<?>)": {"Returns": [], "Parameters": [["@B_java#util#Set_E@", "Set no parameter comment"], ["@B_java#util#Set_E@", "Set no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two sets contain the same elements.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertEquals (Set<?> expected, Set<?> actual)"}, "assertNotEmpty(java.lang.Iterable<?>)": {"Returns": [], "Parameters": [["@B_java#lang#Iterable_E@", "Iterable no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Variant of assertNotEmpty(String, Iterable>) using a generic message.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertNotEmpty (Iterable<?> iterable)"}, "assertEquals(int[], int[])": {"Returns": [], "Parameters": [["int[]", "int no parameter comment"], ["int[]", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that array actual is the same size and every element equals those in array expected. On failure, message indicates first specific element mismatch.", "history": "added in API level 1", "FullName": "public static void assertEquals (int[] expected, int[] actual)"}, "assertEmpty(java.util.Map<?, ?>)": {"Returns": [], "Parameters": [["@B_java#util#Map_E@", "Map no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Variant of @B_android#test#MoreAsserts#assertEmpty_E@ using a generic message.", "history": "added in API level 1", "FullName": "public static void assertEmpty (Map<?, ?> map)"}, "assertContainsRegex(java.lang.String,java.lang.String,java.lang.String)": {"Returns": [["@B_java#util#regex#MatchResult_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that expectedRegex matches any substring of actual and fails with message if it does not. The Matcher is returned in case the test needs access to any captured groups. Note that you can also use this for a literal string, by wrapping your expected string in @B_java#util#regex#Pattern#quote_E@.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static MatchResult assertContainsRegex (String message, String expectedRegex, String actual)"}, "assertAssignableFrom(java.lang.Class<?>,java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Class_E@", "Class no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that the class expected is assignable from the object actual. This verifies expected is a parent class or a interface that actual implements.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertAssignableFrom (Class<?> expected, Object actual)"}, "assertNotContainsRegex(java.lang.String,java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that expectedRegex does not match any substring of actual, and fails with message if it does. Note that you can also use this for a literal string, by wrapping your expected string in @B_java#util#regex#Pattern#quote_E@.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertNotContainsRegex (String message, String expectedRegex, String actual)"}, "assertEquals(java.lang.String,double[],double[])": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["double[]", "double no parameter comment"], ["double[]", "double no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that array actual is the same size and every element equals those in array expected. On failure, message indicates first specific element mismatch.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertEquals (String message, double[] expected, double[] actual)"}, "assertEquals(double[], double[])": {"Returns": [], "Parameters": [["double[]", "double no parameter comment"], ["double[]", "double no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that array actual is the same size and every element equals those in array expected. On failure, message indicates first specific element mismatch.", "history": "added in API level 1", "FullName": "public static void assertEquals (double[] expected, double[] actual)"}, "assertNotContainsRegex(java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Variant of @B_android#test#MoreAsserts#assertNotContainsRegex_E@ using a generic message.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertNotContainsRegex (String expectedRegex, String actual)"}, "assertEquals(java.lang.String,java.util.Set<?>,java.util.Set<?>)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#util#Set_E@", "Set no parameter comment"], ["@B_java#util#Set_E@", "Set no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that two sets contain the same elements.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertEquals (String message, Set<?> expected, Set<?> actual)"}, "assertEmpty(java.util.Map<?,?>)": {"Returns": [], "Parameters": [["@B_java#util#Map_E@", "Map no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Variant of @B_android#test#MoreAsserts#assertEmpty_E@ using a generic message.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertEmpty (Map<?, ?> map)"}, "checkEqualsAndHashCodeMethods(java.lang.Object,java.lang.Object,boolean)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Variant of checkEqualsAndHashCodeMethods(String,Object,Object,boolean...)} using a generic message.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void checkEqualsAndHashCodeMethods (Object lhs, Object rhs, boolean expectedResult)"}, "checkEqualsAndHashCodeMethods(java.lang.String,java.lang.Object,java.lang.Object,boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Object_E@", "Object: An Object for which equals() and hashCode() are to be tested."], ["@B_java#lang#Object_E@", "Object: As lhs."], ["boolean", "boolean: True if the objects should compare equal, false if not."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Utility for testing equals() and hashCode() results at once. Tests that lhs.equals(rhs) matches expectedResult, as well as rhs.equals(lhs). Also tests that hashCode() return values are equal if expectedResult is true. (hashCode() is not tested if expectedResult is false, as unequal objects can have equal hashCodes.)", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void checkEqualsAndHashCodeMethods (String message, Object lhs, Object rhs, boolean expectedResult)"}, "assertMatchesRegex(java.lang.String,java.lang.String)": {"Returns": [["@B_java#util#regex#MatchResult_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Variant of @B_android#test#MoreAsserts#assertMatchesRegex_E@ using a generic message.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static MatchResult assertMatchesRegex (String expectedRegex, String actual)"}, "assertNotEqual(java.lang.Object, java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Variant of @B_android#test#MoreAsserts#assertNotEqual_E@ using a generic message.", "history": "added in API level 1", "FullName": "public static void assertNotEqual (Object unexpected, Object actual)"}, "assertContentsInAnyOrder(java.lang.Iterable<?>,java.lang.Object...)": {"Returns": [], "Parameters": [["@B_java#lang#Iterable_E@", "Iterable no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Variant of assertContentsInAnyOrder(String, Iterable>, Object...) using a generic message.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertContentsInAnyOrder (Iterable<?> actual, Object... expected)"}, "assertNotEmpty(java.util.Map<?, ?>)": {"Returns": [], "Parameters": [["@B_java#util#Map_E@", "Map no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Variant of @B_android#test#MoreAsserts#assertNotEmpty_E@ using a generic message.", "history": "added in API level 1", "FullName": "public static void assertNotEmpty (Map<?, ?> map)"}, "assertEquals(java.lang.String, byte[], byte[])": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["byte[]", "byte no parameter comment"], ["byte[]", "byte no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that array actual is the same size and every element equals those in array expected. On failure, message indicates specific element mismatch.", "history": "added in API level 1", "FullName": "public static void assertEquals (String message, byte[] expected, byte[] actual)"}, "assertEmpty(java.lang.String,java.lang.Iterable<?>)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Iterable_E@", "Iterable no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that iterable is empty.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertEmpty (String message, Iterable<?> iterable)"}, "assertNotEqual(java.lang.String,java.lang.Object,java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asserts that actual is not equal unexpected, according to both == and @B_java#lang#Object#equals_E@.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public static void assertNotEqual (String message, Object unexpected, Object actual)"}}, "Inheritance": [], "ClassName": "android.test.MoreAsserts", "ClassDesc": "Use Contains additional assertion methods not found in JUnit."}