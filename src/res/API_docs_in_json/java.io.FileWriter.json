{"Functions": {"FileWriter(java.io.File)": {"Returns": [], "Parameters": [["@B_java#io#File_E@", "File: a File object to write to."]], "Throws": [["@B_java#io#IOException_E@", "if the file exists but is a directory rather than a regular file, does not exist but cannot be created, or cannot be opened for any other reason"]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a FileWriter object given a File object.", "history": "Added in API level 1", "FullName": "public FileWriter (File file)"}, "FileWriter(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: String The system-dependent filename."]], "Throws": [["@B_java#io#IOException_E@", "if the named file exists but is a directory rather than a regular file, does not exist but cannot be created, or cannot be opened for any other reason"]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a FileWriter object given a file name.", "history": "Added in API level 1", "FullName": "public FileWriter (String fileName)"}, "FileWriter(java.io.File, boolean)": {"Returns": [], "Parameters": [["@B_java#io#File_E@", "File: a File object to write to"], ["boolean", "boolean: if true, then bytes will be written to the end of the file rather than the beginning"]], "Throws": [["@B_java#io#IOException_E@", "if the file exists but is a directory rather than a regular file, does not exist but cannot be created, or cannot be opened for any other reason"]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a FileWriter object given a File object. If the second argument is true, then bytes will be written to the end of the file rather than the beginning.", "history": "added in API level 1", "FullName": "public FileWriter (File file, boolean append)"}, "FileWriter(java.lang.String, boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: String The system-dependent filename."], ["boolean", "boolean: boolean if true, then data will be written to the end of the file rather than the beginning."]], "Throws": [["@B_java#io#IOException_E@", "if the named file exists but is a directory rather than a regular file, does not exist but cannot be created, or cannot be opened for any other reason"]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a FileWriter object given a file name with a boolean indicating whether or not to append the data written.", "history": "added in API level 1", "FullName": "public FileWriter (String fileName, boolean append)"}, "FileWriter(java.lang.String,boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: String The system-dependent filename."], ["boolean", "boolean: boolean if true, then data will be written to the end of the file rather than the beginning."]], "Throws": [["@B_java#io#IOException_E@", "if the named file exists but is a directory rather than a regular file, does not exist but cannot be created, or cannot be opened for any other reason"]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a FileWriter object given a file name with a boolean indicating whether or not to append the data written.", "history": "Added in API level 1", "FullName": "public FileWriter (String fileName, boolean append)"}, "FileWriter(java.io.File,boolean)": {"Returns": [], "Parameters": [["@B_java#io#File_E@", "File: a File object to write to"], ["boolean", "boolean: if true, then bytes will be written to the end of the file rather than the beginning"]], "Throws": [["@B_java#io#IOException_E@", "if the file exists but is a directory rather than a regular file, does not exist but cannot be created, or cannot be opened for any other reason"]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a FileWriter object given a File object. If the second argument is true, then bytes will be written to the end of the file rather than the beginning.", "history": "Added in API level 1", "FullName": "public FileWriter (File file, boolean append)"}, "FileWriter(java.io.FileDescriptor)": {"Returns": [], "Parameters": [["@B_java#io#FileDescriptor_E@", "FileDescriptor: FileDescriptor object to write to."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a FileWriter object associated with a file descriptor.", "history": "Added in API level 1", "FullName": "public FileWriter (FileDescriptor fd)"}}, "Inheritance": ["@B_java#io#Writer_E@", "@B_java#io#OutputStreamWriter_E@"], "ClassName": "java.io.FileWriter", "ClassDesc": "Convenience class for writing character files. The constructors of this class assume that the default character encoding and the default byte-buffer size are acceptable. To specify these values yourself, construct an OutputStreamWriter on a FileOutputStream. Whether or not a file is available or may be created depends upon the underlying platform. Some platforms, in particular, allow a file to be opened for writing by only one FileWriter is meant for writing streams of characters. For writing streams of raw bytes, consider using a FileOutputStream."}