{"Functions": {"FileReader(java.io.File)": {"Returns": [], "Parameters": [["@B_java#io#File_E@", "File: the File to read from"]], "Throws": [["@B_java#io#FileNotFoundException_E@", "if the file does not exist, is a directory rather than a regular file, or for some other reason cannot be opened for reading."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new", "history": "Added in API level 1", "FullName": "public FileReader (File file)"}, "FileReader(java.io.FileDescriptor)": {"Returns": [], "Parameters": [["@B_java#io#FileDescriptor_E@", "FileDescriptor: the FileDescriptor to read from"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new", "history": "Added in API level 1", "FullName": "public FileReader (FileDescriptor fd)"}, "FileReader(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the name of the file to read from"]], "Throws": [["@B_java#io#FileNotFoundException_E@", "if the named file does not exist, is a directory rather than a regular file, or for some other reason cannot be opened for reading."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new", "history": "Added in API level 1", "FullName": "public FileReader (String fileName)"}}, "Inheritance": ["@B_java#io#Reader_E@", "@B_java#io#InputStreamReader_E@"], "ClassName": "java.io.FileReader", "ClassDesc": "Convenience class for reading character files. The constructors of this class assume that the default character encoding and the default byte-buffer size are appropriate. To specify these values yourself, construct an InputStreamReader on a FileInputStream. FileReader is meant for reading streams of characters. For reading streams of raw bytes, consider using a FileInputStream."}