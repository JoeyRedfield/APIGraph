{"Functions": {"valueOf(java.lang.String)": {"Returns": [["@B_android#icu#text#MessagePattern#ApostropheMode_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 24", "FullName": "public static MessagePattern.ApostropheMode valueOf (String name)"}, "values()": {"Returns": [["@B_android#icu#text#MessagePattern#ApostropheMode_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 24", "FullName": "public static final ApostropheMode[] values ()"}}, "Inheritance": ["@B_java#lang#Enum_E@"], "ClassName": "android.icu.text.MessagePattern.ApostropheMode", "ClassDesc": "Mode for when an apostrophe starts quoted literal text for MessageFormat output. The default is DOUBLE_OPTIONAL unless overridden via ICUConfig (/com/ibm/icu/ICUConfig.properties). A pair of adjacent apostrophes always results in a single apostrophe in the output, even when the pair is between two single, text-quoting apostrophes. The following table shows examples of desired MessageFormat.format() output with the pattern strings that yield that output."}