{"Functions": {"addPlayersToInvite(java.lang.String...)": {"Returns": [["", "The builder instance."]], "Parameters": [["String...", "One or more player IDs to invite to the room."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Add one or more player IDs to invite to the room. This should be set only when calling @B_com#google#android#gms#games#multiplayer#realtime#RealTimeMultiplayer#create_E@", "history": "", "FullName": "public RoomConfig.Builder addPlayersToInvite (String... playerIds)"}, "setSocketCommunicationEnabled(boolean)": {"Returns": [["", "The builder instance."]], "Parameters": [["boolean", "Whether to enable the use of sockets for sending/receiving data."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether to enable sockets for sending and receiving data. The socket for each participant can be obtained using @B_com#google#android#gms#games#multiplayer#realtime#RealTimeMultiplayer#getSocketForParticipant_E@. If false the @B_com#google#android#gms#games#multiplayer#realtime#RealTimeMultiplayer#sendUnreliableMessage_E@ API should be used to send messages. Note that for reliable messages, the @B_com#google#android#gms#games#multiplayer#realtime#RealTimeMultiplayer#sendReliableMessage_E@ API should still be used. Reliable messages will be delivered via the @B_com#google#android#gms#games#multiplayer#realtime#RealTimeMessageReceivedListener_E@ registered with @B_com#google#android#gms#games#multiplayer#realtime#RoomConfig#Builder#setMessageReceivedListener_E@.", "history": "", "FullName": "public RoomConfig.Builder setSocketCommunicationEnabled (boolean enableSockets)"}, "setVariant(int)": {"Returns": [["", "The builder instance."]], "Parameters": [["int", "The variant for the match."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the variant for the room when calling @B_com#google#android#gms#games#multiplayer#realtime#RealTimeMultiplayer#create_E@. This is an optional, developer-controlled parameter describing the type of game to play, and is used for auto-matching criteria. Must be either a positive integer or @B_com#google#android#gms#games#multiplayer#realtime#Room#ROOM_VARIANT_DEFAULT_E@ (the default) if not desired. Note that variants must match exactly. Thus, if you do not specify a variant, only other rooms created with @B_com#google#android#gms#games#multiplayer#realtime#Room#ROOM_VARIANT_DEFAULT_E@ will be considered potential auto-matches.", "history": "", "FullName": "public RoomConfig.Builder setVariant (int variant)"}, "setRoomStatusUpdateListener(com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#games#multiplayer#realtime#RoomStatusUpdateListener_E@", "The listener that is called to notify the client when the status of the room has changed. The listener is called on the main thread."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the listener for room status changes.", "history": "", "FullName": "public RoomConfig.Builder setRoomStatusUpdateListener (RoomStatusUpdateListener listener)"}, "addPlayersToInvite(java.util.ArrayList<java.lang.String>)": {"Returns": [["", "The builder instance."]], "Parameters": [["ArrayList", "One or more player IDs to invite to the room."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Add a list of player IDs to invite to the room. This should be set only when calling @B_com#google#android#gms#games#multiplayer#realtime#RealTimeMultiplayer#create_E@", "history": "", "FullName": "public RoomConfig.Builder addPlayersToInvite (ArrayList<String> playerIds)"}, "setMessageReceivedListener(com.google.android.gms.games.multiplayer.realtime.RealTimeMessageReceivedListener)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#games#multiplayer#realtime#RealTimeMessageReceivedListener_E@", "The message received listener that is called to notify the client when it receives a message in a room. The listener is called on the main thread."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the listener for message received from a connected peer in a room. If not using socket-based communication, a non-null listener must be provided here before constructing the @B_com#google#android#gms#games#multiplayer#realtime#RoomConfig_E@ object.", "history": "", "FullName": "public RoomConfig.Builder setMessageReceivedListener (RealTimeMessageReceivedListener listener)"}, "build()": {"Returns": [["", "The built @B_com#google#android#gms#games#multiplayer#realtime#RoomConfig_E@ instance."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Builds a new @B_com#google#android#gms#games#multiplayer#realtime#RoomConfig_E@ object.", "history": "", "FullName": "public RoomConfig build ()"}, "setInvitationIdToAccept(java.lang.String)": {"Returns": [], "Parameters": [["String", "The ID of the invitation to accept."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the ID of the invitation to accept. This is required and should be set only when calling @B_com#google#android#gms#games#multiplayer#realtime#RealTimeMultiplayer#join_E@.", "history": "", "FullName": "public RoomConfig.Builder setInvitationIdToAccept (String invitationId)"}, "setAutoMatchCriteria(android.os.Bundle)": {"Returns": [["", "The builder instance."]], "Parameters": [["Bundle", "The criteria for auto-matching one or more players for the match. If null, the match is created with the invited players only."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the auto-match criteria for the room. See @B_com#google#android#gms#games#multiplayer#realtime#RoomConfig#createAutoMatchCriteria_E@.", "history": "", "FullName": "public RoomConfig.Builder setAutoMatchCriteria (Bundle autoMatchCriteria)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.games.multiplayer.realtime.RoomConfig.Builder", "ClassDesc": "Builder class for @B_com#google#android#gms#games#multiplayer#realtime#RoomConfig_E@."}