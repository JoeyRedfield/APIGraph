{"Functions": {"execute(java.lang.Object...)": {"Returns": [["@B_java#lang#Object_E@", "Outputs of the script group as an array of objects, in the order as futures are passed to @B_android#renderscript#ScriptGroup#Builder2#create_E@."]], "Parameters": [["@B_java#lang#Object_E@", "Object: Values for inputs to the script group, in the order as the inputs are added via @B_android#renderscript#ScriptGroup#Builder2#addInput_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Executes a script group", "history": "Added in API level 23", "FullName": "public Object[] execute (Object... inputs)"}, "setOutput(android.renderscript.Script.KernelID,android.renderscript.Allocation)": {"Returns": [], "Parameters": [["@B_android#renderscript#Script#KernelID_E@", "Script.KernelID: The ID of the kernel where the allocation should be connected."], ["@B_android#renderscript#Allocation_E@", "Allocation: The allocation to connect."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use return value of @B_android#renderscript#ScriptGroup#execute_E@ instead. Sets an output of the ScriptGroup. This specifies an Allocation to be used for the kernels that require an output Allocation visible after the ScriptGroup is executed.", "history": "Added in API level 17 Deprecated in API level 23", "FullName": "public void setOutput (Script.KernelID s, Allocation a)"}, "destroy()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Destroy this ScriptGroup and all Closures in it", "history": "Added in API level 17", "FullName": "public void destroy ()"}, "setInput(android.renderscript.Script.KernelID,android.renderscript.Allocation)": {"Returns": [], "Parameters": [["@B_android#renderscript#Script#KernelID_E@", "Script.KernelID: The ID of the kernel where the allocation should be connected."], ["@B_android#renderscript#Allocation_E@", "Allocation: The allocation to connect."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set arguments to @B_android#renderscript#ScriptGroup#execute_E@ instead. Sets an input of the ScriptGroup. This specifies an Allocation to be used for kernels that require an input Allocation provided from outside of the ScriptGroup.", "history": "Added in API level 17 Deprecated in API level 23", "FullName": "public void setInput (Script.KernelID s, Allocation a)"}, "execute()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#renderscript#ScriptGroup#execute_E@ instead. Execute the ScriptGroup. This will run all the kernels in the ScriptGroup. No internal connection results will be visible after execution of the ScriptGroup.", "history": "Added in API level 17 Deprecated in API level 23", "FullName": "public void execute ()"}}, "Inheritance": ["@B_android#renderscript#BaseObj_E@"], "ClassName": "android.renderscript.ScriptGroup", "ClassDesc": "A group of kernels that are executed together with one execution call as if they were a single kernel In addition to kernels, a script group may contain invocable functions as well. A script group may take inputs and generate outputs, which are consumed and produced by its member kernels. Inside a script group, outputs from one kernel can be passed to another kernel as inputs. The API disallows cyclic dependencies among kernels in a script group, effectively making it a directed acyclic graph (DAG) of kernels. Grouping kernels together allows for more efficient execution. For example, runtime and compiler optimization can be applied to reduce computation and communication overhead, and to make better use of the CPU and the GPU. * @apiSince 17"}