{"Functions": {"getSystemId()": {"Returns": [["int", "CA system id of the CAS used to scramble the track."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the system id of the conditional access system.", "history": "Added in API level 26", "FullName": "public int getSystemId ()"}, "getPrivateData()": {"Returns": [["byte[]", "a byte array containing the private data. A null return value indicates that the private data is unavailable. An empty array, on the other hand, indicates that the private data is empty (zero in length)."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#media#MediaExtractor#setMediaCas_E@"], "Permissions": [], "Description": "Retrieves the private data in the CA_Descriptor associated with a track. Some CAS systems may need this to initialize the CAS plugin object. This private data can only be retrieved before a valid @B_android#media#MediaCas_E@ object is set on the extractor.", "history": "Added in API level 29", "FullName": "public byte[] getPrivateData ()"}, "getSession()": {"Returns": [["@B_android#media#MediaCas#Session_E@", "a @B_android#media#MediaCas#Session_E@ object associated with a track."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#media#MediaExtractor#setMediaCas_E@", "@B_android#media#MediaDescrambler#setMediaCasSession_E@"], "Permissions": [], "Description": "Retrieves the @B_android#media#MediaCas#Session_E@ associated with a track. The session is needed to initialize a descrambler in order to decode the scrambled track. The session object can only be retrieved after a valid @B_android#media#MediaCas_E@ object is set on the extractor.", "history": "Added in API level 26", "FullName": "public MediaCas.Session getSession ()"}}, "Inheritance": [], "ClassName": "android.media.MediaExtractor.CasInfo", "ClassDesc": "Describes the conditional access system used to scramble a track."}