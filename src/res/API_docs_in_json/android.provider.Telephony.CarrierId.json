{"Functions": {"getSpecificCarrierIdUriForSubscriptionId(int)": {"Returns": [["@B_android#net#Uri_E@", "the Uri used to observe specific carrier identity changes This value will never be null."]], "Parameters": [["int", "int: the subscriptionId to receive updates on"]], "Throws": [], "SeeAlso": ["@B_android#telephony#TelephonyManager_E@"], "Permissions": [], "Description": "Generates a content @B_android#net#Uri_E@ used to receive updates on specific carrier identity change on the given subscriptionId returned by @B_android#telephony#TelephonyManager#getSimSpecificCarrierId_E@.", "history": "Added in API level 29", "FullName": "public static Uri getSpecificCarrierIdUriForSubscriptionId (int subscriptionId)"}, "getUriForSubscriptionId(int)": {"Returns": [["@B_android#net#Uri_E@", "the Uri used to observe carrier identity changes"]], "Parameters": [["int", "int: the subscriptionId to receive updates on"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Generates a content @B_android#net#Uri_E@ used to receive updates on carrier identity change on the given subscriptionId Use this @B_android#net#Uri_E@ with a @B_android#database#ContentObserver_E@ to be notified of changes to the carrier identity @B_android#telephony#TelephonyManager#getSimCarrierId_E@ while your app is running. You can also use a @B_android#app#job#JobService_E@ to ensure your app is notified of changes to the @B_android#net#Uri_E@ even when it is not running. Note, however, that using a @B_android#app#job#JobService_E@ does not guarantee timely delivery of updates to the @B_android#net#Uri_E@.", "history": "Added in API level 28", "FullName": "public static Uri getUriForSubscriptionId (int subscriptionId)"}}, "Inheritance": [], "ClassName": "android.provider.Telephony.CarrierId", "ClassDesc": "Contains carrier identification information for the current subscriptions."}