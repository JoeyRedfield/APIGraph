{"Functions": {"seekTo(long)": {"Returns": [], "Parameters": [["long", "long: New position in milliseconds."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Seek to new position.", "history": "added in version 26.0.0-beta1", "FullName": "void seekTo (long positionInMs)"}, "pause()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Pauses the media player.", "history": "added in version 26.0.0-beta1", "FullName": "void pause ()"}, "setProgressUpdatingEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: True to enable progress updating, false otherwise."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Implement this method to enable or disable progress updating.", "history": "added in version 26.0.0-beta1", "FullName": "void setProgressUpdatingEnabled (boolean enable)"}, "isPlaying()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if media is currently playing.", "history": "added in version 26.0.0-beta1", "FullName": "boolean isPlaying ()"}, "getBufferedPosition()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current buffered position of the media item in milliseconds.", "history": "added in version 26.0.0-beta1", "FullName": "long getBufferedPosition ()"}, "getDuration()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the duration of the media item in milliseconds.", "history": "added in version 26.0.0-beta1", "FullName": "long getDuration ()"}, "getCurrentPosition()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current position of the media item in milliseconds.", "history": "added in version 26.0.0-beta1", "FullName": "long getCurrentPosition ()"}, "getCallback()": {"Returns": [["@B_android#support#v17#leanback#media#PlayerAdapter#Callback_E@", "Client for event of PlayerAdapter."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets callback for event of PlayerAdapter.", "history": "added in version 26.0.0-beta1", "FullName": "PlayerAdapter.Callback getCallback ()"}, "PlayerAdapter()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 26.0.0-beta1", "FullName": "PlayerAdapter ()"}, "onDetachedFromHost()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method is called when current associated @B_android#support#v17#leanback#media#PlaybackGlueHost_E@ is attached to a different @B_android#support#v17#leanback#media#PlaybackGlue_E@ or @B_android#support#v17#leanback#media#PlaybackGlueHost_E@ is destroyed. Subclass may override. A typical implementation will release resources (e.g. MediaPlayer or connection to playback service) in this method.", "history": "added in version 26.0.0-beta1", "FullName": "void onDetachedFromHost ()"}, "isPrepared()": {"Returns": [["boolean", "True if media is ready for playback, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 26.0.0-beta1", "FullName": "boolean isPrepared ()"}, "play()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Starts the media player.", "history": "added in version 26.0.0-beta1", "FullName": "void play ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v17.leanback.media.PlayerAdapter", "ClassDesc": "Base class that wraps underlying media player. The class is used by PlaybackGlue, for example @B_android#support#v17#leanback#media#PlaybackTransportControlGlue_E@ is bound to a PlayerAdapter. This class is intended to be subclassed, @B_android#support#v17#leanback#media#MediaPlayerAdapter_E@ is a concrete subclass using https:##developer#android#com@B_android#media#MediaPlayer_E@."}