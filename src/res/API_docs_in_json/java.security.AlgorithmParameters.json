{"Functions": {"init(byte[])": {"Returns": [], "Parameters": [["byte[]", "byte: the encoded parameters."]], "Throws": [["@B_java#io#IOException_E@", "on decoding errors, or if this parameter object has already been initialized."]], "SeeAlso": [], "Permissions": [], "Description": "Imports the specified parameters and decodes them according to the primary decoding format for parameters. The primary decoding format for parameters is ASN.1, if an ASN.1 specification for this type of parameters exists.", "history": "Added in API level 1", "FullName": "public final void init (byte[] params)"}, "getEncoded(java.lang.String)": {"Returns": [["byte[]", "the parameters encoded using the specified encoding scheme."]], "Parameters": [["@B_java#lang#String_E@", "String: the name of the encoding format."]], "Throws": [["@B_java#io#IOException_E@", "on encoding errors, or if this parameter object has not been initialized."]], "SeeAlso": [], "Permissions": [], "Description": "Returns the parameters encoded in the specified scheme. If format is null, the primary encoding format for parameters is used. The primary encoding format is ASN.1, if an ASN.1 specification for these parameters exists.", "history": "Added in API level 1", "FullName": "public final byte[] getEncoded (String format)"}, "getAlgorithm()": {"Returns": [["@B_java#lang#String_E@", "the algorithm name."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the name of the algorithm associated with this parameter object.", "history": "Added in API level 1", "FullName": "public final String getAlgorithm ()"}, "init(byte[], java.lang.String)": {"Returns": [], "Parameters": [["byte[]", "byte: the encoded parameters."], ["@B_java#lang#String_E@", "String: the name of the decoding scheme."]], "Throws": [["@B_java#io#IOException_E@", "on decoding errors, or if this parameter object has already been initialized."]], "SeeAlso": [], "Permissions": [], "Description": "Imports the parameters from params and decodes them according to the specified decoding scheme. If format is null, the primary decoding format for parameters is used. The primary decoding format is ASN.1, if an ASN.1 specification for these parameters exists.", "history": "added in API level 1", "FullName": "public final void init (byte[] params, String format)"}, "getInstance(java.lang.String,java.security.Provider)": {"Returns": [["@B_java#security#AlgorithmParameters_E@", "the new parameter object."]], "Parameters": [["@B_java#lang#String_E@", "String: the name of the algorithm requested. See the AlgorithmParameters section in the Java Cryptography Architecture Standard Algorithm Name Documentation for information about standard algorithm names."], ["@B_java#security#Provider_E@", "Provider: the name of the provider."]], "Throws": [["@B_java#security#NoSuchAlgorithmException_E@", "if an AlgorithmParameterGeneratorSpi implementation for the specified algorithm is not available from the specified Provider object."], ["@B_java#lang#IllegalArgumentException_E@", "if the provider is null."]], "SeeAlso": ["@B_java#security#Provider_E@"], "Permissions": [], "Description": "Returns a parameter object for the specified algorithm. A new AlgorithmParameters object encapsulating the AlgorithmParametersSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list. The returned parameter object must be initialized via a call to init, using an appropriate parameter specification or parameter encoding.", "history": "Added in API level 1", "FullName": "public static AlgorithmParameters getInstance (String algorithm, Provider provider)"}, "getProvider()": {"Returns": [["@B_java#security#Provider_E@", "the provider of this parameter object"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the provider of this parameter object.", "history": "Added in API level 1", "FullName": "public final Provider getProvider ()"}, "getInstance(java.lang.String, java.lang.String)": {"Returns": [["@B_java#security#AlgorithmParameters_E@", "the new parameter object."]], "Parameters": [["@B_java#lang#String_E@", "String: the name of the algorithm requested. See the AlgorithmParameters section in the Java Cryptography Architecture Standard Algorithm Name Documentation for information about standard algorithm names."], ["@B_java#lang#String_E@", "String: the name of the provider."]], "Throws": [["@B_java#security#NoSuchAlgorithmException_E@", "if an AlgorithmParametersSpi implementation for the specified algorithm is not available from the specified provider."], ["@B_java#security#NoSuchProviderException_E@", "if the specified provider is not registered in the security provider list."], ["@B_java#lang#IllegalArgumentException_E@", "if the provider name is null or empty."]], "SeeAlso": ["@B_java#security#Provider_E@"], "Permissions": [], "Description": "Returns a parameter object for the specified algorithm. A new AlgorithmParameters object encapsulating the AlgorithmParametersSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list. Note that the list of registered providers may be retrieved via the @B_java#security#Security#getProviders_E@ method. The returned parameter object must be initialized via a call to init, using an appropriate parameter specification or parameter encoding.", "history": "added in API level 1", "FullName": "public static AlgorithmParameters getInstance (String algorithm, String provider)"}, "getEncoded()": {"Returns": [["byte[]", "the parameters encoded using their primary encoding format."]], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", "on encoding errors, or if this parameter object has not been initialized."]], "SeeAlso": [], "Permissions": [], "Description": "Returns the parameters in their primary encoding format. The primary encoding format for parameters is ASN.1, if an ASN.1 specification for this type of parameters exists.", "history": "Added in API level 1", "FullName": "public final byte[] getEncoded ()"}, "getInstance(java.lang.String)": {"Returns": [["@B_java#security#AlgorithmParameters_E@", "the new parameter object."]], "Parameters": [["@B_java#lang#String_E@", "String: the name of the algorithm requested. See the AlgorithmParameters section in the Java Cryptography Architecture Standard Algorithm Name Documentation for information about standard algorithm names."]], "Throws": [["@B_java#security#NoSuchAlgorithmException_E@", "if no Provider supports an AlgorithmParametersSpi implementation for the specified algorithm."]], "SeeAlso": ["@B_java#security#Provider_E@"], "Permissions": [], "Description": "Returns a parameter object for the specified algorithm. This method traverses the list of registered security Providers, starting with the most preferred Provider. A new AlgorithmParameters object encapsulating the AlgorithmParametersSpi implementation from the first Provider that supports the specified algorithm is returned. Note that the list of registered providers may be retrieved via the @B_java#security#Security#getProviders_E@ method. The returned parameter object must be initialized via a call to init, using an appropriate parameter specification or parameter encoding.", "history": "Added in API level 1", "FullName": "public static AlgorithmParameters getInstance (String algorithm)"}, "getParameterSpec(java.lang.Class<T>)": {"Returns": [["T", "the parameter specification."]], "Parameters": [["@B_java#lang#Class_E@", "Class: the specification class in which the parameters should be returned."]], "Throws": [["@B_java#security#spec#InvalidParameterSpecException_E@", "if the requested parameter specification is inappropriate for this parameter object, or if this parameter object has not been initialized."]], "SeeAlso": [], "Permissions": [], "Description": "Returns a (transparent) specification of this parameter object. paramSpec identifies the specification class in which the parameters should be returned. It could, for example, be DSAParameterSpec.class, to indicate that the parameters should be returned in an instance of the DSAParameterSpec class.", "history": "Added in API level 1", "FullName": "public final T getParameterSpec (Class<T> paramSpec)"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a formatted string describing the parameters, or null if this parameter object has not been initialized."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a formatted string describing the parameters.", "history": "Added in API level 1", "FullName": "public final String toString ()"}, "AlgorithmParameters(java.security.AlgorithmParametersSpi,java.security.Provider,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#security#AlgorithmParametersSpi_E@", "AlgorithmParametersSpi: the delegate"], ["@B_java#security#Provider_E@", "Provider: the provider"], ["@B_java#lang#String_E@", "String: the algorithm"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an AlgorithmParameters object.", "history": "Added in API level 1", "FullName": "protected AlgorithmParameters (AlgorithmParametersSpi paramSpi, Provider provider, String algorithm)"}, "getInstance(java.lang.String,java.lang.String)": {"Returns": [["@B_java#security#AlgorithmParameters_E@", "the new parameter object."]], "Parameters": [["@B_java#lang#String_E@", "String: the name of the algorithm requested. See the AlgorithmParameters section in the Java Cryptography Architecture Standard Algorithm Name Documentation for information about standard algorithm names."], ["@B_java#lang#String_E@", "String: the name of the provider."]], "Throws": [["@B_java#security#NoSuchAlgorithmException_E@", "if an AlgorithmParametersSpi implementation for the specified algorithm is not available from the specified provider."], ["@B_java#security#NoSuchProviderException_E@", "if the specified provider is not registered in the security provider list."], ["@B_java#lang#IllegalArgumentException_E@", "if the provider name is null or empty."]], "SeeAlso": ["@B_java#security#Provider_E@"], "Permissions": [], "Description": "Returns a parameter object for the specified algorithm. A new AlgorithmParameters object encapsulating the AlgorithmParametersSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list. Note that the list of registered providers may be retrieved via the @B_java#security#Security#getProviders_E@ method. The returned parameter object must be initialized via a call to init, using an appropriate parameter specification or parameter encoding.", "history": "Added in API level 1", "FullName": "public static AlgorithmParameters getInstance (String algorithm, String provider)"}, "init(java.security.spec.AlgorithmParameterSpec)": {"Returns": [], "Parameters": [["@B_java#security#spec#AlgorithmParameterSpec_E@", "AlgorithmParameterSpec: the parameter specification."]], "Throws": [["@B_java#security#spec#InvalidParameterSpecException_E@", "if the given parameter specification is inappropriate for the initialization of this parameter object, or if this parameter object has already been initialized."]], "SeeAlso": [], "Permissions": [], "Description": "Initializes this parameter object using the parameters specified in paramSpec.", "history": "Added in API level 1", "FullName": "public final void init (AlgorithmParameterSpec paramSpec)"}, "init(byte[],java.lang.String)": {"Returns": [], "Parameters": [["byte[]", "byte: the encoded parameters."], ["@B_java#lang#String_E@", "String: the name of the decoding scheme."]], "Throws": [["@B_java#io#IOException_E@", "on decoding errors, or if this parameter object has already been initialized."]], "SeeAlso": [], "Permissions": [], "Description": "Imports the parameters from params and decodes them according to the specified decoding scheme. If format is null, the primary decoding format for parameters is used. The primary decoding format is ASN.1, if an ASN.1 specification for these parameters exists.", "history": "Added in API level 1", "FullName": "public final void init (byte[] params, String format)"}}, "Inheritance": [], "ClassName": "java.security.AlgorithmParameters", "ClassDesc": "This class is used as an opaque representation of cryptographic parameters. An AlgorithmParameters object for managing the parameters for a particular algorithm can be obtained by calling one of the getInstance factory methods (static methods that return instances of a given class). Once an AlgorithmParameters object is obtained, it must be initialized via a call to init, using an appropriate parameter specification or parameter encoding. A transparent parameter specification is obtained from an AlgorithmParameters object via a call to getParameterSpec, and a byte encoding of the parameters is obtained via a call to getEncoded. Android provides the following AlgorithmParameters algorithms:"}