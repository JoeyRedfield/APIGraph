{"Functions": {"onNestedPreFling(android.view.View, float, float)": {"Returns": [["boolean", "true if this parent consumed the fling ahead of the target view"]], "Parameters": [["@B_android#view#View_E@", "View: View that initiated the nested scroll"], ["float", "float: Horizontal velocity in pixels per second"], ["float", "float: Vertical velocity in pixels per second"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "React to a nested fling before the target view consumes it. This method siginfies that a nested scrolling child has detected a fling with the given velocity along each axis. Generally this means that a touch scroll has ended with a @B_android#view#VelocityTracker_E@ in the direction of scrolling that meets or exceeds the @B_android#view#ViewConfiguration#getScaledMinimumFlingVelocity_E@ along a scrollable axis. If a nested scrolling parent is consuming motion as part of a @B_android#support#v4#view#NestedScrollingParent#onNestedPreScroll_E@, it may be appropriate for it to also consume the pre-fling to complete that same motion. By returning true from this method, the parent indicates that the child should not fling its own internal content as well.", "history": "added in version 22.1.0", "FullName": "boolean onNestedPreFling (View target, float velocityX, float velocityY)"}, "onStopNestedScroll(android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: View that initiated the nested scroll"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "React to a nested scroll operation ending. Perform cleanup after a nested scrolling operation. This method will be called when a nested scroll stops, for example when a nested touch scroll ends with a @B_android#view#MotionEvent#ACTION_UP_E@ or @B_android#view#MotionEvent#ACTION_CANCEL_E@ event. Implementations of this method should always call their superclass's implementation of this method if one is present.", "history": "added in version 22.1.0", "FullName": "void onStopNestedScroll (View target)"}, "getNestedScrollAxes()": {"Returns": [["int", "Flags indicating the current axes of nested scrolling"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v4#view#ViewCompat_E@"], "Permissions": [], "Description": "Return the current axes of nested scrolling for this NestedScrollingParent. A NestedScrollingParent returning something other than @B_android#support#v4#view#ViewCompat#SCROLL_AXIS_NONE_E@ is currently acting as a nested scrolling parent for one or more descendant views in the hierarchy.", "history": "added in version 22.1.0", "FullName": "int getNestedScrollAxes ()"}}, "Inheritance": [], "ClassName": "android.support.v4.view.NestedScrollingParent", "ClassDesc": "This interface should be implemented by https:##developer#android#com@B_android#view#ViewGroup_E@ subclasses that wish to support scrolling operations delegated by a nested child view. Classes implementing this interface should create a final instance of a @B_android#support#v4#view#NestedScrollingParentHelper_E@ as a field and delegate any View or ViewGroup methods to the NestedScrollingParentHelper methods of the same signature. Views invoking nested scrolling functionality should always do so from the relevant @B_android#support#v4#view#ViewCompat_E@, @B_android#support#v4#view#ViewGroupCompat_E@ or @B_android#support#v4#view#ViewParentCompat_E@ compatibility shim static methods. This ensures interoperability with nested scrolling views on Android 5.0 Lollipop and newer."}