{"Functions": {"spatialSampling(android.gesture.Gesture,int,boolean)": {"Returns": [["float[]", "a bitmapSize x bitmapSize grayscale bitmap that is represented as a 1D array. The float at index i represents the grayscale value at pixel [i%bitmapSize, i/bitmapSize]"]], "Parameters": [["@B_android#gesture#Gesture_E@", "Gesture: the gesture to be sampled"], ["int", "int: the size of the bitmap"], ["boolean", "boolean: if the scaling should keep the gesture's aspect ratio"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Samples the gesture spatially by rendering the gesture into a 2D grayscale bitmap. Scales the gesture to fit the size of the bitmap.", "history": "Added in API level 8", "FullName": "public static float[] spatialSampling (Gesture gesture, int bitmapSize, boolean keepAspectRatio)"}, "spatialSampling(android.gesture.Gesture,int)": {"Returns": [["float[]", "a bitmapSize x bitmapSize grayscale bitmap that is represented as a 1D array. The float at index i represents the grayscale value at pixel [i%bitmapSize, i/bitmapSize]"]], "Parameters": [["@B_android#gesture#Gesture_E@", "Gesture: the gesture to be sampled"], ["int", "int: the size of the bitmap"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Samples the gesture spatially by rendering the gesture into a 2D grayscale bitmap. Scales the gesture to fit the size of the bitmap. The scaling does not necessarily keep the aspect ratio of the gesture.", "history": "Added in API level 8", "FullName": "public static float[] spatialSampling (Gesture gesture, int bitmapSize)"}, "spatialSampling(android.gesture.Gesture, int)": {"Returns": [["float[]", "a bitmapSize x bitmapSize grayscale bitmap that is represented as a 1D array. The float at index i represents the grayscale value at pixel [i%bitmapSize, i/bitmapSize]"]], "Parameters": [["@B_android#gesture#Gesture_E@", "Gesture: the gesture to be sampled"], ["int", "int: the size of the bitmap"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Samples the gesture spatially by rendering the gesture into a 2D grayscale bitmap. Scales the gesture to fit the size of the bitmap. The scaling does not necessarily keep the aspect ratio of the gesture.", "history": "added in API level 8", "FullName": "public static float[] spatialSampling (Gesture gesture, int bitmapSize)"}, "computeOrientedBoundingBox(java.util.ArrayList<android.gesture.GesturePoint>)": {"Returns": [["@B_android#gesture#OrientedBoundingBox_E@", "an oriented bounding box"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Computes an oriented, minimum bounding box of a set of points.", "history": "Added in API level 8", "FullName": "public static OrientedBoundingBox computeOrientedBoundingBox (ArrayList<GesturePoint> originalPoints)"}, "temporalSampling(android.gesture.GestureStroke,int)": {"Returns": [["float[]", "the sampled points in the form of [x1, y1, x2, y2, ..., xn, yn]"]], "Parameters": [["@B_android#gesture#GestureStroke_E@", "GestureStroke: the gesture stroke to be sampled"], ["int", "int: the number of points"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Samples a stroke temporally into a given number of evenly-distributed points.", "history": "Added in API level 8", "FullName": "public static float[] temporalSampling (GestureStroke stroke, int numPoints)"}, "computeOrientedBoundingBox(float[])": {"Returns": [["@B_android#gesture#OrientedBoundingBox_E@", "an oriented bounding box"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Computes an oriented, minimum bounding box of a set of points.", "history": "Added in API level 8", "FullName": "public static OrientedBoundingBox computeOrientedBoundingBox (float[] originalPoints)"}}, "Inheritance": [], "ClassName": "android.gesture.GestureUtils", "ClassDesc": "Utility functions for gesture processing & analysis, including methods for: feature extraction (e.g., samplers and those for calculating bounding boxes and gesture path lengths); geometric transformation (e.g., translation, rotation and scaling); gesture similarity comparison (e.g., calculating Euclidean or Cosine distances between two gestures)."}