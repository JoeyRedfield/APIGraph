{"Functions": {"getURI()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the URI this request uses, such as http://example.org/path/to/file.", "history": "Added in API level 1", "FullName": "public URI getURI ()"}, "abort()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Aborts this http request. Any active execution of this method should return immediately. If the request has not started, it will abort after the next execution. Aborting this request will cause all subsequent executions with this request to fail.", "history": "Added in API level 1", "FullName": "public void abort ()"}, "setURI(java.net.URI)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public void setURI (URI uri)"}, "setConnectionRequest(org.apache.http.conn.ClientConnectionRequest)": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Sets the @B_org#apache#http#conn#ClientConnectionRequest_E@ callback that can be used to abort a long-lived request for a connection. If the request is already aborted, throws an @B_java#io#IOException_E@.", "history": "Added in API level 1", "FullName": "public void setConnectionRequest (ClientConnectionRequest connRequest)"}, "getRequestLine()": {"Returns": [["", "the request line."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the request line of this request.", "history": "Added in API level 1", "FullName": "public RequestLine getRequestLine ()"}, "setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger)": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Sets the @B_org#apache#http#conn#ConnectionReleaseTrigger_E@ callback that can be used to abort an active connection. Typically, this will be the @B_org#apache#http#conn#ManagedClientConnection_E@ itself. If the request is already aborted, throws an @B_java#io#IOException_E@.", "history": "Added in API level 1", "FullName": "public void setReleaseTrigger (ConnectionReleaseTrigger releaseTrigger)"}, "getProtocolVersion()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the protocol version this message is compatible with.", "history": "Added in API level 1", "FullName": "public ProtocolVersion getProtocolVersion ()"}, "getMethod()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the HTTP method this request uses, such as GET, PUT, POST, or other.", "history": "Added in API level 1", "FullName": "public abstract String getMethod ()"}, "clone()": {"Returns": [["", "a copy of this object."]], "Parameters": [], "Throws": [["@B_java#lang#CloneNotSupportedException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Creates and returns a copy of this Object. The default implementation returns a so-called \"shallow\" copy: It creates a new instance of the same class and then copies the field values (including object references) from this instance to the new instance. A \"deep\" copy, in contrast, would also recursively clone nested objects. A subclass that needs to implement this kind of cloning should call super.clone() to create the new instance and then create deep copies of the nested, mutable objects.", "history": "Added in API level 1", "FullName": "public Object clone ()"}, "isAborted()": {"Returns": [["", "true if the request execution has been aborted, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tests if the request execution has been aborted.", "history": "Added in API level 1", "FullName": "public boolean isAborted ()"}, "HttpRequestBase()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public HttpRequestBase ()"}}, "Inheritance": ["@B_org#apache#http#message#AbstractHttpMessage_E@"], "ClassName": "org.apache.http.client.methods.HttpRequestBase", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Basic implementation of an HTTP request that can be modified."}