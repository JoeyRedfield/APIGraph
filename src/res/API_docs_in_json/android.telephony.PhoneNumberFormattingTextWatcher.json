{"Functions": {"afterTextChanged(android.text.Editable)": {"Returns": [], "Parameters": [["@B_android#text#Editable_E@", "Editable no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method is called to notify you that, somewhere within s, the text has been changed. It is legitimate to make further changes to s from this callback, but be careful not to get yourself into an infinite loop, because any changes you make will cause this method to be called again recursively. (You are not told where the change took place because other afterTextChanged() methods may already have made other changes and invalidated the offsets. But if you need to know here, you can use @B_android#text#Spannable#setSpan_E@ in @B_android#text#TextWatcher#onTextChanged_E@ to mark your place and then look up from here where the span ended up.", "history": "Added in API level 1", "FullName": "public void afterTextChanged (Editable s)"}, "PhoneNumberFormattingTextWatcher(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the ISO 3166-1 two-letter country code that indicates the country/region where the phone number is being entered."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The formatting is based on the given countryCode.", "history": "Added in API level 21", "FullName": "public PhoneNumberFormattingTextWatcher (String countryCode)"}, "beforeTextChanged(java.lang.CharSequence,int,int,int)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method is called to notify you that, within s, the count characters beginning at start are about to be replaced by new text with length after. It is an error to attempt to make changes to s from this callback.", "history": "Added in API level 1", "FullName": "public void beforeTextChanged (CharSequence s, int start, int count, int after)"}, "onTextChanged(java.lang.CharSequence,int,int,int)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method is called to notify you that, within s, the count characters beginning at start have just replaced old text that had length before. It is an error to attempt to make changes to s from this callback.", "history": "Added in API level 1", "FullName": "public void onTextChanged (CharSequence s, int start, int before, int count)"}, "PhoneNumberFormattingTextWatcher()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The formatting is based on the current system locale and future locale changes may not take effect on this instance.", "history": "Added in API level 1", "FullName": "public PhoneNumberFormattingTextWatcher ()"}}, "Inheritance": [], "ClassName": "android.telephony.PhoneNumberFormattingTextWatcher", "ClassDesc": "Watches a @B_android#widget#TextView_E@ and if a phone number is entered will format it. Stop formatting when the user Inputs non-dialable characters Removes the separator in the middle of string. The formatting will be restarted once the text is cleared."}