{"Functions": {"getDelay(java.util.concurrent.TimeUnit)": {"Returns": [["long", "the remaining delay; zero or negative values indicate that the delay has already elapsed"]], "Parameters": [["@B_java#util#concurrent#TimeUnit_E@", "TimeUnit: the time unit"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the remaining delay associated with this object, in the given time unit.", "history": "Added in API level 1", "FullName": "public abstract long getDelay (TimeUnit unit)"}}, "Inheritance": [], "ClassName": "java.util.concurrent.Delayed", "ClassDesc": "A mix-in style interface for marking objects that should be acted upon after a given delay. An implementation of this interface must define a compareTo method that provides an ordering consistent with its getDelay method."}