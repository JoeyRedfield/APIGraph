{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 5", "FullName": "public String toString ()"}, "clear()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Clears the SyncResult to a clean state. Throws an @B_java#lang#UnsupportedOperationException_E@ if this is called when @B_android#content#SyncResult#syncAlreadyInProgress_E@ is set.", "history": "Added in API level 5", "FullName": "public void clear ()"}, "madeSomeProgress()": {"Returns": [["boolean", "true if the SyncManager should reschedule this sync."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Convenience method for determining if the Sync should be rescheduled after failing for some reason.", "history": "Added in API level 5", "FullName": "public boolean madeSomeProgress ()"}, "hasSoftError()": {"Returns": [["boolean", "true if a soft error is indicated"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Convenience method for determining if the SyncResult indicates that a soft error occurred. See @B_android#content#SyncResult#SyncResult_E@ for an explanation of what the SyncManager does when it sees a soft error. A soft error is indicated when any of the following is true: @B_android#content#SyncStats#numIoExceptions_E@ > 0 @B_android#content#SyncResult#syncAlreadyInProgress_E@", "history": "Added in API level 5", "FullName": "public boolean hasSoftError ()"}, "hasError()": {"Returns": [["boolean", "true if either a soft or hard error occurred"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "A convenience method for determining of the SyncResult indicates that an error occurred.", "history": "Added in API level 5", "FullName": "public boolean hasError ()"}, "hasHardError()": {"Returns": [["boolean", "true if a hard error is indicated"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Convenience method for determining if the SyncResult indicates that a hard error occurred. See @B_android#content#SyncResult#SyncResult_E@ for an explanation of what the SyncManager does when it sees a hard error. A hard error is indicated when any of the following is true: @B_android#content#SyncStats#numParseExceptions_E@ > 0 @B_android#content#SyncStats#numConflictDetectedExceptions_E@ > 0 @B_android#content#SyncStats#numAuthExceptions_E@ > 0 @B_android#content#SyncResult#tooManyDeletions_E@ @B_android#content#SyncResult#tooManyRetries_E@ @B_android#content#SyncResult#databaseError_E@", "history": "Added in API level 5", "FullName": "public boolean hasHardError ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 5", "FullName": "public void writeToParcel (Parcel parcel, int flags)"}, "SyncResult()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a \"clean\" SyncResult. If this is returned without any changes then the SyncManager will consider the sync to have completed successfully. The various fields can be set by the SyncAdapter in order to give the SyncManager more information as to the disposition of the sync. The errors are classified into two broad categories: hard errors and soft errors. Soft errors are retried with exponential backoff. Hard errors are not retried (except when the hard error is for a @B_android#content#ContentResolver#SYNC_EXTRAS_UPLOAD_E@ request, in which the request is retryed without the @B_android#content#ContentResolver#SYNC_EXTRAS_UPLOAD_E@ extra set). The SyncManager checks the type of error by calling @B_android#content#SyncResult#hasHardError_E@ and @B_android#content#SyncResult#hasSoftError_E@. If both are true then the SyncManager treats it as a hard error, not a soft error.", "history": "Added in API level 5", "FullName": "public SyncResult ()"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 5", "FullName": "public int describeContents ()"}, "toDebugString()": {"Returns": [["@B_java#lang#String_E@", "debugging string."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Generates a debugging string indicating the status. The string consist of a sequence of code letter followed by the count. Code letters are f - fullSyncRequested, r - partialSyncUnavailable, X - hardError, e - numParseExceptions, c - numConflictDetectedExceptions, a - numAuthExceptions, D - tooManyDeletions, R - tooManyRetries, b - databaseError, x - softError, l - syncAlreadyInProgress, I - numIoExceptions", "history": "Added in API level 5", "FullName": "public String toDebugString ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 5", "FullName": "public void writeToParcel (Parcel parcel, int flags)"}}, "Inheritance": [], "ClassName": "android.content.SyncResult", "ClassDesc": "This class is used to communicate the results of a sync operation to the SyncManager. Based on the values here the SyncManager will determine the disposition of the sync and whether or not a new sync operation needs to be scheduled in the future."}