{"Functions": {}, "Inheritance": [], "ClassName": "android.provider.Telephony", "ClassDesc": "The Telephony provider contains data related to phone operation, specifically SMS and MMS messages, access to the APN list, including the MMSC to use, and the service state. \"android.hardware.telephony\" hardware feature. Alternatively, you can check for telephony availability at runtime using either @B_android#content#pm#PackageManager#hasSystemFeature_E@ or @B_android#telephony#TelephonyManager#getPhoneType_E@. Only the default SMS app (selected by the user in system settings) is able to write to the SMS Provider (the tables defined within the Telephony class) and only the default SMS app receives the @B_android#provider#Telephony#Sms#Intents#SMS_DELIVER_ACTION_E@ broadcast when the user receives an SMS or the @B_android#provider#Telephony#Sms#Intents#WAP_PUSH_DELIVER_ACTION_E@ broadcast when the user receives an MMS. Any app that wants to behave as the user's default SMS app must handle the following intents: In a broadcast receiver, include an intent filter for @B_android#provider#Telephony#Sms#Intents#SMS_DELIVER_ACTION_E@ (\"android.provider.Telephony.SMS_DELIVER\"). The broadcast receiver must also require the @B_android#Manifest#permission#BROADCAST_SMS_E@ permission. This allows your app to directly receive incoming SMS messages. In a broadcast receiver, include an intent filter for @B_android#provider#Telephony#Sms#Intents#WAP_PUSH_DELIVER_ACTION_E@} (\"android.provider.Telephony.WAP_PUSH_DELIVER\") with the MIME type \"application/vnd.wap.mms-message\". The broadcast receiver must also require the @B_android#Manifest#permission#BROADCAST_WAP_PUSH_E@ permission. This allows your app to directly receive incoming MMS messages. In your activity that delivers new messages, include an intent filter for @B_android#content#Intent#ACTION_SENDTO_E@ (\"android.intent.action.SENDTO\" ) with schemas, sms:, smsto:, mms:, and mmsto:. This allows your app to receive intents from other apps that want to deliver a message. In a service, include an intent filter for @B_android#telephony#TelephonyManager#ACTION_RESPOND_VIA_MESSAGE_E@ (\"android.intent.action.RESPOND_VIA_MESSAGE\") with schemas, sms:, smsto:, mms:, and mmsto:. This service must also require the @B_android#Manifest#permission#SEND_RESPOND_VIA_MESSAGE_E@ permission. This allows users to respond to incoming phone calls with an immediate text message using your app. Other apps that are not selected as the default SMS app can only read the SMS Provider, but may also be notified when a new SMS arrives by listening for the @B_android#provider#Telephony#Sms#Intents#SMS_RECEIVED_ACTION_E@ broadcast, which is a non-abortable broadcast that may be delivered to multiple apps. This broadcast is intended for apps that\u2014while not selected as the default SMS app\u2014need to read special incoming messages such as to perform phone number verification. For more information about building SMS apps, read the blog post,"}