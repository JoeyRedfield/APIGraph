{"Functions": {"getLoginTimeout()": {"Returns": [["int", "the data source login time limit"]], "Parameters": [], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs."]], "SeeAlso": ["@B_javax#sql#CommonDataSource#setLoginTimeout_E@"], "Permissions": [], "Description": "Gets the maximum time in seconds that this data source can wait while attempting to connect to a database. A value of zero means that the timeout is the default system timeout if there is one; otherwise, it means that there is no timeout. When a DataSource object is created, the login timeout is initially zero.", "history": "Added in API level 9", "FullName": "public abstract int getLoginTimeout ()"}, "setLogWriter(java.io.PrintWriter)": {"Returns": [], "Parameters": [["@B_java#io#PrintWriter_E@", "PrintWriter: the new log writer; to disable logging, set to null"]], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": ["@B_javax#sql#CommonDataSource#getLogWriter_E@"], "Permissions": [], "Description": "Sets the log writer for this DataSource object to the given java.io.PrintWriter object. The log writer is a character output stream to which all logging and tracing messages for this data source will be printed. This includes messages printed by the methods of this object, messages printed by methods of other objects manufactured by this object, and so on. Messages printed to a data source- specific log writer are not printed to the log writer associated with the java.sql.DriverManager class. When a DataSource object is created the log writer is initially null; in other words, the default is for logging to be disabled.", "history": "Added in API level 9", "FullName": "public abstract void setLogWriter (PrintWriter out)"}, "getParentLogger()": {"Returns": [["@B_java#util#logging#Logger_E@", "the parent Logger for this data source"]], "Parameters": [], "Throws": [["@B_java#sql#SQLFeatureNotSupportedException_E@", "if the data source does not use java.util.logging."]], "SeeAlso": [], "Permissions": [], "Description": "Return the parent Logger of all the Loggers used by this data source. This should be the Logger farthest from the root Logger that is still an ancestor of all of the Loggers used by this data source. Configuring this Logger will affect all of the log messages generated by the data source. In the worst case, this may be the root Logger.", "history": "Added in API level 24", "FullName": "public abstract Logger getParentLogger ()"}, "getLogWriter()": {"Returns": [["@B_java#io#PrintWriter_E@", "the log writer for this data source or null if logging is disabled"]], "Parameters": [], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs"]], "SeeAlso": ["@B_javax#sql#CommonDataSource#setLogWriter_E@"], "Permissions": [], "Description": "Retrieves the log writer for this DataSource object. The log writer is a character output stream to which all logging and tracing messages for this data source will be printed. This includes messages printed by the methods of this object, messages printed by methods of other objects manufactured by this object, and so on. Messages printed to a data source specific log writer are not printed to the log writer associated with the java.sql.DriverManager class. When a DataSource object is created, the log writer is initially null; in other words, the default is for logging to be disabled.", "history": "Added in API level 9", "FullName": "public abstract PrintWriter getLogWriter ()"}, "setLoginTimeout(int)": {"Returns": [], "Parameters": [["int", "int: the data source login time limit"]], "Throws": [["@B_java#sql#SQLException_E@", "if a database access error occurs."]], "SeeAlso": ["@B_javax#sql#CommonDataSource#getLoginTimeout_E@"], "Permissions": [], "Description": "Sets the maximum time in seconds that this data source will wait while attempting to connect to a database. A value of zero specifies that the timeout is the default system timeout if there is one; otherwise, it specifies that there is no timeout. When a DataSource object is created, the login timeout is initially zero.", "history": "Added in API level 9", "FullName": "public abstract void setLoginTimeout (int seconds)"}}, "Inheritance": [], "ClassName": "javax.sql.CommonDataSource", "ClassDesc": "Interface that defines the methods which are common between DataSource, XADataSource and ConnectionPoolDataSource."}