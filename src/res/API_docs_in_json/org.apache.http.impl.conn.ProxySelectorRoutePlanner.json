{"Functions": {"chooseProxy(java.util.List<java.net.Proxy>, org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "protected Proxy chooseProxy (List<Proxy> proxies, HttpHost target, HttpRequest request, HttpContext context)"}, "ProxySelectorRoutePlanner(org.apache.http.conn.scheme.SchemeRegistry, java.net.ProxySelector)": {"Returns": [], "Parameters": [["@B_org#apache#http#conn#scheme#SchemeRegistry_E@", "the scheme registry"], ["@B_java#net#ProxySelector_E@", "the proxy selector, or null for the system default"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new proxy selector route planner.", "history": "Added in API level 1", "FullName": "public ProxySelectorRoutePlanner (SchemeRegistry schreg, ProxySelector prosel)"}, "setProxySelector(java.net.ProxySelector)": {"Returns": [], "Parameters": [["@B_java#net#ProxySelector_E@", "the proxy selector, or null to use the system default"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the proxy selector to use.", "history": "Added in API level 1", "FullName": "public void setProxySelector (ProxySelector prosel)"}, "getProxySelector()": {"Returns": [["", "the proxy selector, or null for the system default"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtains the proxy selector to use.", "history": "Added in API level 1", "FullName": "public ProxySelector getProxySelector ()"}, "getHost(java.net.InetSocketAddress)": {"Returns": [["", "a host string, either as a symbolic name or as a literal IP address string (TODO: determine format for IPv6 addresses, with or without [brackets])"]], "Parameters": [["@B_java#net#InetSocketAddress_E@", "the socket address"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtains a host from an @B_java#net#InetSocketAddress_E@.", "history": "Added in API level 1", "FullName": "protected String getHost (InetSocketAddress isa)"}, "determineRoute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)": {"Returns": [["", "the route that the request should take"]], "Parameters": [["@B_org#apache#http#HttpHost_E@", "the target host for the request. Implementations may accept null if they can still determine a route, for example to a default target or by inspecting the request."], ["@B_org#apache#http#HttpRequest_E@", "the request to execute"], ["@B_org#apache#http#protocol#HttpContext_E@", "the context to use for the subsequent execution. Implementations may accept null."]], "Throws": [["@B_org#apache#http#HttpException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Determines the route for a request.", "history": "Added in API level 1", "FullName": "public HttpRoute determineRoute (HttpHost target, HttpRequest request, HttpContext context)"}, "determineProxy(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)": {"Returns": [["", "the proxy to use, or null for a direct route"]], "Parameters": [["@B_org#apache#http#HttpHost_E@", "the planned target, never null"], ["@B_org#apache#http#HttpRequest_E@", "the request to be sent, never null"], ["@B_org#apache#http#protocol#HttpContext_E@", "the context, or null"]], "Throws": [["@B_org#apache#http#HttpException_E@", "in case of system proxy settings that cannot be handled"]], "SeeAlso": [], "Permissions": [], "Description": "Determines a proxy for the given target.", "history": "Added in API level 1", "FullName": "protected HttpHost determineProxy (HttpHost target, HttpRequest request, HttpContext context)"}}, "Inheritance": [], "ClassName": "org.apache.http.impl.conn.ProxySelectorRoutePlanner", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Default implementation of an @B_org#apache#http#conn#routing#HttpRoutePlanner_E@. This implementation is based on @B_java#net#ProxySelector_E@. By default, it will pick up the proxy settings of the JVM, either from system properties or from the browser running the application. Additionally, it interprets some @B_org#apache#http#conn#params#ConnRoutePNames_E@, though not the @B_org#apache#http#conn#params#ConnRoutePNames#DEFAULT_PROXY_E@."}