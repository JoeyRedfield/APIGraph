{"Functions": {"getRoutes()": {"Returns": [["@B_java#util#List_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets information about the @B_android#support#v7#media#MediaRouter#RouteInfo_E@ currently known to this media router.", "history": "added in version 22.0.0", "FullName": "List<MediaRouter.RouteInfo> getRoutes ()"}, "unselect(int)": {"Returns": [], "Parameters": [["int", "int: The reason for disconnecting the current route."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Unselects the current round and selects the default route instead. The reason given must be one of: @B_android#support#v7#media#MediaRouter#UNSELECT_REASON_UNKNOWN_E@ @B_android#support#v7#media#MediaRouter#UNSELECT_REASON_DISCONNECTED_E@ @B_android#support#v7#media#MediaRouter#UNSELECT_REASON_STOPPED_E@ @B_android#support#v7#media#MediaRouter#UNSELECT_REASON_ROUTE_CHANGED_E@", "history": "added in version 22.0.0", "FullName": "void unselect (int reason)"}, "getInstance(android.content.Context)": {"Returns": [["@B_android#support#v7#media#MediaRouter_E@", "The media router instance for the context. The application must hold a strong reference to this object as long as it is in use."]], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets an instance of the media router service associated with the context. The application is responsible for holding a strong reference to the returned @B_android#support#v7#media#MediaRouter_E@ instance, such as by storing the instance in a field of the @B_android#app#Activity_E@, to ensure that the media router remains alive as long as the application is using its features. In other words, the support library only holds a @B_java#lang#ref#WeakReference_E@ to each media router instance. When there are no remaining strong references to the media router instance, all of its callbacks will be removed and route discovery will no longer be performed on its behalf.", "history": "added in version 22.0.0", "FullName": "MediaRouter getInstance (Context context)"}, "setMediaSession(java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: The @B_android#media#session#MediaSession_E@ to use."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the media session to enable remote control of the volume of the selected route. This should be used instead of @B_android#support#v7#media#MediaRouter#addRemoteControlClient_E@ when using media sessions. Set the session to null to clear it.", "history": "added in version 22.0.0", "FullName": "void setMediaSession (Object mediaSession)"}, "removeRemoteControlClient(java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: The @B_android#media#RemoteControlClient_E@ to unregister."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes a remote control client.", "history": "added in version 22.0.0", "FullName": "void removeRemoteControlClient (Object remoteControlClient)"}, "getBluetoothRoute()": {"Returns": [["@B_android#support#v7#media#MediaRouter#RouteInfo_E@", "A bluetooth route, if exist, otherwise null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets a bluetooth route for playing media content on the system.", "history": "added in version 25.1.0", "FullName": "MediaRouter.RouteInfo getBluetoothRoute ()"}, "getSelectedRoute()": {"Returns": [["@B_android#support#v7#media#MediaRouter#RouteInfo_E@", "The selected route, which is guaranteed to never be null."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v7#media#MediaRouter#RouteInfo#getControlFilters_E@", "@B_android#support#v7#media#MediaRouter#RouteInfo#supportsControlCategory_E@", "@B_android#support#v7#media#MediaRouter#RouteInfo#supportsControlRequest_E@"], "Permissions": [], "Description": "Gets the currently selected route. The application should examine the route's @B_android#support#v7#media#MediaRouter#RouteInfo#getControlFilters_E@ to assess the capabilities of the route before attempting to use it.", "history": "added in version 22.0.0", "FullName": "MediaRouter.RouteInfo getSelectedRoute ()"}, "addRemoteControlClient(java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: The @B_android#media#RemoteControlClient_E@ to register."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds a remote control client to enable remote control of the volume of the selected route. The remote control client must have previously been registered with the audio manager using the @B_android#media#AudioManager#registerRemoteControlClient_E@ method.", "history": "added in version 22.0.0", "FullName": "void addRemoteControlClient (Object remoteControlClient)"}, "getDefaultRoute()": {"Returns": [["@B_android#support#v7#media#MediaRouter#RouteInfo_E@", "The default route, which is guaranteed to never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the default route for playing media content on the system. The system always provides a default route.", "history": "added in version 22.0.0", "FullName": "MediaRouter.RouteInfo getDefaultRoute ()"}, "getProviders()": {"Returns": [["@B_java#util#List_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets information about the @B_android#support#v7#media#MediaRouter#ProviderInfo_E@ currently known to this media router.", "history": "added in version 22.0.0", "FullName": "List<MediaRouter.ProviderInfo> getProviders ()"}, "getMediaSessionToken()": {"Returns": [["@B_android#support#v4#media#session#MediaSessionCompat#Token_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "MediaSessionCompat.Token getMediaSessionToken ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v7.media.MediaRouter", "ClassDesc": "MediaRouter allows applications to control the routing of media channels and streams from the current device to external speakers and destination devices. A MediaRouter instance is retrieved through @B_android#support#v7#media#MediaRouter#getInstance_E@. Applications can query the media router about the currently selected route and its capabilities to determine how to send content to the route's destination. Applications can also @B_android#support#v7#media#MediaRouter#RouteInfo#sendControlRequest_E@ to the route to ask the route's destination to perform certain remote control functions such as playing media. See also @B_android#support#v7#media#MediaRouteProvider_E@ for information on how an application can publish new media routes to the media router. The media router API is not thread-safe; all interactions with it must be done from the main thread of the process."}