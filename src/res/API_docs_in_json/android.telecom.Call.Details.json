{"Functions": {"hasProperty(int, int)": {"Returns": [["boolean", "Whether the specified property is supported."]], "Parameters": [["int", "int: A bit field of properties."], ["int", "int: The property to check properties for."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Whether the supplied properties includes the specified property.", "history": "added in API level 23", "FullName": "public static boolean hasProperty (int properties, int property)"}, "getCallCapabilities()": {"Returns": [["int", "A bitmask of the capabilities of the Call, as defined by the various CAPABILITY_* constants in this class."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public int getCallCapabilities ()"}, "getExtras()": {"Returns": [["@B_android#os#Bundle_E@", "The extras associated with this call."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public Bundle getExtras ()"}, "hasProperty(int)": {"Returns": [["boolean", "Whether the specified property is supported."]], "Parameters": [["int", "int: The property to check properties for."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Whether the properties of this Details includes the specified property.", "history": "Added in API level 23", "FullName": "public boolean hasProperty (int property)"}, "getStatusHints()": {"Returns": [["@B_android#telecom#StatusHints_E@", "The current @B_android#telecom#StatusHints_E@, or null if none have been set."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public StatusHints getStatusHints ()"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if this object is the same as the obj argument; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the reference object with which to compare."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether some other object is \"equal to\" this one. The equals method implements an equivalence relation on non-null object references: It is x, x.equals(x) should return true. It is x and y, x.equals(y) should return true if and only if y.equals(x) returns true. It is x, y, and z, if x.equals(y) returns true and y.equals(z) returns true, then x.equals(z) should return true. It is x and y, multiple invocations of x.equals(y) consistently return true or consistently return false, provided no information used in equals comparisons on the objects is modified. For any non-null reference value x, x.equals(null) should return false. The equals method for class Object implements the most discriminating possible equivalence relation on objects; that is, for any non-null reference values x and y, this method returns true if and only if x and y refer to the same object (x == y has the value true). Note that it is generally necessary to override the hashCode method whenever this method is overridden, so as to maintain the general contract for the hashCode method, which states that equal objects must have equal hash codes.", "history": "Added in API level 23", "FullName": "public boolean equals (Object o)"}, "getGatewayInfo()": {"Returns": [["@B_android#telecom#GatewayInfo_E@", "Information about any calling gateway the Call may be using."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public GatewayInfo getGatewayInfo ()"}, "capabilitiesToString(int)": {"Returns": [["@B_java#lang#String_E@", "A human readable string representation."]], "Parameters": [["int", "int: A capability bit field."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Render a set of capability bits (CAPABILITY_*) as a human readable string.", "history": "Added in API level 23", "FullName": "public static String capabilitiesToString (int capabilities)"}, "hasProperty(int,int)": {"Returns": [["boolean", "Whether the specified property is supported."]], "Parameters": [["int", "int: A bit field of properties."], ["int", "int: The property to check properties for."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Whether the supplied properties includes the specified property.", "history": "Added in API level 23", "FullName": "public static boolean hasProperty (int properties, int property)"}, "getCallerDisplayNamePresentation()": {"Returns": [["int", "The presentation requirements for the caller display name. See @B_android#telecom#TelecomManager_E@ for valid values."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public int getCallerDisplayNamePresentation ()"}, "hashCode()": {"Returns": [["int", "a hash code value for this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code value for the object. This method is supported for the benefit of hash tables such as those provided by @B_java#util#HashMap_E@. The general contract of hashCode is: Whenever it is invoked on the same object more than once during an execution of a Java application, the hashCode method must consistently return the same integer, provided no information used in equals comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application. If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result. It is not required that if two objects are unequal according to the @B_java#lang#Object#equals_E@ method, then calling the hashCode method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables. As much as is reasonably practical, the hashCode method defined by class Object does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the Java\u2122 programming language.)", "history": "Added in API level 23", "FullName": "public int hashCode ()"}, "can(int,int)": {"Returns": [["boolean", "Whether the specified capability is supported."]], "Parameters": [["int", "int: A bit field of capabilities."], ["int", "int: The capability to check capabilities for."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Whether the supplied capabilities supports the specified capability.", "history": "Added in API level 23", "FullName": "public static boolean can (int capabilities, int capability)"}, "getVideoState()": {"Returns": [["int", "The video state of the Call."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public int getVideoState ()"}, "getCallerDisplayName()": {"Returns": [["@B_java#lang#String_E@", "The display name for the caller."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The display name for the caller. This is the name as reported by the @B_android#telecom#ConnectionService_E@ associated with this call.", "history": "Added in API level 23", "FullName": "public String getCallerDisplayName ()"}, "can(int)": {"Returns": [["boolean", "Whether the specified capability is supported."]], "Parameters": [["int", "int: The capability to check capabilities for."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Whether the capabilities of this Details supports the specified capability.", "history": "Added in API level 23", "FullName": "public boolean can (int capability)"}, "getIntentExtras()": {"Returns": [["@B_android#os#Bundle_E@", "The extras used with the original intent to place this call."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public Bundle getIntentExtras ()"}, "can(int, int)": {"Returns": [["boolean", "Whether the specified capability is supported."]], "Parameters": [["int", "int: A bit field of capabilities."], ["int", "int: The capability to check capabilities for."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Whether the supplied capabilities supports the specified capability.", "history": "added in API level 23", "FullName": "public static boolean can (int capabilities, int capability)"}, "getDisconnectCause()": {"Returns": [["@B_android#telecom#DisconnectCause_E@", "For a @B_android#telecom#Call#STATE_DISCONNECTED_E@ Call, the disconnect cause expressed by @B_android#telecom#DisconnectCause_E@."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public DisconnectCause getDisconnectCause ()"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 23", "FullName": "public String toString ()"}, "getCallDirection()": {"Returns": [["int", "The call's direction. Value is @B_android#telecom#Call#Details#DIRECTION_UNKNOWN_E@, @B_android#telecom#Call#Details#DIRECTION_INCOMING_E@, or @B_android#telecom#Call#Details#DIRECTION_OUTGOING_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether the call is an incoming or outgoing call.", "history": "Added in API level 29", "FullName": "public int getCallDirection ()"}, "getCallProperties()": {"Returns": [["int", "A bitmask of the properties of the Call, as defined by the various PROPERTY_* constants in this class."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public int getCallProperties ()"}, "getConnectTimeMillis()": {"Returns": [["long", "The time the @B_android#telecom#Call_E@ connected in milliseconds since the epoch."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the time the @B_android#telecom#Call_E@ connected (i.e. became active). This information is updated periodically, but user interfaces should not rely on this to display the \"call time clock\". For the time when the call was first added to Telecom, see @B_android#telecom#Call#Details#getCreationTimeMillis_E@.", "history": "Added in API level 23", "FullName": "public final long getConnectTimeMillis ()"}, "getCreationTimeMillis()": {"Returns": [["long", "The creation time of the call, in millis since the epoch."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the time when the call was first created and added to Telecom. This is the same time that is logged as the start time in the Call Log (see @B_android#provider#CallLog#Calls#DATE_E@). To determine when the call was connected (became active), see @B_android#telecom#Call#Details#getConnectTimeMillis_E@.", "history": "Added in API level 26", "FullName": "public long getCreationTimeMillis ()"}, "getHandle()": {"Returns": [["@B_android#net#Uri_E@", "The handle (e.g., phone number) to which the Call is currently connected."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public Uri getHandle ()"}, "getAccountHandle()": {"Returns": [["@B_android#telecom#PhoneAccountHandle_E@", "The PhoneAccountHandle whereby the Call is currently being routed."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public PhoneAccountHandle getAccountHandle ()"}, "propertiesToString(int)": {"Returns": [["@B_java#lang#String_E@", "A human readable string representation."]], "Parameters": [["int", "int: A property bit field."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Render a set of property bits (PROPERTY_*) as a human readable string.", "history": "Added in API level 23", "FullName": "public static String propertiesToString (int properties)"}, "getHandlePresentation()": {"Returns": [["int", "The presentation requirements for the handle. See @B_android#telecom#TelecomManager_E@ for valid values."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public int getHandlePresentation ()"}}, "Inheritance": [], "ClassName": "android.telecom.Call.Details", "ClassDesc": ""}