{"Functions": {"newLatLngZoom(com.google.android.gms.maps.model.LatLng, float)": {"Returns": [["", "a @B_com#google#android#gms#maps#CameraUpdate_E@ containing the transformation."]], "Parameters": [["@B_com#google#android#gms#maps#model#LatLng_E@", "a @B_com#google#android#gms#maps#model#LatLng_E@ object containing the desired latitude and longitude."], ["float", "the desired zoom level, in the range of 2.0 to 21.0. Values below this range are set to 2.0, and values above it are set to 21.0. Increase the value to zoom in. Not all areas have tiles at the largest zoom levels."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_com#google#android#gms#maps#CameraUpdate_E@ that moves the center of the screen to a latitude and longitude specified by a @B_com#google#android#gms#maps#model#LatLng_E@ object, and moves to the given zoom level.", "history": "", "FullName": "public static CameraUpdate newLatLngZoom (LatLng latLng, float zoom)"}, "newLatLng(com.google.android.gms.maps.model.LatLng)": {"Returns": [["", "a @B_com#google#android#gms#maps#CameraUpdate_E@ containing the transformation."]], "Parameters": [["@B_com#google#android#gms#maps#model#LatLng_E@", "a @B_com#google#android#gms#maps#model#LatLng_E@ object containing the desired latitude and longitude."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_com#google#android#gms#maps#CameraUpdate_E@ that moves the center of the screen to a latitude and longitude specified by a @B_com#google#android#gms#maps#model#LatLng_E@ object. This centers the camera on the @B_com#google#android#gms#maps#model#LatLng_E@ object.", "history": "", "FullName": "public static CameraUpdate newLatLng (LatLng latLng)"}, "zoomBy(float)": {"Returns": [["", "a @B_com#google#android#gms#maps#CameraUpdate_E@ containing the transformation."]], "Parameters": [["float", "amount to change the zoom level. Positive values indicate zooming closer to the surface of the Earth while negative values indicate zooming away from the surface of the Earth."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_com#google#android#gms#maps#CameraUpdate_E@ that shifts the zoom level of the current camera viewpoint. This method is different to @B_com#google#android#gms#maps#CameraUpdateFactory#zoomTo_E@ in that zoom is relative to the current camera.", "history": "", "FullName": "public static CameraUpdate zoomBy (float amount)"}, "newLatLngBounds(com.google.android.gms.maps.model.LatLngBounds, int, int, int)": {"Returns": [["", "a @B_com#google#android#gms#maps#CameraUpdate_E@ containing the transformation."]], "Parameters": [["@B_com#google#android#gms#maps#model#LatLngBounds_E@", "the region to fit in the bounding box"], ["int", "bounding box width in pixels (px)"], ["int", "bounding box height in pixels (px)"], ["int", "additional size restriction (in px) of the bounding box"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_com#google#android#gms#maps#CameraUpdate_E@ that transforms the camera such that the specified latitude/longitude bounds are centered on screen within a bounding box of specified dimensions at the greatest possible zoom level. You can specify additional padding, to further restrict the size of the bounding box. The returned @B_com#google#android#gms#maps#CameraUpdate_E@ has a bearing of 0 and a tilt of 0. Unlike @B_com#google#android#gms#maps#CameraUpdateFactory#newLatLngBounds_E@, you can use the @B_com#google#android#gms#maps#CameraUpdate_E@ returned by this method to change the camera prior to the map's the layout phase, because the arguments specify the desired size of the bounding box.", "history": "", "FullName": "public static CameraUpdate newLatLngBounds (LatLngBounds bounds, int width, int height, int padding)"}, "zoomIn()": {"Returns": [["", "a @B_com#google#android#gms#maps#CameraUpdate_E@ containing the transformation."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_com#google#android#gms#maps#CameraUpdate_E@ that zooms in on the map by moving the viewpoint's height closer to the Earth's surface. The zoom increment is 1.0.", "history": "", "FullName": "public static CameraUpdate zoomIn ()"}, "scrollBy(float, float)": {"Returns": [["", "a @B_com#google#android#gms#maps#CameraUpdate_E@ containing the transformation."]], "Parameters": [["float", "the number of pixels to scroll horizontally. A positive value moves the camera to the right, with respect to its current orientation. A negative value moves the camera to the left, with respect to its current orientation."], ["float", "the number of pixels to scroll vertically. A positive value moves the camera downwards, with respect to its current orientation. A negative value moves the camera upwards, with respect to its current orientation."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_com#google#android#gms#maps#CameraUpdate_E@ that scrolls the camera over the map, shifting the center of view by the specified number of pixels in the x and y directions. Examples: If xPixel = 5 and yPixel = 0, the system scrolls right by moving the camera so that the map appears to have shifted 5 pixels to the left. If xPixel = 0 and yPixel = 5, the system scrolls down by moving the camera so that the map appears to have shifted 5 pixels upwards. The scrolling is relative to the camera's current orientation. For example, if the camera is bearing 90 degrees, then east is \"up\" and scrolling right will move the camera south.", "history": "", "FullName": "public static CameraUpdate scrollBy (float xPixel, float yPixel)"}, "zoomOut()": {"Returns": [["", "a @B_com#google#android#gms#maps#CameraUpdate_E@ containing the transformation."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_com#google#android#gms#maps#CameraUpdate_E@ that zooms out on the map by moving the viewpoint's height farther away from the Earth's surface. The zoom increment is -1.0.", "history": "", "FullName": "public static CameraUpdate zoomOut ()"}, "zoomBy(float, android.graphics.Point)": {"Returns": [["", "a @B_com#google#android#gms#maps#CameraUpdate_E@ containing the transformation."]], "Parameters": [["float", "amount to change the zoom level. Positive values indicate zooming closer to the surface of the Earth while negative values indicate zooming away from the surface of the Earth."], ["Point", "pixel location on the screen that is to remain fixed after the zooming process. The lat/long that was at that pixel location before the camera move will remain the same after the camera has moved."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_com#google#android#gms#maps#CameraUpdate_E@ that shifts the zoom level of the current camera viewpoint. A point specified by focus will remain fixed (i.e., it corresponds to the same lat/long both before and after the zoom process). This method is different to @B_com#google#android#gms#maps#CameraUpdateFactory#zoomTo_E@ in that zoom is relative to the current camera. For example, if the @B_com#google#android#gms#maps#model#LatLng_E@ (11.11, 22.22) is currently at the screen location (23, 45). After calling this method with a zoom amount and this @B_com#google#android#gms#maps#model#LatLng_E@, the screen location of this @B_com#google#android#gms#maps#model#LatLng_E@ will still be (23, 45).", "history": "", "FullName": "public static CameraUpdate zoomBy (float amount, Point focus)"}, "zoomTo(float)": {"Returns": [], "Parameters": [["float", "the desired zoom level, in the range of 2.0 to 21.0. Values below this range are set to 2.0, and values above it are set to 21.0. Increase the value to zoom in. Not all areas have tiles at the largest zoom levels."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_com#google#android#gms#maps#CameraUpdate_E@ that moves the camera viewpoint to a particular zoom level.", "history": "", "FullName": "public static CameraUpdate zoomTo (float zoom)"}, "newLatLngBounds(com.google.android.gms.maps.model.LatLngBounds, int)": {"Returns": [["", "a @B_com#google#android#gms#maps#CameraUpdate_E@ containing the transformation."]], "Parameters": [["@B_com#google#android#gms#maps#model#LatLngBounds_E@", "region to fit on screen"], ["int", "space (in px) to leave between the bounding box edges and the view edges. This value is applied to all four sides of the bounding box."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_com#google#android#gms#maps#CameraUpdate_E@ that transforms the camera such that the specified latitude/longitude bounds are centered on screen at the greatest possible zoom level. You can specify padding, in order to inset the bounding box from the map view's edges. The returned @B_com#google#android#gms#maps#CameraUpdate_E@ has a bearing of 0 and a tilt of 0. Do not change the camera with this camera update until the map has undergone layout (in order for this method to correctly determine the appropriate bounding box and zoom level, the map must have a size). Otherwise an @B_java#lang#IllegalStateException_E@ will be thrown. It is NOT sufficient for the map to be available (i.e. @B_com#google#android#gms#maps#MapFragment#getMap_E@ returns a non-null object); the view containing the map must have also undergone layout such that its dimensions have been determined. If you cannot be sure that this has occured, use @B_com#google#android#gms#maps#CameraUpdateFactory#newLatLngBounds_E@ instead and provide the dimensions of the map manually.", "history": "", "FullName": "public static CameraUpdate newLatLngBounds (LatLngBounds bounds, int padding)"}, "newCameraPosition(com.google.android.gms.maps.model.CameraPosition)": {"Returns": [["", "a @B_com#google#android#gms#maps#CameraUpdate_E@ containing the transformation."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_com#google#android#gms#maps#CameraUpdate_E@ that moves the camera to a specified @B_com#google#android#gms#maps#model#CameraPosition_E@. In effect, this creates a transformation from the @B_com#google#android#gms#maps#model#CameraPosition_E@ object's latitude, longitude, zoom level, bearing and tilt.", "history": "", "FullName": "public static CameraUpdate newCameraPosition (CameraPosition cameraPosition)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.maps.CameraUpdateFactory", "ClassDesc": "A class containing methods for creating @B_com#google#android#gms#maps#CameraUpdate_E@ objects that change a map's camera. To modify the map's camera, call @B_com#google#android#gms#maps#GoogleMap#animateCamera_E@, @B_com#google#android#gms#maps#GoogleMap#animateCamera_E@ or @B_com#google#android#gms#maps#GoogleMap#moveCamera_E@, using a @B_com#google#android#gms#maps#CameraUpdate_E@ object created with this class. For example, to zoom in on a map, you can use the following code: Prior to using any methods from this class, you must do one of the following to ensure that this class is initialized: Wait for a @B_com#google#android#gms#maps#GoogleMap_E@ to become available from a @B_com#google#android#gms#maps#MapFragment_E@ or @B_com#google#android#gms#maps#MapView_E@ that you have added to your application. You can verify that the @B_com#google#android#gms#maps#GoogleMap_E@ is available by calling the getMap() method and checking that the returned object is not null. Call @B_com#google#android#gms#maps#MapsInitializer#initialize_E@. As long as a @B_com#google#android#gms#common#GooglePlayServicesNotAvailableException_E@ isn't thrown, this class will be correctly initialized. For more information, read the"}