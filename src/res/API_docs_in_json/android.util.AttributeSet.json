{"Functions": {"getAttributeFloatValue(int,float)": {"Returns": [["float", "Resulting value."]], "Parameters": [["int", "int: Index of the desired attribute, 0...count-1."], ["float", "float: What to return if the attribute isn't found."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the float value of attribute at 'index'.", "history": "Added in API level 1", "FullName": "public abstract float getAttributeFloatValue (int index, float defaultValue)"}, "getAttributeIntValue(int, int)": {"Returns": [["int", "Resulting value."]], "Parameters": [["int", "int: Index of the desired attribute, 0...count-1."], ["int", "int: What to return if the attribute isn't found."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the integer value of attribute at 'index'.", "history": "added in API level 1", "FullName": "public abstract int getAttributeIntValue (int index, int defaultValue)"}, "getStyleAttribute()": {"Returns": [["int", "The style attribute's resource identifier or 0."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the value of the \"style\" attribute or 0 if there is not one. Equivalent to getAttributeResourceValue(null, \"style\").", "history": "Added in API level 1", "FullName": "public abstract int getStyleAttribute ()"}, "getAttributeValue(java.lang.String,java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "A String containing the value of the attribute, or null if the attribute cannot be found."]], "Parameters": [["@B_java#lang#String_E@", "String: The namespace of the attribute to get the value from."], ["@B_java#lang#String_E@", "String: The name of the attribute to get the value from."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of the specified attribute as a string representation. The lookup is performed using the attribute name.", "history": "Added in API level 1", "FullName": "public abstract String getAttributeValue (String namespace, String name)"}, "getAttributeIntValue(java.lang.String,java.lang.String,int)": {"Returns": [["int", "Resulting value."]], "Parameters": [["@B_java#lang#String_E@", "String: Namespace of attribute to retrieve."], ["@B_java#lang#String_E@", "String: The attribute to retrieve."], ["int", "int: What to return if the attribute isn't found."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the integer value of 'attribute'.", "history": "Added in API level 1", "FullName": "public abstract int getAttributeIntValue (String namespace, String attribute, int defaultValue)"}, "getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)": {"Returns": [["int", "Resulting value."]], "Parameters": [["@B_java#lang#String_E@", "String: Namespace of attribute to retrieve."], ["@B_java#lang#String_E@", "String: The attribute to retrieve."], ["int", "int: What to return if the attribute isn't found."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the boolean value of 'attribute' that is formatted as an unsigned value. In particular, the formats 0xn...n and #n...n are handled.", "history": "Added in API level 1", "FullName": "public abstract int getAttributeUnsignedIntValue (String namespace, String attribute, int defaultValue)"}, "getAttributeName(int)": {"Returns": [["@B_java#lang#String_E@", "A String containing the name of the attribute, or null if the attribute cannot be found."]], "Parameters": [["int", "int: Index of the desired attribute, 0...count-1."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the name of the specified attribute. See also @B_org#xmlpull#v1#XmlPullParser#getAttributeName_E@, which this method corresponds to when parsing a compiled XML file.", "history": "Added in API level 1", "FullName": "public abstract String getAttributeName (int index)"}, "getAttributeBooleanValue(int,boolean)": {"Returns": [["boolean", "Resulting value."]], "Parameters": [["int", "int: Index of the desired attribute, 0...count-1."], ["boolean", "boolean: What to return if the attribute isn't found."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the boolean value of attribute at 'index'.", "history": "Added in API level 1", "FullName": "public abstract boolean getAttributeBooleanValue (int index, boolean defaultValue)"}, "getAttributeListValue(int,java.lang.String[],int)": {"Returns": [["int", "Index in to 'options' or defaultValue."]], "Parameters": [["int", "int: Index of the desired attribute, 0...count-1."], ["@B_java#lang#String_E@", "String: List of strings whose values we are checking against."], ["int", "int: Value returned if attribute doesn't exist or no match is found."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the index of the value of attribute at 'index' in the list 'options'.", "history": "Added in API level 1", "FullName": "public abstract int getAttributeListValue (int index, String[] options, int defaultValue)"}, "getAttributeResourceValue(int, int)": {"Returns": [["int", "Resulting value."]], "Parameters": [["int", "int: Index of the desired attribute, 0...count-1."], ["int", "int: What to return if the attribute isn't found."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the value of attribute at 'index' as a resource identifier. Note that this is different than @B_android#util#AttributeSet#getAttributeNameResource_E@ in that it returns the value contained in this attribute as a resource identifier (i.e., a value originally of the form \"@package:type/resource\"); the other method returns a resource identifier that identifies the name of the attribute.", "history": "added in API level 1", "FullName": "public abstract int getAttributeResourceValue (int index, int defaultValue)"}, "getIdAttribute()": {"Returns": [["@B_java#lang#String_E@", "The id attribute's value or null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the value of the \"id\" attribute or null if there is not one. Equivalent to getAttributeValue(null, \"id\").", "history": "Added in API level 1", "FullName": "public abstract String getIdAttribute ()"}, "getPositionDescription()": {"Returns": [["@B_java#lang#String_E@", "A string representation of the current position in the set, may be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a description of the current position of the attribute set. For instance, if the attribute set is loaded from an XML document, the position description could indicate the current line number.", "history": "Added in API level 1", "FullName": "public abstract String getPositionDescription ()"}, "getAttributeIntValue(int,int)": {"Returns": [["int", "Resulting value."]], "Parameters": [["int", "int: Index of the desired attribute, 0...count-1."], ["int", "int: What to return if the attribute isn't found."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the integer value of attribute at 'index'.", "history": "Added in API level 1", "FullName": "public abstract int getAttributeIntValue (int index, int defaultValue)"}, "getAttributeCount()": {"Returns": [["int", "A positive integer, or 0 if the set is empty."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of attributes available in the set. See also @B_org#xmlpull#v1#XmlPullParser#getAttributeCount_E@, which this method corresponds to when parsing a compiled XML file.", "history": "Added in API level 1", "FullName": "public abstract int getAttributeCount ()"}, "getAttributeUnsignedIntValue(int,int)": {"Returns": [["int", "Resulting value."]], "Parameters": [["int", "int: Index of the desired attribute, 0...count-1."], ["int", "int: What to return if the attribute isn't found."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the integer value of attribute at 'index' that is formatted as an unsigned value. In particular, the formats 0xn...n and #n...n are handled.", "history": "Added in API level 1", "FullName": "public abstract int getAttributeUnsignedIntValue (int index, int defaultValue)"}, "getAttributeResourceValue(int,int)": {"Returns": [["int", "Resulting value."]], "Parameters": [["int", "int: Index of the desired attribute, 0...count-1."], ["int", "int: What to return if the attribute isn't found."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the value of attribute at 'index' as a resource identifier. Note that this is different than @B_android#util#AttributeSet#getAttributeNameResource_E@ in that it returns the value contained in this attribute as a resource identifier (i.e., a value originally of the form \"@package:type/resource\"); the other method returns a resource identifier that identifies the name of the attribute.", "history": "Added in API level 1", "FullName": "public abstract int getAttributeResourceValue (int index, int defaultValue)"}, "getAttributeUnsignedIntValue(int, int)": {"Returns": [["int", "Resulting value."]], "Parameters": [["int", "int: Index of the desired attribute, 0...count-1."], ["int", "int: What to return if the attribute isn't found."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the integer value of attribute at 'index' that is formatted as an unsigned value. In particular, the formats 0xn...n and #n...n are handled.", "history": "added in API level 1", "FullName": "public abstract int getAttributeUnsignedIntValue (int index, int defaultValue)"}, "getAttributeNamespace(int)": {"Returns": [["@B_java#lang#String_E@", "A String containing the namespace of the attribute, or null if th attribute cannot be found."]], "Parameters": [["int", "int: Index of the desired attribute, 0...count-1."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the namespace of the specified attribute. See also @B_org#xmlpull#v1#XmlPullParser#getAttributeNamespace_E@, which this method corresponds to when parsing a compiled XML file.", "history": "Added in API level 28", "FullName": "public String getAttributeNamespace (int index)"}, "getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)": {"Returns": [["int", "Index in to 'options' or defaultValue."]], "Parameters": [["@B_java#lang#String_E@", "String: Namespace of attribute to retrieve."], ["@B_java#lang#String_E@", "String: Name of attribute to retrieve."], ["@B_java#lang#String_E@", "String: List of strings whose values we are checking against."], ["int", "int: Value returned if attribute doesn't exist or no match is found."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the index of the value of 'attribute' in the list 'options'.", "history": "Added in API level 1", "FullName": "public abstract int getAttributeListValue (String namespace, String attribute, String[] options, int defaultValue)"}, "getAttributeFloatValue(int, float)": {"Returns": [["float", "Resulting value."]], "Parameters": [["int", "int: Index of the desired attribute, 0...count-1."], ["float", "float: What to return if the attribute isn't found."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the float value of attribute at 'index'.", "history": "added in API level 1", "FullName": "public abstract float getAttributeFloatValue (int index, float defaultValue)"}, "getAttributeNameResource(int)": {"Returns": [["int", "The resource identifier, 0 if none."]], "Parameters": [["int", "int: Index of the desired attribute, 0...count-1."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the resource ID associated with the given attribute name. This will be the identifier for an attribute resource, which can be used by styles. Returns 0 if there is no resource associated with this attribute. Note that this is different than @B_android#util#AttributeSet#getAttributeResourceValue_E@ in that it returns a resource identifier for the attribute name; the other method returns this attribute's value as a resource identifier.", "history": "Added in API level 1", "FullName": "public abstract int getAttributeNameResource (int index)"}, "getAttributeValue(int)": {"Returns": [["@B_java#lang#String_E@", "A String containing the value of the attribute, or null if the attribute cannot be found."]], "Parameters": [["int", "int: Index of the desired attribute, 0...count-1."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of the specified attribute as a string representation.", "history": "Added in API level 1", "FullName": "public abstract String getAttributeValue (int index)"}, "getIdAttributeResourceValue(int)": {"Returns": [["int", "int Resulting value."]], "Parameters": [["int", "int: What to return if the \"id\" attribute isn't found."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the integer value of the \"id\" attribute or defaultValue if there is none. Equivalent to getAttributeResourceValue(null, \"id\", defaultValue);", "history": "Added in API level 1", "FullName": "public abstract int getIdAttributeResourceValue (int defaultValue)"}, "getAttributeFloatValue(java.lang.String,java.lang.String,float)": {"Returns": [["float", "Resulting value."]], "Parameters": [["@B_java#lang#String_E@", "String: Namespace of attribute to retrieve."], ["@B_java#lang#String_E@", "String: The attribute to retrieve."], ["float", "float: What to return if the attribute isn't found."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the float value of 'attribute'.", "history": "Added in API level 1", "FullName": "public abstract float getAttributeFloatValue (String namespace, String attribute, float defaultValue)"}, "getAttributeBooleanValue(int, boolean)": {"Returns": [["boolean", "Resulting value."]], "Parameters": [["int", "int: Index of the desired attribute, 0...count-1."], ["boolean", "boolean: What to return if the attribute isn't found."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the boolean value of attribute at 'index'.", "history": "added in API level 1", "FullName": "public abstract boolean getAttributeBooleanValue (int index, boolean defaultValue)"}, "getAttributeResourceValue(java.lang.String,java.lang.String,int)": {"Returns": [["int", "Resulting value."]], "Parameters": [["@B_java#lang#String_E@", "String: Namespace of attribute to retrieve."], ["@B_java#lang#String_E@", "String: The attribute to retrieve."], ["int", "int: What to return if the attribute isn't found."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the value of 'attribute' as a resource identifier. Note that this is different than @B_android#util#AttributeSet#getAttributeNameResource_E@ in that it returns the value contained in this attribute as a resource identifier (i.e., a value originally of the form \"@package:type/resource\"); the other method returns a resource identifier that identifies the name of the attribute.", "history": "Added in API level 1", "FullName": "public abstract int getAttributeResourceValue (String namespace, String attribute, int defaultValue)"}, "getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)": {"Returns": [["boolean", "Resulting value."]], "Parameters": [["@B_java#lang#String_E@", "String: Namespace of attribute to retrieve."], ["@B_java#lang#String_E@", "String: The attribute to retrieve."], ["boolean", "boolean: What to return if the attribute isn't found."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the boolean value of 'attribute'.", "history": "Added in API level 1", "FullName": "public abstract boolean getAttributeBooleanValue (String namespace, String attribute, boolean defaultValue)"}, "getClassAttribute()": {"Returns": [["@B_java#lang#String_E@", "The class attribute's value or null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the value of the \"class\" attribute or null if there is not one. Equivalent to getAttributeValue(null, \"class\").", "history": "Added in API level 1", "FullName": "public abstract String getClassAttribute ()"}}, "Inheritance": [], "ClassName": "android.util.AttributeSet", "ClassDesc": "A collection of attributes, as found associated with a tag in an XML document. Often you will not want to use this interface directly, instead passing it to @B_android#content#res#Resources#Theme#obtainStyledAttributes_E@ which will take care of parsing the attributes for you. In particular, the Resources API will convert resource references (attribute values such as \"@string/my_label\" in the original XML) to the desired type for you; if you use AttributeSet directly then you will need to manually check for resource references (with @B_android#util#AttributeSet#getAttributeResourceValue_E@) and do the resource lookup yourself if needed. Direct use of AttributeSet also prevents the application of themes and styles when retrieving attribute values. This interface provides an efficient mechanism for retrieving data from compiled XML files, which can be retrieved for a particular XmlPullParser through @B_android#util#Xml#asAttributeSet_E@. Normally this will return an implementation of the interface that works on top of a generic XmlPullParser, however it is more useful in conjunction with compiled XML resources: The implementation returned here, unlike using the implementation on top of a generic XmlPullParser, is highly optimized by retrieving pre-computed information that was generated by aapt when compiling your resources. For example, the @B_android#util#AttributeSet#getAttributeFloatValue_E@ method returns a floating point number previous stored in the compiled resource instead of parsing at runtime the string originally in the XML file. This interface also provides additional information contained in the compiled XML resource that is not available in a normal XML file, such as @B_android#util#AttributeSet#getAttributeNameResource_E@ which returns the resource identifier associated with a particular XML attribute name."}