{"Functions": {"setData(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [["@B_org#w3c#dom#DOMException_E@", "NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly."]], "SeeAlso": [], "Permissions": [], "Description": "The content of this processing instruction. This is from the first non white space character after the target to the character immediately preceding the ?>.", "history": "Added in API level 1", "FullName": "public abstract void setData (String data)"}, "getTarget()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The target of this processing instruction. XML defines this as being the first token following the markup that begins the processing instruction.", "history": "Added in API level 1", "FullName": "public abstract String getTarget ()"}, "getData()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The content of this processing instruction. This is from the first non white space character after the target to the character immediately preceding the ?>.", "history": "Added in API level 1", "FullName": "public abstract String getData ()"}}, "Inheritance": [], "ClassName": "org.w3c.dom.ProcessingInstruction", "ClassDesc": "The ProcessingInstruction interface represents a \"processing instruction\", used in XML as a way to keep processor-specific information in the text of the document. No lexical check is done on the content of a processing instruction and it is therefore possible to have the character sequence \"?>\" in the content, which is illegal a processing instruction per section 2.6 of [See also the"}