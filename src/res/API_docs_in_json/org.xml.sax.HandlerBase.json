{"Functions": {"endDocument()": {"Returns": [], "Parameters": [], "Throws": [["@B_org#xml#sax#SAXException_E@", "Any SAX exception, possibly wrapping another exception."]], "SeeAlso": ["@B_org#xml#sax#DocumentHandler#endDocument_E@"], "Permissions": [], "Description": "Receive notification of the end of the document. By default, do nothing. Application writers may override this method in a subclass to take specific actions at the beginning of a document (such as finalising a tree or closing an output file).", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public void endDocument ()"}, "startElement(java.lang.String,org.xml.sax.AttributeList)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The element type name."], ["@B_org#xml#sax#AttributeList_E@", "AttributeList: The specified or defaulted attributes."]], "Throws": [["@B_org#xml#sax#SAXException_E@", "Any SAX exception, possibly wrapping another exception."]], "SeeAlso": ["@B_org#xml#sax#DocumentHandler#startElement_E@"], "Permissions": [], "Description": "Receive notification of the start of an element. By default, do nothing. Application writers may override this method in a subclass to take specific actions at the start of each element (such as allocating a new tree node or writing output to a file).", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public void startElement (String name, AttributeList attributes)"}, "warning(org.xml.sax.SAXParseException)": {"Returns": [], "Parameters": [["@B_org#xml#sax#SAXParseException_E@", "SAXParseException: The warning information encoded as an exception."]], "Throws": [["@B_org#xml#sax#SAXException_E@", "Any SAX exception, possibly wrapping another exception."]], "SeeAlso": ["@B_org#xml#sax#ErrorHandler#warning_E@", "@B_org#xml#sax#SAXParseException_E@"], "Permissions": [], "Description": "Receive notification of a parser warning. The default implementation does nothing. Application writers may override this method in a subclass to take specific actions for each warning, such as inserting the message in a log file or printing it to the console.", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public void warning (SAXParseException e)"}, "notationDecl(java.lang.String,java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The notation name."], ["@B_java#lang#String_E@", "String: The notation public identifier, or null if not available."], ["@B_java#lang#String_E@", "String: The notation system identifier."]], "Throws": [], "SeeAlso": ["@B_org#xml#sax#DTDHandler#notationDecl_E@"], "Permissions": [], "Description": "Receive notification of a notation declaration. By default, do nothing. Application writers may override this method in a subclass if they wish to keep track of the notations declared in a document.", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public void notationDecl (String name, String publicId, String systemId)"}, "resolveEntity(java.lang.String,java.lang.String)": {"Returns": [["@B_org#xml#sax#InputSource_E@", "The new input source, or null to require the default behaviour."]], "Parameters": [["@B_java#lang#String_E@", "String: The public identifier, or null if none is available."], ["@B_java#lang#String_E@", "String: The system identifier provided in the XML document."]], "Throws": [["@B_org#xml#sax#SAXException_E@", "Any SAX exception, possibly wrapping another exception."]], "SeeAlso": ["@B_org#xml#sax#EntityResolver#resolveEntity_E@"], "Permissions": [], "Description": "Resolve an external entity. Always return null, so that the parser will use the system identifier provided in the XML document. This method implements the SAX default behaviour: application writers can override it in a subclass to do special translations such as catalog lookups or URI redirection.", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public InputSource resolveEntity (String publicId, String systemId)"}, "fatalError(org.xml.sax.SAXParseException)": {"Returns": [], "Parameters": [["@B_org#xml#sax#SAXParseException_E@", "SAXParseException: The error information encoded as an exception."]], "Throws": [["@B_org#xml#sax#SAXException_E@", "Any SAX exception, possibly wrapping another exception."]], "SeeAlso": ["@B_org#xml#sax#ErrorHandler#fatalError_E@", "@B_org#xml#sax#SAXParseException_E@"], "Permissions": [], "Description": "Report a fatal XML parsing error. The default implementation throws a SAXParseException. Application writers may override this method in a subclass if they need to take specific actions for each fatal error (such as collecting all of the errors into a single report): in any case, the application must stop all regular processing when this method is invoked, since the document is no longer reliable, and the parser may no longer report parsing events.", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public void fatalError (SAXParseException e)"}, "ignorableWhitespace(char[],int,int)": {"Returns": [], "Parameters": [["char[]", "char: The whitespace characters."], ["int", "int: The start position in the character array."], ["int", "int: The number of characters to use from the character array."]], "Throws": [["@B_org#xml#sax#SAXException_E@", "Any SAX exception, possibly wrapping another exception."]], "SeeAlso": ["@B_org#xml#sax#DocumentHandler#ignorableWhitespace_E@"], "Permissions": [], "Description": "Receive notification of ignorable whitespace in element content. By default, do nothing. Application writers may override this method to take specific actions for each chunk of ignorable whitespace (such as adding data to a node or buffer, or printing it to a file).", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public void ignorableWhitespace (char[] ch, int start, int length)"}, "resolveEntity(java.lang.String, java.lang.String)": {"Returns": [["@B_org#xml#sax#InputSource_E@", "The new input source, or null to require the default behaviour."]], "Parameters": [["@B_java#lang#String_E@", "String: The public identifier, or null if none is available."], ["@B_java#lang#String_E@", "String: The system identifier provided in the XML document."]], "Throws": [["@B_org#xml#sax#SAXException_E@", "Any SAX exception, possibly wrapping another exception."]], "SeeAlso": ["@B_org#xml#sax#EntityResolver#resolveEntity_E@"], "Permissions": [], "Description": "Resolve an external entity. Always return null, so that the parser will use the system identifier provided in the XML document. This method implements the SAX default behaviour: application writers can override it in a subclass to do special translations such as catalog lookups or URI redirection.", "history": "added in API level 1", "FullName": "public InputSource resolveEntity (String publicId, String systemId)"}, "unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The entity name."], ["@B_java#lang#String_E@", "String: The entity public identifier, or null if not available."], ["@B_java#lang#String_E@", "String: The entity system identifier."], ["@B_java#lang#String_E@", "String: The name of the associated notation."]], "Throws": [], "SeeAlso": ["@B_org#xml#sax#DTDHandler#unparsedEntityDecl_E@"], "Permissions": [], "Description": "Receive notification of an unparsed entity declaration. By default, do nothing. Application writers may override this method in a subclass to keep track of the unparsed entities declared in a document.", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public void unparsedEntityDecl (String name, String publicId, String systemId, String notationName)"}, "startDocument()": {"Returns": [], "Parameters": [], "Throws": [["@B_org#xml#sax#SAXException_E@", "Any SAX exception, possibly wrapping another exception."]], "SeeAlso": ["@B_org#xml#sax#DocumentHandler#startDocument_E@"], "Permissions": [], "Description": "Receive notification of the beginning of the document. By default, do nothing. Application writers may override this method in a subclass to take specific actions at the beginning of a document (such as allocating the root node of a tree or creating an output file).", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public void startDocument ()"}, "ignorableWhitespace(char[], int, int)": {"Returns": [], "Parameters": [["char[]", "char: The whitespace characters."], ["int", "int: The start position in the character array."], ["int", "int: The number of characters to use from the character array."]], "Throws": [["@B_org#xml#sax#SAXException_E@", "Any SAX exception, possibly wrapping another exception."]], "SeeAlso": ["@B_org#xml#sax#DocumentHandler#ignorableWhitespace_E@"], "Permissions": [], "Description": "Receive notification of ignorable whitespace in element content. By default, do nothing. Application writers may override this method to take specific actions for each chunk of ignorable whitespace (such as adding data to a node or buffer, or printing it to a file).", "history": "added in API level 1", "FullName": "public void ignorableWhitespace (char[] ch, int start, int length)"}, "error(org.xml.sax.SAXParseException)": {"Returns": [], "Parameters": [["@B_org#xml#sax#SAXParseException_E@", "SAXParseException: The warning information encoded as an exception."]], "Throws": [["@B_org#xml#sax#SAXException_E@", "Any SAX exception, possibly wrapping another exception."]], "SeeAlso": ["@B_org#xml#sax#ErrorHandler#warning_E@", "@B_org#xml#sax#SAXParseException_E@"], "Permissions": [], "Description": "Receive notification of a recoverable parser error. The default implementation does nothing. Application writers may override this method in a subclass to take specific actions for each error, such as inserting the message in a log file or printing it to the console.", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public void error (SAXParseException e)"}, "characters(char[], int, int)": {"Returns": [], "Parameters": [["char[]", "char: The characters."], ["int", "int: The start position in the character array."], ["int", "int: The number of characters to use from the character array."]], "Throws": [["@B_org#xml#sax#SAXException_E@", "Any SAX exception, possibly wrapping another exception."]], "SeeAlso": ["@B_org#xml#sax#DocumentHandler#characters_E@"], "Permissions": [], "Description": "Receive notification of character data inside an element. By default, do nothing. Application writers may override this method to take specific actions for each chunk of character data (such as adding the data to a node or buffer, or printing it to a file).", "history": "added in API level 1", "FullName": "public void characters (char[] ch, int start, int length)"}, "endElement(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the element name"]], "Throws": [["@B_org#xml#sax#SAXException_E@", "Any SAX exception, possibly wrapping another exception."]], "SeeAlso": ["@B_org#xml#sax#DocumentHandler#endElement_E@"], "Permissions": [], "Description": "Receive notification of the end of an element. By default, do nothing. Application writers may override this method in a subclass to take specific actions at the end of each element (such as finalising a tree node or writing output to a file).", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public void endElement (String name)"}, "characters(char[],int,int)": {"Returns": [], "Parameters": [["char[]", "char: The characters."], ["int", "int: The start position in the character array."], ["int", "int: The number of characters to use from the character array."]], "Throws": [["@B_org#xml#sax#SAXException_E@", "Any SAX exception, possibly wrapping another exception."]], "SeeAlso": ["@B_org#xml#sax#DocumentHandler#characters_E@"], "Permissions": [], "Description": "Receive notification of character data inside an element. By default, do nothing. Application writers may override this method to take specific actions for each chunk of character data (such as adding the data to a node or buffer, or printing it to a file).", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public void characters (char[] ch, int start, int length)"}, "setDocumentLocator(org.xml.sax.Locator)": {"Returns": [], "Parameters": [["@B_org#xml#sax#Locator_E@", "Locator: A locator for all SAX document events."]], "Throws": [], "SeeAlso": ["@B_org#xml#sax#DocumentHandler#setDocumentLocator_E@", "@B_org#xml#sax#Locator_E@"], "Permissions": [], "Description": "Receive a Locator object for document events. By default, do nothing. Application writers may override this method in a subclass if they wish to store the locator for use with other document events.", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public void setDocumentLocator (Locator locator)"}, "processingInstruction(java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The processing instruction target."], ["@B_java#lang#String_E@", "String: The processing instruction data, or null if none is supplied."]], "Throws": [["@B_org#xml#sax#SAXException_E@", "Any SAX exception, possibly wrapping another exception."]], "SeeAlso": ["@B_org#xml#sax#DocumentHandler#processingInstruction_E@"], "Permissions": [], "Description": "Receive notification of a processing instruction. By default, do nothing. Application writers may override this method in a subclass to take specific actions for each processing instruction, such as setting status variables or invoking other methods.", "history": "Added in API level 1 Deprecated in API level 9", "FullName": "public void processingInstruction (String target, String data)"}, "HandlerBase()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public HandlerBase ()"}}, "Inheritance": [], "ClassName": "org.xml.sax.HandlerBase", "ClassDesc": "This class works with the deprecated @B_org#xml#sax#DocumentHandler_E@ interface. It has been replaced by the SAX2 @B_org#xml#sax#helpers#DefaultHandler_E@ class. Default base class for handlers. This class implements the default behaviour for four SAX1 interfaces: EntityResolver, DTDHandler, DocumentHandler, and ErrorHandler. It is now obsolete, but is included in SAX2 to support legacy SAX1 applications. SAX2 applications should use the @B_org#xml#sax#helpers#DefaultHandler_E@ class instead. Application writers can extend this class when they need to implement only part of an interface; parser writers can instantiate this class to provide default handlers when the application has not supplied its own. Note that the use of this class is optional."}