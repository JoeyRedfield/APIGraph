{"Functions": {"Spannable.Factory()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public Spannable.Factory ()"}, "newSpannable(java.lang.CharSequence)": {"Returns": [["@B_android#text#Spannable_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a new SpannableString from the specified CharSequence. You can override this to provide a different kind of Spannable.", "history": "Added in API level 1", "FullName": "public Spannable newSpannable (CharSequence source)"}, "getInstance()": {"Returns": [["@B_android#text#Spannable#Factory_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the standard Spannable Factory.", "history": "Added in API level 1", "FullName": "public static Spannable.Factory getInstance ()"}}, "Inheritance": [], "ClassName": "android.text.Spannable.Factory", "ClassDesc": "Factory used by TextView to create new @B_android#text#Spannable_E@. You can subclass it to provide something other than @B_android#text#SpannableString_E@."}