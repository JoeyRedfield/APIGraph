{"Functions": {"scrollToPosition(int)": {"Returns": [["@B_android#support#test#espresso#ViewAction_E@", "no returns description in source"]], "Parameters": [["int", "int: the position of the view to scroll to"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_android#support#test#espresso#ViewAction_E@ which scrolls @B_android#support#v7#widget#RecyclerView_E@ to a position.", "history": "", "FullName": "ViewAction scrollToPosition (int position)"}, "scrollToHolder(org.hamcrest.Matcher<VH>)": {"Returns": [["@B_android#support#test#espresso#contrib#RecyclerViewActions#PositionableRecyclerViewAction_E@", "no returns description in source"]], "Parameters": [["Matcher", "Matcher: a Matcher that matches an item view holder in @B_android#support#v7#widget#RecyclerView_E@"]], "Throws": [["@B_android#support#test#espresso#PerformException_E@", "if there are more than one items matching given viewHolderMatcher."]], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_android#support#test#espresso#ViewAction_E@ which scrolls @B_android#support#v7#widget#RecyclerView_E@ to the view matched by viewHolderMatcher. This approach uses @B_android#support#v7#widget#RecyclerView#ViewHolder_E@s to find the target view. It will create one ViewHolder per item type and bind adapter data to the ViewHolder. If the itemViewMatcher matches a ViewHolder the current position of the View is used to perform a @B_android#support#v7#widget#RecyclerView#scrollToPosition_E@. Note: scrollTo method is not overloaded, method overloading with generic parameters is not possible.", "history": "", "FullName": "RecyclerViewActions.PositionableRecyclerViewAction scrollToHolder (Matcher<VH> viewHolderMatcher)"}, "scrollTo(org.hamcrest.Matcher<android.view.View>)": {"Returns": [["@B_android#support#test#espresso#contrib#RecyclerViewActions#PositionableRecyclerViewAction_E@", "no returns description in source"]], "Parameters": [["Matcher", "Matcher: a Matcher that matches an item view in @B_android#support#v7#widget#RecyclerView_E@"]], "Throws": [["@B_android#support#test#espresso#PerformException_E@", "if there are more than one items matching given viewHolderMatcher."]], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_android#support#test#espresso#ViewAction_E@ which scrolls @B_android#support#v7#widget#RecyclerView_E@ to the view matched by itemViewMatcher. This approach uses @B_android#support#v7#widget#RecyclerView#ViewHolder_E@s to find the target view. It will create one ViewHolder per item type and bind adapter data to the ViewHolder. If the itemViewMatcher matches a ViewHolder the current position of the View is used to perform a @B_android#support#v7#widget#RecyclerView#scrollToPosition_E@.", "history": "", "FullName": "RecyclerViewActions.PositionableRecyclerViewAction scrollTo (Matcher<View> itemViewMatcher)"}}, "Inheritance": ["https:##developer#android#com@B_java#lang#Object_E@"], "ClassName": "android.support.test.espresso.contrib.RecyclerViewActions", "ClassDesc": "@B_android#support#test#espresso#ViewAction_E@s to interact @B_android#support#v7#widget#RecyclerView_E@. RecyclerView works differently than https:##developer#android#com@B_android#widget#AdapterView_E@. In fact, RecyclerView is not an AdapterView anymore, hence it can't be used in combination with @B_android#support#test#espresso#Espresso#onData_E@. To use @B_android#support#test#espresso#ViewAction_E@s in this class use @B_android#support#test#espresso#Espresso#onView_E@ with a @B_android#support#v7#widget#RecyclerView_E@, then perform a @B_android#support#test#espresso#ViewAction_E@ from this class."}