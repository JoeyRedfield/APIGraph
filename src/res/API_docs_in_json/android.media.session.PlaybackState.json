{"Functions": {"writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 21", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getPosition()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the current playback position in ms.", "history": "Added in API level 21", "FullName": "public long getPosition ()"}, "getCustomActions()": {"Returns": [["@B_java#util#List_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the list of custom actions.", "history": "Added in API level 21", "FullName": "public List<PlaybackState.CustomAction> getCustomActions ()"}, "getState()": {"Returns": [["int", "Value is @B_android#media#session#PlaybackState#STATE_NONE_E@, @B_android#media#session#PlaybackState#STATE_STOPPED_E@, @B_android#media#session#PlaybackState#STATE_PAUSED_E@, @B_android#media#session#PlaybackState#STATE_PLAYING_E@, @B_android#media#session#PlaybackState#STATE_FAST_FORWARDING_E@, @B_android#media#session#PlaybackState#STATE_REWINDING_E@, @B_android#media#session#PlaybackState#STATE_BUFFERING_E@, @B_android#media#session#PlaybackState#STATE_ERROR_E@, @B_android#media#session#PlaybackState#STATE_CONNECTING_E@, @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_PREVIOUS_E@, @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_NEXT_E@, or @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_QUEUE_ITEM_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the current state of playback. One of the following: @B_android#media#session#PlaybackState#STATE_NONE_E@ @B_android#media#session#PlaybackState#STATE_STOPPED_E@ @B_android#media#session#PlaybackState#STATE_PLAYING_E@ @B_android#media#session#PlaybackState#STATE_PAUSED_E@ @B_android#media#session#PlaybackState#STATE_FAST_FORWARDING_E@ @B_android#media#session#PlaybackState#STATE_REWINDING_E@ @B_android#media#session#PlaybackState#STATE_BUFFERING_E@ @B_android#media#session#PlaybackState#STATE_ERROR_E@ @B_android#media#session#PlaybackState#STATE_CONNECTING_E@ @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_PREVIOUS_E@ @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_NEXT_E@ @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_QUEUE_ITEM_E@", "history": "Added in API level 21", "FullName": "public int getState ()"}, "getLastPositionUpdateTime()": {"Returns": [["long", "The last time the position was updated."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the elapsed real time at which position was last updated. If the position has never been set this will return 0;", "history": "Added in API level 21", "FullName": "public long getLastPositionUpdateTime ()"}, "getPlaybackSpeed()": {"Returns": [["float", "The current speed of playback."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the current playback speed as a multiple of normal playback. This should be negative when rewinding. A value of 1 means normal playback and 0 means paused.", "history": "Added in API level 21", "FullName": "public float getPlaybackSpeed ()"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 21", "FullName": "public int describeContents ()"}, "getActiveQueueItemId()": {"Returns": [["long", "The id of the currently active item in the queue or @B_android#media#session#MediaSession#QueueItem#UNKNOWN_ID_E@."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the id of the currently active item in the queue. If there is no queue or a queue is not supported by the session this will be @B_android#media#session#MediaSession#QueueItem#UNKNOWN_ID_E@.", "history": "Added in API level 21", "FullName": "public long getActiveQueueItemId ()"}, "getExtras()": {"Returns": [["@B_android#os#Bundle_E@", "The extras for this state or null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get any custom extras that were set on this playback state.", "history": "Added in API level 22", "FullName": "public Bundle getExtras ()"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 21", "FullName": "public String toString ()"}, "getErrorMessage()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get a user readable error message. This should be set when the state is @B_android#media#session#PlaybackState#STATE_ERROR_E@.", "history": "Added in API level 21", "FullName": "public CharSequence getErrorMessage ()"}, "getBufferedPosition()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the current buffered position in ms. This is the farthest playback point that can be reached from the current position using only buffered content.", "history": "Added in API level 21", "FullName": "public long getBufferedPosition ()"}, "getActions()": {"Returns": [["long", "Value is either 0 or a combination of @B_android#media#session#PlaybackState#ACTION_STOP_E@, @B_android#media#session#PlaybackState#ACTION_PAUSE_E@, @B_android#media#session#PlaybackState#ACTION_PLAY_E@, @B_android#media#session#PlaybackState#ACTION_REWIND_E@, @B_android#media#session#PlaybackState#ACTION_SKIP_TO_PREVIOUS_E@, @B_android#media#session#PlaybackState#ACTION_SKIP_TO_NEXT_E@, @B_android#media#session#PlaybackState#ACTION_FAST_FORWARD_E@, @B_android#media#session#PlaybackState#ACTION_SET_RATING_E@, @B_android#media#session#PlaybackState#ACTION_SEEK_TO_E@, @B_android#media#session#PlaybackState#ACTION_PLAY_PAUSE_E@, @B_android#media#session#PlaybackState#ACTION_PLAY_FROM_MEDIA_ID_E@, @B_android#media#session#PlaybackState#ACTION_PLAY_FROM_SEARCH_E@, @B_android#media#session#PlaybackState#ACTION_SKIP_TO_QUEUE_ITEM_E@, @B_android#media#session#PlaybackState#ACTION_PLAY_FROM_URI_E@, @B_android#media#session#PlaybackState#ACTION_PREPARE_E@, @B_android#media#session#PlaybackState#ACTION_PREPARE_FROM_MEDIA_ID_E@, @B_android#media#session#PlaybackState#ACTION_PREPARE_FROM_SEARCH_E@, and @B_android#media#session#PlaybackState#ACTION_PREPARE_FROM_URI_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the current actions available on this session. This should use a bitmask of the available actions. @B_android#media#session#PlaybackState#ACTION_SKIP_TO_PREVIOUS_E@ @B_android#media#session#PlaybackState#ACTION_REWIND_E@ @B_android#media#session#PlaybackState#ACTION_PLAY_E@ @B_android#media#session#PlaybackState#ACTION_PAUSE_E@ @B_android#media#session#PlaybackState#ACTION_STOP_E@ @B_android#media#session#PlaybackState#ACTION_FAST_FORWARD_E@ @B_android#media#session#PlaybackState#ACTION_SKIP_TO_NEXT_E@ @B_android#media#session#PlaybackState#ACTION_SEEK_TO_E@ @B_android#media#session#PlaybackState#ACTION_SET_RATING_E@ @B_android#media#session#PlaybackState#ACTION_PLAY_PAUSE_E@ @B_android#media#session#PlaybackState#ACTION_PLAY_FROM_MEDIA_ID_E@ @B_android#media#session#PlaybackState#ACTION_PLAY_FROM_SEARCH_E@ @B_android#media#session#PlaybackState#ACTION_SKIP_TO_QUEUE_ITEM_E@ @B_android#media#session#PlaybackState#ACTION_PLAY_FROM_URI_E@ @B_android#media#session#PlaybackState#ACTION_PREPARE_E@ @B_android#media#session#PlaybackState#ACTION_PREPARE_FROM_MEDIA_ID_E@ @B_android#media#session#PlaybackState#ACTION_PREPARE_FROM_SEARCH_E@ @B_android#media#session#PlaybackState#ACTION_PREPARE_FROM_URI_E@", "history": "Added in API level 21", "FullName": "public long getActions ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 21", "FullName": "public void writeToParcel (Parcel dest, int flags)"}}, "Inheritance": [], "ClassName": "android.media.session.PlaybackState", "ClassDesc": "Playback state for a @B_android#media#session#MediaSession_E@. This includes a state like @B_android#media#session#PlaybackState#STATE_PLAYING_E@, the current playback position, and the current control capabilities."}