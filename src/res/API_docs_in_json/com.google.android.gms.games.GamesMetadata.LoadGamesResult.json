{"Functions": {"getGames()": {"Returns": [["", "The game metadata that was requested. This is guaranteed to be non-null, though it may be empty. The listener must close this object when finished."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public abstract GameBuffer getGames ()"}}, "Inheritance": [], "ClassName": "com.google.android.gms.games.GamesMetadata.LoadGamesResult", "ClassDesc": "Result delivered when game metadata has been loaded. Possible status codes include: @B_com#google#android#gms#games#GamesStatusCodes#STATUS_OK_E@ if data was successfully loaded and is up-to-date. @B_com#google#android#gms#games#GamesStatusCodes#STATUS_NETWORK_ERROR_NO_DATA_E@ if the device was unable to retrieve any data from the network and has no data cached locally. @B_com#google#android#gms#games#GamesStatusCodes#STATUS_NETWORK_ERROR_STALE_DATA_E@ if the device was unable to retrieve the latest data from the network, but has some data cached locally. @B_com#google#android#gms#games#GamesStatusCodes#STATUS_CLIENT_RECONNECT_REQUIRED_E@ if the client needs to reconnect to the service to access this data. @B_com#google#android#gms#games#GamesStatusCodes#STATUS_GAME_NOT_FOUND_E@ if the game could not be found. @B_com#google#android#gms#games#GamesStatusCodes#STATUS_LICENSE_CHECK_FAILED_E@ if the game is not licensed to the user. @B_com#google#android#gms#games#GamesStatusCodes#STATUS_INTERNAL_ERROR_E@ if an unexpected error occurred in the service."}