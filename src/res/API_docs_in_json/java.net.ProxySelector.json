{"Functions": {"select(java.net.URI)": {"Returns": [["@B_java#util#List_E@", "a List of Proxies. Each element in the the List is of type @B_java#net#Proxy_E@; when no proxy is available, the list will contain one element of type @B_java#net#Proxy_E@ that represents a direct connection."]], "Parameters": [["@B_java#net#URI_E@", "URI: The URI that a connection is required to"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the argument is null"]], "SeeAlso": [], "Permissions": [], "Description": "Selects all the applicable proxies based on the protocol to access the resource with and a destination address to access the resource at. The format of the URI is defined as follow: http URI for http connections https URI for https connections socket://host:port for tcp client sockets connections", "history": "Added in API level 1", "FullName": "public abstract List<Proxy> select (URI uri)"}, "connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)": {"Returns": [], "Parameters": [["@B_java#net#URI_E@", "URI: The URI that the proxy at sa failed to serve."], ["@B_java#net#SocketAddress_E@", "SocketAddress: The socket address of the proxy/SOCKS server"], ["@B_java#io#IOException_E@", "IOException: The I/O exception thrown when the connect failed."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if either argument is null"]], "SeeAlso": [], "Permissions": [], "Description": "Called to indicate that a connection could not be established to a proxy/socks server. An implementation of this method can temporarily remove the proxies or reorder the sequence of proxies returned by @B_java#net#ProxySelector#select_E@, using the address and the IOException caught when trying to connect.", "history": "Added in API level 1", "FullName": "public abstract void connectFailed (URI uri, SocketAddress sa, IOException ioe)"}, "getDefault()": {"Returns": [["@B_java#net#ProxySelector_E@", "the system-wide ProxySelector"]], "Parameters": [], "Throws": [["@B_java#lang#SecurityException_E@", "If a security manager has been installed and it denies @B_java#net#NetPermission_E@(\"getProxySelector\")"]], "SeeAlso": ["@B_java#net#ProxySelector#setDefault_E@"], "Permissions": [], "Description": "Gets the system-wide proxy selector.", "history": "Added in API level 1", "FullName": "public static ProxySelector getDefault ()"}, "setDefault(java.net.ProxySelector)": {"Returns": [], "Parameters": [["@B_java#net#ProxySelector_E@", "ProxySelector: The HTTP proxy selector, or null to unset the proxy selector."]], "Throws": [["@B_java#lang#SecurityException_E@", "If a security manager has been installed and it denies @B_java#net#NetPermission_E@(\"setProxySelector\")"]], "SeeAlso": ["@B_java#net#ProxySelector#getDefault_E@"], "Permissions": [], "Description": "Sets (or unsets) the system-wide proxy selector. Note: non-standard protocol handlers may ignore this setting.", "history": "Added in API level 1", "FullName": "public static void setDefault (ProxySelector ps)"}, "ProxySelector()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public ProxySelector ()"}}, "Inheritance": [], "ClassName": "java.net.ProxySelector", "ClassDesc": "Selects the proxy server to use, if any, when connecting to the network resource referenced by a URL. A proxy selector is a concrete sub-class of this class and is registered by invoking the @B_java#net#ProxySelector#setDefault_E@ method. The currently registered proxy selector can be retrieved by calling @B_java#net#ProxySelector#getDefault_E@ method. When a proxy selector is registered, for instance, a subclass of URLConnection class should call the @B_java#net#ProxySelector#select_E@ method for each URL request so that the proxy selector can decide if a direct, or proxied connection should be used. The @B_java#net#ProxySelector#select_E@ method returns an iterator over a collection with the preferred connection approach. If a connection cannot be established to a proxy (PROXY or SOCKS) servers then the caller should call the proxy selector's @B_java#net#ProxySelector#connectFailed_E@ method to notify the proxy selector that the proxy server is unavailable. The default proxy selector does enforce a"}