{"Functions": {"onLoadComplete(android.content.Loader<D>, D)": {"Returns": [], "Parameters": [["@B_android#content#Loader_E@", "Loader: the loader that completed the load"], ["D", "D: the result of the load"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called on the thread that created the Loader when the load is complete.", "history": "added in API level 11", "FullName": "public abstract void onLoadComplete (Loader<D> loader, D data)"}, "onLoadComplete(android.content.Loader<D>,D)": {"Returns": [], "Parameters": [["@B_android#content#Loader_E@", "Loader: the loader that completed the load"], ["D", "D: the result of the load"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called on the thread that created the Loader when the load is complete.", "history": "Added in API level 11 Deprecated in API level 28", "FullName": "public abstract void onLoadComplete (Loader<D> loader, D data)"}}, "Inheritance": [], "ClassName": "android.content.Loader.OnLoadCompleteListener<D>", "ClassDesc": "Use https:##developer#android#com@B_android#support#v4#content#Loader#OnLoadCompleteListener_E@ Interface that is implemented to discover when a Loader has finished loading its data. You do not normally need to implement this yourself; it is used in the implementation of @B_android#app#LoaderManager_E@ to find out when a Loader it is managing has completed so that this can be reported to its client. This interface should only be used if a Loader is not being used in conjunction with LoaderManager."}