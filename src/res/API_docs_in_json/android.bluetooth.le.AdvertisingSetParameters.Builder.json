{"Functions": {"setScannable(boolean)": {"Returns": [["@B_android#bluetooth#le#AdvertisingSetParameters#Builder_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean: Controls whether the advertisement type will be scannable (true) or non-scannable (false)."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set whether the advertisement type should be scannable. Legacy advertisements can be both connectable and scannable. Non-legacy advertisements can be only scannable or only connectable.", "history": "Added in API level 26", "FullName": "public AdvertisingSetParameters.Builder setScannable (boolean scannable)"}, "setTxPowerLevel(int)": {"Returns": [["@B_android#bluetooth#le#AdvertisingSetParameters#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: Transmission power of Bluetooth LE Advertising, in dBm. The valid range is [-127, 1] Recommended values are: @B_android#bluetooth#le#AdvertisingSetParameters#TX_POWER_ULTRA_LOW_E@, @B_android#bluetooth#le#AdvertisingSetParameters#TX_POWER_LOW_E@, @B_android#bluetooth#le#AdvertisingSetParameters#TX_POWER_MEDIUM_E@, or @B_android#bluetooth#le#AdvertisingSetParameters#TX_POWER_HIGH_E@."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the txPowerLevel is invalid."]], "SeeAlso": [], "Permissions": [], "Description": "Set the transmission power level for the advertising.", "history": "Added in API level 26", "FullName": "public AdvertisingSetParameters.Builder setTxPowerLevel (int txPowerLevel)"}, "setLegacyMode(boolean)": {"Returns": [["@B_android#bluetooth#le#AdvertisingSetParameters#Builder_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean: whether legacy advertising mode should be used."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "When set to true, advertising set will advertise 4.x Spec compliant advertisements.", "history": "Added in API level 26", "FullName": "public AdvertisingSetParameters.Builder setLegacyMode (boolean isLegacy)"}, "setPrimaryPhy(int)": {"Returns": [["@B_android#bluetooth#le#AdvertisingSetParameters#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: Primary advertising physical channel, can only be @B_android#bluetooth#BluetoothDevice#PHY_LE_1M_E@ or @B_android#bluetooth#BluetoothDevice#PHY_LE_CODED_E@."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the primaryPhy is invalid."]], "SeeAlso": [], "Permissions": [], "Description": "Set the primary physical channel used for this advertising set. This is used only if legacy mode is not used. Use @B_android#bluetooth#BluetoothAdapter#isLeCodedPhySupported_E@ to determine if LE Coded PHY is supported on this device.", "history": "Added in API level 26", "FullName": "public AdvertisingSetParameters.Builder setPrimaryPhy (int primaryPhy)"}, "setConnectable(boolean)": {"Returns": [["@B_android#bluetooth#le#AdvertisingSetParameters#Builder_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean: Controls whether the advertisement type will be connectable (true) or non-connectable (false)."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set whether the advertisement type should be connectable or non-connectable. Legacy advertisements can be both connectable and scannable. Non-legacy advertisements can be only scannable or only connectable.", "history": "Added in API level 26", "FullName": "public AdvertisingSetParameters.Builder setConnectable (boolean connectable)"}, "setSecondaryPhy(int)": {"Returns": [["@B_android#bluetooth#le#AdvertisingSetParameters#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: Secondary advertising physical channel, can only be one of @B_android#bluetooth#BluetoothDevice#PHY_LE_1M_E@, @B_android#bluetooth#BluetoothDevice#PHY_LE_2M_E@ or @B_android#bluetooth#BluetoothDevice#PHY_LE_CODED_E@."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the secondaryPhy is invalid."]], "SeeAlso": [], "Permissions": [], "Description": "Set the secondary physical channel used for this advertising set. This is used only if legacy mode is not used. Use @B_android#bluetooth#BluetoothAdapter#isLeCodedPhySupported_E@ and @B_android#bluetooth#BluetoothAdapter#isLe2MPhySupported_E@ to determine if LE Coded PHY or 2M PHY is supported on this device.", "history": "Added in API level 26", "FullName": "public AdvertisingSetParameters.Builder setSecondaryPhy (int secondaryPhy)"}, "setAnonymous(boolean)": {"Returns": [["@B_android#bluetooth#le#AdvertisingSetParameters#Builder_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean: whether anonymous advertising should be used."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set whether advertiser address should be ommited from all packets. If this mode is used, periodic advertising can't be enabled for this set. This is used only if legacy mode is not used.", "history": "Added in API level 26", "FullName": "public AdvertisingSetParameters.Builder setAnonymous (boolean isAnonymous)"}, "setInterval(int)": {"Returns": [["@B_android#bluetooth#le#AdvertisingSetParameters#Builder_E@", "no returns description in source"]], "Parameters": [["int", "int: Bluetooth LE Advertising interval, in 0.625ms unit. Valid range is from 160 (100ms) to 16777215 (10,485.759375 s). Recommended values are: @B_android#bluetooth#le#AdvertisingSetParameters#INTERVAL_LOW_E@, @B_android#bluetooth#le#AdvertisingSetParameters#INTERVAL_MEDIUM_E@, or @B_android#bluetooth#le#AdvertisingSetParameters#INTERVAL_HIGH_E@."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the interval is invalid."]], "SeeAlso": [], "Permissions": [], "Description": "Set advertising interval.", "history": "Added in API level 26", "FullName": "public AdvertisingSetParameters.Builder setInterval (int interval)"}, "setIncludeTxPower(boolean)": {"Returns": [["@B_android#bluetooth#le#AdvertisingSetParameters#Builder_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean: whether TX power should be included in extended header"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set whether TX power should be included in the extended header. This is used only if legacy mode is not used.", "history": "Added in API level 26", "FullName": "public AdvertisingSetParameters.Builder setIncludeTxPower (boolean includeTxPower)"}, "build()": {"Returns": [["@B_android#bluetooth#le#AdvertisingSetParameters_E@", "no returns description in source"]], "Parameters": [], "Throws": [["@B_java#lang#IllegalStateException_E@", "if invalid combination of parameters is used."]], "SeeAlso": [], "Permissions": [], "Description": "Build the @B_android#bluetooth#le#AdvertisingSetParameters_E@ object.", "history": "Added in API level 26", "FullName": "public AdvertisingSetParameters build ()"}, "AdvertisingSetParameters.Builder()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 26", "FullName": "public AdvertisingSetParameters.Builder ()"}}, "Inheritance": [], "ClassName": "android.bluetooth.le.AdvertisingSetParameters.Builder", "ClassDesc": "Builder class for @B_android#bluetooth#le#AdvertisingSetParameters_E@."}