{"Functions": {"getTextFontWeight()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the text font weight specified by this span, or -1 if it does not specify one.", "history": "Added in API level 29", "FullName": "public int getTextFontWeight ()"}, "getTextLocales()": {"Returns": [["@B_android#os#LocaleList_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#os#LocaleList_E@ specified by this span, or null if it does not specify one.", "history": "Added in API level 29", "FullName": "public LocaleList getTextLocales ()"}, "TextAppearanceSpan(java.lang.String,int,int,android.content.res.ColorStateList,android.content.res.ColorStateList)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["@B_android#content#res#ColorStateList_E@", "ColorStateList no parameter comment"], ["@B_android#content#res#ColorStateList_E@", "ColorStateList no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Makes text be drawn with the specified typeface, size, style, and colors.", "history": "Added in API level 1", "FullName": "public TextAppearanceSpan (String family, int style, int size, ColorStateList color, ColorStateList linkColor)"}, "getFontFeatureSettings()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the font feature settings specified by this span, or null if it does not specify one.", "history": "Added in API level 29", "FullName": "public String getFontFeatureSettings ()"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 3", "FullName": "public int describeContents ()"}, "getTypeface()": {"Returns": [["@B_android#graphics#Typeface_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the typeface specified by this span, or null if it does not specify one.", "history": "Added in API level 29", "FullName": "public Typeface getTypeface ()"}, "TextAppearanceSpan(android.content.Context,int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Uses the specified TextAppearance resource to determine the text appearance. The appearance should be, for example, android.R.style.TextAppearance_Small.", "history": "Added in API level 1", "FullName": "public TextAppearanceSpan (Context context, int appearance)"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 3", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getFontVariationSettings()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the font variation settings specified by this span, or null if it does not specify one.", "history": "Added in API level 29", "FullName": "public String getFontVariationSettings ()"}, "getShadowDx()": {"Returns": [["float", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the horizontal offset of the text shadow specified by this span, or 0.0f if it does not specify one.", "history": "Added in API level 29", "FullName": "public float getShadowDx ()"}, "isElegantTextHeight()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of elegant height metrics flag specified by this span, or false if it does not specify one.", "history": "Added in API level 29", "FullName": "public boolean isElegantTextHeight ()"}, "getFamily()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the typeface family specified by this span, or null if it does not specify one.", "history": "Added in API level 1", "FullName": "public String getFamily ()"}, "TextAppearanceSpan(android.content.Context,int,int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Uses the specified TextAppearance resource to determine the text appearance, and the specified text color resource to determine the color. The appearance should be, for example, android.R.style.TextAppearance_Small, and the colorList should be, for example, android.R.styleable.Theme_textColorPrimary.", "history": "Added in API level 1", "FullName": "public TextAppearanceSpan (Context context, int appearance, int colorList)"}, "getTextSize()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the text size specified by this span, or -1 if it does not specify one.", "history": "Added in API level 1", "FullName": "public int getTextSize ()"}, "updateDrawState(android.text.TextPaint)": {"Returns": [], "Parameters": [["@B_android#text#TextPaint_E@", "TextPaint no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public void updateDrawState (TextPaint ds)"}, "getShadowRadius()": {"Returns": [["float", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the blur radius of the text shadow specified by this span, or 0.0f if it does not specify one.", "history": "Added in API level 29", "FullName": "public float getShadowRadius ()"}, "getShadowDy()": {"Returns": [["float", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the vertical offset of the text shadow specified by this span, or 0.0f if it does not specify one.", "history": "Added in API level 29", "FullName": "public float getShadowDy ()"}, "TextAppearanceSpan(android.content.Context, int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Uses the specified TextAppearance resource to determine the text appearance. The appearance should be, for example, android.R.style.TextAppearance_Small.", "history": "added in API level 1", "FullName": "public TextAppearanceSpan (Context context, int appearance)"}, "getShadowColor()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the color of the text shadow specified by this span, or 0 if it does not specify one.", "history": "Added in API level 29", "FullName": "public int getShadowColor ()"}, "getLinkTextColor()": {"Returns": [["@B_android#content#res#ColorStateList_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the link color specified by this span, or null if it does not specify one.", "history": "Added in API level 1", "FullName": "public ColorStateList getLinkTextColor ()"}, "getTextColor()": {"Returns": [["@B_android#content#res#ColorStateList_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the text color specified by this span, or null if it does not specify one.", "history": "Added in API level 1", "FullName": "public ColorStateList getTextColor ()"}, "getSpanTypeId()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a special type identifier for this span class.", "history": "Added in API level 3", "FullName": "public int getSpanTypeId ()"}, "updateMeasureState(android.text.TextPaint)": {"Returns": [], "Parameters": [["@B_android#text#TextPaint_E@", "TextPaint: the paint used for drawing the text This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Classes that extend MetricAffectingSpan implement this method to update the text formatting in a way that can change the width or height of characters.", "history": "Added in API level 1", "FullName": "public void updateMeasureState (TextPaint ds)"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 3", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "TextAppearanceSpan(android.os.Parcel)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 3", "FullName": "public TextAppearanceSpan (Parcel src)"}, "getTextStyle()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the text style specified by this span, or 0 if it does not specify one.", "history": "Added in API level 1", "FullName": "public int getTextStyle ()"}}, "Inheritance": ["@B_android#text#style#CharacterStyle_E@", "@B_android#text#style#MetricAffectingSpan_E@"], "ClassName": "android.text.style.TextAppearanceSpan", "ClassDesc": "Sets the text appearance using the given @B_android#R#styleable#TextAppearance_E@ attributes. By default @B_android#text#style#TextAppearanceSpan_E@ only changes the specified attributes in XML. @B_android#R#styleable#TextAppearance_textColorHighlight_E@, @B_android#R#styleable#TextAppearance_textColorHint_E@, @B_android#R#styleable#TextAppearance_textAllCaps_E@ and @B_android#R#styleable#TextAppearance_fallbackLineSpacing_E@ are not supported by @B_android#text#style#TextAppearanceSpan_E@."}