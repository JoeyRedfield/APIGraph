{"Functions": {"writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 23", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "isAppProvidedWebUri()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether or not the current @B_android#app#assist#AssistContent#getWebUri_E@ was explicitly provided in @B_android#app#Activity#onProvideAssistContent_E@. If not, the Intent was automatically set based on @B_android#app#Activity#getIntent_E@.", "history": "Added in API level 24", "FullName": "public boolean isAppProvidedWebUri ()"}, "getClipData()": {"Returns": [["@B_android#content#ClipData_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the current @B_android#app#assist#AssistContent#setClipData_E@, which you can modify in-place.", "history": "Added in API level 23", "FullName": "public ClipData getClipData ()"}, "setIntent(android.content.Intent)": {"Returns": [], "Parameters": [["@B_android#content#Intent_E@", "Intent no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the Intent associated with the content, describing the current top-level context of the activity. If this contains a reference to a piece of data related to the activity, be sure to set @B_android#content#Intent#FLAG_GRANT_READ_URI_PERMISSION_E@ so the accessibility service can access it.", "history": "Added in API level 23", "FullName": "public void setIntent (Intent intent)"}, "getStructuredData()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current @B_android#app#assist#AssistContent#setStructuredData_E@.", "history": "Added in API level 23", "FullName": "public String getStructuredData ()"}, "isAppProvidedIntent()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether or not the current Intent was explicitly provided in @B_android#app#Activity#onProvideAssistContent_E@. If not, the Intent was automatically set based on @B_android#app#Activity#getIntent_E@.", "history": "Added in API level 23", "FullName": "public boolean isAppProvidedIntent ()"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 23", "FullName": "public int describeContents ()"}, "getExtras()": {"Returns": [["@B_android#os#Bundle_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return Bundle for extra vendor-specific data that can be modified and examined.", "history": "Added in API level 23", "FullName": "public Bundle getExtras ()"}, "getWebUri()": {"Returns": [["@B_android#net#Uri_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the content's web URI as per @B_android#app#assist#AssistContent#setWebUri_E@, or null if there is none.", "history": "Added in API level 23", "FullName": "public Uri getWebUri ()"}, "setClipData(android.content.ClipData)": {"Returns": [], "Parameters": [["@B_android#content#ClipData_E@", "ClipData no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Optional additional content items that are involved with the current UI. Access to this content will be granted to the assistant as if you are sending it through an Intent with @B_android#content#Intent#FLAG_GRANT_READ_URI_PERMISSION_E@.", "history": "Added in API level 23", "FullName": "public void setClipData (ClipData clip)"}, "AssistContent()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public AssistContent ()"}, "setWebUri(android.net.Uri)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a web URI associated with the current data being shown to the user. This URI could be opened in a web browser, or in the app as an @B_android#content#Intent#ACTION_VIEW_E@ Intent, to show the same data that is currently being displayed by it. The URI here should be something that is transportable off the device into other environments to acesss the same data as is currently being shown in the app; if the app does not have such a representation, it should leave the null and only report the local intent and clip data.", "history": "Added in API level 23", "FullName": "public void setWebUri (Uri uri)"}, "setStructuredData(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets optional structured data regarding the content being viewed. The provided data must be a string represented with", "history": "Added in API level 23", "FullName": "public void setStructuredData (String structuredData)"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 23", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getIntent()": {"Returns": [["@B_android#content#Intent_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current @B_android#app#assist#AssistContent#setIntent_E@ if one is set, else the default Intent obtained from @B_android#app#Activity#getIntent_E@. Can be modified in-place.", "history": "Added in API level 23", "FullName": "public Intent getIntent ()"}}, "Inheritance": [], "ClassName": "android.app.assist.AssistContent", "ClassDesc": "Holds information about the content an application is viewing, to hand to an assistant at the user's request. This is filled in by @B_android#app#Activity#onProvideAssistContent_E@."}