{"Functions": {"getViewProtectionMode()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Allows adding background color to UI elements of the home screen, so they are readable on the watch face. This should be used if the watch face color is close to being white. This can be set to any combination of @B_android#support#wearable#watchface#WatchFaceStyle#PROTECT_STATUS_BAR_E@, @B_android#support#wearable#watchface#WatchFaceStyle#PROTECT_HOTWORD_INDICATOR_E@ and @B_android#support#wearable#watchface#WatchFaceStyle#PROTECT_WHOLE_SCREEN_E@, e.g. PROTECT_STATUS_BAR | PROTECT_HOTWORD_INDICATOR. The default value is no protection.", "history": "", "FullName": "int getViewProtectionMode ()"}, "toString()": {"Returns": [["String", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "String toString ()"}, "getShowSystemUiTime()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "If true, the system will draw the system-style time over the watch face. By default it is set to false, which means you should draw or clearly represent the time on your watch face.", "history": "", "FullName": "boolean getShowSystemUiTime ()"}, "getBackgroundVisibility()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Controls displaying background of the first, peeking card. Can be set to either @B_android#support#wearable#watchface#WatchFaceStyle#BACKGROUND_VISIBILITY_INTERRUPTIVE_E@ or @B_android#support#wearable#watchface#WatchFaceStyle#BACKGROUND_VISIBILITY_PERSISTENT_E@. @B_android#support#wearable#watchface#WatchFaceStyle#BACKGROUND_VISIBILITY_INTERRUPTIVE_E@ is the default value.", "history": "", "FullName": "int getBackgroundVisibility ()"}, "getCardPeekMode()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Controls how far into the screen the first card will peek while the watch face is displayed. Can be set to either @B_android#support#wearable#watchface#WatchFaceStyle#PEEK_MODE_VARIABLE_E@ or @B_android#support#wearable#watchface#WatchFaceStyle#PEEK_MODE_SHORT_E@. @B_android#support#wearable#watchface#WatchFaceStyle#PEEK_MODE_VARIABLE_E@ is the default value.", "history": "", "FullName": "int getCardPeekMode ()"}, "describeContents()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "int describeContents ()"}, "getStatusBarGravity()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Controls position of status icons (battery state, lack of connection) on the screen. Can be set to any combination of horizontal @B_android#view#Gravity_E@ constant (@B_android#view#Gravity#LEFT_E@, @B_android#view#Gravity#CENTER_HORIZONTAL_E@, @B_android#view#Gravity#RIGHT_E@) and vertical @B_android#view#Gravity_E@ constants (@B_android#view#Gravity#TOP_E@, @B_android#view#Gravity#CENTER_VERTICAL_E@, @B_android#view#Gravity#BOTTOM_E@), e.g. Gravity.LEFT | Gravity.BOTTOM. On circular screens, only the vertical gravity is respected.", "history": "", "FullName": "int getStatusBarGravity ()"}, "getHotwordIndicatorGravity()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Controls position of hotword (OK Google) on the screen. Can be set to any combination of horizontal Gravity constant (@B_android#view#Gravity#LEFT_E@, @B_android#view#Gravity#CENTER_HORIZONTAL_E@, @B_android#view#Gravity#RIGHT_E@) and vertical Gravity constants (@B_android#view#Gravity#TOP_E@, @B_android#view#Gravity#CENTER_VERTICAL_E@, @B_android#view#Gravity#BOTTOM_E@), e.g. Gravity.LEFT | Gravity.BOTTOM. On circular screens, only the vertical gravity is respected.", "history": "", "FullName": "int getHotwordIndicatorGravity ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["Parcel", "Parcel no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void writeToParcel (Parcel parcel, int flags)"}, "getPeekOpacityMode()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Controls whether the first, peeking card should be opaque when the watch face is displayed. Can be set to either @B_android#support#wearable#watchface#WatchFaceStyle#PEEK_OPACITY_MODE_OPAQUE_E@ or @B_android#support#wearable#watchface#WatchFaceStyle#PEEK_OPACITY_MODE_TRANSLUCENT_E@. @B_android#support#wearable#watchface#WatchFaceStyle#PEEK_OPACITY_MODE_OPAQUE_E@ is the default value.", "history": "", "FullName": "int getPeekOpacityMode ()"}, "getAmbientPeekMode()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Controls how the first, peeking card will be displayed while the watch is in ambient, black & white mode. Can be set to @B_android#support#wearable#watchface#WatchFaceStyle#AMBIENT_PEEK_MODE_VISIBLE_E@ or @B_android#support#wearable#watchface#WatchFaceStyle#AMBIENT_PEEK_MODE_HIDDEN_E@. @B_android#support#wearable#watchface#WatchFaceStyle#AMBIENT_PEEK_MODE_VISIBLE_E@ is the default value.", "history": "", "FullName": "int getAmbientPeekMode ()"}, "getAcceptsTapEvents()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Whether the watchface accepts tap events. The default is false.", "history": "", "FullName": "boolean getAcceptsTapEvents ()"}, "equals(java.lang.Object)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["Object", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "boolean equals (Object otherObj)"}, "hashCode()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "int hashCode ()"}, "getShowUnreadCountIndicator()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Whether to add an indicator of how many unread cards there are in the stream. The indicator will be displayed next to status icons (battery state, lack of connection). The default value is false.", "history": "", "FullName": "boolean getShowUnreadCountIndicator ()"}, "getComponent()": {"Returns": [["ComponentName", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The component of the watch face activity whose style is being specified.", "history": "", "FullName": "ComponentName getComponent ()"}}, "Inheritance": ["http:##developer#android#com@B_java#lang#Object_E@"], "ClassName": "android.support.wearable.watchface.WatchFaceStyle", "ClassDesc": "A style descriptor for watch faces. Parameters here affect how the system UI will be drawn over a watch face. An instance of this class should be passed in to https:##developer#android#com@B_android#support#wearable#watchface#WatchFaceService#Engine#setWatchFaceStyle_E@ in the onCreate method of your https:##developer#android#com@B_android#support#wearable#watchface#WatchFaceService#Engine#onCreate_E@ override. To construct a WatchFaceStyle use https:##developer#android#com@B_android#support#wearable#watchface#WatchFaceStyle#Builder_E@."}