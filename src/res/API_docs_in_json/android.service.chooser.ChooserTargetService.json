{"Functions": {"onGetChooserTargets(android.content.ComponentName,android.content.IntentFilter)": {"Returns": [["@B_java#util#List_E@", "a list of deep-link targets to fulfill the intent match, sorted by relevance"]], "Parameters": [["@B_android#content#ComponentName_E@", "ComponentName: the ComponentName of the matched activity that referred the system to this ChooserTargetService"], ["@B_android#content#IntentFilter_E@", "IntentFilter: the specific IntentFilter on the component that was matched"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called by the system to retrieve a set of deep-link @B_android#service#chooser#ChooserTarget_E@ that can handle an intent. The returned list should be sorted such that the most relevant targets appear first. The score for each ChooserTarget will be combined with the system's score for the original target Activity to sort and filter targets presented to the user. Important: Calls to this method from other applications will occur on a binder thread, not on your app's main thread. Make sure that access to relevant data within your app is thread-safe.", "history": "Added in API level 23", "FullName": "public abstract List<ChooserTarget> onGetChooserTargets (ComponentName targetActivityName, IntentFilter matchedFilter)"}, "onBind(android.content.Intent)": {"Returns": [["@B_android#os#IBinder_E@", "Return an IBinder through which clients can call on to the service."]], "Parameters": [["@B_android#content#Intent_E@", "Intent: The Intent that was used to bind to this service, as given to @B_android#content#Context#bindService_E@. Note that any extras that were included with the Intent at that point will not be seen here."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the communication channel to the service. May return null if clients can not bind to the service. The returned @B_android#os#IBinder_E@ is usually for a complex interface that has been Note that unlike other application components, calls on to the IBinder interface returned here may not happen on the main thread of the process. More information about the main thread can be found in", "history": "Added in API level 23", "FullName": "public IBinder onBind (Intent intent)"}, "ChooserTargetService()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 23", "FullName": "public ChooserTargetService ()"}}, "Inheritance": ["@B_android#content#Context_E@", "@B_android#content#ContextWrapper_E@", "@B_android#app#Service_E@"], "ClassName": "android.service.chooser.ChooserTargetService", "ClassDesc": "A service that receives calls from the system when the user is asked to choose a target for an intent explicitly by another app. The calling app must have invoked @B_android#content#Intent#ACTION_CHOOSER_E@ as handled by the system; applications do not have the ability to query a ChooserTargetService directly. Which ChooserTargetServices are queried depends on a system-level policy decision made at the moment the chooser is invoked, including but not limited to user time spent with the app package or associated components in the foreground, recency of usage or frequency of usage. These will generally correlate with the order that app targets are shown in the list of intent handlers shown in the system chooser or resolver. To extend this class, you must declare the service in your manifest file with the @B_android#Manifest#permission#BIND_CHOOSER_TARGET_SERVICE_E@ permission and include an intent filter with the @B_android#service#chooser#ChooserTargetService#SERVICE_INTERFACE_E@ action. For example: For the system to query your service, you must add a <meta-data> element to the Activity in your manifest that can handle Intents that you would also like to provide optional deep links for. For example, a chat app might offer deep links to recent active conversations instead of invoking a generic picker after the app itself is chosen as a target. The meta-data element should have the name android.service.chooser.chooser_target_service and a value corresponding to the component name of your service. Example:"}