{"Functions": {"flush()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", "if the pipe is closed, or an I/O error occurs."]], "SeeAlso": [], "Permissions": [], "Description": "Flushes this output stream and forces any buffered output characters to be written out. This will notify any readers that characters are waiting in the pipe.", "history": "Added in API level 1", "FullName": "public void flush ()"}, "PipedWriter(java.io.PipedReader)": {"Returns": [], "Parameters": [["@B_java#io#PipedReader_E@", "PipedReader: The piped reader to connect to."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a piped writer connected to the specified piped reader. Data characters written to this stream will then be available as input from snk.", "history": "Added in API level 1", "FullName": "public PipedWriter (PipedReader snk)"}, "write(char[],int,int)": {"Returns": [], "Parameters": [["char[]", "char: the data."], ["int", "int: the start offset in the data."], ["int", "int: the number of characters to write."]], "Throws": [["@B_java#io#IOException_E@", "if the pipe is broken, @B_java#io#PipedWriter#connect_E@, closed or an I/O error occurs."]], "SeeAlso": [], "Permissions": [], "Description": "Writes len characters from the specified character array starting at offset off to this piped output stream. This method blocks until all the characters are written to the output stream. If a thread was reading data characters from the connected piped input stream, but the thread is no longer alive, then an IOException is thrown.", "history": "Added in API level 1", "FullName": "public void write (char[] cbuf, int off, int len)"}, "connect(java.io.PipedReader)": {"Returns": [], "Parameters": [["@B_java#io#PipedReader_E@", "PipedReader: the piped reader to connect to."]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": [], "Permissions": [], "Description": "Connects this piped writer to a receiver. If this object is already connected to some other piped reader, an IOException is thrown. If snk is an unconnected piped reader and src is an unconnected piped writer, they may be connected by either the call:", "history": "Added in API level 1", "FullName": "public void connect (PipedReader snk)"}, "close()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", "if an I/O error occurs."]], "SeeAlso": [], "Permissions": [], "Description": "Closes this piped output stream and releases any system resources associated with this stream. This stream may no longer be used for writing characters.", "history": "Added in API level 1", "FullName": "public void close ()"}, "write(int)": {"Returns": [], "Parameters": [["int", "int: the char to be written."]], "Throws": [["@B_java#io#IOException_E@", "if the pipe is broken, @B_java#io#PipedWriter#connect_E@, closed or an I/O error occurs."]], "SeeAlso": [], "Permissions": [], "Description": "Writes the specified char to the piped output stream. If a thread was reading data characters from the connected piped input stream, but the thread is no longer alive, then an IOException is thrown. Implements the write method of Writer.", "history": "Added in API level 1", "FullName": "public void write (int c)"}, "PipedWriter()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#io#PipedReader#connect_E@", "@B_java#io#PipedWriter#connect_E@"], "Permissions": [], "Description": "Creates a piped writer that is not yet connected to a piped reader. It must be connected to a piped reader, either by the receiver or the sender, before being used.", "history": "Added in API level 1", "FullName": "public PipedWriter ()"}, "write(char[], int, int)": {"Returns": [], "Parameters": [["char[]", "char: the data."], ["int", "int: the start offset in the data."], ["int", "int: the number of characters to write."]], "Throws": [["@B_java#io#IOException_E@", "if the pipe is broken, @B_java#io#PipedWriter#connect_E@, closed or an I/O error occurs."]], "SeeAlso": [], "Permissions": [], "Description": "Writes len characters from the specified character array starting at offset off to this piped output stream. This method blocks until all the characters are written to the output stream. If a thread was reading data characters from the connected piped input stream, but the thread is no longer alive, then an IOException is thrown.", "history": "added in API level 1", "FullName": "public void write (char[] cbuf, int off, int len)"}}, "Inheritance": ["@B_java#io#Writer_E@"], "ClassName": "java.io.PipedWriter", "ClassDesc": "Piped character-output streams."}