{"Functions": {"associate(java.net.InetAddress, int)": {"Returns": [], "Parameters": [["@B_java#net#InetAddress_E@", "InetAddress: The network address of the remote host."], ["int", "int: The network port of the remote host."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the address is not supported or the port is invalid."], ["@B_java#lang#IllegalStateException_E@", "if the stream is busy."]], "SeeAlso": ["@B_android#net#rtp#RtpStream#isBusy_E@"], "Permissions": [], "Description": "Associates with a remote host. This defines the destination of the outgoing packets.", "history": "added in API level 12", "FullName": "public void associate (InetAddress address, int port)"}, "getLocalAddress()": {"Returns": [["@B_java#net#InetAddress_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the network address of the local host.", "history": "Added in API level 12", "FullName": "public InetAddress getLocalAddress ()"}, "release()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#lang#IllegalStateException_E@", "if the stream is busy."]], "SeeAlso": ["@B_android#net#rtp#RtpStream#isBusy_E@"], "Permissions": [], "Description": "Releases allocated resources. The stream becomes inoperable after calling this method.", "history": "Added in API level 12", "FullName": "public void release ()"}, "getMode()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current mode.", "history": "Added in API level 12", "FullName": "public int getMode ()"}, "getRemotePort()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the network port of the remote host or -1 if the stream is not associated.", "history": "Added in API level 12", "FullName": "public int getRemotePort ()"}, "finalize()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#lang#Throwable_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Called by the garbage collector on an object when garbage collection determines that there are no more references to the object. A subclass overrides the finalize method to dispose of system resources or to perform other cleanup. The general contract of finalize is that it is invoked if and when the Java\u2122 virtual machine has determined that there is no longer any means by which this object can be accessed by any thread that has not yet died, except as a result of an action taken by the finalization of some other object or class which is ready to be finalized. The finalize method may take any action, including making this object available again to other threads; the usual purpose of finalize, however, is to perform cleanup actions before the object is irrevocably discarded. For example, the finalize method for an object that represents an input/output connection might perform explicit I/O transactions to break the connection before the object is permanently discarded. The finalize method of class Object performs no special action; it simply returns normally. Subclasses of Object may override this definition. The Java programming language does not guarantee which thread will invoke the finalize method for any given object. It is guaranteed, however, that the thread that invokes finalize will not be holding any user-visible synchronization locks when finalize is invoked. If an uncaught exception is thrown by the finalize method, the exception is ignored and finalization of that object terminates. After the finalize method has been invoked for an object, no further action is taken until the Java virtual machine has again determined that there is no longer any means by which this object can be accessed by any thread that has not yet died, including possible actions by other objects or classes which are ready to be finalized, at which point the object may be discarded. The finalize method is never invoked more than once by a Java virtual machine for any given object. Any exception thrown by the finalize method causes the finalization of this object to be halted, but is otherwise ignored.", "history": "Added in API level 12", "FullName": "protected void finalize ()"}, "getRemoteAddress()": {"Returns": [["@B_java#net#InetAddress_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the network address of the remote host or null if the stream is not associated.", "history": "Added in API level 12", "FullName": "public InetAddress getRemoteAddress ()"}, "getLocalPort()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the network port of the local host.", "history": "Added in API level 12", "FullName": "public int getLocalPort ()"}, "setMode(int)": {"Returns": [], "Parameters": [["int", "int: The mode to change to."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the mode is invalid."], ["@B_java#lang#IllegalStateException_E@", "if the stream is busy."]], "SeeAlso": ["@B_android#net#rtp#RtpStream#isBusy_E@"], "Permissions": [], "Description": "Changes the current mode. It must be one of @B_android#net#rtp#RtpStream#MODE_NORMAL_E@, @B_android#net#rtp#RtpStream#MODE_SEND_ONLY_E@, and @B_android#net#rtp#RtpStream#MODE_RECEIVE_ONLY_E@.", "history": "Added in API level 12", "FullName": "public void setMode (int mode)"}, "associate(java.net.InetAddress,int)": {"Returns": [], "Parameters": [["@B_java#net#InetAddress_E@", "InetAddress: The network address of the remote host."], ["int", "int: The network port of the remote host."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the address is not supported or the port is invalid."], ["@B_java#lang#IllegalStateException_E@", "if the stream is busy."]], "SeeAlso": ["@B_android#net#rtp#RtpStream#isBusy_E@"], "Permissions": [], "Description": "Associates with a remote host. This defines the destination of the outgoing packets.", "history": "Added in API level 12", "FullName": "public void associate (InetAddress address, int port)"}, "isBusy()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the stream is busy. In this case most of the setter methods are disabled. This method is intended to be overridden by subclasses.", "history": "Added in API level 12", "FullName": "public boolean isBusy ()"}}, "Inheritance": [], "ClassName": "android.net.rtp.RtpStream", "ClassDesc": "RtpStream represents the base class of streams which send and receive network packets with media payloads over Real-time Transport Protocol (RTP). Using this class requires @B_android#Manifest#permission#INTERNET_E@ permission."}