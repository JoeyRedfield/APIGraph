{"Functions": {"unregisterAll()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Remove all registered observers.", "history": "Added in API level 1", "FullName": "public void unregisterAll ()"}, "registerObserver(T)": {"Returns": [], "Parameters": [["T", "T: the observer to register"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "the observer is null"], ["@B_java#lang#IllegalStateException_E@", "the observer is already registered"]], "SeeAlso": [], "Permissions": [], "Description": "Adds an observer to the list. The observer cannot be null and it must not already be registered.", "history": "Added in API level 1", "FullName": "public void registerObserver (T observer)"}, "unregisterObserver(T)": {"Returns": [], "Parameters": [["T", "T: the observer to unregister"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "the observer is null"], ["@B_java#lang#IllegalStateException_E@", "the observer is not yet registered"]], "SeeAlso": [], "Permissions": [], "Description": "Removes a previously registered observer. The observer must not be null and it must already have been registered.", "history": "Added in API level 1", "FullName": "public void unregisterObserver (T observer)"}, "Observable()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public Observable ()"}}, "Inheritance": [], "ClassName": "android.database.Observable<T>", "ClassDesc": "Provides methods for registering or unregistering arbitrary observers in an @B_java#util#ArrayList_E@. This abstract class is intended to be subclassed and specialized to maintain a registry of observers of specific types and dispatch notifications to them."}