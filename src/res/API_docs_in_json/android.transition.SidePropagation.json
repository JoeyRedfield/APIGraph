{"Functions": {"getStartDelay(android.view.ViewGroup,android.transition.Transition,android.transition.TransitionValues,android.transition.TransitionValues)": {"Returns": [["long", "A start delay to use with the Animator created by transition. The delay will be offset by the minimum delay of all TransitionPropagations used in the Transition so that the smallest delay will be 0. Returned values may be negative."]], "Parameters": [["@B_android#view#ViewGroup_E@", "ViewGroup: The root of the View hierarchy running the transition."], ["@B_android#transition#Transition_E@", "Transition: The transition that created the Animator"], ["@B_android#transition#TransitionValues_E@", "TransitionValues: The values for a specific target in the start scene."], ["@B_android#transition#TransitionValues_E@", "TransitionValues: The values for the target in the end scene."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called by Transition to alter the Animator start delay. All start delays will be adjusted such that the minimum becomes zero.", "history": "Added in API level 21", "FullName": "public long getStartDelay (ViewGroup sceneRoot, Transition transition, TransitionValues startValues, TransitionValues endValues)"}, "SidePropagation()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 21", "FullName": "public SidePropagation ()"}, "setPropagationSpeed(float)": {"Returns": [], "Parameters": [["float", "float: The speed at which propagation occurs, relative to the duration of the transition. A speed of 4 means it works 4 times as fast as the duration of the transition. May not be 0."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the speed at which transition propagation happens, relative to the duration of the Transition. A propagationSpeed of 1 means that a View centered at the side set in @B_android#transition#SidePropagation#setSide_E@ and View centered at the opposite edge will have a difference in start delay of approximately the duration of the Transition. A speed of 2 means the start delay difference will be approximately half of the duration of the transition. A value of 0 is illegal, but negative values will invert the propagation.", "history": "Added in API level 21", "FullName": "public void setPropagationSpeed (float propagationSpeed)"}, "setSide(int)": {"Returns": [], "Parameters": [["int", "int: The side that is used to calculate the transition propagation. Must be one of @B_android#view#Gravity#LEFT_E@, @B_android#view#Gravity#TOP_E@, @B_android#view#Gravity#RIGHT_E@, @B_android#view#Gravity#BOTTOM_E@, @B_android#view#Gravity#START_E@, or @B_android#view#Gravity#END_E@. Value is @B_android#view#Gravity#LEFT_E@, @B_android#view#Gravity#TOP_E@, @B_android#view#Gravity#RIGHT_E@, @B_android#view#Gravity#BOTTOM_E@, @B_android#view#Gravity#START_E@, or @B_android#view#Gravity#END_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the side that is used to calculate the transition propagation. If the transitioning View is visible in the start of the transition, then it will transition sooner when closer to the side and later when farther. If the view is not visible in the start of the transition, then it will transition later when closer to the side and sooner when farther from the edge. The default is @B_android#view#Gravity#BOTTOM_E@.", "history": "Added in API level 21", "FullName": "public void setSide (int side)"}}, "Inheritance": ["@B_android#transition#TransitionPropagation_E@", "@B_android#transition#VisibilityPropagation_E@"], "ClassName": "android.transition.SidePropagation", "ClassDesc": "A TransitionPropagation that propagates based on the distance to the side and, orthogonally, the distance to epicenter. If the transitioning View is visible in the start of the transition, then it will transition sooner when closer to the side and later when farther. If the view is not visible in the start of the transition, then it will transition later when closer to the side and sooner when farther from the edge. This is the default TransitionPropagation used with @B_android#transition#Slide_E@."}