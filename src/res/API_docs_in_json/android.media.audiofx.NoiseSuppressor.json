{"Functions": {"isAvailable()": {"Returns": [["boolean", "true if the device implements noise suppression, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks if the device implements noise suppression.", "history": "Added in API level 16", "FullName": "public static boolean isAvailable ()"}, "create(int)": {"Returns": [["@B_android#media#audiofx#NoiseSuppressor_E@", "NoiseSuppressor created or null if the device does not implement noise suppression."]], "Parameters": [["int", "int: system wide unique audio session identifier. The NoiseSuppressor will be applied to the AudioRecord with the same audio session."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a NoiseSuppressor and attaches it to the AudioRecord on the audio session specified.", "history": "Added in API level 16", "FullName": "public static NoiseSuppressor create (int audioSession)"}}, "Inheritance": ["@B_android#media#audiofx#AudioEffect_E@"], "ClassName": "android.media.audiofx.NoiseSuppressor", "ClassDesc": "Noise Suppressor (NS). Noise suppression (NS) is an audio pre-processor which removes background noise from the captured signal. The component of the signal considered as noise can be either stationary (car/airplane engine, AC system) or non-stationary (other peoples conversations, car horn) for more advanced implementations. NS is mostly used by voice communication applications (voice chat, video conferencing, SIP calls). An application creates a NoiseSuppressor object to instantiate and control an NS engine in the audio framework. To attach the NoiseSuppressor to a particular @B_android#media#AudioRecord_E@, specify the audio session ID of this AudioRecord when creating the NoiseSuppressor. The audio session is retrieved by calling @B_android#media#AudioRecord#getAudioSessionId_E@ on the AudioRecord instance. On some devices, NS can be inserted by default in the capture path by the platform according to the @B_android#media#MediaRecorder#AudioSource_E@ used. The application should call NoiseSuppressor.getEnable() after creating the NS to check the default NS activation state on a particular AudioRecord session. See @B_android#media#audiofx#AudioEffect_E@ class for more details on controlling audio effects."}