{"Functions": {"Validator()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor for derived classes. The constructor does nothing. Derived classes must create @B_javax#xml#validation#Validator_E@ objects that have @B_org#xml#sax#ErrorHandler_E@ and @B_org#w3c#dom#ls#LSResourceResolver_E@.", "history": "Added in API level 8", "FullName": "protected Validator ()"}, "validate(javax.xml.transform.Source)": {"Returns": [], "Parameters": [["@B_javax#xml#transform#Source_E@", "Source no parameter comment"]], "Throws": [["@B_java#io#IOException_E@", ""], ["@B_org#xml#sax#SAXException_E@", ""]], "SeeAlso": ["@B_javax#xml#validation#Validator#setErrorHandler_E@"], "Permissions": [], "Description": "Validates the specified input. This is just a convenience method of:", "history": "Added in API level 8", "FullName": "public void validate (Source source)"}, "setFeature(java.lang.String, boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The feature name, which is a non-null fully-qualified URI."], ["boolean", "boolean: The requested value of the feature (true or false)."]], "Throws": [["@B_org#xml#sax#SAXNotRecognizedException_E@", "If the feature value can't be assigned or retrieved."], ["@B_org#xml#sax#SAXNotSupportedException_E@", "When the @B_javax#xml#validation#Validator_E@ recognizes the feature name but cannot set the requested value."], ["@B_java#lang#NullPointerException_E@", "When the name parameter is null."]], "SeeAlso": ["@B_javax#xml#validation#Validator#getFeature_E@"], "Permissions": [], "Description": "Set the value of a feature flag. Feature can be used to control the way a @B_javax#xml#validation#Validator_E@ parses schemas, although @B_javax#xml#validation#Validator_E@s are not required to recognize any specific property names. The feature name is any fully-qualified URI. It is possible for a @B_javax#xml#validation#Validator_E@ to expose a feature value but to be unable to change the current value. Some feature values may be immutable or mutable only in specific contexts, such as before, during, or after a validation.", "history": "added in API level 8", "FullName": "public void setFeature (String name, boolean value)"}, "getFeature(java.lang.String)": {"Returns": [["boolean", "The current value of the feature (true or false)."]], "Parameters": [["@B_java#lang#String_E@", "String: The feature name, which is a non-null fully-qualified URI."]], "Throws": [["@B_org#xml#sax#SAXNotRecognizedException_E@", "If the feature value can't be assigned or retrieved."], ["@B_org#xml#sax#SAXNotSupportedException_E@", "When the @B_javax#xml#validation#Validator_E@ recognizes the feature name but cannot determine its value at this time."], ["@B_java#lang#NullPointerException_E@", "When the name parameter is null."]], "SeeAlso": ["@B_javax#xml#validation#Validator#setFeature_E@"], "Permissions": [], "Description": "Look up the value of a feature flag. The feature name is any fully-qualified URI. It is possible for a @B_javax#xml#validation#Validator_E@ to recognize a feature name but temporarily be unable to return its value. Some feature values may be available only in specific contexts, such as before, during, or after a validation. Implementors are free (and encouraged) to invent their own features, using names built on their own URIs.", "history": "Added in API level 8", "FullName": "public boolean getFeature (String name)"}, "getProperty(java.lang.String)": {"Returns": [["@B_java#lang#Object_E@", "The current value of the property."]], "Parameters": [["@B_java#lang#String_E@", "String: The property name, which is a non-null fully-qualified URI."]], "Throws": [["@B_org#xml#sax#SAXNotRecognizedException_E@", "If the property value can't be assigned or retrieved."], ["@B_org#xml#sax#SAXNotSupportedException_E@", "When the XMLReader recognizes the property name but cannot determine its value at this time."], ["@B_java#lang#NullPointerException_E@", "When the name parameter is null."]], "SeeAlso": ["@B_javax#xml#validation#Validator#setProperty_E@"], "Permissions": [], "Description": "Look up the value of a property. The property name is any fully-qualified URI. It is possible for a @B_javax#xml#validation#Validator_E@ to recognize a property name but temporarily be unable to return its value. Some property values may be available only in specific contexts, such as before, during, or after a validation. @B_javax#xml#validation#Validator_E@s are not required to recognize any specific property names. Implementors are free (and encouraged) to invent their own properties, using names built on their own URIs.", "history": "Added in API level 8", "FullName": "public Object getProperty (String name)"}, "setErrorHandler(org.xml.sax.ErrorHandler)": {"Returns": [], "Parameters": [["@B_org#xml#sax#ErrorHandler_E@", "ErrorHandler: A new error handler to be set. This parameter can be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the @B_org#xml#sax#ErrorHandler_E@ to receive errors encountered during the validate method invocation. Error handler can be used to customize the error handling process during a validation. When an @B_org#xml#sax#ErrorHandler_E@ is set, errors found during the validation will be first sent to the @B_org#xml#sax#ErrorHandler_E@. The error handler can abort further validation immediately by throwing @B_org#xml#sax#SAXException_E@ from the handler. Or for example it can print an error to the screen and try to continue the validation by returning normally from the @B_org#xml#sax#ErrorHandler_E@ If any @B_java#lang#Throwable_E@ is thrown from an @B_org#xml#sax#ErrorHandler_E@, the caller of the validate method will be thrown the same @B_java#lang#Throwable_E@ object. @B_javax#xml#validation#Validator_E@ is not allowed to throw @B_org#xml#sax#SAXException_E@ without first reporting it to @B_org#xml#sax#ErrorHandler_E@. When the @B_org#xml#sax#ErrorHandler_E@ is null, the implementation will behave as if the following @B_org#xml#sax#ErrorHandler_E@ is set: When a new @B_javax#xml#validation#Validator_E@ object is created, initially this field is set to null.", "history": "Added in API level 8", "FullName": "public abstract void setErrorHandler (ErrorHandler errorHandler)"}, "reset()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reset this Validator to its original configuration. Validator is reset to the same state as when it was created with @B_javax#xml#validation#Schema#newValidator_E@. reset() is designed to allow the reuse of existing Validators thus saving resources associated with the creation of new Validators. The reset Validator is not guaranteed to have the same @B_org#w3c#dom#ls#LSResourceResolver_E@ or @B_org#xml#sax#ErrorHandler_E@ Objects, e.g. @B_java#lang#Object#equals_E@. It is guaranteed to have a functionally equal LSResourceResolver and ErrorHandler.", "history": "Added in API level 8", "FullName": "public abstract void reset ()"}, "setFeature(java.lang.String,boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The feature name, which is a non-null fully-qualified URI."], ["boolean", "boolean: The requested value of the feature (true or false)."]], "Throws": [["@B_org#xml#sax#SAXNotRecognizedException_E@", "If the feature value can't be assigned or retrieved."], ["@B_org#xml#sax#SAXNotSupportedException_E@", "When the @B_javax#xml#validation#Validator_E@ recognizes the feature name but cannot set the requested value."], ["@B_java#lang#NullPointerException_E@", "When the name parameter is null."]], "SeeAlso": ["@B_javax#xml#validation#Validator#getFeature_E@"], "Permissions": [], "Description": "Set the value of a feature flag. Feature can be used to control the way a @B_javax#xml#validation#Validator_E@ parses schemas, although @B_javax#xml#validation#Validator_E@s are not required to recognize any specific property names. The feature name is any fully-qualified URI. It is possible for a @B_javax#xml#validation#Validator_E@ to expose a feature value but to be unable to change the current value. Some feature values may be immutable or mutable only in specific contexts, such as before, during, or after a validation.", "history": "Added in API level 8", "FullName": "public void setFeature (String name, boolean value)"}, "getResourceResolver()": {"Returns": [["@B_org#w3c#dom#ls#LSResourceResolver_E@", "This method returns the object that was last set through the @B_javax#xml#validation#Validator#setResourceResolver_E@ method, or null if that method has never been called since this @B_javax#xml#validation#Validator_E@ has created."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_javax#xml#validation#Validator#setErrorHandler_E@"], "Permissions": [], "Description": "Gets the current @B_org#w3c#dom#ls#LSResourceResolver_E@ set to this @B_javax#xml#validation#Validator_E@.", "history": "Added in API level 8", "FullName": "public abstract LSResourceResolver getResourceResolver ()"}, "setResourceResolver(org.w3c.dom.ls.LSResourceResolver)": {"Returns": [], "Parameters": [["@B_org#w3c#dom#ls#LSResourceResolver_E@", "LSResourceResolver: A new resource resolver to be set. This parameter can be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the @B_org#w3c#dom#ls#LSResourceResolver_E@ to customize resource resolution while in a validation episode. @B_javax#xml#validation#Validator_E@ uses a @B_org#w3c#dom#ls#LSResourceResolver_E@ when it needs to locate external resources while a validation, although exactly what constitutes \"locating external resources\" is up to each schema language. When the @B_org#w3c#dom#ls#LSResourceResolver_E@ is null, the implementation will behave as if the following @B_org#w3c#dom#ls#LSResourceResolver_E@ is set: If a @B_org#w3c#dom#ls#LSResourceResolver_E@ throws a @B_java#lang#RuntimeException_E@ (or instances of its derived classes), then the @B_javax#xml#validation#Validator_E@ will abort the parsing and the caller of the validate method will receive the same @B_java#lang#RuntimeException_E@. When a new @B_javax#xml#validation#Validator_E@ object is created, initially this field is set to null.", "history": "Added in API level 8", "FullName": "public abstract void setResourceResolver (LSResourceResolver resourceResolver)"}, "setProperty(java.lang.String,java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The property name, which is a non-null fully-qualified URI."], ["@B_java#lang#Object_E@", "Object: The requested value for the property."]], "Throws": [["@B_org#xml#sax#SAXNotRecognizedException_E@", "If the property value can't be assigned or retrieved."], ["@B_org#xml#sax#SAXNotSupportedException_E@", "When the @B_javax#xml#validation#Validator_E@ recognizes the property name but cannot set the requested value."], ["@B_java#lang#NullPointerException_E@", "When the name parameter is null."]], "SeeAlso": [], "Permissions": [], "Description": "Set the value of a property. The property name is any fully-qualified URI. It is possible for a @B_javax#xml#validation#Validator_E@ to recognize a property name but to be unable to change the current value. Some property values may be immutable or mutable only in specific contexts, such as before, during, or after a validation. @B_javax#xml#validation#Validator_E@s are not required to recognize setting any specific property names.", "history": "Added in API level 8", "FullName": "public void setProperty (String name, Object object)"}, "getErrorHandler()": {"Returns": [["@B_org#xml#sax#ErrorHandler_E@", "This method returns the object that was last set through the @B_javax#xml#validation#Validator#setErrorHandler_E@ method, or null if that method has never been called since this @B_javax#xml#validation#Validator_E@ has created."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_javax#xml#validation#Validator#setErrorHandler_E@"], "Permissions": [], "Description": "Gets the current @B_org#xml#sax#ErrorHandler_E@ set to this @B_javax#xml#validation#Validator_E@.", "history": "Added in API level 8", "FullName": "public abstract ErrorHandler getErrorHandler ()"}, "setProperty(java.lang.String, java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The property name, which is a non-null fully-qualified URI."], ["@B_java#lang#Object_E@", "Object: The requested value for the property."]], "Throws": [["@B_org#xml#sax#SAXNotRecognizedException_E@", "If the property value can't be assigned or retrieved."], ["@B_org#xml#sax#SAXNotSupportedException_E@", "When the @B_javax#xml#validation#Validator_E@ recognizes the property name but cannot set the requested value."], ["@B_java#lang#NullPointerException_E@", "When the name parameter is null."]], "SeeAlso": [], "Permissions": [], "Description": "Set the value of a property. The property name is any fully-qualified URI. It is possible for a @B_javax#xml#validation#Validator_E@ to recognize a property name but to be unable to change the current value. Some property values may be immutable or mutable only in specific contexts, such as before, during, or after a validation. @B_javax#xml#validation#Validator_E@s are not required to recognize setting any specific property names.", "history": "added in API level 8", "FullName": "public void setProperty (String name, Object object)"}, "validate(javax.xml.transform.Source,javax.xml.transform.Result)": {"Returns": [], "Parameters": [["@B_javax#xml#transform#Source_E@", "Source: XML to be validated. Must not be null."], ["@B_javax#xml#transform#Result_E@", "Result: The @B_javax#xml#transform#Result_E@ object that receives (possibly augmented) XML. This parameter can be null if the caller is not interested in it. Note that when a @B_javax#xml#transform#dom#DOMResult_E@ is used, a validator might just pass the same DOM node from @B_javax#xml#transform#dom#DOMSource_E@ to @B_javax#xml#transform#dom#DOMResult_E@ (in which case source.getNode()==result.getNode()), it might copy the entire DOM tree, or it might alter the node given by the source."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the @B_javax#xml#transform#Result_E@ type doesn't match the @B_javax#xml#transform#Source_E@ type, or if the specified source is not a @B_javax#xml#transform#sax#SAXSource_E@, @B_javax#xml#transform#dom#DOMSource_E@ or @B_javax#xml#transform#stream#StreamSource_E@."], ["@B_org#xml#sax#SAXException_E@", "If the @B_org#xml#sax#ErrorHandler_E@ throws a @B_org#xml#sax#SAXException_E@ or if a fatal error is found and the @B_org#xml#sax#ErrorHandler_E@ returns normally."], ["@B_java#io#IOException_E@", "If the validator is processing a @B_javax#xml#transform#sax#SAXSource_E@ and the underlying @B_org#xml#sax#XMLReader_E@ throws an @B_java#io#IOException_E@."], ["@B_java#lang#NullPointerException_E@", "If the source parameter is null."]], "SeeAlso": ["@B_javax#xml#validation#Validator#validate_E@"], "Permissions": [], "Description": "Validates the specified input and send the augmented validation result to the specified output. This method places the following restrictions on the types of the @B_javax#xml#transform#Source_E@/@B_javax#xml#transform#Result_E@ accepted. To validate one @B_javax#xml#transform#Source_E@ into another kind of @B_javax#xml#transform#Result_E@, use the identity transformer (see @B_javax#xml#transform#TransformerFactory#newTransformer_E@). Errors found during the validation is sent to the specified @B_org#xml#sax#ErrorHandler_E@. If a document is valid, or if a document contains some errors but none of them were fatal and the @B_org#xml#sax#ErrorHandler_E@ didn't throw any exception, then the method returns normally.", "history": "Added in API level 8", "FullName": "public abstract void validate (Source source, Result result)"}}, "Inheritance": [], "ClassName": "javax.xml.validation.Validator", "ClassDesc": "A processor that checks an XML document against @B_javax#xml#validation#Schema_E@. A validator is a thread-unsafe and non-reentrant object. In other words, it is the application's responsibility to make sure that one @B_javax#xml#validation#Validator_E@ object is not used from more than one thread at any given time, and while the Note that while the @B_javax#xml#validation#Validator#validate_E@ and @B_javax#xml#validation#Validator#validate_E@ methods take a @B_javax#xml#transform#Source_E@ instance, the Source instance must be a SAXSource, DOMSource, StAXSource or StreamSource."}