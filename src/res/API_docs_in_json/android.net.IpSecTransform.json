{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 28", "FullName": "public String toString ()"}, "finalize()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#lang#Throwable_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Check that the transform was closed properly.", "history": "Added in API level 28", "FullName": "protected void finalize ()"}, "close()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Deactivate this IpSecTransform and free allocated resources. Deactivating a transform while it is still applied to a socket will result in errors on that socket. Make sure to remove transforms by calling @B_android#net#IpSecManager#removeTransportModeTransforms_E@. Note, removing an IpSecTransform from a socket will not deactivate it (because one transform may be applied to multiple sockets). It is safe to call this method on a transform that has already been deactivated.", "history": "Added in API level 28", "FullName": "public void close ()"}}, "Inheritance": [], "ClassName": "android.net.IpSecTransform", "ClassDesc": "This class represents a transform, which roughly corresponds to an IPsec Security Association. Transforms are created using @B_android#net#IpSecTransform#Builder_E@. Each IpSecTransform object encapsulates the properties and state of an IPsec security association. That includes, but is not limited to, algorithm choice, key material, and allocated system resources."}