{"Functions": {"isPrimitive()": {"Returns": [["boolean", "true if and only if this field corresponds to a primitive type"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if this field has a primitive type.", "history": "Added in API level 1", "FullName": "public boolean isPrimitive ()"}, "setOffset(int)": {"Returns": [], "Parameters": [["int", "int: the offset of the field"]], "Throws": [], "SeeAlso": ["@B_java#io#ObjectStreamField#getOffset_E@"], "Permissions": [], "Description": "Offset within instance data.", "history": "Added in API level 1", "FullName": "protected void setOffset (int offset)"}, "compareTo(java.lang.Object)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Compare this field with another ObjectStreamField. Return -1 if this is smaller, 0 if equal, 1 if greater. Types that are primitives are \"smaller\" than object types. If equal, the field names are compared.", "history": "Added in API level 1", "FullName": "public int compareTo (Object obj)"}, "ObjectStreamField(java.lang.String,java.lang.Class<?>,boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: field name"], ["@B_java#lang#Class_E@", "Class: field type"], ["boolean", "boolean: if false, write/read field values in the same manner as writeObject/readObject; if true, write/read in the same manner as writeUnshared/readUnshared"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an ObjectStreamField representing a serializable field with the given name and type. If unshared is false, values of the represented field are serialized and deserialized in the default manner--if the field is non-primitive, object values are serialized and deserialized as if they had been written and read by calls to writeObject and readObject. If unshared is true, values of the represented field are serialized and deserialized as if they had been written and read by calls to writeUnshared and readUnshared.", "history": "Added in API level 1", "FullName": "public ObjectStreamField (String name, Class<?> type, boolean unshared)"}, "ObjectStreamField(java.lang.String,java.lang.Class<?>)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the name of the serializable field"], ["@B_java#lang#Class_E@", "Class: the Class object of the serializable field"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a Serializable field with the specified type. This field should be documented with a serialField tag.", "history": "Added in API level 1", "FullName": "public ObjectStreamField (String name, Class<?> type)"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a string that describes this field.", "history": "Added in API level 1", "FullName": "public String toString ()"}, "getTypeString()": {"Returns": [["@B_java#lang#String_E@", "null if this field has a primitive type."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the JVM type signature.", "history": "Added in API level 1", "FullName": "public String getTypeString ()"}, "getType()": {"Returns": [["@B_java#lang#Class_E@", "a Class object representing the type of the serializable field"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the type of the field. If the type is non-primitive and this ObjectStreamField was obtained from a deserialized @B_java#io#ObjectStreamClass_E@ instance, then Object.class is returned. Otherwise, the Class object for the type of the field is returned.", "history": "Added in API level 1", "FullName": "public Class<?> getType ()"}, "isUnshared()": {"Returns": [["boolean", "true if this field is unshared"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns boolean value indicating whether or not the serializable field represented by this ObjectStreamField instance is unshared.", "history": "Added in API level 1", "FullName": "public boolean isUnshared ()"}, "getTypeCode()": {"Returns": [["char", "the typecode of the serializable field"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns character encoding of field type. The encoding is as follows:", "history": "Added in API level 1", "FullName": "public char getTypeCode ()"}, "getOffset()": {"Returns": [["int", "the offset of this field"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#io#ObjectStreamField#setOffset_E@"], "Permissions": [], "Description": "Offset of field within instance data.", "history": "Added in API level 1", "FullName": "public int getOffset ()"}, "getName()": {"Returns": [["@B_java#lang#String_E@", "a String representing the name of the serializable field"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the name of this field.", "history": "Added in API level 1", "FullName": "public String getName ()"}}, "Inheritance": [], "ClassName": "java.io.ObjectStreamField", "ClassDesc": "A description of a Serializable field from a Serializable class. An array of ObjectStreamFields is used to declare the Serializable fields of a class."}