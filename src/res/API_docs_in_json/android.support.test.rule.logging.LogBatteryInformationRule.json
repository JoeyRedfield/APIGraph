{"Functions": {"beforeTest()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void beforeTest ()"}, "LogBatteryInformationRule(java.io.File, java.lang.String)": {"Returns": [], "Parameters": [["File", "File no parameter comment"], ["String", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "LogBatteryInformationRule (File logFileOutputDirectory, String fileName)"}, "LogBatteryInformationRule()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "LogBatteryInformationRule ()"}, "afterTest()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void afterTest ()"}, "getDefaultLogFileName()": {"Returns": [["String", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the default log file name for this rule class. A null return value indicates the rule doesn't log to a file.", "history": "", "FullName": "String getDefaultLogFileName ()"}}, "Inheritance": ["java.lang.Object", "org.junit.rules.ExternalResource", "@B_android#support#test#rule#logging#LoggingBaseRule_E@"], "ClassName": "android.support.test.rule.logging.LogBatteryInformationRule", "ClassDesc": "When applied to a test class this Rule resets battery information (\"stats\") before test method execution. The @B_org#junit#Rule_E@ then collects battery information after test method execution and logs it to a file on external storage. The default file location is maintained at @B_android#support#test#rule#logging#RuleLoggingUtils#getTestDir_E@. The Rule performs these actions through the execution of a dumpsys on the batterystats service. If the API level is less than 21 (Lollipop) this rule will do nothing since this dumpsys command isn't supported. This TestRule has limited use for short running tests and is meant for very long running tests. The @B_org#junit#Rule_E@'s @B_android#support#test#rule#logging#LoggingBaseRule#before_E@ and @B_android#support#test#rule#logging#LoggingBaseRule#after_E@ methods can also be used for logging battery information across a test suite by manually invoking the methods in a @B_org#junit#runner#notification#RunListener_E@. Usage: \\@Rule public LogBatteryInformationRule mLogBatteryInformationRule = new LogBatteryInformationRule(); Summary Public constructors LogBatteryInformationRule() LogBatteryInformationRule(File logFileOutputDirectory, String fileName) Public methods void afterTest() void beforeTest() String getDefaultLogFileName() Return the default log file name for this rule class. Inherited methods From class android.support.test.rule.logging.LoggingBaseRule final void after() final Statement apply(Statement base, Description description) final void before() String getLogFileName() File getLogFileOutputDirectory() String getPackageNameUnderTest() String getTestClass() String getTestName() int getTestRunNumber() void setTestRunNumber(int testRunNumber) Indicate to the Rule that this is the testRunNumberth time the test method is being called in a test instrumentation. From class org.junit.rules.ExternalResource void after() Statement apply(Statement arg0, Description arg1) void before() From class java.lang.Object Object clone() boolean equals(Object arg0) void finalize() final Class<?> getClass() int hashCode() final void notify() final void notifyAll() String toString() final void wait(long arg0, int arg1) final void wait(long arg0) final void wait() From interface org.junit.rules.TestRule abstract Statement apply(Statement arg0, Description arg1) Public constructors LogBatteryInformationRule LogBatteryInformationRule () LogBatteryInformationRule LogBatteryInformationRule (File logFileOutputDirectory, String fileName) Parameters logFileOutputDirectory File fileName String Public methods afterTest void afterTest () beforeTest void beforeTest () getDefaultLogFileName String getDefaultLogFileName () Return the default log file name for this rule class. A null return value indicates the rule doesn't log to a file. Returns String"}