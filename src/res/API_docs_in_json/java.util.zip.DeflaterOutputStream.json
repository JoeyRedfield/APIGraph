{"Functions": {"finish()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", "if an I/O error has occurred"]], "SeeAlso": [], "Permissions": [], "Description": "Finishes writing compressed data to the output stream without closing the underlying stream. Use this method when applying multiple filters in succession to the same output stream.", "history": "Added in API level 1", "FullName": "public void finish ()"}, "DeflaterOutputStream(java.io.OutputStream,java.util.zip.Deflater,int,boolean)": {"Returns": [], "Parameters": [["@B_java#io#OutputStream_E@", "OutputStream: the output stream"], ["@B_java#util#zip#Deflater_E@", "Deflater: the compressor (\"deflater\")"], ["int", "int: the output buffer size"], ["boolean", "boolean: if true the @B_java#util#zip#DeflaterOutputStream#flush_E@ method of this instance flushes the compressor with flush mode @B_java#util#zip#Deflater#SYNC_FLUSH_E@ before flushing the output stream, otherwise only flushes the output stream"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if size <= 0"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new output stream with the specified compressor, buffer size and flush mode.", "history": "Added in API level 19", "FullName": "public DeflaterOutputStream (OutputStream out, Deflater def, int size, boolean syncFlush)"}, "DeflaterOutputStream(java.io.OutputStream,java.util.zip.Deflater,boolean)": {"Returns": [], "Parameters": [["@B_java#io#OutputStream_E@", "OutputStream: the output stream"], ["@B_java#util#zip#Deflater_E@", "Deflater: the compressor (\"deflater\")"], ["boolean", "boolean: if true the @B_java#util#zip#DeflaterOutputStream#flush_E@ method of this instance flushes the compressor with flush mode @B_java#util#zip#Deflater#SYNC_FLUSH_E@ before flushing the output stream, otherwise only flushes the output stream"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new output stream with the specified compressor, flush mode and a default buffer size.", "history": "Added in API level 19", "FullName": "public DeflaterOutputStream (OutputStream out, Deflater def, boolean syncFlush)"}, "deflate()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", "if an I/O error has occurred"]], "SeeAlso": [], "Permissions": [], "Description": "Writes next block of compressed data to the output stream.", "history": "Added in API level 1", "FullName": "protected void deflate ()"}, "close()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", "if an I/O error has occurred"]], "SeeAlso": [], "Permissions": [], "Description": "Writes remaining compressed data to the output stream and closes the underlying stream.", "history": "Added in API level 1", "FullName": "public void close ()"}, "DeflaterOutputStream(java.io.OutputStream,java.util.zip.Deflater,int)": {"Returns": [], "Parameters": [["@B_java#io#OutputStream_E@", "OutputStream: the output stream"], ["@B_java#util#zip#Deflater_E@", "Deflater: the compressor (\"deflater\")"], ["int", "int: the output buffer size"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if size <= 0"]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new output stream with the specified compressor and buffer size. The new output stream instance is created as if by invoking the 4-argument constructor DeflaterOutputStream(out, def, size, false).", "history": "Added in API level 1", "FullName": "public DeflaterOutputStream (OutputStream out, Deflater def, int size)"}, "DeflaterOutputStream(java.io.OutputStream,java.util.zip.Deflater)": {"Returns": [], "Parameters": [["@B_java#io#OutputStream_E@", "OutputStream: the output stream"], ["@B_java#util#zip#Deflater_E@", "Deflater: the compressor (\"deflater\")"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new output stream with the specified compressor and a default buffer size. The new output stream instance is created as if by invoking the 3-argument constructor DeflaterOutputStream(out, def, false).", "history": "Added in API level 1", "FullName": "public DeflaterOutputStream (OutputStream out, Deflater def)"}, "write(int)": {"Returns": [], "Parameters": [["int", "int: the byte to be written"]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error has occurred"]], "SeeAlso": [], "Permissions": [], "Description": "Writes a byte to the compressed output stream. This method will block until the byte can be written.", "history": "Added in API level 1", "FullName": "public void write (int b)"}, "DeflaterOutputStream(java.io.OutputStream)": {"Returns": [], "Parameters": [["@B_java#io#OutputStream_E@", "OutputStream: the output stream"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new output stream with a default compressor and buffer size. The new output stream instance is created as if by invoking the 2-argument constructor DeflaterOutputStream(out, false).", "history": "Added in API level 1", "FullName": "public DeflaterOutputStream (OutputStream out)"}, "flush()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", "if an I/O error has occurred"]], "SeeAlso": [], "Permissions": [], "Description": "Flushes the compressed output stream. If @B_java#util#zip#DeflaterOutputStream#DeflaterOutputStream_E@ is true when this compressed output stream is constructed, this method first flushes the underlying compressor with the flush mode @B_java#util#zip#Deflater#SYNC_FLUSH_E@ to force all pending data to be flushed out to the output stream and then flushes the output stream. Otherwise this method only flushes the output stream without flushing the compressor.", "history": "Added in API level 1", "FullName": "public void flush ()"}, "DeflaterOutputStream(java.io.OutputStream,boolean)": {"Returns": [], "Parameters": [["@B_java#io#OutputStream_E@", "OutputStream: the output stream"], ["boolean", "boolean: if true the @B_java#util#zip#DeflaterOutputStream#flush_E@ method of this instance flushes the compressor with flush mode @B_java#util#zip#Deflater#SYNC_FLUSH_E@ before flushing the output stream, otherwise only flushes the output stream"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new output stream with a default compressor, a default buffer size and the specified flush mode.", "history": "Added in API level 19", "FullName": "public DeflaterOutputStream (OutputStream out, boolean syncFlush)"}, "write(byte[],int,int)": {"Returns": [], "Parameters": [["byte[]", "byte: the data to be written"], ["int", "int: the start offset of the data"], ["int", "int: the length of the data"]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error has occurred"]], "SeeAlso": [], "Permissions": [], "Description": "Writes an array of bytes to the compressed output stream. This method will block until all the bytes are written.", "history": "Added in API level 1", "FullName": "public void write (byte[] b, int off, int len)"}, "write(byte[], int, int)": {"Returns": [], "Parameters": [["byte[]", "byte: the data to be written"], ["int", "int: the start offset of the data"], ["int", "int: the length of the data"]], "Throws": [["@B_java#io#IOException_E@", "if an I/O error has occurred"]], "SeeAlso": [], "Permissions": [], "Description": "Writes an array of bytes to the compressed output stream. This method will block until all the bytes are written.", "history": "added in API level 1", "FullName": "public void write (byte[] b, int off, int len)"}}, "Inheritance": ["@B_java#io#OutputStream_E@", "@B_java#io#FilterOutputStream_E@"], "ClassName": "java.util.zip.DeflaterOutputStream", "ClassDesc": "This class implements an output stream filter for compressing data in the \"deflate\" compression format. It is also used as the basis for other types of compression filters, such as GZIPOutputStream."}