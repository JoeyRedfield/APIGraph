{"Functions": {"dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])": {"Returns": [], "Parameters": [["@B_java#io#FileDescriptor_E@", "FileDescriptor: The raw file descriptor that the dump is being sent to."], ["@B_java#io#PrintWriter_E@", "PrintWriter: The PrintWriter to which you should dump your state. This will be closed for you after you return."], ["@B_java#lang#String_E@", "String: additional arguments to the dump request."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Print the Service's state into the given stream. This gets invoked if you run \"adb shell dumpsys activity service <yourservicename>\" (note that for this command to work, the service must be running, and you must specify a fully-qualified service name). This is distinct from \"dumpsys <servicename>\", which only works for named system services and which invokes the @B_android#os#IBinder#dump_E@ method on the @B_android#os#IBinder_E@ interface registered with ServiceManager.", "history": "Added in API level 7", "FullName": "protected void dump (FileDescriptor fd, PrintWriter out, String[] args)"}, "onCreate()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called by the system when the service is first created. Do not call this method directly.", "history": "Added in API level 7", "FullName": "public void onCreate ()"}, "onDestroy()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called by the system to notify a Service that it is no longer used and is being removed. The service should clean up any resources it holds (threads, registered receivers, etc) at this point. Upon return, there will be no more calls in to this Service object and it is effectively dead. Do not call this method directly.", "history": "Added in API level 7", "FullName": "public void onDestroy ()"}, "onCreateEngine()": {"Returns": [["@B_android#service#wallpaper#WallpaperService#Engine_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Must be implemented to return a new instance of the wallpaper's engine. Note that multiple instances may be active at the same time, such as when the wallpaper is currently set as the active wallpaper and the user is in the wallpaper picker viewing a preview of it as well.", "history": "Added in API level 7", "FullName": "public abstract WallpaperService.Engine onCreateEngine ()"}, "onBind(android.content.Intent)": {"Returns": [["@B_android#os#IBinder_E@", "Return an IBinder through which clients can call on to the service."]], "Parameters": [["@B_android#content#Intent_E@", "Intent: The Intent that was used to bind to this service, as given to @B_android#content#Context#bindService_E@. Note that any extras that were included with the Intent at that point will not be seen here."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Implement to return the implementation of the internal accessibility service interface. Subclasses should not override.", "history": "Added in API level 7", "FullName": "public final IBinder onBind (Intent intent)"}, "WallpaperService()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 7", "FullName": "public WallpaperService ()"}}, "Inheritance": ["@B_android#content#Context_E@", "@B_android#content#ContextWrapper_E@", "@B_android#app#Service_E@"], "ClassName": "android.service.wallpaper.WallpaperService", "ClassDesc": "A wallpaper service is responsible for showing a live wallpaper behind applications that would like to sit on top of it. This service object itself does very little -- its only purpose is to generate instances of @B_android#service#wallpaper#WallpaperService#Engine_E@ as needed. Implementing a wallpaper thus involves subclassing from this, subclassing an Engine implementation, and implementing @B_android#service#wallpaper#WallpaperService#onCreateEngine_E@ to return a new instance of your engine."}