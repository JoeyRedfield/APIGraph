{"Functions": {"setAudioFormat(android.media.AudioFormat)": {"Returns": [["@B_android#media#AudioTrack#Builder_E@", "the same Builder instance."]], "Parameters": [["@B_android#media#AudioFormat_E@", "AudioFormat: a non-null @B_android#media#AudioFormat_E@ instance. This value must never be null."]], "Throws": [["", "java.lang.IllegalArgumentException"], ["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Sets the format of the audio data to be played by the @B_android#media#AudioTrack_E@. See @B_android#media#AudioFormat#Builder_E@ for configuring the audio format parameters such as encoding, channel mask and sample rate.", "history": "Added in API level 23", "FullName": "public AudioTrack.Builder setAudioFormat (AudioFormat format)"}, "setAudioAttributes(android.media.AudioAttributes)": {"Returns": [["@B_android#media#AudioTrack#Builder_E@", "the same Builder instance."]], "Parameters": [["@B_android#media#AudioAttributes_E@", "AudioAttributes: a non-null @B_android#media#AudioAttributes_E@ instance that describes the audio data to be played. This value must never be null."]], "Throws": [["", "java.lang.IllegalArgumentException"], ["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Sets the @B_android#media#AudioAttributes_E@.", "history": "Added in API level 23", "FullName": "public AudioTrack.Builder setAudioAttributes (AudioAttributes attributes)"}, "setTransferMode(int)": {"Returns": [["@B_android#media#AudioTrack#Builder_E@", "the same Builder instance. This value will never be null."]], "Parameters": [["int", "int: one of @B_android#media#AudioTrack#MODE_STREAM_E@, @B_android#media#AudioTrack#MODE_STATIC_E@. Value is @B_android#media#AudioTrack#MODE_STATIC_E@, or @B_android#media#AudioTrack#MODE_STREAM_E@"]], "Throws": [["", "java.lang.IllegalArgumentException"], ["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Sets the mode under which buffers of audio data are transferred from the @B_android#media#AudioTrack_E@ to the framework.", "history": "Added in API level 23", "FullName": "public AudioTrack.Builder setTransferMode (int mode)"}, "setSessionId(int)": {"Returns": [["@B_android#media#AudioTrack#Builder_E@", "the same Builder instance. This value will never be null."]], "Parameters": [["int", "int: a strictly positive ID number retrieved from another AudioTrack via @B_android#media#AudioTrack#getAudioSessionId_E@ or allocated by @B_android#media#AudioManager_E@ via @B_android#media#AudioManager#generateAudioSessionId_E@, or @B_android#media#AudioManager#AUDIO_SESSION_ID_GENERATE_E@. Value is 1 or greater"]], "Throws": [["", "java.lang.IllegalArgumentException"], ["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Sets the session ID the @B_android#media#AudioTrack_E@ will be attached to.", "history": "Added in API level 23", "FullName": "public AudioTrack.Builder setSessionId (int sessionId)"}, "setBufferSizeInBytes(int)": {"Returns": [["@B_android#media#AudioTrack#Builder_E@", "the same Builder instance. This value will never be null."]], "Parameters": [["int", "int: Value is 0 or greater"]], "Throws": [["", "java.lang.IllegalArgumentException"], ["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Sets the total size (in bytes) of the buffer where audio data is read from for playback. If using the @B_android#media#AudioTrack_E@ in streaming mode (see @B_android#media#AudioTrack#MODE_STREAM_E@, you can write data into this buffer in smaller chunks than this size. See @B_android#media#AudioTrack#getMinBufferSize_E@ to determine the estimated minimum buffer size for the creation of an AudioTrack instance in streaming mode. If using the AudioTrack in static mode (see @B_android#media#AudioTrack#MODE_STATIC_E@), this is the maximum size of the sound that will be played by this instance.", "history": "Added in API level 23", "FullName": "public AudioTrack.Builder setBufferSizeInBytes (int bufferSizeInBytes)"}, "AudioTrack.Builder()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new Builder with the default values as described above.", "history": "Added in API level 23", "FullName": "public AudioTrack.Builder ()"}, "setPerformanceMode(int)": {"Returns": [["@B_android#media#AudioTrack#Builder_E@", "the same Builder instance. This value will never be null."]], "Parameters": [["int", "int: one of @B_android#media#AudioTrack#PERFORMANCE_MODE_NONE_E@, @B_android#media#AudioTrack#PERFORMANCE_MODE_LOW_LATENCY_E@, or @B_android#media#AudioTrack#PERFORMANCE_MODE_POWER_SAVING_E@. Value is @B_android#media#AudioTrack#PERFORMANCE_MODE_NONE_E@, @B_android#media#AudioTrack#PERFORMANCE_MODE_LOW_LATENCY_E@, or @B_android#media#AudioTrack#PERFORMANCE_MODE_POWER_SAVING_E@"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if performanceMode is not valid."]], "SeeAlso": [], "Permissions": [], "Description": "Sets the @B_android#media#AudioTrack_E@ performance mode. This is an advisory request which may not be supported by the particular device, and the framework is free to ignore such request if it is incompatible with other requests or hardware.", "history": "Added in API level 26", "FullName": "public AudioTrack.Builder setPerformanceMode (int performanceMode)"}, "build()": {"Returns": [["@B_android#media#AudioTrack_E@", "a new successfully initialized @B_android#media#AudioTrack_E@ instance. This value will never be null."]], "Parameters": [], "Throws": [["@B_java#lang#UnsupportedOperationException_E@", "if the parameters set on the Builder were incompatible, or if they are not supported by the device, or if the device was not available."]], "SeeAlso": [], "Permissions": [], "Description": "Builds an @B_android#media#AudioTrack_E@ instance initialized with all the parameters set on this Builder.", "history": "Added in API level 23", "FullName": "public AudioTrack build ()"}, "setOffloadedPlayback(boolean)": {"Returns": [["@B_android#media#AudioTrack#Builder_E@", "the same Builder instance. This value will never be null."]], "Parameters": [["boolean", "boolean: true to require the offload path for playback."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether this track will play through the offloaded audio path. When set to true, at build time, the audio format will be checked against @B_android#media#AudioManager#isOffloadedPlaybackSupported_E@ to verify the audio format used by this track is supported on the device's offload path (if any). Offload is only supported for media audio streams, and therefore requires that the usage be @B_android#media#AudioAttributes#USAGE_MEDIA_E@.", "history": "Added in API level 29", "FullName": "public AudioTrack.Builder setOffloadedPlayback (boolean offload)"}}, "Inheritance": [], "ClassName": "android.media.AudioTrack.Builder", "ClassDesc": "Builder class for @B_android#media#AudioTrack_E@ objects. Use this class to configure and create an AudioTrack instance. By setting audio attributes and audio format parameters, you indicate which of those vary from the default behavior on the device. Here is an example where Builder is used to specify all @B_android#media#AudioFormat_E@ parameters, to be used by a new AudioTrack instance: If the audio attributes are not set with @B_android#media#AudioTrack#Builder#setAudioAttributes_E@, attributes comprising @B_android#media#AudioAttributes#USAGE_MEDIA_E@ will be used. If the audio format is not specified or is incomplete, its channel configuration will be @B_android#media#AudioFormat#CHANNEL_OUT_STEREO_E@ and the encoding will be @B_android#media#AudioFormat#ENCODING_PCM_16BIT_E@. The sample rate will depend on the device actually selected for playback and can be queried with @B_android#media#AudioTrack#getSampleRate_E@ method. If the buffer size is not specified with @B_android#media#AudioTrack#Builder#setBufferSizeInBytes_E@, and the mode is @B_android#media#AudioTrack#MODE_STREAM_E@, the minimum buffer size is used. If the transfer mode is not specified with @B_android#media#AudioTrack#Builder#setTransferMode_E@, MODE_STREAM will be used. If the session ID is not specified with @B_android#media#AudioTrack#Builder#setSessionId_E@, a new one will be generated. Offload is false by default."}