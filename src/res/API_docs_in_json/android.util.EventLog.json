{"Functions": {"writeEvent(int,float)": {"Returns": [["int", "The number of bytes written"]], "Parameters": [["int", "int: The event type tag code"], ["float", "float: A value to log"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Record an event log message.", "history": "Added in API level 23", "FullName": "public static int writeEvent (int tag, float value)"}, "writeEvent(int, float)": {"Returns": [["int", "The number of bytes written"]], "Parameters": [["int", "int: The event type tag code"], ["float", "float: A value to log"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Record an event log message.", "history": "added in API level 23", "FullName": "public static int writeEvent (int tag, float value)"}, "writeEvent(int, long)": {"Returns": [["int", "The number of bytes written"]], "Parameters": [["int", "int: The event type tag code"], ["long", "long: A value to log"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Record an event log message.", "history": "added in API level 8", "FullName": "public static int writeEvent (int tag, long value)"}, "writeEvent(int,long)": {"Returns": [["int", "The number of bytes written"]], "Parameters": [["int", "int: The event type tag code"], ["long", "long: A value to log"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Record an event log message.", "history": "Added in API level 8", "FullName": "public static int writeEvent (int tag, long value)"}, "writeEvent(int, java.lang.String)": {"Returns": [["int", "The number of bytes written"]], "Parameters": [["int", "int: The event type tag code"], ["@B_java#lang#String_E@", "String: A value to log"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Record an event log message.", "history": "added in API level 8", "FullName": "public static int writeEvent (int tag, String str)"}, "writeEvent(int, int)": {"Returns": [["int", "The number of bytes written"]], "Parameters": [["int", "int: The event type tag code"], ["int", "int: A value to log"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Record an event log message.", "history": "added in API level 8", "FullName": "public static int writeEvent (int tag, int value)"}, "writeEvent(int,int)": {"Returns": [["int", "The number of bytes written"]], "Parameters": [["int", "int: The event type tag code"], ["int", "int: A value to log"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Record an event log message.", "history": "Added in API level 8", "FullName": "public static int writeEvent (int tag, int value)"}, "writeEvent(int, java.lang.Object...)": {"Returns": [["int", "The number of bytes written"]], "Parameters": [["int", "int: The event type tag code"], ["@B_java#lang#Object_E@", "Object: A list of values to log"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Record an event log message.", "history": "added in API level 8", "FullName": "public static int writeEvent (int tag, Object... list)"}, "writeEvent(int,java.lang.Object...)": {"Returns": [["int", "The number of bytes written"]], "Parameters": [["int", "int: The event type tag code"], ["@B_java#lang#Object_E@", "Object: A list of values to log"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Record an event log message.", "history": "Added in API level 8", "FullName": "public static int writeEvent (int tag, Object... list)"}, "getTagName(int)": {"Returns": [["@B_java#lang#String_E@", "the name of the tag, or null if no tag has that number"]], "Parameters": [["int", "int: code to look up"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the name associated with an event type tag code.", "history": "Added in API level 8", "FullName": "public static String getTagName (int tag)"}, "readEvents(int[],java.util.Collection<android.util.EventLog.Event>)": {"Returns": [], "Parameters": [["int[]", "int: to search for"], ["@B_java#util#Collection_E@", "Collection: container to add events into"]], "Throws": [["@B_java#io#IOException_E@", "if something goes wrong reading events"]], "SeeAlso": [], "Permissions": [], "Description": "Read events from the log, filtered by type.", "history": "Added in API level 8", "FullName": "public static void readEvents (int[] tags, Collection<EventLog.Event> output)"}, "getTagCode(java.lang.String)": {"Returns": [["int", "the tag code, or -1 if no tag has that name"]], "Parameters": [["@B_java#lang#String_E@", "String: of event to look up"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the event type tag code associated with an event name.", "history": "Added in API level 8", "FullName": "public static int getTagCode (String name)"}, "writeEvent(int,java.lang.String)": {"Returns": [["int", "The number of bytes written"]], "Parameters": [["int", "int: The event type tag code"], ["@B_java#lang#String_E@", "String: A value to log"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Record an event log message.", "history": "Added in API level 8", "FullName": "public static int writeEvent (int tag, String str)"}}, "Inheritance": [], "ClassName": "android.util.EventLog", "ClassDesc": "Access to the system diagnostic event record. System diagnostic events are used to record certain system-level events (such as garbage collection, activity manager state, system watchdogs, and other low level activity), which may be automatically collected and analyzed during system development. This is @B_android#util#Log_E@)! These diagnostic events are for system integrators, not application authors. Events use integer tag codes corresponding to /system/etc/event-log-tags. They carry a payload of one or more int, long, or String values. The event-log-tags file defines the payload contents for each type code."}