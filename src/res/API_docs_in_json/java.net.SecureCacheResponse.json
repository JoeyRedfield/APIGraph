{"Functions": {"getPeerPrincipal()": {"Returns": [["@B_java#security#Principal_E@", "the server's principal. Returns an X500Principal of the end-entity certiticate for X509-based cipher suites, and KerberosPrincipal for Kerberos cipher suites."]], "Parameters": [], "Throws": [["@B_javax#net#ssl#SSLPeerUnverifiedException_E@", "if the peer was not verified."]], "SeeAlso": ["@B_java#net#SecureCacheResponse#getServerCertificateChain_E@", "@B_java#net#SecureCacheResponse#getLocalPrincipal_E@"], "Permissions": [], "Description": "Returns the server's principal which was established as part of defining the session during the original connection that retrieved the network resource.", "history": "Added in API level 1", "FullName": "public abstract Principal getPeerPrincipal ()"}, "SecureCacheResponse()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public SecureCacheResponse ()"}, "getLocalCertificateChain()": {"Returns": [["@B_java#util#List_E@", "an immutable List of Certificate representing the certificate chain that was sent to the server. If no certificate chain was sent, null will be returned."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#net#SecureCacheResponse#getLocalPrincipal_E@"], "Permissions": [], "Description": "Returns the certificate chain that were sent to the server during handshaking of the original connection that retrieved the network resource. Note: This method is useful only when using certificate-based cipher suites.", "history": "Added in API level 1", "FullName": "public abstract List<Certificate> getLocalCertificateChain ()"}, "getLocalPrincipal()": {"Returns": [["@B_java#security#Principal_E@", "the principal sent to the server. Returns an X500Principal of the end-entity certificate for X509-based cipher suites, and KerberosPrincipal for Kerberos cipher suites. If no principal was sent, then null is returned."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#net#SecureCacheResponse#getLocalCertificateChain_E@", "@B_java#net#SecureCacheResponse#getPeerPrincipal_E@"], "Permissions": [], "Description": "Returns the principal that was sent to the server during handshaking in the original connection that retrieved the network resource.", "history": "Added in API level 1", "FullName": "public abstract Principal getLocalPrincipal ()"}, "getCipherSuite()": {"Returns": [["@B_java#lang#String_E@", "a string representing the cipher suite"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the cipher suite in use on the original connection that retrieved the network resource.", "history": "Added in API level 1", "FullName": "public abstract String getCipherSuite ()"}, "getServerCertificateChain()": {"Returns": [["@B_java#util#List_E@", "an immutable List of Certificate representing the server's certificate chain."]], "Parameters": [], "Throws": [["@B_javax#net#ssl#SSLPeerUnverifiedException_E@", "if the peer is not verified."]], "SeeAlso": ["@B_java#net#SecureCacheResponse#getPeerPrincipal_E@"], "Permissions": [], "Description": "Returns the server's certificate chain, which was established as part of defining the session in the original connection that retrieved the network resource, from cache. Note: This method can be used only when using certificate-based cipher suites; using it with non-certificate-based cipher suites, such as Kerberos, will throw an SSLPeerUnverifiedException.", "history": "Added in API level 1", "FullName": "public abstract List<Certificate> getServerCertificateChain ()"}}, "Inheritance": ["@B_java#net#CacheResponse_E@"], "ClassName": "java.net.SecureCacheResponse", "ClassDesc": "Represents a cache response originally retrieved through secure means, such as TLS."}