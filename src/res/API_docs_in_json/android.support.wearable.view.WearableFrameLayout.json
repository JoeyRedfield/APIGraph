{"Functions": {"getForegroundTintList()": {"Returns": [["ColorStateList", "the tint applied to the foreground drawable"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#wearable#view#WearableFrameLayout#setForegroundTintList_E@"], "Permissions": [], "Description": "", "history": "", "FullName": "ColorStateList getForegroundTintList ()"}, "draw(android.graphics.Canvas)": {"Returns": [], "Parameters": [["Canvas", "Canvas no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void draw (Canvas canvas)"}, "setForegroundInPadding(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether foreground should be in padding. True by default.", "history": "", "FullName": "void setForegroundInPadding (boolean value)"}, "onSizeChanged(int, int, int, int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void onSizeChanged (int w, int h, int oldw, int oldh)"}, "generateLayoutParams(android.util.AttributeSet)": {"Returns": [["@B_android#support#wearable#view#WearableFrameLayout#LayoutParams_E@", "no returns description in source"]], "Parameters": [["AttributeSet", "AttributeSet no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "WearableFrameLayout.LayoutParams generateLayoutParams (AttributeSet attrs)"}, "getForegroundGravity()": {"Returns": [["int", "foreground gravity."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#wearable#view#WearableFrameLayout#setForegroundGravity_E@"], "Permissions": [], "Description": "Describes how the foreground is positioned.", "history": "", "FullName": "int getForegroundGravity ()"}, "setMeasureAllChildren(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true to consider children marked GONE, false otherwise. Default value is false."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether to consider all children, or just those in the VISIBLE or INVISIBLE state, when measuring. Defaults to false.", "history": "", "FullName": "void setMeasureAllChildren (boolean measureAll)"}, "onLayout(boolean, int, int, int, int)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void onLayout (boolean changed, int left, int top, int right, int bottom)"}, "setForegroundGravity(int)": {"Returns": [], "Parameters": [["int", "int: See @B_android#view#Gravity_E@"]], "Throws": [], "SeeAlso": ["@B_android#support#wearable#view#WearableFrameLayout#getForegroundGravity_E@"], "Permissions": [], "Description": "Describes how the foreground is positioned. Defaults to START and TOP.", "history": "", "FullName": "void setForegroundGravity (int foregroundGravity)"}, "onMeasure(int, int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void onMeasure (int widthMeasureSpec, int heightMeasureSpec)"}, "verifyDrawable(android.graphics.drawable.Drawable)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["Drawable", "Drawable no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "boolean verifyDrawable (Drawable who)"}, "shouldDelayChildPressedState()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "boolean shouldDelayChildPressedState ()"}, "jumpDrawablesToCurrentState()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void jumpDrawablesToCurrentState ()"}, "drawableStateChanged()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void drawableStateChanged ()"}, "getMeasureAllChildren()": {"Returns": [["boolean", "Whether all children are considered when measuring."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Determines whether all children, or just those in the VISIBLE or INVISIBLE state, are considered when measuring.", "history": "", "FullName": "boolean getMeasureAllChildren ()"}, "getForegroundTintMode()": {"Returns": [["PorterDuff.Mode", "the blending mode used to apply the tint to the foreground drawable"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#wearable#view#WearableFrameLayout#setForegroundTintMode_E@"], "Permissions": [], "Description": "", "history": "", "FullName": "PorterDuff.Mode getForegroundTintMode ()"}, "setForeground(android.graphics.drawable.Drawable)": {"Returns": [], "Parameters": [["Drawable", "Drawable: The Drawable to be drawn on top of the children."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Supply a Drawable that is to be rendered on top of all of the child views in the frame layout. Any padding in the Drawable will be taken into account by ensuring that the children are inset to be placed inside of the padding area.", "history": "", "FullName": "void setForeground (Drawable d)"}, "WearableFrameLayout(android.content.Context)": {"Returns": [], "Parameters": [["Context", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "WearableFrameLayout (Context context)"}, "setVisibility(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void setVisibility (int visibility)"}, "getForeground()": {"Returns": [["Drawable", "A Drawable or null if no foreground was set."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the drawable used as the foreground of this FrameLayout. The foreground drawable, if non-null, is always drawn on top of the children.", "history": "", "FullName": "Drawable getForeground ()"}, "generateDefaultLayoutParams()": {"Returns": [["@B_android#support#wearable#view#WearableFrameLayout#LayoutParams_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a set of layout parameters with a width of @B_android#view#ViewGroup#LayoutParams#MATCH_PARENT_E@, and a height of @B_android#view#ViewGroup#LayoutParams#MATCH_PARENT_E@.", "history": "", "FullName": "WearableFrameLayout.LayoutParams generateDefaultLayoutParams ()"}, "onAttachedToWindow()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void onAttachedToWindow ()"}, "onApplyWindowInsets(android.view.WindowInsets)": {"Returns": [["WindowInsets", "no returns description in source"]], "Parameters": [["WindowInsets", "WindowInsets no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "WindowInsets onApplyWindowInsets (WindowInsets insets)"}, "drawableHotspotChanged(float, float)": {"Returns": [], "Parameters": [["float", "float no parameter comment"], ["float", "float no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void drawableHotspotChanged (float x, float y)"}}, "Inheritance": ["http:##developer#android#com@B_java#lang#Object_E@", "http:##developer#android#com@B_android#view#View_E@", "http:##developer#android#com@B_android#view#ViewGroup_E@"], "ClassName": "android.support.wearable.view.WearableFrameLayout", "ClassDesc": "starting with API 23 the sdk supports \"round\" and \"notround\" configuration qualifiers which are preferred. For more information about configuration qualifiers, see WearableFrameLayout works exactly like FrameLayout, except it can have overrides for a round screen. Besides using normal FrameLayout.LayoutParams attributes in your layout, you can also use *Round overrides, that will be applied instead if the device has a round screen. For example:"}