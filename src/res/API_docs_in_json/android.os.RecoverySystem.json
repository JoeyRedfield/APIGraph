{"Functions": {"rebootWipeUserData(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: the Context to use"]], "Throws": [["@B_java#io#IOException_E@", "if writing the recovery command file fails, or if the reboot itself fails."], ["@B_java#lang#SecurityException_E@", "if the current user is not allowed to wipe data."]], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#REBOOT_E@"], "Description": "Reboots the device and wipes the user data and cache partitions. This is sometimes called a \"factory reset\", which is something of a misnomer because the system partition is not restored to its factory state. Requires the @B_android#Manifest#permission#REBOOT_E@ permission.", "history": "Added in API level 8", "FullName": "public static void rebootWipeUserData (Context context)"}, "rebootWipeCache(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"]], "Throws": [["@B_java#io#IOException_E@", "if something goes wrong."]], "SeeAlso": [], "Permissions": [], "Description": "Reboot into the recovery system to wipe the /cache partition.", "history": "Added in API level 14", "FullName": "public static void rebootWipeCache (Context context)"}, "verifyPackage(java.io.File,android.os.RecoverySystem.ProgressListener,java.io.File)": {"Returns": [], "Parameters": [["@B_java#io#File_E@", "File: the package to be verified"], ["@B_android#os#RecoverySystem#ProgressListener_E@", "RecoverySystem.ProgressListener: an object to receive periodic progress updates as verification proceeds. May be null."], ["@B_java#io#File_E@", "File: the zip file of certificates whose public keys we will accept. Verification succeeds if the package is signed by the private key corresponding to any public key in this file. May be null to use the system default file (currently \"/system/etc/security/otacerts.zip\")."]], "Throws": [["@B_java#io#IOException_E@", "if there were any errors reading the package or certs files."], ["@B_java#security#GeneralSecurityException_E@", "if verification failed"]], "SeeAlso": [], "Permissions": [], "Description": "Verify the cryptographic signature of a system update package before installing it. Note that the package is also verified separately by the installer once the device is rebooted into the recovery system. This function will return only if the package was successfully verified; otherwise it will throw an exception. Verification of a package can take significant time, so this function should not be called from a UI thread. Interrupting the thread while this function is in progress will result in a SecurityException being thrown (and the thread's interrupt flag will be cleared).", "history": "Added in API level 8", "FullName": "public static void verifyPackage (File packageFile, RecoverySystem.ProgressListener listener, File deviceCertsZipFile)"}, "installPackage(android.content.Context,java.io.File)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: the Context to use"], ["@B_java#io#File_E@", "File: the update package to install. Must be on a partition mountable by recovery. (The set of partitions known to recovery may vary from device to device. Generally, /cache and /data are safe.)"]], "Throws": [["@B_java#io#IOException_E@", "if writing the recovery command file fails, or if the reboot itself fails."]], "SeeAlso": [], "Permissions": ["@B_android#Manifest#permission#REBOOT_E@"], "Description": "Reboots the device in order to install the given update package. Requires the @B_android#Manifest#permission#REBOOT_E@ permission. Requires android.Manifest.permission.RECOVERY", "history": "Added in API level 8", "FullName": "public static void installPackage (Context context, File packageFile)"}, "RecoverySystem()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 8", "FullName": "public RecoverySystem ()"}}, "Inheritance": [], "ClassName": "android.os.RecoverySystem", "ClassDesc": "RecoverySystem contains methods for interacting with the Android recovery system (the separate partition that can be used to install system updates, wipe user data, etc.)"}