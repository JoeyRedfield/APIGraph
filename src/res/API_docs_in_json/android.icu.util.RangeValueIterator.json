{"Functions": {"next(android.icu.util.RangeValueIterator.Element)": {"Returns": [["boolean", "true if we are not at the end of the iteration, false otherwise."]], "Parameters": [["@B_android#icu#util#RangeValueIterator#Element_E@", "RangeValueIterator.Element: for storing the result range and value"]], "Throws": [], "SeeAlso": ["@B_android#icu#util#RangeValueIterator#Element_E@"], "Permissions": [], "Description": "Returns the next maximal result range with a common value and returns true if we are not at the end of the iteration, false otherwise. If this returns a false, the contents of elements will not be updated.", "history": "Added in API level 24", "FullName": "public abstract boolean next (RangeValueIterator.Element element)"}, "reset()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Resets the iterator to the beginning of the iteration.", "history": "Added in API level 24", "FullName": "public abstract void reset ()"}}, "Inheritance": [], "ClassName": "android.icu.util.RangeValueIterator", "ClassDesc": "Interface for enabling iteration over sets of <int index, int value>, where index is the sorted integer index in ascending order and value, its associated integer value. The result for each iteration is the consecutive range of <int index, int value> with the same value. Result is represented by <start, limit, value> where start is the starting integer of the result range limit is 1 after the maximum integer that follows start, such that all integers between start and (limit - 1), inclusive, have the same associated integer value. value is the integer value that all integers from start to (limit - 1) share in common. Hence value(start) = value(start + 1) = .... = value(start + n) = .... = value(limit - 1). However value(start -1) != value(start) and value(limit) != value(start). Most implementations will be created by factory methods, such as the character type iterator in UCharacter.getTypeIterator. See example below. Example of use:"}