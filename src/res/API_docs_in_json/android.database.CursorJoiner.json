{"Functions": {"remove()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes from the underlying collection the last element returned by this iterator (optional operation). This method can be called only once per call to @B_java#util#Iterator#next_E@. The behavior of an iterator is unspecified if the underlying collection is modified while the iteration is in progress in any way other than by calling this method.", "history": "Added in API level 1", "FullName": "public void remove ()"}, "next()": {"Returns": [["@B_android#database#CursorJoiner#Result_E@", "LEFT, if the row pointed to by the left cursor is unique, RIGHT if the row pointed to by the right cursor is unique, BOTH if the rows in both cursors are the same."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the comparison result of the next row from each cursor. If one cursor has no more rows but the other does then subsequent calls to this will indicate that the remaining rows are unique. The caller must check that hasNext() returns true before calling this. Once next() has been called the cursors specified in the result of the call to next() are guaranteed to point to the row that was indicated. Reading values from the cursor that was not indicated in the call to next() will result in undefined behavior.", "history": "Added in API level 1", "FullName": "public CursorJoiner.Result next ()"}, "hasNext()": {"Returns": [["boolean", "true if there are more rows to compare"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether or not there are more rows to compare using next().", "history": "Added in API level 1", "FullName": "public boolean hasNext ()"}, "CursorJoiner(android.database.Cursor,java.lang.String[],android.database.Cursor,java.lang.String[])": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: The left cursor to compare"], ["@B_java#lang#String_E@", "String: The column names to compare from the left cursor"], ["@B_android#database#Cursor_E@", "Cursor: The right cursor to compare"], ["@B_java#lang#String_E@", "String: The column names to compare from the right cursor"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Initializes the CursorJoiner and resets the cursors to the first row. The left and right column name arrays must have the same number of columns.", "history": "Added in API level 1", "FullName": "public CursorJoiner (Cursor cursorLeft, String[] columnNamesLeft, Cursor cursorRight, String[] columnNamesRight)"}, "iterator()": {"Returns": [["@B_java#util#Iterator_E@", "an Iterator."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an iterator over elements of type T.", "history": "Added in API level 1", "FullName": "public Iterator<CursorJoiner.Result> iterator ()"}}, "Inheritance": [], "ClassName": "android.database.CursorJoiner", "ClassDesc": "Does a join on two cursors using the specified columns. The cursors must already be sorted on each of the specified columns in ascending order. This joiner only supports the case where the tuple of key column values is unique. Typical usage:"}