{"Functions": {"sendKeys(int...)": {"Returns": [], "Parameters": [["int...", "int: The series of key codes to send through instrumentation."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sends a series of key events through instrumentation and waits for idle. For instance: sendKeys(KEYCODE_DPAD_LEFT, KEYCODE_DPAD_CENTER).", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public void sendKeys (int... keys)"}, "sendKeys(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The sequence of keys."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sends a series of key events through instrumentation and waits for idle. The sequence of keys is a string containing the key names as specified in KeyEvent, without the KEYCODE_ prefix. For instance: sendKeys(\"DPAD_LEFT A B C DPAD_CENTER\"). Each key can be repeated by using the N* prefix. For instance, to send two KEYCODE_DPAD_LEFT, use the following: sendKeys(\"2*DPAD_LEFT\").", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public void sendKeys (String keysSequence)"}, "InstrumentationTestCase()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public InstrumentationTestCase ()"}, "tearDown()": {"Returns": [], "Parameters": [], "Throws": [["", "java.lang.Exception"], ["@B_java#lang#Exception_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Make sure all resources are cleaned up and garbage collected before moving on to the next test. Subclasses that override this method should make sure they call super.tearDown() at the end of the overriding method.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "protected void tearDown ()"}, "runTest()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#lang#Throwable_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Runs the current unit test. If the unit test is annotated with @B_android#test#UiThreadTest_E@, the test is run on the UI thread.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "protected void runTest ()"}, "runTestOnUiThread(java.lang.Runnable)": {"Returns": [], "Parameters": [["@B_java#lang#Runnable_E@", "Runnable: runnable containing test code in the @B_java#lang#Runnable#run_E@ method"]], "Throws": [["@B_java#lang#Throwable_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Helper for running portions of a test on the UI thread. Note, in most cases it is simpler to annotate the test method with @B_android#test#UiThreadTest_E@, which will run the entire test method on the UI thread. Use this method if you need to switch in and out of the UI thread to perform your test.", "history": "Added in API level 3 Deprecated in API level 24", "FullName": "public void runTestOnUiThread (Runnable r)"}, "injectInsrumentation(android.app.Instrumentation)": {"Returns": [], "Parameters": [["@B_android#app#Instrumentation_E@", "Instrumentation: the instrumentation to use with this instance"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Incorrect spelling, use @B_android#test#InstrumentationTestCase#injectInstrumentation_E@ instead. Injects instrumentation into this test case. This method is called by the test runner during test setup.", "history": "Added in API level 1 Deprecated in API level 15", "FullName": "public void injectInsrumentation (Instrumentation instrumentation)"}, "launchActivity(java.lang.String,java.lang.Class<T>,android.os.Bundle)": {"Returns": [["T", "The activity, or null if non launched."]], "Parameters": [["@B_java#lang#String_E@", "String: The package hosting the activity to be launched."], ["@B_java#lang#Class_E@", "Class: The activity class to launch."], ["@B_android#os#Bundle_E@", "Bundle: Optional extra stuff to pass to the activity."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Utility method for launching an activity. The @B_android#content#Intent_E@ used to launch the Activity is: action = @B_android#content#Intent#ACTION_MAIN_E@ extras = null, unless a custom bundle is provided here All other fields are null or empty.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public final T launchActivity (String pkg, Class<T> activityCls, Bundle extras)"}, "injectInstrumentation(android.app.Instrumentation)": {"Returns": [], "Parameters": [["@B_android#app#Instrumentation_E@", "Instrumentation: the instrumentation to use with this instance"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Injects instrumentation into this test case. This method is called by the test runner during test setup.", "history": "Added in API level 5 Deprecated in API level 24", "FullName": "public void injectInstrumentation (Instrumentation instrumentation)"}, "sendRepeatedKeys(int...)": {"Returns": [], "Parameters": [["int...", "int: The series of key repeats and codes to send through instrumentation."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sends a series of key events through instrumentation and waits for idle. Each key code must be preceded by the number of times the key code must be sent. For instance: sendRepeatedKeys(1, KEYCODE_DPAD_CENTER, 2, KEYCODE_DPAD_LEFT).", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public void sendRepeatedKeys (int... keys)"}, "launchActivityWithIntent(java.lang.String,java.lang.Class<T>,android.content.Intent)": {"Returns": [["T", "The activity, or null if non launched."]], "Parameters": [["@B_java#lang#String_E@", "String: The package hosting the activity to be launched."], ["@B_java#lang#Class_E@", "Class: The activity class to launch."], ["@B_android#content#Intent_E@", "Intent: The intent to launch with"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Utility method for launching an activity with a specific Intent.", "history": "Added in API level 3 Deprecated in API level 24", "FullName": "public final T launchActivityWithIntent (String pkg, Class<T> activityCls, Intent intent)"}, "getInstrumentation()": {"Returns": [["@B_android#app#Instrumentation_E@", "instrumentation"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Inheritors can access the instrumentation using this.", "history": "Added in API level 1 Deprecated in API level 24", "FullName": "public Instrumentation getInstrumentation ()"}}, "Inheritance": ["@B_junit#framework#Assert_E@", "@B_junit#framework#TestCase_E@"], "ClassName": "android.test.InstrumentationTestCase", "ClassDesc": "Use A test case that has access to @B_android#app#Instrumentation_E@."}