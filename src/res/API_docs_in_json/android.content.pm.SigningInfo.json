{"Functions": {"writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 28", "FullName": "public void writeToParcel (Parcel dest, int parcelableFlags)"}, "hasMultipleSigners()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Although relatively uncommon, packages may be signed by more than one signer, in which case their identity is viewed as being the set of all signers, not just any one.", "history": "Added in API level 28", "FullName": "public boolean hasMultipleSigners ()"}, "hasPastSigningCertificates()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "APK Signature Scheme v3 enables packages to provide a proof-of-rotation record that the platform verifies, and uses, to allow the use of new signing certificates. This is only available to packages that are not signed by multiple signers. In the event of a change to a new signing certificate, the package's past signing certificates are presented as well. Any check of a package's signing certificate should also include a search through its entire signing history, since it could change to a new signing certificate at any time.", "history": "Added in API level 28", "FullName": "public boolean hasPastSigningCertificates ()"}, "getSigningCertificateHistory()": {"Returns": [["@B_android#content#pm#Signature_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the signing certificates this package has proven it is authorized to use. This includes both the signing certificate associated with the signer of the package and the past signing certificates it included as its proof of signing certificate rotation. This method is the preferred replacement for the GET_SIGNATURES flag used with @B_android#content#pm#PackageManager#getPackageInfo_E@. When determining if a package is signed by a desired certificate, the returned array should be checked to determine if it is one of the entries.", "history": "Added in API level 28", "FullName": "public Signature[] getSigningCertificateHistory ()"}, "SigningInfo(android.content.pm.SigningInfo)": {"Returns": [], "Parameters": [["@B_android#content#pm#SigningInfo_E@", "SigningInfo no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 28", "FullName": "public SigningInfo (SigningInfo orig)"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 28", "FullName": "public int describeContents ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 28", "FullName": "public void writeToParcel (Parcel dest, int parcelableFlags)"}, "getApkContentsSigners()": {"Returns": [["@B_android#content#pm#Signature_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the signing certificates used to sign the APK contents of this application. Not including any past signing certificates the package proved it is authorized to use.", "history": "Added in API level 28", "FullName": "public Signature[] getApkContentsSigners ()"}, "SigningInfo()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 28", "FullName": "public SigningInfo ()"}}, "Inheritance": [], "ClassName": "android.content.pm.SigningInfo", "ClassDesc": "Information pertaining to the signing certificates used to sign a package."}