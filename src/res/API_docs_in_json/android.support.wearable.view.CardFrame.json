{"Functions": {"getDefaultSize(int, int, boolean)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get a default size, will be as small as possible unless forced by the parent, or greedy is specified.", "history": "", "FullName": "int getDefaultSize (int size, int measureSpec, boolean greedy)"}, "shouldDelayChildPressedState()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "boolean shouldDelayChildPressedState ()"}, "isExpansionEnabled()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether expansion is on. A CardFrame will increase in height up to expansionFactor times the parent view's height. When expansion is enabled, content which is taller than this will have a fading effect applied to the expanding edge, otherwise content is simply clipped.", "history": "", "FullName": "boolean isExpansionEnabled ()"}, "getContentPaddingLeft()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the inner padding after the Card's left edge", "history": "", "FullName": "int getContentPaddingLeft ()"}, "setExpansionDirection(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the direction in which content expands. Determines whether the top or bottom edge receives the fading edge appearance and whether more content is viewed by scrolling up or down, after increasing the expansion factor.", "history": "", "FullName": "void setExpansionDirection (int direction)"}, "addView(android.view.View, int)": {"Returns": [], "Parameters": [["View", "View no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void addView (View child, int index)"}, "getExpansionDirection()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current expansion direction, either @B_android#support#wearable#view#CardFrame#EXPAND_UP_E@ or @B_android#support#wearable#view#CardFrame#EXPAND_DOWN_E@.", "history": "", "FullName": "int getExpansionDirection ()"}, "setExpansionFactor(float)": {"Returns": [], "Parameters": [["float", "float no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the allowed expansion amount as a multiple of the parent height. If expansion is enabled, the card will grow up to this height as needed to accommodate content.", "history": "", "FullName": "void setExpansionFactor (float expansionFactor)"}, "onAttachedToWindow()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void onAttachedToWindow ()"}, "addView(android.view.View)": {"Returns": [], "Parameters": [["View", "View no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void addView (View child)"}, "onLayout(boolean, int, int, int, int)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void onLayout (boolean changed, int left, int top, int right, int bottom)"}, "getExpansionFactor()": {"Returns": [["float", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current expansionFactor which is the maximum height of this view as a multiple of the parent view's height.", "history": "", "FullName": "float getExpansionFactor ()"}, "onMeasure(int, int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void onMeasure (int widthMeasureSpec, int heightMeasureSpec)"}, "getContentPaddingRight()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the inner padding before the Card's right edge", "history": "", "FullName": "int getContentPaddingRight ()"}, "getContentPaddingTop()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the inner padding after the Card's top edge", "history": "", "FullName": "int getContentPaddingTop ()"}, "setExpansionEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enables support contents which maybe be larger than the card's container. When expansion is enabled, and the contents are larger than the card, the top or bottom edge will fade to indicate this. The expansion factor must also be increased to allow the card to increase in height.", "history": "", "FullName": "void setExpansionEnabled (boolean enabled)"}, "getContentPaddingBottom()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the inner padding before the Card's bottom edge", "history": "", "FullName": "int getContentPaddingBottom ()"}, "onApplyWindowInsets(android.view.WindowInsets)": {"Returns": [["WindowInsets", "no returns description in source"]], "Parameters": [["WindowInsets", "WindowInsets no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "WindowInsets onApplyWindowInsets (WindowInsets insets)"}, "CardFrame(android.content.Context)": {"Returns": [], "Parameters": [["Context", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "CardFrame (Context context)"}}, "Inheritance": ["http:##developer#android#com@B_java#lang#Object_E@", "http:##developer#android#com@B_android#view#View_E@", "http:##developer#android#com@B_android#view#ViewGroup_E@"], "ClassName": "android.support.wearable.view.CardFrame", "ClassDesc": "starting with Android Wear 2.0 it is no longer encouraged to use cards for apps' UI. If you are looking to implement vertical paging pattern, consider using the https:##developer#android#com@B_android#support#v7#widget#SnapHelper_E@ and a https:##developer#android#com@B_android#support#v7#widget#RecyclerView_E@ instead. Wraps a view in a card-styled frame with a white background, rounded corners and a light drop-shadow. This layout is designed to be given a height of http:##developer#android#com@B_android#view#ViewGroup#LayoutParams#WRAP_CONTENT_E@ within a container with a fixed height. To function properly, this view should be contained within a https:##developer#android#com@B_android#support#wearable#view#CardScrollView_E@. A https:##developer#android#com@B_android#support#wearable#view#CardFragment_E@ provides this automatically."}