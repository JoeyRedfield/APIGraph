{"Functions": {"setSubtypeIconResId(int)": {"Returns": [["@B_android#view#inputmethod#InputMethodSubtype#InputMethodSubtypeBuilder_E@", "no returns description in source"]], "Parameters": [["int", "int: is a resource ID of the subtype icon drawable."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 19", "FullName": "public InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeIconResId (int subtypeIconResId)"}, "setSubtypeNameResId(int)": {"Returns": [["@B_android#view#inputmethod#InputMethodSubtype#InputMethodSubtypeBuilder_E@", "no returns description in source"]], "Parameters": [["int", "int: is the resource ID of the subtype name string. The string resource may have exactly one %s in it. If present, the %s part will be replaced with the locale's display name by the formatter. Please refer to @B_android#view#inputmethod#InputMethodSubtype#getDisplayName_E@ for details."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 19", "FullName": "public InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeNameResId (int subtypeNameResId)"}, "setSubtypeMode(java.lang.String)": {"Returns": [["@B_android#view#inputmethod#InputMethodSubtype#InputMethodSubtypeBuilder_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: is the mode supported by this subtype."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 19", "FullName": "public InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeMode (String subtypeMode)"}, "setSubtypeId(int)": {"Returns": [["@B_android#view#inputmethod#InputMethodSubtype#InputMethodSubtypeBuilder_E@", "no returns description in source"]], "Parameters": [["int", "int: is the unique ID for this subtype. The input method framework keeps track of enabled subtypes by ID. When the IME package gets upgraded, enabled IDs will stay enabled even if other attributes are different. If the ID is unspecified or 0, Arrays.hashCode(new Object[] {locale, mode, extraValue, isAuxiliary, overridesImplicitlyEnabledSubtype, isAsciiCapable}) will be used instead."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 19", "FullName": "public InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeId (int subtypeId)"}, "build()": {"Returns": [["@B_android#view#inputmethod#InputMethodSubtype_E@", "InputMethodSubtype using parameters in this InputMethodSubtypeBuilder."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 19", "FullName": "public InputMethodSubtype build ()"}, "setIsAuxiliary(boolean)": {"Returns": [["@B_android#view#inputmethod#InputMethodSubtype#InputMethodSubtypeBuilder_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean: should true when this subtype is auxiliary, false otherwise. An auxiliary subtype has the following differences with a regular subtype: - An auxiliary subtype cannot be chosen as the default IME in Settings. - The framework will never switch to this subtype through @B_android#view#inputmethod#InputMethodManager#switchToLastInputMethod_E@. Note that the subtype will still be available in the IME switcher. The intent is to allow for IMEs to specify they are meant to be invoked temporarily in a one-shot way, and to return to the previous IME once finished (e.g. voice input)."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 19", "FullName": "public InputMethodSubtype.InputMethodSubtypeBuilder setIsAuxiliary (boolean isAuxiliary)"}, "setIsAsciiCapable(boolean)": {"Returns": [["@B_android#view#inputmethod#InputMethodSubtype#InputMethodSubtypeBuilder_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean: should be true if this subtype is ASCII capable. If the subtype is ASCII capable, it should guarantee that the user can input ASCII characters with this subtype. This is important because many password fields only allow ASCII-characters."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 19", "FullName": "public InputMethodSubtype.InputMethodSubtypeBuilder setIsAsciiCapable (boolean isAsciiCapable)"}, "InputMethodSubtype.InputMethodSubtypeBuilder()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 19", "FullName": "public InputMethodSubtype.InputMethodSubtypeBuilder ()"}, "setOverridesImplicitlyEnabledSubtype(boolean)": {"Returns": [["@B_android#view#inputmethod#InputMethodSubtype#InputMethodSubtypeBuilder_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean: should be true if this subtype should be enabled by default if no other subtypes in the IME are enabled explicitly. Note that a subtype with this parameter set will not be shown in the list of subtypes in each IME's subtype enabler. A canonical use of this would be for an IME to supply an \"automatic\" subtype that adapts to the current system language."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 19", "FullName": "public InputMethodSubtype.InputMethodSubtypeBuilder setOverridesImplicitlyEnabledSubtype (boolean overridesImplicitlyEnabledSubtype)"}, "setSubtypeExtraValue(java.lang.String)": {"Returns": [["@B_android#view#inputmethod#InputMethodSubtype#InputMethodSubtypeBuilder_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: is the extra value of the subtype. This string is free-form, but the API supplies tools to deal with a key-value comma-separated list; see @B_android#view#inputmethod#InputMethodSubtype#containsExtraValueKey_E@ and @B_android#view#inputmethod#InputMethodSubtype#getExtraValueOf_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 19", "FullName": "public InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeExtraValue (String subtypeExtraValue)"}, "setSubtypeLocale(java.lang.String)": {"Returns": [["@B_android#view#inputmethod#InputMethodSubtype#InputMethodSubtypeBuilder_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: is the locale supported by this subtype."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 19", "FullName": "public InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeLocale (String subtypeLocale)"}, "setLanguageTag(java.lang.String)": {"Returns": [["@B_android#view#inputmethod#InputMethodSubtype#InputMethodSubtypeBuilder_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: is the BCP-47 Language Tag supported by this subtype."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 24", "FullName": "public InputMethodSubtype.InputMethodSubtypeBuilder setLanguageTag (String languageTag)"}}, "Inheritance": [], "ClassName": "android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder", "ClassDesc": "InputMethodSubtypeBuilder is a builder class of InputMethodSubtype. This class is designed to be used with @B_android#view#inputmethod#InputMethodManager#setAdditionalInputMethodSubtypes_E@. The developer needs to be aware of what each parameter means."}