{"Functions": {"onTorchModeChanged(java.lang.String,boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The unique identifier of the camera whose torch mode has been changed. This value must never be null."], ["boolean", "boolean: The state that the torch mode of the camera has been changed to. true when the torch mode has become on and available to be turned off. false when the torch mode has becomes off and available to be turned on."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "A camera's torch mode has become enabled or disabled and can be changed via @B_android#hardware#camera2#CameraManager#setTorchMode_E@. The default implementation of this method does nothing.", "history": "Added in API level 23", "FullName": "public void onTorchModeChanged (String cameraId, boolean enabled)"}, "CameraManager.TorchCallback()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 23", "FullName": "public CameraManager.TorchCallback ()"}, "onTorchModeChanged(java.lang.String, boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The unique identifier of the camera whose torch mode has been changed.This value must never be null."], ["boolean", "boolean: The state that the torch mode of the camera has been changed to. true when the torch mode has become on and available to be turned off. false when the torch mode has becomes off and available to be turned on."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "A camera's torch mode has become enabled or disabled and can be changed via @B_android#hardware#camera2#CameraManager#setTorchMode_E@. The default implementation of this method does nothing.", "history": "added in API level 23", "FullName": "public void onTorchModeChanged (String cameraId, boolean enabled)"}, "onTorchModeUnavailable(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The unique identifier of the camera whose torch mode has become unavailable. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "A camera's torch mode has become unavailable to set via @B_android#hardware#camera2#CameraManager#setTorchMode_E@. If torch mode was previously turned on by calling @B_android#hardware#camera2#CameraManager#setTorchMode_E@, it will be turned off before @B_android#hardware#camera2#CameraManager#TorchCallback#onTorchModeUnavailable_E@ is invoked. @B_android#hardware#camera2#CameraManager#setTorchMode_E@ will fail until the torch mode has entered a disabled or enabled state again. The default implementation of this method does nothing.", "history": "Added in API level 23", "FullName": "public void onTorchModeUnavailable (String cameraId)"}}, "Inheritance": [], "ClassName": "android.hardware.camera2.CameraManager.TorchCallback", "ClassDesc": "A callback for camera flash torch modes becoming unavailable, disabled, or enabled. The torch mode becomes unavailable when the camera device it belongs to becomes unavailable or other camera resources it needs become busy due to other higher priority camera activities. The torch mode becomes disabled when it was turned off or when the camera device it belongs to is no longer in use and other camera resources it needs are no longer busy. A camera's torch mode is turned off when an application calls @B_android#hardware#camera2#CameraManager#setTorchMode_E@ to turn off the camera's torch mode, or when an application turns on another camera's torch mode if keeping multiple torch modes on simultaneously is not supported. The torch mode becomes enabled when it is turned on via @B_android#hardware#camera2#CameraManager#setTorchMode_E@. The torch mode is available to set via @B_android#hardware#camera2#CameraManager#setTorchMode_E@ only when it's in a disabled or enabled state. Extend this callback and pass an instance of the subclass to @B_android#hardware#camera2#CameraManager#registerTorchCallback_E@ to be notified of such status changes."}