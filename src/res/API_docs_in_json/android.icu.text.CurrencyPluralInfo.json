{"Functions": {"getInstance()": {"Returns": [["@B_android#icu#text#CurrencyPluralInfo_E@", "A CurrencyPluralInfo instance."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets a CurrencyPluralInfo instance for the default locale.", "history": "Added in API level 24", "FullName": "public static CurrencyPluralInfo getInstance ()"}, "getInstance(android.icu.util.ULocale)": {"Returns": [["@B_android#icu#text#CurrencyPluralInfo_E@", "A CurrencyPluralInfo instance."]], "Parameters": [["@B_android#icu#util#ULocale_E@", "ULocale: the locale."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets a CurrencyPluralInfo instance for the given locale.", "history": "Added in API level 24", "FullName": "public static CurrencyPluralInfo getInstance (ULocale locale)"}, "getPluralRules()": {"Returns": [["@B_android#icu#text#PluralRules_E@", "plural rule"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets plural rules of this locale, used for currency plural format", "history": "Added in API level 24", "FullName": "public PluralRules getPluralRules ()"}, "setLocale(android.icu.util.ULocale)": {"Returns": [], "Parameters": [["@B_android#icu#util#ULocale_E@", "ULocale: the new locale to set"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set locale. This also sets both the plural rules and the currency plural patterns to be the defaults for the locale.", "history": "Added in API level 24", "FullName": "public void setLocale (ULocale loc)"}, "getCurrencyPluralPattern(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "a currency plural pattern based on plural count"]], "Parameters": [["@B_java#lang#String_E@", "String: currency plural count"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Given a plural count, gets currency plural pattern of this locale, used for currency plural format", "history": "Added in API level 24", "FullName": "public String getCurrencyPluralPattern (String pluralCount)"}, "CurrencyPluralInfo(android.icu.util.ULocale)": {"Returns": [], "Parameters": [["@B_android#icu#util#ULocale_E@", "ULocale: the locale"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a CurrencyPluralInfo object for the given locale.", "history": "Added in API level 24", "FullName": "public CurrencyPluralInfo (ULocale locale)"}, "setCurrencyPluralPattern(java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the plural count for which the currency pattern will be overridden."], ["@B_java#lang#String_E@", "String: the new currency plural pattern"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set currency plural patterns. These are initially set in the constructor based on the locale, and usually do not need to be changed. The decimal digits part of the pattern cannot be specified via this method. All plural forms will use the same decimal pattern as set in the constructor of DecimalFormat. For example, you can't set \"0.0\" for plural \"few\" but \"0.00\" for plural \"many\".", "history": "Added in API level 24", "FullName": "public void setCurrencyPluralPattern (String pluralCount, String pattern)"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if this object is the same as the obj argument; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the reference object with which to compare."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override equals", "history": "Added in API level 24", "FullName": "public boolean equals (Object a)"}, "CurrencyPluralInfo()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Create a CurrencyPluralInfo object for the default FORMAT locale.", "history": "Added in API level 24", "FullName": "public CurrencyPluralInfo ()"}, "getLocale()": {"Returns": [["@B_android#icu#util#ULocale_E@", "locale"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get locale", "history": "Added in API level 24", "FullName": "public ULocale getLocale ()"}, "CurrencyPluralInfo(java.util.Locale)": {"Returns": [], "Parameters": [["@B_java#util#Locale_E@", "Locale: the locale"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a CurrencyPluralInfo object for the given locale.", "history": "Added in API level 24", "FullName": "public CurrencyPluralInfo (Locale locale)"}, "clone()": {"Returns": [["@B_java#lang#Object_E@", "a clone of this instance."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Standard override", "history": "Added in API level 24", "FullName": "public Object clone ()"}, "getInstance(java.util.Locale)": {"Returns": [["@B_android#icu#text#CurrencyPluralInfo_E@", "A CurrencyPluralInfo instance."]], "Parameters": [["@B_java#util#Locale_E@", "Locale: the locale."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets a CurrencyPluralInfo instance for the given locale.", "history": "Added in API level 24", "FullName": "public static CurrencyPluralInfo getInstance (Locale locale)"}, "setPluralRules(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: new plural rule description"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set plural rules. These are initially set in the constructor based on the locale, and usually do not need to be changed.", "history": "Added in API level 24", "FullName": "public void setPluralRules (String ruleDescription)"}}, "Inheritance": [], "ClassName": "android.icu.text.CurrencyPluralInfo", "ClassDesc": "This class represents the information needed by DecimalFormat to format currency plural, such as \"3.00 US dollars\" or \"1.00 US dollar\". DecimalFormat creates for itself an instance of CurrencyPluralInfo from its locale data. If you need to change any of these symbols, you can get the CurrencyPluralInfo object from your DecimalFormat and modify it. Following are the information needed for currency plural format and parse: locale information, plural rule of the locale, currency plural pattern of the locale."}