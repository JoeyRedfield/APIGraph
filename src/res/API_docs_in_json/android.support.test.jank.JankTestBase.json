{"Functions": {"beforeLoop()": {"Returns": [], "Parameters": [], "Throws": [["Exception", ""]], "SeeAlso": [], "Permissions": [], "Description": "Called before each iteration of the test method.", "history": "", "FullName": "void beforeLoop ()"}, "getMonitorFactory()": {"Returns": [["@B_android#support#test#jank#IMonitorFactory_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#support#test#jank#IMonitorFactory_E@ instance that should be used to construct applicable @B_android#support#test#jank#IMonitor_E@(s) for a given test method.", "history": "", "FullName": "IMonitorFactory getMonitorFactory ()"}, "afterLoop()": {"Returns": [], "Parameters": [], "Throws": [["Exception", ""]], "SeeAlso": [], "Permissions": [], "Description": "Called after each iteration of the test method.", "history": "", "FullName": "void afterLoop ()"}, "JankTestBase()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "JankTestBase ()"}, "beforeTest()": {"Returns": [], "Parameters": [], "Throws": [["Exception", ""]], "SeeAlso": [], "Permissions": [], "Description": "Called once before executing a test method.", "history": "", "FullName": "void beforeTest ()"}, "getMonitors(java.lang.reflect.Method)": {"Returns": [["@B_android#support#test#jank#IMonitor_E@", "no returns description in source"]], "Parameters": [["Method", "Method no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the list of @B_android#support#test#jank#IMonitor_E@s that should be applied to the given method.", "history": "", "FullName": "List<IMonitor> getMonitors (Method method)"}, "getCurrentIteration()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the index of the currently executing iteration.", "history": "", "FullName": "int getCurrentIteration ()"}, "getArguments()": {"Returns": [["Bundle", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_android#os#Bundle_E@ containing the command line parameters.", "history": "", "FullName": "Bundle getArguments ()"}, "runTest()": {"Returns": [], "Parameters": [], "Throws": [["Throwable", ""]], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "void runTest ()"}, "createMonitorFactory()": {"Returns": [["@B_android#support#test#jank#IMonitorFactory_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an @B_android#support#test#jank#IMonitorFactory_E@ instance that should be used to construct @B_android#support#test#jank#IMonitor_E@(s) for the test methods in this class.", "history": "", "FullName": "IMonitorFactory createMonitorFactory ()"}, "afterTest(android.os.Bundle)": {"Returns": [], "Parameters": [["Bundle", "Bundle: the aggregated jank metrics after looped execution"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called once after all iterations have completed. Note: default implementation reports the aggregated jank metrics via @B_android#app#Instrumentation#sendStatus_E@", "history": "", "FullName": "void afterTest (Bundle metrics)"}}, "Inheritance": ["https:##developer#android#com@B_java#lang#Object_E@", "https:##developer#android#com@B_junit#framework#Assert_E@", "https:##developer#android#com@B_junit#framework#TestCase_E@", "https:##developer#android#com@B_android#test#InstrumentationTestCase_E@"], "ClassName": "android.support.test.jank.JankTestBase", "ClassDesc": "Base test class for measuring Jank. This test class automatically monitors jank while executing each test method. Each test method is executed several times in a loop, according to the 'iterations' command line parameter. To perform additional setup / tear down steps for each iteration, subclasses can optionally override @B_android#support#test#jank#JankTestBase#beforeLoop_E@ and @B_android#support#test#jank#JankTestBase#afterLoop_E@ methods. Test methods must be configured with the @B_android#support#test#jank#JankTest_E@ annotation. At minimum, the type of jank to measure and the number of expected frames must be specified."}