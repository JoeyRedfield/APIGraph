{"Functions": {"MediaButtonReceiver()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 23.1.0", "FullName": "MediaButtonReceiver ()"}}, "Inheritance": ["java.lang.Object", "https:##developer#android#com@B_android#content#BroadcastReceiver_E@"], "ClassName": "android.support.v4.media.session.MediaButtonReceiver", "ClassDesc": "A media button receiver receives and helps translate hardware media playback buttons, such as those found on wired and wireless headsets, into the appropriate callbacks in your app. You can add this MediaButtonReceiver to your app by adding it directly to your AndroidManifest.xml: https:##developer#android#com@B_android#app#Service_E@ in your app that controls media playback via a @B_android#support#v4#media#session#MediaSessionCompat_E@. Once a key event is received by MediaButtonReceiver, this class tries to find a https:##developer#android#com@B_android#app#Service_E@ that can handle https:##developer#android#com@B_android#content#Intent#ACTION_MEDIA_BUTTON_E@, and a @B_android#support#v4#media#MediaBrowserServiceCompat_E@ in turn. If an appropriate service is found, this class forwards the key event to the service. If neither is available or more than one valid service/media browser service is found, an @B_java#lang#IllegalStateException_E@ will be thrown. Thus, your app should have one of the following services to get a key event properly. https:##developer#android#com@B_android#content#Intent#ACTION_MEDIA_BUTTON_E@: https:##developer#android#com@B_android#app#Service#onStartCommand_E@ by calling @B_android#support#v4#media#session#MediaButtonReceiver#handleIntent_E@, passing in your current @B_android#support#v4#media#session#MediaSessionCompat_E@: @B_android#support#v4#media#session#MediaSessionCompat#Callback_E@ will be triggered based on the incoming https:##developer#android#com@B_android#view#KeyEvent_E@. @B_android#support#v4#media#MediaBrowserServiceCompat_E@ in your app, MediaButtonReceiver will deliver the received key events to the @B_android#support#v4#media#MediaBrowserServiceCompat_E@ by default. You can handle them in your @B_android#support#v4#media#session#MediaSessionCompat#Callback_E@."}