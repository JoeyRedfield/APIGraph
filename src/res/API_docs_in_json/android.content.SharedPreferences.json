{"Functions": {"getString(java.lang.String,java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "Returns the preference value if it exists, or defValue. Throws ClassCastException if there is a preference with this name that is not a String. This value may be null."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to retrieve."], ["@B_java#lang#String_E@", "String: Value to return if this preference does not exist. This value may be null."]], "Throws": [["", "java.lang.ClassCastException"]], "SeeAlso": [], "Permissions": [], "Description": "Retrieve a String value from the preferences.", "history": "Added in API level 1", "FullName": "public abstract String getString (String key, String defValue)"}, "getFloat(java.lang.String,float)": {"Returns": [["float", "Returns the preference value if it exists, or defValue. Throws ClassCastException if there is a preference with this name that is not a float."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to retrieve."], ["float", "float: Value to return if this preference does not exist."]], "Throws": [["", "java.lang.ClassCastException"]], "SeeAlso": [], "Permissions": [], "Description": "Retrieve a float value from the preferences.", "history": "Added in API level 1", "FullName": "public abstract float getFloat (String key, float defValue)"}, "contains(java.lang.String)": {"Returns": [["boolean", "Returns true if the preference exists in the preferences, otherwise false."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to check."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether the preferences contains a preference.", "history": "Added in API level 1", "FullName": "public abstract boolean contains (String key)"}, "getString(java.lang.String, java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "Returns the preference value if it exists, or defValue. Throws ClassCastException if there is a preference with this name that is not a String.This value may be null."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to retrieve."], ["@B_java#lang#String_E@", "String: Value to return if this preference does not exist.This value may be null."]], "Throws": [["@B_java#lang#ClassCastException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Retrieve a String value from the preferences.", "history": "added in API level 1", "FullName": "public abstract String getString (String key, String defValue)"}, "getBoolean(java.lang.String, boolean)": {"Returns": [["boolean", "Returns the preference value if it exists, or defValue. Throws ClassCastException if there is a preference with this name that is not a boolean."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to retrieve."], ["boolean", "boolean: Value to return if this preference does not exist."]], "Throws": [["@B_java#lang#ClassCastException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Retrieve a boolean value from the preferences.", "history": "added in API level 1", "FullName": "public abstract boolean getBoolean (String key, boolean defValue)"}, "getAll()": {"Returns": [["@B_java#util#Map_E@", "Returns a map containing a list of pairs key/value representing the preferences."]], "Parameters": [], "Throws": [["", "java.lang.NullPointerException"]], "SeeAlso": [], "Permissions": [], "Description": "Retrieve all values from the preferences. Note that you must not modify the collection returned by this method, or alter any of its contents. The consistency of your stored data is not guaranteed if you do.", "history": "Added in API level 1", "FullName": "public abstract Map<String, ?> getAll ()"}, "edit()": {"Returns": [["@B_android#content#SharedPreferences#Editor_E@", "Returns a new instance of the @B_android#content#SharedPreferences#Editor_E@ interface, allowing you to modify the values in this SharedPreferences object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new Editor for these preferences, through which you can make modifications to the data in the preferences and atomically commit those changes back to the SharedPreferences object. Note that you must call @B_android#content#SharedPreferences#Editor#commit_E@ to have any changes you perform in the Editor actually show up in the SharedPreferences.", "history": "Added in API level 1", "FullName": "public abstract SharedPreferences.Editor edit ()"}, "getBoolean(java.lang.String,boolean)": {"Returns": [["boolean", "Returns the preference value if it exists, or defValue. Throws ClassCastException if there is a preference with this name that is not a boolean."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to retrieve."], ["boolean", "boolean: Value to return if this preference does not exist."]], "Throws": [["", "java.lang.ClassCastException"]], "SeeAlso": [], "Permissions": [], "Description": "Retrieve a boolean value from the preferences.", "history": "Added in API level 1", "FullName": "public abstract boolean getBoolean (String key, boolean defValue)"}, "getFloat(java.lang.String, float)": {"Returns": [["float", "Returns the preference value if it exists, or defValue. Throws ClassCastException if there is a preference with this name that is not a float."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to retrieve."], ["float", "float: Value to return if this preference does not exist."]], "Throws": [["@B_java#lang#ClassCastException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Retrieve a float value from the preferences.", "history": "added in API level 1", "FullName": "public abstract float getFloat (String key, float defValue)"}, "getLong(java.lang.String,long)": {"Returns": [["long", "Returns the preference value if it exists, or defValue. Throws ClassCastException if there is a preference with this name that is not a long."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to retrieve."], ["long", "long: Value to return if this preference does not exist."]], "Throws": [["", "java.lang.ClassCastException"]], "SeeAlso": [], "Permissions": [], "Description": "Retrieve a long value from the preferences.", "history": "Added in API level 1", "FullName": "public abstract long getLong (String key, long defValue)"}, "unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)": {"Returns": [], "Parameters": [["@B_android#content#SharedPreferences#OnSharedPreferenceChangeListener_E@", "SharedPreferences.OnSharedPreferenceChangeListener: The callback that should be unregistered."]], "Throws": [], "SeeAlso": ["@B_android#content#SharedPreferences#registerOnSharedPreferenceChangeListener_E@"], "Permissions": [], "Description": "Unregisters a previous callback.", "history": "Added in API level 1", "FullName": "public abstract void unregisterOnSharedPreferenceChangeListener (SharedPreferences.OnSharedPreferenceChangeListener listener)"}, "getStringSet(java.lang.String,java.util.Set<java.lang.String>)": {"Returns": [["@B_java#util#Set_E@", "Returns the preference values if they exist, or defValues. Throws ClassCastException if there is a preference with this name that is not a Set. This value may be null."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to retrieve."], ["@B_java#util#Set_E@", "Set: Values to return if this preference does not exist. This value may be null."]], "Throws": [["", "java.lang.ClassCastException"]], "SeeAlso": [], "Permissions": [], "Description": "Retrieve a set of String values from the preferences. Note that you must not modify the set instance returned by this call. The consistency of the stored data is not guaranteed if you do, nor is your ability to modify the instance at all.", "history": "Added in API level 11", "FullName": "public abstract Set<String> getStringSet (String key, Set<String> defValues)"}, "getLong(java.lang.String, long)": {"Returns": [["long", "Returns the preference value if it exists, or defValue. Throws ClassCastException if there is a preference with this name that is not a long."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to retrieve."], ["long", "long: Value to return if this preference does not exist."]], "Throws": [["@B_java#lang#ClassCastException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Retrieve a long value from the preferences.", "history": "added in API level 1", "FullName": "public abstract long getLong (String key, long defValue)"}, "getInt(java.lang.String, int)": {"Returns": [["int", "Returns the preference value if it exists, or defValue. Throws ClassCastException if there is a preference with this name that is not an int."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to retrieve."], ["int", "int: Value to return if this preference does not exist."]], "Throws": [["@B_java#lang#ClassCastException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Retrieve an int value from the preferences.", "history": "added in API level 1", "FullName": "public abstract int getInt (String key, int defValue)"}, "registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)": {"Returns": [], "Parameters": [["@B_android#content#SharedPreferences#OnSharedPreferenceChangeListener_E@", "SharedPreferences.OnSharedPreferenceChangeListener: The callback that will run."]], "Throws": [], "SeeAlso": ["@B_android#content#SharedPreferences#unregisterOnSharedPreferenceChangeListener_E@"], "Permissions": [], "Description": "Registers a callback to be invoked when a change happens to a preference.", "history": "Added in API level 1", "FullName": "public abstract void registerOnSharedPreferenceChangeListener (SharedPreferences.OnSharedPreferenceChangeListener listener)"}, "getInt(java.lang.String,int)": {"Returns": [["int", "Returns the preference value if it exists, or defValue. Throws ClassCastException if there is a preference with this name that is not an int."]], "Parameters": [["@B_java#lang#String_E@", "String: The name of the preference to retrieve."], ["int", "int: Value to return if this preference does not exist."]], "Throws": [["", "java.lang.ClassCastException"]], "SeeAlso": [], "Permissions": [], "Description": "Retrieve an int value from the preferences.", "history": "Added in API level 1", "FullName": "public abstract int getInt (String key, int defValue)"}}, "Inheritance": [], "ClassName": "android.content.SharedPreferences", "ClassDesc": "Interface for accessing and modifying preference data returned by @B_android#content#Context#getSharedPreferences_E@. For any particular set of preferences, there is a single instance of this class that all clients share. Modifications to the preferences must go through an @B_android#content#SharedPreferences#Editor_E@ object to ensure the preference values remain in a consistent state and control when they are committed to storage. Objects that are returned from the various get methods must be treated as immutable by the application. Note: This class provides strong consistency guarantees. It is using expensive operations which might slow down an app. Frequently changing properties or properties where loss can be tolerated should use other mechanisms. For more details read the comments on @B_android#content#SharedPreferences#Editor#commit_E@ and @B_android#content#SharedPreferences#Editor#apply_E@. Note: This class does not support use across multiple processes."}