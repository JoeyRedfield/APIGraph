{"Functions": {"set(int,int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the number of blocks to encrypt and skip in a sample encryption pattern. If both parameters are zero, pattern encryption is inoperative.", "history": "Added in API level 24", "FullName": "public void set (int blocksToEncrypt, int blocksToSkip)"}, "MediaCodec.CryptoInfo.Pattern(int, int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Construct a sample encryption pattern given the number of blocks to encrypt and skip in the pattern. If both parameters are zero, pattern encryption is inoperative.", "history": "added in API level 24", "FullName": "public MediaCodec.CryptoInfo.Pattern (int blocksToEncrypt, int blocksToSkip)"}, "MediaCodec.CryptoInfo.Pattern(int,int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Construct a sample encryption pattern given the number of blocks to encrypt and skip in the pattern. If both parameters are zero, pattern encryption is inoperative.", "history": "Added in API level 24", "FullName": "public MediaCodec.CryptoInfo.Pattern (int blocksToEncrypt, int blocksToSkip)"}, "getSkipBlocks()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the number of blocks to skip in a sample encryption pattern.", "history": "Added in API level 24", "FullName": "public int getSkipBlocks ()"}, "getEncryptBlocks()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the number of blocks to encrypt in a sample encryption pattern.", "history": "Added in API level 24", "FullName": "public int getEncryptBlocks ()"}, "set(int, int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the number of blocks to encrypt and skip in a sample encryption pattern. If both parameters are zero, pattern encryption is inoperative.", "history": "added in API level 24", "FullName": "public void set (int blocksToEncrypt, int blocksToSkip)"}}, "Inheritance": [], "ClassName": "android.media.MediaCodec.CryptoInfo.Pattern", "ClassDesc": "Metadata describing an encryption pattern for the protected bytes in a subsample. An encryption pattern consists of a repeating sequence of crypto blocks comprised of a number of encrypted blocks followed by a number of unencrypted, or skipped, blocks."}