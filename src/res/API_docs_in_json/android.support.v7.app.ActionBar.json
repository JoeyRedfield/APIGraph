{"Functions": {"setLogo(android.graphics.drawable.Drawable)": {"Returns": [], "Parameters": [["@B_android#graphics#drawable#Drawable_E@", "Drawable: Drawable to show as a logo."]], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#ActionBar#setDisplayUseLogoEnabled_E@", "@B_android#support#v7#app#ActionBar#setDisplayShowHomeEnabled_E@"], "Permissions": [], "Description": "Set the logo to display in the 'home' section of the action bar. The action bar will use a logo specified by its style or the activity logo by default. Whether the home section shows an icon or logo is controlled by the display option @B_android#support#v7#app#ActionBar#DISPLAY_USE_LOGO_E@.", "history": "added in version 23.0.0", "FullName": "void setLogo (Drawable logo)"}, "setHomeAsUpIndicator(int)": {"Returns": [], "Parameters": [["int", "int: Resource ID of a drawable to use for the up indicator, or null to use the theme's default"]], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#ActionBar#setDisplayOptions_E@", "@B_android#support#v7#app#ActionBar#setDisplayHomeAsUpEnabled_E@", "@B_android#support#v7#app#ActionBar#setHomeActionContentDescription_E@"], "Permissions": [], "Description": "Set an alternate drawable to display next to the icon/logo/title when @B_android#support#v7#app#ActionBar#DISPLAY_HOME_AS_UP_E@ is enabled. This can be useful if you are using this mode to display an alternate selection for up navigation, such as a sliding drawer. If you pass 0 to this method, the default drawable from the theme will be used. If you implement alternate or intermediate behavior around Up, you should also call @B_android#support#v7#app#ActionBar#setHomeActionContentDescription_E@ to provide a correct description of the action for accessibility support.", "history": "added in version 23.0.0", "FullName": "void setHomeAsUpIndicator (int resId)"}, "addTab(android.support.v7.app.ActionBar.Tab)": {"Returns": [], "Parameters": [["@B_android#support#v7#app#ActionBar#Tab_E@", "ActionBar.Tab: Tab to add"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other Add a tab for use in tabbed navigation mode. The tab will be added at the end of the list. If this is the first tab to be added it will become the selected tab.", "history": "added in version 23.0.0", "FullName": "void addTab (ActionBar.Tab tab)"}, "getThemedContext()": {"Returns": [["@B_android#content#Context_E@", "A themed Context for creating views"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_android#content#Context_E@ with an appropriate theme for creating views that will appear in the action bar. If you are inflating or instantiating custom views that will appear in an action bar, you should use the Context returned by this method. (This includes adapters used for list navigation mode.) This will ensure that views contrast properly against the action bar.", "history": "added in version 23.0.0", "FullName": "Context getThemedContext ()"}, "isHideOnContentScrollEnabled()": {"Returns": [["boolean", "true if hide-on-content-scroll is enabled"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#ActionBar#setHideOnContentScrollEnabled_E@"], "Permissions": [], "Description": "Return whether the action bar is configured to scroll out of sight along with a @B_android#view#View#setNestedScrollingEnabled_E@.", "history": "added in version 23.0.0", "FullName": "boolean isHideOnContentScrollEnabled ()"}, "setHomeButtonEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true to enable the home button, false to disable the home button."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enable or disable the \"home\" button in the corner of the action bar. (Note that this is the application home/up affordance on the action bar, not the system wide home button.) This defaults to true for packages targeting < API 14. For packages targeting API 14 or greater, the application should call this method to enable interaction with the home/up affordance. Setting the @B_android#support#v7#app#ActionBar#DISPLAY_HOME_AS_UP_E@ display option will automatically enable the home button.", "history": "added in version 23.0.0", "FullName": "void setHomeButtonEnabled (boolean enabled)"}, "setDisplayShowCustomEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true if the currently set custom view should be displayed, false otherwise."]], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#ActionBar#setDisplayOptions_E@"], "Permissions": [], "Description": "Set whether a custom view should be displayed, if set. To set several display options at once, see the setDisplayOptions methods.", "history": "added in version 23.0.0", "FullName": "void setDisplayShowCustomEnabled (boolean showCustom)"}, "getSelectedNavigationIndex()": {"Returns": [["int", "Position of the selected item."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other Get the position of the selected navigation item in list or tabbed navigation modes.", "history": "added in version 23.0.0", "FullName": "int getSelectedNavigationIndex ()"}, "removeTabAt(int)": {"Returns": [], "Parameters": [["int", "int: Position of the tab to remove"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other Remove a tab from the action bar. If the removed tab was selected it will be deselected and another tab will be selected if present.", "history": "added in version 23.0.0", "FullName": "void removeTabAt (int position)"}, "setCustomView(int)": {"Returns": [], "Parameters": [["int", "int: Resource ID of a layout to inflate into the ActionBar."]], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#ActionBar#setDisplayOptions_E@"], "Permissions": [], "Description": "Set the action bar into custom navigation mode, supplying a view for custom navigation. Custom navigation views appear between the application icon and any action buttons and may use any space available there. Common use cases for custom navigation views might include an auto-suggesting address bar for a browser or other navigation mechanisms that do not translate well to provided navigation modes. The display option @B_android#support#v7#app#ActionBar#DISPLAY_SHOW_CUSTOM_E@ must be set for the custom view to be displayed.", "history": "added in version 23.0.0", "FullName": "void setCustomView (int resId)"}, "setCustomView(android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: Custom navigation view to place in the ActionBar."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the action bar into custom navigation mode, supplying a view for custom navigation. Custom navigation views appear between the application icon and any action buttons and may use any space available there. Common use cases for custom navigation views might include an auto-suggesting address bar for a browser or other navigation mechanisms that do not translate well to provided navigation modes.", "history": "added in version 23.0.0", "FullName": "void setCustomView (View view)"}, "setDisplayShowTitleEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true to display a title/subtitle if present."]], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#ActionBar#setDisplayOptions_E@"], "Permissions": [], "Description": "Set whether an activity title/subtitle should be displayed. To set several display options at once, see the setDisplayOptions methods.", "history": "added in version 23.0.0", "FullName": "void setDisplayShowTitleEnabled (boolean showTitle)"}, "setDisplayUseLogoEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true to use the activity logo, false to use the activity icon."]], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#ActionBar#setDisplayOptions_E@"], "Permissions": [], "Description": "Set whether to display the activity logo rather than the activity icon. A logo is often a wider, more detailed image. To set several display options at once, see the setDisplayOptions methods.", "history": "added in version 23.0.0", "FullName": "void setDisplayUseLogoEnabled (boolean useLogo)"}, "setSelectedNavigationItem(int)": {"Returns": [], "Parameters": [["int", "int: Position of the item to select."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other Set the selected navigation item in list or tabbed navigation modes.", "history": "added in version 23.0.0", "FullName": "void setSelectedNavigationItem (int position)"}, "setHideOnContentScrollEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true to enable hiding on content scroll."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enable hiding the action bar on content scroll. If enabled, the action bar will scroll out of sight along with a @B_android#view#View#setNestedScrollingEnabled_E@ view's content. The action bar must be in @B_android#view#Window#FEATURE_ACTION_BAR_OVERLAY_E@ to enable hiding on content scroll. When partially scrolled off screen the action bar is considered @B_android#support#v7#app#ActionBar#hide_E@. A call to @B_android#support#v7#app#ActionBar#show_E@ will cause it to return to full view.", "history": "added in version 23.0.0", "FullName": "void setHideOnContentScrollEnabled (boolean hideOnContentScroll)"}, "ActionBar()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 23.0.0", "FullName": "ActionBar ()"}, "getSubtitle()": {"Returns": [["@B_java#lang#CharSequence_E@", "The current ActionBar subtitle or null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current ActionBar subtitle in standard mode. Returns null if @B_android#support#v7#app#ActionBar#getNavigationMode_E@ would not return @B_android#support#v7#app#ActionBar#NAVIGATION_MODE_STANDARD_E@.", "history": "added in version 23.0.0", "FullName": "CharSequence getSubtitle ()"}, "newTab()": {"Returns": [["@B_android#support#v7#app#ActionBar#Tab_E@", "A new Tab"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#ActionBar#addTab_E@"], "Permissions": [], "Description": "Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other Create and return a new @B_android#support#v7#app#ActionBar#Tab_E@. This tab will not be included in the action bar until it is added.", "history": "added in version 23.0.0", "FullName": "ActionBar.Tab newTab ()"}, "setElevation(float)": {"Returns": [], "Parameters": [["float", "float: Elevation value in pixels"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the Z-axis elevation of the action bar in pixels. The action bar's elevation is the distance it is placed from its parent surface. Higher values are closer to the user.", "history": "added in version 23.0.0", "FullName": "void setElevation (float elevation)"}, "setHomeActionContentDescription(int)": {"Returns": [], "Parameters": [["int", "int: Resource ID of a string to use as the new description for the Home action when enabled"]], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#ActionBar#setHomeAsUpIndicator_E@"], "Permissions": [], "Description": "Set an alternate description for the Home/Up action, when enabled. This description is commonly used for accessibility/screen readers when the Home action is enabled. (See @B_android#support#v7#app#ActionBar#setDisplayHomeAsUpEnabled_E@.) Examples of this are, \"Navigate Home\" or \"Navigate Up\" depending on the @B_android#support#v7#app#ActionBar#DISPLAY_HOME_AS_UP_E@ display option. If you have changed the home-as-up indicator using @B_android#support#v7#app#ActionBar#setHomeAsUpIndicator_E@ to indicate more specific functionality such as a sliding drawer, you should also set this to accurately describe the action. Setting this to 0 will use the system default description.", "history": "added in version 23.0.0", "FullName": "void setHomeActionContentDescription (int resId)"}, "getHideOffset()": {"Returns": [["int", "The action bar's offset toward its fully hidden state in pixels"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the current vertical offset of the action bar. The action bar's current hide offset is the distance that the action bar is currently scrolled offscreen in pixels. The valid range is 0 (fully visible) to the action bar's current measured @B_android#support#v7#app#ActionBar#getHeight_E@ (fully invisible).", "history": "added in version 23.0.0", "FullName": "int getHideOffset ()"}, "addTab(android.support.v7.app.ActionBar.Tab, int)": {"Returns": [], "Parameters": [["@B_android#support#v7#app#ActionBar#Tab_E@", "ActionBar.Tab: The tab to add"], ["int", "int: The new position of the tab"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other Add a tab for use in tabbed navigation mode. The tab will be inserted at position. If this is the first tab to be added it will become the selected tab.", "history": "added in version 23.0.0", "FullName": "void addTab (ActionBar.Tab tab, int position)"}, "getSelectedTab()": {"Returns": [["@B_android#support#v7#app#ActionBar#Tab_E@", "The currently selected tab or null"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other Returns the currently selected tab if in tabbed navigation mode and there is at least one tab present.", "history": "added in version 23.0.0", "FullName": "ActionBar.Tab getSelectedTab ()"}, "getTitle()": {"Returns": [["@B_java#lang#CharSequence_E@", "The current ActionBar title or null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current ActionBar title in standard mode. Returns null if @B_android#support#v7#app#ActionBar#getNavigationMode_E@ would not return @B_android#support#v7#app#ActionBar#NAVIGATION_MODE_STANDARD_E@.", "history": "added in version 23.0.0", "FullName": "CharSequence getTitle ()"}, "getHeight()": {"Returns": [["int", "The ActionBar's height"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the current height of the ActionBar.", "history": "added in version 23.0.0", "FullName": "int getHeight ()"}, "setDisplayShowHomeEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true to show home, false otherwise."]], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#ActionBar#setDisplayOptions_E@"], "Permissions": [], "Description": "Set whether to include the application home affordance in the action bar. Home is presented as either an activity icon or logo. To set several display options at once, see the setDisplayOptions methods.", "history": "added in version 23.0.0", "FullName": "void setDisplayShowHomeEnabled (boolean showHome)"}, "getNavigationItemCount()": {"Returns": [["int", "Number of navigation items."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other Get the number of navigation items present in the current navigation mode.", "history": "added in version 23.0.0", "FullName": "int getNavigationItemCount ()"}, "isShowing()": {"Returns": [["boolean", "true if the ActionBar is showing, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 23.0.0", "FullName": "boolean isShowing ()"}, "setTitle(java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: Title to set"]], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#ActionBar#setTitle_E@", "@B_android#support#v7#app#ActionBar#setDisplayOptions_E@"], "Permissions": [], "Description": "Set the action bar's title. This will only be displayed if @B_android#support#v7#app#ActionBar#DISPLAY_SHOW_TITLE_E@ is set.", "history": "added in version 23.0.0", "FullName": "void setTitle (CharSequence title)"}, "getDisplayOptions()": {"Returns": [["int", "The current set of display options."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 23.0.0", "FullName": "int getDisplayOptions ()"}, "show()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Show the ActionBar if it is not currently showing. If the window hosting the ActionBar does not have the feature @B_android#view#Window#FEATURE_ACTION_BAR_OVERLAY_E@ it will resize application content to fit the new space available. If you are hiding the ActionBar through @B_android#view#View#SYSTEM_UI_FLAG_FULLSCREEN_E@, you should not call this function directly.", "history": "added in version 23.0.0", "FullName": "void show ()"}, "removeAllTabs()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other Remove all tabs from the action bar and deselect the current tab.", "history": "added in version 23.0.0", "FullName": "void removeAllTabs ()"}, "getNavigationMode()": {"Returns": [["int", "The current navigation mode."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other Returns the current navigation mode. The result will be one of: @B_android#support#v7#app#ActionBar#NAVIGATION_MODE_STANDARD_E@ @B_android#support#v7#app#ActionBar#NAVIGATION_MODE_LIST_E@ @B_android#support#v7#app#ActionBar#NAVIGATION_MODE_TABS_E@", "history": "added in version 23.0.0", "FullName": "int getNavigationMode ()"}, "setIcon(android.graphics.drawable.Drawable)": {"Returns": [], "Parameters": [["@B_android#graphics#drawable#Drawable_E@", "Drawable: Drawable to show as an icon."]], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#ActionBar#setDisplayUseLogoEnabled_E@", "@B_android#support#v7#app#ActionBar#setDisplayShowHomeEnabled_E@"], "Permissions": [], "Description": "Set the icon to display in the 'home' section of the action bar. The action bar will use an icon specified by its style or the activity icon by default. Whether the home section shows an icon or logo is controlled by the display option @B_android#support#v7#app#ActionBar#DISPLAY_USE_LOGO_E@.", "history": "added in version 23.0.0", "FullName": "void setIcon (Drawable icon)"}, "getElevation()": {"Returns": [["float", "Elevation value in pixels"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the Z-axis elevation of the action bar in pixels. The action bar's elevation is the distance it is placed from its parent surface. Higher values are closer to the user.", "history": "added in version 23.0.0", "FullName": "float getElevation ()"}, "getTabCount()": {"Returns": [["int", "Tab count"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other Returns the number of tabs currently registered with the action bar.", "history": "added in version 23.0.0", "FullName": "int getTabCount ()"}, "removeTab(android.support.v7.app.ActionBar.Tab)": {"Returns": [], "Parameters": [["@B_android#support#v7#app#ActionBar#Tab_E@", "ActionBar.Tab: The tab to remove"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other Remove a tab from the action bar. If the removed tab was selected it will be deselected and another tab will be selected if present.", "history": "added in version 23.0.0", "FullName": "void removeTab (ActionBar.Tab tab)"}, "setTitle(int)": {"Returns": [], "Parameters": [["int", "int: Resource ID of title string to set"]], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#ActionBar#setTitle_E@", "@B_android#support#v7#app#ActionBar#setDisplayOptions_E@"], "Permissions": [], "Description": "Set the action bar's title. This will only be displayed if @B_android#support#v7#app#ActionBar#DISPLAY_SHOW_TITLE_E@ is set.", "history": "added in version 23.0.0", "FullName": "void setTitle (int resId)"}, "setSubtitle(java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: Subtitle to set"]], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#ActionBar#setSubtitle_E@", "@B_android#support#v7#app#ActionBar#setDisplayOptions_E@"], "Permissions": [], "Description": "Set the action bar's subtitle. This will only be displayed if @B_android#support#v7#app#ActionBar#DISPLAY_SHOW_TITLE_E@ is set. Set to null to disable the subtitle entirely.", "history": "added in version 23.0.0", "FullName": "void setSubtitle (CharSequence subtitle)"}, "setDisplayHomeAsUpEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true to show the user that selecting home will return one level up rather than to the top level of the app."]], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#ActionBar#setDisplayOptions_E@"], "Permissions": [], "Description": "Set whether home should be displayed as an \"up\" affordance. Set this to true if selecting \"home\" returns up by a single level in your UI rather than back to the top level or front page. To set several display options at once, see the setDisplayOptions methods.", "history": "added in version 23.0.0", "FullName": "void setDisplayHomeAsUpEnabled (boolean showHomeAsUp)"}, "setIcon(int)": {"Returns": [], "Parameters": [["int", "int: Resource ID of a drawable to show as an icon."]], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#ActionBar#setDisplayUseLogoEnabled_E@", "@B_android#support#v7#app#ActionBar#setDisplayShowHomeEnabled_E@"], "Permissions": [], "Description": "Set the icon to display in the 'home' section of the action bar. The action bar will use an icon specified by its style or the activity icon by default. Whether the home section shows an icon or logo is controlled by the display option @B_android#support#v7#app#ActionBar#DISPLAY_USE_LOGO_E@.", "history": "added in version 23.0.0", "FullName": "void setIcon (int resId)"}, "setSubtitle(int)": {"Returns": [], "Parameters": [["int", "int: Resource ID of subtitle string to set"]], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#ActionBar#setSubtitle_E@", "@B_android#support#v7#app#ActionBar#setDisplayOptions_E@"], "Permissions": [], "Description": "Set the action bar's subtitle. This will only be displayed if @B_android#support#v7#app#ActionBar#DISPLAY_SHOW_TITLE_E@ is set.", "history": "added in version 23.0.0", "FullName": "void setSubtitle (int resId)"}, "setDisplayOptions(int, int)": {"Returns": [], "Parameters": [["int", "int: A combination of the bits defined by the DISPLAY_ constants defined in ActionBar."], ["int", "int: A bit mask declaring which display options should be changed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set selected display options. Only the options specified by mask will be changed. To change all display option bits at once, see @B_android#support#v7#app#ActionBar#setDisplayOptions_E@. Example: setDisplayOptions(0, DISPLAY_SHOW_HOME) will disable the @B_android#support#v7#app#ActionBar#DISPLAY_SHOW_HOME_E@ option. setDisplayOptions(DISPLAY_SHOW_HOME, DISPLAY_SHOW_HOME | DISPLAY_USE_LOGO) will enable @B_android#support#v7#app#ActionBar#DISPLAY_SHOW_HOME_E@ and disable @B_android#support#v7#app#ActionBar#DISPLAY_USE_LOGO_E@.", "history": "added in version 23.0.0", "FullName": "void setDisplayOptions (int options, int mask)"}, "setNavigationMode(int)": {"Returns": [], "Parameters": [["int", "int: The new mode to set."]], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#ActionBar_E@"], "Permissions": [], "Description": "Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other Set the current navigation mode.", "history": "added in version 23.0.0", "FullName": "void setNavigationMode (int mode)"}, "getCustomView()": {"Returns": [["@B_android#view#View_E@", "The current custom view."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 23.0.0", "FullName": "View getCustomView ()"}, "hide()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Hide the ActionBar if it is currently showing. If the window hosting the ActionBar does not have the feature @B_android#view#Window#FEATURE_ACTION_BAR_OVERLAY_E@ it will resize application content to fit the new space available. Instead of calling this function directly, you can also cause an ActionBar using the overlay feature to hide through @B_android#view#View#SYSTEM_UI_FLAG_FULLSCREEN_E@. Hiding the ActionBar through this system UI flag allows you to more seamlessly hide it in conjunction with other screen decorations.", "history": "added in version 23.0.0", "FullName": "void hide ()"}, "selectTab(android.support.v7.app.ActionBar.Tab)": {"Returns": [], "Parameters": [["@B_android#support#v7#app#ActionBar#Tab_E@", "ActionBar.Tab: Tab to select"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other Select the specified tab. If it is not a child of this action bar it will be added. Note: If you want to select by index, use @B_android#support#v7#app#ActionBar#setSelectedNavigationItem_E@.", "history": "added in version 23.0.0", "FullName": "void selectTab (ActionBar.Tab tab)"}, "getTabAt(int)": {"Returns": [["@B_android#support#v7#app#ActionBar#Tab_E@", "no returns description in source"]], "Parameters": [["int", "int: Index value in the range 0-get"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other Returns the tab at the specified index.", "history": "added in version 23.0.0", "FullName": "ActionBar.Tab getTabAt (int index)"}, "setHideOffset(int)": {"Returns": [], "Parameters": [["int", "int: The action bar's offset toward its fully hidden state in pixels."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the current hide offset of the action bar. The action bar's current hide offset is the distance that the action bar is currently scrolled offscreen in pixels. The valid range is 0 (fully visible) to the action bar's current measured @B_android#support#v7#app#ActionBar#getHeight_E@ (fully invisible).", "history": "added in version 23.0.0", "FullName": "void setHideOffset (int offset)"}, "setDisplayOptions(int)": {"Returns": [], "Parameters": [["int", "int: A combination of the bits defined by the DISPLAY_ constants defined in ActionBar."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set display options. This changes all display option bits at once. To change a limited subset of display options, see @B_android#support#v7#app#ActionBar#setDisplayOptions_E@.", "history": "added in version 23.0.0", "FullName": "void setDisplayOptions (int options)"}, "setLogo(int)": {"Returns": [], "Parameters": [["int", "int: Resource ID of a drawable to show as a logo."]], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#ActionBar#setDisplayUseLogoEnabled_E@", "@B_android#support#v7#app#ActionBar#setDisplayShowHomeEnabled_E@"], "Permissions": [], "Description": "Set the logo to display in the 'home' section of the action bar. The action bar will use a logo specified by its style or the activity logo by default. Whether the home section shows an icon or logo is controlled by the display option @B_android#support#v7#app#ActionBar#DISPLAY_USE_LOGO_E@.", "history": "added in version 23.0.0", "FullName": "void setLogo (int resId)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v7.app.ActionBar", "ClassDesc": "A primary toolbar within the activity that may display the activity title, application-level navigation affordances, and other interactive items. The action bar appears at the top of an activity's window when the activity uses the AppCompat's @B_android#support#v7#appcompat#R#style#Theme_AppCompat_E@ theme (or one of its descendant themes). You may otherwise add the action bar by calling @B_android#support#v7#app#AppCompatDelegate#requestWindowFeature_E@ or by declaring it in a custom theme with the @B_android#support#v7#appcompat#R#styleable#AppCompatTheme_windowActionBar_E@ property. The action bar may be represented by any Toolbar widget within the application layout. The application may signal to the Activity which Toolbar should be treated as the Activity's action bar. Activities that use this feature should use one of the supplied .NoActionBar themes, set the @B_android#support#v7#appcompat#R#styleable#AppCompatTheme_windowActionBar_E@ attribute to false or otherwise not request the window feature. If your activity has an options menu, you can make select items accessible directly from the action bar as \"action items\". You can also modify various characteristics of the action bar or remove it completely. The navigation button (formerly \"Home\") takes over the space previously occupied by the application icon. Apps wishing to express a stronger branding should use their brand colors heavily in the action bar and other application chrome or use a @B_android#support#v7#app#ActionBar#setLogo_E@ in place of their standard title text. From your activity, you can retrieve an instance of @B_android#support#v7#app#ActionBar_E@ by calling @B_android#support#v7#app#AppCompatActivity#getSupportActionBar_E@ getSupportActionBar()}. In some cases, the action bar may be overlayed by another bar that enables contextual actions, using an @B_android#support#v7#view#ActionMode_E@. For example, when the user selects one or more items in your activity, you can enable an action mode that offers actions specific to the selected items, with a UI that temporarily replaces the action bar. Although the UI may occupy the same space, the @B_android#support#v7#view#ActionMode_E@ APIs are distinct and independent from those for @B_android#support#v7#app#ActionBar_E@."}