{"Functions": {"create(android.renderscript.RenderScript,android.renderscript.Element)": {"Returns": [["@B_android#renderscript#ScriptIntrinsicHistogram_E@", "ScriptIntrinsicHistogram"]], "Parameters": [["@B_android#renderscript#RenderScript_E@", "RenderScript: The RenderScript context"], ["@B_android#renderscript#Element_E@", "Element: Element type for inputs"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create an intrinsic for calculating the histogram of an uchar or uchar4 image. Supported elements types are @B_android#renderscript#Element#U8_4_E@, @B_android#renderscript#Element#U8_3_E@, @B_android#renderscript#Element#U8_2_E@, @B_android#renderscript#Element#U8_E@", "history": "Added in API level 19", "FullName": "public static ScriptIntrinsicHistogram create (RenderScript rs, Element e)"}, "forEach_Dot(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)": {"Returns": [], "Parameters": [["@B_android#renderscript#Allocation_E@", "Allocation: The input image"], ["@B_android#renderscript#Script#LaunchOptions_E@", "Script.LaunchOptions: LaunchOptions for clipping"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Process an input buffer and place the histogram into the output allocation. The dot product of the input channel and the coefficients from 'setDotCoefficients' are used to calculate the output values. 1D and 2D input allocations are supported.", "history": "Added in API level 21", "FullName": "public void forEach_Dot (Allocation ain, Script.LaunchOptions opt)"}, "forEach(android.renderscript.Allocation)": {"Returns": [], "Parameters": [["@B_android#renderscript#Allocation_E@", "Allocation: The input image"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Process an input buffer and place the histogram into the output allocation. The output allocation may be a narrower vector size than the input. In this case the vector size of the output is used to determine how many of the input channels are used in the computation. This is useful if you have an RGBA input buffer but only want the histogram for RGB. 1D and 2D input allocations are supported.", "history": "Added in API level 19", "FullName": "public void forEach (Allocation ain)"}, "getKernelID_Separate()": {"Returns": [["@B_android#renderscript#Script#KernelID_E@", "Script.KernelID The KernelID object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get a KernelID for this intrinsic kernel.", "history": "Added in API level 19", "FullName": "public Script.KernelID getKernelID_Separate ()"}, "setDotCoefficients(float,float,float,float)": {"Returns": [], "Parameters": [["float", "float: Red coefficient"], ["float", "float: Green coefficient"], ["float", "float: Blue coefficient"], ["float", "float: Alpha coefficient"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the coefficients used for the RGBA to Luminocity calculation. The default is {0.299f, 0.587f, 0.114f, 0.f}. Coefficients must be >= 0 and sum to 1.0 or less.", "history": "Added in API level 19", "FullName": "public void setDotCoefficients (float r, float g, float b, float a)"}, "getFieldID_Input()": {"Returns": [["@B_android#renderscript#Script#FieldID_E@", "Script.FieldID The FieldID object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get a FieldID for the input field of this intrinsic.", "history": "Added in API level 19", "FullName": "public Script.FieldID getFieldID_Input ()"}, "forEach(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)": {"Returns": [], "Parameters": [["@B_android#renderscript#Allocation_E@", "Allocation: The input image"], ["@B_android#renderscript#Script#LaunchOptions_E@", "Script.LaunchOptions: LaunchOptions for clipping"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Process an input buffer and place the histogram into the output allocation. The output allocation may be a narrower vector size than the input. In this case the vector size of the output is used to determine how many of the input channels are used in the computation. This is useful if you have an RGBA input buffer but only want the histogram for RGB. 1D and 2D input allocations are supported.", "history": "Added in API level 21", "FullName": "public void forEach (Allocation ain, Script.LaunchOptions opt)"}, "forEach_Dot(android.renderscript.Allocation)": {"Returns": [], "Parameters": [["@B_android#renderscript#Allocation_E@", "Allocation: The input image"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Process an input buffer and place the histogram into the output allocation. The dot product of the input channel and the coefficients from 'setDotCoefficients' are used to calculate the output values. 1D and 2D input allocations are supported.", "history": "Added in API level 19", "FullName": "public void forEach_Dot (Allocation ain)"}, "setDotCoefficients(float, float, float, float)": {"Returns": [], "Parameters": [["float", "float: Red coefficient"], ["float", "float: Green coefficient"], ["float", "float: Blue coefficient"], ["float", "float: Alpha coefficient"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the coefficients used for the RGBA to Luminocity calculation. The default is {0.299f, 0.587f, 0.114f, 0.f}. Coefficients must be >= 0 and sum to 1.0 or less.", "history": "added in API level 19", "FullName": "public void setDotCoefficients (float r, float g, float b, float a)"}, "setOutput(android.renderscript.Allocation)": {"Returns": [], "Parameters": [["@B_android#renderscript#Allocation_E@", "Allocation: The output allocation"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the output of the histogram. 32 bit integer types are supported.", "history": "Added in API level 19", "FullName": "public void setOutput (Allocation aout)"}}, "Inheritance": ["@B_android#renderscript#BaseObj_E@", "@B_android#renderscript#Script_E@", "@B_android#renderscript#ScriptIntrinsic_E@"], "ClassName": "android.renderscript.ScriptIntrinsicHistogram", "ClassDesc": "Intrinsic Histogram filter. * @apiSince 19"}