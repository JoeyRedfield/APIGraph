{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a string such as \"192.0.2.0/24\" or \"2001:db8:1:2::/64\"."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of this IpPrefix.", "history": "Added in API level 21", "FullName": "public String toString ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Implement the Parcelable interface.", "history": "added in API level 21", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getPrefixLength()": {"Returns": [["int", "the prefix length. Value is between 0 and 128 inclusive"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the prefix length of this IpPrefix.", "history": "Added in API level 21", "FullName": "public int getPrefixLength ()"}, "getAddress()": {"Returns": [["@B_java#net#InetAddress_E@", "the address in the form of a byte array. This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a copy of the first IP address in the prefix. Modifying the returned object does not change this object's contents.", "history": "Added in API level 21", "FullName": "public InetAddress getAddress ()"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if both objects are equal, false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the object to be tested for equality."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Compares this IpPrefix object against the specified object in obj. Two objects are equal if they have the same startAddress and prefixLength.", "history": "Added in API level 21", "FullName": "public boolean equals (Object obj)"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Implement the Parcelable interface.", "history": "Added in API level 21", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Implement the Parcelable interface.", "history": "Added in API level 21", "FullName": "public int describeContents ()"}, "contains(java.net.InetAddress)": {"Returns": [["boolean", "true if the prefix covers the given address. false otherwise."]], "Parameters": [["@B_java#net#InetAddress_E@", "InetAddress: An @B_java#net#InetAddress_E@ to test. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Determines whether the prefix contains the specified address.", "history": "Added in API level 23", "FullName": "public boolean contains (InetAddress address)"}, "getRawAddress()": {"Returns": [["byte[]", "the address in the form of a byte array. This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a copy of the IP address bytes in network order (the highest order byte is the zeroth element). Modifying the returned array does not change this object's contents.", "history": "Added in API level 21", "FullName": "public byte[] getRawAddress ()"}, "hashCode()": {"Returns": [["int", "the appropriate hashcode value."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the hashcode of the represented IP prefix.", "history": "Added in API level 21", "FullName": "public int hashCode ()"}}, "Inheritance": [], "ClassName": "android.net.IpPrefix", "ClassDesc": "This class represents an IP prefix, i.e., a contiguous block of IP addresses aligned on a power of two boundary (also known as an \"IP subnet\"). A prefix is specified by two pieces of information: A starting IP address (IPv4 or IPv6). This is the first IP address of the prefix. A prefix length. This specifies the length of the prefix by specifing the number of bits in the IP address, starting from the most significant bit in network byte order, that are constant for all addresses in the prefix. For example, the prefix 192.0.2.0/24 covers the 256 IPv4 addresses from 192.0.2.0 to 192.0.2.255, inclusive, and the prefix 2001:db8:1:2 covers the 2^64 IPv6 addresses from 2001:db8:1:2:: to 2001:db8:1:2:ffff:ffff:ffff:ffff, inclusive. Objects of this class are immutable."}