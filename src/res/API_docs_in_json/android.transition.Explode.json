{"Functions": {"onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)": {"Returns": [["@B_android#animation#Animator_E@", "An Animator to be started at the appropriate time in the overall transition for this scene change. A null value means no animation should be run."]], "Parameters": [["@B_android#view#ViewGroup_E@", "ViewGroup: The root of the transition hierarchy"], ["@B_android#view#View_E@", "View: The View to make disappear. This will be in the target scene's View hierarchy or in an @B_android#view#ViewGroupOverlay_E@ and will be VISIBLE."], ["@B_android#transition#TransitionValues_E@", "TransitionValues: The target values in the start scene"], ["@B_android#transition#TransitionValues_E@", "TransitionValues: The target values in the end scene"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The default implementation of this method returns a null Animator. Subclasses should override this method to make targets disappear with the desired transition. The method should only be called from @B_android#transition#Visibility#onDisappear_E@.", "history": "Added in API level 21", "FullName": "public Animator onDisappear (ViewGroup sceneRoot, View view, TransitionValues startValues, TransitionValues endValues)"}, "Explode(android.content.Context,android.util.AttributeSet)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"], ["@B_android#util#AttributeSet_E@", "AttributeSet no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 21", "FullName": "public Explode (Context context, AttributeSet attrs)"}, "captureStartValues(android.transition.TransitionValues)": {"Returns": [], "Parameters": [["@B_android#transition#TransitionValues_E@", "TransitionValues: The holder for any values that the Transition wishes to store. Values are stored in the values field of this TransitionValues object and are keyed from a String value. For example, to store a view's rotation value, a transition might call transitionValues.values.put(\"appname:transitionname:rotation\", view.getRotation()). The target view will already be stored in the transitionValues structure when this method is called."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Captures the values in the start scene for the properties that this transition monitors. These values are then passed as the startValues structure in a later call to @B_android#transition#Transition#createAnimator_E@. The main concern for an implementation is what the properties are that the transition cares about and what the values are for all of those properties. The start and end values will be compared later during the @B_android#transition#Transition#createAnimator_E@ method to determine what, if any, animations, should be run. Subclasses must implement this method. The method should only be called by the transition system; it is not intended to be called from external classes.", "history": "Added in API level 21", "FullName": "public void captureStartValues (TransitionValues transitionValues)"}, "captureEndValues(android.transition.TransitionValues)": {"Returns": [], "Parameters": [["@B_android#transition#TransitionValues_E@", "TransitionValues: The holder for any values that the Transition wishes to store. Values are stored in the values field of this TransitionValues object and are keyed from a String value. For example, to store a view's rotation value, a transition might call transitionValues.values.put(\"appname:transitionname:rotation\", view.getRotation()). The target view will already be stored in the transitionValues structure when this method is called."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Captures the values in the end scene for the properties that this transition monitors. These values are then passed as the endValues structure in a later call to @B_android#transition#Transition#createAnimator_E@. The main concern for an implementation is what the properties are that the transition cares about and what the values are for all of those properties. The start and end values will be compared later during the @B_android#transition#Transition#createAnimator_E@ method to determine what, if any, animations, should be run. Subclasses must implement this method. The method should only be called by the transition system; it is not intended to be called from external classes.", "history": "Added in API level 21", "FullName": "public void captureEndValues (TransitionValues transitionValues)"}, "onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)": {"Returns": [["@B_android#animation#Animator_E@", "An Animator to be started at the appropriate time in the overall transition for this scene change. A null value means no animation should be run."]], "Parameters": [["@B_android#view#ViewGroup_E@", "ViewGroup: The root of the transition hierarchy"], ["@B_android#view#View_E@", "View: The View to make appear. This will be in the target scene's View hierarchy and will be VISIBLE."], ["@B_android#transition#TransitionValues_E@", "TransitionValues: The target values in the start scene"], ["@B_android#transition#TransitionValues_E@", "TransitionValues: The target values in the end scene"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The default implementation of this method returns a null Animator. Subclasses should override this method to make targets appear with the desired transition. The method should only be called from @B_android#transition#Visibility#onAppear_E@.", "history": "Added in API level 21", "FullName": "public Animator onAppear (ViewGroup sceneRoot, View view, TransitionValues startValues, TransitionValues endValues)"}, "Explode()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 21", "FullName": "public Explode ()"}}, "Inheritance": ["@B_android#transition#Transition_E@", "@B_android#transition#Visibility_E@"], "ClassName": "android.transition.Explode", "ClassDesc": "This transition tracks changes to the visibility of target views in the start and end scenes and moves views in or out from the edges of the scene. Visibility is determined by both the @B_android#view#View#setVisibility_E@ state of the view as well as whether it is parented in the current view hierarchy. Disappearing Views are limited as described in @B_android#transition#Visibility#onDisappear_E@. Views move away from the focal View or the center of the Scene if no epicenter was provided."}