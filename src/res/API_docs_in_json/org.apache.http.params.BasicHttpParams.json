{"Functions": {"copy()": {"Returns": [["", "a new set of params holding a copy of the local parameters in this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a copy of these parameters. The implementation here instantiates @B_org#apache#http#params#BasicHttpParams_E@, then calls @B_org#apache#http#params#BasicHttpParams#copyParams_E@ to populate the copy.", "history": "Added in API level 1", "FullName": "public HttpParams copy ()"}, "BasicHttpParams()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public BasicHttpParams ()"}, "setParameter(java.lang.String, java.lang.Object)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public HttpParams setParameter (String name, Object value)"}, "copyParams(org.apache.http.params.HttpParams)": {"Returns": [], "Parameters": [["@B_org#apache#http#params#HttpParams_E@", "the parameters to which to copy"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Copies the locally defined parameters to the argument parameters. This method is called from @B_org#apache#http#params#BasicHttpParams#copy_E@.", "history": "Added in API level 1", "FullName": "protected void copyParams (HttpParams target)"}, "isParameterSet(java.lang.String)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public boolean isParameterSet (String name)"}, "isParameterSetLocally(java.lang.String)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public boolean isParameterSetLocally (String name)"}, "getParameter(java.lang.String)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public Object getParameter (String name)"}, "setParameters(java.lang.String[], java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "array of parameter name"], ["@B_java#lang#Object_E@", "parameter value"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Assigns the value to all the parameter with the given names", "history": "Added in API level 1", "FullName": "public void setParameters (String[] names, Object value)"}, "clear()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes all parameters from this collection.", "history": "Added in API level 1", "FullName": "public void clear ()"}, "clone()": {"Returns": [["", "a copy of this object."]], "Parameters": [], "Throws": [["@B_java#lang#CloneNotSupportedException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Creates and returns a copy of this Object. The default implementation returns a so-called \"shallow\" copy: It creates a new instance of the same class and then copies the field values (including object references) from this instance to the new instance. A \"deep\" copy, in contrast, would also recursively clone nested objects. A subclass that needs to implement this kind of cloning should call super.clone() to create the new instance and then create deep copies of the nested, mutable objects.", "history": "Added in API level 1", "FullName": "public Object clone ()"}, "removeParameter(java.lang.String)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public boolean removeParameter (String name)"}}, "Inheritance": ["@B_org#apache#http#params#AbstractHttpParams_E@"], "ClassName": "org.apache.http.params.BasicHttpParams", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit This class represents a collection of HTTP protocol parameters. Protocol parameters may be linked together to form a hierarchy. If a particular parameter value has not been explicitly defined in the collection itself, its value will be drawn from the parent collection of parameters."}