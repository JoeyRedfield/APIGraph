{"Functions": {"onPageSelected(int)": {"Returns": [], "Parameters": [["int", "int: Position index of the new selected page."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method will be invoked when a new page becomes selected. Animation is not necessarily complete.", "history": "added in version 22.2.0", "FullName": "void onPageSelected (int position)"}, "onPageScrollStateChanged(int)": {"Returns": [], "Parameters": [["int", "int: The new scroll state."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the scroll state changes. Useful for discovering when the user begins dragging, when the pager is automatically settling to the current page, or when it is fully stopped/idle.", "history": "added in version 22.2.0", "FullName": "void onPageScrollStateChanged (int state)"}, "onPageScrolled(int, float, int)": {"Returns": [], "Parameters": [["int", "int: Position index of the first page currently being displayed. Page position+1 will be visible if positionOffset is nonzero."], ["float", "float: Value from [0, 1) indicating the offset from the page at position."], ["int", "int: Value in pixels indicating the offset from position."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method will be invoked when the current page is scrolled, either as part of a programmatically initiated smooth scroll or a user initiated touch scroll.", "history": "added in version 22.2.0", "FullName": "void onPageScrolled (int position, float positionOffset, int positionOffsetPixels)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.design.widget.TabLayout.TabLayoutOnPageChangeListener", "ClassDesc": "A @B_android#support#v4#view#ViewPager#OnPageChangeListener_E@ class which contains the necessary calls back to the provided @B_android#support#design#widget#TabLayout_E@ so that the tab position is kept in sync. This class stores the provided TabLayout weakly, meaning that you can use @B_android#support#v4#view#ViewPager#addOnPageChangeListener_E@ without removing the listener and not cause a leak."}