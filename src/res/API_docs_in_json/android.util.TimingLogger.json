{"Functions": {"dumpToLog()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Dumps the timings to the log using Log.d(). If Log.isLoggable was not enabled to at least the Log.VERBOSE for the specified tag at construction or reset() time then this call does nothing.", "history": "Added in API level 1", "FullName": "public void dumpToLog ()"}, "reset()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Clear and initialize a TimingLogger object that will log using the tag and label that was specified previously, either via the constructor or a call to reset(tag, label). If the Log.isLoggable is not enabled to at least the Log.VERBOSE level for that tag at creation time then the addSplit and dumpToLog call will do nothing.", "history": "Added in API level 1", "FullName": "public void reset ()"}, "TimingLogger(java.lang.String, java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the log tag to use while logging the timings"], ["@B_java#lang#String_E@", "String: a string to be displayed with each log"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create and initialize a TimingLogger object that will log using the specific tag. If the Log.isLoggable is not enabled to at least the Log.VERBOSE level for that tag at creation time then the addSplit and dumpToLog call will do nothing.", "history": "added in API level 1", "FullName": "public TimingLogger (String tag, String label)"}, "TimingLogger(java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the log tag to use while logging the timings"], ["@B_java#lang#String_E@", "String: a string to be displayed with each log"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create and initialize a TimingLogger object that will log using the specific tag. If the Log.isLoggable is not enabled to at least the Log.VERBOSE level for that tag at creation time then the addSplit and dumpToLog call will do nothing.", "history": "Added in API level 1", "FullName": "public TimingLogger (String tag, String label)"}, "reset(java.lang.String, java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the log tag to use while logging the timings"], ["@B_java#lang#String_E@", "String: a string to be displayed with each log"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Clear and initialize a TimingLogger object that will log using the specific tag. If the Log.isLoggable is not enabled to at least the Log.VERBOSE level for that tag at creation time then the addSplit and dumpToLog call will do nothing.", "history": "added in API level 1", "FullName": "public void reset (String tag, String label)"}, "addSplit(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: a label to associate with this split."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Add a split for the current time, labeled with splitLabel. If Log.isLoggable was not enabled to at least the Log.VERBOSE for the specified tag at construction or reset() time then this call does nothing.", "history": "Added in API level 1", "FullName": "public void addSplit (String splitLabel)"}, "reset(java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the log tag to use while logging the timings"], ["@B_java#lang#String_E@", "String: a string to be displayed with each log"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Clear and initialize a TimingLogger object that will log using the specific tag. If the Log.isLoggable is not enabled to at least the Log.VERBOSE level for that tag at creation time then the addSplit and dumpToLog call will do nothing.", "history": "Added in API level 1", "FullName": "public void reset (String tag, String label)"}}, "Inheritance": [], "ClassName": "android.util.TimingLogger", "ClassDesc": "A utility class to help log timings splits throughout a method call. Typical usage is: The dumpToLog call would add the following to the log:"}