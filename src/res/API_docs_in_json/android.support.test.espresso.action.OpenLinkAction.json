{"Functions": {"getDescription()": {"Returns": [["String", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a description of the view action. The description should not be overly long and should fit nicely in a sentence like: \"performing %description% action on view with id ...\"", "history": "", "FullName": "String getDescription ()"}, "getConstraints()": {"Returns": [["Matcher<View>", "a Matcher that will be tested prior to calling perform."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "A mechanism for ViewActions to specify what type of views they can operate on. A ViewAction can demand that the view passed to perform meets certain constraints. For example it may want to ensure the view is already in the viewable physical screen of the device or is of a certain type.", "history": "", "FullName": "Matcher<View> getConstraints ()"}}, "Inheritance": ["https:##developer#android#com@B_java#lang#Object_E@"], "ClassName": "android.support.test.espresso.action.OpenLinkAction", "ClassDesc": "Invokes onClick of a link within a TextView (made with Linkify or via another method). Why not issue a real click event to the screen? Unfortunately, it does not seem to be possible (at least using public APIs) to determine the location of the link on the screen."}