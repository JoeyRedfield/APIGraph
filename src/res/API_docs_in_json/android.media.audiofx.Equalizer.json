{"Functions": {"getBandLevelRange()": {"Returns": [["short[]", "the band level range in an array of short integers. The first element is the lower limit of the range, the second element the upper limit."]], "Parameters": [], "Throws": [["", "java.lang.IllegalStateException"], ["", "java.lang.IllegalArgumentException"], ["", "java.lang.UnsupportedOperationException"], ["@B_java#lang#IllegalArgumentException_E@", ""], ["@B_java#lang#IllegalStateException_E@", ""], ["@B_java#lang#UnsupportedOperationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Gets the level range for use by @B_android#media#audiofx#Equalizer#setBandLevel_E@. The level is expressed in milliBel.", "history": "Added in API level 9", "FullName": "public short[] getBandLevelRange ()"}, "setProperties(android.media.audiofx.Equalizer.Settings)": {"Returns": [], "Parameters": [["@B_android#media#audiofx#Equalizer#Settings_E@", "Equalizer.Settings: an Equalizer.Settings object containing the properties to apply"]], "Throws": [["", "java.lang.IllegalStateException"], ["", "java.lang.IllegalArgumentException"], ["", "java.lang.UnsupportedOperationException"], ["@B_java#lang#IllegalArgumentException_E@", ""], ["@B_java#lang#IllegalStateException_E@", ""], ["@B_java#lang#UnsupportedOperationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Sets the equalizer properties. This method is useful when equalizer settings have to be applied from a previous backup.", "history": "Added in API level 9", "FullName": "public void setProperties (Equalizer.Settings settings)"}, "getCurrentPreset()": {"Returns": [["short", "the preset that is set at the moment."]], "Parameters": [], "Throws": [["", "java.lang.IllegalStateException"], ["", "java.lang.IllegalArgumentException"], ["", "java.lang.UnsupportedOperationException"], ["@B_java#lang#IllegalArgumentException_E@", ""], ["@B_java#lang#IllegalStateException_E@", ""], ["@B_java#lang#UnsupportedOperationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Gets current preset.", "history": "Added in API level 9", "FullName": "public short getCurrentPreset ()"}, "Equalizer(int, int)": {"Returns": [], "Parameters": [["int", "int: the priority level requested by the application for controlling the Equalizer engine. As the same engine can be shared by several applications, this parameter indicates how much the requesting application needs control of effect parameters. The normal priority is 0, above normal is a positive number, below normal a negative number."], ["int", "int: system wide unique audio session identifier. The Equalizer will be attached to the MediaPlayer or AudioTrack in the same audio session."]], "Throws": [["", "java.lang.IllegalStateException"], ["", "java.lang.IllegalArgumentException"], ["", "java.lang.UnsupportedOperationException"], ["@B_java#lang#RuntimeException_E@", ""], ["@B_java#lang#IllegalStateException_E@", ""], ["@B_java#lang#IllegalArgumentException_E@", ""], ["@B_java#lang#UnsupportedOperationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Class constructor.", "history": "added in API level 9", "FullName": "public Equalizer (int priority, int audioSession)"}, "getProperties()": {"Returns": [["@B_android#media#audiofx#Equalizer#Settings_E@", "an Equalizer.Settings object containing all current parameters values"]], "Parameters": [], "Throws": [["", "java.lang.IllegalStateException"], ["", "java.lang.IllegalArgumentException"], ["", "java.lang.UnsupportedOperationException"], ["@B_java#lang#IllegalArgumentException_E@", ""], ["@B_java#lang#IllegalStateException_E@", ""], ["@B_java#lang#UnsupportedOperationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Gets the equalizer properties. This method is useful when a snapshot of current equalizer settings must be saved by the application.", "history": "Added in API level 9", "FullName": "public Equalizer.Settings getProperties ()"}, "setParameterListener(android.media.audiofx.Equalizer.OnParameterChangeListener)": {"Returns": [], "Parameters": [["@B_android#media#audiofx#Equalizer#OnParameterChangeListener_E@", "Equalizer.OnParameterChangeListener: OnParameterChangeListener interface registered"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers an OnParameterChangeListener interface.", "history": "Added in API level 9", "FullName": "public void setParameterListener (Equalizer.OnParameterChangeListener listener)"}, "getCenterFreq(short)": {"Returns": [["int", "the center frequency in milliHertz"]], "Parameters": [["short", "short: frequency band whose center frequency is requested. The numbering of the bands starts from 0 and ends at (number of bands - 1)."]], "Throws": [["", "java.lang.IllegalStateException"], ["", "java.lang.IllegalArgumentException"], ["", "java.lang.UnsupportedOperationException"], ["@B_java#lang#IllegalArgumentException_E@", ""], ["@B_java#lang#IllegalStateException_E@", ""], ["@B_java#lang#UnsupportedOperationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Gets the center frequency of the given band.", "history": "Added in API level 9", "FullName": "public int getCenterFreq (short band)"}, "getNumberOfBands()": {"Returns": [["short", "the number of bands"]], "Parameters": [], "Throws": [["", "java.lang.IllegalStateException"], ["", "java.lang.IllegalArgumentException"], ["", "java.lang.UnsupportedOperationException"], ["@B_java#lang#IllegalArgumentException_E@", ""], ["@B_java#lang#IllegalStateException_E@", ""], ["@B_java#lang#UnsupportedOperationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Gets the number of frequency bands supported by the Equalizer engine.", "history": "Added in API level 9", "FullName": "public short getNumberOfBands ()"}, "getBandLevel(short)": {"Returns": [["short", "the gain in millibels of the given band."]], "Parameters": [["short", "short: frequency band whose gain is requested. The numbering of the bands starts from 0 and ends at (number of bands - 1)."]], "Throws": [["", "java.lang.IllegalStateException"], ["", "java.lang.IllegalArgumentException"], ["", "java.lang.UnsupportedOperationException"], ["@B_java#lang#IllegalArgumentException_E@", ""], ["@B_java#lang#IllegalStateException_E@", ""], ["@B_java#lang#UnsupportedOperationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Gets the gain set for the given equalizer band.", "history": "Added in API level 9", "FullName": "public short getBandLevel (short band)"}, "getPresetName(short)": {"Returns": [["@B_java#lang#String_E@", "a string containing the name of the given preset."]], "Parameters": [["short", "short: index of the preset. The valid range is [0, number of presets-1]."]], "Throws": [["", "java.lang.IllegalStateException"], ["", "java.lang.IllegalArgumentException"], ["", "java.lang.UnsupportedOperationException"]], "SeeAlso": [], "Permissions": [], "Description": "Gets the preset name based on the index.", "history": "Added in API level 9", "FullName": "public String getPresetName (short preset)"}, "setBandLevel(short,short)": {"Returns": [], "Parameters": [["short", "short: frequency band that will have the new gain. The numbering of the bands starts from 0 and ends at (number of bands - 1)."], ["short", "short: new gain in millibels that will be set to the given band. getBandLevelRange() will define the maximum and minimum values."]], "Throws": [["", "java.lang.IllegalStateException"], ["", "java.lang.IllegalArgumentException"], ["", "java.lang.UnsupportedOperationException"], ["@B_java#lang#IllegalArgumentException_E@", ""], ["@B_java#lang#IllegalStateException_E@", ""], ["@B_java#lang#UnsupportedOperationException_E@", ""]], "SeeAlso": ["@B_android#media#audiofx#Equalizer#getNumberOfBands_E@"], "Permissions": [], "Description": "Sets the given equalizer band to the given gain value.", "history": "Added in API level 9", "FullName": "public void setBandLevel (short band, short level)"}, "getBandFreqRange(short)": {"Returns": [["int[]", "the frequency range in millHertz in an array of integers. The first element is the lower limit of the range, the second element the upper limit."]], "Parameters": [["short", "short: frequency band whose frequency range is requested. The numbering of the bands starts from 0 and ends at (number of bands - 1)."]], "Throws": [["", "java.lang.IllegalStateException"], ["", "java.lang.IllegalArgumentException"], ["", "java.lang.UnsupportedOperationException"], ["@B_java#lang#IllegalArgumentException_E@", ""], ["@B_java#lang#IllegalStateException_E@", ""], ["@B_java#lang#UnsupportedOperationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Gets the frequency range of the given frequency band.", "history": "Added in API level 9", "FullName": "public int[] getBandFreqRange (short band)"}, "getNumberOfPresets()": {"Returns": [["short", "the number of presets the equalizer supports."]], "Parameters": [], "Throws": [["", "java.lang.IllegalStateException"], ["", "java.lang.IllegalArgumentException"], ["", "java.lang.UnsupportedOperationException"], ["@B_java#lang#IllegalArgumentException_E@", ""], ["@B_java#lang#IllegalStateException_E@", ""], ["@B_java#lang#UnsupportedOperationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Gets the total number of presets the equalizer supports. The presets will have indices [0, number of presets-1].", "history": "Added in API level 9", "FullName": "public short getNumberOfPresets ()"}, "usePreset(short)": {"Returns": [], "Parameters": [["short", "short: new preset that will be taken into use. The valid range is [0, number of presets-1]."]], "Throws": [["", "java.lang.IllegalStateException"], ["", "java.lang.IllegalArgumentException"], ["", "java.lang.UnsupportedOperationException"], ["@B_java#lang#IllegalArgumentException_E@", ""], ["@B_java#lang#IllegalStateException_E@", ""], ["@B_java#lang#UnsupportedOperationException_E@", ""]], "SeeAlso": ["@B_android#media#audiofx#Equalizer#getNumberOfPresets_E@"], "Permissions": [], "Description": "Sets the equalizer according to the given preset.", "history": "Added in API level 9", "FullName": "public void usePreset (short preset)"}, "getBand(int)": {"Returns": [["short", "the frequency band that has most effect on the given frequency."]], "Parameters": [["int", "int: frequency in milliHertz which is to be equalized via the returned band."]], "Throws": [["", "java.lang.IllegalStateException"], ["", "java.lang.IllegalArgumentException"], ["", "java.lang.UnsupportedOperationException"], ["@B_java#lang#IllegalArgumentException_E@", ""], ["@B_java#lang#IllegalStateException_E@", ""], ["@B_java#lang#UnsupportedOperationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Gets the band that has the most effect on the given frequency.", "history": "Added in API level 9", "FullName": "public short getBand (int frequency)"}, "setBandLevel(short, short)": {"Returns": [], "Parameters": [["short", "short: frequency band that will have the new gain. The numbering of the bands starts from 0 and ends at (number of bands - 1)."], ["short", "short: new gain in millibels that will be set to the given band. getBandLevelRange() will define the maximum and minimum values."]], "Throws": [["", "IllegalStateException"], ["", "IllegalArgumentException"], ["", "UnsupportedOperationException"], ["@B_java#lang#IllegalStateException_E@", ""], ["@B_java#lang#IllegalArgumentException_E@", ""], ["@B_java#lang#UnsupportedOperationException_E@", ""]], "SeeAlso": ["@B_android#media#audiofx#Equalizer#getNumberOfBands_E@"], "Permissions": [], "Description": "Sets the given equalizer band to the given gain value.", "history": "added in API level 9", "FullName": "public void setBandLevel (short band, short level)"}, "Equalizer(int,int)": {"Returns": [], "Parameters": [["int", "int: the priority level requested by the application for controlling the Equalizer engine. As the same engine can be shared by several applications, this parameter indicates how much the requesting application needs control of effect parameters. The normal priority is 0, above normal is a positive number, below normal a negative number."], ["int", "int: system wide unique audio session identifier. The Equalizer will be attached to the MediaPlayer or AudioTrack in the same audio session."]], "Throws": [["", "java.lang.IllegalStateException"], ["", "java.lang.IllegalArgumentException"], ["", "java.lang.UnsupportedOperationException"], ["", "java.lang.RuntimeException"], ["@B_java#lang#IllegalArgumentException_E@", ""], ["@B_java#lang#IllegalStateException_E@", ""], ["@B_java#lang#RuntimeException_E@", ""], ["@B_java#lang#UnsupportedOperationException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Class constructor.", "history": "Added in API level 9", "FullName": "public Equalizer (int priority, int audioSession)"}}, "Inheritance": ["@B_android#media#audiofx#AudioEffect_E@"], "ClassName": "android.media.audiofx.Equalizer", "ClassDesc": "An Equalizer is used to alter the frequency response of a particular music source or of the main output mix. An application creates an Equalizer object to instantiate and control an Equalizer engine in the audio framework. The application can either simply use predefined presets or have a more precise control of the gain in each frequency band controlled by the equalizer. The methods, parameter types and units exposed by the Equalizer implementation are directly mapping those defined by the OpenSL ES 1.0.1 Specification (http://www.khronos.org/opensles/) for the SLEqualizerItf interface. Please refer to this specification for more details. To attach the Equalizer to a particular AudioTrack or MediaPlayer, specify the audio session ID of this AudioTrack or MediaPlayer when constructing the Equalizer. NOTE: attaching an Equalizer to the global audio output mix by use of session 0 is deprecated. See @B_android#media#MediaPlayer#getAudioSessionId_E@ for details on audio sessions. See @B_android#media#audiofx#AudioEffect_E@ class for more details on controlling audio effects."}