{"Functions": {"getErrorPendingIntent(int, android.content.Context, int)": {"Returns": [], "Parameters": [["int", "error code returned by @B_com#google#android#gms#common#GooglePlayServicesUtil#isGooglePlayServicesAvailable_E@ call. If errorCode is @B_com#google#android#gms#common#ConnectionResult#SUCCESS_E@ then null is returned."], ["Context", "parent context for creating the PendingIntent."], ["int", "The requestCode given when calling startActivityForResult."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a PendingIntent to address the provided errorCode. It will direct them to one of the following places to either the Play Store if Google Play services is out of date or missing, or system settings if Google Play services is disabled on the device.", "history": "", "FullName": "public static PendingIntent getErrorPendingIntent (int errorCode, Context context, int requestCode)"}, "isUserRecoverableError(int)": {"Returns": [["", "true if the error is recoverable with @B_com#google#android#gms#common#GooglePlayServicesUtil#getErrorDialog_E@"]], "Parameters": [["int", "error code returned by @B_com#google#android#gms#common#GooglePlayServicesUtil#isGooglePlayServicesAvailable_E@, or returned to your application via @B_com#google#android#gms#common#api#GoogleApiClient#OnConnectionFailedListener#onConnectionFailed_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Determines whether an error is user-recoverable. If true, proceed by calling @B_com#google#android#gms#common#GooglePlayServicesUtil#getErrorDialog_E@ and showing the dialog.", "history": "", "FullName": "public static boolean isUserRecoverableError (int errorCode)"}, "getRemoteContext(android.content.Context)": {"Returns": [["", "The Context object of the Buddy APK or null if the Buddy APK is not installed on the device."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This gets the Context object of the Buddy APK. This loads the Buddy APK code from the Buddy APK into memory. This returned context can be used to create classes and obtain resources defined in the Buddy APK.", "history": "", "FullName": "public static Context getRemoteContext (Context context)"}, "showErrorDialogFragment(int, android.app.Activity, int)": {"Returns": [["", "true if the dialog is shown, false otherwise"]], "Parameters": [["int", "error code returned by @B_com#google#android#gms#common#GooglePlayServicesUtil#isGooglePlayServicesAvailable_E@ call. If errorCode is @B_com#google#android#gms#common#ConnectionResult#SUCCESS_E@ then this does nothing."], ["Activity", "parent activity for creating the dialog, also used for identifying language to display dialog in."], ["int", "The requestCode given when calling startActivityForResult."]], "Throws": [["RuntimeException", "if API level is below 11 and activity is not a @B_android#support#v4#app#FragmentActivity_E@."]], "SeeAlso": ["@B_com#google#android#gms#common#ErrorDialogFragment_E@", "@B_default package#SupportErrorDialogFragment_E@"], "Permissions": [], "Description": "Display a DialogFragment for an error code returned by @B_com#google#android#gms#common#GooglePlayServicesUtil#isGooglePlayServicesAvailable_E@.", "history": "", "FullName": "public static boolean showErrorDialogFragment (int errorCode, Activity activity, int requestCode)"}, "getErrorNotificationId(int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "protected static int getErrorNotificationId (int errorCode)"}, "showErrorDialogFragment(int, android.app.Activity, int, android.content.DialogInterface.OnCancelListener)": {"Returns": [["", "true if the dialog is shown, false otherwise."]], "Parameters": [["int", "error code returned by @B_com#google#android#gms#common#GooglePlayServicesUtil#isGooglePlayServicesAvailable_E@ call. If errorCode is @B_com#google#android#gms#common#ConnectionResult#SUCCESS_E@ then this does nothing"], ["Activity", "parent activity for creating the dialog, also used for identifying language to display dialog in."], ["int", "The requestCode given when calling startActivityForResult."], ["DialogInterface.OnCancelListener", "The @B_android#content#DialogInterface#OnCancelListener_E@ to invoke if the dialog is canceled."]], "Throws": [["RuntimeException", "if API level is below 11 and activity is not a @B_android#support#v4#app#FragmentActivity_E@."]], "SeeAlso": ["@B_com#google#android#gms#common#ErrorDialogFragment_E@", "@B_default package#SupportErrorDialogFragment_E@"], "Permissions": [], "Description": "Display a DialogFragment for an error code returned by @B_com#google#android#gms#common#GooglePlayServicesUtil#isGooglePlayServicesAvailable_E@.", "history": "", "FullName": "public static boolean showErrorDialogFragment (int errorCode, Activity activity, int requestCode, DialogInterface.OnCancelListener cancelListener)"}, "showErrorNotification(int, android.content.Context)": {"Returns": [], "Parameters": [["int", "error code returned by @B_com#google#android#gms#common#GooglePlayServicesUtil#isGooglePlayServicesAvailable_E@ call. If errorCode is @B_com#google#android#gms#common#ConnectionResult#SUCCESS_E@ then null is returned."], ["Context", "used for identifying language to display dialog in as well as accessing the @B_android#app#NotificationManager_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Displays a notification relevant to the provided error code. This method is similar to @B_com#google#android#gms#common#GooglePlayServicesUtil#getErrorDialog_E@, but is provided for background tasks that cannot or shouldn't display dialogs.", "history": "", "FullName": "public static void showErrorNotification (int errorCode, Context context)"}, "getErrorDialog(int, android.app.Activity, int)": {"Returns": [], "Parameters": [["int", "error code returned by @B_com#google#android#gms#common#GooglePlayServicesUtil#isGooglePlayServicesAvailable_E@ call. If errorCode is @B_com#google#android#gms#common#ConnectionResult#SUCCESS_E@ then null is returned."], ["Activity", "parent activity for creating the dialog, also used for identifying language to display dialog in."], ["int", "The requestCode given when calling startActivityForResult."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a dialog to address the provided errorCode. The returned dialog displays a localized message about the error and upon user confirmation (by tapping on dialog) will direct them to the Play Store if Google Play services is out of date or missing, or to system settings if Google Play services is disabled on the device.", "history": "", "FullName": "public static Dialog getErrorDialog (int errorCode, Activity activity, int requestCode)"}, "showErrorDialogFragment(int, android.app.Activity, android.support.v4.app.Fragment, int, android.content.DialogInterface.OnCancelListener)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public static boolean showErrorDialogFragment (int errorCode, Activity activity, Fragment fragment, int requestCode, DialogInterface.OnCancelListener cancelListener)"}, "getErrorDialog(int, android.app.Activity, int, android.content.DialogInterface.OnCancelListener)": {"Returns": [], "Parameters": [["int", "error code returned by @B_com#google#android#gms#common#GooglePlayServicesUtil#isGooglePlayServicesAvailable_E@ call. If errorCode is @B_com#google#android#gms#common#ConnectionResult#SUCCESS_E@ then null is returned."], ["Activity", "parent activity for creating the dialog, also used for identifying language to display dialog in."], ["int", "The requestCode given when calling startActivityForResult."], ["DialogInterface.OnCancelListener", "The @B_android#content#DialogInterface#OnCancelListener_E@ to invoke if the dialog is canceled."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a dialog to address the provided errorCode. The returned dialog displays a localized message about the error and upon user confirmation (by tapping on dialog) will direct them to the Play Store if Google Play services is out of date or missing, or to system settings if Google Play services is disabled on the device.", "history": "", "FullName": "public static Dialog getErrorDialog (int errorCode, Activity activity, int requestCode, DialogInterface.OnCancelListener cancelListener)"}, "getRemoteResource(android.content.Context)": {"Returns": [["", "The Resources object of the Buddy APK or null if the Buddy APK is not installed on the device."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This gets the Resources object of the Buddy APK.", "history": "", "FullName": "public static Resources getRemoteResource (Context context)"}, "getErrorString(int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a human-readable string of the error code returned from @B_com#google#android#gms#common#GooglePlayServicesUtil#isGooglePlayServicesAvailable_E@.", "history": "", "FullName": "public static String getErrorString (int errorCode)"}, "isGooglePlayServicesAvailable(android.content.Context)": {"Returns": [["", "status code indicating whether there was an error. Can be one of following in @B_com#google#android#gms#common#ConnectionResult_E@: SUCCESS, SERVICE_MISSING, SERVICE_VERSION_UPDATE_REQUIRED, SERVICE_DISABLED, SERVICE_INVALID"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Verifies that Google Play services is installed and enabled on this device, and that the version installed on this device is no older than the one required by this client.", "history": "", "FullName": "public static int isGooglePlayServicesAvailable (Context context)"}, "getOpenSourceSoftwareLicenseInfo(android.content.Context)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the open source software license information for the Google Play services application, or null if Google Play services is not available on this device.", "history": "", "FullName": "public static String getOpenSourceSoftwareLicenseInfo (Context context)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.common.GooglePlayServicesUtil", "ClassDesc": "Utility class for verifying that the Google Play services APK is available and up-to-date on this device. The same checks are performed if one uses @B_com#google#android#gms#ads#identifier#AdvertisingIdClient_E@ or @B_com#google#android#gms#auth#GoogleAuthUtil_E@ to connect to the service."}