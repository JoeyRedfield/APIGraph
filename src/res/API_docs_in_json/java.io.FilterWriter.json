{"Functions": {"flush()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", "If an I/O error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Flushes the stream.", "history": "Added in API level 1", "FullName": "public void flush ()"}, "write(java.lang.String,int,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: String to be written"], ["int", "int: Offset from which to start reading characters"], ["int", "int: Number of characters to be written"]], "Throws": [["@B_java#io#IOException_E@", "If an I/O error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Writes a portion of a string.", "history": "Added in API level 1", "FullName": "public void write (String str, int off, int len)"}, "FilterWriter(java.io.Writer)": {"Returns": [], "Parameters": [["@B_java#io#Writer_E@", "Writer: a Writer object to provide the underlying stream."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if out is null"]], "SeeAlso": [], "Permissions": [], "Description": "Create a new filtered writer.", "history": "Added in API level 1", "FullName": "protected FilterWriter (Writer out)"}, "write(char[],int,int)": {"Returns": [], "Parameters": [["char[]", "char: Buffer of characters to be written"], ["int", "int: Offset from which to start reading characters"], ["int", "int: Number of characters to be written"]], "Throws": [["@B_java#io#IOException_E@", "If an I/O error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Writes a portion of an array of characters.", "history": "Added in API level 1", "FullName": "public void write (char[] cbuf, int off, int len)"}, "write(java.lang.String, int, int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: String to be written"], ["int", "int: Offset from which to start reading characters"], ["int", "int: Number of characters to be written"]], "Throws": [["@B_java#io#IOException_E@", "If an I/O error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Writes a portion of a string.", "history": "added in API level 1", "FullName": "public void write (String str, int off, int len)"}, "close()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Closes the stream, flushing it first. Once the stream has been closed, further write() or flush() invocations will cause an IOException to be thrown. Closing a previously closed stream has no effect.", "history": "Added in API level 1", "FullName": "public void close ()"}, "write(int)": {"Returns": [], "Parameters": [["int", "int: int specifying a character to be written"]], "Throws": [["@B_java#io#IOException_E@", "If an I/O error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Writes a single character.", "history": "Added in API level 1", "FullName": "public void write (int c)"}, "write(char[], int, int)": {"Returns": [], "Parameters": [["char[]", "char: Buffer of characters to be written"], ["int", "int: Offset from which to start reading characters"], ["int", "int: Number of characters to be written"]], "Throws": [["@B_java#io#IOException_E@", "If an I/O error occurs"]], "SeeAlso": [], "Permissions": [], "Description": "Writes a portion of an array of characters.", "history": "added in API level 1", "FullName": "public void write (char[] cbuf, int off, int len)"}}, "Inheritance": ["@B_java#io#Writer_E@"], "ClassName": "java.io.FilterWriter", "ClassDesc": "Abstract class for writing filtered character streams. The abstract class FilterWriter itself provides default methods that pass all requests to the contained stream. Subclasses of FilterWriter should override some of these methods and may also provide additional methods and fields."}