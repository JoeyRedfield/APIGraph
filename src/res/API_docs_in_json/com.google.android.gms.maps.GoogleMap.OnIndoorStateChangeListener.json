{"Functions": {"onIndoorLevelActivated(com.google.android.gms.maps.model.IndoorBuilding)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#maps#model#IndoorBuilding_E@", "the building for which the active level has changed, never null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The map keeps track of the active level for each building which has been visited or otherwise had a level selected. When that level changes, this callback will be triggered regardless of whether the building is focused or not. This callback is also called when the default level first becomes available. This method will only be called after the building data has become available.", "history": "", "FullName": "public abstract void onIndoorLevelActivated (IndoorBuilding building)"}, "onIndoorBuildingFocused()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The map maintains a notion of focused building, which is the building currently centered in the viewport or otherwise selected by the user through the UI or the location provider. This callback is called when the focused building changes. This method will only be called after the building data has become available. The focused building is not referenced as a parameter of this method due to synchronization issues: if multiple focus requests are handled, listeners may be notified out-of-order, so should rely on getFocusedBuilding() itself to provide the most up-to-date information. It is possible that more than one onIndoorBuildingFocused call will be made without the focused building actually changing.", "history": "", "FullName": "public abstract void onIndoorBuildingFocused ()"}}, "Inheritance": [], "ClassName": "com.google.android.gms.maps.GoogleMap.OnIndoorStateChangeListener", "ClassDesc": "A listener for when the indoor state changes. Events are notified on the main thread."}