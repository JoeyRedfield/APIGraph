{"Functions": {"PagerTabStrip(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "PagerTabStrip (Context context)"}, "setTabIndicatorColor(int)": {"Returns": [], "Parameters": [["int", "int: Color to set as an 0xRRGGBB value. The high byte (alpha) is ignored."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the color of the tab indicator bar.", "history": "added in version 22.0.0", "FullName": "void setTabIndicatorColor (int color)"}, "setTextSpacing(int)": {"Returns": [], "Parameters": [["int", "int: Spacing between each title displayed in pixels"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the required spacing between title segments.", "history": "added in version 22.0.0", "FullName": "void setTextSpacing (int textSpacing)"}, "setTabIndicatorColorResource(int)": {"Returns": [], "Parameters": [["int", "int: Resource ID of a color resource to load"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the color of the tab indicator bar from a color resource.", "history": "added in version 22.0.0", "FullName": "void setTabIndicatorColorResource (int resId)"}, "setBackgroundColor(int)": {"Returns": [], "Parameters": [["int", "int: the color of the background"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the background color for this view.", "history": "", "FullName": "void setBackgroundColor (int color)"}, "setPadding(int, int, int, int)": {"Returns": [], "Parameters": [["int", "int: the left padding in pixels"], ["int", "int: the top padding in pixels"], ["int", "int: the right padding in pixels"], ["int", "int: the bottom padding in pixels"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the padding. The view may add on the space required to display the scrollbars, depending on the style and visibility of the scrollbars. So the values returned from @B_android#view#View#getPaddingLeft_E@, @B_android#view#View#getPaddingTop_E@, @B_android#view#View#getPaddingRight_E@ and @B_android#view#View#getPaddingBottom_E@ may be different from the values set in this call.", "history": "", "FullName": "void setPadding (int left, int top, int right, int bottom)"}, "getTabIndicatorColor()": {"Returns": [["int", "The current tab indicator color as an 0xRRGGBB value."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "int getTabIndicatorColor ()"}, "onTouchEvent(android.view.MotionEvent)": {"Returns": [["boolean", "True if the event was handled, false otherwise."]], "Parameters": [["@B_android#view#MotionEvent_E@", "MotionEvent: The motion event."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Implement this method to handle touch screen motion events. If this method is used to detect click actions, it is recommended that the actions be performed by implementing and calling @B_android#view#View#performClick_E@. This will ensure consistent system behavior, including: obeying click sound preferences dispatching OnClickListener calls handling @B_android#view#accessibility#AccessibilityNodeInfo#ACTION_CLICK_E@ when accessibility features are enabled", "history": "", "FullName": "boolean onTouchEvent (MotionEvent ev)"}, "setBackgroundResource(int)": {"Returns": [], "Parameters": [["int", "int: The identifier of the resource."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the background to a given resource. The resource should refer to a Drawable object or 0 to remove the background.", "history": "", "FullName": "void setBackgroundResource (int resId)"}, "setDrawFullUnderline(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true to draw a full-width underline, false otherwise"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set whether this tab strip should draw a full-width underline in the current tab indicator color.", "history": "added in version 22.0.0", "FullName": "void setDrawFullUnderline (boolean drawFull)"}, "onDraw(android.graphics.Canvas)": {"Returns": [], "Parameters": [["@B_android#graphics#Canvas_E@", "Canvas: the canvas on which the background will be drawn"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Implement this to do your drawing.", "history": "", "FullName": "void onDraw (Canvas canvas)"}, "getDrawFullUnderline()": {"Returns": [["boolean", "true if this tab strip will draw a full-width underline in the current tab indicator color."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return whether or not this tab strip will draw a full-width underline. This defaults to true if no background is set.", "history": "added in version 22.0.0", "FullName": "boolean getDrawFullUnderline ()"}}, "Inheritance": ["java.lang.Object", "https:##developer#android#com@B_android#view#View_E@", "https:##developer#android#com@B_android#view#ViewGroup_E@", "@B_android#support#v4#view#PagerTitleStrip_E@"], "ClassName": "android.support.v4.view.PagerTabStrip", "ClassDesc": "PagerTabStrip is an interactive indicator of the current, next, and previous pages of a @B_android#support#v4#view#ViewPager_E@. It is intended to be used as a child view of a ViewPager widget in your XML layout. Add it as a child of a ViewPager in your layout file and set its android:layout_gravity to TOP or BOTTOM to pin it to the top or bottom of the ViewPager. The title from each page is supplied by the method @B_android#support#v4#view#PagerAdapter#getPageTitle_E@ in the adapter supplied to the ViewPager. For a non-interactive indicator, see @B_android#support#v4#view#PagerTitleStrip_E@."}