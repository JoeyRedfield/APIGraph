{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 23", "FullName": "public String toString ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 23", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getTitle()": {"Returns": [["@B_java#lang#CharSequence_E@", "the title of this target, intended to be shown to a user"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the title of this target for display to a user. The UI displaying the title may truncate this title if it is too long to be displayed in full.", "history": "Added in API level 23", "FullName": "public CharSequence getTitle ()"}, "getIcon()": {"Returns": [["@B_android#graphics#drawable#Icon_E@", "the icon representing this target, intended to be shown to a user"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the icon representing this target for display to a user. The UI displaying the icon may crop, resize or overlay this icon.", "history": "Added in API level 23", "FullName": "public Icon getIcon ()"}, "getScore()": {"Returns": [["float", "the ranking score for this target between 0.0f and 1.0f, inclusive"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the ranking score supplied by the creator of this ChooserTarget. Values are between 0.0f and 1.0f. The UI displaying the target may take this score into account when sorting and merging targets from multiple sources.", "history": "Added in API level 23", "FullName": "public float getScore ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 23", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getIntentExtras()": {"Returns": [["@B_android#os#Bundle_E@", "the extras to merge with the extras of the intent being launched"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the Bundle of extras to be added to an intent launched to this target.", "history": "Added in API level 23", "FullName": "public Bundle getIntentExtras ()"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 23", "FullName": "public int describeContents ()"}, "ChooserTarget(java.lang.CharSequence,android.graphics.drawable.Icon,float,android.content.ComponentName,android.os.Bundle)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: title of this target that will be shown to a user"], ["@B_android#graphics#drawable#Icon_E@", "Icon: icon to represent this target"], ["float", "float: ranking score for this target between 0.0f and 1.0f, inclusive"], ["@B_android#content#ComponentName_E@", "ComponentName: Name of the component to be launched if this target is chosen"], ["@B_android#os#Bundle_E@", "Bundle: Bundle of extras to merge with the extras of the launched intent This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Construct a deep link target for presentation by a chooser UI. A target is composed of a title and an icon for presentation to the user. The UI presenting this target may truncate the title if it is too long to be presented in the available space, as well as crop, resize or overlay the supplied icon. The creator of a target may supply a ranking score. This score is assumed to be relative to the other targets supplied by the same @B_android#service#chooser#ChooserTargetService#onGetChooserTargets_E@. Scores should be in the range from 0.0f (unlikely match) to 1.0f (very relevant match). Scores for a set of targets do not need to sum to 1. The ComponentName must be the name of an Activity component in the creator's own package, or an exported component from any other package. You may provide an optional Bundle of extras that will be merged into the final intent before it is sent to the target Activity; use this to add any additional data about the deep link that the target activity will read. e.g. conversation IDs, email addresses, etc. Take care not to place custom @B_android#os#Parcelable_E@ types into the extras bundle, as the system will not be able to unparcel them to merge them.", "history": "Added in API level 23", "FullName": "public ChooserTarget (CharSequence title, Icon icon, float score, ComponentName componentName, Bundle intentExtras)"}, "getComponentName()": {"Returns": [["@B_android#content#ComponentName_E@", "the name of the target Activity to launch"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the ComponentName of the Activity that should be launched for this ChooserTarget.", "history": "Added in API level 23", "FullName": "public ComponentName getComponentName ()"}}, "Inheritance": [], "ClassName": "android.service.chooser.ChooserTarget", "ClassDesc": "A ChooserTarget represents a deep-link into an application as returned by a @B_android#service#chooser#ChooserTargetService_E@. A chooser target represents a specific deep link target into an application exposed for selection by the user. This might be a frequently emailed contact, a recently active group messaging conversation, a folder in a cloud storage app, a collection of related items published on a social media service or any other contextually relevant grouping of target app + relevant metadata. Creators of chooser targets should consult the relevant design guidelines for the type of target they are presenting. For example, targets involving people should be presented with a circular icon."}