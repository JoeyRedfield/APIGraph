{"Functions": {"isMessagingSupported()": {"Returns": [["boolean", "True if session management is supported. Implies @B_android#support#v7#media#RemotePlaybackClient#isRemotePlaybackSupported_E@ is also true."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v7#media#RemotePlaybackClient#isRemotePlaybackSupported_E@"], "Permissions": [], "Description": "Returns true if the route supports messages. This method returns true if the route supports all of the basic remote playback actions and all of the following actions: @B_android#support#v7#media#MediaControlIntent#ACTION_START_SESSION_E@, @B_android#support#v7#media#MediaControlIntent#ACTION_SEND_MESSAGE_E@, @B_android#support#v7#media#MediaControlIntent#ACTION_END_SESSION_E@.", "history": "added in version 24.0.0", "FullName": "boolean isMessagingSupported ()"}, "setSessionId(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The new session id, or null if none."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the current session id. It is usually not necessary to set the session id explicitly since it is created as a side-effect of other requests such as @B_android#support#v7#media#RemotePlaybackClient#play_E@, @B_android#support#v7#media#RemotePlaybackClient#enqueue_E@, and @B_android#support#v7#media#RemotePlaybackClient#startSession_E@.", "history": "added in version 22.0.0", "FullName": "void setSessionId (String sessionId)"}, "hasSession()": {"Returns": [["boolean", "True if there is a current session."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the client currently has a session. Equivalent to checking whether @B_android#support#v7#media#RemotePlaybackClient#getSessionId_E@ returns a non-null result.", "history": "added in version 22.0.0", "FullName": "boolean hasSession ()"}, "isSessionManagementSupported()": {"Returns": [["boolean", "True if session management is supported. Implies @B_android#support#v7#media#RemotePlaybackClient#isRemotePlaybackSupported_E@ is also true."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v7#media#RemotePlaybackClient#isRemotePlaybackSupported_E@"], "Permissions": [], "Description": "Returns true if the route supports session management features. If the route does not support session management, then the session will not be created until the first media item is played. This method returns true if the route supports all of the basic remote playback actions and all of the following actions: @B_android#support#v7#media#MediaControlIntent#ACTION_START_SESSION_E@, @B_android#support#v7#media#MediaControlIntent#ACTION_GET_SESSION_STATUS_E@, @B_android#support#v7#media#MediaControlIntent#ACTION_END_SESSION_E@.", "history": "added in version 22.0.0", "FullName": "boolean isSessionManagementSupported ()"}, "isRemotePlaybackSupported()": {"Returns": [["boolean", "True if remote playback is supported."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the route supports remote playback. If the route does not support remote playback, then none of the functionality offered by the client will be available. This method returns true if the route supports all of the following actions: @B_android#support#v7#media#MediaControlIntent#ACTION_PLAY_E@, @B_android#support#v7#media#MediaControlIntent#ACTION_SEEK_E@, @B_android#support#v7#media#MediaControlIntent#ACTION_GET_STATUS_E@, @B_android#support#v7#media#MediaControlIntent#ACTION_PAUSE_E@, @B_android#support#v7#media#MediaControlIntent#ACTION_RESUME_E@, @B_android#support#v7#media#MediaControlIntent#ACTION_STOP_E@.", "history": "added in version 22.0.0", "FullName": "boolean isRemotePlaybackSupported ()"}, "getSessionId()": {"Returns": [["@B_java#lang#String_E@", "The current session id, or null if none."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the current session id if there is one.", "history": "added in version 22.0.0", "FullName": "String getSessionId ()"}, "isQueuingSupported()": {"Returns": [["boolean", "True if queuing is supported. Implies @B_android#support#v7#media#RemotePlaybackClient#isRemotePlaybackSupported_E@ is also true."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v7#media#RemotePlaybackClient#isRemotePlaybackSupported_E@"], "Permissions": [], "Description": "Returns true if the route supports queuing features. If the route does not support queuing, then at most one media item can be played at a time and the @B_android#support#v7#media#RemotePlaybackClient#enqueue_E@ method will not be available. This method returns true if the route supports all of the basic remote playback actions and all of the following actions: @B_android#support#v7#media#MediaControlIntent#ACTION_ENQUEUE_E@, @B_android#support#v7#media#MediaControlIntent#ACTION_REMOVE_E@.", "history": "added in version 22.0.0", "FullName": "boolean isQueuingSupported ()"}, "release()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Releases resources owned by the client.", "history": "added in version 22.0.0", "FullName": "void release ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v7.media.RemotePlaybackClient", "ClassDesc": "A helper class for playing media on remote routes using the remote playback protocol defined by @B_android#support#v7#media#MediaControlIntent_E@. The client maintains session state and offers a simplified interface for issuing remote playback media control intents to a single route."}