{"Functions": {"CertPathValidatorSpi()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The default constructor.", "history": "Added in API level 1", "FullName": "public CertPathValidatorSpi ()"}, "engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)": {"Returns": [["@B_java#security#cert#CertPathValidatorResult_E@", "the result of the validation algorithm"]], "Parameters": [["@B_java#security#cert#CertPath_E@", "CertPath: the CertPath to be validated"], ["@B_java#security#cert#CertPathParameters_E@", "CertPathParameters: the algorithm parameters"]], "Throws": [["@B_java#security#cert#CertPathValidatorException_E@", "if the CertPath does not validate"], ["@B_java#security#InvalidAlgorithmParameterException_E@", "if the specified parameters or the type of the specified CertPath are inappropriate for this CertPathValidator"]], "SeeAlso": [], "Permissions": [], "Description": "Validates the specified certification path using the specified algorithm parameter set. The CertPath specified must be of a type that is supported by the validation algorithm, otherwise an InvalidAlgorithmParameterException will be thrown. For example, a CertPathValidator that implements the PKIX algorithm validates CertPath objects of type X.509.", "history": "Added in API level 1", "FullName": "public abstract CertPathValidatorResult engineValidate (CertPath certPath, CertPathParameters params)"}, "engineGetRevocationChecker()": {"Returns": [["@B_java#security#cert#CertPathChecker_E@", "a CertPathChecker that this implementation uses to check the revocation status of certificates"]], "Parameters": [], "Throws": [["@B_java#lang#UnsupportedOperationException_E@", "if this method is not supported"]], "SeeAlso": [], "Permissions": [], "Description": "Returns a CertPathChecker that this implementation uses to check the revocation status of certificates. A PKIX implementation returns objects of type PKIXRevocationChecker. The primary purpose of this method is to allow callers to specify additional input parameters and options specific to revocation checking. See the class description of CertPathValidator for an example. This method was added to version 1.8 of the Java Platform Standard Edition. In order to maintain backwards compatibility with existing service providers, this method cannot be abstract and by default throws an UnsupportedOperationException.", "history": "Added in API level 24", "FullName": "public CertPathChecker engineGetRevocationChecker ()"}}, "Inheritance": [], "ClassName": "java.security.cert.CertPathValidatorSpi", "ClassDesc": "The @B_java#security#cert#CertPathValidator_E@ class. All CertPathValidator implementations must include a class (the SPI class) that extends this class (CertPathValidatorSpi) and implements all of its methods. In general, instances of this class should only be accessed through the CertPathValidator class. For details, see the Java Cryptography Architecture. Instances of this class need not be protected against concurrent access from multiple threads. Threads that need to access a single CertPathValidatorSpi instance concurrently should synchronize amongst themselves and provide the necessary locking before calling the wrapping CertPathValidator object. However, implementations of CertPathValidatorSpi may still encounter concurrency issues, since multiple threads each manipulating a different CertPathValidatorSpi instance need not synchronize."}