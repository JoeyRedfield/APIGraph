{"Functions": {"requestUnbind()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Request that the provider service be unbound. This will no longer receive subscription updates and will not be able to update the state of conditions until @B_android#service#notification#ConditionProviderService#requestRebind_E@ is called. The service will likely be killed by the system after this call. The service should wait for the @B_android#service#notification#ConditionProviderService#onConnected_E@ event before performing this operation.", "history": "Added in API level 26 Deprecated in API level 29", "FullName": "public final void requestUnbind ()"}, "onSubscribe(android.net.Uri)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri: the Uri describing the criteria of the condition."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called by the system when there is a new @B_android#service#notification#Condition_E@ to be managed by this provider.", "history": "Added in API level 24 Deprecated in API level 29", "FullName": "public abstract void onSubscribe (Uri conditionId)"}, "ConditionProviderService()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 24", "FullName": "public ConditionProviderService ()"}, "onUnsubscribe(android.net.Uri)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri: the Uri describing the criteria of the deleted condition."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called by the system when a @B_android#service#notification#Condition_E@ has been deleted.", "history": "Added in API level 24 Deprecated in API level 29", "FullName": "public abstract void onUnsubscribe (Uri conditionId)"}, "notifyConditions(android.service.notification.Condition...)": {"Returns": [], "Parameters": [["@B_android#service#notification#Condition_E@", "Condition: the changed conditions."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "see @B_android#app#NotificationManager#setAutomaticZenRuleState_E@. Informs the notification manager that the state of one or more Conditions has changed. See @B_android#service#notification#ConditionProviderService#notifyCondition_E@ for restrictions.", "history": "Added in API level 24 Deprecated in API level 29", "FullName": "public final void notifyConditions (Condition... conditions)"}, "notifyCondition(android.service.notification.Condition)": {"Returns": [], "Parameters": [["@B_android#service#notification#Condition_E@", "Condition: the condition that has changed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "see @B_android#app#NotificationManager#setAutomaticZenRuleState_E@. Informs the notification manager that the state of a Condition has changed. Use this method to put the system into Do Not Disturb mode or request that it exits Do Not Disturb mode. This call will be ignored unless there is an enabled @B_android#app#AutomaticZenRule_E@ owned by service that has an @B_android#app#AutomaticZenRule#getConditionId_E@ equal to this @B_android#service#notification#Condition#id_E@.", "history": "Added in API level 24 Deprecated in API level 29", "FullName": "public final void notifyCondition (Condition condition)"}, "onRequestConditions(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 24 Deprecated in API level 29", "FullName": "public void onRequestConditions (int relevance)"}, "onConnected()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when this service is connected.", "history": "Added in API level 24 Deprecated in API level 29", "FullName": "public abstract void onConnected ()"}, "onBind(android.content.Intent)": {"Returns": [["@B_android#os#IBinder_E@", "Return an IBinder through which clients can call on to the service."]], "Parameters": [["@B_android#content#Intent_E@", "Intent: The Intent that was used to bind to this service, as given to @B_android#content#Context#bindService_E@. Note that any extras that were included with the Intent at that point will not be seen here."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the communication channel to the service. May return null if clients can not bind to the service. The returned @B_android#os#IBinder_E@ is usually for a complex interface that has been Note that unlike other application components, calls on to the IBinder interface returned here may not happen on the main thread of the process. More information about the main thread can be found in", "history": "Added in API level 24 Deprecated in API level 29", "FullName": "public IBinder onBind (Intent intent)"}, "requestRebind(android.content.ComponentName)": {"Returns": [], "Parameters": [["@B_android#content#ComponentName_E@", "ComponentName no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Request that the provider be rebound, after a previous call to (@link #requestUnbind). This method will fail for providers that have not been granted the permission by the user.", "history": "Added in API level 26 Deprecated in API level 29", "FullName": "public static final void requestRebind (ComponentName componentName)"}}, "Inheritance": ["@B_android#content#Context_E@", "@B_android#content#ContextWrapper_E@", "@B_android#app#Service_E@"], "ClassName": "android.service.notification.ConditionProviderService", "ClassDesc": "Instead of using an automatically bound service, use @B_android#app#NotificationManager#setAutomaticZenRuleState_E@ to tell the system about the state of your rule. In order to maintain a link from Settings to your rule configuration screens, provide a configuration activity that handles @B_android#app#NotificationManager#ACTION_AUTOMATIC_ZEN_RULE_E@ on your @B_android#app#AutomaticZenRule_E@ via @B_android#app#AutomaticZenRule#setConfigurationActivity_E@. A service that provides conditions about boolean state. To extend this class, you must declare the service in your manifest file with the @B_android#Manifest#permission#BIND_CONDITION_PROVIDER_SERVICE_E@ permission and include an intent filter with the @B_android#service#notification#ConditionProviderService#SERVICE_INTERFACE_E@ action. If you want users to be able to create and update conditions for this service to monitor, include the @B_android#service#notification#ConditionProviderService#META_DATA_RULE_TYPE_E@ and @B_android#service#notification#ConditionProviderService#META_DATA_CONFIGURATION_ACTIVITY_E@ tags and request the @B_android#Manifest#permission#ACCESS_NOTIFICATION_POLICY_E@ permission. For example: Condition providers cannot be bound by the system on @B_android#app#ActivityManager#isLowRamDevice_E@ devices"}