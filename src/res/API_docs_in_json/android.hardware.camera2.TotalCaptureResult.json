{"Functions": {"getPartialResults()": {"Returns": [["@B_java#util#List_E@", "unmodifiable list of partial results This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the read-only list of partial results that compose this total result. The list is returned is unmodifiable; attempting to modify it will result in a UnsupportedOperationException being thrown. The list size will be inclusive between 0 and @B_android#hardware#camera2#CameraCharacteristics#REQUEST_PARTIAL_RESULT_COUNT_E@, with elements in ascending order of when @B_android#hardware#camera2#CameraCaptureSession#CaptureCallback#onCaptureProgressed_E@ was invoked.", "history": "Added in API level 21", "FullName": "public List<CaptureResult> getPartialResults ()"}, "getPhysicalCameraResults()": {"Returns": [["@B_java#util#Map_E@", "unmodifiable map between physical camera ids and their capture result metadata"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the map between physical camera ids and their capture result metadata This function can be called for logical multi-camera devices, which are devices that have REQUEST_AVAILABLE_CAPABILITIES_LOGICAL_MULTI_CAMERA capability and calls to @B_android#hardware#camera2#CameraCharacteristics#getPhysicalCameraIds_E@ return a non-empty set of physical devices that are backing the logical camera. If one or more streams from the underlying physical cameras were requested by the corresponding capture request, this function returns the result metadata for those physical cameras. Otherwise, an empty map is returned.", "history": "Added in API level 28", "FullName": "public Map<String, CaptureResult> getPhysicalCameraResults ()"}}, "Inheritance": ["@B_android#hardware#camera2#CameraMetadata_E@", "@B_android#hardware#camera2#CaptureResult_E@"], "ClassName": "android.hardware.camera2.TotalCaptureResult", "ClassDesc": "The total assembled results of a single image capture from the image sensor. Contains the final configuration for the capture hardware (sensor, lens, flash), the processing pipeline, the control algorithms, and the output buffers. A TotalCaptureResult is produced by a @B_android#hardware#camera2#CameraDevice_E@ after processing a @B_android#hardware#camera2#CaptureRequest_E@. All properties listed for capture requests can also be queried on the capture result, to determine the final values used for capture. The result also includes additional metadata about the state of the camera device during the capture. All properties returned by @B_android#hardware#camera2#CameraCharacteristics#getAvailableCaptureResultKeys_E@ are available (that is @B_android#hardware#camera2#CaptureResult#get_E@ will return non-null, if and only if that key that was enabled by the request. A few keys such as @B_android#hardware#camera2#CaptureResult#STATISTICS_FACES_E@ are disabled by default unless enabled with a switch (such as @B_android#hardware#camera2#CaptureRequest#STATISTICS_FACE_DETECT_MODE_E@). Refer to each key documentation on a case-by-case basis. For a logical multi-camera device, if the CaptureRequest contains a surface for an underlying physical camera, the corresponding @B_android#hardware#camera2#TotalCaptureResult_E@ object will include the metadata for that physical camera. And the mapping between the physical camera id and result metadata can be accessed via @B_android#hardware#camera2#TotalCaptureResult#getPhysicalCameraResults_E@. If all requested surfaces are for the logical camera, no metadata for physical camera will be included. @B_android#hardware#camera2#TotalCaptureResult_E@ objects are immutable."}