{"Functions": {"getSpanEnd(java.lang.Object)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the end of the range of text to which the specified markup object is attached, or -1 if the object is not attached.", "history": "Added in API level 1", "FullName": "public abstract int getSpanEnd (Object tag)"}, "getSpans(int, int, java.lang.Class<T>)": {"Returns": [["T[]", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["@B_java#lang#Class_E@", "Class no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return an array of the markup objects attached to the specified slice of this CharSequence and whose type is the specified type or a subclass of it. Specify Object.class for the type if you want all the objects regardless of type.", "history": "added in API level 1", "FullName": "public abstract T[] getSpans (int start, int end, Class<T> type)"}, "getSpans(int,int,java.lang.Class<T>)": {"Returns": [["T[]", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["@B_java#lang#Class_E@", "Class no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return an array of the markup objects attached to the specified slice of this CharSequence and whose type is the specified type or a subclass of it. Specify Object.class for the type if you want all the objects regardless of type.", "history": "Added in API level 1", "FullName": "public abstract T[] getSpans (int start, int end, Class<T> type)"}, "getSpanFlags(java.lang.Object)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the flags that were specified when @B_android#text#Spannable#setSpan_E@ was used to attach the specified markup object, or 0 if the specified object has not been attached.", "history": "Added in API level 1", "FullName": "public abstract int getSpanFlags (Object tag)"}, "nextSpanTransition(int,int,java.lang.Class)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["@B_java#lang#Class_E@", "Class no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the first offset greater than start where a markup object of class type begins or ends, or limit if there are no starts or ends greater than start but less than limit. Specify null or Object.class for the type if you want every transition regardless of type.", "history": "Added in API level 1", "FullName": "public abstract int nextSpanTransition (int start, int limit, Class type)"}, "nextSpanTransition(int, int, java.lang.Class)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["@B_java#lang#Class_E@", "Class no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the first offset greater than start where a markup object of class type begins or ends, or limit if there are no starts or ends greater than start but less than limit. Specify null or Object.class for the type if you want every transition regardless of type.", "history": "added in API level 1", "FullName": "public abstract int nextSpanTransition (int start, int limit, Class type)"}, "getSpanStart(java.lang.Object)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the beginning of the range of text to which the specified markup object is attached, or -1 if the object is not attached.", "history": "Added in API level 1", "FullName": "public abstract int getSpanStart (Object tag)"}}, "Inheritance": [], "ClassName": "android.text.Spanned", "ClassDesc": "This is the interface for text that has markup objects attached to ranges of it. Not all text classes have mutable markup or text; see @B_android#text#Spannable_E@ for mutable markup and @B_android#text#Editable_E@ for mutable text."}