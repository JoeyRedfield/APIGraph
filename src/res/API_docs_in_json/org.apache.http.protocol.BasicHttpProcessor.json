{"Functions": {"removeResponseInterceptorByClass(java.lang.Class)": {"Returns": [], "Parameters": [["@B_java#lang#Class_E@", "the class of the instances to be removed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes all response interceptor of the specified class", "history": "Added in API level 1", "FullName": "public void removeResponseInterceptorByClass (Class clazz)"}, "getResponseInterceptor(int)": {"Returns": [["", "the interceptor at the given index, or null if the index is out of range"]], "Parameters": [["int", "the index of the interceptor to obtain, 0 for first"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtains a response interceptor from this list.", "history": "Added in API level 1", "FullName": "public HttpResponseInterceptor getResponseInterceptor (int index)"}, "process(org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)": {"Returns": [], "Parameters": [["@B_org#apache#http#HttpRequest_E@", "the request to preprocess"], ["@B_org#apache#http#protocol#HttpContext_E@", "the context for the request"]], "Throws": [["@B_java#io#IOException_E@", ""], ["@B_org#apache#http#HttpException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Processes a request. On the client side, this step is performed before the request is sent to the server. On the server side, this step is performed on incoming messages before the message body is evaluated.", "history": "Added in API level 1", "FullName": "public void process (HttpRequest request, HttpContext context)"}, "setInterceptors(java.util.List)": {"Returns": [], "Parameters": [["@B_java#util#List_E@", "the list of request and response interceptors from which to initialize"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the interceptor lists. First, both interceptor lists maintained by this processor will be cleared. Subsequently, elements of the argument list that are request interceptors will be added to the request interceptor list. Elements that are response interceptors will be added to the response interceptor list. Elements that are both request and response interceptor will be added to both lists. Elements that are neither request nor response interceptor will be ignored.", "history": "Added in API level 1", "FullName": "public void setInterceptors (List list)"}, "addRequestInterceptor(org.apache.http.HttpRequestInterceptor, int)": {"Returns": [], "Parameters": [["@B_org#apache#http#HttpRequestInterceptor_E@", "the request interceptor to add"], ["int", "the index to insert the interceptor at"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Inserts a request interceptor at the specified index.", "history": "Added in API level 1", "FullName": "public void addRequestInterceptor (HttpRequestInterceptor itcp, int index)"}, "process(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)": {"Returns": [], "Parameters": [["@B_org#apache#http#HttpResponse_E@", "the response to postprocess"], ["@B_org#apache#http#protocol#HttpContext_E@", "the context for the request"]], "Throws": [["@B_java#io#IOException_E@", ""], ["@B_org#apache#http#HttpException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Processes a response. On the server side, this step is performed before the response is sent to the client. On the client side, this step is performed on incoming messages before the message body is evaluated.", "history": "Added in API level 1", "FullName": "public void process (HttpResponse response, HttpContext context)"}, "addResponseInterceptor(org.apache.http.HttpResponseInterceptor)": {"Returns": [], "Parameters": [["@B_org#apache#http#HttpResponseInterceptor_E@", "the response interceptor to add"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Appends a response interceptor to this list.", "history": "Added in API level 1", "FullName": "public void addResponseInterceptor (HttpResponseInterceptor itcp)"}, "clearResponseInterceptors()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes all response interceptors from this list.", "history": "Added in API level 1", "FullName": "public void clearResponseInterceptors ()"}, "removeRequestInterceptorByClass(java.lang.Class)": {"Returns": [], "Parameters": [["@B_java#lang#Class_E@", "the class of the instances to be removed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes all request interceptor of the specified class", "history": "Added in API level 1", "FullName": "public void removeRequestInterceptorByClass (Class clazz)"}, "addInterceptor(org.apache.http.HttpRequestInterceptor)": {"Returns": [], "Parameters": [["@B_org#apache#http#HttpRequestInterceptor_E@", "the interceptor to add"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as @B_org#apache#http#protocol#BasicHttpProcessor#addRequestInterceptor_E@.", "history": "Added in API level 1", "FullName": "public final void addInterceptor (HttpRequestInterceptor interceptor)"}, "addInterceptor(org.apache.http.HttpResponseInterceptor, int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public final void addInterceptor (HttpResponseInterceptor interceptor, int index)"}, "copy()": {"Returns": [["", "new instance of the BasicHttpProcessor"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a copy of this instance", "history": "Added in API level 1", "FullName": "public BasicHttpProcessor copy ()"}, "getRequestInterceptorCount()": {"Returns": [["", "the number of request interceptors in this list"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtains the current size of this list.", "history": "Added in API level 1", "FullName": "public int getRequestInterceptorCount ()"}, "addInterceptor(org.apache.http.HttpResponseInterceptor)": {"Returns": [], "Parameters": [["@B_org#apache#http#HttpResponseInterceptor_E@", "the interceptor to add"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Same as @B_org#apache#http#protocol#BasicHttpProcessor#addResponseInterceptor_E@.", "history": "Added in API level 1", "FullName": "public final void addInterceptor (HttpResponseInterceptor interceptor)"}, "clearInterceptors()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Clears both interceptor lists maintained by this processor.", "history": "Added in API level 1", "FullName": "public void clearInterceptors ()"}, "getResponseInterceptorCount()": {"Returns": [["", "the number of response interceptors in this list"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtains the current size of this list.", "history": "Added in API level 1", "FullName": "public int getResponseInterceptorCount ()"}, "addInterceptor(org.apache.http.HttpRequestInterceptor, int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public final void addInterceptor (HttpRequestInterceptor interceptor, int index)"}, "clone()": {"Returns": [["", "a copy of this object."]], "Parameters": [], "Throws": [["@B_java#lang#CloneNotSupportedException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Creates and returns a copy of this Object. The default implementation returns a so-called \"shallow\" copy: It creates a new instance of the same class and then copies the field values (including object references) from this instance to the new instance. A \"deep\" copy, in contrast, would also recursively clone nested objects. A subclass that needs to implement this kind of cloning should call super.clone() to create the new instance and then create deep copies of the nested, mutable objects.", "history": "Added in API level 1", "FullName": "public Object clone ()"}, "getRequestInterceptor(int)": {"Returns": [["", "the interceptor at the given index, or null if the index is out of range"]], "Parameters": [["int", "the index of the interceptor to obtain, 0 for first"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtains a request interceptor from this list.", "history": "Added in API level 1", "FullName": "public HttpRequestInterceptor getRequestInterceptor (int index)"}, "addResponseInterceptor(org.apache.http.HttpResponseInterceptor, int)": {"Returns": [], "Parameters": [["@B_org#apache#http#HttpResponseInterceptor_E@", "the response interceptor to add"], ["int", "the index to insert the interceptor at"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Inserts a response interceptor at the specified index.", "history": "Added in API level 1", "FullName": "public void addResponseInterceptor (HttpResponseInterceptor itcp, int index)"}, "BasicHttpProcessor()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public BasicHttpProcessor ()"}, "copyInterceptors(org.apache.http.protocol.BasicHttpProcessor)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "protected void copyInterceptors (BasicHttpProcessor target)"}, "addRequestInterceptor(org.apache.http.HttpRequestInterceptor)": {"Returns": [], "Parameters": [["@B_org#apache#http#HttpRequestInterceptor_E@", "the request interceptor to add"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Appends a request interceptor to this list.", "history": "Added in API level 1", "FullName": "public void addRequestInterceptor (HttpRequestInterceptor itcp)"}, "clearRequestInterceptors()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes all request interceptors from this list.", "history": "Added in API level 1", "FullName": "public void clearRequestInterceptors ()"}}, "Inheritance": [], "ClassName": "org.apache.http.protocol.BasicHttpProcessor", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Keeps lists of interceptors for processing requests and responses."}