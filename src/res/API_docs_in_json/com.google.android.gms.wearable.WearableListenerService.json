{"Functions": {"onDataChanged(com.google.android.gms.wearable.DataEventBuffer)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Receives data changed events. The provided buffer will be closed after this method completes. Use @B_com#google#android#gms#common#data#Freezable#freeze_E@ on items in the buffer to use them outside of this callscope. Multiple data events may delivered in a single call and may only contain final-state modifications of a data item. (Eg, multiple calls to putDataItem changing the value of the data item's @B_com#google#android#gms#wearable#DataItem#getData_E@ may only appear as a single event, with the last modification expressed). Applications needing to track the of all its data items, may use @B_com#google#android#gms#wearable#DataApi#getDataItems_E@ on boot to retrieve all existing data items.", "history": "", "FullName": "public void onDataChanged (DataEventBuffer dataEvents)"}, "onChannelOpened(com.google.android.gms.wearable.Channel)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a new channel is opened by a remote node.", "history": "", "FullName": "public void onChannelOpened (Channel channel)"}, "onDestroy()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public void onDestroy ()"}, "onConnectedNodes(java.util.List<com.google.android.gms.wearable.Node>)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public void onConnectedNodes (List<Node> connectedNodes)"}, "onPeerConnected(com.google.android.gms.wearable.Node)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notification that a peer is now reachable by this node. It may be directly connected to this node or it may be reachable only via a directly connected node. Changes to a node's hop count or nearby status alone will not trigger an @B_com#google#android#gms#wearable#NodeApi#NodeListener#onPeerConnected_E@ event as long as the node was already connected. Since multiple nodes can be connected to a network at the same time, peer connected and disconnected events can come in any order.", "history": "", "FullName": "public void onPeerConnected (Node peer)"}, "onCapabilityChanged(com.google.android.gms.wearable.CapabilityInfo)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public void onCapabilityChanged (CapabilityInfo capabilityInfo)"}, "onBind(android.content.Intent)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public final IBinder onBind (Intent intent)"}, "onChannelClosed(com.google.android.gms.wearable.Channel, int, int)": {"Returns": [], "Parameters": [["int", "the reason for the channel closing. One of @B_com#google#android#gms#wearable#ChannelApi#ChannelListener#CLOSE_REASON_DISCONNECTED_E@, @B_com#google#android#gms#wearable#ChannelApi#ChannelListener#CLOSE_REASON_REMOTE_CLOSE_E@, or @B_com#google#android#gms#wearable#ChannelApi#ChannelListener#CLOSE_REASON_LOCAL_CLOSE_E@."], ["int", "the error code specified on @B_com#google#android#gms#wearable#Channel#close_E@, or 0 if closeReason is @B_com#google#android#gms#wearable#ChannelApi#ChannelListener#CLOSE_REASON_DISCONNECTED_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a channel is closed. This can happen through an explicit call to @B_com#google#android#gms#wearable#Channel#close_E@ or @B_com#google#android#gms#wearable#Channel#close_E@ on either side of the connection, or due to disconnecting from the remote node.", "history": "", "FullName": "public void onChannelClosed (Channel channel, int closeReason, int appSpecificErrorCode)"}, "onMessageReceived(com.google.android.gms.wearable.MessageEvent)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Receives message events.", "history": "", "FullName": "public void onMessageReceived (MessageEvent messageEvent)"}, "onCreate()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public void onCreate ()"}, "WearableListenerService()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public WearableListenerService ()"}, "onOutputClosed(com.google.android.gms.wearable.Channel, int, int)": {"Returns": [], "Parameters": [["int", "the reason for the output closing. One of @B_com#google#android#gms#wearable#ChannelApi#ChannelListener#CLOSE_REASON_DISCONNECTED_E@, @B_com#google#android#gms#wearable#ChannelApi#ChannelListener#CLOSE_REASON_REMOTE_CLOSE_E@, @B_com#google#android#gms#wearable#ChannelApi#ChannelListener#CLOSE_REASON_LOCAL_CLOSE_E@, or @B_com#google#android#gms#wearable#ChannelApi#ChannelListener#CLOSE_REASON_NORMAL_E@"], ["int", "the error code specified on @B_com#google#android#gms#wearable#Channel#close_E@, or 0 if closeReason is @B_com#google#android#gms#wearable#ChannelApi#ChannelListener#CLOSE_REASON_DISCONNECTED_E@ or @B_com#google#android#gms#wearable#ChannelApi#ChannelListener#CLOSE_REASON_NORMAL_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the output side of a channel is closed.", "history": "", "FullName": "public void onOutputClosed (Channel channel, int closeReason, int appSpecificErrorCode)"}, "onPeerDisconnected(com.google.android.gms.wearable.Node)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Notification that a peer has been disconnected from this node or is no longer reachable by this node. Since multiple nodes can be connected to a network at the same time, peer connected and disconnected events can come in any order.", "history": "", "FullName": "public void onPeerDisconnected (Node peer)"}, "onInputClosed(com.google.android.gms.wearable.Channel, int, int)": {"Returns": [], "Parameters": [["int", "the reason for the input closing. One of @B_com#google#android#gms#wearable#ChannelApi#ChannelListener#CLOSE_REASON_DISCONNECTED_E@, @B_com#google#android#gms#wearable#ChannelApi#ChannelListener#CLOSE_REASON_REMOTE_CLOSE_E@, @B_com#google#android#gms#wearable#ChannelApi#ChannelListener#CLOSE_REASON_LOCAL_CLOSE_E@, or @B_com#google#android#gms#wearable#ChannelApi#ChannelListener#CLOSE_REASON_NORMAL_E@"], ["int", "the error code specified on @B_com#google#android#gms#wearable#Channel#close_E@, or 0 if closeReason is @B_com#google#android#gms#wearable#ChannelApi#ChannelListener#CLOSE_REASON_DISCONNECTED_E@ or @B_com#google#android#gms#wearable#ChannelApi#ChannelListener#CLOSE_REASON_NORMAL_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the input side of a channel is closed.", "history": "", "FullName": "public void onInputClosed (Channel channel, int closeReason, int appSpecificErrorCode)"}}, "Inheritance": ["java.lang.Object", "android.content.Context", "android.content.ContextWrapper", "android.app.Service"], "ClassName": "com.google.android.gms.wearable.WearableListenerService", "ClassDesc": "Receives events from other nodes, such as data changes, messages or connectivity events. The life-cycle of this service is managed by Android Wear. This service will be bound to and events delivered as a result of changes through the @B_com#google#android#gms#wearable#DataApi_E@, @B_com#google#android#gms#wearable#MessageApi_E@ as well as events indicating a device has connected or disconnected from the Android Wear network. Applications expecting to be notified of events while in the background should extend this class. Activities and other short-lived Android components may use @B_com#google#android#gms#wearable#DataApi#addListener_E@, @B_com#google#android#gms#wearable#MessageApi#addListener_E@ and @B_com#google#android#gms#wearable#NodeApi#addListener_E@ to receive events for a limited period of time. Only one WearableListenerService may be specified for an application. Implementors could use a @B_android#support#v4#content#LocalBroadcastManager_E@ to dispatch events to other components in an application."}