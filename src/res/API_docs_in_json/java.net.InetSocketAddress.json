{"Functions": {"createUnresolved(java.lang.String, int)": {"Returns": [["@B_java#net#InetSocketAddress_E@", "a InetSocketAddress representing the unresolved socket address"]], "Parameters": [["@B_java#lang#String_E@", "String: the Host name"], ["int", "int: The port number"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the port parameter is outside the range of valid port values, or if the hostname parameter is null."]], "SeeAlso": ["@B_java#net#InetSocketAddress#isUnresolved_E@"], "Permissions": [], "Description": "Creates an unresolved socket address from a hostname and a port number. No attempt will be made to resolve the hostname into an InetAddress. The address will be flagged as A valid port value is between 0 and 65535. A port number of zero will let the system pick up an ephemeral port in a bind operation.", "history": "added in API level 1", "FullName": "public static InetSocketAddress createUnresolved (String host, int port)"}, "InetSocketAddress(java.lang.String, int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the Host name"], ["int", "int: The port number"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the port parameter is outside the range of valid port values, or if the hostname parameter is null."], ["@B_java#lang#SecurityException_E@", "if a security manager is present and permission to resolve the host name is denied."]], "SeeAlso": ["@B_java#net#InetSocketAddress#isUnresolved_E@"], "Permissions": [], "Description": "Creates a socket address from a hostname and a port number. An attempt will be made to resolve the hostname into an InetAddress. If that attempt fails, the address will be flagged as If there is a security manager, its checkConnect method is called with the host name as its argument to check the permission to resolve it. This could result in a SecurityException. A valid port value is between 0 and 65535. A port number of zero will let the system pick up an ephemeral port in a bind operation.", "history": "added in API level 1", "FullName": "public InetSocketAddress (String hostname, int port)"}, "getPort()": {"Returns": [["int", "the port number."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the port number.", "history": "Added in API level 1", "FullName": "public final int getPort ()"}, "InetSocketAddress(java.net.InetAddress,int)": {"Returns": [], "Parameters": [["@B_java#net#InetAddress_E@", "InetAddress: The IP address"], ["int", "int: The port number"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the port parameter is outside the specified range of valid port values."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a socket address from an IP address and a port number. A valid port value is between 0 and 65535. A port number of zero will let the system pick up an ephemeral port in a bind operation. A null address will assign the", "history": "Added in API level 1", "FullName": "public InetSocketAddress (InetAddress addr, int port)"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a string representation of this InetSocketAddress. This String is constructed by calling toString() on the InetAddress and concatenating the port number (with a colon). If the address is unresolved then the part before the colon will only contain the hostname.", "history": "Added in API level 1", "FullName": "public String toString ()"}, "InetSocketAddress(java.lang.String,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the Host name"], ["int", "int: The port number"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the port parameter is outside the range of valid port values, or if the hostname parameter is null."], ["@B_java#lang#SecurityException_E@", "if a security manager is present and permission to resolve the host name is denied."]], "SeeAlso": ["@B_java#net#InetSocketAddress#isUnresolved_E@"], "Permissions": [], "Description": "Creates a socket address from a hostname and a port number. An attempt will be made to resolve the hostname into an InetAddress. If that attempt fails, the address will be flagged as If there is a security manager, its checkConnect method is called with the host name as its argument to check the permission to resolve it. This could result in a SecurityException. A valid port value is between 0 and 65535. A port number of zero will let the system pick up an ephemeral port in a bind operation.", "history": "Added in API level 1", "FullName": "public InetSocketAddress (String hostname, int port)"}, "InetSocketAddress(java.net.InetAddress, int)": {"Returns": [], "Parameters": [["@B_java#net#InetAddress_E@", "InetAddress: The IP address"], ["int", "int: The port number"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the port parameter is outside the specified range of valid port values."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a socket address from an IP address and a port number. A valid port value is between 0 and 65535. A port number of zero will let the system pick up an ephemeral port in a bind operation. A null address will assign the", "history": "added in API level 1", "FullName": "public InetSocketAddress (InetAddress addr, int port)"}, "InetSocketAddress(int)": {"Returns": [], "Parameters": [["int", "int: The port number"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the port parameter is outside the specified range of valid port values."]], "SeeAlso": [], "Permissions": [], "Description": "Creates a socket address where the IP address is the wildcard address and the port number a specified value. A valid port value is between 0 and 65535. A port number of zero will let the system pick up an ephemeral port in a bind operation.", "history": "Added in API level 1", "FullName": "public InetSocketAddress (int port)"}, "getAddress()": {"Returns": [["@B_java#net#InetAddress_E@", "the InetAdress or null if it is unresolved."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the InetAddress.", "history": "Added in API level 1", "FullName": "public final InetAddress getAddress ()"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if the objects are the same; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the object to compare against."]], "Throws": [], "SeeAlso": ["@B_java#net#InetAddress#equals_E@"], "Permissions": [], "Description": "Compares this object against the specified object. The result is true if and only if the argument is not null and it represents the same address as this object. Two instances of InetSocketAddress represent the same address if both the InetAddresses (or hostnames if it is unresolved) and port numbers are equal. If both addresses are unresolved, then the hostname and the port number are compared. Note: Hostnames are case insensitive. e.g. \"FooBar\" and \"foobar\" are considered equal.", "history": "Added in API level 1", "FullName": "public final boolean equals (Object obj)"}, "isUnresolved()": {"Returns": [["boolean", "true if the hostname couldn't be resolved into an InetAddress."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Checks whether the address has been resolved or not.", "history": "Added in API level 1", "FullName": "public final boolean isUnresolved ()"}, "getHostString()": {"Returns": [["@B_java#lang#String_E@", "the hostname, or String representation of the address."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the hostname, or the String form of the address if it doesn't have a hostname (it was created using a literal). This has the benefit of", "history": "Added in API level 19", "FullName": "public final String getHostString ()"}, "createUnresolved(java.lang.String,int)": {"Returns": [["@B_java#net#InetSocketAddress_E@", "a InetSocketAddress representing the unresolved socket address"]], "Parameters": [["@B_java#lang#String_E@", "String: the Host name"], ["int", "int: The port number"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the port parameter is outside the range of valid port values, or if the hostname parameter is null."]], "SeeAlso": ["@B_java#net#InetSocketAddress#isUnresolved_E@"], "Permissions": [], "Description": "Creates an unresolved socket address from a hostname and a port number. No attempt will be made to resolve the hostname into an InetAddress. The address will be flagged as A valid port value is between 0 and 65535. A port number of zero will let the system pick up an ephemeral port in a bind operation.", "history": "Added in API level 1", "FullName": "public static InetSocketAddress createUnresolved (String host, int port)"}, "getHostName()": {"Returns": [["@B_java#lang#String_E@", "the hostname part of the address."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the hostname. Note: This method may trigger a name service reverse lookup if the address was created with a literal IP address.", "history": "Added in API level 1", "FullName": "public final String getHostName ()"}, "hashCode()": {"Returns": [["int", "a hash code value for this socket address."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hashcode for this socket address.", "history": "Added in API level 1", "FullName": "public final int hashCode ()"}}, "Inheritance": ["@B_java#net#SocketAddress_E@"], "ClassName": "java.net.InetSocketAddress", "ClassDesc": "This class implements an IP Socket Address (IP address + port number) It can also be a pair (hostname + port number), in which case an attempt will be made to resolve the hostname. If resolution fails then the address is said to be It provides an immutable object used by sockets for binding, connecting, or as returned values. The bind operations."}