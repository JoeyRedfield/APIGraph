{"Functions": {"showPrevious()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Manually shows the previous child.", "history": "Added in API level 1", "FullName": "public void showPrevious ()"}, "removeViewInLayout(android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: the view to remove from the group"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes a view during layout. This is useful if in your onLayout() method, you need to remove more views. @B_android#view#View#draw_E@, @B_android#view#View#onDraw_E@, @B_android#view#ViewGroup#dispatchDraw_E@ or any related method.", "history": "Added in API level 1", "FullName": "public void removeViewInLayout (View view)"}, "setOutAnimation(android.view.animation.Animation)": {"Returns": [], "Parameters": [["@B_android#view#animation#Animation_E@", "Animation: The animation started when a View exit the screen."]], "Throws": [], "SeeAlso": ["@B_android#widget#ViewAnimator#getOutAnimation_E@", "@B_android#widget#ViewAnimator#setOutAnimation_E@"], "Permissions": [], "Description": "Specifies the animation used to animate a View that exit the screen.", "history": "Added in API level 1", "FullName": "public void setOutAnimation (Animation outAnimation)"}, "setAnimateFirstView(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: True to animate the current View the first time it is displayed, false otherwise."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether the current View should be animated the first time the ViewAnimator is displayed.", "history": "Added in API level 1", "FullName": "public void setAnimateFirstView (boolean animate)"}, "setInAnimation(android.content.Context, int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The application's environment."], ["int", "int: The resource id of the animation."]], "Throws": [], "SeeAlso": ["@B_android#widget#ViewAnimator#getInAnimation_E@", "@B_android#widget#ViewAnimator#setInAnimation_E@"], "Permissions": [], "Description": "Specifies the animation used to animate a View that enters the screen.", "history": "added in API level 1", "FullName": "public void setInAnimation (Context context, int resourceID)"}, "showNext()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Manually shows the next child.", "history": "Added in API level 1", "FullName": "public void showNext ()"}, "getAnimateFirstView()": {"Returns": [["boolean", "true if the current View will be animated the first time it is displayed, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#widget#ViewAnimator#setAnimateFirstView_E@"], "Permissions": [], "Description": "Returns whether the current View should be animated the first time the ViewAnimator is displayed.", "history": "Added in API level 17", "FullName": "public boolean getAnimateFirstView ()"}, "setInAnimation(android.view.animation.Animation)": {"Returns": [], "Parameters": [["@B_android#view#animation#Animation_E@", "Animation: The animation started when a View enters the screen."]], "Throws": [], "SeeAlso": ["@B_android#widget#ViewAnimator#getInAnimation_E@", "@B_android#widget#ViewAnimator#setInAnimation_E@"], "Permissions": [], "Description": "Specifies the animation used to animate a View that enters the screen.", "history": "Added in API level 1", "FullName": "public void setInAnimation (Animation inAnimation)"}, "setInAnimation(android.content.Context,int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The application's environment."], ["int", "int: The resource id of the animation."]], "Throws": [], "SeeAlso": ["@B_android#widget#ViewAnimator#getInAnimation_E@", "@B_android#widget#ViewAnimator#setInAnimation_E@"], "Permissions": [], "Description": "Specifies the animation used to animate a View that enters the screen.", "history": "Added in API level 1", "FullName": "public void setInAnimation (Context context, int resourceID)"}, "ViewAnimator(android.content.Context,android.util.AttributeSet)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"], ["@B_android#util#AttributeSet_E@", "AttributeSet no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public ViewAnimator (Context context, AttributeSet attrs)"}, "ViewAnimator(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public ViewAnimator (Context context)"}, "getBaseline()": {"Returns": [["int", "the offset of the baseline within the widget's bounds or -1 if baseline alignment is not supported"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the offset of the widget's text baseline from the widget's top boundary. If this widget does not support baseline alignment, this method returns -1.", "history": "Added in API level 1", "FullName": "public int getBaseline ()"}, "getDisplayedChild()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the index of the currently displayed child view.", "history": "Added in API level 1", "FullName": "public int getDisplayedChild ()"}, "removeViews(int, int)": {"Returns": [], "Parameters": [["int", "int: the first position in the group of the range of views to remove"], ["int", "int: the number of views to remove"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes the specified range of views from the group. @B_android#view#View#draw_E@, @B_android#view#View#onDraw_E@, @B_android#view#ViewGroup#dispatchDraw_E@ or any related method.", "history": "added in API level 1", "FullName": "public void removeViews (int start, int count)"}, "removeViews(int,int)": {"Returns": [], "Parameters": [["int", "int: the first position in the group of the range of views to remove"], ["int", "int: the number of views to remove"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes the specified range of views from the group. @B_android#view#View#draw_E@, @B_android#view#View#onDraw_E@, @B_android#view#ViewGroup#dispatchDraw_E@ or any related method.", "history": "Added in API level 1", "FullName": "public void removeViews (int start, int count)"}, "getCurrentView()": {"Returns": [["@B_android#view#View_E@", "The View currently displayed."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#widget#ViewAnimator#getDisplayedChild_E@"], "Permissions": [], "Description": "Returns the View corresponding to the currently displayed child.", "history": "Added in API level 1", "FullName": "public View getCurrentView ()"}, "addView(android.view.View,int,android.view.ViewGroup.LayoutParams)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: the child view to add"], ["int", "int: the position at which to add the child or -1 to add last"], ["@B_android#view#ViewGroup#LayoutParams_E@", "ViewGroup.LayoutParams: the layout parameters to set on the child"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds a child view with the specified layout parameters. @B_android#view#View#draw_E@, @B_android#view#View#onDraw_E@, @B_android#view#ViewGroup#dispatchDraw_E@ or any related method.", "history": "Added in API level 1", "FullName": "public void addView (View child, int index, ViewGroup.LayoutParams params)"}, "getInAnimation()": {"Returns": [["@B_android#view#animation#Animation_E@", "An Animation or null if none is set."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#widget#ViewAnimator#setInAnimation_E@"], "Permissions": [], "Description": "Returns the current animation used to animate a View that enters the screen.", "history": "Added in API level 1", "FullName": "public Animation getInAnimation ()"}, "setDisplayedChild(int)": {"Returns": [], "Parameters": [["int", "int: the index of the child view to display"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets which child view will be displayed.", "history": "Added in API level 1", "FullName": "public void setDisplayedChild (int whichChild)"}, "removeAllViews()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Call this method to remove all child views from the ViewGroup. @B_android#view#View#draw_E@, @B_android#view#View#onDraw_E@, @B_android#view#ViewGroup#dispatchDraw_E@ or any related method.", "history": "Added in API level 1", "FullName": "public void removeAllViews ()"}, "setOutAnimation(android.content.Context,int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The application's environment."], ["int", "int: The resource id of the animation."]], "Throws": [], "SeeAlso": ["@B_android#widget#ViewAnimator#getOutAnimation_E@", "@B_android#widget#ViewAnimator#setOutAnimation_E@"], "Permissions": [], "Description": "Specifies the animation used to animate a View that exit the screen.", "history": "Added in API level 1", "FullName": "public void setOutAnimation (Context context, int resourceID)"}, "removeViewAt(int)": {"Returns": [], "Parameters": [["int", "int: the position in the group of the view to remove"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes the view at the specified position in the group. @B_android#view#View#draw_E@, @B_android#view#View#onDraw_E@, @B_android#view#ViewGroup#dispatchDraw_E@ or any related method.", "history": "Added in API level 1", "FullName": "public void removeViewAt (int index)"}, "removeView(android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "@B_android#view#View#draw_E@, @B_android#view#View#onDraw_E@, @B_android#view#ViewGroup#dispatchDraw_E@ or any related method.", "history": "Added in API level 1", "FullName": "public void removeView (View view)"}, "getOutAnimation()": {"Returns": [["@B_android#view#animation#Animation_E@", "An Animation or null if none is set."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#widget#ViewAnimator#setOutAnimation_E@"], "Permissions": [], "Description": "Returns the current animation used to animate a View that exits the screen.", "history": "Added in API level 1", "FullName": "public Animation getOutAnimation ()"}, "setOutAnimation(android.content.Context, int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The application's environment."], ["int", "int: The resource id of the animation."]], "Throws": [], "SeeAlso": ["@B_android#widget#ViewAnimator#getOutAnimation_E@", "@B_android#widget#ViewAnimator#setOutAnimation_E@"], "Permissions": [], "Description": "Specifies the animation used to animate a View that exit the screen.", "history": "added in API level 1", "FullName": "public void setOutAnimation (Context context, int resourceID)"}, "removeViewsInLayout(int, int)": {"Returns": [], "Parameters": [["int", "int: the index of the first view to remove from the group"], ["int", "int: the number of views to remove from the group"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes a range of views during layout. This is useful if in your onLayout() method, you need to remove more views. @B_android#view#View#draw_E@, @B_android#view#View#onDraw_E@, @B_android#view#ViewGroup#dispatchDraw_E@ or any related method.", "history": "added in API level 1", "FullName": "public void removeViewsInLayout (int start, int count)"}, "getAccessibilityClassName()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the class name of this object to be used for accessibility purposes. Subclasses should only override this if they are implementing something that should be seen as a completely new class of view when used by accessibility, unrelated to the class it is deriving from. This is used to fill in @B_android#view#accessibility#AccessibilityNodeInfo#setClassName_E@.", "history": "Added in API level 23", "FullName": "public CharSequence getAccessibilityClassName ()"}, "removeViewsInLayout(int,int)": {"Returns": [], "Parameters": [["int", "int: the index of the first view to remove from the group"], ["int", "int: the number of views to remove from the group"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes a range of views during layout. This is useful if in your onLayout() method, you need to remove more views. @B_android#view#View#draw_E@, @B_android#view#View#onDraw_E@, @B_android#view#ViewGroup#dispatchDraw_E@ or any related method.", "history": "Added in API level 1", "FullName": "public void removeViewsInLayout (int start, int count)"}}, "Inheritance": ["@B_android#view#View_E@", "@B_android#view#ViewGroup_E@", "@B_android#widget#FrameLayout_E@"], "ClassName": "android.widget.ViewAnimator", "ClassDesc": "Base class for a @B_android#widget#FrameLayout_E@ container that will perform animations when switching between its views."}