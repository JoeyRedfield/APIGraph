{"Functions": {"setTransition(android.transition.Scene,android.transition.Scene,android.transition.Transition)": {"Returns": [], "Parameters": [["@B_android#transition#Scene_E@", "Scene: The scene being exited when the given transition will be run"], ["@B_android#transition#Scene_E@", "Scene: The scene being entered when the given transition will be run"], ["@B_android#transition#Transition_E@", "Transition: The transition that will play when the given scene is entered. A value of null will result in the default behavior of using the default transition instead."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets a specific transition to occur when the given pair of scenes is exited/entered.", "history": "Added in API level 19", "FullName": "public void setTransition (Scene fromScene, Scene toScene, Transition transition)"}, "TransitionManager()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 19", "FullName": "public TransitionManager ()"}, "beginDelayedTransition(android.view.ViewGroup,android.transition.Transition)": {"Returns": [], "Parameters": [["@B_android#view#ViewGroup_E@", "ViewGroup: The root of the View hierarchy to run the transition on."], ["@B_android#transition#Transition_E@", "Transition: The transition to use for this change. A value of null causes the TransitionManager to use the default transition."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Convenience method to animate to a new scene defined by all changes within the given scene root between calling this method and the next rendering frame. Calling this method causes TransitionManager to capture current values in the scene root and then post a request to run a transition on the next frame. At that time, the new values in the scene root will be captured and changes will be animated. There is no need to create a Scene; it is implied by changes which take place between calling this method and the next frame when the transition begins. Calling this method several times before the next frame (for example, if unrelated code also wants to make dynamic changes and run a transition on the same scene root), only the first call will trigger capturing values and exiting the current scene. Subsequent calls to the method with the same scene root during the same frame will be ignored. Passing in null for the transition parameter will cause the TransitionManager to use its default transition.", "history": "Added in API level 19", "FullName": "public static void beginDelayedTransition (ViewGroup sceneRoot, Transition transition)"}, "go(android.transition.Scene)": {"Returns": [], "Parameters": [["@B_android#transition#Scene_E@", "Scene: The Scene to change to"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Convenience method to simply change to the given scene using the default transition for TransitionManager.", "history": "Added in API level 19", "FullName": "public static void go (Scene scene)"}, "endTransitions(android.view.ViewGroup)": {"Returns": [], "Parameters": [["@B_android#view#ViewGroup_E@", "ViewGroup: The root of the View hierarchy to end transitions on."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Ends all pending and ongoing transitions on the specified scene root.", "history": "Added in API level 23", "FullName": "public static void endTransitions (ViewGroup sceneRoot)"}, "transitionTo(android.transition.Scene)": {"Returns": [], "Parameters": [["@B_android#transition#Scene_E@", "Scene: The Scene to change to"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Change to the given scene, using the appropriate transition for this particular scene change (as specified to the TransitionManager, or the default if no such transition exists).", "history": "Added in API level 19", "FullName": "public void transitionTo (Scene scene)"}, "beginDelayedTransition(android.view.ViewGroup)": {"Returns": [], "Parameters": [["@B_android#view#ViewGroup_E@", "ViewGroup: The root of the View hierarchy to run the transition on."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Convenience method to animate, using the default transition, to a new scene defined by all changes within the given scene root between calling this method and the next rendering frame. Equivalent to calling @B_android#transition#TransitionManager#beginDelayedTransition_E@ with a value of null for the transition parameter.", "history": "Added in API level 19", "FullName": "public static void beginDelayedTransition (ViewGroup sceneRoot)"}, "setTransition(android.transition.Scene,android.transition.Transition)": {"Returns": [], "Parameters": [["@B_android#transition#Scene_E@", "Scene: The scene which, when applied, will cause the given transition to run."], ["@B_android#transition#Transition_E@", "Transition: The transition that will play when the given scene is entered. A value of null will result in the default behavior of using the default transition instead."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets a specific transition to occur when the given scene is entered.", "history": "Added in API level 19", "FullName": "public void setTransition (Scene scene, Transition transition)"}, "go(android.transition.Scene,android.transition.Transition)": {"Returns": [], "Parameters": [["@B_android#transition#Scene_E@", "Scene: The Scene to change to"], ["@B_android#transition#Transition_E@", "Transition: The transition to use for this scene change. A value of null causes the scene change to happen with no transition."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Convenience method to simply change to the given scene using the given transition. Passing in null for the transition parameter will result in the scene changing without any transition running, and is equivalent to calling @B_android#transition#Scene#exit_E@ on the scene root's current scene, followed by @B_android#transition#Scene#enter_E@ on the scene specified by the scene parameter.", "history": "Added in API level 19", "FullName": "public static void go (Scene scene, Transition transition)"}}, "Inheritance": [], "ClassName": "android.transition.TransitionManager", "ClassDesc": "This class manages the set of transitions that fire when there is a change of @B_android#transition#Scene_E@. To use the manager, add scenes along with transition objects with calls to @B_android#transition#TransitionManager#setTransition_E@ or @B_android#transition#TransitionManager#setTransition_E@. Setting specific transitions for scene changes is not required; by default, a Scene change will use @B_android#transition#AutoTransition_E@ to do something reasonable for most situations. Specifying other transitions for particular scene changes is only necessary if the application wants different transition behavior in these situations. TransitionManagers can be declared in XML resource files inside the res/transition directory. TransitionManager resources consist of the transitionManagertag name, containing one or more transition tags, each of which describe the relationship of that transition to the from/to scene information in that tag. For example, here is a resource file that declares several scene transitions: For each of the fromScene and toScene attributes, there is a reference to a standard XML layout file. This is equivalent to creating a scene from a layout in code by calling @B_android#transition#Scene#getSceneForLayout_E@. For the transition attribute, there is a reference to a resource file in the res/transition directory which describes that transition. Information on XML resource descriptions for transitions can be found for @B_android#R#styleable#Transition_E@, @B_android#R#styleable#TransitionSet_E@, @B_android#R#styleable#TransitionTarget_E@, @B_android#R#styleable#Fade_E@, and @B_android#R#styleable#TransitionManager_E@."}