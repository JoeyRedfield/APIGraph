{"Functions": {"PlaybackState.Builder(android.media.session.PlaybackState)": {"Returns": [], "Parameters": [["@B_android#media#session#PlaybackState_E@", "PlaybackState: The state to use for initializing the builder."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a builder with the same initial values as those in the from state.", "history": "Added in API level 21", "FullName": "public PlaybackState.Builder (PlaybackState from)"}, "setState(int, long, float)": {"Returns": [["@B_android#media#session#PlaybackState#Builder_E@", "this"]], "Parameters": [["int", "int: The current state of playback."], ["long", "long: The position in the current item in ms."], ["float", "float: The current speed of playback as a multiple of normal playback."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the current state of playback. The position must be in ms and indicates the current playback position within the item. If the position is unknown use @B_android#media#session#PlaybackState#PLAYBACK_POSITION_UNKNOWN_E@. The update time will be set to the current @B_android#os#SystemClock#elapsedRealtime_E@. The speed is a multiple of normal playback and should be 0 when paused and negative when rewinding. Normal playback speed is 1.0. The state must be one of the following: @B_android#media#session#PlaybackState#STATE_NONE_E@ @B_android#media#session#PlaybackState#STATE_STOPPED_E@ @B_android#media#session#PlaybackState#STATE_PLAYING_E@ @B_android#media#session#PlaybackState#STATE_PAUSED_E@ @B_android#media#session#PlaybackState#STATE_FAST_FORWARDING_E@ @B_android#media#session#PlaybackState#STATE_REWINDING_E@ @B_android#media#session#PlaybackState#STATE_BUFFERING_E@ @B_android#media#session#PlaybackState#STATE_ERROR_E@ @B_android#media#session#PlaybackState#STATE_CONNECTING_E@ @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_PREVIOUS_E@ @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_NEXT_E@ @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_QUEUE_ITEM_E@", "history": "added in API level 21", "FullName": "public PlaybackState.Builder setState (int state, long position, float playbackSpeed)"}, "setBufferedPosition(long)": {"Returns": [["@B_android#media#session#PlaybackState#Builder_E@", "this"]], "Parameters": [["long", "long: The position in ms that playback is buffered to."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the current buffered position in ms. This is the farthest playback point that can be reached from the current position using only buffered content.", "history": "Added in API level 21", "FullName": "public PlaybackState.Builder setBufferedPosition (long bufferedPosition)"}, "setErrorMessage(java.lang.CharSequence)": {"Returns": [["@B_android#media#session#PlaybackState#Builder_E@", "this"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: The error message for display to the user."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a user readable error message. This should be set when the state is @B_android#media#session#PlaybackState#STATE_ERROR_E@.", "history": "Added in API level 21", "FullName": "public PlaybackState.Builder setErrorMessage (CharSequence error)"}, "addCustomAction(java.lang.String,java.lang.String,int)": {"Returns": [["@B_android#media#session#PlaybackState#Builder_E@", "this"]], "Parameters": [["@B_java#lang#String_E@", "String: An identifier for this action. It can be sent back to the @B_android#media#session#MediaSession_E@ through @B_android#media#session#MediaController#TransportControls#sendCustomAction_E@."], ["@B_java#lang#String_E@", "String: The display name for the action. If text is shown with the action or used for accessibility, this is what should be used."], ["int", "int: The resource action of the icon that should be displayed for the action. The resource should be in the package of the @B_android#media#session#MediaSession_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Add a custom action to the playback state. Actions can be used to expose additional functionality to @B_android#media#session#MediaController_E@ beyond what is offered by the standard transport controls. e.g. start a radio station based on the current item or skip ahead by 30 seconds.", "history": "Added in API level 21", "FullName": "public PlaybackState.Builder addCustomAction (String action, String name, int icon)"}, "setActiveQueueItemId(long)": {"Returns": [["@B_android#media#session#PlaybackState#Builder_E@", "this"]], "Parameters": [["long", "long: The id of the active item."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the active item in the play queue by specifying its id. The default value is @B_android#media#session#MediaSession#QueueItem#UNKNOWN_ID_E@", "history": "Added in API level 21", "FullName": "public PlaybackState.Builder setActiveQueueItemId (long id)"}, "setActions(long)": {"Returns": [["@B_android#media#session#PlaybackState#Builder_E@", "this"]], "Parameters": [["long", "long: The set of actions allowed. Value is either 0 or a combination of @B_android#media#session#PlaybackState#ACTION_STOP_E@, @B_android#media#session#PlaybackState#ACTION_PAUSE_E@, @B_android#media#session#PlaybackState#ACTION_PLAY_E@, @B_android#media#session#PlaybackState#ACTION_REWIND_E@, @B_android#media#session#PlaybackState#ACTION_SKIP_TO_PREVIOUS_E@, @B_android#media#session#PlaybackState#ACTION_SKIP_TO_NEXT_E@, @B_android#media#session#PlaybackState#ACTION_FAST_FORWARD_E@, @B_android#media#session#PlaybackState#ACTION_SET_RATING_E@, @B_android#media#session#PlaybackState#ACTION_SEEK_TO_E@, @B_android#media#session#PlaybackState#ACTION_PLAY_PAUSE_E@, @B_android#media#session#PlaybackState#ACTION_PLAY_FROM_MEDIA_ID_E@, @B_android#media#session#PlaybackState#ACTION_PLAY_FROM_SEARCH_E@, @B_android#media#session#PlaybackState#ACTION_SKIP_TO_QUEUE_ITEM_E@, @B_android#media#session#PlaybackState#ACTION_PLAY_FROM_URI_E@, @B_android#media#session#PlaybackState#ACTION_PREPARE_E@, @B_android#media#session#PlaybackState#ACTION_PREPARE_FROM_MEDIA_ID_E@, @B_android#media#session#PlaybackState#ACTION_PREPARE_FROM_SEARCH_E@, and @B_android#media#session#PlaybackState#ACTION_PREPARE_FROM_URI_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the current actions available on this session. This should use a bitmask of possible actions. @B_android#media#session#PlaybackState#ACTION_SKIP_TO_PREVIOUS_E@ @B_android#media#session#PlaybackState#ACTION_REWIND_E@ @B_android#media#session#PlaybackState#ACTION_PLAY_E@ @B_android#media#session#PlaybackState#ACTION_PAUSE_E@ @B_android#media#session#PlaybackState#ACTION_STOP_E@ @B_android#media#session#PlaybackState#ACTION_FAST_FORWARD_E@ @B_android#media#session#PlaybackState#ACTION_SKIP_TO_NEXT_E@ @B_android#media#session#PlaybackState#ACTION_SEEK_TO_E@ @B_android#media#session#PlaybackState#ACTION_SET_RATING_E@ @B_android#media#session#PlaybackState#ACTION_PLAY_PAUSE_E@ @B_android#media#session#PlaybackState#ACTION_PLAY_FROM_MEDIA_ID_E@ @B_android#media#session#PlaybackState#ACTION_PLAY_FROM_SEARCH_E@ @B_android#media#session#PlaybackState#ACTION_SKIP_TO_QUEUE_ITEM_E@ @B_android#media#session#PlaybackState#ACTION_PLAY_FROM_URI_E@ @B_android#media#session#PlaybackState#ACTION_PREPARE_E@ @B_android#media#session#PlaybackState#ACTION_PREPARE_FROM_MEDIA_ID_E@ @B_android#media#session#PlaybackState#ACTION_PREPARE_FROM_SEARCH_E@ @B_android#media#session#PlaybackState#ACTION_PREPARE_FROM_URI_E@", "history": "Added in API level 21", "FullName": "public PlaybackState.Builder setActions (long actions)"}, "setState(int,long,float)": {"Returns": [["@B_android#media#session#PlaybackState#Builder_E@", "this"]], "Parameters": [["int", "int: The current state of playback. Value is @B_android#media#session#PlaybackState#STATE_NONE_E@, @B_android#media#session#PlaybackState#STATE_STOPPED_E@, @B_android#media#session#PlaybackState#STATE_PAUSED_E@, @B_android#media#session#PlaybackState#STATE_PLAYING_E@, @B_android#media#session#PlaybackState#STATE_FAST_FORWARDING_E@, @B_android#media#session#PlaybackState#STATE_REWINDING_E@, @B_android#media#session#PlaybackState#STATE_BUFFERING_E@, @B_android#media#session#PlaybackState#STATE_ERROR_E@, @B_android#media#session#PlaybackState#STATE_CONNECTING_E@, @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_PREVIOUS_E@, @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_NEXT_E@, or @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_QUEUE_ITEM_E@"], ["long", "long: The position in the current item in ms."], ["float", "float: The current speed of playback as a multiple of normal playback."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the current state of playback. The position must be in ms and indicates the current playback position within the item. If the position is unknown use @B_android#media#session#PlaybackState#PLAYBACK_POSITION_UNKNOWN_E@. The update time will be set to the current @B_android#os#SystemClock#elapsedRealtime_E@. The speed is a multiple of normal playback and should be 0 when paused and negative when rewinding. Normal playback speed is 1.0. The state must be one of the following: @B_android#media#session#PlaybackState#STATE_NONE_E@ @B_android#media#session#PlaybackState#STATE_STOPPED_E@ @B_android#media#session#PlaybackState#STATE_PLAYING_E@ @B_android#media#session#PlaybackState#STATE_PAUSED_E@ @B_android#media#session#PlaybackState#STATE_FAST_FORWARDING_E@ @B_android#media#session#PlaybackState#STATE_REWINDING_E@ @B_android#media#session#PlaybackState#STATE_BUFFERING_E@ @B_android#media#session#PlaybackState#STATE_ERROR_E@ @B_android#media#session#PlaybackState#STATE_CONNECTING_E@ @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_PREVIOUS_E@ @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_NEXT_E@ @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_QUEUE_ITEM_E@", "history": "Added in API level 21", "FullName": "public PlaybackState.Builder setState (int state, long position, float playbackSpeed)"}, "setState(int, long, float, long)": {"Returns": [["@B_android#media#session#PlaybackState#Builder_E@", "this"]], "Parameters": [["int", "int: The current state of playback."], ["long", "long: The position in the current item in ms."], ["float", "float: The current speed of playback as a multiple of normal playback."], ["long", "long: The time in the @B_android#os#SystemClock#elapsedRealtime_E@ timebase that the position was updated at."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the current state of playback. The position must be in ms and indicates the current playback position within the item. If the position is unknown use @B_android#media#session#PlaybackState#PLAYBACK_POSITION_UNKNOWN_E@. When not using an unknown position the time at which the position was updated must be provided. It is okay to use @B_android#os#SystemClock#elapsedRealtime_E@ if the current position was just retrieved. The speed is a multiple of normal playback and should be 0 when paused and negative when rewinding. Normal playback speed is 1.0. The state must be one of the following: @B_android#media#session#PlaybackState#STATE_NONE_E@ @B_android#media#session#PlaybackState#STATE_STOPPED_E@ @B_android#media#session#PlaybackState#STATE_PLAYING_E@ @B_android#media#session#PlaybackState#STATE_PAUSED_E@ @B_android#media#session#PlaybackState#STATE_FAST_FORWARDING_E@ @B_android#media#session#PlaybackState#STATE_REWINDING_E@ @B_android#media#session#PlaybackState#STATE_BUFFERING_E@ @B_android#media#session#PlaybackState#STATE_ERROR_E@ @B_android#media#session#PlaybackState#STATE_CONNECTING_E@ @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_PREVIOUS_E@ @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_NEXT_E@ @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_QUEUE_ITEM_E@", "history": "added in API level 21", "FullName": "public PlaybackState.Builder setState (int state, long position, float playbackSpeed, long updateTime)"}, "setExtras(android.os.Bundle)": {"Returns": [["@B_android#media#session#PlaybackState#Builder_E@", "this"]], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: The extras to include."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set any custom extras to be included with the playback state.", "history": "Added in API level 22", "FullName": "public PlaybackState.Builder setExtras (Bundle extras)"}, "setState(int,long,float,long)": {"Returns": [["@B_android#media#session#PlaybackState#Builder_E@", "this"]], "Parameters": [["int", "int: The current state of playback. Value is @B_android#media#session#PlaybackState#STATE_NONE_E@, @B_android#media#session#PlaybackState#STATE_STOPPED_E@, @B_android#media#session#PlaybackState#STATE_PAUSED_E@, @B_android#media#session#PlaybackState#STATE_PLAYING_E@, @B_android#media#session#PlaybackState#STATE_FAST_FORWARDING_E@, @B_android#media#session#PlaybackState#STATE_REWINDING_E@, @B_android#media#session#PlaybackState#STATE_BUFFERING_E@, @B_android#media#session#PlaybackState#STATE_ERROR_E@, @B_android#media#session#PlaybackState#STATE_CONNECTING_E@, @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_PREVIOUS_E@, @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_NEXT_E@, or @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_QUEUE_ITEM_E@"], ["long", "long: The position in the current item in ms."], ["float", "float: The current speed of playback as a multiple of normal playback."], ["long", "long: The time in the @B_android#os#SystemClock#elapsedRealtime_E@ timebase that the position was updated at."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the current state of playback. The position must be in ms and indicates the current playback position within the item. If the position is unknown use @B_android#media#session#PlaybackState#PLAYBACK_POSITION_UNKNOWN_E@. When not using an unknown position the time at which the position was updated must be provided. It is okay to use @B_android#os#SystemClock#elapsedRealtime_E@ if the current position was just retrieved. The speed is a multiple of normal playback and should be 0 when paused and negative when rewinding. Normal playback speed is 1.0. The state must be one of the following: @B_android#media#session#PlaybackState#STATE_NONE_E@ @B_android#media#session#PlaybackState#STATE_STOPPED_E@ @B_android#media#session#PlaybackState#STATE_PLAYING_E@ @B_android#media#session#PlaybackState#STATE_PAUSED_E@ @B_android#media#session#PlaybackState#STATE_FAST_FORWARDING_E@ @B_android#media#session#PlaybackState#STATE_REWINDING_E@ @B_android#media#session#PlaybackState#STATE_BUFFERING_E@ @B_android#media#session#PlaybackState#STATE_ERROR_E@ @B_android#media#session#PlaybackState#STATE_CONNECTING_E@ @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_PREVIOUS_E@ @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_NEXT_E@ @B_android#media#session#PlaybackState#STATE_SKIPPING_TO_QUEUE_ITEM_E@", "history": "Added in API level 21", "FullName": "public PlaybackState.Builder setState (int state, long position, float playbackSpeed, long updateTime)"}, "build()": {"Returns": [["@B_android#media#session#PlaybackState_E@", "A new state instance."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Build and return the @B_android#media#session#PlaybackState_E@ instance with these values.", "history": "Added in API level 21", "FullName": "public PlaybackState build ()"}, "addCustomAction(android.media.session.PlaybackState.CustomAction)": {"Returns": [["@B_android#media#session#PlaybackState#Builder_E@", "this"]], "Parameters": [["@B_android#media#session#PlaybackState#CustomAction_E@", "PlaybackState.CustomAction: The custom action to add to the @B_android#media#session#PlaybackState_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Add a custom action to the playback state. Actions can be used to expose additional functionality to @B_android#media#session#MediaController_E@ beyond what is offered by the standard transport controls. An example of an action would be to start a radio station based on the current item or to skip ahead by 30 seconds.", "history": "Added in API level 21", "FullName": "public PlaybackState.Builder addCustomAction (PlaybackState.CustomAction customAction)"}, "PlaybackState.Builder()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an initially empty state builder.", "history": "Added in API level 21", "FullName": "public PlaybackState.Builder ()"}}, "Inheritance": [], "ClassName": "android.media.session.PlaybackState.Builder", "ClassDesc": "Builder for @B_android#media#session#PlaybackState_E@ objects."}