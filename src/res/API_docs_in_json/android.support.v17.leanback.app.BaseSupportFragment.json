{"Functions": {"onEntranceTransitionPrepare()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Callback when entrance transition is prepared. This is when fragment should stop user input and animations.", "history": "added in version 26.0.0-beta1", "FullName": "void onEntranceTransitionPrepare ()"}, "runEntranceTransition(java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Run entrance transition. Subclass may use TransitionManager to perform go(Scene) or beginDelayedTransition(). App should not override the default implementation of browse and details fragment.", "history": "added in version 26.0.0-beta1", "FullName": "void runEntranceTransition (Object entranceTransition)"}, "onEntranceTransitionEnd()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Callback when entrance transition is ended.", "history": "added in version 26.0.0-beta1", "FullName": "void onEntranceTransitionEnd ()"}, "onCreate(android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: If the fragment is being re-created from a previous saved state, this is the state."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called to do initial creation of a fragment. This is called after @B_android#support#v4#app#Fragment#onAttach_E@ and before @B_android#support#v4#app#Fragment#onCreateView_E@. Note that this can be called while the fragment's activity is still in the process of being created. As such, you can not rely on things like the activity's content view hierarchy being initialized at this point. If you want to do work once the activity itself is created, see @B_android#support#v4#app#Fragment#onActivityCreated_E@. Any restored child fragments will be created before the base Fragment.onCreate method returns.", "history": "added in version 22.0.0", "FullName": "void onCreate (Bundle savedInstanceState)"}, "prepareEntranceTransition()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enables entrance transition. Entrance transition is the standard slide-in transition that shows rows of data in browse screen and details screen. The method is ignored before LOLLIPOP (API21). This method must be called in or before onCreate(). Typically entrance transition should be enabled when savedInstance is null so that fragment restored from instanceState does not run an extra entrance transition. When the entrance transition is enabled, the fragment will make headers and content hidden initially. When data of rows are ready, app must call @B_android#support#v17#leanback#app#BaseSupportFragment#startEntranceTransition_E@ to kick off the transition, otherwise the rows will be invisible forever. It is similar to android:windowsEnterTransition and can be considered a late-executed android:windowsEnterTransition controlled by app. There are two reasons that app needs it: Workaround the problem that activity transition is not available between launcher and app. Browse activity must programmatically start the slide-in transition. Separates DetailsOverviewRow transition from other rows transition. So that the DetailsOverviewRow transition can be executed earlier without waiting for all rows to be loaded. Transition object is returned by createEntranceTransition(). Typically the app does not need override the default transition that browse and details provides.", "history": "added in version 26.0.0-beta1", "FullName": "void prepareEntranceTransition ()"}, "getProgressBarManager()": {"Returns": [["@B_android#support#v17#leanback#app#ProgressBarManager_E@", "The @B_android#support#v17#leanback#app#ProgressBarManager_E@."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#support#v17#leanback#app#ProgressBarManager_E@.", "history": "added in version 26.0.0-beta1", "FullName": "ProgressBarManager getProgressBarManager ()"}, "startEntranceTransition()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "When fragment finishes loading data, it should call startEntranceTransition() to execute the entrance transition. startEntranceTransition() will start transition only if both two conditions are satisfied: prepareEntranceTransition() was called. has not executed entrance transition yet. If startEntranceTransition() is called before onViewCreated(), it will be pending and executed when view is created.", "history": "added in version 26.0.0-beta1", "FullName": "void startEntranceTransition ()"}, "createEntranceTransition()": {"Returns": [["@B_java#lang#Object_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create entrance transition. Subclass can override to load transition from resource or construct manually. Typically app does not need to override the default transition that browse and details provides.", "history": "added in version 26.0.0-beta1", "FullName": "Object createEntranceTransition ()"}, "onEntranceTransitionStart()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Callback when entrance transition is started. This is when fragment should stop processing layout.", "history": "added in version 26.0.0-beta1", "FullName": "void onEntranceTransitionStart ()"}}, "Inheritance": ["java.lang.Object", "@B_android#support#v4#app#Fragment_E@", "@B_android#support#v17#leanback#app#BrandedSupportFragment_E@"], "ClassName": "android.support.v17.leanback.app.BaseSupportFragment", "ClassDesc": "Base class for leanback Fragments. This class is not intended to be subclassed by apps."}