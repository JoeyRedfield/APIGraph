{"Functions": {"writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 21", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getNextEvent(android.app.usage.UsageEvents.Event)": {"Returns": [["boolean", "true if an event was available, false if there are no more events."]], "Parameters": [["@B_android#app#usage#UsageEvents#Event_E@", "UsageEvents.Event: The @B_android#app#usage#UsageEvents#Event_E@ object that will receive the next event data."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the next @B_android#app#usage#UsageEvents#Event_E@ from the collection and put the resulting data into eventOut.", "history": "Added in API level 21", "FullName": "public boolean getNextEvent (UsageEvents.Event eventOut)"}, "finalize()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#lang#Throwable_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Invoked when the garbage collector has detected that this instance is no longer reachable. The default implementation does nothing, but this method can be overridden to free resources. Note that objects that override finalize are significantly more expensive than objects that don't. Finalizers may be run a long time after the object is no longer reachable, depending on memory pressure, so it's a bad idea to rely on them for cleanup. Note also that finalizers are run on a single VM-wide finalizer thread, so doing blocking work in a finalizer is a bad idea. A finalizer is usually only necessary for a class that has a native peer and needs to call a native method to destroy that peer. Even then, it's better to provide an explicit close method (and implement @B_java#io#Closeable_E@), and insist that callers manually dispose of instances. This works well for something like files, but less well for something like a BigInteger where typical calling code would have to deal with lots of temporaries. Unfortunately, code that creates lots of temporaries is the worst kind of code from the point of view of the single finalizer thread. If you @B_java#lang#ref#ReferenceQueue_E@ and having your own thread process that queue. Unlike constructors, finalizers are not automatically chained. You are responsible for calling super.finalize() yourself. Uncaught exceptions thrown by finalizers are ignored and do not terminate the finalizer thread. See", "history": "Added in API level 21", "FullName": "protected void finalize ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 21", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "hasNextEvent()": {"Returns": [["boolean", "true if there are more events, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether or not there are more events to read using @B_android#app#usage#UsageEvents#getNextEvent_E@.", "history": "Added in API level 21", "FullName": "public boolean hasNextEvent ()"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 21", "FullName": "public int describeContents ()"}}, "Inheritance": [], "ClassName": "android.app.usage.UsageEvents", "ClassDesc": "A result returned from @B_android#app#usage#UsageStatsManager#queryEvents_E@ from which to read @B_android#app#usage#UsageEvents#Event_E@ objects."}