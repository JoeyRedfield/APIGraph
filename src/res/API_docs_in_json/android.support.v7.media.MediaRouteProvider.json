{"Functions": {"getDescriptor()": {"Returns": [["@B_android#support#v7#media#MediaRouteProviderDescriptor_E@", "The media route provider descriptor, or null if none."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v7#media#MediaRouteProvider#Callback#onDescriptorChanged_E@"], "Permissions": [], "Description": "Gets the provider's descriptor. The descriptor describes the state of the media route provider and the routes that it publishes. Watch for changes to the descriptor by registering a @B_android#support#v7#media#MediaRouteProvider#Callback_E@ with @B_android#support#v7#media#MediaRouteProvider#setCallback_E@.", "history": "added in version 22.0.0", "FullName": "MediaRouteProviderDescriptor getDescriptor ()"}, "onCreateRouteController(java.lang.String)": {"Returns": [["@B_android#support#v7#media#MediaRouteProvider#RouteController_E@", "The route controller. Returns null if there is no such route or if the route cannot be controlled using the route controller interface."]], "Parameters": [["@B_java#lang#String_E@", "String: The unique id of the route."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called by the media router to obtain a route controller for a particular route. The media router will invoke the @B_android#support#v7#media#MediaRouteProvider#RouteController#onRelease_E@ method of the route controller when it is no longer needed to allow it to free its resources.", "history": "added in version 22.0.0", "FullName": "MediaRouteProvider.RouteController onCreateRouteController (String routeId)"}, "getDiscoveryRequest()": {"Returns": [["@B_android#support#v7#media#MediaRouteDiscoveryRequest_E@", "The current discovery request, or null if no discovery is needed at this time."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v7#media#MediaRouteProvider#onDiscoveryRequestChanged_E@"], "Permissions": [], "Description": "Gets the current discovery request which informs the provider about the kinds of routes to discover and whether to perform active scanning.", "history": "added in version 22.0.0", "FullName": "MediaRouteDiscoveryRequest getDiscoveryRequest ()"}, "getMetadata()": {"Returns": [["@B_android#support#v7#media#MediaRouteProvider#ProviderMetadata_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets some metadata about the provider's implementation.", "history": "added in version 22.0.0", "FullName": "MediaRouteProvider.ProviderMetadata getMetadata ()"}, "getHandler()": {"Returns": [["@B_android#os#Handler_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the provider's handler which is associated with the main thread.", "history": "added in version 22.0.0", "FullName": "Handler getHandler ()"}, "getContext()": {"Returns": [["@B_android#content#Context_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the context of the media route provider.", "history": "added in version 22.0.0", "FullName": "Context getContext ()"}, "MediaRouteProvider(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: The context."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a media route provider.", "history": "added in version 22.0.0", "FullName": "MediaRouteProvider (Context context)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v7.media.MediaRouteProvider", "ClassDesc": "Media route providers are used to publish additional media routes for use within an application. Media route providers may also be declared as a service to publish additional media routes to all applications in the system. The purpose of a media route provider is to discover media routes that satisfy the criteria specified by the current @B_android#support#v7#media#MediaRouteDiscoveryRequest_E@ and publish a @B_android#support#v7#media#MediaRouteProviderDescriptor_E@ with information about each route by calling @B_android#support#v7#media#MediaRouteProvider#setDescriptor_E@ to notify the currently registered @B_android#support#v7#media#MediaRouteProvider#Callback_E@. The provider should watch for changes to the discovery request by implementing @B_android#support#v7#media#MediaRouteProvider#onDiscoveryRequestChanged_E@ and updating the set of routes that it is attempting to discover. It should also handle route control requests such as volume changes or @B_android#support#v7#media#MediaControlIntent_E@ by implementing @B_android#support#v7#media#MediaRouteProvider#onCreateRouteController_E@ to return a @B_android#support#v7#media#MediaRouteProvider#RouteController_E@ for a particular route. A media route provider may be used privately within the scope of a single application process by calling @B_android#support#v7#media#MediaRouter#addProvider_E@ to add it to the local @B_android#support#v7#media#MediaRouter_E@. A media route provider may also be made available globally to all applications by registering a @B_android#support#v7#media#MediaRouteProviderService_E@ in the provider's manifest. When the media route provider is registered as a service, all applications that use the media router API will be able to discover and used the provider's routes without having to install anything else. This object must only be accessed on the main thread."}