{"Functions": {"pause()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 11", "FullName": "public void pause ()"}, "RSSurfaceView(android.content.Context, android.util.AttributeSet)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 11", "FullName": "public RSSurfaceView (Context context, AttributeSet attrs)"}, "surfaceChanged(android.view.SurfaceHolder, int, int, int)": {"Returns": [], "Parameters": [["@B_android#view#SurfaceHolder_E@", "The SurfaceHolder whose surface has changed."], ["int", "The new PixelFormat of the surface."], ["int", "The new width of the surface."], ["int", "The new height of the surface."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This is called immediately after any structural changes (format or size) have been made to the surface. You should at this point update the imagery in the surface. This method is always called at least once, after @B_android#view#SurfaceHolder#Callback#surfaceCreated_E@.", "history": "Added in API level 11", "FullName": "public void surfaceChanged (SurfaceHolder holder, int format, int w, int h)"}, "RSSurfaceView(android.content.Context)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 11", "FullName": "public RSSurfaceView (Context context)"}, "surfaceCreated(android.view.SurfaceHolder)": {"Returns": [], "Parameters": [["@B_android#view#SurfaceHolder_E@", "The SurfaceHolder whose surface is being created."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This is called immediately after the surface is first created. Implementations of this should start up whatever rendering code they desire. Note that only one thread can ever draw into a @B_android#view#Surface_E@, so you should not draw into the Surface here if your normal rendering will be in another thread.", "history": "Added in API level 11", "FullName": "public void surfaceCreated (SurfaceHolder holder)"}, "setRenderScriptGL(android.renderscript.RenderScriptGL)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 11", "FullName": "public void setRenderScriptGL (RenderScriptGL rs)"}, "createRenderScriptGL(android.renderscript.RenderScriptGL.SurfaceConfig)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 11", "FullName": "public RenderScriptGL createRenderScriptGL (RenderScriptGL.SurfaceConfig sc)"}, "getRenderScriptGL()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 11", "FullName": "public RenderScriptGL getRenderScriptGL ()"}, "surfaceDestroyed(android.view.SurfaceHolder)": {"Returns": [], "Parameters": [["@B_android#view#SurfaceHolder_E@", "The SurfaceHolder whose surface is being destroyed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This is called immediately before a surface is being destroyed. After returning from this call, you should no longer try to access this surface. If you have a rendering thread that directly accesses the surface, you must ensure that thread is no longer touching the Surface before returning from this function.", "history": "Added in API level 11", "FullName": "public void surfaceDestroyed (SurfaceHolder holder)"}, "resume()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 11", "FullName": "public void resume ()"}, "destroyRenderScriptGL()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 11", "FullName": "public void destroyRenderScriptGL ()"}}, "Inheritance": ["@B_android#view#View_E@", "@B_android#view#SurfaceView_E@"], "ClassName": "android.renderscript.RSSurfaceView", "ClassDesc": "in API 16 The Surface View for a graphics renderscript (RenderScriptGL) to draw on."}