{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 1", "FullName": "public String toString ()"}, "getSubject()": {"Returns": [["@B_java#lang#String_E@", "subject or null"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the subject line from the parsed mailto URL. If no subject line was specified, then null is return", "history": "Added in API level 1", "FullName": "public String getSubject ()"}, "getTo()": {"Returns": [["@B_java#lang#String_E@", "comma delimited email addresses or null"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the To address line from the parsed mailto URL. This could be several email address that are comma-space delimited. If no To line was specified, then null is return", "history": "Added in API level 1", "FullName": "public String getTo ()"}, "isMailTo(java.lang.String)": {"Returns": [["boolean", "true if the string is a mailto URL"]], "Parameters": [["@B_java#lang#String_E@", "String: string to be tested"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Test to see if the given string is a mailto URL", "history": "Added in API level 1", "FullName": "public static boolean isMailTo (String url)"}, "getBody()": {"Returns": [["@B_java#lang#String_E@", "body or null"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the body line from the parsed mailto URL. If no body line was specified, then null is return", "history": "Added in API level 1", "FullName": "public String getBody ()"}, "getCc()": {"Returns": [["@B_java#lang#String_E@", "comma delimited email addresses or null"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the CC address line from the parsed mailto URL. This could be several email address that are comma-space delimited. If no CC line was specified, then null is return", "history": "Added in API level 1", "FullName": "public String getCc ()"}, "parse(java.lang.String)": {"Returns": [["@B_android#net#MailTo_E@", "MailTo object"]], "Parameters": [["@B_java#lang#String_E@", "String: String containing a mailto URL"]], "Throws": [["@B_android#net#ParseException_E@", "if the scheme is not a mailto URL"]], "SeeAlso": [], "Permissions": [], "Description": "Parse and decode a mailto scheme string. This parser implements RFC 2368. The returned object can be queried for the parsed parameters.", "history": "Added in API level 1", "FullName": "public static MailTo parse (String url)"}, "getHeaders()": {"Returns": [["@B_java#util#Map_E@", "map containing all parsed values"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve all the parsed email headers from the mailto URL", "history": "Added in API level 1", "FullName": "public Map<String, String> getHeaders ()"}}, "Inheritance": [], "ClassName": "android.net.MailTo", "ClassDesc": "MailTo URL parser This class parses a mailto scheme URL and then can be queried for the parsed parameters. This implements RFC 2368."}