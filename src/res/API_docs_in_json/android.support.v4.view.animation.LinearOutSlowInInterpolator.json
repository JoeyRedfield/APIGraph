{"Functions": {"getInterpolation(float)": {"Returns": [["float", "The interpolation value. This value can be more than 1.0 for interpolators which overshoot their targets, or less than 0 for interpolators that undershoot their targets."]], "Parameters": [["float", "float: A value between 0 and 1.0 indicating our current point in the animation where 0 represents the start and 1.0 represents the end"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Maps a value representing the elapsed fraction of an animation to a value that represents the interpolated fraction. This interpolated value is then multiplied by the change in value of an animation to derive the animated value at the current elapsed animation time.", "history": "added in version 22.1.0", "FullName": "float getInterpolation (float input)"}, "LinearOutSlowInInterpolator()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.1.0", "FullName": "LinearOutSlowInInterpolator ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v4.view.animation.LinearOutSlowInInterpolator", "ClassDesc": "Interpolator corresponding to @B_android#R#interpolator#linear_out_slow_in_E@. Uses a lookup table for the Bezier curve from (0,0) to (1,1) with control points: P0 (0, 0) P1 (0, 0) P2 (0.2, 1.0) P3 (1.0, 1.0)"}