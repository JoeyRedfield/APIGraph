{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 28", "FullName": "public String toString ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Write to parcel", "history": "added in API level 28", "FullName": "public void writeToParcel (Parcel out, int flags)"}, "IpSecAlgorithm(java.lang.String, byte[], int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: name of the algorithm.This value must never be null."], ["byte[]", "byte: key padded to a multiple of 8 bits.This value must never be null."], ["int", "int: number of bits of output hash to use."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an IpSecAlgorithm of one of the supported types. Supported algorithm names are defined as constants in this class. This constructor only supports algorithms that use a truncation length. i.e. Authentication and Authenticated Encryption algorithms.", "history": "added in API level 28", "FullName": "public IpSecAlgorithm (String algorithm, byte[] key, int truncLenBits)"}, "getTruncationLengthBits()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the truncation length of this algorithm, in bits", "history": "Added in API level 28", "FullName": "public int getTruncationLengthBits ()"}, "getName()": {"Returns": [["@B_java#lang#String_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the algorithm name", "history": "Added in API level 28", "FullName": "public String getName ()"}, "IpSecAlgorithm(java.lang.String,byte[],int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: name of the algorithm. This value must never be null. Value is @B_android#net#IpSecAlgorithm#CRYPT_AES_CBC_E@, @B_android#net#IpSecAlgorithm#AUTH_HMAC_MD5_E@, @B_android#net#IpSecAlgorithm#AUTH_HMAC_SHA1_E@, @B_android#net#IpSecAlgorithm#AUTH_HMAC_SHA256_E@, @B_android#net#IpSecAlgorithm#AUTH_HMAC_SHA384_E@, @B_android#net#IpSecAlgorithm#AUTH_HMAC_SHA512_E@, or @B_android#net#IpSecAlgorithm#AUTH_CRYPT_AES_GCM_E@"], ["byte[]", "byte: key padded to a multiple of 8 bits. This value must never be null."], ["int", "int: number of bits of output hash to use."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an IpSecAlgorithm of one of the supported types. Supported algorithm names are defined as constants in this class. This constructor only supports algorithms that use a truncation length. i.e. Authentication and Authenticated Encryption algorithms.", "history": "Added in API level 28", "FullName": "public IpSecAlgorithm (String algorithm, byte[] key, int truncLenBits)"}, "getKey()": {"Returns": [["byte[]", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the key for this algorithm", "history": "Added in API level 28", "FullName": "public byte[] getKey ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Write to parcel", "history": "Added in API level 28", "FullName": "public void writeToParcel (Parcel out, int flags)"}, "IpSecAlgorithm(java.lang.String, byte[])": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: name of the algorithm.This value must never be null."], ["byte[]", "byte: key padded to a multiple of 8 bits. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an IpSecAlgorithm of one of the supported types. Supported algorithm names are defined as constants in this class. For algorithms that produce an integrity check value, the truncation length is a required parameter. See @B_android#net#IpSecAlgorithm#IpSecAlgorithm_E@", "history": "added in API level 28", "FullName": "public IpSecAlgorithm (String algorithm, byte[] key)"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 28", "FullName": "public int describeContents ()"}, "IpSecAlgorithm(java.lang.String,byte[])": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: name of the algorithm. This value must never be null. Value is @B_android#net#IpSecAlgorithm#CRYPT_AES_CBC_E@, @B_android#net#IpSecAlgorithm#AUTH_HMAC_MD5_E@, @B_android#net#IpSecAlgorithm#AUTH_HMAC_SHA1_E@, @B_android#net#IpSecAlgorithm#AUTH_HMAC_SHA256_E@, @B_android#net#IpSecAlgorithm#AUTH_HMAC_SHA384_E@, @B_android#net#IpSecAlgorithm#AUTH_HMAC_SHA512_E@, or @B_android#net#IpSecAlgorithm#AUTH_CRYPT_AES_GCM_E@"], ["byte[]", "byte: key padded to a multiple of 8 bits. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an IpSecAlgorithm of one of the supported types. Supported algorithm names are defined as constants in this class. For algorithms that produce an integrity check value, the truncation length is a required parameter. See @B_android#net#IpSecAlgorithm#IpSecAlgorithm_E@", "history": "Added in API level 28", "FullName": "public IpSecAlgorithm (String algorithm, byte[] key)"}}, "Inheritance": [], "ClassName": "android.net.IpSecAlgorithm", "ClassDesc": "This class represents a single algorithm that can be used by an @B_android#net#IpSecTransform_E@."}