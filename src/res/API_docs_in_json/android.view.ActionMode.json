{"Functions": {"setType(int)": {"Returns": [], "Parameters": [["int", "int: One of @B_android#view#ActionMode#TYPE_PRIMARY_E@ or @B_android#view#ActionMode#TYPE_FLOATING_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set a type for this action mode. This will affect how the system renders the action mode if it has to.", "history": "Added in API level 23", "FullName": "public void setType (int type)"}, "ActionMode()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 11", "FullName": "public ActionMode ()"}, "isTitleOptional()": {"Returns": [["boolean", "true if this action mode considers the title and subtitle fields as optional. Optional titles may not be displayed to the user."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 16", "FullName": "public boolean isTitleOptional ()"}, "setTag(java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: Tag to associate with this ActionMode"]], "Throws": [], "SeeAlso": ["@B_android#view#ActionMode#getTag_E@"], "Permissions": [], "Description": "Set a tag object associated with this ActionMode. Like the tag available to views, this allows applications to associate arbitrary data with an ActionMode for later reference.", "history": "Added in API level 14", "FullName": "public void setTag (Object tag)"}, "setCustomView(android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: Custom view to use in place of the title/subtitle."]], "Throws": [], "SeeAlso": ["@B_android#view#ActionMode#setTitle_E@", "@B_android#view#ActionMode#setSubtitle_E@"], "Permissions": [], "Description": "Set a custom view for this action mode. The custom view will take the place of the title and subtitle. Useful for things like search boxes.", "history": "Added in API level 11", "FullName": "public abstract void setCustomView (View view)"}, "getSubtitle()": {"Returns": [["@B_java#lang#CharSequence_E@", "Subtitle text"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current subtitle of this action mode.", "history": "Added in API level 11", "FullName": "public abstract CharSequence getSubtitle ()"}, "setSubtitle(java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: Subtitle string to set"]], "Throws": [], "SeeAlso": ["@B_android#view#ActionMode#setSubtitle_E@", "@B_android#view#ActionMode#setCustomView_E@"], "Permissions": [], "Description": "Set the subtitle of the action mode. This method will have no visible effect if a custom view has been set.", "history": "Added in API level 11", "FullName": "public abstract void setSubtitle (CharSequence subtitle)"}, "setTitleOptionalHint(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true if the title only presents optional information."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set whether or not the title/subtitle display for this action mode is optional. In many cases the supplied title for an action mode is merely meant to add context and is not strictly required for the action mode to be useful. If the title is optional, the system may choose to hide the title entirely rather than truncate it due to a lack of available space. Note that this is merely a hint; the underlying implementation may choose to ignore this setting under some circumstances.", "history": "Added in API level 16", "FullName": "public void setTitleOptionalHint (boolean titleOptional)"}, "getMenu()": {"Returns": [["@B_android#view#Menu_E@", "The action mode's menu."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the menu of actions that this action mode presents.", "history": "Added in API level 11", "FullName": "public abstract Menu getMenu ()"}, "getTitleOptionalHint()": {"Returns": [["boolean", "true if this action mode has been given a hint to consider the title/subtitle display to be optional."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#view#ActionMode#setTitleOptionalHint_E@", "@B_android#view#ActionMode#isTitleOptional_E@"], "Permissions": [], "Description": "", "history": "Added in API level 16", "FullName": "public boolean getTitleOptionalHint ()"}, "finish()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Finish and close this action mode. The action mode's @B_android#view#ActionMode#Callback_E@ will have its @B_android#view#ActionMode#Callback#onDestroyActionMode_E@ method called.", "history": "Added in API level 11", "FullName": "public abstract void finish ()"}, "setTitle(int)": {"Returns": [], "Parameters": [["int", "int: Resource ID of a string to set as the title"]], "Throws": [], "SeeAlso": ["@B_android#view#ActionMode#setTitle_E@", "@B_android#view#ActionMode#setCustomView_E@"], "Permissions": [], "Description": "Set the title of the action mode. This method will have no visible effect if a custom view has been set.", "history": "Added in API level 11", "FullName": "public abstract void setTitle (int resId)"}, "setSubtitle(int)": {"Returns": [], "Parameters": [["int", "int: Resource ID of a string to set as the subtitle"]], "Throws": [], "SeeAlso": ["@B_android#view#ActionMode#setSubtitle_E@", "@B_android#view#ActionMode#setCustomView_E@"], "Permissions": [], "Description": "Set the subtitle of the action mode. This method will have no visible effect if a custom view has been set.", "history": "Added in API level 11", "FullName": "public abstract void setSubtitle (int resId)"}, "invalidate()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Invalidate the action mode and refresh menu content. The mode's @B_android#view#ActionMode#Callback_E@ will have its @B_android#view#ActionMode#Callback#onPrepareActionMode_E@ method called. If it returns true the menu will be scanned for updated content and any relevant changes will be reflected to the user.", "history": "Added in API level 11", "FullName": "public abstract void invalidate ()"}, "getMenuInflater()": {"Returns": [["@B_android#view#MenuInflater_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_android#view#MenuInflater_E@ with the ActionMode's context.", "history": "Added in API level 11", "FullName": "public abstract MenuInflater getMenuInflater ()"}, "invalidateContentRect()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#view#ActionMode#Callback2#onGetContentRect_E@"], "Permissions": [], "Description": "Invalidate the content rect associated to this ActionMode. This only makes sense for action modes that support dynamic positioning on the screen, and provides a more efficient way to reposition it without invalidating the whole action mode.", "history": "Added in API level 23", "FullName": "public void invalidateContentRect ()"}, "hide(long)": {"Returns": [], "Parameters": [["long", "long: The number of milliseconds to hide for."]], "Throws": [], "SeeAlso": ["@B_android#view#ActionMode_E@"], "Permissions": [], "Description": "Hide the action mode view from obstructing the content below for a short duration. This only makes sense for action modes that support dynamic positioning on the screen. If this method is called again before the hide duration expires, the later hide call will cancel the former and then take effect. NOTE that there is an internal limit to how long the mode can be hidden for. It's typically about a few seconds.", "history": "Added in API level 23", "FullName": "public void hide (long duration)"}, "getTitle()": {"Returns": [["@B_java#lang#CharSequence_E@", "Title text"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current title of this action mode.", "history": "Added in API level 11", "FullName": "public abstract CharSequence getTitle ()"}, "getTag()": {"Returns": [["@B_java#lang#Object_E@", "Tag associated with this ActionMode"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#view#ActionMode#setTag_E@"], "Permissions": [], "Description": "Retrieve the tag object associated with this ActionMode. Like the tag available to views, this allows applications to associate arbitrary data with an ActionMode for later reference.", "history": "Added in API level 14", "FullName": "public Object getTag ()"}, "getType()": {"Returns": [["int", "One of @B_android#view#ActionMode#TYPE_PRIMARY_E@ or @B_android#view#ActionMode#TYPE_FLOATING_E@."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the type for this action mode.", "history": "Added in API level 23", "FullName": "public int getType ()"}, "onWindowFocusChanged(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: True if the window containing the view that started this action mode now has focus, false otherwise."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the window containing the view that started this action mode gains or loses focus.", "history": "Added in API level 23", "FullName": "public void onWindowFocusChanged (boolean hasWindowFocus)"}, "setTitle(java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: Title string to set"]], "Throws": [], "SeeAlso": ["@B_android#view#ActionMode#setTitle_E@", "@B_android#view#ActionMode#setCustomView_E@"], "Permissions": [], "Description": "Set the title of the action mode. This method will have no visible effect if a custom view has been set.", "history": "Added in API level 11", "FullName": "public abstract void setTitle (CharSequence title)"}, "getCustomView()": {"Returns": [["@B_android#view#View_E@", "The current custom view"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current custom view for this action mode.", "history": "Added in API level 11", "FullName": "public abstract View getCustomView ()"}}, "Inheritance": [], "ClassName": "android.view.ActionMode", "ClassDesc": "Represents a contextual mode of the user interface. Action modes can be used to provide alternative interaction modes and replace parts of the normal UI until finished. Examples of good action modes include text selection and contextual actions."}