{"Functions": {"remove()": {"Returns": [["@B_java#lang#ref#Reference_E@", "A reference object, blocking until one becomes available"]], "Parameters": [], "Throws": [["@B_java#lang#InterruptedException_E@", "If the wait is interrupted"]], "SeeAlso": [], "Permissions": [], "Description": "Removes the next reference object in this queue, blocking until one becomes available.", "history": "Added in API level 1", "FullName": "public Reference<? extends T> remove ()"}, "remove(long)": {"Returns": [["@B_java#lang#ref#Reference_E@", "A reference object, if one was available within the specified timeout period, otherwise null"]], "Parameters": [["long", "long: If positive, block for up to timeout milliseconds while waiting for a reference to be added to this queue. If zero, block indefinitely."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "If the value of the timeout argument is negative"], ["@B_java#lang#InterruptedException_E@", "If the timeout wait is interrupted"]], "SeeAlso": [], "Permissions": [], "Description": "Removes the next reference object in this queue, blocking until either one becomes available or the given timeout period expires. This method does not offer real-time guarantees: It schedules the timeout as if by invoking the @B_java#lang#Object#wait_E@ method.", "history": "Added in API level 1", "FullName": "public Reference<? extends T> remove (long timeout)"}, "poll()": {"Returns": [["@B_java#lang#ref#Reference_E@", "A reference object, if one was immediately available, otherwise null"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Polls this queue to see if a reference object is available. If one is available without further delay then it is removed from the queue and returned. Otherwise this method immediately returns", "history": "Added in API level 1", "FullName": "public Reference<? extends T> poll ()"}, "ReferenceQueue()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new reference-object queue.", "history": "Added in API level 1", "FullName": "public ReferenceQueue ()"}}, "Inheritance": [], "ClassName": "java.lang.ref.ReferenceQueue<T>", "ClassDesc": "Reference queues, to which registered reference objects are appended by the garbage collector after the appropriate reachability changes are detected."}