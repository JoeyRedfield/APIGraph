{"Functions": {"encode(byte[], int, int, int)": {"Returns": [["byte[]", "no returns description in source"]], "Parameters": [["byte[]", "byte: the data to encode"], ["int", "int: the position within the input array at which to start"], ["int", "int: the number of bytes of input to encode"], ["int", "int: controls certain features of the encoded output. Passing DEFAULT results in output that adheres to RFC 2045."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Base64-encode the given data and return a newly allocated byte[] with the result.", "history": "added in API level 8", "FullName": "public static byte[] encode (byte[] input, int offset, int len, int flags)"}, "encode(byte[], int)": {"Returns": [["byte[]", "no returns description in source"]], "Parameters": [["byte[]", "byte: the data to encode"], ["int", "int: controls certain features of the encoded output. Passing DEFAULT results in output that adheres to RFC 2045."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Base64-encode the given data and return a newly allocated byte[] with the result.", "history": "added in API level 8", "FullName": "public static byte[] encode (byte[] input, int flags)"}, "decode(java.lang.String,int)": {"Returns": [["byte[]", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: the input String to decode, which is converted to bytes using the default charset"], ["int", "int: controls certain features of the decoded output. Pass DEFAULT to decode standard Base64."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the input contains incorrect padding"]], "SeeAlso": [], "Permissions": [], "Description": "Decode the Base64-encoded data in input and return the data in a new byte array. The padding '=' characters at the end are considered optional, but if any are present, there must be the correct number of them.", "history": "Added in API level 8", "FullName": "public static byte[] decode (String str, int flags)"}, "encodeToString(byte[], int, int, int)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["byte[]", "byte: the data to encode"], ["int", "int: the position within the input array at which to start"], ["int", "int: the number of bytes of input to encode"], ["int", "int: controls certain features of the encoded output. Passing DEFAULT results in output that adheres to RFC 2045."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Base64-encode the given data and return a newly allocated String with the result.", "history": "added in API level 8", "FullName": "public static String encodeToString (byte[] input, int offset, int len, int flags)"}, "encodeToString(byte[], int)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["byte[]", "byte: the data to encode"], ["int", "int: controls certain features of the encoded output. Passing DEFAULT results in output that adheres to RFC 2045."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Base64-encode the given data and return a newly allocated String with the result.", "history": "added in API level 8", "FullName": "public static String encodeToString (byte[] input, int flags)"}, "decode(byte[],int)": {"Returns": [["byte[]", "no returns description in source"]], "Parameters": [["byte[]", "byte: the input array to decode"], ["int", "int: controls certain features of the decoded output. Pass DEFAULT to decode standard Base64."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the input contains incorrect padding"]], "SeeAlso": [], "Permissions": [], "Description": "Decode the Base64-encoded data in input and return the data in a new byte array. The padding '=' characters at the end are considered optional, but if any are present, there must be the correct number of them.", "history": "Added in API level 8", "FullName": "public static byte[] decode (byte[] input, int flags)"}, "encode(byte[],int)": {"Returns": [["byte[]", "no returns description in source"]], "Parameters": [["byte[]", "byte: the data to encode"], ["int", "int: controls certain features of the encoded output. Passing DEFAULT results in output that adheres to RFC 2045."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Base64-encode the given data and return a newly allocated byte[] with the result.", "history": "Added in API level 8", "FullName": "public static byte[] encode (byte[] input, int flags)"}, "encode(byte[],int,int,int)": {"Returns": [["byte[]", "no returns description in source"]], "Parameters": [["byte[]", "byte: the data to encode"], ["int", "int: the position within the input array at which to start"], ["int", "int: the number of bytes of input to encode"], ["int", "int: controls certain features of the encoded output. Passing DEFAULT results in output that adheres to RFC 2045."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Base64-encode the given data and return a newly allocated byte[] with the result.", "history": "Added in API level 8", "FullName": "public static byte[] encode (byte[] input, int offset, int len, int flags)"}, "encodeToString(byte[],int)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["byte[]", "byte: the data to encode"], ["int", "int: controls certain features of the encoded output. Passing DEFAULT results in output that adheres to RFC 2045."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Base64-encode the given data and return a newly allocated String with the result.", "history": "Added in API level 8", "FullName": "public static String encodeToString (byte[] input, int flags)"}, "decode(byte[], int)": {"Returns": [["byte[]", "no returns description in source"]], "Parameters": [["byte[]", "byte: the input array to decode"], ["int", "int: controls certain features of the decoded output. Pass DEFAULT to decode standard Base64."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the input contains incorrect padding"]], "SeeAlso": [], "Permissions": [], "Description": "Decode the Base64-encoded data in input and return the data in a new byte array. The padding '=' characters at the end are considered optional, but if any are present, there must be the correct number of them.", "history": "added in API level 8", "FullName": "public static byte[] decode (byte[] input, int flags)"}, "decode(byte[],int,int,int)": {"Returns": [["byte[]", "no returns description in source"]], "Parameters": [["byte[]", "byte: the data to decode"], ["int", "int: the position within the input array at which to start"], ["int", "int: the number of bytes of input to decode"], ["int", "int: controls certain features of the decoded output. Pass DEFAULT to decode standard Base64."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the input contains incorrect padding"]], "SeeAlso": [], "Permissions": [], "Description": "Decode the Base64-encoded data in input and return the data in a new byte array. The padding '=' characters at the end are considered optional, but if any are present, there must be the correct number of them.", "history": "Added in API level 8", "FullName": "public static byte[] decode (byte[] input, int offset, int len, int flags)"}, "decode(byte[], int, int, int)": {"Returns": [["byte[]", "no returns description in source"]], "Parameters": [["byte[]", "byte: the data to decode"], ["int", "int: the position within the input array at which to start"], ["int", "int: the number of bytes of input to decode"], ["int", "int: controls certain features of the decoded output. Pass DEFAULT to decode standard Base64."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the input contains incorrect padding"]], "SeeAlso": [], "Permissions": [], "Description": "Decode the Base64-encoded data in input and return the data in a new byte array. The padding '=' characters at the end are considered optional, but if any are present, there must be the correct number of them.", "history": "added in API level 8", "FullName": "public static byte[] decode (byte[] input, int offset, int len, int flags)"}, "encodeToString(byte[],int,int,int)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["byte[]", "byte: the data to encode"], ["int", "int: the position within the input array at which to start"], ["int", "int: the number of bytes of input to encode"], ["int", "int: controls certain features of the encoded output. Passing DEFAULT results in output that adheres to RFC 2045."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Base64-encode the given data and return a newly allocated String with the result.", "history": "Added in API level 8", "FullName": "public static String encodeToString (byte[] input, int offset, int len, int flags)"}, "decode(java.lang.String, int)": {"Returns": [["byte[]", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: the input String to decode, which is converted to bytes using the default charset"], ["int", "int: controls certain features of the decoded output. Pass DEFAULT to decode standard Base64."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the input contains incorrect padding"]], "SeeAlso": [], "Permissions": [], "Description": "Decode the Base64-encoded data in input and return the data in a new byte array. The padding '=' characters at the end are considered optional, but if any are present, there must be the correct number of them.", "history": "added in API level 8", "FullName": "public static byte[] decode (String str, int flags)"}}, "Inheritance": [], "ClassName": "android.util.Base64", "ClassDesc": "Utilities for encoding and decoding the Base64 representation of binary data. See RFCs"}