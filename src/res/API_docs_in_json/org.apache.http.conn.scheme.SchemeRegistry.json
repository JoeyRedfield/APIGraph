{"Functions": {"getScheme(java.lang.String)": {"Returns": [["", "the scheme, never null"]], "Parameters": [["@B_java#lang#String_E@", "the name of the scheme to look up (in lowercase)"]], "Throws": [["@B_java#lang#IllegalStateException_E@", "if the scheme with the given name is not registered"]], "SeeAlso": [], "Permissions": [], "Description": "Obtains a scheme by name.", "history": "Added in API level 1", "FullName": "public final synchronized Scheme getScheme (String name)"}, "register(org.apache.http.conn.scheme.Scheme)": {"Returns": [["", "the scheme previously registered with that name, or null if none was registered"]], "Parameters": [["@B_org#apache#http#conn#scheme#Scheme_E@", "the scheme to register"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Registers a scheme. The scheme can later be retrieved by its name using @B_org#apache#http#conn#scheme#SchemeRegistry#getScheme_E@ or @B_org#apache#http#conn#scheme#SchemeRegistry#get_E@.", "history": "Added in API level 1", "FullName": "public final synchronized Scheme register (Scheme sch)"}, "setItems(java.util.Map<java.lang.String, org.apache.http.conn.scheme.Scheme>)": {"Returns": [], "Parameters": [["@B_java#util#Map_E@", "protocol schemes"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Populates the internal collection of registered @B_org#apache#http#conn#scheme#Scheme_E@ with the content of the map passed as a parameter.", "history": "Added in API level 1", "FullName": "public synchronized void setItems (Map<String, Scheme> map)"}, "getScheme(org.apache.http.HttpHost)": {"Returns": [["", "the scheme for the given host, never null"]], "Parameters": [["@B_org#apache#http#HttpHost_E@", "the host for which to obtain the scheme"]], "Throws": [["@B_java#lang#IllegalStateException_E@", "if a scheme with the respective name is not registered"]], "SeeAlso": [], "Permissions": [], "Description": "Obtains the scheme for a host. Convenience method for getScheme(host.getSchemeName())", "history": "Added in API level 1", "FullName": "public final synchronized Scheme getScheme (HttpHost host)"}, "unregister(java.lang.String)": {"Returns": [["", "the unregistered scheme, or null if there was none"]], "Parameters": [["@B_java#lang#String_E@", "the name of the scheme to unregister (in lowercase)"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Unregisters a scheme.", "history": "Added in API level 1", "FullName": "public final synchronized Scheme unregister (String name)"}, "getSchemeNames()": {"Returns": [["", "List containing registered scheme names."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtains the names of the registered schemes in their default order.", "history": "Added in API level 1", "FullName": "public final synchronized List<String> getSchemeNames ()"}, "get(java.lang.String)": {"Returns": [["", "the scheme, or null if there is none by this name"]], "Parameters": [["@B_java#lang#String_E@", "the name of the scheme to look up (in lowercase)"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtains a scheme by name, if registered.", "history": "Added in API level 1", "FullName": "public final synchronized Scheme get (String name)"}, "SchemeRegistry()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new, empty scheme registry.", "history": "Added in API level 1", "FullName": "public SchemeRegistry ()"}}, "Inheritance": [], "ClassName": "org.apache.http.conn.scheme.SchemeRegistry", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit A set of supported protocol @B_org#apache#http#conn#scheme#Scheme_E@. Schemes are identified by lowercase names."}