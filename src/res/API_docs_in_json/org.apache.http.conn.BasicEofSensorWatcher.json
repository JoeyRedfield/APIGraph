{"Functions": {"streamClosed(java.io.InputStream)": {"Returns": [["", "true if wrapped should be closed, false if it should be left alone"]], "Parameters": [["@B_java#io#InputStream_E@", "the underlying stream which has not reached EOF"]], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Indicates that the @B_org#apache#http#conn#EofSensorInputStream_E@ is closed. This method will be called only if EOF was @B_org#apache#http#conn#EofSensorWatcher#eofDetected_E@ is called.", "history": "Added in API level 1", "FullName": "public boolean streamClosed (InputStream wrapped)"}, "eofDetected(java.io.InputStream)": {"Returns": [["", "true if wrapped should be closed, false if it should be left alone"]], "Parameters": [["@B_java#io#InputStream_E@", "the underlying stream which has reached EOF"]], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Indicates that EOF is detected.", "history": "Added in API level 1", "FullName": "public boolean eofDetected (InputStream wrapped)"}, "streamAbort(java.io.InputStream)": {"Returns": [["", "true if wrapped should be closed, false if it should be left alone"]], "Parameters": [["@B_java#io#InputStream_E@", "the underlying stream which has not reached EOF"]], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Indicates that the @B_org#apache#http#conn#EofSensorInputStream_E@ is aborted. This method will be called only if EOF was @B_org#apache#http#conn#EofSensorWatcher#eofDetected_E@ is called. This method will also be invoked when an input operation causes an IOException to be thrown to make sure the input stream gets shut down.", "history": "Added in API level 1", "FullName": "public boolean streamAbort (InputStream wrapped)"}, "BasicEofSensorWatcher(org.apache.http.conn.ManagedClientConnection, boolean)": {"Returns": [], "Parameters": [["@B_org#apache#http#conn#ManagedClientConnection_E@", "the connection to auto-release"], ["boolean", "whether the connection should be re-used"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new watcher for auto-releasing a connection.", "history": "Added in API level 1", "FullName": "public BasicEofSensorWatcher (ManagedClientConnection conn, boolean reuse)"}}, "Inheritance": [], "ClassName": "org.apache.http.conn.BasicEofSensorWatcher", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Basic implementation of @B_org#apache#http#conn#EofSensorWatcher_E@. The underlying connection is released on close or EOF."}