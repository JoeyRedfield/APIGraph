{"Functions": {"engineGetKeyManagers()": {"Returns": [["@B_javax#net#ssl#KeyManager_E@", "the key managers"]], "Parameters": [], "Throws": [["@B_java#lang#IllegalStateException_E@", "if the KeyManagerFactorySpi is not initialized"]], "SeeAlso": [], "Permissions": [], "Description": "Returns one key manager for each type of key material.", "history": "Added in API level 1", "FullName": "protected abstract KeyManager[] engineGetKeyManagers ()"}, "KeyManagerFactorySpi()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public KeyManagerFactorySpi ()"}, "engineInit(java.security.KeyStore,char[])": {"Returns": [], "Parameters": [["@B_java#security#KeyStore_E@", "KeyStore: the key store or null"], ["char[]", "char: the password for recovering keys"]], "Throws": [["@B_java#security#KeyStoreException_E@", "if this operation fails"], ["@B_java#security#NoSuchAlgorithmException_E@", "if the specified algorithm is not available from the specified provider."], ["@B_java#security#UnrecoverableKeyException_E@", "if the key cannot be recovered"]], "SeeAlso": ["@B_javax#net#ssl#KeyManagerFactory#init_E@"], "Permissions": [], "Description": "Initializes this factory with a source of key material.", "history": "Added in API level 1", "FullName": "protected abstract void engineInit (KeyStore ks, char[] password)"}, "engineInit(java.security.KeyStore, char[])": {"Returns": [], "Parameters": [["@B_java#security#KeyStore_E@", "KeyStore: the key store or null"], ["char[]", "char: the password for recovering keys"]], "Throws": [["@B_java#security#KeyStoreException_E@", "if this operation fails"], ["@B_java#security#NoSuchAlgorithmException_E@", "if the specified algorithm is not available from the specified provider."], ["@B_java#security#UnrecoverableKeyException_E@", "if the key cannot be recovered"]], "SeeAlso": ["@B_javax#net#ssl#KeyManagerFactory#init_E@"], "Permissions": [], "Description": "Initializes this factory with a source of key material.", "history": "added in API level 1", "FullName": "protected abstract void engineInit (KeyStore ks, char[] password)"}, "engineInit(javax.net.ssl.ManagerFactoryParameters)": {"Returns": [], "Parameters": [["@B_javax#net#ssl#ManagerFactoryParameters_E@", "ManagerFactoryParameters: an implementation of a provider-specific parameter specification"]], "Throws": [["@B_java#security#InvalidAlgorithmParameterException_E@", "if there is problem with the parameters"]], "SeeAlso": ["@B_javax#net#ssl#KeyManagerFactory#init_E@"], "Permissions": [], "Description": "Initializes this factory with a source of key material. In some cases, initialization parameters other than a keystore and password may be needed by a provider. Users of that particular provider are expected to pass an implementation of the appropriate ManagerFactoryParameters as defined by the provider. The provider can then call the specified methods in the ManagerFactoryParameters implementation to obtain the needed information.", "history": "Added in API level 1", "FullName": "protected abstract void engineInit (ManagerFactoryParameters spec)"}}, "Inheritance": [], "ClassName": "javax.net.ssl.KeyManagerFactorySpi", "ClassDesc": "This class defines the KeyManagerFactory class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a particular key manager factory."}