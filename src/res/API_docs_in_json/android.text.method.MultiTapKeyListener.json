{"Functions": {"onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)": {"Returns": [], "Parameters": [["@B_android#text#Spannable_E@", "Spannable no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method is called to notify you that the specified object has been detached from the specified range of the text.", "history": "Added in API level 1", "FullName": "public void onSpanRemoved (Spannable s, Object what, int start, int end)"}, "MultiTapKeyListener(android.text.method.TextKeyListener.Capitalize,boolean)": {"Returns": [], "Parameters": [["@B_android#text#method#TextKeyListener#Capitalize_E@", "TextKeyListener.Capitalize no parameter comment"], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public MultiTapKeyListener (TextKeyListener.Capitalize cap, boolean autotext)"}, "getInputType()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 3", "FullName": "public int getInputType ()"}, "getInstance(boolean,android.text.method.TextKeyListener.Capitalize)": {"Returns": [["@B_android#text#method#MultiTapKeyListener_E@", "no returns description in source"]], "Parameters": [["boolean", "boolean no parameter comment"], ["@B_android#text#method#TextKeyListener#Capitalize_E@", "TextKeyListener.Capitalize no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a new or existing instance with the specified capitalization and correction properties.", "history": "Added in API level 1", "FullName": "public static MultiTapKeyListener getInstance (boolean autotext, TextKeyListener.Capitalize cap)"}, "onSpanAdded(android.text.Spannable,java.lang.Object,int,int)": {"Returns": [], "Parameters": [["@B_android#text#Spannable_E@", "Spannable no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method is called to notify you that the specified object has been attached to the specified range of the text.", "history": "Added in API level 1", "FullName": "public void onSpanAdded (Spannable s, Object what, int start, int end)"}, "onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)": {"Returns": [], "Parameters": [["@B_android#text#Spannable_E@", "Spannable no parameter comment"], ["@B_java#lang#Object_E@", "Object no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method is called to notify you that the specified object has been relocated from the range ostart\u2026oend to the new range nstart\u2026nend of the text.", "history": "Added in API level 1", "FullName": "public void onSpanChanged (Spannable buf, Object what, int s, int e, int start, int stop)"}, "onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#view#View_E@", "View no parameter comment"], ["@B_android#text#Editable_E@", "Editable no parameter comment"], ["int", "int no parameter comment"], ["@B_android#view#KeyEvent_E@", "KeyEvent no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Handles presses of the meta keys.", "history": "Added in API level 1", "FullName": "public boolean onKeyDown (View view, Editable content, int keyCode, KeyEvent event)"}}, "Inheritance": ["@B_android#text#method#MetaKeyKeyListener_E@", "@B_android#text#method#BaseKeyListener_E@"], "ClassName": "android.text.method.MultiTapKeyListener", "ClassDesc": "This is the standard key listener for alphabetic input on 12-key keyboards. You should generally not need to instantiate this yourself; TextKeyListener will do it for you. As for all implementations of @B_android#text#method#KeyListener_E@, this class is only concerned with hardware keyboards. Software input methods have no obligation to trigger the methods in this class."}