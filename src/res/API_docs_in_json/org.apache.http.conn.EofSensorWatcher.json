{"Functions": {"streamClosed(java.io.InputStream)": {"Returns": [["", "true if wrapped should be closed, false if it should be left alone"]], "Parameters": [["@B_java#io#InputStream_E@", "the underlying stream which has not reached EOF"]], "Throws": [["@B_java#io#IOException_E@", "in case of an IO problem, for example if the watcher itself closes the underlying stream. The caller will leave the wrapped stream alone, as if false was returned."]], "SeeAlso": [], "Permissions": [], "Description": "Indicates that the @B_org#apache#http#conn#EofSensorInputStream_E@ is closed. This method will be called only if EOF was @B_org#apache#http#conn#EofSensorWatcher#eofDetected_E@ is called.", "history": "Added in API level 1", "FullName": "public abstract boolean streamClosed (InputStream wrapped)"}, "eofDetected(java.io.InputStream)": {"Returns": [["", "true if wrapped should be closed, false if it should be left alone"]], "Parameters": [["@B_java#io#InputStream_E@", "the underlying stream which has reached EOF"]], "Throws": [["@B_java#io#IOException_E@", "in case of an IO problem, for example if the watcher itself closes the underlying stream. The caller will leave the wrapped stream alone, as if false was returned."]], "SeeAlso": [], "Permissions": [], "Description": "Indicates that EOF is detected.", "history": "Added in API level 1", "FullName": "public abstract boolean eofDetected (InputStream wrapped)"}, "streamAbort(java.io.InputStream)": {"Returns": [["", "true if wrapped should be closed, false if it should be left alone"]], "Parameters": [["@B_java#io#InputStream_E@", "the underlying stream which has not reached EOF"]], "Throws": [["@B_java#io#IOException_E@", "in case of an IO problem, for example if the watcher itself closes the underlying stream. The caller will leave the wrapped stream alone, as if false was returned."]], "SeeAlso": [], "Permissions": [], "Description": "Indicates that the @B_org#apache#http#conn#EofSensorInputStream_E@ is aborted. This method will be called only if EOF was @B_org#apache#http#conn#EofSensorWatcher#eofDetected_E@ is called. This method will also be invoked when an input operation causes an IOException to be thrown to make sure the input stream gets shut down.", "history": "Added in API level 1", "FullName": "public abstract boolean streamAbort (InputStream wrapped)"}}, "Inheritance": [], "ClassName": "org.apache.http.conn.EofSensorWatcher", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit A watcher for @B_org#apache#http#conn#EofSensorInputStream_E@. Each stream will notify it's watcher at most once."}