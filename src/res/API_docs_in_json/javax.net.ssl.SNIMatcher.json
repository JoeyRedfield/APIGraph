{"Functions": {"SNIMatcher(int)": {"Returns": [], "Parameters": [["int", "int: the type of the server name that this matcher performs on"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if type is not in the range of 0 to 255, inclusive."]], "SeeAlso": [], "Permissions": [], "Description": "Creates an SNIMatcher using the specified server name type.", "history": "Added in API level 24", "FullName": "protected SNIMatcher (int type)"}, "matches(javax.net.ssl.SNIServerName)": {"Returns": [["boolean", "true if, and only if, the matcher matches the given serverName"]], "Parameters": [["@B_javax#net#ssl#SNIServerName_E@", "SNIServerName: the @B_javax#net#ssl#SNIServerName_E@ instance on which this matcher performs match operations"]], "Throws": [["@B_java#lang#NullPointerException_E@", "if serverName is null"], ["@B_java#lang#IllegalArgumentException_E@", "if serverName is not of the given server name type of this matcher"]], "SeeAlso": ["@B_javax#net#ssl#SNIServerName_E@"], "Permissions": [], "Description": "Attempts to match the given @B_javax#net#ssl#SNIServerName_E@.", "history": "Added in API level 24", "FullName": "public abstract boolean matches (SNIServerName serverName)"}, "getType()": {"Returns": [["int", "the server name type of this SNIMatcher object."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_javax#net#ssl#SNIServerName_E@"], "Permissions": [], "Description": "Returns the server name type of this SNIMatcher object.", "history": "Added in API level 24", "FullName": "public final int getType ()"}}, "Inheritance": [], "ClassName": "javax.net.ssl.SNIMatcher", "ClassDesc": "Instances of this class represent a matcher that performs match operations on an @B_javax#net#ssl#SNIServerName_E@ instance. Servers can use Server Name Indication (SNI) information to decide if specific @B_javax#net#ssl#SSLSocket_E@ or @B_javax#net#ssl#SSLEngine_E@ instances should accept a connection. For example, when multiple \"virtual\" or \"name-based\" servers are hosted on a single underlying network address, the server application can use SNI information to determine whether this server is the exact server that the client wants to access. Instances of this class can be used by a server to verify the acceptable server names of a particular type, such as host names. SNIMatcher objects are immutable. Subclasses should not provide methods that can change the state of an instance once it has been created."}