{"Functions": {"insertData(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.fitness.data.DataSet)": {"Returns": [["", "a pending result containing the status of the request"]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "an existing GoogleApiClient. It does not need to be connected at the time of this call, but the insertion will be delayed until the connection is complete."], ["@B_com#google#android#gms#fitness#data#DataSet_E@", "the data we\u2019re adding"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Inserts data collected from a data source directly into the user\u2019s Google Fit history, on behalf of the current application. Useful when the data source isn't compatible with Google Fit or for importing historical data. If the data source can be exposed via a @B_com#google#android#gms#fitness#service#FitnessSensorService_E@, or some other method compatible with Google Fit, it's preferable to create a subscription via the Recording API instead of inserting data directly.", "history": "", "FullName": "public abstract PendingResult<Status> insertData (GoogleApiClient client, DataSet dataSet)"}, "readData(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.fitness.request.DataReadRequest)": {"Returns": [["", "a pending result containing the requested data. Includes a data set for each requested data source."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "an existing GoogleApiClient. It does not need to be connected at the time of this call, but the read operation will be delayed until the connection is complete."], ["@B_com#google#android#gms#fitness#request#DataReadRequest_E@", "a built request specifying the data sources we\u2019re interested in reading and the time range of the returned data."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads data from the user\u2019s Google Fit history. Values can be read in detailed or in aggregate formats. Aggregate data is presented in buckets, while detailed data is returned as a single data set.", "history": "", "FullName": "public abstract PendingResult<DataReadResult> readData (GoogleApiClient client, DataReadRequest request)"}, "readDailyTotal(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.fitness.data.DataType)": {"Returns": [["", "a pending result containing the requested data. The pending result will contain a single DataSet. If no data has been collected for the requested data type today, the DataSet will be empty."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reads the current daily total for the given dataType. The daily total will be computed from midnight of the current day on the device's current timezone. The method can be used as follows: This is a simplified version of @B_com#google#android#gms#fitness#HistoryApi#readData_E@. When the requested data type is @B_com#google#android#gms#fitness#data#DataType#TYPE_STEP_COUNT_DELTA_E@, authentication is not required to call this method, making it specially suited for use by Watchface and Widget activities that don't have the ability to show an authentication panel to the user. This method is equivalent to:", "history": "", "FullName": "public abstract PendingResult<DailyTotalResult> readDailyTotal (GoogleApiClient client, DataType dataType)"}, "deleteData(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.fitness.request.DataDeleteRequest)": {"Returns": [["", "a pending result containing status of the request"]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "an existing GoogleApiClient. It does not need to be connected at the time of this call, but the deletion will be delayed until the connection is complete."], ["@B_com#google#android#gms#fitness#request#DataDeleteRequest_E@", "specifying the data source/type and time range to delete"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Deletes data from the user\u2019s Google Fit history. This request will fail if the requesting app tries to delete data that it hasn't inserted. The user can delete data from any application (or hardware sensors) by visiting the Google Fit dashboard.", "history": "", "FullName": "public abstract PendingResult<Status> deleteData (GoogleApiClient client, DataDeleteRequest request)"}}, "Inheritance": [], "ClassName": "com.google.android.gms.fitness.HistoryApi", "ClassDesc": "API for inserting, deleting, and reading data in Google Fit. The @B_com#google#android#gms#fitness#HistoryApi#readData_E@ method should be used whenever historical data is needed. It can be combined with a subscription in the @B_com#google#android#gms#fitness#RecordingApi_E@ to collect data in the background and query it later for displaying. The @B_com#google#android#gms#fitness#HistoryApi#insertData_E@ method can be used for batch insertion of data that was collected outside of Google Fit. It can be useful when data is entered directly by the user or imported from a device that isn't supported by the platform. The History API should be accessed via the @B_com#google#android#gms#fitness#Fitness_E@ entry point. Example:"}