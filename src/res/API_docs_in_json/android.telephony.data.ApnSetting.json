{"Functions": {"getEntryName()": {"Returns": [["@B_java#lang#String_E@", "the entry name for the APN"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the human-readable name that describes the APN.", "history": "Added in API level 28", "FullName": "public String getEntryName ()"}, "getApnName()": {"Returns": [["@B_java#lang#String_E@", "APN name"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the name of the APN.", "history": "Added in API level 28", "FullName": "public String getApnName ()"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 28", "FullName": "public int describeContents ()"}, "getNetworkTypeBitmask()": {"Returns": [["int", "a bitmask describing the Radio Technologies(Network Types)"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a bitmask describing the Radio Technologies(Network Types) which this APN may use. NetworkType bitmask is calculated from NETWORK_TYPE defined in @B_android#telephony#TelephonyManager_E@. Examples of Network Types include @B_android#telephony#TelephonyManager#NETWORK_TYPE_UNKNOWN_E@, @B_android#telephony#TelephonyManager#NETWORK_TYPE_GPRS_E@, @B_android#telephony#TelephonyManager#NETWORK_TYPE_EDGE_E@.", "history": "Added in API level 28", "FullName": "public int getNetworkTypeBitmask ()"}, "getMmsc()": {"Returns": [["@B_android#net#Uri_E@", "MMSC Uri."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the MMSC Uri of the APN.", "history": "Added in API level 28", "FullName": "public Uri getMmsc ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written.This value must never be null."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 28", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getUser()": {"Returns": [["@B_java#lang#String_E@", "APN username"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the APN username of the APN.", "history": "Added in API level 28", "FullName": "public String getUser ()"}, "getMmsProxyAddress()": {"Returns": [["@B_java#net#InetAddress_E@", "the MMS proxy address or null if DNS isn\u2019t available to resolve a hostname"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "use @B_android#telephony#data#ApnSetting#getMmsProxyAddressAsString_E@ instead. Gets the MMS proxy address configured for the APN. The MMS proxy address might be an IP address or hostname. This method returns null if system networking (typically DNS) isn\u2019t available to resolve a hostname value\u2014values set as IP addresses don\u2019t have this restriction. This is a known problem and will be addressed in a future release.", "history": "Added in API level 28 Deprecated in API level 29", "FullName": "public InetAddress getMmsProxyAddress ()"}, "getMmsProxyPort()": {"Returns": [["int", "MMS proxy port"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the MMS proxy port of the APN.", "history": "Added in API level 28", "FullName": "public int getMmsProxyPort ()"}, "getId()": {"Returns": [["int", "the unique database id"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the unique database id for this entry.", "history": "Added in API level 28", "FullName": "public int getId ()"}, "getOperatorNumeric()": {"Returns": [["@B_java#lang#String_E@", "the numeric operator ID"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the numeric operator ID for the APN. Numeric operator ID is defined as @B_android#provider#Telephony#Carriers#MCC_E@ + @B_android#provider#Telephony#Carriers#MNC_E@.", "history": "Added in API level 28", "FullName": "public String getOperatorNumeric ()"}, "getRoamingProtocol()": {"Returns": [["int", "the roaming protocol Value is @B_android#telephony#data#ApnSetting#PROTOCOL_IP_E@, @B_android#telephony#data#ApnSetting#PROTOCOL_IPV6_E@, @B_android#telephony#data#ApnSetting#PROTOCOL_IPV4V6_E@, @B_android#telephony#data#ApnSetting#PROTOCOL_PPP_E@, @B_android#telephony#data#ApnSetting#PROTOCOL_NON_IP_E@, or @B_android#telephony#data#ApnSetting#PROTOCOL_UNSTRUCTURED_E@"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#telephony#data#ApnSetting#Builder#setRoamingProtocol_E@"], "Permissions": [], "Description": "Returns the protocol to use to connect to this APN while the device is roaming. Roaming protocol is one of the PDP_type values in TS 27.007 section 10.1.1.", "history": "Added in API level 28", "FullName": "public int getRoamingProtocol ()"}, "getProtocol()": {"Returns": [["int", "the protocol Value is @B_android#telephony#data#ApnSetting#PROTOCOL_IP_E@, @B_android#telephony#data#ApnSetting#PROTOCOL_IPV6_E@, @B_android#telephony#data#ApnSetting#PROTOCOL_IPV4V6_E@, @B_android#telephony#data#ApnSetting#PROTOCOL_PPP_E@, @B_android#telephony#data#ApnSetting#PROTOCOL_NON_IP_E@, or @B_android#telephony#data#ApnSetting#PROTOCOL_UNSTRUCTURED_E@"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#telephony#data#ApnSetting#Builder#setProtocol_E@"], "Permissions": [], "Description": "Returns the protocol to use to connect to this APN. Protocol is one of the PDP_type values in TS 27.007 section 10.1.1.", "history": "Added in API level 28", "FullName": "public int getProtocol ()"}, "getAuthType()": {"Returns": [["int", "authentication type Value is @B_android#telephony#data#ApnSetting#AUTH_TYPE_NONE_E@, @B_android#telephony#data#ApnSetting#AUTH_TYPE_PAP_E@, @B_android#telephony#data#ApnSetting#AUTH_TYPE_CHAP_E@, or @B_android#telephony#data#ApnSetting#AUTH_TYPE_PAP_OR_CHAP_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the authentication type of the APN.", "history": "Added in API level 28", "FullName": "public int getAuthType ()"}, "getCarrierId()": {"Returns": [["int", "the carrier id"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#telephony#data#ApnSetting#Builder#setCarrierId_E@"], "Permissions": [], "Description": "Returns the carrier id for this APN.", "history": "Added in API level 29", "FullName": "public int getCarrierId ()"}, "getMmsProxyAddressAsString()": {"Returns": [["@B_java#lang#String_E@", "MMS proxy address."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the MMS proxy address of the APN.", "history": "Added in API level 29", "FullName": "public String getMmsProxyAddressAsString ()"}, "getMvnoType()": {"Returns": [["int", "the MVNO match type Value is @B_android#telephony#data#ApnSetting#MVNO_TYPE_SPN_E@, @B_android#telephony#data#ApnSetting#MVNO_TYPE_IMSI_E@, @B_android#telephony#data#ApnSetting#MVNO_TYPE_GID_E@, or @B_android#telephony#data#ApnSetting#MVNO_TYPE_ICCID_E@"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#telephony#data#ApnSetting#Builder#setMvnoType_E@"], "Permissions": [], "Description": "Returns the MVNO match type for this APN.", "history": "Added in API level 28", "FullName": "public int getMvnoType ()"}, "getProxyAddressAsString()": {"Returns": [["@B_java#lang#String_E@", "proxy address."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the proxy address of the APN.", "history": "Added in API level 29", "FullName": "public String getProxyAddressAsString ()"}, "getProxyPort()": {"Returns": [["int", "proxy address."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the proxy address of the APN.", "history": "Added in API level 28", "FullName": "public int getProxyPort ()"}, "isEnabled()": {"Returns": [["boolean", "the current status"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current status of APN. true : enabled APN. false : disabled APN.", "history": "Added in API level 28", "FullName": "public boolean isEnabled ()"}, "getProxyAddress()": {"Returns": [["@B_java#net#InetAddress_E@", "the HTTP proxy address or null if DNS isn\u2019t available to resolve a hostname"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "use @B_android#telephony#data#ApnSetting#getProxyAddressAsString_E@ instead. Gets the HTTP proxy address configured for the APN. The proxy address might be an IP address or hostname. This method returns null if system networking (typically DNS) isn\u2019t available to resolve a hostname value\u2014values set as IP addresses don\u2019t have this restriction. This is a known problem and will be addressed in a future release.", "history": "Added in API level 28 Deprecated in API level 29", "FullName": "public InetAddress getProxyAddress ()"}, "getPassword()": {"Returns": [["@B_java#lang#String_E@", "APN password"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the APN password of the APN.", "history": "Added in API level 28", "FullName": "public String getPassword ()"}, "getApnTypeBitmask()": {"Returns": [["int", "a bitmask describing the types of the APN Value is either 0 or a combination of @B_android#telephony#data#ApnSetting#TYPE_DEFAULT_E@, @B_android#telephony#data#ApnSetting#TYPE_MMS_E@, @B_android#telephony#data#ApnSetting#TYPE_SUPL_E@, @B_android#telephony#data#ApnSetting#TYPE_DUN_E@, @B_android#telephony#data#ApnSetting#TYPE_HIPRI_E@, @B_android#telephony#data#ApnSetting#TYPE_FOTA_E@, @B_android#telephony#data#ApnSetting#TYPE_IMS_E@, @B_android#telephony#data#ApnSetting#TYPE_CBS_E@, @B_android#telephony#data#ApnSetting#TYPE_IA_E@, @B_android#telephony#data#ApnSetting#TYPE_EMERGENCY_E@, and @B_android#telephony#data#ApnSetting#TYPE_MCX_E@"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#telephony#data#ApnSetting#Builder#setApnTypeBitmask_E@"], "Permissions": [], "Description": "Returns the bitmask of APN types. Apn types are usage categories for an APN entry. One APN entry may support multiple APN types, eg, a single APN may service regular internet traffic (\"default\") as well as MMS-specific connections. The bitmask of APN types is calculated from APN types defined in @B_android#telephony#data#ApnSetting_E@.", "history": "Added in API level 28", "FullName": "public int getApnTypeBitmask ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: This value must never be null."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 28", "FullName": "public void writeToParcel (Parcel dest, int flags)"}}, "Inheritance": [], "ClassName": "android.telephony.data.ApnSetting", "ClassDesc": "An Access Point Name (APN) configuration for a carrier data connection. The APN provides configuration to connect a cellular network device to an IP data network. A carrier uses the name, type and other configuration in an APNSetting to decide which IP address to assign, any security methods to apply, and how the device might be connected to private networks. Use @B_android#telephony#data#ApnSetting#Builder_E@ to create new instances."}