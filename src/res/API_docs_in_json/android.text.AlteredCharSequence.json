{"Functions": {"toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 1", "FullName": "public String toString ()"}, "subSequence(int,int)": {"Returns": [["@B_java#lang#CharSequence_E@", "the specified subsequence"]], "Parameters": [["int", "int: the start index, inclusive"], ["int", "int: the end index, exclusive"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a CharSequence that is a subsequence of this sequence. The subsequence starts with the char value at the specified index and ends with the char value at index chars) of the returned sequence is", "history": "Added in API level 1", "FullName": "public CharSequence subSequence (int start, int end)"}, "subSequence(int, int)": {"Returns": [["@B_java#lang#CharSequence_E@", "the specified subsequence"]], "Parameters": [["int", "int: the start index, inclusive"], ["int", "int: the end index, exclusive"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a CharSequence that is a subsequence of this sequence. The subsequence starts with the char value at the specified index and ends with the char value at index chars) of the returned sequence is", "history": "added in API level 1", "FullName": "public CharSequence subSequence (int start, int end)"}, "make(java.lang.CharSequence, char[], int, int)": {"Returns": [["@B_android#text#AlteredCharSequence_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"], ["char[]", "char no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create an AlteredCharSequence whose text (and possibly spans) are mirrored from source, except that the range of offsets substart inclusive to subend exclusive are mirrored instead from sub, beginning at offset 0.", "history": "added in API level 1", "FullName": "public static AlteredCharSequence make (CharSequence source, char[] sub, int substart, int subend)"}, "length()": {"Returns": [["int", "the number of chars in this sequence"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the length of this character sequence. The length is the number of 16-bit chars in the sequence.", "history": "Added in API level 1", "FullName": "public int length ()"}, "getChars(int,int,char[],int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["char[]", "char no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Exactly like String.getChars(): copy chars start through end - 1 from this CharSequence into dest beginning at offset destoff.", "history": "Added in API level 1", "FullName": "public void getChars (int start, int end, char[] dest, int off)"}, "make(java.lang.CharSequence,char[],int,int)": {"Returns": [["@B_android#text#AlteredCharSequence_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"], ["char[]", "char no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create an AlteredCharSequence whose text (and possibly spans) are mirrored from source, except that the range of offsets substart inclusive to subend exclusive are mirrored instead from sub, beginning at offset 0.", "history": "Added in API level 1", "FullName": "public static AlteredCharSequence make (CharSequence source, char[] sub, int substart, int subend)"}, "charAt(int)": {"Returns": [["char", "the specified char value"]], "Parameters": [["int", "int: the index of the char value to be returned"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the char value at the specified index. An index ranges from zero to char value of the sequence is at index zero, the next at index one, and so on, as for array indexing. If the char value specified by the index is a", "history": "Added in API level 1", "FullName": "public char charAt (int off)"}, "getChars(int, int, char[], int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["char[]", "char no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Exactly like String.getChars(): copy chars start through end - 1 from this CharSequence into dest beginning at offset destoff.", "history": "added in API level 1", "FullName": "public void getChars (int start, int end, char[] dest, int off)"}}, "Inheritance": [], "ClassName": "android.text.AlteredCharSequence", "ClassDesc": "An AlteredCharSequence is a CharSequence that is largely mirrored from another CharSequence, except that a specified range of characters are mirrored from a different char array instead."}