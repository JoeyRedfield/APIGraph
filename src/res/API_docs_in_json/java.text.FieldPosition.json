{"Functions": {"getFieldAttribute()": {"Returns": [["@B_java#text#Format#Field_E@", "Identifier for the field"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the field identifier as an attribute constant from one of the Field subclasses. May return null if the field is specified only by an integer field ID.", "history": "Added in API level 1", "FullName": "public Format.Field getFieldAttribute ()"}, "getField()": {"Returns": [["int", "the field identifier"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the field identifier.", "history": "Added in API level 1", "FullName": "public int getField ()"}, "getBeginIndex()": {"Returns": [["int", "the begin index"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the index of the first character in the requested field.", "history": "Added in API level 1", "FullName": "public int getBeginIndex ()"}, "getEndIndex()": {"Returns": [["int", "the end index"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the index of the character following the last character in the requested field.", "history": "Added in API level 1", "FullName": "public int getEndIndex ()"}, "FieldPosition(int)": {"Returns": [], "Parameters": [["int", "int: the field identifier"]], "Throws": [], "SeeAlso": ["@B_java#text#NumberFormat_E@", "@B_java#text#DateFormat_E@"], "Permissions": [], "Description": "Creates a FieldPosition object for the given field. Fields are identified by constants, whose names typically end with _FIELD, in the various subclasses of Format.", "history": "Added in API level 1", "FullName": "public FieldPosition (int field)"}, "setEndIndex(int)": {"Returns": [], "Parameters": [["int", "int: the end index"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the end index. For use by subclasses of Format.", "history": "Added in API level 1", "FullName": "public void setEndIndex (int ei)"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of this object"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a string representation of this FieldPosition.", "history": "Added in API level 1", "FullName": "public String toString ()"}, "FieldPosition(java.text.Format.Field)": {"Returns": [], "Parameters": [["@B_java#text#Format#Field_E@", "Format.Field: Format.Field constant identifying a field"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a FieldPosition object for the given field constant. Fields are identified by constants defined in the various Format subclasses. This is equivalent to calling new FieldPosition(attribute, -1).", "history": "Added in API level 1", "FullName": "public FieldPosition (Format.Field attribute)"}, "FieldPosition(java.text.Format.Field,int)": {"Returns": [], "Parameters": [["@B_java#text#Format#Field_E@", "Format.Field: Format.Field constant identifying a field"], ["int", "int: integer constant identifying a field"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a FieldPosition object for the given field. The field is identified by an attribute constant from one of the Field subclasses as well as an integer field ID defined by the Format subclasses. Format subclasses that are aware of Field should give precedence to attribute and ignore fieldID if attribute is not null. However, older Format subclasses may not be aware of Field and rely on fieldID. If the field has no corresponding integer constant, fieldID should be -1.", "history": "Added in API level 1", "FullName": "public FieldPosition (Format.Field attribute, int fieldID)"}, "setBeginIndex(int)": {"Returns": [], "Parameters": [["int", "int: the begin index"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the begin index. For use by subclasses of Format.", "history": "Added in API level 1", "FullName": "public void setBeginIndex (int bi)"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if this object is the same as the obj argument; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the reference object with which to compare."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Overrides equals", "history": "Added in API level 1", "FullName": "public boolean equals (Object obj)"}, "FieldPosition(java.text.Format.Field, int)": {"Returns": [], "Parameters": [["@B_java#text#Format#Field_E@", "Format.Field: Format.Field constant identifying a field"], ["int", "int: integer constant identifying a field"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a FieldPosition object for the given field. The field is identified by an attribute constant from one of the Field subclasses as well as an integer field ID defined by the Format subclasses. Format subclasses that are aware of Field should give precedence to attribute and ignore fieldID if attribute is not null. However, older Format subclasses may not be aware of Field and rely on fieldID. If the field has no corresponding integer constant, fieldID should be -1.", "history": "added in API level 1", "FullName": "public FieldPosition (Format.Field attribute, int fieldID)"}, "hashCode()": {"Returns": [["int", "a hash code value for this object"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a hash code for this FieldPosition.", "history": "Added in API level 1", "FullName": "public int hashCode ()"}}, "Inheritance": [], "ClassName": "java.text.FieldPosition", "ClassDesc": "FieldPosition is a simple class used by Format and its subclasses to identify fields in formatted output. Fields can be identified in two ways: By an integer constant, whose names typically end with _FIELD. The constants are defined in the various subclasses of Format. By a Format.Field constant, see ERA_FIELD and its friends in DateFormat for an example. FieldPosition keeps track of the position of the field within the formatted output with two indices: the index of the first character of the field and the index of the last character of the field. One version of the format method in the various Format classes requires a FieldPosition object as an argument. You use this format method to perform partial formatting or to get information about the formatted output (such as the position of a field). If you are interested in the positions of all attributes in the formatted string use the Format method formatToCharacterIterator."}