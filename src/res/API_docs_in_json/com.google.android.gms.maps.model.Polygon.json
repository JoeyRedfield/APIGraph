{"Functions": {"getFillColor()": {"Returns": [["", "the color in ARGB format."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the fill color of this polygon.", "history": "", "FullName": "public int getFillColor ()"}, "setZIndex(float)": {"Returns": [], "Parameters": [["float", "the zIndex of this polygon."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the zIndex of this polygon. Polygons with higher zIndices are drawn above those with lower indices.", "history": "", "FullName": "public void setZIndex (float zIndex)"}, "getStrokeWidth()": {"Returns": [["", "the width in screen pixels."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the stroke width of this polygon.", "history": "", "FullName": "public float getStrokeWidth ()"}, "isVisible()": {"Returns": [["", "this polygon visibility."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the visibility of this polygon.", "history": "", "FullName": "public boolean isVisible ()"}, "setStrokeColor(int)": {"Returns": [], "Parameters": [["int", "the color in ARGB format"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the stroke color of this polygon.", "history": "", "FullName": "public void setStrokeColor (int color)"}, "getPoints()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a snapshot of the vertices of this polygon at this time . The list returned is a copy of the list of vertices and so changes to the polygon's vertices will not be reflected by this list, nor will changes to this list be reflected by the polygon. To change the vertices of the polygon, call @B_com#google#android#gms#maps#model#Polygon#setPoints_E@.", "history": "", "FullName": "public List<LatLng> getPoints ()"}, "getHoles()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a snapshot of the holes of this polygon at this time . The list returned is a copy of the list of holes and so changes to the polygon's holes will not be reflected by this list, nor will changes to this list be reflected by the polygon.", "history": "", "FullName": "public List<List<LatLng>> getHoles ()"}, "setStrokeWidth(float)": {"Returns": [], "Parameters": [["float", "the width in display pixels."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the stroke width of this polygon.", "history": "", "FullName": "public void setStrokeWidth (float width)"}, "setPoints(java.util.List<com.google.android.gms.maps.model.LatLng>)": {"Returns": [], "Parameters": [["List", "a list of @B_com#google#android#gms#maps#model#LatLng_E@s that are the vertices of the polygon."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the points of this polygon. This method will take a copy of the points, so further mutations to points will have no effect on this polygon.", "history": "", "FullName": "public void setPoints (List<LatLng> points)"}, "remove()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes the polygon from the map.", "history": "", "FullName": "public void remove ()"}, "setGeodesic(boolean)": {"Returns": [], "Parameters": [["boolean", "if true, then each segment is drawn as a geodesic; if false, each segment is drawn as a straight line on the Mercator projection."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether to draw each segment of the line as a geodesic or not.", "history": "", "FullName": "public void setGeodesic (boolean geodesic)"}, "getStrokeColor()": {"Returns": [["", "the color in ARGB format."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the stroke color of this polygon.", "history": "", "FullName": "public int getStrokeColor ()"}, "isGeodesic()": {"Returns": [["", "true if each segment is drawn as a geodesic; false if each segment is drawn as a straight line on the Mercator projection."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets whether each segment of the line is drawn as a geodesic or not.", "history": "", "FullName": "public boolean isGeodesic ()"}, "setHoles(java.util.List<? extends java.util.List<com.google.android.gms.maps.model.LatLng>>)": {"Returns": [], "Parameters": [["List", "an list of holes, where a hole is an list of @B_com#google#android#gms#maps#model#LatLng_E@s."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the holes of this polygon. This method will take a copy of the holes, so further mutations to holes will have no effect on this polygon.", "history": "", "FullName": "public void setHoles (List<? extends List<LatLng>> holes)"}, "getZIndex()": {"Returns": [["", "the zIndex of the polygon."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the zIndex of this polygon.", "history": "", "FullName": "public float getZIndex ()"}, "getId()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets this polygon's id. The id will be unique amongst all Polygons on a map.", "history": "", "FullName": "public String getId ()"}, "setFillColor(int)": {"Returns": [], "Parameters": [["int", "the color in ARGB format"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the fill color of this polygon.", "history": "", "FullName": "public void setFillColor (int color)"}, "setVisible(boolean)": {"Returns": [], "Parameters": [["boolean", "if true, then the polygon is visible; if false, it is not."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the visibility of this polygon. When not visible, a polygon is not drawn, but it keeps all its other properties.", "history": "", "FullName": "public void setVisible (boolean visible)"}, "equals(java.lang.Object)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public boolean equals (Object other)"}, "hashCode()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int hashCode ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.maps.model.Polygon", "ClassDesc": "A polygon on the earth's surface. A polygon can be convex or concave, it may span the 180 meridian and it can have holes that are not filled in. It has the following properties: Methods that modify a Polygon must be called on the main thread. If not, an @B_java#lang#IllegalStateException_E@ will be thrown at runtime. For more information, read the"}