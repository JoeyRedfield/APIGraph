{"Functions": {"formatFileSize(android.content.Context, long)": {"Returns": [["@B_java#lang#String_E@", "formatted string with the number"]], "Parameters": [["@B_android#content#Context_E@", "Context: Context to use to load the localized unitsThis value may be null."], ["long", "long: size value to be formatted, in bytes"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Formats a content size to be in the form of bytes, kilobytes, megabytes, etc. As of O, the prefixes are used in their standard meanings in the SI system, so kB = 1000 bytes, MB = 1,000,000 bytes, etc. In @B_android#os#Build#VERSION_CODES#N_E@ and earlier, powers of 1024 are used instead, with KB = 1024 bytes, MB = 1,048,576 bytes, etc. If the context has a right-to-left locale, the returned string is wrapped in bidi formatting characters to make sure it's displayed correctly if inserted inside a right-to-left string. (This is useful in cases where the unit strings, like \"MB\", are left-to-right, but the locale is right-to-left.)", "history": "added in API level 3", "FullName": "public static String formatFileSize (Context context, long sizeBytes)"}, "formatShortFileSize(android.content.Context, long)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment This value may be null."], ["long", "long no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Like @B_android#text#format#Formatter#formatFileSize_E@, but trying to generate shorter numbers (showing fewer digits of precision).", "history": "added in API level 5", "FullName": "public static String formatShortFileSize (Context context, long sizeBytes)"}, "formatShortFileSize(android.content.Context,long)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["@B_android#content#Context_E@", "Context: This value may be null."], ["long", "long no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Like @B_android#text#format#Formatter#formatFileSize_E@, but trying to generate shorter numbers (showing fewer digits of precision).", "history": "Added in API level 5", "FullName": "public static String formatShortFileSize (Context context, long sizeBytes)"}, "Formatter()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 3", "FullName": "public Formatter ()"}, "formatIpAddress(int)": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_java#net#InetAddress#getHostAddress_E@, which supports both IPv4 and IPv6 addresses. This method does not support IPv6 addresses. Returns a string in the canonical IPv4 format ###.###.###.### from a packed integer containing the IP address. The IPv4 address is expected to be in little-endian format (LSB first). That is, 0x01020304 will return \"4.3.2.1\".", "history": "Added in API level 3 Deprecated in API level 15", "FullName": "public static String formatIpAddress (int ipv4Address)"}, "formatFileSize(android.content.Context,long)": {"Returns": [["@B_java#lang#String_E@", "formatted string with the number"]], "Parameters": [["@B_android#content#Context_E@", "Context: Context to use to load the localized units This value may be null."], ["long", "long: size value to be formatted, in bytes"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Formats a content size to be in the form of bytes, kilobytes, megabytes, etc. As of O, the prefixes are used in their standard meanings in the SI system, so kB = 1000 bytes, MB = 1,000,000 bytes, etc. In @B_android#os#Build#VERSION_CODES#N_E@ and earlier, powers of 1024 are used instead, with KB = 1024 bytes, MB = 1,048,576 bytes, etc. If the context has a right-to-left locale, the returned string is wrapped in bidi formatting characters to make sure it's displayed correctly if inserted inside a right-to-left string. (This is useful in cases where the unit strings, like \"MB\", are left-to-right, but the locale is right-to-left.)", "history": "Added in API level 3", "FullName": "public static String formatFileSize (Context context, long sizeBytes)"}}, "Inheritance": [], "ClassName": "android.text.format.Formatter", "ClassDesc": "Utility class to aid in formatting common values that are not covered by the @B_java#util#Formatter_E@ class in @B_java#util#package-summary_E@"}