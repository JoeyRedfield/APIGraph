{"Functions": {"getServiceComponent()": {"Returns": [["https:##developer#android#com@B_android#content#ComponentName_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the service component that the media browser is connected to.", "history": "added in version 26.0.0-alpha1", "FullName": "public ComponentName getServiceComponent ()"}, "isConnected()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether the browser is connected to the service.", "history": "added in version 26.0.0-alpha1", "FullName": "public boolean isConnected ()"}, "connect()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Connects to the media browse service. Internally, it binds to the service. The connection callback specified in the constructor will be invoked when the connection completes or fails.", "history": "added in version 26.0.0-alpha1", "FullName": "public void connect ()"}, "getSessionToken()": {"Returns": [["@B_android#support#v4#media#session#MediaSessionCompat#Token_E@", "The session token for the browser, never null."]], "Parameters": [], "Throws": [["IllegalStateException", "if not connected."]], "SeeAlso": [], "Permissions": [], "Description": "Gets the media session token associated with the media browser. Note that the session token may become invalid or change when when the browser is disconnected.", "history": "added in version 26.0.0-alpha1", "FullName": "public MediaSessionCompat.Token getSessionToken ()"}, "MediaBrowserCompat(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat.ConnectionCallback,android.os.Bundle)": {"Returns": [], "Parameters": [["https:##developer#android#com@B_android#content#Context_E@", "Context: The context."], ["https:##developer#android#com@B_android#content#ComponentName_E@", "ComponentName: The component name of the media browse service."], ["@B_android#support#v4#media#MediaBrowserCompat#ConnectionCallback_E@", "MediaBrowserCompat.ConnectionCallback: The connection callback."], ["https:##developer#android#com@B_android#os#Bundle_E@", "Bundle: An optional bundle of service-specific arguments to send to the media browse service when connecting and retrieving the root id for browsing, or null if none. The contents of this bundle may affect the information returned when browsing."]], "Throws": [], "SeeAlso": ["@B_androidx#media#MediaBrowserServiceCompat#BrowserRoot_E@"], "Permissions": [], "Description": "Creates a media browser for the specified media browse service.", "history": "added in version 26.0.0-alpha1", "FullName": "public MediaBrowserCompat (Context context, ComponentName serviceComponent, MediaBrowserCompat.ConnectionCallback callback, Bundle rootHints)"}, "disconnect()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Disconnects from the media browse service. After this, no more callbacks will be received.", "history": "added in version 26.0.0-alpha1", "FullName": "public void disconnect ()"}, "getItem(java.lang.String,android.support.v4.media.MediaBrowserCompat.ItemCallback)": {"Returns": [], "Parameters": [["String", "String: The id of the item to retrieve."], ["@B_android#support#v4#media#MediaBrowserCompat#ItemCallback_E@", "MediaBrowserCompat.ItemCallback: The callback to receive the result on."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves a specific @B_android#support#v4#media#MediaBrowserCompat#MediaItem_E@ from the connected service. Not all services may support this, so falling back to subscribing to the parent's id should be used when unavailable.", "history": "added in version 26.0.0-alpha1", "FullName": "public void getItem (String mediaId, MediaBrowserCompat.ItemCallback cb)"}, "getRoot()": {"Returns": [["String", "no returns description in source"]], "Parameters": [], "Throws": [["IllegalStateException", "if not connected."]], "SeeAlso": [], "Permissions": [], "Description": "Gets the root id. Note that the root id may become invalid or change when when the browser is disconnected.", "history": "added in version 26.0.0-alpha1", "FullName": "public String getRoot ()"}, "getExtras()": {"Returns": [["https:##developer#android#com@B_android#os#Bundle_E@", "The extra bundle if it is connected and set, and null otherwise."]], "Parameters": [], "Throws": [["IllegalStateException", "if not connected."]], "SeeAlso": [], "Permissions": [], "Description": "Gets any extras for the media service.", "history": "added in version 26.0.0-alpha1", "FullName": "public Bundle getExtras ()"}, "subscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat.SubscriptionCallback)": {"Returns": [], "Parameters": [["String", "String: The id of the parent media item whose list of children will be subscribed."], ["@B_android#support#v4#media#MediaBrowserCompat#SubscriptionCallback_E@", "MediaBrowserCompat.SubscriptionCallback: The callback to receive the list of children."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Queries for information about the media items that are contained within the specified id and subscribes to receive updates when they change. The list of subscriptions is maintained even when not connected and is restored after the reconnection. It is ok to subscribe while not connected but the results will not be returned until the connection completes. If the id is already subscribed with a different callback then the new callback will replace the previous one and the child data will be reloaded.", "history": "added in version 26.0.0-alpha1", "FullName": "public void subscribe (String parentId, MediaBrowserCompat.SubscriptionCallback callback)"}, "subscribe(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat.SubscriptionCallback)": {"Returns": [], "Parameters": [["String", "String: The id of the parent media item whose list of children will be subscribed."], ["https:##developer#android#com@B_android#os#Bundle_E@", "Bundle: A bundle of service-specific arguments to send to the media browse service. The contents of this bundle may affect the information returned when browsing."], ["@B_android#support#v4#media#MediaBrowserCompat#SubscriptionCallback_E@", "MediaBrowserCompat.SubscriptionCallback: The callback to receive the list of children."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Queries with service-specific arguments for information about the media items that are contained within the specified id and subscribes to receive updates when they change. The list of subscriptions is maintained even when not connected and is restored after the reconnection. It is ok to subscribe while not connected but the results will not be returned until the connection completes. If the id is already subscribed with a different callback then the new callback will replace the previous one and the child data will be reloaded.", "history": "added in version 26.0.0-alpha1", "FullName": "public void subscribe (String parentId, Bundle options, MediaBrowserCompat.SubscriptionCallback callback)"}, "unsubscribe(java.lang.String)": {"Returns": [], "Parameters": [["String", "String: The id of the parent media item whose list of children will be unsubscribed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Unsubscribes for changes to the children of the specified media id. The query callback will no longer be invoked for results associated with this id once this method returns.", "history": "added in version 26.0.0-alpha1", "FullName": "public void unsubscribe (String parentId)"}, "sendCustomAction(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat.CustomActionCallback)": {"Returns": [], "Parameters": [["String", "String: The custom action that will be sent to the connected service. Should not be an empty string."], ["https:##developer#android#com@B_android#os#Bundle_E@", "Bundle: The bundle of service-specific arguments to send to the media browser service."], ["@B_android#support#v4#media#MediaBrowserCompat#CustomActionCallback_E@", "MediaBrowserCompat.CustomActionCallback: The callback to receive the result of the custom action."]], "Throws": [], "SeeAlso": ["@B_android#support#v4#media#MediaBrowserCompat_E@"], "Permissions": [], "Description": "Sends a custom action to the connected service. If the service doesn't support the given action, @B_android#support#v4#media#MediaBrowserCompat#CustomActionCallback#onError_E@ will be called.", "history": "added in version 25.4.0", "FullName": "public void sendCustomAction (String action, Bundle extras, MediaBrowserCompat.CustomActionCallback callback)"}, "search(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat.SearchCallback)": {"Returns": [], "Parameters": [["String", "String: The search query that contains keywords separated by space. Should not be an empty string."], ["https:##developer#android#com@B_android#os#Bundle_E@", "Bundle: The bundle of service-specific arguments to send to the media browser service. The contents of this bundle may affect the search result."], ["@B_android#support#v4#media#MediaBrowserCompat#SearchCallback_E@", "MediaBrowserCompat.SearchCallback: The callback to receive the search result. Must be non-null."]], "Throws": [["IllegalStateException", "if the browser is not connected to the media browser service."]], "SeeAlso": [], "Permissions": [], "Description": "Searches @B_android#support#v4#media#MediaBrowserCompat#MediaItem_E@ from the connected service. Not all services may support this, and @B_android#support#v4#media#MediaBrowserCompat#SearchCallback#onError_E@ will be called if not implemented.", "history": "added in version 25.4.0", "FullName": "public void search (String query, Bundle extras, MediaBrowserCompat.SearchCallback callback)"}, "unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat.SubscriptionCallback)": {"Returns": [], "Parameters": [["String", "String: The id of the parent media item whose list of children will be unsubscribed."], ["@B_android#support#v4#media#MediaBrowserCompat#SubscriptionCallback_E@", "MediaBrowserCompat.SubscriptionCallback: A callback sent to the media browse service to subscribe."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Unsubscribes for changes to the children of the specified media id. The query callback will no longer be invoked for results associated with this id once this method returns.", "history": "added in version 26.0.0-alpha1", "FullName": "public void unsubscribe (String parentId, MediaBrowserCompat.SubscriptionCallback callback)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v4.media.MediaBrowserCompat", "ClassDesc": "Browses media content offered by a @B_androidx#media#MediaBrowserServiceCompat_E@. This object is not thread-safe. All calls should happen on the thread on which the browser was constructed. All callback methods will be called from the thread on which the browser was constructed."}