{"Functions": {"setElevation(float)": {"Returns": [], "Parameters": [["float", "float no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the visual elevation (shadow) of the view, as per @B_android#view#View#getZ_E@. Note this is not related to the physical Z-ordering of this view relative to its other siblings (that is how they overlap when drawing), it is only the visual representation for shadowing.", "history": "Added in API level 23", "FullName": "public abstract void setElevation (float elevation)"}, "setText(java.lang.CharSequence,int,int)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Like @B_android#view#ViewStructure#setText_E@ but with an active selection extending from", "history": "Added in API level 23", "FullName": "public abstract void setText (CharSequence text, int selectionStart, int selectionEnd)"}, "getExtras()": {"Returns": [["@B_android#os#Bundle_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get extra data associated with this view structure; the returned Bundle is mutable, allowing you to view and modify its contents. Keys placed in the Bundle should use an appropriate namespace prefix (such as com.google.MY_KEY) to avoid conflicts.", "history": "Added in API level 23", "FullName": "public abstract Bundle getExtras ()"}, "setId(int,java.lang.String,java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["int", "int: The view's identifier, as per @B_android#view#View#getId_E@."], ["@B_java#lang#String_E@", "String: The package name of the view's identifier, or null if there is none."], ["@B_java#lang#String_E@", "String: The type name of the view's identifier, or null if there is none."], ["@B_java#lang#String_E@", "String: The entry name of the view's identifier, or null if there is none."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the identifier for this view.", "history": "Added in API level 23", "FullName": "public abstract void setId (int id, String packageName, String typeName, String entryName)"}, "setMaxTextLength(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the maximum length of the text associated with this view, when supported. Should only be set when the node is used for autofill purposes - it will be ignored when used for Assist.", "history": "Added in API level 28", "FullName": "public void setMaxTextLength (int maxLength)"}, "asyncCommit()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Call when done populating a @B_android#view#ViewStructure_E@ returned by @B_android#view#ViewStructure#asyncNewChild_E@.", "history": "Added in API level 23", "FullName": "public abstract void asyncCommit ()"}, "ViewStructure()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 23", "FullName": "public ViewStructure ()"}, "setContentDescription(java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the content description of the view, as per @B_android#view#View#getContentDescription_E@.", "history": "Added in API level 23", "FullName": "public abstract void setContentDescription (CharSequence contentDescription)"}, "setText(java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the text that is associated with this view. There is no selection associated with the text. The text may have style spans to supply additional display and semantic information.", "history": "Added in API level 23", "FullName": "public abstract void setText (CharSequence text)"}, "setDimens(int,int,int,int,int,int)": {"Returns": [], "Parameters": [["int", "int: The view's left position, in pixels relative to its parent's left edge."], ["int", "int: The view's top position, in pixels relative to its parent's top edge."], ["int", "int: How much the view's x coordinate space has been scrolled, in pixels."], ["int", "int: How much the view's y coordinate space has been scrolled, in pixels."], ["int", "int: The view's visible width, in pixels. This is the width visible on screen, not the total data width of a scrollable view."], ["int", "int: The view's visible height, in pixels. This is the height visible on screen, not the total data height of a scrollable view."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the basic dimensions of this view.", "history": "Added in API level 23", "FullName": "public abstract void setDimens (int left, int top, int scrollX, int scrollY, int width, int height)"}, "newChild(int)": {"Returns": [["@B_android#view#ViewStructure_E@", "Returns an fresh @B_android#view#ViewStructure_E@ ready to be filled in."]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new child @B_android#view#ViewStructure_E@ in this view, putting into the list of children at @B_android#view#ViewStructure#addChildCount_E@ or @B_android#view#ViewStructure#setChildCount_E@.", "history": "Added in API level 23", "FullName": "public abstract ViewStructure newChild (int index)"}, "setHint(java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set optional hint text associated with this view; this is for example the text that is shown by an EditText when it is empty to indicate to the user the kind of text to input.", "history": "Added in API level 23", "FullName": "public abstract void setHint (CharSequence hint)"}, "setSelected(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the selected state of this view, as per @B_android#view#View#isSelected_E@.", "history": "Added in API level 23", "FullName": "public abstract void setSelected (boolean state)"}, "setMinTextEms(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the minimum width in ems of the text associated with this view, when supported. Should only be set when the node is used for autofill purposes - it will be ignored when used for Assist.", "history": "Added in API level 28", "FullName": "public void setMinTextEms (int minEms)"}, "setTextLines(int[], int[])": {"Returns": [], "Parameters": [["int[]", "int: The offset in to @B_android#view#ViewStructure#setText_E@ where a line starts."], ["int[]", "int: The baseline where the line is drawn on screen."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set line information for test that was previously supplied through @B_android#view#ViewStructure#setText_E@. This provides the line breaking of the text as it is shown on screen. This function takes ownership of the provided arrays; you should not make further modification to them.", "history": "added in API level 23", "FullName": "public abstract void setTextLines (int[] charOffsets, int[] baselines)"}, "setContextClickable(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the context clickable state of this view, as per @B_android#view#View#isContextClickable_E@.", "history": "Added in API level 23", "FullName": "public abstract void setContextClickable (boolean state)"}, "setClassName(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the class name of the view, as per @B_android#view#View#getAccessibilityClassName_E@.", "history": "Added in API level 23", "FullName": "public abstract void setClassName (String className)"}, "setAlpha(float)": {"Returns": [], "Parameters": [["float", "float no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set an alpha transformation that is applied to this view, as per @B_android#view#View#getAlpha_E@. Value ranges from 0 (completely transparent) to 1 (completely opaque); the default is 1, which means no transformation.", "history": "Added in API level 23", "FullName": "public abstract void setAlpha (float alpha)"}, "getTextSelectionEnd()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the last selection end set by @B_android#view#ViewStructure#setText_E@.", "history": "Added in API level 23", "FullName": "public abstract int getTextSelectionEnd ()"}, "setLocaleList(android.os.LocaleList)": {"Returns": [], "Parameters": [["@B_android#os#LocaleList_E@", "LocaleList no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the the list of locales associated with this node.", "history": "Added in API level 26", "FullName": "public abstract void setLocaleList (LocaleList localeList)"}, "setTextStyle(float,int,int,int)": {"Returns": [], "Parameters": [["float", "float: The size, in pixels, of the text."], ["int", "int: The foreground color, packed as 0xAARRGGBB."], ["int", "int: The background color, packed as 0xAARRGGBB."], ["int", "int: Style flags, as defined by @B_android#app#assist#AssistStructure#ViewNode_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Explicitly set default global style information for text that was previously set with @B_android#view#ViewStructure#setText_E@.", "history": "Added in API level 23", "FullName": "public abstract void setTextStyle (float size, int fgColor, int bgColor, int style)"}, "setChecked(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the checked state of this view, such as @B_android#widget#Checkable#isChecked_E@.", "history": "Added in API level 23", "FullName": "public abstract void setChecked (boolean state)"}, "setOpaque(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the opaque state of this view, as per @B_android#view#View#isOpaque_E@.", "history": "Added in API level 26", "FullName": "public abstract void setOpaque (boolean opaque)"}, "setText(java.lang.CharSequence, int, int)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Like @B_android#view#ViewStructure#setText_E@ but with an active selection extending from", "history": "added in API level 23", "FullName": "public abstract void setText (CharSequence text, int selectionStart, int selectionEnd)"}, "setAccessibilityFocused(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the accessibility focused state of this view, as per @B_android#view#View#isAccessibilityFocused_E@.", "history": "Added in API level 23", "FullName": "public abstract void setAccessibilityFocused (boolean state)"}, "setCheckable(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the checkable state of this view, such as whether it implements the @B_android#widget#Checkable_E@ interface.", "history": "Added in API level 23", "FullName": "public abstract void setCheckable (boolean state)"}, "setAutofillOptions(java.lang.CharSequence[])": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the options that can be used to autofill this node. Typically used by nodes whose @B_android#view#View#getAutofillType_E@ is a list to indicate the meaning of each possible value in the list.", "history": "Added in API level 26", "FullName": "public abstract void setAutofillOptions (CharSequence[] options)"}, "setImportantForAutofill(int)": {"Returns": [], "Parameters": [["int", "int: Value is @B_android#view#View#IMPORTANT_FOR_AUTOFILL_AUTO_E@, @B_android#view#View#IMPORTANT_FOR_AUTOFILL_YES_E@, @B_android#view#View#IMPORTANT_FOR_AUTOFILL_NO_E@, @B_android#view#View#IMPORTANT_FOR_AUTOFILL_YES_EXCLUDE_DESCENDANTS_E@, or @B_android#view#View#IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the @B_android#view#View#setImportantForAutofill_E@ of the view associated with this node.", "history": "Added in API level 28", "FullName": "public void setImportantForAutofill (int mode)"}, "setTextIdEntry(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the identifier used to set the text associated with this view. Should only be set when the node is used for autofill purposes - it will be ignored when used for Assist.", "history": "Added in API level 28", "FullName": "public void setTextIdEntry (String entryName)"}, "setEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the enabled state of this view, as per @B_android#view#View#isEnabled_E@.", "history": "Added in API level 23", "FullName": "public abstract void setEnabled (boolean state)"}, "setTransformation(android.graphics.Matrix)": {"Returns": [], "Parameters": [["@B_android#graphics#Matrix_E@", "Matrix no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the transformation matrix associated with this view, as per @B_android#view#View#getMatrix_E@, or null if there is none.", "history": "Added in API level 23", "FullName": "public abstract void setTransformation (Matrix matrix)"}, "setAutofillHints(java.lang.String[])": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the a hints that helps the autofill service to select the appropriate data to fill the view.", "history": "Added in API level 26", "FullName": "public abstract void setAutofillHints (String[] hint)"}, "setAutofillId(android.view.autofill.AutofillId)": {"Returns": [], "Parameters": [["@B_android#view#autofill#AutofillId_E@", "AutofillId: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the @B_android#view#autofill#AutofillId_E@ associated with this node.", "history": "Added in API level 26", "FullName": "public abstract void setAutofillId (AutofillId id)"}, "newHtmlInfoBuilder(java.lang.String)": {"Returns": [["@B_android#view#ViewStructure#HtmlInfo#Builder_E@", "a new builder."]], "Parameters": [["@B_java#lang#String_E@", "String: name of the HTML tag. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new @B_android#view#ViewStructure#HtmlInfo#Builder_E@ for the given HTML tag.", "history": "Added in API level 26", "FullName": "public abstract ViewStructure.HtmlInfo.Builder newHtmlInfoBuilder (String tagName)"}, "getHint()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the last hint set by @B_android#view#ViewStructure#setHint_E@.", "history": "Added in API level 23", "FullName": "public abstract CharSequence getHint ()"}, "setDimens(int, int, int, int, int, int)": {"Returns": [], "Parameters": [["int", "int: The view's left position, in pixels relative to its parent's left edge."], ["int", "int: The view's top position, in pixels relative to its parent's top edge."], ["int", "int: How much the view's x coordinate space has been scrolled, in pixels."], ["int", "int: How much the view's y coordinate space has been scrolled, in pixels."], ["int", "int: The view's visible width, in pixels. This is the width visible on screen, not the total data width of a scrollable view."], ["int", "int: The view's visible height, in pixels. This is the height visible on screen, not the total data height of a scrollable view."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the basic dimensions of this view.", "history": "added in API level 23", "FullName": "public abstract void setDimens (int left, int top, int scrollX, int scrollY, int width, int height)"}, "setLongClickable(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the long clickable state of this view, as per @B_android#view#View#isLongClickable_E@.", "history": "Added in API level 23", "FullName": "public abstract void setLongClickable (boolean state)"}, "setTextStyle(float, int, int, int)": {"Returns": [], "Parameters": [["float", "float: The size, in pixels, of the text."], ["int", "int: The foreground color, packed as 0xAARRGGBB."], ["int", "int: The background color, packed as 0xAARRGGBB."], ["int", "int: Style flags, as defined by @B_android#app#assist#AssistStructure#ViewNode_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Explicitly set default global style information for text that was previously set with @B_android#view#ViewStructure#setText_E@.", "history": "added in API level 23", "FullName": "public abstract void setTextStyle (float size, int fgColor, int bgColor, int style)"}, "hasExtras()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if @B_android#view#ViewStructure#getExtras_E@ has been used to create extra content.", "history": "Added in API level 23", "FullName": "public abstract boolean hasExtras ()"}, "setActivated(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the activated state of this view, as per @B_android#view#View#isActivated_E@.", "history": "Added in API level 23", "FullName": "public abstract void setActivated (boolean state)"}, "setHtmlInfo(android.view.ViewStructure.HtmlInfo)": {"Returns": [], "Parameters": [["@B_android#view#ViewStructure#HtmlInfo_E@", "ViewStructure.HtmlInfo: HTML properties. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the HTML properties of this node when it represents an HTML element. Should only be set when the node is used for autofill purposes - it will be ignored when used for assist.", "history": "Added in API level 26", "FullName": "public abstract void setHtmlInfo (ViewStructure.HtmlInfo htmlInfo)"}, "setWebDomain(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: RFC 2396-compliant URI representing the domain. This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the Web domain represented by this node. Typically used when the view is a container for an HTML document.", "history": "Added in API level 26", "FullName": "public abstract void setWebDomain (String domain)"}, "getAutofillId()": {"Returns": [["@B_android#view#autofill#AutofillId_E@", "This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the @B_android#view#autofill#AutofillId_E@ associated with this node.", "history": "Added in API level 26", "FullName": "public abstract AutofillId getAutofillId ()"}, "getChildCount()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the child count as set by @B_android#view#ViewStructure#setChildCount_E@.", "history": "Added in API level 23", "FullName": "public abstract int getChildCount ()"}, "getTextSelectionStart()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the last selection start set by @B_android#view#ViewStructure#setText_E@.", "history": "Added in API level 23", "FullName": "public abstract int getTextSelectionStart ()"}, "setAutofillType(int)": {"Returns": [], "Parameters": [["int", "int: Value is @B_android#view#View#AUTOFILL_TYPE_NONE_E@, @B_android#view#View#AUTOFILL_TYPE_TEXT_E@, @B_android#view#View#AUTOFILL_TYPE_TOGGLE_E@, @B_android#view#View#AUTOFILL_TYPE_LIST_E@, or @B_android#view#View#AUTOFILL_TYPE_DATE_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the @B_android#view#View#getAutofillType_E@ that can be used to autofill this node.", "history": "Added in API level 26", "FullName": "public abstract void setAutofillType (int type)"}, "setAutofillId(android.view.autofill.AutofillId,int)": {"Returns": [], "Parameters": [["@B_android#view#autofill#AutofillId_E@", "AutofillId: id of the parent node. This value must never be null."], ["int", "int: an opaque ID to the Android System; it's the same id used on @B_android#view#View#autofill_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the @B_android#view#autofill#AutofillId_E@ for this virtual node.", "history": "Added in API level 26", "FullName": "public abstract void setAutofillId (AutofillId parentId, int virtualId)"}, "asyncNewChild(int)": {"Returns": [["@B_android#view#ViewStructure_E@", "Returns an fresh @B_android#view#ViewStructure_E@ ready to be filled in."]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Like @B_android#view#ViewStructure#newChild_E@, but allows the caller to asynchronously populate the returned child. It can transfer the returned @B_android#view#ViewStructure_E@ to another thread for it to build its content (and children etc). Once done, some thread must call @B_android#view#ViewStructure#asyncCommit_E@ to tell the containing @B_android#view#ViewStructure_E@ that the async population is done. @B_android#view#ViewStructure#addChildCount_E@ or @B_android#view#ViewStructure#setChildCount_E@.", "history": "Added in API level 23", "FullName": "public abstract ViewStructure asyncNewChild (int index)"}, "setClickable(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the clickable state of this view, as per @B_android#view#View#isClickable_E@.", "history": "Added in API level 23", "FullName": "public abstract void setClickable (boolean state)"}, "addChildCount(int)": {"Returns": [["int", "Returns the index in the child array at which the new children start."]], "Parameters": [["int", "int: The number of new children to add."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Add to this view's child count. This increases the current child count by @B_android#view#ViewStructure#setChildCount_E@ or @B_android#view#ViewStructure#addChildCount_E@. The index at which the new child starts in the child array is returned.", "history": "Added in API level 23", "FullName": "public abstract int addChildCount (int num)"}, "setFocused(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the focused state of this view, as per @B_android#view#View#isFocused_E@.", "history": "Added in API level 23", "FullName": "public abstract void setFocused (boolean state)"}, "getText()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the last @B_android#view#ViewStructure#setText_E@.", "history": "Added in API level 23", "FullName": "public abstract CharSequence getText ()"}, "setAutofillValue(android.view.autofill.AutofillValue)": {"Returns": [], "Parameters": [["@B_android#view#autofill#AutofillValue_E@", "AutofillValue no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the @B_android#view#autofill#AutofillValue_E@ representing the current value of this node.", "history": "Added in API level 26", "FullName": "public abstract void setAutofillValue (AutofillValue value)"}, "setVisibility(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the visibility state of this view, as per @B_android#view#View#getVisibility_E@.", "history": "Added in API level 23", "FullName": "public abstract void setVisibility (int visibility)"}, "setFocusable(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the focusable state of this view, as per @B_android#view#View#isFocusable_E@.", "history": "Added in API level 23", "FullName": "public abstract void setFocusable (boolean state)"}, "setDataIsSensitive(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether the data on this node is sensitive; if it is, then its content (text, autofill value, etc..) is striped before calls to @B_android#service#autofill#AutofillService#onFillRequest_E@. By default, all nodes are assumed to be sensitive, and only nodes that does not have PII (Personally Identifiable Information - sensitive data such as email addresses, credit card numbers, passwords, etc...) should be marked as non-sensitive; a good rule of thumb is to mark as non-sensitive nodes whose value were statically set from resources. Notice that the content of even sensitive nodes are sent to the service (through the @B_android#service#autofill#AutofillService#onSaveRequest_E@ call) when the user consented to save thedata, so it is important to set the content of sensitive nodes as well, but mark them as sensitive. Should only be set when the node is used for autofill purposes - it will be ignored when used for Assist.", "history": "Added in API level 26", "FullName": "public abstract void setDataIsSensitive (boolean sensitive)"}, "setMaxTextEms(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the maximum width in ems of the text associated with this view, when supported. Should only be set when the node is used for autofill purposes - it will be ignored when used for Assist.", "history": "Added in API level 28", "FullName": "public void setMaxTextEms (int maxEms)"}, "setChildCount(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the number of children of this view, which defines the range of indices you can use with @B_android#view#ViewStructure#newChild_E@ and @B_android#view#ViewStructure#asyncNewChild_E@. Calling this method again resets all of the child state of the view, removing any children that had previously been added.", "history": "Added in API level 23", "FullName": "public abstract void setChildCount (int num)"}, "setInputType(int)": {"Returns": [], "Parameters": [["int", "int: inputType bits as defined by @B_android#text#InputType_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the @B_android#text#InputType_E@ bits of this node.", "history": "Added in API level 26", "FullName": "public abstract void setInputType (int inputType)"}, "setTextLines(int[],int[])": {"Returns": [], "Parameters": [["int[]", "int: The offset in to @B_android#view#ViewStructure#setText_E@ where a line starts."], ["int[]", "int: The baseline where the line is drawn on screen."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set line information for test that was previously supplied through @B_android#view#ViewStructure#setText_E@. This provides the line breaking of the text as it is shown on screen. This function takes ownership of the provided arrays; you should not make further modification to them.", "history": "Added in API level 23", "FullName": "public abstract void setTextLines (int[] charOffsets, int[] baselines)"}}, "Inheritance": [], "ClassName": "android.view.ViewStructure", "ClassDesc": "ViewStructure is a container for storing additional per-view data generated by @B_android#view#View#onProvideStructure_E@ and @B_android#view#View#onProvideAutofillStructure_E@. To learn more about using Autofill in your app, read the"}