{"Functions": {"rotate(float,float,float,float)": {"Returns": [], "Parameters": [["float", "float: angle of rotation"], ["float", "float: rotation axis x"], ["float", "float: rotation axis y"], ["float", "float: rotation axis z"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Modifies the current matrix by post-multiplying it with a rotation matrix of certain angle about a given axis", "history": "Added in API level 11", "FullName": "public void rotate (float rot, float x, float y, float z)"}, "loadOrtho(float,float,float,float,float,float)": {"Returns": [], "Parameters": [["float", "float: location of the left vertical clipping plane"], ["float", "float: location of the right vertical clipping plane"], ["float", "float: location of the bottom horizontal clipping plane"], ["float", "float: location of the top horizontal clipping plane"], ["float", "float: location of the near clipping plane"], ["float", "float: location of the far clipping plane"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set current values to be an orthographic projection matrix", "history": "Added in API level 11", "FullName": "public void loadOrtho (float l, float r, float b, float t, float n, float f)"}, "loadIdentity()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the matrix values to identity", "history": "Added in API level 11", "FullName": "public void loadIdentity ()"}, "loadPerspective(float, float, float, float)": {"Returns": [], "Parameters": [["float", "float: vertical field of view angle in degrees"], ["float", "float: aspect ratio of the screen"], ["float", "float: near cliping plane, must be positive"], ["float", "float: far clipping plane, must be positive"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets current values to be a perspective projection matrix", "history": "added in API level 11", "FullName": "public void loadPerspective (float fovy, float aspect, float near, float far)"}, "transpose()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the current matrix to its transpose", "history": "Added in API level 11", "FullName": "public void transpose ()"}, "get(int,int)": {"Returns": [["float", "value in the yth row and xth column"]], "Parameters": [["int", "int: column of the value to return"], ["int", "int: row of the value to return"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value for a given row and column", "history": "Added in API level 11", "FullName": "public float get (int x, int y)"}, "loadScale(float, float, float)": {"Returns": [], "Parameters": [["float", "float: scale component x"], ["float", "float: scale component y"], ["float", "float: scale component z"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets current values to be a scale matrix of given dimensions", "history": "added in API level 11", "FullName": "public void loadScale (float x, float y, float z)"}, "set(int,int,float)": {"Returns": [], "Parameters": [["int", "int: column of the value to set"], ["int", "int: row of the value to set"], ["float", "float no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the value for a given row and column", "history": "Added in API level 11", "FullName": "public void set (int x, int y, float v)"}, "translate(float, float, float)": {"Returns": [], "Parameters": [["float", "float: translation component x"], ["float", "float: translation component y"], ["float", "float: translation component z"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Modifies the current matrix by post-multiplying it with a translation matrix of given dimensions", "history": "added in API level 11", "FullName": "public void translate (float x, float y, float z)"}, "loadRotate(float,float,float,float)": {"Returns": [], "Parameters": [["float", "float: angle of rotation"], ["float", "float: rotation axis x"], ["float", "float: rotation axis y"], ["float", "float: rotation axis z"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets current values to be a rotation matrix of certain angle about a given axis", "history": "Added in API level 11", "FullName": "public void loadRotate (float rot, float x, float y, float z)"}, "loadTranslate(float,float,float)": {"Returns": [], "Parameters": [["float", "float: translation component x"], ["float", "float: translation component y"], ["float", "float: translation component z"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets current values to be a translation matrix of given dimensions", "history": "Added in API level 11", "FullName": "public void loadTranslate (float x, float y, float z)"}, "rotate(float, float, float, float)": {"Returns": [], "Parameters": [["float", "float: angle of rotation"], ["float", "float: rotation axis x"], ["float", "float: rotation axis y"], ["float", "float: rotation axis z"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Modifies the current matrix by post-multiplying it with a rotation matrix of certain angle about a given axis", "history": "added in API level 11", "FullName": "public void rotate (float rot, float x, float y, float z)"}, "set(int, int, float)": {"Returns": [], "Parameters": [["int", "int: column of the value to set"], ["int", "int: row of the value to set"], ["float", "float no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the value for a given row and column", "history": "added in API level 11", "FullName": "public void set (int x, int y, float v)"}, "inverse()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the current matrix to its inverse", "history": "Added in API level 11", "FullName": "public boolean inverse ()"}, "loadPerspective(float,float,float,float)": {"Returns": [], "Parameters": [["float", "float: vertical field of view angle in degrees"], ["float", "float: aspect ratio of the screen"], ["float", "float: near cliping plane, must be positive"], ["float", "float: far clipping plane, must be positive"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets current values to be a perspective projection matrix", "history": "Added in API level 11", "FullName": "public void loadPerspective (float fovy, float aspect, float near, float far)"}, "loadProjectionNormalized(int, int)": {"Returns": [], "Parameters": [["int", "int: screen width"], ["int", "int: screen height"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Helper function to set the current values to a perspective projection matrix with aspect ratio defined by the parameters and (near, far), (bottom, top) mapping to (-1, 1) at z = 0", "history": "added in API level 11", "FullName": "public void loadProjectionNormalized (int w, int h)"}, "loadOrthoWindow(int,int)": {"Returns": [], "Parameters": [["int", "int: location of the right vertical clipping plane"], ["int", "int: location of the bottom horizontal clipping plane"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set current values to be an orthographic projection matrix with the right and bottom clipping planes set to the given values. Left and top clipping planes are set to 0. Near and far are set to -1, 1 respectively", "history": "Added in API level 11", "FullName": "public void loadOrthoWindow (int w, int h)"}, "getArray()": {"Returns": [["float[]", "internal array representing the matrix"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a reference to the internal array representing matrix values. Modifying this array will also change the matrix", "history": "Added in API level 11", "FullName": "public float[] getArray ()"}, "Matrix4f(float[])": {"Returns": [], "Parameters": [["float[]", "float: values to set the matrix to, must be 16 floats long"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new matrix and sets its values from the given parameter", "history": "Added in API level 11", "FullName": "public Matrix4f (float[] dataArray)"}, "scale(float,float,float)": {"Returns": [], "Parameters": [["float", "float: scale component x"], ["float", "float: scale component y"], ["float", "float: scale component z"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Modifies the current matrix by post-multiplying it with a scale matrix of given dimensions", "history": "Added in API level 11", "FullName": "public void scale (float x, float y, float z)"}, "translate(float,float,float)": {"Returns": [], "Parameters": [["float", "float: translation component x"], ["float", "float: translation component y"], ["float", "float: translation component z"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Modifies the current matrix by post-multiplying it with a translation matrix of given dimensions", "history": "Added in API level 11", "FullName": "public void translate (float x, float y, float z)"}, "load(android.renderscript.Matrix4f)": {"Returns": [], "Parameters": [["@B_android#renderscript#Matrix4f_E@", "Matrix4f: matrix to load the values from"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the values of the matrix to those of the parameter", "history": "Added in API level 11", "FullName": "public void load (Matrix4f src)"}, "loadMultiply(android.renderscript.Matrix4f,android.renderscript.Matrix4f)": {"Returns": [], "Parameters": [["@B_android#renderscript#Matrix4f_E@", "Matrix4f: left hand side matrix"], ["@B_android#renderscript#Matrix4f_E@", "Matrix4f: right hand side matrix"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets current values to be the result of multiplying two given matrices", "history": "Added in API level 11", "FullName": "public void loadMultiply (Matrix4f lhs, Matrix4f rhs)"}, "loadProjectionNormalized(int,int)": {"Returns": [], "Parameters": [["int", "int: screen width"], ["int", "int: screen height"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Helper function to set the current values to a perspective projection matrix with aspect ratio defined by the parameters and (near, far), (bottom, top) mapping to (-1, 1) at z = 0", "history": "Added in API level 11", "FullName": "public void loadProjectionNormalized (int w, int h)"}, "loadOrthoWindow(int, int)": {"Returns": [], "Parameters": [["int", "int: location of the right vertical clipping plane"], ["int", "int: location of the bottom horizontal clipping plane"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set current values to be an orthographic projection matrix with the right and bottom clipping planes set to the given values. Left and top clipping planes are set to 0. Near and far are set to -1, 1 respectively", "history": "added in API level 11", "FullName": "public void loadOrthoWindow (int w, int h)"}, "loadScale(float,float,float)": {"Returns": [], "Parameters": [["float", "float: scale component x"], ["float", "float: scale component y"], ["float", "float: scale component z"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets current values to be a scale matrix of given dimensions", "history": "Added in API level 11", "FullName": "public void loadScale (float x, float y, float z)"}, "get(int, int)": {"Returns": [["float", "value in the yth row and xth column"]], "Parameters": [["int", "int: column of the value to return"], ["int", "int: row of the value to return"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value for a given row and column", "history": "added in API level 11", "FullName": "public float get (int x, int y)"}, "multiply(android.renderscript.Matrix4f)": {"Returns": [], "Parameters": [["@B_android#renderscript#Matrix4f_E@", "Matrix4f: right hand side to multiply by"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Post-multiplies the current matrix by a given parameter", "history": "Added in API level 11", "FullName": "public void multiply (Matrix4f rhs)"}, "scale(float, float, float)": {"Returns": [], "Parameters": [["float", "float: scale component x"], ["float", "float: scale component y"], ["float", "float: scale component z"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Modifies the current matrix by post-multiplying it with a scale matrix of given dimensions", "history": "added in API level 11", "FullName": "public void scale (float x, float y, float z)"}, "loadFrustum(float,float,float,float,float,float)": {"Returns": [], "Parameters": [["float", "float: location of the left vertical clipping plane"], ["float", "float: location of the right vertical clipping plane"], ["float", "float: location of the bottom horizontal clipping plane"], ["float", "float: location of the top horizontal clipping plane"], ["float", "float: location of the near clipping plane, must be positive"], ["float", "float: location of the far clipping plane, must be positive"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets current values to be a perspective projection matrix", "history": "Added in API level 11", "FullName": "public void loadFrustum (float l, float r, float b, float t, float n, float f)"}, "loadTranslate(float, float, float)": {"Returns": [], "Parameters": [["float", "float: translation component x"], ["float", "float: translation component y"], ["float", "float: translation component z"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets current values to be a translation matrix of given dimensions", "history": "added in API level 11", "FullName": "public void loadTranslate (float x, float y, float z)"}, "inverseTranspose()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the current matrix to its inverse transpose", "history": "Added in API level 11", "FullName": "public boolean inverseTranspose ()"}, "loadRotate(float, float, float, float)": {"Returns": [], "Parameters": [["float", "float: angle of rotation"], ["float", "float: rotation axis x"], ["float", "float: rotation axis y"], ["float", "float: rotation axis z"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets current values to be a rotation matrix of certain angle about a given axis", "history": "added in API level 11", "FullName": "public void loadRotate (float rot, float x, float y, float z)"}, "Matrix4f()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new identity 4x4 matrix", "history": "Added in API level 11", "FullName": "public Matrix4f ()"}}, "Inheritance": [], "ClassName": "android.renderscript.Matrix4f", "ClassDesc": "Class for exposing the native RenderScript rs_matrix4x4 type back to the Android system. * @apiSince 11"}