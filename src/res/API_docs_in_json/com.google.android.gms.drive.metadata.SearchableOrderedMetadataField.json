{"Functions": {}, "Inheritance": [], "ClassName": "com.google.android.gms.drive.metadata.SearchableOrderedMetadataField<T>", "ClassDesc": "Interface for metadata fields which holds an ordered value (such as a date) and which can be used for range queries. Implementations of this interface (such as the static values in @B_com#google#android#gms#drive#query#SearchableField_E@) can be used to create inequality filters for file queries. For example, the following code will find all files that were modified in the last hour with the MIME type \"text/plain\": Date oneHourAgo = new Date(System.currentTimeMillis() - (60 * 60 * 1000)); Filter dateFilter = Filters.greaterThan(SearchableField.MODIFIED_DATE, oneHourAgo); Filter mimeTypeFilter = Filters.eq(SearchableField.MIME_TYPE, \"text/plain\"); Query query = new Query.Builder().addFilters(dateFilter, mimeTypeFilter).build(); for (Metadata metadata : Drive.DriveApi.query(apiClient, query).await().getMetadataBuffer()) { System.out.println(metadata.getTitle()); } Note that you must pass an @B_com#google#android#gms#drive#metadata#SearchableOrderedMetadataField_E@ to the @B_com#google#android#gms#drive#query#Filters#greaterThan_E@, @B_com#google#android#gms#drive#query#Filters#lessThan_E@, @B_com#google#android#gms#drive#query#Filters#lessThanEquals_E@, or @B_com#google#android#gms#drive#query#Filters#greaterThanEquals_E@ methods; a plain @B_com#google#android#gms#drive#metadata#SearchableMetadataField_E@ cannot be used as part of an inequality query. However, every @B_com#google#android#gms#drive#metadata#SearchableOrderedMetadataField_E@ is also a @B_com#google#android#gms#drive#metadata#SearchableMetadataField_E@, so you can use a @B_com#google#android#gms#drive#metadata#SearchableOrderedMetadataField_E@ with @B_com#google#android#gms#drive#query#Filters#eq_E@ (for example, if you want to find a file that was modified at an exact time)."}