{"Functions": {"isCircularScrollingGestureEnabled()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#wear#widget#WearableRecyclerView#setCircularScrollingGestureEnabled_E@"], "Permissions": [], "Description": "Returns whether circular scrolling is enabled for this view.", "history": "added in version 26.0.0-beta1", "FullName": "boolean isCircularScrollingGestureEnabled ()"}, "setBezelFraction(float)": {"Returns": [], "Parameters": [["float", "float no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Taps within this radius and the radius of the screen are considered close enough to the bezel to be candidates for circular scrolling. Expressed as a fraction of the screen's radius. The default is the whole screen i.e 1.0f.", "history": "added in version 26.0.0-beta1", "FullName": "void setBezelFraction (float fraction)"}, "setScrollDegreesPerScreen(float)": {"Returns": [], "Parameters": [["float", "float: the number of degrees to rotate by to scroll through one whole height of the screen,"]], "Throws": [], "SeeAlso": ["@B_android#support#wear#widget#WearableRecyclerView#setCircularScrollingGestureEnabled_E@"], "Permissions": [], "Description": "Sets how many degrees the user has to rotate by to scroll through one screen height when they are using the circular scrolling gesture.The default value equates 180 degrees scroll to one screen.", "history": "added in version 26.0.0-beta1", "FullName": "void setScrollDegreesPerScreen (float degreesPerScreen)"}, "setCircularScrollingGestureEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#support#wear#widget#WearableRecyclerView#setScrollDegreesPerScreen_E@", "@B_android#support#wear#widget#WearableRecyclerView#setBezelFraction_E@"], "Permissions": [], "Description": "Enables/disables circular touch scrolling for this view. When enabled, circular touch gestures around the edge of the screen will cause the view to scroll up or down. Related methods let you specify the characteristics of the scrolling, like the speed of the scroll or the are considered for the start of this scrolling gesture.", "history": "added in version 26.0.0-beta1", "FullName": "void setCircularScrollingGestureEnabled (boolean circularScrollingGestureEnabled)"}, "onAttachedToWindow()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This is called when the view is attached to a window. At this point it has a Surface and will start drawing. Note that this function is guaranteed to be called before @B_android#view#View#onDraw_E@, however it may be called any time before the first onDraw -- including before or after @B_android#view#View#onMeasure_E@.", "history": "", "FullName": "void onAttachedToWindow ()"}, "getBezelFraction()": {"Returns": [["float", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#wear#widget#WearableRecyclerView#setBezelFraction_E@"], "Permissions": [], "Description": "Returns the current bezel width for circular scrolling as a fraction of the screen's radius.", "history": "added in version 26.0.0-beta1", "FullName": "float getBezelFraction ()"}, "onTouchEvent(android.view.MotionEvent)": {"Returns": [["boolean", "True if the event was handled, false otherwise."]], "Parameters": [["@B_android#view#MotionEvent_E@", "MotionEvent: The motion event."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Implement this method to handle touch screen motion events. If this method is used to detect click actions, it is recommended that the actions be performed by implementing and calling @B_android#view#View#performClick_E@. This will ensure consistent system behavior, including: obeying click sound preferences dispatching OnClickListener calls handling @B_android#view#accessibility#AccessibilityNodeInfo#ACTION_CLICK_E@ when accessibility features are enabled", "history": "", "FullName": "boolean onTouchEvent (MotionEvent event)"}, "setEdgeItemsCenteringEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: set to true if you wish to align the edge children (first and last) with the center of the screen."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use this method to configure the @B_android#support#wear#widget#WearableRecyclerView_E@ to always align the first and last items with the vertical center of the screen. This effectively moves the start and end of the list to the middle of the screen if the user has scrolled so far. It takes the height of the children into account so that they are correctly centered.", "history": "added in version 26.0.0-beta1", "FullName": "void setEdgeItemsCenteringEnabled (boolean isEnabled)"}, "isEdgeItemsCenteringEnabled()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether the view is currently configured to center the edge children. See @B_android#support#wear#widget#WearableRecyclerView#setEdgeItemsCenteringEnabled_E@ for details.", "history": "added in version 26.0.0-beta1", "FullName": "boolean isEdgeItemsCenteringEnabled ()"}, "onDetachedFromWindow()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This is called when the view is detached from a window. At this point it no longer has a surface for drawing.", "history": "", "FullName": "void onDetachedFromWindow ()"}, "getScrollDegreesPerScreen()": {"Returns": [["float", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#wear#widget#WearableRecyclerView#setCircularScrollingGestureEnabled_E@", "@B_android#support#wear#widget#WearableRecyclerView#setScrollDegreesPerScreen_E@"], "Permissions": [], "Description": "Returns how many degrees does the user have to rotate for to scroll through one screen height.", "history": "added in version 26.0.0-beta1", "FullName": "float getScrollDegreesPerScreen ()"}, "WearableRecyclerView(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 26.0.0-beta1", "FullName": "WearableRecyclerView (Context context)"}}, "Inheritance": ["java.lang.Object", "https:##developer#android#com@B_android#view#View_E@", "https:##developer#android#com@B_android#view#ViewGroup_E@", "@B_android#support#v7#widget#RecyclerView_E@"], "ClassName": "android.support.wear.widget.WearableRecyclerView", "ClassDesc": "Wearable specific implementation of the @B_android#support#v7#widget#RecyclerView_E@ enabling @B_android#support#wear#widget#WearableRecyclerView#setCircularScrollingGestureEnabled_E@ circular scrolling} and semi-circular layouts."}