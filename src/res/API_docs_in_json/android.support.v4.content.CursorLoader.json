{"Functions": {"onStopLoading()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Must be called from the UI thread", "history": "added in version 22.0.0", "FullName": "void onStopLoading ()"}, "cancelLoadInBackground()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called on the main thread to abort a load in progress. Override this method to abort the current invocation of @B_android#support#v4#content#AsyncTaskLoader#loadInBackground_E@ that is running in the background on a worker thread. This method should do nothing if @B_android#support#v4#content#AsyncTaskLoader#loadInBackground_E@ has not started running or if it has already finished.", "history": "added in version 23.0.0", "FullName": "void cancelLoadInBackground ()"}, "setProjection(java.lang.String[])": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "void setProjection (String[] projection)"}, "loadInBackground()": {"Returns": [["@B_android#database#Cursor_E@", "The result of the load operation."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called on a worker thread to perform the actual load and to return the result of the load operation. Implementations should not deliver the result directly, but should return them from this method, which will eventually end up calling @B_android#support#v4#content#Loader#deliverResult_E@ on the UI thread. If implementations need to process the results on the UI thread they may override @B_android#support#v4#content#Loader#deliverResult_E@ and do so there. To support cancellation, this method should periodically check the value of @B_android#support#v4#content#AsyncTaskLoader#isLoadInBackgroundCanceled_E@ and terminate when it returns true. Subclasses may also override @B_android#support#v4#content#AsyncTaskLoader#cancelLoadInBackground_E@ to interrupt the load directly instead of polling @B_android#support#v4#content#AsyncTaskLoader#isLoadInBackgroundCanceled_E@. When the load is canceled, this method may either return normally or throw @B_android#support#v4#os#OperationCanceledException_E@. In either case, the @B_android#support#v4#content#Loader_E@ will call @B_android#support#v4#content#AsyncTaskLoader#onCanceled_E@ to perform post-cancellation cleanup and to dispose of the result object, if any.", "history": "added in version 22.0.0", "FullName": "Cursor loadInBackground ()"}, "deliverResult(android.database.Cursor)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: the result of the load"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sends the result of the load to the registered listener. Should only be called by subclasses. Must be called from the process's main thread.", "history": "added in version 22.0.0", "FullName": "void deliverResult (Cursor cursor)"}, "setSortOrder(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "void setSortOrder (String sortOrder)"}, "onReset()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Subclasses must implement this to take care of resetting their loader, as per @B_android#support#v4#content#Loader#reset_E@. This is not called by clients directly, but as a result of a call to @B_android#support#v4#content#Loader#reset_E@. This will always be called from the process's main thread.", "history": "added in version 22.0.0", "FullName": "void onReset ()"}, "setSelection(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "void setSelection (String selection)"}, "getSelectionArgs()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "String[] getSelectionArgs ()"}, "CursorLoader(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an empty unspecified CursorLoader. You must follow this with calls to @B_android#support#v4#content#CursorLoader#setUri_E@, @B_android#support#v4#content#CursorLoader#setSelection_E@, etc to specify the query to perform.", "history": "added in version 22.0.0", "FullName": "CursorLoader (Context context)"}, "getSortOrder()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "String getSortOrder ()"}, "setUri(android.net.Uri)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "void setUri (Uri uri)"}, "getProjection()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "String[] getProjection ()"}, "getUri()": {"Returns": [["@B_android#net#Uri_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "Uri getUri ()"}, "onStartLoading()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Starts an asynchronous load of the contacts list data. When the result is ready the callbacks will be called on the UI thread. If a previous load has been completed and is still valid the result may be passed to the callbacks immediately. Must be called from the UI thread", "history": "added in version 22.0.0", "FullName": "void onStartLoading ()"}, "setSelectionArgs(java.lang.String[])": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "void setSelectionArgs (String[] selectionArgs)"}, "getSelection()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "String getSelection ()"}, "onCanceled(android.database.Cursor)": {"Returns": [], "Parameters": [["@B_android#database#Cursor_E@", "Cursor: The value that was returned by @B_android#support#v4#content#CursorLoader#loadInBackground_E@, or null if the task threw @B_android#support#v4#os#OperationCanceledException_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called if the task was canceled before it was completed. Gives the class a chance to clean up post-cancellation and to properly dispose of the result.", "history": "added in version 22.0.0", "FullName": "void onCanceled (Cursor cursor)"}}, "Inheritance": ["java.lang.Object", "@B_android#support#v4#content#Loader_E@", "@B_android#support#v4#content#AsyncTaskLoader_E@"], "ClassName": "android.support.v4.content.CursorLoader", "ClassDesc": "Static library support version of the framework's https:##developer#android#com@B_android#content#CursorLoader_E@. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview."}