{"Functions": {"decode(java.lang.String,java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "the newly decoded String"]], "Parameters": [["@B_java#lang#String_E@", "String: the String to decode"], ["@B_java#lang#String_E@", "String: The name of a supported character encoding."]], "Throws": [["@B_java#io#UnsupportedEncodingException_E@", "If character encoding needs to be consulted, but named character encoding is not supported"]], "SeeAlso": ["@B_java#net#URLEncoder#encode_E@"], "Permissions": [], "Description": "Decodes a application/x-www-form-urlencoded string using a specific encoding scheme. The supplied encoding is used to determine what characters are represented by any consecutive sequences of the form \"", "history": "Added in API level 1", "FullName": "public static String decode (String s, String enc)"}, "URLDecoder()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public URLDecoder ()"}, "decode(java.lang.String, java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "the newly decoded String"]], "Parameters": [["@B_java#lang#String_E@", "String: the String to decode"], ["@B_java#lang#String_E@", "String: The name of a supported character encoding."]], "Throws": [["@B_java#io#UnsupportedEncodingException_E@", "If character encoding needs to be consulted, but named character encoding is not supported"]], "SeeAlso": ["@B_java#net#URLEncoder#encode_E@"], "Permissions": [], "Description": "Decodes a application/x-www-form-urlencoded string using a specific encoding scheme. The supplied encoding is used to determine what characters are represented by any consecutive sequences of the form \"", "history": "added in API level 1", "FullName": "public static String decode (String s, String enc)"}, "decode(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "the newly decoded String"]], "Parameters": [["@B_java#lang#String_E@", "String: the String to decode"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The resulting string may vary depending on the platform's default encoding. Instead, use the decode(String,String) method to specify the encoding. Decodes a x-www-form-urlencoded string. The platform's default encoding is used to determine what characters are represented by any consecutive sequences of the form \"", "history": "Added in API level 1 Deprecated in API level 15", "FullName": "public static String decode (String s)"}}, "Inheritance": [], "ClassName": "java.net.URLDecoder", "ClassDesc": "Utility class for HTML form decoding. This class contains static methods for decoding a String from the application/x-www-form-urlencoded MIME format. The conversion process is the reverse of that used by the URLEncoder class. It is assumed that all characters in the encoded string are one of the following: \"a\" through \"z\", \"A\" through \"Z\", \"0\" through \"9\", and \"-\", \"_\", \".\", and \"*\". The character \"%\" is allowed but is interpreted as the start of a special escaped sequence. The following rules are applied in the conversion: The alphanumeric characters \"a\" through \"z\", \"A\" through \"Z\" and \"0\" through \"9\" remain the same. The special characters \".\", \"-\", \"*\", and \"_\" remain the same. The plus sign \"+\" is converted into a space character \" \" . A sequence of the form \" There are two possible ways in which this decoder could deal with illegal strings. It could either leave illegal characters alone or it could throw an @B_java#lang#IllegalArgumentException_E@. Which approach the decoder takes is left to the implementation."}