{"Functions": {"remove()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes from the underlying collection the last element returned by this iterator (optional operation). This method can be called only once per call to @B_java#util#Iterator#next_E@. The behavior of an iterator is unspecified if the underlying collection is modified while the iteration is in progress in any way other than by calling this method.", "history": "Added in API level 1", "FullName": "public void remove ()"}, "TextUtils.SimpleStringSplitter(char)": {"Returns": [], "Parameters": [["char", "char: the delimeter on which to split"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Initializes the splitter. setString may be called later.", "history": "Added in API level 1", "FullName": "public TextUtils.SimpleStringSplitter (char delimiter)"}, "iterator()": {"Returns": [["@B_java#util#Iterator_E@", "an Iterator."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an iterator over elements of type T.", "history": "Added in API level 1", "FullName": "public Iterator<String> iterator ()"}, "next()": {"Returns": [["@B_java#lang#String_E@", "the next element in the iteration"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the next element in the iteration.", "history": "Added in API level 1", "FullName": "public String next ()"}, "setString(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the string to split"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the string to split", "history": "Added in API level 1", "FullName": "public void setString (String string)"}, "hasNext()": {"Returns": [["boolean", "true if the iteration has more elements"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the iteration has more elements. (In other words, returns true if @B_java#util#Iterator#next_E@ would return an element rather than throwing an exception.)", "history": "Added in API level 1", "FullName": "public boolean hasNext ()"}}, "Inheritance": [], "ClassName": "android.text.TextUtils.SimpleStringSplitter", "ClassDesc": "A simple string splitter. If the final character in the string to split is the delimiter then no empty string will be returned for the empty string after that delimeter. That is, splitting"}