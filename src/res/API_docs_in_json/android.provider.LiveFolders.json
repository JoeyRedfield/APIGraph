{"Functions": {}, "Inheritance": [], "ClassName": "android.provider.LiveFolders", "ClassDesc": "Live folders are no longer supported by Android. These have been replaced by the new @B_android#os#Build#VERSION_CODES#HONEYCOMB_E@. These provide all of the features of live folders plus many more. The use of live folders is greatly discouraged because of security issues they introduce -- publishing a live folder requires making all data show for the live folder available to all applications with no permissions protecting it. A LiveFolder is a special folder whose content is provided by a @B_android#content#ContentProvider_E@. To create a live folder, two components are required: An activity that can respond to the intent action @B_android#provider#LiveFolders#ACTION_CREATE_LIVE_FOLDER_E@. The activity is responsible for creating the live folder. A @B_android#content#ContentProvider_E@ to provide the live folder items. When a user wants to create a live folder, the system looks for all activities with the intent filter action @B_android#provider#LiveFolders#ACTION_CREATE_LIVE_FOLDER_E@ and presents the list to the user. When the user chooses one of the activities, the activity is invoked with the @B_android#provider#LiveFolders#ACTION_CREATE_LIVE_FOLDER_E@ action. The activity then creates the live folder and passes it back to the system by setting it as an @B_android#app#Activity#setResult_E@. The live folder is described by a content provider URI, a name, an icon and a display mode. Finally, when the user opens the live folder, the system queries the content provider to retrieve the folder's content. The following code sample shows how to write an activity that creates a live folder: The live folder is described by an @B_android#content#Intent_E@ as follows: The live folder's content provider must, upon query, return a @B_android#database#Cursor_E@ whose columns match the following names:"}