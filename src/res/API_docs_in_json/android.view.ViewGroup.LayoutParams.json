{"Functions": {"ViewGroup.LayoutParams(int,int)": {"Returns": [], "Parameters": [["int", "int: the width, either @B_android#view#ViewGroup#LayoutParams#WRAP_CONTENT_E@, @B_android#view#ViewGroup#LayoutParams#FILL_PARENT_E@ (replaced by @B_android#view#ViewGroup#LayoutParams#MATCH_PARENT_E@ in API Level 8), or a fixed size in pixels"], ["int", "int: the height, either @B_android#view#ViewGroup#LayoutParams#WRAP_CONTENT_E@, @B_android#view#ViewGroup#LayoutParams#FILL_PARENT_E@ (replaced by @B_android#view#ViewGroup#LayoutParams#MATCH_PARENT_E@ in API Level 8), or a fixed size in pixels"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new set of layout parameters with the specified width and height.", "history": "Added in API level 1", "FullName": "public ViewGroup.LayoutParams (int width, int height)"}, "ViewGroup.LayoutParams(android.view.ViewGroup.LayoutParams)": {"Returns": [], "Parameters": [["@B_android#view#ViewGroup#LayoutParams_E@", "ViewGroup.LayoutParams: The layout params to copy from."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Copy constructor. Clones the width and height values of the source.", "history": "Added in API level 1", "FullName": "public ViewGroup.LayoutParams (ViewGroup.LayoutParams source)"}, "ViewGroup.LayoutParams(int, int)": {"Returns": [], "Parameters": [["int", "int: the width, either @B_android#view#ViewGroup#LayoutParams#WRAP_CONTENT_E@, @B_android#view#ViewGroup#LayoutParams#FILL_PARENT_E@ (replaced by @B_android#view#ViewGroup#LayoutParams#MATCH_PARENT_E@ in API Level 8), or a fixed size in pixels"], ["int", "int: the height, either @B_android#view#ViewGroup#LayoutParams#WRAP_CONTENT_E@, @B_android#view#ViewGroup#LayoutParams#FILL_PARENT_E@ (replaced by @B_android#view#ViewGroup#LayoutParams#MATCH_PARENT_E@ in API Level 8), or a fixed size in pixels"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new set of layout parameters with the specified width and height.", "history": "added in API level 1", "FullName": "public ViewGroup.LayoutParams (int width, int height)"}, "ViewGroup.LayoutParams(android.content.Context,android.util.AttributeSet)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: the application environment"], ["@B_android#util#AttributeSet_E@", "AttributeSet: the set of attributes from which to extract the layout parameters' values"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new set of layout parameters. The values are extracted from the supplied attributes set and context. The XML attributes mapped to this set of layout parameters are: layout_width: the width, either an exact value, @B_android#view#ViewGroup#LayoutParams#WRAP_CONTENT_E@, or @B_android#view#ViewGroup#LayoutParams#FILL_PARENT_E@ (replaced by @B_android#view#ViewGroup#LayoutParams#MATCH_PARENT_E@ in API Level 8) layout_height: the height, either an exact value, @B_android#view#ViewGroup#LayoutParams#WRAP_CONTENT_E@, or @B_android#view#ViewGroup#LayoutParams#FILL_PARENT_E@ (replaced by @B_android#view#ViewGroup#LayoutParams#MATCH_PARENT_E@ in API Level 8)", "history": "Added in API level 1", "FullName": "public ViewGroup.LayoutParams (Context c, AttributeSet attrs)"}, "setBaseAttributes(android.content.res.TypedArray,int,int)": {"Returns": [], "Parameters": [["@B_android#content#res#TypedArray_E@", "TypedArray: the style attributes to extract the parameters from"], ["int", "int: the identifier of the width attribute"], ["int", "int: the identifier of the height attribute"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Extracts the layout parameters from the supplied attributes.", "history": "Added in API level 1", "FullName": "protected void setBaseAttributes (TypedArray a, int widthAttr, int heightAttr)"}, "resolveLayoutDirection(int)": {"Returns": [], "Parameters": [["int", "int: the direction of the layout @B_android#view#View#LAYOUT_DIRECTION_LTR_E@ @B_android#view#View#LAYOUT_DIRECTION_RTL_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Resolve layout parameters depending on the layout direction. Subclasses that care about layoutDirection changes should override this method. The default implementation does nothing.", "history": "Added in API level 17", "FullName": "public void resolveLayoutDirection (int layoutDirection)"}}, "Inheritance": [], "ClassName": "android.view.ViewGroup.LayoutParams", "ClassDesc": "LayoutParams are used by views to tell their parents how they want to be laid out. See @B_android#R#styleable#ViewGroup_Layout_E@ for a list of all child view attributes that this class supports. The base LayoutParams class just describes how big the view wants to be for both width and height. For each dimension, it can specify one of: FILL_PARENT (renamed MATCH_PARENT in API Level 8 and higher), which means that the view wants to be as big as its parent (minus padding) WRAP_CONTENT, which means that the view wants to be just big enough to enclose its content (plus padding) an exact number There are subclasses of LayoutParams for different subclasses of ViewGroup. For example, AbsoluteLayout has its own subclass of LayoutParams which adds an X and Y value."}