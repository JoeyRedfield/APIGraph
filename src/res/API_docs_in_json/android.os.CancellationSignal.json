{"Functions": {"cancel()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Cancels the operation and signals the cancellation listener. If the operation has not yet started, then it will be canceled as soon as it does.", "history": "Added in API level 16", "FullName": "public void cancel ()"}, "CancellationSignal()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a cancellation signal, initially not canceled.", "history": "Added in API level 16", "FullName": "public CancellationSignal ()"}, "setOnCancelListener(android.os.CancellationSignal.OnCancelListener)": {"Returns": [], "Parameters": [["@B_android#os#CancellationSignal#OnCancelListener_E@", "CancellationSignal.OnCancelListener: The cancellation listener, or null to remove the current listener."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the cancellation listener to be called when canceled. This method is intended to be used by the recipient of a cancellation signal such as a database or a content provider to handle cancellation requests while performing a long-running operation. This method is not intended to be used by applications themselves. If @B_android#os#CancellationSignal#cancel_E@ has already been called, then the provided listener is invoked immediately. This method is guaranteed that the listener will not be called after it has been removed.", "history": "Added in API level 16", "FullName": "public void setOnCancelListener (CancellationSignal.OnCancelListener listener)"}, "throwIfCanceled()": {"Returns": [], "Parameters": [], "Throws": [["@B_android#os#OperationCanceledException_E@", "if the operation has been canceled."]], "SeeAlso": [], "Permissions": [], "Description": "Throws @B_android#os#OperationCanceledException_E@ if the operation has been canceled.", "history": "Added in API level 16", "FullName": "public void throwIfCanceled ()"}, "isCanceled()": {"Returns": [["boolean", "True if the operation has been canceled."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the operation has been canceled.", "history": "Added in API level 16", "FullName": "public boolean isCanceled ()"}}, "Inheritance": [], "ClassName": "android.os.CancellationSignal", "ClassDesc": "Provides the ability to cancel an operation in progress."}