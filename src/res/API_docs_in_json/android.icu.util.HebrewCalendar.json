{"Functions": {"handleComputeMonthStart(int, int, boolean)": {"Returns": [["int", "the Julian day number of the day before the first day of the given month and year"]], "Parameters": [["int", "int: the extended year"], ["int", "int: the zero-based month, or 0 if useMonth is false"], ["boolean", "boolean: if false, compute the day before the first day of the given year, otherwise, compute the day before the first day of the given month"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return JD of start of given month/year.", "history": "added in API level 24", "FullName": "protected int handleComputeMonthStart (int eyear, int month, boolean useMonth)"}, "HebrewCalendar(android.icu.util.TimeZone,java.util.Locale)": {"Returns": [], "Parameters": [["@B_android#icu#util#TimeZone_E@", "TimeZone: The time zone for the new calendar."], ["@B_java#util#Locale_E@", "Locale: The locale for the new calendar."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a HebrewCalendar based on the current time in the given time zone with the given locale.", "history": "Added in API level 24", "FullName": "public HebrewCalendar (TimeZone zone, Locale aLocale)"}, "handleGetMonthLength(int,int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the length of the given month in the given year", "history": "Added in API level 24", "FullName": "protected int handleGetMonthLength (int extendedYear, int month)"}, "HebrewCalendar(int,int,int,int,int,int)": {"Returns": [], "Parameters": [["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#YEAR_E@ time field."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#MONTH_E@ time field. The value is 0-based. e.g., 0 for Tishri."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#DATE_E@ time field."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#HOUR_OF_DAY_E@ time field."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#MINUTE_E@ time field."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#SECOND_E@ time field."]], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Constructs a HebrewCalendar with the given date and time set for the default time zone with the default FORMAT locale.", "history": "Added in API level 24", "FullName": "public HebrewCalendar (int year, int month, int date, int hour, int minute, int second)"}, "HebrewCalendar(int, int, int, int, int, int)": {"Returns": [], "Parameters": [["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#YEAR_E@ time field."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#MONTH_E@ time field. The value is 0-based. e.g., 0 for Tishri."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#DATE_E@ time field."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#HOUR_OF_DAY_E@ time field."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#MINUTE_E@ time field."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#SECOND_E@ time field."]], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Constructs a HebrewCalendar with the given date and time set for the default time zone with the default FORMAT locale.", "history": "added in API level 24", "FullName": "public HebrewCalendar (int year, int month, int date, int hour, int minute, int second)"}, "roll(int, int)": {"Returns": [], "Parameters": [["int", "int: the time field."], ["int", "int: the amount by which the field should be rolled."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the field is invalid or refers to a field that cannot be handled by this method."]], "SeeAlso": [], "Permissions": [], "Description": "Rolls (up/down) a specified amount time on the given field. For example, to roll the current date up by three days, you can call roll(Calendar.DATE, 3). If the field is rolled past its maximum allowable value, it will \"wrap\" back to its minimum and continue rolling. For example, calling roll(Calendar.DATE, 10) on a Hebrew calendar set to \"25 Av 5758\" will result in the date \"5 Av 5758\". When rolling certain fields, the values of other fields may conflict and need to be changed. For example, when rolling the @B_android#icu#util#Calendar#MONTH_E@ field upward by one for the date \"30 Av 5758\", the @B_android#icu#util#Calendar#DAY_OF_MONTH_E@ field must be adjusted so that the result is \"29 Elul 5758\" rather than the invalid \"30 Elul\". This method is able to roll all fields except for @B_android#icu#util#Calendar#ERA_E@, @B_android#icu#util#Calendar#DST_OFFSET_E@, and @B_android#icu#util#Calendar#ZONE_OFFSET_E@. Subclasses may, of course, add support for additional fields in their overrides of roll. @B_android#icu#util#HebrewCalendar#add_E@ rather than attempting to perform arithmetic operations directly on the fields of a @B_android#icu#util#Calendar#MONTH_E@ field behaves discontinuously in non-leap years, simple arithmetic can give invalid results.", "history": "added in API level 24", "FullName": "public void roll (int field, int amount)"}, "HebrewCalendar(int, int, int)": {"Returns": [], "Parameters": [["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#YEAR_E@ time field."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#MONTH_E@ time field. The value is 0-based. e.g., 0 for Tishri."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#DATE_E@ time field."]], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Constructs a HebrewCalendar with the given date set in the default time zone with the default FORMAT locale.", "history": "added in API level 24", "FullName": "public HebrewCalendar (int year, int month, int date)"}, "HebrewCalendar(android.icu.util.TimeZone)": {"Returns": [], "Parameters": [["@B_android#icu#util#TimeZone_E@", "TimeZone: The time zone for the new calendar."]], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Constructs a HebrewCalendar based on the current time in the given time zone with the default FORMAT locale.", "history": "Added in API level 24", "FullName": "public HebrewCalendar (TimeZone zone)"}, "HebrewCalendar(android.icu.util.TimeZone,android.icu.util.ULocale)": {"Returns": [], "Parameters": [["@B_android#icu#util#TimeZone_E@", "TimeZone: The time zone for the new calendar."], ["@B_android#icu#util#ULocale_E@", "ULocale: The locale for the new calendar."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a HebrewCalendar based on the current time in the given time zone with the given locale.", "history": "Added in API level 24", "FullName": "public HebrewCalendar (TimeZone zone, ULocale locale)"}, "add(int, int)": {"Returns": [], "Parameters": [["int", "int: the time field."], ["int", "int: the amount to add to the field."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the field is invalid or refers to a field that cannot be handled by this method."]], "SeeAlso": [], "Permissions": [], "Description": "Add a signed amount to a specified field, using this calendar's rules. For example, to add three days to the current date, you can call add(Calendar.DATE, 3). When adding to certain fields, the values of other fields may conflict and need to be changed. For example, when adding one to the @B_android#icu#util#Calendar#MONTH_E@ field for the date \"30 Av 5758\", the @B_android#icu#util#Calendar#DAY_OF_MONTH_E@ field must be adjusted so that the result is \"29 Elul 5758\" rather than the invalid \"30 Elul 5758\". This method is able to add to all fields except for @B_android#icu#util#Calendar#ERA_E@, @B_android#icu#util#Calendar#DST_OFFSET_E@, and @B_android#icu#util#Calendar#ZONE_OFFSET_E@. @B_android#icu#util#Calendar#roll_E@ and add rather than attempting to perform arithmetic operations directly on the fields of a @B_android#icu#util#Calendar#MONTH_E@ field behaves discontinuously in non-leap years, simple arithmetic can give invalid results.", "history": "added in API level 24", "FullName": "public void add (int field, int amount)"}, "handleGetLimit(int, int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int: one of the above field numbers"], ["int", "int: one of MINIMUM, GREATEST_MINIMUM, LEAST_MAXIMUM, or MAXIMUM"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Subclass API for defining limits of different types. Subclasses must implement this method to return limits for the following fields:", "history": "added in API level 24", "FullName": "protected int handleGetLimit (int field, int limitType)"}, "HebrewCalendar(java.util.Date)": {"Returns": [], "Parameters": [["@B_java#util#Date_E@", "Date: The date to which the new calendar is set."]], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Constructs a HebrewCalendar with the given date set in the default time zone with the default FORMAT locale.", "history": "Added in API level 24", "FullName": "public HebrewCalendar (Date date)"}, "handleGetLimit(int,int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int: one of the above field numbers"], ["int", "int: one of MINIMUM, GREATEST_MINIMUM, LEAST_MAXIMUM, or MAXIMUM"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Subclass API for defining limits of different types. Subclasses must implement this method to return limits for the following fields:", "history": "Added in API level 24", "FullName": "protected int handleGetLimit (int field, int limitType)"}, "handleGetExtendedYear()": {"Returns": [["int", "the extended year"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the extended year defined by the current fields. This will use the EXTENDED_YEAR field or the YEAR and supra-year fields (such as ERA) specific to the calendar system, depending on which set of fields is newer.", "history": "Added in API level 24", "FullName": "protected int handleGetExtendedYear ()"}, "roll(int,int)": {"Returns": [], "Parameters": [["int", "int: the time field."], ["int", "int: the amount by which the field should be rolled."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the field is invalid or refers to a field that cannot be handled by this method."]], "SeeAlso": [], "Permissions": [], "Description": "Rolls (up/down) a specified amount time on the given field. For example, to roll the current date up by three days, you can call roll(Calendar.DATE, 3). If the field is rolled past its maximum allowable value, it will \"wrap\" back to its minimum and continue rolling. For example, calling roll(Calendar.DATE, 10) on a Hebrew calendar set to \"25 Av 5758\" will result in the date \"5 Av 5758\". When rolling certain fields, the values of other fields may conflict and need to be changed. For example, when rolling the @B_android#icu#util#Calendar#MONTH_E@ field upward by one for the date \"30 Av 5758\", the @B_android#icu#util#Calendar#DAY_OF_MONTH_E@ field must be adjusted so that the result is \"29 Elul 5758\" rather than the invalid \"30 Elul\". This method is able to roll all fields except for @B_android#icu#util#Calendar#ERA_E@, @B_android#icu#util#Calendar#DST_OFFSET_E@, and @B_android#icu#util#Calendar#ZONE_OFFSET_E@. Subclasses may, of course, add support for additional fields in their overrides of roll. @B_android#icu#util#HebrewCalendar#add_E@ rather than attempting to perform arithmetic operations directly on the fields of a @B_android#icu#util#Calendar#MONTH_E@ field behaves discontinuously in non-leap years, simple arithmetic can give invalid results.", "history": "Added in API level 24", "FullName": "public void roll (int field, int amount)"}, "HebrewCalendar(int,int,int)": {"Returns": [], "Parameters": [["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#YEAR_E@ time field."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#MONTH_E@ time field. The value is 0-based. e.g., 0 for Tishri."], ["int", "int: The value used to set the calendar's @B_android#icu#util#Calendar#DATE_E@ time field."]], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Constructs a HebrewCalendar with the given date set in the default time zone with the default FORMAT locale.", "history": "Added in API level 24", "FullName": "public HebrewCalendar (int year, int month, int date)"}, "HebrewCalendar()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#icu#util#ULocale#Category_E@"], "Permissions": [], "Description": "Constructs a default HebrewCalendar using the current time in the default time zone with the default FORMAT locale.", "history": "Added in API level 24", "FullName": "public HebrewCalendar ()"}, "handleGetYearLength(int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of days in the given Hebrew year", "history": "Added in API level 24", "FullName": "protected int handleGetYearLength (int eyear)"}, "add(int,int)": {"Returns": [], "Parameters": [["int", "int: the time field."], ["int", "int: the amount to add to the field."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the field is invalid or refers to a field that cannot be handled by this method."]], "SeeAlso": [], "Permissions": [], "Description": "Add a signed amount to a specified field, using this calendar's rules. For example, to add three days to the current date, you can call add(Calendar.DATE, 3). When adding to certain fields, the values of other fields may conflict and need to be changed. For example, when adding one to the @B_android#icu#util#Calendar#MONTH_E@ field for the date \"30 Av 5758\", the @B_android#icu#util#Calendar#DAY_OF_MONTH_E@ field must be adjusted so that the result is \"29 Elul 5758\" rather than the invalid \"30 Elul 5758\". This method is able to add to all fields except for @B_android#icu#util#Calendar#ERA_E@, @B_android#icu#util#Calendar#DST_OFFSET_E@, and @B_android#icu#util#Calendar#ZONE_OFFSET_E@. @B_android#icu#util#Calendar#roll_E@ and add rather than attempting to perform arithmetic operations directly on the fields of a @B_android#icu#util#Calendar#MONTH_E@ field behaves discontinuously in non-leap years, simple arithmetic can give invalid results.", "history": "Added in API level 24", "FullName": "public void add (int field, int amount)"}, "handleComputeMonthStart(int,int,boolean)": {"Returns": [["int", "the Julian day number of the day before the first day of the given month and year"]], "Parameters": [["int", "int: the extended year"], ["int", "int: the zero-based month, or 0 if useMonth is false"], ["boolean", "boolean: if false, compute the day before the first day of the given year, otherwise, compute the day before the first day of the given month"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return JD of start of given month/year.", "history": "Added in API level 24", "FullName": "protected int handleComputeMonthStart (int eyear, int month, boolean useMonth)"}, "HebrewCalendar(java.util.Locale)": {"Returns": [], "Parameters": [["@B_java#util#Locale_E@", "Locale: The locale for the new calendar."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a HebrewCalendar based on the current time in the default time zone with the given locale.", "history": "Added in API level 24", "FullName": "public HebrewCalendar (Locale aLocale)"}, "HebrewCalendar(android.icu.util.ULocale)": {"Returns": [], "Parameters": [["@B_android#icu#util#ULocale_E@", "ULocale: The locale for the new calendar."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a HebrewCalendar based on the current time in the default time zone with the given locale.", "history": "Added in API level 24", "FullName": "public HebrewCalendar (ULocale locale)"}, "handleGetMonthLength(int, int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the length of the given month in the given year", "history": "added in API level 24", "FullName": "protected int handleGetMonthLength (int extendedYear, int month)"}, "getType()": {"Returns": [["@B_java#lang#String_E@", "legacy calendar type name string"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "See type=\"old type name\" for the calendar attribute of locale IDs at http://www.unicode.org/reports/tr35/#Key_Type_Definitions", "history": "Added in API level 24", "FullName": "public String getType ()"}, "handleComputeFields(int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Subclasses may override this method to compute several fields specific to each calendar system. These are: ERA YEAR MONTH DAY_OF_MONTH DAY_OF_YEAR EXTENDED_YEAR Subclasses can refer to the DAY_OF_WEEK and DOW_LOCAL fields, which will be set when this method is called. Subclasses can also call the getGregorianXxx() methods to obtain Gregorian calendar equivalents for the given Julian day. In addition, subclasses should compute any subclass-specific fields, that is, fields from BASE_FIELD_COUNT to getFieldCount() - 1.", "history": "Added in API level 24", "FullName": "protected void handleComputeFields (int julianDay)"}}, "Inheritance": ["@B_android#icu#util#Calendar_E@"], "ClassName": "android.icu.util.HebrewCalendar", "ClassDesc": "HebrewCalendar is a subclass of Calendar that that implements the traditional Hebrew calendar. This is the civil calendar in Israel and the liturgical calendar of the Jewish faith worldwide. The Hebrew calendar is lunisolar and thus has a number of interesting properties that distinguish it from the Gregorian. Months start on the day of (an arithmetic approximation of) each new moon. Since the solar year (approximately 365.24 days) is not an even multiple of the lunar month (approximately 29.53 days) an extra \"leap month\" is inserted in 7 out of every 19 years. To make matters even more interesting, the start of a year can be delayed by up to three days in order to prevent certain holidays from falling on the Sabbath and to prevent certain illegal year lengths. Finally, the lengths of certain months can vary depending on the number of days in the year. The leap month is known as \"Adar 1\" and is inserted between the months of Shevat and Adar in leap years. Since the leap month does not come at the end of the year, calculations involving month numbers are particularly complex. Users of this class should make sure to use the @B_android#icu#util#Calendar#roll_E@ and @B_android#icu#util#HebrewCalendar#add_E@ methods rather than attempting to perform date arithmetic by manipulating the fields directly. If you are interested in more information on the rules behind the Hebrew calendar, see one of the following references: \"Hebrew Calendar Science and Myths, The Calendar FAQ, This class should not be subclassed. HebrewCalendar usually should be instantiated using @B_android#icu#util#Calendar#getInstance_E@ passing in a ULocale with the tag \"@calendar=hebrew\"."}