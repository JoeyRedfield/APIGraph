{"Functions": {"createVideoFormat(java.lang.String,int,int)": {"Returns": [["@B_android#media#MediaFormat_E@", "This value will never be null."]], "Parameters": [["@B_java#lang#String_E@", "String: The mime type of the content. This value must never be null."], ["int", "int: The width of the content (in pixels)"], ["int", "int: The height of the content (in pixels)"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a minimal video format.", "history": "Added in API level 16", "FullName": "public static MediaFormat createVideoFormat (String mime, int width, int height)"}, "getFloat(java.lang.String,float)": {"Returns": [["float", "defaultValue if the key does not exist or the stored value for the key is null"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."], ["float", "float no parameter comment"]], "Throws": [["@B_java#lang#ClassCastException_E@", "if the stored value for the key is int, long, ByteBuffer or String"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of an float key, or the default value if the key is missing.", "history": "Added in API level 29", "FullName": "public float getFloat (String name, float defaultValue)"}, "getString(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "null if the key does not exist or the stored value for the key is null"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [["@B_java#lang#ClassCastException_E@", "if the stored value for the key is int, long, float or ByteBuffer"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of a string key.", "history": "Added in API level 16", "FullName": "public String getString (String name)"}, "getInteger(java.lang.String)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if the key does not exist or the stored value for the key is null"], ["@B_java#lang#ClassCastException_E@", "if the stored value for the key is long, float, ByteBuffer or String"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of an integer key.", "history": "Added in API level 16", "FullName": "public int getInteger (String name)"}, "MediaFormat()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates an empty MediaFormat", "history": "Added in API level 16", "FullName": "public MediaFormat ()"}, "setString(java.lang.String, java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the value of a string key.", "history": "added in API level 16", "FullName": "public void setString (String name, String value)"}, "getFloat(java.lang.String)": {"Returns": [["float", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if the key does not exist or the stored value for the key is null"], ["@B_java#lang#ClassCastException_E@", "if the stored value for the key is int, long, ByteBuffer or String"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of a float key.", "history": "Added in API level 16", "FullName": "public float getFloat (String name)"}, "setFloat(java.lang.String, float)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["float", "float no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the value of a float key.", "history": "added in API level 16", "FullName": "public void setFloat (String name, float value)"}, "getKeys()": {"Returns": [["@B_java#util#Set_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_java#util#Set_E@ view of the keys contained in this MediaFormat. The set is backed by the MediaFormat object, so changes to the format are reflected in the set, and vice-versa. If the format is modified while an iteration over the set is in progress (except through the iterator's own remove operation), the results of the iteration are undefined. The set supports element removal, which removes the corresponding mapping from the format, via the Iterator.remove, Set.remove, removeAll, retainAll, and clear operations. It does not support the add or addAll operations.", "history": "Added in API level 29", "FullName": "public Set<String> getKeys ()"}, "setString(java.lang.String,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."], ["@B_java#lang#String_E@", "String: This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the value of a string key. If value is null, it sets a null value that behaves similarly to a missing key. This could be used prior to API level @B_android#package-summary_E@ to effectively remove a key.", "history": "Added in API level 16", "FullName": "public void setString (String name, String value)"}, "containsFeature(java.lang.String)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true iff a feature of the given name exists in the format.", "history": "Added in API level 29", "FullName": "public boolean containsFeature (String name)"}, "getLong(java.lang.String,long)": {"Returns": [["long", "defaultValue if the key does not exist or the stored value for the key is null"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."], ["long", "long no parameter comment"]], "Throws": [["@B_java#lang#ClassCastException_E@", "if the stored value for the key is int, float, ByteBuffer or String"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of an long key, or the default value if the key is missing.", "history": "Added in API level 29", "FullName": "public long getLong (String name, long defaultValue)"}, "getInteger(java.lang.String,int)": {"Returns": [["int", "defaultValue if the key does not exist or the stored value for the key is null"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."], ["int", "int no parameter comment"]], "Throws": [["@B_java#lang#ClassCastException_E@", "if the stored value for the key is long, float, ByteBuffer or String"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of an integer key, or the default value if the key is missing.", "history": "Added in API level 29", "FullName": "public int getInteger (String name, int defaultValue)"}, "getByteBuffer(java.lang.String,java.nio.ByteBuffer)": {"Returns": [["@B_java#nio#ByteBuffer_E@", "defaultValue if the key does not exist or the stored value for the key is null"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."], ["@B_java#nio#ByteBuffer_E@", "ByteBuffer: This value must never be null."]], "Throws": [["@B_java#lang#ClassCastException_E@", "if the stored value for the key is int, long, float or String"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of a ByteBuffer key, or the default value if the key is missing.", "history": "Added in API level 29", "FullName": "public ByteBuffer getByteBuffer (String name, ByteBuffer defaultValue)"}, "containsKey(java.lang.String)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true iff a key of the given name exists in the format.", "history": "Added in API level 16", "FullName": "public boolean containsKey (String name)"}, "setFeatureEnabled(java.lang.String, boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the name of a @B_android#media#MediaCodecInfo#CodecCapabilities_E@ feature."], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#media#MediaCodecList#findDecoderForFormat_E@", "@B_android#media#MediaCodecList#findEncoderForFormat_E@", "@B_android#media#MediaCodecInfo#CodecCapabilities#isFormatSupported_E@"], "Permissions": [], "Description": "Sets whether a feature is to be enabled (true) or disabled (false). If enabled is true, the feature is requested to be present. Otherwise, the feature is requested to be not present.", "history": "added in API level 21", "FullName": "public void setFeatureEnabled (String feature, boolean enabled)"}, "getValueTypeForKey(java.lang.String)": {"Returns": [["int", "Value is @B_android#media#MediaFormat#TYPE_NULL_E@, @B_android#media#MediaFormat#TYPE_INTEGER_E@, @B_android#media#MediaFormat#TYPE_LONG_E@, @B_android#media#MediaFormat#TYPE_FLOAT_E@, @B_android#media#MediaFormat#TYPE_STRING_E@, or @B_android#media#MediaFormat#TYPE_BYTE_BUFFER_E@"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value type for a key. If the key does not exist, it returns TYPE_NULL.", "history": "Added in API level 29", "FullName": "public int getValueTypeForKey (String name)"}, "createAudioFormat(java.lang.String,int,int)": {"Returns": [["@B_android#media#MediaFormat_E@", "This value will never be null."]], "Parameters": [["@B_java#lang#String_E@", "String: The mime type of the content. This value must never be null."], ["int", "int: The sampling rate of the content."], ["int", "int: The number of audio channels in the content."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a minimal audio format.", "history": "Added in API level 16", "FullName": "public static MediaFormat createAudioFormat (String mime, int sampleRate, int channelCount)"}, "setFeatureEnabled(java.lang.String,boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: the name of a @B_android#media#MediaCodecInfo#CodecCapabilities_E@ feature. This value must never be null."], ["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#media#MediaCodecList#findDecoderForFormat_E@", "@B_android#media#MediaCodecList#findEncoderForFormat_E@", "@B_android#media#MediaCodecInfo#CodecCapabilities#isFormatSupported_E@"], "Permissions": [], "Description": "Sets whether a feature is to be enabled (true) or disabled (false). If enabled is true, the feature is requested to be present. Otherwise, the feature is requested to be not present.", "history": "Added in API level 21", "FullName": "public void setFeatureEnabled (String feature, boolean enabled)"}, "getString(java.lang.String,java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "defaultValue if the key does not exist or the stored value for the key is null"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."], ["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [["@B_java#lang#ClassCastException_E@", "if the stored value for the key is int, long, float or ByteBuffer"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of an string key, or the default value if the key is missing.", "history": "Added in API level 29", "FullName": "public String getString (String name, String defaultValue)"}, "getLong(java.lang.String)": {"Returns": [["long", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [["@B_java#lang#NullPointerException_E@", "if the key does not exist or the stored value for the key is null"], ["@B_java#lang#ClassCastException_E@", "if the stored value for the key is int, float, ByteBuffer or String"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of a long key.", "history": "Added in API level 16", "FullName": "public long getLong (String name)"}, "getFeatures()": {"Returns": [["@B_java#util#Set_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a @B_java#util#Set_E@ view of the features contained in this MediaFormat. The set is backed by the MediaFormat object, so changes to the format are reflected in the set, and vice-versa. If the format is modified while an iteration over the set is in progress (except through the iterator's own remove operation), the results of the iteration are undefined. The set supports element removal, which removes the corresponding mapping from the format, via the Iterator.remove, Set.remove, removeAll, retainAll, and clear operations. It does not support the add or addAll operations.", "history": "Added in API level 29", "FullName": "public Set<String> getFeatures ()"}, "MediaFormat(android.media.MediaFormat)": {"Returns": [], "Parameters": [["@B_android#media#MediaFormat_E@", "MediaFormat: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a copy of a media format object.", "history": "Added in API level 29", "FullName": "public MediaFormat (MediaFormat other)"}, "setLong(java.lang.String, long)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["long", "long no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the value of a long key.", "history": "added in API level 16", "FullName": "public void setLong (String name, long value)"}, "getFeatureEnabled(java.lang.String)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: the name of a @B_android#media#MediaCodecInfo#CodecCapabilities_E@ feature. This value must never be null."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the feature was neither set to be enabled nor to be disabled."]], "SeeAlso": [], "Permissions": [], "Description": "Returns whether a feature is to be enabled (true) or disabled (false).", "history": "Added in API level 21", "FullName": "public boolean getFeatureEnabled (String feature)"}, "setByteBuffer(java.lang.String,java.nio.ByteBuffer)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."], ["@B_java#nio#ByteBuffer_E@", "ByteBuffer: This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the value of a ByteBuffer key. If value is null, it sets a null value that behaves similarly to a missing key. This could be used prior to API level @B_android#package-summary_E@ to effectively remove a key.", "history": "Added in API level 16", "FullName": "public void setByteBuffer (String name, ByteBuffer bytes)"}, "createSubtitleFormat(java.lang.String,java.lang.String)": {"Returns": [["@B_android#media#MediaFormat_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: The mime type of the content. This value must never be null."], ["@B_java#lang#String_E@", "String: The language of the content, using either ISO 639-1 or 639-2/T codes. Specify null or \"und\" if language information is only included in the content. (This will also work if there are multiple language tracks in the content.)"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a minimal subtitle format.", "history": "Added in API level 19", "FullName": "public static MediaFormat createSubtitleFormat (String mime, String language)"}, "removeFeature(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes a given feature setting if present. Has no effect if the feature setting is not present.", "history": "Added in API level 29", "FullName": "public void removeFeature (String name)"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 16", "FullName": "public String toString ()"}, "createAudioFormat(java.lang.String, int, int)": {"Returns": [["@B_android#media#MediaFormat_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: The mime type of the content."], ["int", "int: The sampling rate of the content."], ["int", "int: The number of audio channels in the content."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a minimal audio format.", "history": "added in API level 16", "FullName": "public static MediaFormat createAudioFormat (String mime, int sampleRate, int channelCount)"}, "createVideoFormat(java.lang.String, int, int)": {"Returns": [["@B_android#media#MediaFormat_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: The mime type of the content."], ["int", "int: The width of the content (in pixels)"], ["int", "int: The height of the content (in pixels)"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a minimal video format.", "history": "added in API level 16", "FullName": "public static MediaFormat createVideoFormat (String mime, int width, int height)"}, "setLong(java.lang.String,long)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."], ["long", "long no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the value of a long key.", "history": "Added in API level 16", "FullName": "public void setLong (String name, long value)"}, "getNumber(java.lang.String,java.lang.Number)": {"Returns": [["@B_java#lang#Number_E@", "defaultValue if the key does not exist or the stored value for the key is null"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."], ["@B_java#lang#Number_E@", "Number: This value must never be null."]], "Throws": [["@B_java#lang#ClassCastException_E@", "if the stored value for the key is ByteBuffer or String"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of a numeric key, or the default value if the key is missing.", "history": "Added in API level 29", "FullName": "public Number getNumber (String name, Number defaultValue)"}, "removeKey(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Removes a value of a given key if present. Has no effect if the key is not present.", "history": "Added in API level 29", "FullName": "public void removeKey (String name)"}, "getNumber(java.lang.String)": {"Returns": [["@B_java#lang#Number_E@", "null if the key does not exist or the stored value for the key is null"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [["@B_java#lang#ClassCastException_E@", "if the stored value for the key is ByteBuffer or String"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of a numeric key. This is provided as a convenience method for keys that may take multiple numeric types, such as @B_android#media#MediaFormat#KEY_FRAME_RATE_E@, or @B_android#media#MediaFormat#KEY_I_FRAME_INTERVAL_E@.", "history": "Added in API level 29", "FullName": "public Number getNumber (String name)"}, "setFloat(java.lang.String,float)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."], ["float", "float no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the value of a float key.", "history": "Added in API level 16", "FullName": "public void setFloat (String name, float value)"}, "getByteBuffer(java.lang.String)": {"Returns": [["@B_java#nio#ByteBuffer_E@", "null if the key does not exist or the stored value for the key is null"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [["@B_java#lang#ClassCastException_E@", "if the stored value for the key is int, long, float or String"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of a ByteBuffer key.", "history": "Added in API level 16", "FullName": "public ByteBuffer getByteBuffer (String name)"}, "setInteger(java.lang.String,int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the value of an integer key.", "history": "Added in API level 16", "FullName": "public void setInteger (String name, int value)"}, "setInteger(java.lang.String, int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the value of an integer key.", "history": "added in API level 16", "FullName": "public void setInteger (String name, int value)"}}, "Inheritance": [], "ClassName": "android.media.MediaFormat", "ClassDesc": "Encapsulates the information describing the format of media data, be it audio or video, as well as optional feature metadata. The format of the media data is specified as key/value pairs. Keys are strings. Values can be integer, long, float, String or ByteBuffer. The feature metadata is specificed as string/boolean pairs. Keys common to all audio/video formats, @B_android#media#MediaFormat#KEY_MAX_WIDTH_E@ and @B_android#media#MediaFormat#KEY_MAX_HEIGHT_E@ to enable adaptive playback (seamless resolution change) for a video decoder that supports it (@B_android#media#MediaCodecInfo#CodecCapabilities#FEATURE_AdaptivePlayback_E@). The values are used as hints for the codec: they are the maximum expected resolution to prepare for. Depending on codec support, preparing for larger maximum resolution may require more memory even if that resolution is never reached. These fields have no effect for codecs that do not support adaptive playback. Audio formats have the following keys:"}