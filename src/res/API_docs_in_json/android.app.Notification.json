{"Functions": {"Notification(int,java.lang.CharSequence,long)": {"Returns": [], "Parameters": [["int", "int: The resource id of the icon to put in the status bar."], ["@B_java#lang#CharSequence_E@", "CharSequence: The text that flows by in the status bar when the notification first activates."], ["long", "long: The time to show in the time field. In the System.currentTimeMillis timebase."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#app#Notification#Builder_E@ instead. Constructs a Notification object with the information needed to have a status bar icon without the standard expanded view.", "history": "Added in API level 1", "FullName": "public Notification (int icon, CharSequence tickerText, long when)"}, "getSmallIcon()": {"Returns": [["@B_android#graphics#drawable#Icon_E@", "the small icon representing this notification."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#app#Notification#getSmallIcon_E@", "@B_android#app#Notification#Builder#setSmallIcon_E@"], "Permissions": [], "Description": "The small icon representing this notification in the status bar and content view.", "history": "Added in API level 23", "FullName": "public Icon getSmallIcon ()"}, "getSettingsText()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the settings text provided to @B_android#app#Notification#Builder#setSettingsText_E@.", "history": "Added in API level 26", "FullName": "public CharSequence getSettingsText ()"}, "getGroup()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the key used to group this notification into a cluster or stack with other notifications on devices which support such rendering.", "history": "Added in API level 20", "FullName": "public String getGroup ()"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 1", "FullName": "public int describeContents ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this notification into a parcel.", "history": "added in API level 1", "FullName": "public void writeToParcel (Parcel parcel, int flags)"}, "Notification()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a Notification object with default values. You might want to consider using @B_android#app#Notification#Builder_E@ instead.", "history": "Added in API level 1", "FullName": "public Notification ()"}, "Notification(android.os.Parcel)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Unflatten the notification from a parcel.", "history": "Added in API level 1", "FullName": "public Notification (Parcel parcel)"}, "clone()": {"Returns": [["@B_android#app#Notification_E@", "a clone of this instance."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates and returns a copy of this object. The precise meaning of \"copy\" may depend on the class of the object. The general intent is that, for any object x, the expression: true, but these are not absolute requirements. While it is typically the case that: true, this is not an absolute requirement. By convention, the returned object should be obtained by calling super.clone. If a class and all of its superclasses (except Object) obey this convention, it will be the case that x.clone().getClass() == x.getClass(). By convention, the object returned by this method should be independent of this object (which is being cloned). To achieve this independence, it may be necessary to modify one or more fields of the object returned by super.clone before returning it. Typically, this means copying any mutable objects that comprise the internal \"deep structure\" of the object being cloned and replacing the references to these objects with references to the copies. If a class contains only primitive fields or references to immutable objects, then it is usually the case that no fields in the object returned by super.clone need to be modified. The method clone for class Object performs a specific cloning operation. First, if the class of this object does not implement the interface Cloneable, then a CloneNotSupportedException is thrown. Note that all arrays are considered to implement the interface Cloneable and that the return type of the clone method of an array type T[] is T[] where T is any reference or primitive type. Otherwise, this method creates a new instance of the class of this object and initializes all its fields with exactly the contents of the corresponding fields of this object, as if by assignment; the contents of the fields are not themselves cloned. Thus, this method performs a \"shallow copy\" of this object, not a \"deep copy\" operation. The class Object does not itself implement the interface Cloneable, so calling the clone method on an object whose class is Object will result in throwing an exception at run time.", "history": "Added in API level 1", "FullName": "public Notification clone ()"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 1", "FullName": "public String toString ()"}, "Notification(int, java.lang.CharSequence, long)": {"Returns": [], "Parameters": [["int", "int: The resource id of the icon to put in the status bar."], ["@B_java#lang#CharSequence_E@", "CharSequence: The text that flows by in the status bar when the notification first activates."], ["long", "long: The time to show in the time field. In the System.currentTimeMillis timebase."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#app#Notification#Builder_E@ instead. Constructs a Notification object with the information needed to have a status bar icon without the standard expanded view.", "history": "added in API level 1", "FullName": "public Notification (int icon, CharSequence tickerText, long when)"}, "getTimeoutAfter()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the duration from posting after which this notification should be canceled by the system, if it's not canceled already.", "history": "Added in API level 26", "FullName": "public long getTimeoutAfter ()"}, "getChannelId()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the id of the channel this notification posts to.", "history": "Added in API level 26", "FullName": "public String getChannelId ()"}, "getSortKey()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_java#lang#String#compareTo_E@"], "Permissions": [], "Description": "Get a sort key that orders this notification among other notifications from the same package. This can be useful if an external sort was already applied and an app would like to preserve this. Notifications will be sorted lexicographically using this value, although providing different priorities in addition to providing sort key may cause this value to be ignored. This sort key can also be used to order members of a notification group. See @B_android#app#Notification#Builder#setGroup_E@.", "history": "Added in API level 20", "FullName": "public String getSortKey ()"}, "getLocusId()": {"Returns": [["@B_android#content#LocusId_E@", "This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the @B_android#content#LocusId_E@ associated with this notification. Used by the Android system to correlate objects (such as @B_android#content#pm#ShortcutInfo_E@ and @B_android#view#contentcapture#ContentCaptureContext_E@).", "history": "Added in API level 29", "FullName": "public LocusId getLocusId ()"}, "getShortcutId()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#content#pm#ShortcutInfo#getId_E@ that this notification supersedes, if any. Used by some Launchers that display notification content to hide shortcuts that duplicate notifications.", "history": "Added in API level 26", "FullName": "public String getShortcutId ()"}, "getLargeIcon()": {"Returns": [["@B_android#graphics#drawable#Icon_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#app#Notification#getLargeIcon_E@", "@B_android#app#Notification#Builder#setLargeIcon_E@"], "Permissions": [], "Description": "The large icon shown in this notification's content view.", "history": "Added in API level 23", "FullName": "public Icon getLargeIcon ()"}, "getBubbleMetadata()": {"Returns": [["@B_android#app#Notification#BubbleMetadata_E@", "This value may be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the bubble metadata that will be used to display app content in a floating window over the existing foreground activity.", "history": "Added in API level 29", "FullName": "public Notification.BubbleMetadata getBubbleMetadata ()"}, "getBadgeIconType()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns what icon should be shown for this notification if it is being displayed in a Launcher that supports badging. Will be one of @B_android#app#Notification#BADGE_ICON_NONE_E@, @B_android#app#Notification#BADGE_ICON_SMALL_E@, or @B_android#app#Notification#BADGE_ICON_LARGE_E@.", "history": "Added in API level 26", "FullName": "public int getBadgeIconType ()"}, "getAllowSystemGeneratedContextualActions()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether the platform is allowed (by the app developer) to generate contextual actions for this notification.", "history": "Added in API level 29", "FullName": "public boolean getAllowSystemGeneratedContextualActions ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this notification into a parcel.", "history": "Added in API level 1", "FullName": "public void writeToParcel (Parcel parcel, int flags)"}, "getGroupAlertBehavior()": {"Returns": [["int", "Value is @B_android#app#Notification#GROUP_ALERT_ALL_E@, @B_android#app#Notification#GROUP_ALERT_CHILDREN_E@, or @B_android#app#Notification#GROUP_ALERT_SUMMARY_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns which type of notifications in a group are responsible for audibly alerting the user. See @B_android#app#Notification#GROUP_ALERT_ALL_E@, @B_android#app#Notification#GROUP_ALERT_CHILDREN_E@, @B_android#app#Notification#GROUP_ALERT_SUMMARY_E@.", "history": "Added in API level 26", "FullName": "public int getGroupAlertBehavior ()"}}, "Inheritance": [], "ClassName": "android.app.Notification", "ClassDesc": "A class that represents how a persistent notification is to be presented to the user using the @B_android#app#NotificationManager_E@. The @B_android#app#Notification#Builder_E@ has been added to make it easier to construct Notifications."}