{"Functions": {"getCanonicalName()": {"Returns": [["@B_java#lang#String_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the underlying codec name. Device implementations may provide multiple aliases (codec names) for the same underlying codec to maintain backward app compatibility. This method returns the name of the underlying codec name, which must not be another alias. For non-aliases this is always the name of the codec.", "history": "Added in API level 29", "FullName": "public String getCanonicalName ()"}, "getCapabilitiesForType(java.lang.String)": {"Returns": [["@B_android#media#MediaCodecInfo#CodecCapabilities_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: The MIME type to query"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Enumerates the capabilities of the codec component. Since a single component can support data of a variety of types, the type has to be specified to yield a meaningful result.", "history": "Added in API level 16", "FullName": "public MediaCodecInfo.CodecCapabilities getCapabilitiesForType (String type)"}, "getSupportedTypes()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Query the media types supported by the codec.", "history": "Added in API level 16", "FullName": "public String[] getSupportedTypes ()"}, "isHardwareAccelerated()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Query if the codec is hardware accelerated. This attribute is provided by the device manufacturer. Note that it cannot be tested for correctness.", "history": "Added in API level 29", "FullName": "public boolean isHardwareAccelerated ()"}, "isAlias()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Query if the codec is an alias for another underlying codec.", "history": "Added in API level 29", "FullName": "public boolean isAlias ()"}, "isVendor()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Query if the codec is provided by the Android platform (false) or the device manufacturer (true).", "history": "Added in API level 29", "FullName": "public boolean isVendor ()"}, "isSoftwareOnly()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Query if the codec is software only. Software-only codecs are more secure as they run in a tighter security sandbox. On the other hand, software-only codecs do not provide any performance guarantees.", "history": "Added in API level 29", "FullName": "public boolean isSoftwareOnly ()"}, "isEncoder()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Query if the codec is an encoder.", "history": "Added in API level 16", "FullName": "public boolean isEncoder ()"}, "getName()": {"Returns": [["@B_java#lang#String_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the codec name. @B_android#media#MediaCodec#createByCodecName_E@. Applications targeting SDK < @B_android#os#Build#VERSION_CODES#Q_E@, cannot determine if the multiple codec names listed in MediaCodecList are in-fact for the same codec.", "history": "Added in API level 16", "FullName": "public String getName ()"}}, "Inheritance": [], "ClassName": "android.media.MediaCodecInfo", "ClassDesc": "Provides information about a given media codec available on the device. You can iterate through all codecs available by querying @B_android#media#MediaCodecList_E@. For example, here's how to find an encoder that supports a given MIME type:"}