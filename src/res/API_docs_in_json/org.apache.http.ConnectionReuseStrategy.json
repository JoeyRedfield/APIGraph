{"Functions": {"keepAlive(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)": {"Returns": [["", "true if the connection is allowed to be reused, or false if it MUST NOT be reused"]], "Parameters": [["@B_org#apache#http#HttpResponse_E@", "The last response received over that connection."], ["@B_org#apache#http#protocol#HttpContext_E@", "the context in which the connection is being used."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Decides whether a connection can be kept open after a request. If this method returns false, the caller MUST close the connection to correctly implement the HTTP protocol. If it returns true, the caller SHOULD attempt to keep the connection open for reuse with another request. One can use the HTTP context to retrieve additional objects that may be relevant for the keep-alive strategy: the actual HTTP connection, the original HTTP request, target host if known, number of times the connection has been reused already and so on. If the connection is already closed, false is returned. The stale connection check MUST NOT be triggered by a connection reuse strategy.", "history": "Added in API level 1", "FullName": "public abstract boolean keepAlive (HttpResponse response, HttpContext context)"}}, "Inheritance": [], "ClassName": "org.apache.http.ConnectionReuseStrategy", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Interface for deciding whether a connection should be kept alive."}