{"Functions": {"isProfileId(long)": {"Returns": [["boolean", "Whether the ID is associated with profile data."]], "Parameters": [["long", "long: The ID to check."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method can be used to identify whether the given ID is associated with profile data. It does not necessarily indicate that the ID is tied to valid data, merely that accessing data using this ID will result in profile access checks and will only return data from the profile.", "history": "Added in API level 14", "FullName": "public static boolean isProfileId (long id)"}, "ContactsContract()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 5", "FullName": "public ContactsContract ()"}}, "Inheritance": [], "ClassName": "android.provider.ContactsContract", "ClassDesc": "The contract between the contacts provider and applications. Contains definitions for the supported URIs and columns. These APIs supersede @B_android#provider#ContactsContract#Contacts_E@. ContactsContract defines an extensible database of contact-related information. Contact information is stored in a three-tier data model: A row in the @B_android#provider#ContactsContract#Data_E@ table can store any kind of personal data, such as a phone number or email addresses. The set of data kinds that can be stored in this table is open-ended. There is a predefined set of common kinds, but any application can add its own data kinds. A row in the @B_android#provider#ContactsContract#RawContacts_E@ table represents a set of data describing a person and associated with a single account (for example, one of the user's Gmail accounts). A row in the @B_android#provider#ContactsContract#Contacts_E@ table represents an aggregate of one or more RawContacts presumably describing the same person. When data in or associated with the RawContacts table is changed, the affected aggregate contacts are updated as necessary. Other tables include: @B_android#provider#ContactsContract#Groups_E@, which contains information about raw contact groups such as Gmail contact groups. The current API does not support the notion of groups spanning multiple accounts. @B_android#provider#ContactsContract#StatusUpdates_E@, which contains social status updates including IM availability. @B_android#provider#ContactsContract#AggregationExceptions_E@, which is used for manual aggregation and disaggregation of raw contacts @B_android#provider#ContactsContract#Settings_E@, which contains visibility and sync settings for accounts and groups. @B_android#provider#ContactsContract#SyncState_E@, which contains free-form data maintained on behalf of sync adapters @B_android#provider#ContactsContract#PhoneLookup_E@, which is used for quick caller-ID lookup"}