{"Functions": {"onClientPlaybackStateUpdate(int)": {"Returns": [], "Parameters": [["int", "int: one of the playback states authorized in @B_android#media#RemoteControlClient#setPlaybackState_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called whenever the playback state has changed. It is called when no information is known about the playback progress in the media and the playback speed.", "history": "Added in API level 19 Deprecated in API level 29", "FullName": "public abstract void onClientPlaybackStateUpdate (int state)"}, "onClientPlaybackStateUpdate(int,long,long,float)": {"Returns": [], "Parameters": [["int", "int: one of the playback states authorized in @B_android#media#RemoteControlClient#setPlaybackState_E@."], ["long", "long: the system time at which the state change was reported, expressed in ms. Based on @B_android#os#SystemClock#elapsedRealtime_E@."], ["long", "long: a positive value for the current media playback position expressed in ms, a negative value if the position is temporarily unknown."], ["float", "float: a value expressed as a ratio of 1x playback: 1.0f is normal playback, 2.0f is 2x, 0.5f is half-speed, -2.0f is rewind at 2x speed. 0.0f means nothing is playing (e.g. when state is @B_android#media#RemoteControlClient#PLAYSTATE_ERROR_E@)."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called whenever the playback state has changed, and playback position and speed are known.", "history": "Added in API level 19 Deprecated in API level 29", "FullName": "public abstract void onClientPlaybackStateUpdate (int state, long stateChangeTimeMs, long currentPosMs, float speed)"}, "onClientTransportControlUpdate(int)": {"Returns": [], "Parameters": [["int", "int: one of the flags authorized in @B_android#media#RemoteControlClient#setTransportControlFlags_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called whenever the transport control flags have changed.", "history": "Added in API level 19 Deprecated in API level 29", "FullName": "public abstract void onClientTransportControlUpdate (int transportControlFlags)"}, "onClientChange(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true if there is no selected RemoteControlClient and no information is available."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called whenever all information, previously received through the other methods of the listener, is no longer valid and is about to be refreshed. This is typically called whenever a new @B_android#media#RemoteControlClient_E@ has been selected by the system to have its media information published.", "history": "Added in API level 19 Deprecated in API level 29", "FullName": "public abstract void onClientChange (boolean clearing)"}, "onClientMetadataUpdate(android.media.RemoteController.MetadataEditor)": {"Returns": [], "Parameters": [["@B_android#media#RemoteController#MetadataEditor_E@", "RemoteController.MetadataEditor: the container of the new metadata."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called whenever new metadata is available. See the @B_android#media#MediaMetadataEditor#putLong_E@, @B_android#media#MediaMetadataEditor#putString_E@, @B_android#media#MediaMetadataEditor#putBitmap_E@, and @B_android#media#MediaMetadataEditor#putObject_E@ methods for the various keys that can be queried.", "history": "Added in API level 19 Deprecated in API level 29", "FullName": "public abstract void onClientMetadataUpdate (RemoteController.MetadataEditor metadataEditor)"}}, "Inheritance": [], "ClassName": "android.media.RemoteController.OnClientUpdateListener", "ClassDesc": "Interface definition for the callbacks to be invoked whenever media events, metadata and playback status are available."}