{"Functions": {"setSpanIndexCacheEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: Whether results of getSpanIndex should be cached or not."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether the results of @B_android#support#v7#widget#GridLayoutManager#SpanSizeLookup#getSpanIndex_E@ method should be cached or not. By default these values are not cached. If you are not overriding @B_android#support#v7#widget#GridLayoutManager#SpanSizeLookup#getSpanIndex_E@, you should set this to true for better performance.", "history": "added in version 22.0.0", "FullName": "void setSpanIndexCacheEnabled (boolean cacheSpanIndices)"}, "getSpanIndex(int, int)": {"Returns": [["int", "The final span position of the item. Should be between 0 (inclusive) and spanCount(exclusive)"]], "Parameters": [["int", "int: The position of the item"], ["int", "int: The total number of spans in the grid"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the final span index of the provided position. If you have a faster way to calculate span index for your items, you should override this method. Otherwise, you should enable span index cache (@B_android#support#v7#widget#GridLayoutManager#SpanSizeLookup#setSpanIndexCacheEnabled_E@) for better performance. When caching is disabled, default implementation traverses all items from 0 to position. When caching is enabled, it calculates from the closest cached value before the position. If you override this method, you need to make sure it is consistent with @B_android#support#v7#widget#GridLayoutManager#SpanSizeLookup#getSpanSize_E@. GridLayoutManager does not call this method for each item. It is called only for the reference item and rest of the items are assigned to spans based on the reference item. For example, you cannot assign a position to span 2 while span 1 is empty. Note that span offsets always start with 0 and are not affected by RTL.", "history": "added in version 22.0.0", "FullName": "int getSpanIndex (int position, int spanCount)"}, "getSpanGroupIndex(int, int)": {"Returns": [["int", "The index of the span group including the item at the given adapter position"]], "Parameters": [["int", "int: The position in adapter"], ["int", "int: The total number of spans in the grid"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the index of the group this position belongs. For example, if grid has 3 columns and each item occupies 1 span, span group index for item 1 will be 0, item 5 will be 1.", "history": "added in version 22.0.0", "FullName": "int getSpanGroupIndex (int adapterPosition, int spanCount)"}, "invalidateSpanIndexCache()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Clears the span index cache. GridLayoutManager automatically calls this method when adapter changes occur.", "history": "added in version 22.0.0", "FullName": "void invalidateSpanIndexCache ()"}, "isSpanIndexCacheEnabled()": {"Returns": [["boolean", "True if results of @B_android#support#v7#widget#GridLayoutManager#SpanSizeLookup#getSpanIndex_E@ are cached."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether results of @B_android#support#v7#widget#GridLayoutManager#SpanSizeLookup#getSpanIndex_E@ method are cached or not.", "history": "added in version 22.0.0", "FullName": "boolean isSpanIndexCacheEnabled ()"}, "getSpanSize(int)": {"Returns": [["int", "The number of spans occupied by the item at the provided position"]], "Parameters": [["int", "int: The adapter position of the item"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of span occupied by the item at position.", "history": "added in version 22.0.0", "FullName": "int getSpanSize (int position)"}, "GridLayoutManager.SpanSizeLookup()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "GridLayoutManager.SpanSizeLookup ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v7.widget.GridLayoutManager.SpanSizeLookup", "ClassDesc": "A helper class to provide the number of spans each item occupies. Default implementation sets each item to occupy exactly 1 span."}