{"Functions": {"acceptInvitation(com.google.android.gms.common.api.GoogleApiClient, java.lang.String)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "The ID of the invitation to be accepted."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Accept an invitation for a turn-based match. This changes the current player's participant status to @B_com#google#android#gms#games#multiplayer#Participant#STATUS_JOINED_E@. After this call returns successfully, it will be the calling player's turn in the match. At this point, the player may take their first turn by calling @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#takeTurn_E@. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract PendingResult<TurnBasedMultiplayer.InitiateMatchResult> acceptInvitation (GoogleApiClient apiClient, String invitationId)"}, "takeTurn(com.google.android.gms.common.api.GoogleApiClient, java.lang.String, byte[], java.lang.String, com.google.android.gms.games.multiplayer.ParticipantResult...)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "ID of the match to update."], ["byte[]", "Data representing the new state of the match after this update. Limited to a maximum of @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#getMaxMatchDataSize_E@ bytes."], ["String", "ID of the participant who will be set to pending after this update succeeds, or null to wait for additional automatched players (if possible)."], ["@B_com#google#android#gms#games#multiplayer#ParticipantResult_E@", "Optional list of @B_com#google#android#gms#games#multiplayer#ParticipantResult_E@ objects for this match. Note that the results reported here should be final - if results reported later conflict with these values, the returned value will indicate a conflicted result by returning @B_com#google#android#gms#games#multiplayer#ParticipantResult#MATCH_RESULT_DISAGREED_E@. This is most useful for cases where a participant knows their results early. For example, a single elimination game where participants are eliminated as the game continues might wish to specify results for the eliminated participants here."]], "Throws": [], "SeeAlso": ["@B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#finishMatch_E@"], "Permissions": [], "Description": "Update a match with new turn data. The participant that is passed in as the pending participant will be notified that it is their turn to take action. If no pending participant is provided and the match has available auto-match slots, the match will wait for additional players to be found. If there are no auto-match slots available for this match, a pending participant ID is required. Note that players will not receive invitations for matches until this method is called. An invitation will be sent to a player the first time they are set as the pending participant of a match. For the final turn of the match, there is no need to call this method. Instead, call @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#finishMatch_E@ directly. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract PendingResult<TurnBasedMultiplayer.UpdateMatchResult> takeTurn (GoogleApiClient apiClient, String matchId, byte[] matchData, String pendingParticipantId, ParticipantResult... results)"}, "loadMatch(com.google.android.gms.common.api.GoogleApiClient, java.lang.String)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "The ID of the match to retreive."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Load a specified turn-based match. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract PendingResult<TurnBasedMultiplayer.LoadMatchResult> loadMatch (GoogleApiClient apiClient, String matchId)"}, "takeTurn(com.google.android.gms.common.api.GoogleApiClient, java.lang.String, byte[], java.lang.String, java.util.List<com.google.android.gms.games.multiplayer.ParticipantResult>)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "ID of the match to update."], ["byte[]", "Data representing the new state of the match after this update. Limited to a maximum of @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#getMaxMatchDataSize_E@ bytes."], ["String", "ID of the participant who will be set to pending after this update succeeds, or null to wait for additional automatched players (if possible)."], ["List", "Optional list of @B_com#google#android#gms#games#multiplayer#ParticipantResult_E@ objects for this match. Note that the results reported here should be final - if results reported later conflict with these values, the returned value will indicate a conflicted result by returning @B_com#google#android#gms#games#multiplayer#ParticipantResult#MATCH_RESULT_DISAGREED_E@. This is most useful for cases where a participant knows their results early. For example, a single elimination game where participants are eliminated as the game continues might wish to specify results for the eliminated participants here."]], "Throws": [], "SeeAlso": ["@B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#finishMatch_E@"], "Permissions": [], "Description": "Update a match with new turn data. The participant that is passed in as the pending participant will be notified that it is their turn to take action. If no pending participant is provided and the match has available auto-match slots, the match will wait for additional players to be found. If there are no auto-match slots available for this match, a pending participant ID is required. Note that players will not receive invitations for matches until this method is called. An invitation will be sent to a player the first time they are set as the pending participant of a match. For the final turn of the match, there is no need to call this method. Instead, call @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#finishMatch_E@ directly. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract PendingResult<TurnBasedMultiplayer.UpdateMatchResult> takeTurn (GoogleApiClient apiClient, String matchId, byte[] matchData, String pendingParticipantId, List<ParticipantResult> results)"}, "dismissMatch(com.google.android.gms.common.api.GoogleApiClient, java.lang.String)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "The ID of the match to dismiss."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Delete a match from the server and local storage. Dismissing a match will not change the state of the match for the other participants, but dismissed matches will never be shown to the dismissing player again. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract void dismissMatch (GoogleApiClient apiClient, String matchId)"}, "loadMatchesByStatus(com.google.android.gms.common.api.GoogleApiClient, int, int[])": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["int", "How to sort the returned invitations. Must be either @B_com#google#android#gms#games#multiplayer#Multiplayer#SORT_ORDER_MOST_RECENT_FIRST_E@ or @B_com#google#android#gms#games#multiplayer#Multiplayer#SORT_ORDER_SOCIAL_AGGREGATION_E@."], ["int[]", "List of turn statuses to request."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asynchronously load turn-based matches for the current game. Matches with any specified turn status codes will be returned. Valid turn status values are @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMatch#MATCH_TURN_STATUS_INVITED_E@, @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMatch#MATCH_TURN_STATUS_MY_TURN_E@, @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMatch#MATCH_TURN_STATUS_THEIR_TURN_E@, or @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMatch#MATCH_TURN_STATUS_COMPLETE_E@. Note that if your game implements both turn-based and real-time multiplayer, requesting @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMatch#MATCH_TURN_STATUS_INVITED_E@ will return invitations for both turn-based matches and real-time matches. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract PendingResult<TurnBasedMultiplayer.LoadMatchesResult> loadMatchesByStatus (GoogleApiClient apiClient, int invitationSortOrder, int[] matchTurnStatuses)"}, "dismissInvitation(com.google.android.gms.common.api.GoogleApiClient, java.lang.String)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "The ID of the invitation to dismiss."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Dismiss an invitation to a turn-based match. Dismissing an invitation will not change the state of the match for the other participants. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract void dismissInvitation (GoogleApiClient apiClient, String invitationId)"}, "finishMatch(com.google.android.gms.common.api.GoogleApiClient, java.lang.String, byte[], java.util.List<com.google.android.gms.games.multiplayer.ParticipantResult>)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "ID of the match to finish."], ["byte[]", "Data representing the new state of the match after this update. Limited to a maximum of @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#getMaxMatchDataSize_E@ bytes."], ["List", "List of @B_com#google#android#gms#games#multiplayer#ParticipantResult_E@ objects for this match. The client which calls finishMatch is responsible for reporting the results for all appropriate participants in the match. Not every participant is required to have a result, but providing results for participants who are not in the match is an error."]], "Throws": [], "SeeAlso": ["@B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#takeTurn_E@"], "Permissions": [], "Description": "Mark a match as finished. This should be called when the match is over and all participants have results to be reported (if appropriate). Note that the last client to update a match is responsible for calling finish on that match. On the last turn of the match, the client should call this method instead of @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#takeTurn_E@. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract PendingResult<TurnBasedMultiplayer.UpdateMatchResult> finishMatch (GoogleApiClient apiClient, String matchId, byte[] matchData, List<ParticipantResult> results)"}, "getSelectOpponentsIntent(com.google.android.gms.common.api.GoogleApiClient, int, int)": {"Returns": [["", "An @B_android#content#Intent_E@ that can be started to display the player selector."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["int", "The minimum number of players to select (not including the current player)."], ["int", "The maximum number of players to select (not including the current player)."]], "Throws": [], "SeeAlso": ["@B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#createMatch_E@"], "Permissions": [], "Description": "Returns an intent that will let the user select opponents to send an invitation to for a turn based multiplayer match. Note that this must be invoked with @B_android#app#Activity#startActivityForResult_E@, so that the identity of the calling package can be established. The number of players passed in should be the desired number of additional players to select, not including the current player. So, for a game that can handle between 2 and 4 players, minPlayers would be 1 and maxPlayers would be 3. Players may be preselected by specifying a list of player IDs in the @B_com#google#android#gms#games#Games#EXTRA_PLAYER_IDS_E@ extra on the returned intent. If the user canceled, the result will be @B_android#app#Activity#RESULT_CANCELED_E@. If the user selected players, the result will be @B_android#app#Activity#RESULT_OK_E@, and the data intent will contain the selected player IDs in @B_com#google#android#gms#games#Games#EXTRA_PLAYER_IDS_E@ and the minimum and maximum numbers of additional auto-match players in @B_com#google#android#gms#games#multiplayer#Multiplayer#EXTRA_MIN_AUTOMATCH_PLAYERS_E@ and @B_com#google#android#gms#games#multiplayer#Multiplayer#EXTRA_MAX_AUTOMATCH_PLAYERS_E@ respectively. The player IDs in @B_com#google#android#gms#games#Games#EXTRA_PLAYER_IDS_E@ will include only the other players selected, not the current player. This method is the equivalent of calling @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#getSelectOpponentsIntent_E@ with the allowAutomatch parameter set to true. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract Intent getSelectOpponentsIntent (GoogleApiClient apiClient, int minPlayers, int maxPlayers)"}, "registerMatchUpdateListener(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.games.multiplayer.turnbased.OnTurnBasedMatchUpdateReceivedListener)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["@B_com#google#android#gms#games#multiplayer#turnbased#OnTurnBasedMatchUpdateReceivedListener_E@", "The listener that is called when a match update is received. The listener is called on the main thread."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Register a listener to intercept incoming match updates for the currently signed-in user. If a listener is registered by this method, the incoming match update will not generate a status bar notification as long as this client remains connected. Note that only one match update listener may be active at a time. Calling this method while another match update listener was previously registered will replace the original listener with the new one. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract void registerMatchUpdateListener (GoogleApiClient apiClient, OnTurnBasedMatchUpdateReceivedListener listener)"}, "finishMatch(com.google.android.gms.common.api.GoogleApiClient, java.lang.String)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "ID of the match to finish."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicate that a participant is finished with a match. This will not change the data of the match, but it will transition the match into state @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMatch#MATCH_STATUS_COMPLETE_E@ if the match is not already in that state. This method is most commonly used to report that a participant has finished any post-processing steps the game might have and has seen their results in the match. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract PendingResult<TurnBasedMultiplayer.UpdateMatchResult> finishMatch (GoogleApiClient apiClient, String matchId)"}, "getInboxIntent(com.google.android.gms.common.api.GoogleApiClient)": {"Returns": [["", "An @B_android#content#Intent_E@ that can be started to view the match inbox."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an intent that will let the user see and manage any outstanding invitations and matches. Note that this must be invoked using @B_android#app#Activity#startActivityForResult_E@ so that the identity of the calling package can be established. If the user canceled the result will be @B_android#app#Activity#RESULT_CANCELED_E@. If the user selected an invitation or a match to accept, the result will be @B_android#app#Activity#RESULT_OK_E@ and the data intent will contain the selected invitation/match as a parcelable extra in the extras. Based on the type of the match, the result will include either @B_com#google#android#gms#games#multiplayer#Multiplayer#EXTRA_TURN_BASED_MATCH_E@ or @B_com#google#android#gms#games#multiplayer#Multiplayer#EXTRA_INVITATION_E@. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract Intent getInboxIntent (GoogleApiClient apiClient)"}, "loadMatchesByStatus(com.google.android.gms.common.api.GoogleApiClient, int[])": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["int[]", "List of turn statuses to request."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asynchronously load turn-based matches for the current game. Matches with any specified turn status codes will be returned. Valid turn status values are @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMatch#MATCH_TURN_STATUS_INVITED_E@, @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMatch#MATCH_TURN_STATUS_MY_TURN_E@, @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMatch#MATCH_TURN_STATUS_THEIR_TURN_E@, or @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMatch#MATCH_TURN_STATUS_COMPLETE_E@. Note that if your game implements both turn-based and real-time multiplayer, requesting @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMatch#MATCH_TURN_STATUS_INVITED_E@ will return invitations for both turn-based matches and real-time matches. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract PendingResult<TurnBasedMultiplayer.LoadMatchesResult> loadMatchesByStatus (GoogleApiClient apiClient, int[] matchTurnStatuses)"}, "rematch(com.google.android.gms.common.api.GoogleApiClient, java.lang.String)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "The ID of the previous match to re-create."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a rematch of a previously completed turn-based match. The new match will have the same participants as the previous match. Note that only one rematch may be created from any single completed match, and only by a player that has already called Finish on the match. It is only valid to call this if @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMatch#canRematch_E@ return true - calling this method any other time will result in an error. After this call returns successfully, it will be the calling player's turn in the new match. At this point, the player may take their first turn by calling @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#takeTurn_E@. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract PendingResult<TurnBasedMultiplayer.InitiateMatchResult> rematch (GoogleApiClient apiClient, String matchId)"}, "getMaxMatchDataSize(com.google.android.gms.common.api.GoogleApiClient)": {"Returns": [["", "The maximum data size per match in bytes."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the maximum data size per match in bytes. Guaranteed to be at least 128 KB. May increase in the future. If the service cannot be reached for some reason, this will return -1. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract int getMaxMatchDataSize (GoogleApiClient apiClient)"}, "getSelectOpponentsIntent(com.google.android.gms.common.api.GoogleApiClient, int, int, boolean)": {"Returns": [["", "An @B_android#content#Intent_E@ that can be started to display the player selector."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["int", "The minimum number of players to select (not including the current player)."], ["int", "The maximum number of players to select (not including the current player)."], ["boolean", "Whether or not to display an option for selecting automatch players."]], "Throws": [], "SeeAlso": ["@B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#createMatch_E@"], "Permissions": [], "Description": "Returns an intent that will let the user select opponents to send an invitation to for a turn based multiplayer match. Note that this must be invoked with @B_android#app#Activity#startActivityForResult_E@, so that the identity of the calling package can be established. The number of players passed in should be the desired number of additional players to select, not including the current player. So, for a game that can handle between 2 and 4 players, minPlayers would be 1 and maxPlayers would be 3. Players may be preselected by specifying a list of player IDs in the @B_com#google#android#gms#games#Games#EXTRA_PLAYER_IDS_E@ extra on the returned intent. If the user canceled, the result will be @B_android#app#Activity#RESULT_CANCELED_E@. If the user selected players, the result will be @B_android#app#Activity#RESULT_OK_E@, and the data intent will contain the selected player IDs in @B_com#google#android#gms#games#Games#EXTRA_PLAYER_IDS_E@ and the minimum and maximum numbers of additional auto-match players in @B_com#google#android#gms#games#multiplayer#Multiplayer#EXTRA_MIN_AUTOMATCH_PLAYERS_E@ and @B_com#google#android#gms#games#multiplayer#Multiplayer#EXTRA_MAX_AUTOMATCH_PLAYERS_E@ respectively. The player IDs in @B_com#google#android#gms#games#Games#EXTRA_PLAYER_IDS_E@ will include only the other players selected, not the current player. If the allowAutomatch parameter is set to false, the UI will not display an option for selecting automatch players. Set this to false if your game does not support automatching. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract Intent getSelectOpponentsIntent (GoogleApiClient apiClient, int minPlayers, int maxPlayers, boolean allowAutomatch)"}, "takeTurn(com.google.android.gms.common.api.GoogleApiClient, java.lang.String, byte[], java.lang.String)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "ID of the match to update."], ["byte[]", "Data representing the new state of the match after this update. Limited to a maximum of @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#getMaxMatchDataSize_E@ bytes."], ["String", "ID of the participant who will be set to pending after this update succeeds, or null to wait for additional automatched players (if possible)."]], "Throws": [], "SeeAlso": ["@B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#finishMatch_E@"], "Permissions": [], "Description": "Update a match with new turn data. The participant that is passed in as the pending participant will be notified that it is their turn to take action. If no pending participant is provided and the match has available auto-match slots, the match will wait for additional players to be found. If there are no auto-match slots available for this match, a pending participant ID is required. For the final turn of the match, there is no need to call this method. Instead, call @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#finishMatch_E@ directly. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract PendingResult<TurnBasedMultiplayer.UpdateMatchResult> takeTurn (GoogleApiClient apiClient, String matchId, byte[] matchData, String pendingParticipantId)"}, "cancelMatch(com.google.android.gms.common.api.GoogleApiClient, java.lang.String)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "The ID of the match to cancel."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Cancels a turn-based match. Once this call succeeds, the match will be removed from local storage. Note that this will cancel the match completely, forcing it to end for all players involved. See @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#leaveMatch_E@ for a different alternative. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract PendingResult<TurnBasedMultiplayer.CancelMatchResult> cancelMatch (GoogleApiClient apiClient, String matchId)"}, "declineInvitation(com.google.android.gms.common.api.GoogleApiClient, java.lang.String)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "The ID of the invitation to decline."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Decline an invitation for a turn-based match. Note that this will cancel the match for the other participants and remove the match from the caller's local device. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract void declineInvitation (GoogleApiClient apiClient, String invitationId)"}, "unregisterMatchUpdateListener(com.google.android.gms.common.api.GoogleApiClient)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Unregisters this client's match update listener, if any. Any new match updates will generate status bar notifications as normal. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract void unregisterMatchUpdateListener (GoogleApiClient apiClient)"}, "leaveMatchDuringTurn(com.google.android.gms.common.api.GoogleApiClient, java.lang.String, java.lang.String)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "ID of the match to leave."], ["String", "ID of the participant who will be set to pending after this update succeeds, or null to wait for additional automatched players (if possible)."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Leave the specified match during the current player's turn. If this takes the match to fewer than two participants, the match will be canceled. The provided pendingParticipantId will be used to determine which participant should act next. If no pending participant is provided and the match has available auto-match slots, the match will wait for additional players to be found. If there are no auto-match slots available for this match, a pending participant ID is required. See @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#leaveMatch_E@ for the form of the API to call when it is not the current player's turn. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract PendingResult<TurnBasedMultiplayer.LeaveMatchResult> leaveMatchDuringTurn (GoogleApiClient apiClient, String matchId, String pendingParticipantId)"}, "leaveMatch(com.google.android.gms.common.api.GoogleApiClient, java.lang.String)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "ID of the match to leave."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Leave the specified match when it is not the current player's turn. If this takes the match to fewer than two participants, the match will be canceled. See @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#leaveMatchDuringTurn_E@ for the form of the API to call during the current player's turn. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract PendingResult<TurnBasedMultiplayer.LeaveMatchResult> leaveMatch (GoogleApiClient apiClient, String matchId)"}, "createMatch(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatchConfig)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["@B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMatchConfig_E@", "The configuration parameters for the match to create."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new turn-based match for the current game. If the provided @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMatchConfig_E@ includes automatch parameters, the server will attempt to find any previously created matches that satisfy these parameters and join the current player into the previous match. If no suitable match can be found, a new match will be created. After this call returns successfully, it will be the calling player's turn in the new match. At this point, the player may take their first turn by calling @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#takeTurn_E@. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract PendingResult<TurnBasedMultiplayer.InitiateMatchResult> createMatch (GoogleApiClient apiClient, TurnBasedMatchConfig config)"}, "finishMatch(com.google.android.gms.common.api.GoogleApiClient, java.lang.String, byte[], com.google.android.gms.games.multiplayer.ParticipantResult...)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "ID of the match to finish."], ["byte[]", "Data representing the new state of the match after this update. Limited to a maximum of @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#getMaxMatchDataSize_E@ bytes."], ["@B_com#google#android#gms#games#multiplayer#ParticipantResult_E@", "List of @B_com#google#android#gms#games#multiplayer#ParticipantResult_E@ objects for this match. The client which calls finishMatch is responsible for reporting the results for all appropriate participants in the match. Not every participant is required to have a result, but providing results for participants who are not in the match is an error."]], "Throws": [], "SeeAlso": ["@B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#takeTurn_E@"], "Permissions": [], "Description": "Mark a match as finished. This should be called when the match is over and all participants have results to be reported (if appropriate). Note that the last client to update a match is responsible for calling finish on that match. On the last turn of the match, the client should call this method instead of @B_com#google#android#gms#games#multiplayer#turnbased#TurnBasedMultiplayer#takeTurn_E@. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@", "history": "", "FullName": "public abstract PendingResult<TurnBasedMultiplayer.UpdateMatchResult> finishMatch (GoogleApiClient apiClient, String matchId, byte[] matchData, ParticipantResult... results)"}}, "Inheritance": [], "ClassName": "com.google.android.gms.games.multiplayer.turnbased.TurnBasedMultiplayer", "ClassDesc": "Entry point for turn-based multiplayer functionality. For more details, see the"}