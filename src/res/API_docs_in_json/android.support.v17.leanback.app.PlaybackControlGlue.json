{"Functions": {"getCurrentPosition()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current position of the media item in milliseconds.", "history": "", "FullName": "int getCurrentPosition ()"}, "getFastForwardSpeeds()": {"Returns": [["int[]", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the fast forward speeds.", "history": "", "FullName": "int[] getFastForwardSpeeds ()"}, "PlaybackControlGlue(android.content.Context, android.support.v17.leanback.app.PlaybackOverlayFragment, int[])": {"Returns": [], "Parameters": [["@B_android#support#v17#leanback#app#PlaybackOverlayFragment_E@", "PlaybackOverlayFragment: Optional; if using a @B_android#support#v17#leanback#app#PlaybackOverlayFragment_E@, pass it in."], ["int[]", "int: Array of seek speeds for fast forward and rewind."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor for the glue.", "history": "added in version 22.0.0", "FullName": "PlaybackControlGlue (Context context, PlaybackOverlayFragment fragment, int[] seekSpeeds)"}, "getMediaArt()": {"Returns": [["@B_android#graphics#drawable#Drawable_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a bitmap of the art for the media item.", "history": "", "FullName": "Drawable getMediaArt ()"}, "getCurrentSpeedId()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current playback speed. When playing normally, @B_android#support#v17#leanback#app#PlaybackControlGlue#PLAYBACK_SPEED_NORMAL_E@ should be returned.", "history": "", "FullName": "int getCurrentSpeedId ()"}, "createControlsRowAndPresenter()": {"Returns": [["@B_android#support#v17#leanback#widget#PlaybackControlsRowPresenter_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Helper method for instantiating a @B_android#support#v17#leanback#widget#PlaybackControlsRow_E@ and corresponding @B_android#support#v17#leanback#widget#PlaybackControlsRowPresenter_E@.", "history": "added in version 22.0.0", "FullName": "PlaybackControlsRowPresenter createControlsRowAndPresenter ()"}, "getMediaSubtitle()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the subtitle of the media item.", "history": "", "FullName": "CharSequence getMediaSubtitle ()"}, "skipToNext()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "use @B_android#support#v17#leanback#app#PlaybackControlGlue#next_E@ instead. Skip to the next track.", "history": "added in version 22.0.0", "FullName": "void skipToNext ()"}, "next()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Goes to the next media item. This method is optional.", "history": "added in version 25.1.0", "FullName": "void next ()"}, "setOnItemViewClickedListener(android.support.v17.leanback.widget.OnItemViewClickedListener)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Don't call this. Instead use the listener on the fragment yourself. Set the @B_android#support#v17#leanback#widget#OnItemViewClickedListener_E@ to be called if the click event is not handled internally.", "history": "added in version 22.0.0", "FullName": "void setOnItemViewClickedListener (OnItemViewClickedListener listener)"}, "enableProgressUpdating(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override this to start/stop a runnable to call @B_android#support#v17#leanback#app#PlaybackControlGlue#updateProgress_E@ at an interval such as @B_android#support#v17#leanback#app#PlaybackControlGlue#getUpdatePeriod_E@.", "history": "", "FullName": "void enableProgressUpdating (boolean enable)"}, "onMetadataChanged()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Must be called appropriately by a subclass when the metadata state has changed.", "history": "", "FullName": "void onMetadataChanged ()"}, "onAttachedToHost(android.support.v17.leanback.media.PlaybackGlueHost)": {"Returns": [], "Parameters": [["@B_android#support#v17#leanback#media#PlaybackGlueHost_E@", "PlaybackGlueHost no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method is called attached to associated @B_android#support#v17#leanback#media#PlaybackGlueHost_E@. Subclass may override and call super.onAttachedToHost().", "history": "added in version 25.1.0", "FullName": "void onAttachedToHost (PlaybackGlueHost host)"}, "PlaybackControlGlue(android.content.Context, int[])": {"Returns": [], "Parameters": [["int[]", "int: Array of seek speeds for fast forward and rewind."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor for the glue.", "history": "added in version 22.1.0", "FullName": "PlaybackControlGlue (Context context, int[] seekSpeeds)"}, "onCreateControlsRowAndPresenter()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Instantiating a @B_android#support#v17#leanback#widget#PlaybackControlsRow_E@ and corresponding @B_android#support#v17#leanback#widget#PlaybackControlsRowPresenter_E@. Subclass may override.", "history": "added in version 25.1.0", "FullName": "void onCreateControlsRowAndPresenter ()"}, "getContext()": {"Returns": [["@B_android#content#Context_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the context.", "history": "", "FullName": "Context getContext ()"}, "isMediaPlaying()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if media is currently playing.", "history": "", "FullName": "boolean isMediaPlaying ()"}, "PlaybackControlGlue(android.content.Context, int[], int[])": {"Returns": [], "Parameters": [["int[]", "int: Array of seek speeds for fast forward."], ["int[]", "int: Array of seek speeds for rewind."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor for the glue.", "history": "added in version 22.1.0", "FullName": "PlaybackControlGlue (Context context, int[] fastForwardSpeeds, int[] rewindSpeeds)"}, "updateProgress()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Updates the progress bar based on the current media playback position.", "history": "", "FullName": "void updateProgress ()"}, "pause()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Pauses the media player.", "history": "added in version 25.1.0", "FullName": "void pause ()"}, "getControlsRow()": {"Returns": [["@B_android#support#v17#leanback#widget#PlaybackControlsRow_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the playback controls row managed by the glue layer.", "history": "", "FullName": "PlaybackControlsRow getControlsRow ()"}, "getFragment()": {"Returns": [["@B_android#support#v17#leanback#app#PlaybackOverlayFragment_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the fragment.", "history": "added in version 22.0.0", "FullName": "PlaybackOverlayFragment getFragment ()"}, "getMediaTitle()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the title of the media item.", "history": "", "FullName": "CharSequence getMediaTitle ()"}, "startPlayback(int)": {"Returns": [], "Parameters": [["int", "int: The desired playback speed. For normal playback this will be @B_android#support#v17#leanback#media#PlaybackControlGlue#PLAYBACK_SPEED_NORMAL_E@; higher positive values for fast forward, and negative values for rewind."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "use @B_android#support#v17#leanback#media#PlaybackControlGlue#play_E@ instead. Start playback at the given speed.", "history": "added in version 22.0.0", "FullName": "void startPlayback (int speed)"}, "skipToPrevious()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "use @B_android#support#v17#leanback#app#PlaybackControlGlue#previous_E@ instead. Skip to the previous track.", "history": "added in version 22.0.0", "FullName": "void skipToPrevious ()"}, "getRewindSpeeds()": {"Returns": [["int[]", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the rewind speeds.", "history": "", "FullName": "int[] getRewindSpeeds ()"}, "PlaybackControlGlue(android.content.Context, android.support.v17.leanback.app.PlaybackOverlayFragment, int[], int[])": {"Returns": [], "Parameters": [["@B_android#support#v17#leanback#app#PlaybackOverlayFragment_E@", "PlaybackOverlayFragment: Optional; if using a @B_android#support#v17#leanback#app#PlaybackOverlayFragment_E@, pass it in."], ["int[]", "int: Array of seek speeds for fast forward."], ["int[]", "int: Array of seek speeds for rewind."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor for the glue.", "history": "added in version 22.0.0", "FullName": "PlaybackControlGlue (Context context, PlaybackOverlayFragment fragment, int[] fastForwardSpeeds, int[] rewindSpeeds)"}, "createPrimaryActionsAdapter(android.support.v17.leanback.widget.PresenterSelector)": {"Returns": [["@B_android#support#v17#leanback#widget#SparseArrayObjectAdapter_E@", "no returns description in source"]], "Parameters": [["@B_android#support#v17#leanback#widget#PresenterSelector_E@", "PresenterSelector no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "SparseArrayObjectAdapter createPrimaryActionsAdapter (PresenterSelector presenterSelector)"}, "getOnItemViewClickedListener()": {"Returns": [["@B_android#support#v17#leanback#widget#OnItemViewClickedListener_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Don't call this. Instead use the listener on the fragment yourself. Returns the @B_android#support#v17#leanback#widget#OnItemViewClickedListener_E@.", "history": "added in version 22.0.0", "FullName": "OnItemViewClickedListener getOnItemViewClickedListener ()"}, "getSupportedActions()": {"Returns": [["long", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a bitmask of actions supported by the media player.", "history": "", "FullName": "long getSupportedActions ()"}, "pausePlayback()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "use @B_android#support#v17#leanback#app#PlaybackControlGlue#pause_E@ instead. Pause playback.", "history": "added in version 22.0.0", "FullName": "void pausePlayback ()"}, "setFadingEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the controls to fade after a timeout when media is playing.", "history": "", "FullName": "void setFadingEnabled (boolean enable)"}, "onStateChanged()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Must be called appropriately by a subclass when the playback state has changed. It updates the playback state displayed on the media player.", "history": "", "FullName": "void onStateChanged ()"}, "previous()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Goes to the previous media item. This method is optional.", "history": "added in version 25.1.0", "FullName": "void previous ()"}, "hasValidMedia()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if there is a valid media item.", "history": "", "FullName": "boolean hasValidMedia ()"}, "onRowChanged(android.support.v17.leanback.widget.PlaybackControlsRow)": {"Returns": [], "Parameters": [["@B_android#support#v17#leanback#widget#PlaybackControlsRow_E@", "PlaybackControlsRow no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method invoked when the playback controls row has changed. The adapter containing this row should be notified.", "history": "added in version 22.0.0", "FullName": "void onRowChanged (PlaybackControlsRow row)"}, "getMediaDuration()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the duration of the media item in milliseconds.", "history": "", "FullName": "int getMediaDuration ()"}, "isFadingEnabled()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if controls are set to fade when media is playing.", "history": "", "FullName": "boolean isFadingEnabled ()"}, "getUpdatePeriod()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the time period in milliseconds that should be used to update the progress. See @B_android#support#v17#leanback#app#PlaybackControlGlue#updateProgress_E@.", "history": "", "FullName": "int getUpdatePeriod ()"}, "play(int)": {"Returns": [], "Parameters": [["int", "int: The desired playback speed. For normal playback this will be @B_android#support#v17#leanback#media#PlaybackControlGlue#PLAYBACK_SPEED_NORMAL_E@; higher positive values for fast forward, and negative values for rewind."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Start playback at the given speed.", "history": "added in version 25.1.0", "FullName": "void play (int speed)"}}, "Inheritance": ["@B_android#support#v17#leanback#media#PlaybackGlue_E@", "@B_android#support#v17#leanback#media#PlaybackControlGlue_E@"], "ClassName": "android.support.v17.leanback.app.PlaybackControlGlue", "ClassDesc": "Use @B_android#support#v17#leanback#media#PlaybackControlGlue_E@ A helper class for managing a @B_android#support#v17#leanback#widget#PlaybackControlsRow_E@ and @B_android#support#v17#leanback#media#PlaybackGlueHost_E@ that implements a recommended approach to handling standard playback control actions such as play/pause, fast forward/rewind at progressive speed levels, and skip to next/previous. This helper class is a glue layer in that manages the configuration of and interaction between the leanback UI components by defining a functional interface to the media player. You can instantiate a concrete subclass such as MediaPlayerGlue or you must subclass this abstract helper. To create a subclass you must implement all of the abstract methods and the subclass must invoke @B_android#support#v17#leanback#media#PlaybackControlGlue#onMetadataChanged_E@ and @B_android#support#v17#leanback#media#PlaybackControlGlue#onStateChanged_E@ appropriately. To use an instance of the glue layer, first construct an instance. Constructor parameters inform the glue what speed levels are supported for fast forward/rewind. If you have your own controls row you must pass it to @B_android#support#v17#leanback#media#PlaybackControlGlue#setControlsRow_E@. The row will be updated by the glue layer based on the media metadata and playback state. Alternatively, you may call @B_android#support#v17#leanback#app#PlaybackControlGlue#createControlsRowAndPresenter_E@ which will set a controls row and return a row presenter you can use to present the row. The helper sets a @B_android#support#v17#leanback#widget#SparseArrayObjectAdapter_E@ on the controls row as the primary actions adapter, and adds actions to it. You can provide additional actions by overriding @B_android#support#v17#leanback#app#PlaybackControlGlue#createPrimaryActionsAdapter_E@. This helper does not deal in secondary actions so those you may add separately. Provide a click listener on your fragment and if an action is clicked, call @B_android#support#v17#leanback#media#PlaybackControlGlue#onActionClicked_E@. If you set a listener by calling @B_android#support#v17#leanback#app#PlaybackControlGlue#setOnItemViewClickedListener_E@, your listener will be called for all unhandled actions. This helper implements a key event handler. If you pass a @B_android#support#v17#leanback#app#PlaybackOverlayFragment_E@, it will configure its fragment to intercept all key events. Otherwise, you should set the glue object as key event handler to the ViewHolder when bound by your row presenter; see @B_android#support#v17#leanback#widget#RowPresenter#ViewHolder#setOnKeyListener_E@. To update the controls row progress during playback, override @B_android#support#v17#leanback#media#PlaybackControlGlue#enableProgressUpdating_E@ to manage the lifecycle of a periodic callback to @B_android#support#v17#leanback#media#PlaybackControlGlue#updateProgress_E@. @B_android#support#v17#leanback#media#PlaybackControlGlue#getUpdatePeriod_E@ provides a recommended update period."}