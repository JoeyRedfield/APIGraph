{"Functions": {"MatrixCursor(java.lang.String[], int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: names of the columns, the ordering of which determines column ordering elsewhere in this cursor"], ["int", "int: in rows"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new cursor with the given initial capacity.", "history": "added in API level 1", "FullName": "public MatrixCursor (String[] columnNames, int initialCapacity)"}, "newRow()": {"Returns": [["@B_android#database#MatrixCursor#RowBuilder_E@", "builder which can be used to set the column values for the new row"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Adds a new row to the end and returns a builder for that row. Not safe for concurrent use.", "history": "Added in API level 1", "FullName": "public MatrixCursor.RowBuilder newRow ()"}, "getFloat(int)": {"Returns": [["float", "the value of that column as a float."]], "Parameters": [["int", "int: the zero-based index of the target column."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of the requested column as a float. The result and whether this method throws an exception when the column value is null, the column type is not a floating-point type, or the floating-point value is not representable as a float value is implementation-defined.", "history": "Added in API level 1", "FullName": "public float getFloat (int column)"}, "getInt(int)": {"Returns": [["int", "the value of that column as an int."]], "Parameters": [["int", "int: the zero-based index of the target column."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of the requested column as an int. The result and whether this method throws an exception when the column value is null, the column type is not an integral type, or the integer value is outside the range [Integer.MIN_VALUE, Integer.MAX_VALUE] is implementation-defined.", "history": "Added in API level 1", "FullName": "public int getInt (int column)"}, "getDouble(int)": {"Returns": [["double", "the value of that column as a double."]], "Parameters": [["int", "int: the zero-based index of the target column."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of the requested column as a double. The result and whether this method throws an exception when the column value is null, the column type is not a floating-point type, or the floating-point value is not representable as a double value is implementation-defined.", "history": "Added in API level 1", "FullName": "public double getDouble (int column)"}, "getColumnNames()": {"Returns": [["@B_java#lang#String_E@", "the names of the columns returned in this query."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string array holding the names of all of the columns in the result set in the order in which they were listed in the result.", "history": "Added in API level 1", "FullName": "public String[] getColumnNames ()"}, "getCount()": {"Returns": [["int", "the number of rows in the cursor."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the numbers of rows in the cursor.", "history": "Added in API level 1", "FullName": "public int getCount ()"}, "getString(int)": {"Returns": [["@B_java#lang#String_E@", "the value of that column as a String."]], "Parameters": [["int", "int: the zero-based index of the target column."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of the requested column as a String. The result and whether this method throws an exception when the column value is null or the column type is not a string type is implementation-defined.", "history": "Added in API level 1", "FullName": "public String getString (int column)"}, "addRow(java.lang.Object[])": {"Returns": [], "Parameters": [["@B_java#lang#Object_E@", "Object: in the same order as the the column names specified at cursor construction time"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if columnValues.length != columnNames.length"]], "SeeAlso": [], "Permissions": [], "Description": "Adds a new row to the end with the given column values. Not safe for concurrent use.", "history": "Added in API level 1", "FullName": "public void addRow (Object[] columnValues)"}, "isNull(int)": {"Returns": [["boolean", "whether the column value is null."]], "Parameters": [["int", "int: the zero-based index of the target column."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the value in the indicated column is null.", "history": "Added in API level 1", "FullName": "public boolean isNull (int column)"}, "getLong(int)": {"Returns": [["long", "the value of that column as a long."]], "Parameters": [["int", "int: the zero-based index of the target column."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of the requested column as a long. The result and whether this method throws an exception when the column value is null, the column type is not an integral type, or the integer value is outside the range [Long.MIN_VALUE, Long.MAX_VALUE] is implementation-defined.", "history": "Added in API level 1", "FullName": "public long getLong (int column)"}, "MatrixCursor(java.lang.String[])": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: names of the columns, the ordering of which determines column ordering elsewhere in this cursor"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new cursor.", "history": "Added in API level 1", "FullName": "public MatrixCursor (String[] columnNames)"}, "MatrixCursor(java.lang.String[],int)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: names of the columns, the ordering of which determines column ordering elsewhere in this cursor"], ["int", "int: in rows"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new cursor with the given initial capacity.", "history": "Added in API level 1", "FullName": "public MatrixCursor (String[] columnNames, int initialCapacity)"}, "getShort(int)": {"Returns": [["short", "the value of that column as a short."]], "Parameters": [["int", "int: the zero-based index of the target column."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of the requested column as a short. The result and whether this method throws an exception when the column value is null, the column type is not an integral type, or the integer value is outside the range [Short.MIN_VALUE, Short.MAX_VALUE] is implementation-defined.", "history": "Added in API level 1", "FullName": "public short getShort (int column)"}, "getType(int)": {"Returns": [["int", "column value type"]], "Parameters": [["int", "int: the zero-based index of the target column."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns data type of the given column's value. The preferred type of the column is returned but the data may be converted to other types as documented in the get-type methods such as @B_android#database#Cursor#getInt_E@, @B_android#database#Cursor#getFloat_E@ etc. Returned column types are @B_android#database#Cursor#FIELD_TYPE_NULL_E@ @B_android#database#Cursor#FIELD_TYPE_INTEGER_E@ @B_android#database#Cursor#FIELD_TYPE_FLOAT_E@ @B_android#database#Cursor#FIELD_TYPE_STRING_E@ @B_android#database#Cursor#FIELD_TYPE_BLOB_E@", "history": "Added in API level 11", "FullName": "public int getType (int column)"}, "getBlob(int)": {"Returns": [["byte[]", "the value of that column as a byte array."]], "Parameters": [["int", "int: the zero-based index of the target column."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value of the requested column as a byte array. The result and whether this method throws an exception when the column value is null or the column type is not a blob type is implementation-defined.", "history": "Added in API level 1", "FullName": "public byte[] getBlob (int column)"}, "addRow(java.lang.Iterable<?>)": {"Returns": [], "Parameters": [["@B_java#lang#Iterable_E@", "Iterable: in the same order as the the column names specified at cursor construction time"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if columnValues.size() != columnNames.length"]], "SeeAlso": [], "Permissions": [], "Description": "Adds a new row to the end with the given column values. Not safe for concurrent use.", "history": "Added in API level 1", "FullName": "public void addRow (Iterable<?> columnValues)"}}, "Inheritance": ["@B_android#database#AbstractCursor_E@"], "ClassName": "android.database.MatrixCursor", "ClassDesc": "A mutable cursor implementation backed by an array of Objects. Use @B_android#database#MatrixCursor#newRow_E@ to add rows. Automatically expands internal capacity as needed."}