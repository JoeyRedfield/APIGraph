{"Functions": {"valueOf(java.lang.String)": {"Returns": [["@B_android#graphics#PorterDuff#Mode_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public static PorterDuff.Mode valueOf (String name)"}, "values()": {"Returns": [["@B_android#graphics#PorterDuff#Mode_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public static final Mode[] values ()"}}, "Inheritance": ["@B_java#lang#Enum_E@"], "ClassName": "android.graphics.PorterDuff.Mode", "ClassDesc": "The name of the parent class is an homage to the work of Thomas Porter and Tom Duff, presented in their seminal 1984 paper titled \"Compositing Digital Images\". In this paper, the authors describe 12 compositing operators that govern how to compute the color resulting of the composition of a source (the graphics object to render) with a destination (the content of the render target). \"Compositing Digital Images\" was published in Computer Graphics Volume 18, Number 3 dated July 1984. Because the work of Porter and Duff focuses solely on the effects of the alpha channel of the source and destination, the 12 operators described in the original paper are called alpha compositing modes here. For convenience, this class also provides several blending modes, which similarly define the result of compositing a source and a destination but without being constrained to the alpha channel. These blending modes are not defined by Porter and Duff but have been included in this class for convenience purposes. All the example diagrams presented below use the same source and destination images: The order of drawing operations used to generate each diagram is shown in the following code snippet: The documentation of each individual alpha compositing or blending mode below provides the exact equation used to compute alpha and color value of the result of the composition of a source and destination. The result (or output) alpha value is noted \\(\\alpha_{out}\\). The result (or output) color value is noted \\(C_{out}\\)."}