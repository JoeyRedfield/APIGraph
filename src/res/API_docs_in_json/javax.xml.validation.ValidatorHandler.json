{"Functions": {"setProperty(java.lang.String, java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The property name, which is a non-null fully-qualified URI."], ["@B_java#lang#Object_E@", "Object: The requested value for the property."]], "Throws": [["@B_org#xml#sax#SAXNotRecognizedException_E@", "If the property value can't be assigned or retrieved."], ["@B_org#xml#sax#SAXNotSupportedException_E@", "When the @B_javax#xml#validation#ValidatorHandler_E@ recognizes the property name but cannot set the requested value."], ["@B_java#lang#NullPointerException_E@", "When the name parameter is null."]], "SeeAlso": [], "Permissions": [], "Description": "Set the value of a property. The property name is any fully-qualified URI. It is possible for a @B_javax#xml#validation#ValidatorHandler_E@ to recognize a property name but to be unable to change the current value. Some property values may be immutable or mutable only in specific contexts, such as before, during, or after a validation. @B_javax#xml#validation#ValidatorHandler_E@s are not required to recognize setting any specific property names.", "history": "added in API level 8", "FullName": "public void setProperty (String name, Object object)"}, "setFeature(java.lang.String, boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The feature name, which is a non-null fully-qualified URI."], ["boolean", "boolean: The requested value of the feature (true or false)."]], "Throws": [["@B_org#xml#sax#SAXNotRecognizedException_E@", "If the feature value can't be assigned or retrieved."], ["@B_org#xml#sax#SAXNotSupportedException_E@", "When the @B_javax#xml#validation#ValidatorHandler_E@ recognizes the feature name but cannot set the requested value."], ["@B_java#lang#NullPointerException_E@", "When the name parameter is null."]], "SeeAlso": ["@B_javax#xml#validation#ValidatorHandler#getFeature_E@"], "Permissions": [], "Description": "Set the value of a feature flag. Feature can be used to control the way a @B_javax#xml#validation#ValidatorHandler_E@ parses schemas, although @B_javax#xml#validation#ValidatorHandler_E@s are not required to recognize any specific property names. The feature name is any fully-qualified URI. It is possible for a @B_javax#xml#validation#ValidatorHandler_E@ to expose a feature value but to be unable to change the current value. Some feature values may be immutable or mutable only in specific contexts, such as before, during, or after a validation.", "history": "added in API level 8", "FullName": "public void setFeature (String name, boolean value)"}, "getFeature(java.lang.String)": {"Returns": [["boolean", "The current value of the feature (true or false)."]], "Parameters": [["@B_java#lang#String_E@", "String: The feature name, which is a non-null fully-qualified URI."]], "Throws": [["@B_org#xml#sax#SAXNotRecognizedException_E@", "If the feature value can't be assigned or retrieved."], ["@B_org#xml#sax#SAXNotSupportedException_E@", "When the @B_javax#xml#validation#ValidatorHandler_E@ recognizes the feature name but cannot determine its value at this time."], ["@B_java#lang#NullPointerException_E@", "When the name parameter is null."]], "SeeAlso": ["@B_javax#xml#validation#ValidatorHandler#setFeature_E@"], "Permissions": [], "Description": "Look up the value of a feature flag. The feature name is any fully-qualified URI. It is possible for a @B_javax#xml#validation#ValidatorHandler_E@ to recognize a feature name but temporarily be unable to return its value. Some feature values may be available only in specific contexts, such as before, during, or after a validation. Implementors are free (and encouraged) to invent their own features, using names built on their own URIs.", "history": "Added in API level 8", "FullName": "public boolean getFeature (String name)"}, "getTypeInfoProvider()": {"Returns": [["@B_javax#xml#validation#TypeInfoProvider_E@", "null if the validator / schema language does not support the notion of @B_org#w3c#dom#TypeInfo_E@. Otherwise a non-null valid @B_javax#xml#validation#TypeInfoProvider_E@."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtains the @B_javax#xml#validation#TypeInfoProvider_E@ implementation of this @B_javax#xml#validation#ValidatorHandler_E@. The obtained @B_javax#xml#validation#TypeInfoProvider_E@ can be queried during a parse to access the type information determined by the validator. Some schema languages do not define the notion of type, for those languages, this method may not be supported. However, to be compliant with this specification, implementations for W3C XML Schema 1.0 must support this operation.", "history": "Added in API level 8", "FullName": "public abstract TypeInfoProvider getTypeInfoProvider ()"}, "getProperty(java.lang.String)": {"Returns": [["@B_java#lang#Object_E@", "The current value of the property."]], "Parameters": [["@B_java#lang#String_E@", "String: The property name, which is a non-null fully-qualified URI."]], "Throws": [["@B_org#xml#sax#SAXNotRecognizedException_E@", "If the property value can't be assigned or retrieved."], ["@B_org#xml#sax#SAXNotSupportedException_E@", "When the XMLReader recognizes the property name but cannot determine its value at this time."], ["@B_java#lang#NullPointerException_E@", "When the name parameter is null."]], "SeeAlso": ["@B_javax#xml#validation#ValidatorHandler#setProperty_E@"], "Permissions": [], "Description": "Look up the value of a property. The property name is any fully-qualified URI. It is possible for a @B_javax#xml#validation#ValidatorHandler_E@ to recognize a property name but temporarily be unable to return its value. Some property values may be available only in specific contexts, such as before, during, or after a validation. @B_javax#xml#validation#ValidatorHandler_E@s are not required to recognize any specific property names. Implementors are free (and encouraged) to invent their own properties, using names built on their own URIs.", "history": "Added in API level 8", "FullName": "public Object getProperty (String name)"}, "setErrorHandler(org.xml.sax.ErrorHandler)": {"Returns": [], "Parameters": [["@B_org#xml#sax#ErrorHandler_E@", "ErrorHandler: A new error handler to be set. This parameter can be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the @B_org#xml#sax#ErrorHandler_E@ to receive errors encountered during the validation. Error handler can be used to customize the error handling process during a validation. When an @B_org#xml#sax#ErrorHandler_E@ is set, errors found during the validation will be first sent to the @B_org#xml#sax#ErrorHandler_E@. The error handler can abort further validation immediately by throwing @B_org#xml#sax#SAXException_E@ from the handler. Or for example it can print an error to the screen and try to continue the validation by returning normally from the @B_org#xml#sax#ErrorHandler_E@ If any @B_java#lang#Throwable_E@ is thrown from an @B_org#xml#sax#ErrorHandler_E@, the same @B_java#lang#Throwable_E@ object will be thrown toward the root of the call stack. @B_javax#xml#validation#ValidatorHandler_E@ is not allowed to throw @B_org#xml#sax#SAXException_E@ without first reporting it to @B_org#xml#sax#ErrorHandler_E@. When the @B_org#xml#sax#ErrorHandler_E@ is null, the implementation will behave as if the following @B_org#xml#sax#ErrorHandler_E@ is set: When a new @B_javax#xml#validation#ValidatorHandler_E@ object is created, initially this field is set to null.", "history": "Added in API level 8", "FullName": "public abstract void setErrorHandler (ErrorHandler errorHandler)"}, "setContentHandler(org.xml.sax.ContentHandler)": {"Returns": [], "Parameters": [["@B_org#xml#sax#ContentHandler_E@", "ContentHandler: A @B_org#xml#sax#ContentHandler_E@ or a null value."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the @B_org#xml#sax#ContentHandler_E@ which receives the augmented validation result. When a @B_org#xml#sax#ContentHandler_E@ is specified, a @B_javax#xml#validation#ValidatorHandler_E@ will work as a filter and basically copy the incoming events to the specified @B_org#xml#sax#ContentHandler_E@. In doing so, a @B_javax#xml#validation#ValidatorHandler_E@ may modify the events, for example by adding defaulted attributes. A @B_javax#xml#validation#ValidatorHandler_E@ may buffer events to certain extent, but to allow @B_javax#xml#validation#ValidatorHandler_E@ to be used by a parser, the following requirement has to be met. When a callback method on the specified @B_org#xml#sax#ContentHandler_E@ throws an exception, the same exception object must be thrown from the @B_javax#xml#validation#ValidatorHandler_E@. The @B_org#xml#sax#ErrorHandler_E@ should not be notified of such an exception. This method can be called even during a middle of a validation.", "history": "Added in API level 8", "FullName": "public abstract void setContentHandler (ContentHandler receiver)"}, "setFeature(java.lang.String,boolean)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The feature name, which is a non-null fully-qualified URI."], ["boolean", "boolean: The requested value of the feature (true or false)."]], "Throws": [["@B_org#xml#sax#SAXNotRecognizedException_E@", "If the feature value can't be assigned or retrieved."], ["@B_org#xml#sax#SAXNotSupportedException_E@", "When the @B_javax#xml#validation#ValidatorHandler_E@ recognizes the feature name but cannot set the requested value."], ["@B_java#lang#NullPointerException_E@", "When the name parameter is null."]], "SeeAlso": ["@B_javax#xml#validation#ValidatorHandler#getFeature_E@"], "Permissions": [], "Description": "Set the value of a feature flag. Feature can be used to control the way a @B_javax#xml#validation#ValidatorHandler_E@ parses schemas, although @B_javax#xml#validation#ValidatorHandler_E@s are not required to recognize any specific property names. The feature name is any fully-qualified URI. It is possible for a @B_javax#xml#validation#ValidatorHandler_E@ to expose a feature value but to be unable to change the current value. Some feature values may be immutable or mutable only in specific contexts, such as before, during, or after a validation.", "history": "Added in API level 8", "FullName": "public void setFeature (String name, boolean value)"}, "getResourceResolver()": {"Returns": [["@B_org#w3c#dom#ls#LSResourceResolver_E@", "This method returns the object that was last set through the @B_javax#xml#validation#ValidatorHandler#setResourceResolver_E@ method, or null if that method has never been called since this @B_javax#xml#validation#ValidatorHandler_E@ has created."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_javax#xml#validation#ValidatorHandler#setErrorHandler_E@"], "Permissions": [], "Description": "Gets the current @B_org#w3c#dom#ls#LSResourceResolver_E@ set to this @B_javax#xml#validation#ValidatorHandler_E@.", "history": "Added in API level 8", "FullName": "public abstract LSResourceResolver getResourceResolver ()"}, "getContentHandler()": {"Returns": [["@B_org#xml#sax#ContentHandler_E@", "This method returns the object that was last set through the @B_javax#xml#validation#ValidatorHandler#getContentHandler_E@ method, or null if that method has never been called since this @B_javax#xml#validation#ValidatorHandler_E@ has created."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_javax#xml#validation#ValidatorHandler#setContentHandler_E@"], "Permissions": [], "Description": "Gets the @B_org#xml#sax#ContentHandler_E@ which receives the augmented validation result.", "history": "Added in API level 8", "FullName": "public abstract ContentHandler getContentHandler ()"}, "ValidatorHandler()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructor for derived classes. The constructor does nothing. Derived classes must create @B_javax#xml#validation#ValidatorHandler_E@ objects that have @B_org#xml#sax#ErrorHandler_E@ and @B_org#w3c#dom#ls#LSResourceResolver_E@.", "history": "Added in API level 8", "FullName": "protected ValidatorHandler ()"}, "setResourceResolver(org.w3c.dom.ls.LSResourceResolver)": {"Returns": [], "Parameters": [["@B_org#w3c#dom#ls#LSResourceResolver_E@", "LSResourceResolver: A new resource resolver to be set. This parameter can be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the @B_org#w3c#dom#ls#LSResourceResolver_E@ to customize resource resolution while in a validation episode. @B_javax#xml#validation#ValidatorHandler_E@ uses a @B_org#w3c#dom#ls#LSResourceResolver_E@ when it needs to locate external resources while a validation, although exactly what constitutes \"locating external resources\" is up to each schema language. When the @B_org#w3c#dom#ls#LSResourceResolver_E@ is null, the implementation will behave as if the following @B_org#w3c#dom#ls#LSResourceResolver_E@ is set: If a @B_org#w3c#dom#ls#LSResourceResolver_E@ throws a @B_java#lang#RuntimeException_E@ (or instances of its derived classes), then the @B_javax#xml#validation#ValidatorHandler_E@ will abort the parsing and the caller of the validate method will receive the same @B_java#lang#RuntimeException_E@. When a new @B_javax#xml#validation#ValidatorHandler_E@ object is created, initially this field is set to null.", "history": "Added in API level 8", "FullName": "public abstract void setResourceResolver (LSResourceResolver resourceResolver)"}, "setProperty(java.lang.String,java.lang.Object)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The property name, which is a non-null fully-qualified URI."], ["@B_java#lang#Object_E@", "Object: The requested value for the property."]], "Throws": [["@B_org#xml#sax#SAXNotRecognizedException_E@", "If the property value can't be assigned or retrieved."], ["@B_org#xml#sax#SAXNotSupportedException_E@", "When the @B_javax#xml#validation#ValidatorHandler_E@ recognizes the property name but cannot set the requested value."], ["@B_java#lang#NullPointerException_E@", "When the name parameter is null."]], "SeeAlso": [], "Permissions": [], "Description": "Set the value of a property. The property name is any fully-qualified URI. It is possible for a @B_javax#xml#validation#ValidatorHandler_E@ to recognize a property name but to be unable to change the current value. Some property values may be immutable or mutable only in specific contexts, such as before, during, or after a validation. @B_javax#xml#validation#ValidatorHandler_E@s are not required to recognize setting any specific property names.", "history": "Added in API level 8", "FullName": "public void setProperty (String name, Object object)"}, "getErrorHandler()": {"Returns": [["@B_org#xml#sax#ErrorHandler_E@", "This method returns the object that was last set through the @B_javax#xml#validation#ValidatorHandler#setErrorHandler_E@ method, or null if that method has never been called since this @B_javax#xml#validation#ValidatorHandler_E@ has created."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_javax#xml#validation#ValidatorHandler#setErrorHandler_E@"], "Permissions": [], "Description": "Gets the current @B_org#xml#sax#ErrorHandler_E@ set to this @B_javax#xml#validation#ValidatorHandler_E@.", "history": "Added in API level 8", "FullName": "public abstract ErrorHandler getErrorHandler ()"}}, "Inheritance": [], "ClassName": "javax.xml.validation.ValidatorHandler", "ClassDesc": "Streaming validator that works on SAX stream. A @B_javax#xml#validation#ValidatorHandler_E@ object is a thread-unsafe, non-reentrant object. In other words, it is the application's responsibility to make sure that one @B_javax#xml#validation#ValidatorHandler_E@ object is not used from more than one thread at any given time. @B_javax#xml#validation#ValidatorHandler_E@ checks if the SAX events follow the set of constraints described in the associated @B_javax#xml#validation#Schema_E@, and additionally it may modify the SAX events (for example by adding default values, etc.) @B_javax#xml#validation#ValidatorHandler_E@ extends from @B_org#xml#sax#ContentHandler_E@, but it refines the underlying @B_org#xml#sax#ContentHandler_E@ in the following way: A @B_javax#xml#validation#ValidatorHandler_E@ is automatically reset every time the startDocument method is invoked. This spec defines the following feature that must be recognized by all @B_javax#xml#validation#ValidatorHandler_E@ implementations. This feature controls how a @B_javax#xml#validation#ValidatorHandler_E@ introduces namespace bindings that were not present in the original SAX event stream. When this feature is set to true, it must make sure that the user's @B_org#xml#sax#ContentHandler_E@ will see the corresponding xmlns* attribute in the @B_org#xml#sax#Attributes_E@ object of the @B_org#xml#sax#ContentHandler#startElement_E@ callback. Otherwise, xmlns* attributes must not be added to @B_org#xml#sax#Attributes_E@ that's passed to the user-specified @B_org#xml#sax#ContentHandler_E@. (Note that regardless of this switch, namespace bindings are always notified to applications through @B_org#xml#sax#ContentHandler#startPrefixMapping_E@ and @B_org#xml#sax#ContentHandler#endPrefixMapping_E@ methods of the @B_org#xml#sax#ContentHandler_E@ specified by the user.) Note that this feature does NOT affect the way a @B_javax#xml#validation#ValidatorHandler_E@ receives SAX events. It merely changes the way it augments SAX events. This feature is set to false by default."}