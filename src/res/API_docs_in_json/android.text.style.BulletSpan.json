{"Functions": {"BulletSpan()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a @B_android#text#style#BulletSpan_E@ with the default values.", "history": "Added in API level 1", "FullName": "public BulletSpan ()"}, "BulletSpan(int, int)": {"Returns": [], "Parameters": [["int", "int: the distance, in pixels, between the bullet point and the paragraph."], ["int", "int: the bullet point color, as a color integer"]], "Throws": [], "SeeAlso": ["@B_android#content#res#Resources#getColor_E@"], "Permissions": [], "Description": "Creates a @B_android#text#style#BulletSpan_E@ based on a gap width and a color integer.", "history": "added in API level 1", "FullName": "public BulletSpan (int gapWidth, int color)"}, "getColor()": {"Returns": [["int", "the bullet point color"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the bullet point color.", "history": "Added in API level 28", "FullName": "public int getColor ()"}, "drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)": {"Returns": [], "Parameters": [["@B_android#graphics#Canvas_E@", "Canvas: This value must never be null."], ["@B_android#graphics#Paint_E@", "Paint: This value must never be null."], ["int", "int: the current position of the margin"], ["int", "int: the base direction of the paragraph; if negative, the margin is to the right of the text, otherwise it is to the left."], ["int", "int: the top of the line"], ["int", "int: the baseline of the line"], ["int", "int: the bottom of the line"], ["@B_java#lang#CharSequence_E@", "CharSequence: This value must never be null."], ["int", "int: the start of the line"], ["int", "int: the end of the line"], ["boolean", "boolean: true if this is the first line of its paragraph"], ["@B_android#text#Layout_E@", "Layout: This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Renders the leading margin. This is called before the margin has been adjusted by the value returned by @B_android#text#style#LeadingMarginSpan#getLeadingMargin_E@.", "history": "Added in API level 1", "FullName": "public void drawLeadingMargin (Canvas canvas, Paint paint, int x, int dir, int top, int baseline, int bottom, CharSequence text, int start, int end, boolean first, Layout layout)"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 3", "FullName": "public int describeContents ()"}, "BulletSpan(int,int,int)": {"Returns": [], "Parameters": [["int", "int: the distance, in pixels, between the bullet point and the paragraph."], ["int", "int: the bullet point color, as a color integer."], ["int", "int: the radius of the bullet point, in pixels. Value is 0 or greater"]], "Throws": [], "SeeAlso": ["@B_android#content#res#Resources#getColor_E@"], "Permissions": [], "Description": "Creates a @B_android#text#style#BulletSpan_E@ based on a gap width and a color integer.", "history": "Added in API level 28", "FullName": "public BulletSpan (int gapWidth, int color, int bulletRadius)"}, "BulletSpan(int,int)": {"Returns": [], "Parameters": [["int", "int: the distance, in pixels, between the bullet point and the paragraph."], ["int", "int: the bullet point color, as a color integer"]], "Throws": [], "SeeAlso": ["@B_android#content#res#Resources#getColor_E@"], "Permissions": [], "Description": "Creates a @B_android#text#style#BulletSpan_E@ based on a gap width and a color integer.", "history": "Added in API level 1", "FullName": "public BulletSpan (int gapWidth, int color)"}, "getBulletRadius()": {"Returns": [["int", "the radius, in pixels, of the bullet point."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the radius, in pixels, of the bullet point.", "history": "Added in API level 28", "FullName": "public int getBulletRadius ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: The Parcel in which the object should be written.This value must never be null."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "added in API level 3", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "BulletSpan(int, int, int)": {"Returns": [], "Parameters": [["int", "int: the distance, in pixels, between the bullet point and the paragraph."], ["int", "int: the bullet point color, as a color integer."], ["int", "int: the radius of the bullet point, in pixels."]], "Throws": [], "SeeAlso": ["@B_android#content#res#Resources#getColor_E@"], "Permissions": [], "Description": "Creates a @B_android#text#style#BulletSpan_E@ based on a gap width and a color integer.", "history": "added in API level 28", "FullName": "public BulletSpan (int gapWidth, int color, int bulletRadius)"}, "getSpanTypeId()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a special type identifier for this span class.", "history": "Added in API level 3", "FullName": "public int getSpanTypeId ()"}, "BulletSpan(android.os.Parcel)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a @B_android#text#style#BulletSpan_E@ from a parcel.", "history": "Added in API level 3", "FullName": "public BulletSpan (Parcel src)"}, "getGapWidth()": {"Returns": [["int", "the distance, in pixels, between the bullet point and the paragraph."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the distance, in pixels, between the bullet point and the paragraph.", "history": "Added in API level 28", "FullName": "public int getGapWidth ()"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: This value must never be null."], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Flatten this object in to a Parcel.", "history": "Added in API level 3", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "BulletSpan(int)": {"Returns": [], "Parameters": [["int", "int: the distance, in pixels, between the bullet point and the paragraph."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a @B_android#text#style#BulletSpan_E@ based on a gap width", "history": "Added in API level 1", "FullName": "public BulletSpan (int gapWidth)"}, "getLeadingMargin(boolean)": {"Returns": [["int", "the offset for the margin."]], "Parameters": [["boolean", "boolean: true if the request is for the first line of a paragraph, false for subsequent lines"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the amount by which to adjust the leading margin. Positive values move away from the leading edge of the paragraph, negative values move towards it.", "history": "Added in API level 1", "FullName": "public int getLeadingMargin (boolean first)"}}, "Inheritance": [], "ClassName": "android.text.style.BulletSpan", "ClassDesc": "A span which styles paragraphs as bullet points (respecting layout direction). BulletSpans must be attached from the first character to the last character of a single paragraph, otherwise the bullet point will not be displayed but the first paragraph encountered will have a leading margin. BulletSpans allow configuring the following elements: For example, a BulletSpan using the default values can be constructed like this: To construct a BulletSpan with a gap width of 40px, green bullet point and bullet radius of 20px:"}