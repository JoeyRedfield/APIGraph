{"Functions": {"overridesItemVisibility()": {"Returns": [["boolean", "true if this ActionProvider overrides the visibility of the MenuItem it is bound to, false otherwise. The default implementation returns false."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v4#view#ActionProvider#isVisible_E@"], "Permissions": [], "Description": "The result of this method determines whether or not @B_android#support#v4#view#ActionProvider#isVisible_E@ will be used by the @B_android#view#MenuItem_E@ this ActionProvider is bound to help determine its visibility.", "history": "added in version 22.0.0", "FullName": "boolean overridesItemVisibility ()"}, "onPerformDefaultAction()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Performs an optional default action. For the case of an action provider placed in a menu item not shown as an action this method is invoked if previous callbacks for processing menu selection has handled the event. A menu item selection is processed in the following order: Receiving a call to @B_android#view#MenuItem#OnMenuItemClickListener#onMenuItemClick_E@. Receiving a call to @B_android#app#Activity#onOptionsItemSelected_E@ FragmentActivity.onOptionsItemSelected(MenuItem)} Receiving a call to @B_android#support#v4#app#Fragment#onOptionsItemSelected_E@ Fragment.onOptionsItemSelected(MenuItem)} Launching the @B_android#content#Intent_E@ set via @B_android#view#MenuItem#setIntent_E@ Invoking this method. The default implementation does not perform any action and returns false.", "history": "added in version 22.0.0", "FullName": "boolean onPerformDefaultAction ()"}, "onPrepareSubMenu(android.view.SubMenu)": {"Returns": [], "Parameters": [["@B_android#view#SubMenu_E@", "SubMenu: Submenu that will be displayed"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called to prepare an associated submenu for the menu item backed by this ActionProvider. if @B_android#support#v4#view#ActionProvider#hasSubMenu_E@ returns true, this method will be called when the menu item is selected to prepare the submenu for presentation to the user. Apps may use this to create or alter submenu content right before display.", "history": "added in version 22.0.0", "FullName": "void onPrepareSubMenu (SubMenu subMenu)"}, "getContext()": {"Returns": [["@B_android#content#Context_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the context associated with this action provider.", "history": "added in version 22.0.0", "FullName": "Context getContext ()"}, "refreshVisibility()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "If this ActionProvider is associated with an item in a menu, refresh the visibility of the item based on @B_android#support#v4#view#ActionProvider#overridesItemVisibility_E@ and @B_android#support#v4#view#ActionProvider#isVisible_E@. If @B_android#support#v4#view#ActionProvider#overridesItemVisibility_E@ returns false, this call will have no effect.", "history": "added in version 22.0.0", "FullName": "void refreshVisibility ()"}, "ActionProvider(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: Context for accessing resources."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new instance.", "history": "added in version 22.0.0", "FullName": "ActionProvider (Context context)"}, "hasSubMenu()": {"Returns": [["boolean", "true if the item backed by this provider should have an associated submenu"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Determines if this ActionProvider has a submenu associated with it. Associated submenus will be shown when an action view is not. This provider instance will receive a call to @B_android#support#v4#view#ActionProvider#onPrepareSubMenu_E@ after the call to @B_android#support#v4#view#ActionProvider#onPerformDefaultAction_E@ and before a submenu is displayed to the user.", "history": "added in version 22.0.0", "FullName": "boolean hasSubMenu ()"}, "isVisible()": {"Returns": [["boolean", "true if the MenuItem this ActionProvider is bound to is visible, false if it is invisible. The default implementation returns true."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "If @B_android#support#v4#view#ActionProvider#overridesItemVisibility_E@ returns true, the return value of this method will help determine the visibility of the @B_android#view#MenuItem_E@ this ActionProvider is bound to. If the MenuItem's visibility is explicitly set to false by the application, the MenuItem will not be shown, even if this method returns true.", "history": "added in version 22.0.0", "FullName": "boolean isVisible ()"}, "onCreateActionView(android.view.MenuItem)": {"Returns": [["@B_android#view#View_E@", "the new action view"]], "Parameters": [["@B_android#view#MenuItem_E@", "MenuItem: MenuItem to create the action view for"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Factory method called by the Android framework to create new action views. This method returns a new action view for the given MenuItem. If your ActionProvider implementation overrides the deprecated no-argument overload @B_android#support#v4#view#ActionProvider#onCreateActionView_E@, overriding this method for devices running API 16 or later is recommended but optional. The default implementation calls @B_android#support#v4#view#ActionProvider#onCreateActionView_E@ for compatibility with applications written for older platform versions.", "history": "added in version 22.0.0", "FullName": "View onCreateActionView (MenuItem forItem)"}, "onCreateActionView()": {"Returns": [["@B_android#view#View_E@", "A new action view."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Factory method for creating new action views.", "history": "added in version 22.0.0", "FullName": "View onCreateActionView ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v4.view.ActionProvider", "ClassDesc": "This class is a mediator for accomplishing a given task, for example sharing a file. It is responsible for creating a view that performs an action that accomplishes the task. This class also implements other functions such a performing a default action. only, you should instead use the framework https:##developer#android#com@B_android#view#ActionProvider_E@ class. An ActionProvider can be optionally specified for a https:##developer#android#com@B_android#view#MenuItem_E@ and in such a case it will be responsible for creating the action view that appears in the https:##developer#android#com@B_android#app#ActionBar_E@ as a substitute for the menu item when the item is displayed as an action item. Also the provider is responsible for performing a default action if a menu item placed on the overflow menu of the ActionBar is selected and none of the menu item callbacks has handled the selection. For this case the provider can also optionally provide a sub-menu for accomplishing the task at hand. There are two ways for using an action provider for creating and handling of action views: Setting the action provider on a https:##developer#android#com@B_android#view#MenuItem_E@ directly by calling @B_android#support#v4#view#MenuItemCompat#setActionProvider_E@. Declaring the action provider in the menu XML resource. For example: To create a custom action provider, extend ActionProvider and implement its callback methods as necessary. In particular, implement the following methods:"}