{"Functions": {"doSendRequest(org.apache.http.HttpRequest, org.apache.http.HttpClientConnection, org.apache.http.protocol.HttpContext)": {"Returns": [["", "a terminal response received as part of an expect-continue handshake, or null if the expect-continue handshake is not used"]], "Parameters": [["@B_org#apache#http#HttpRequest_E@", "the request to send, already @B_org#apache#http#protocol#HttpRequestExecutor#preProcess_E@"], ["@B_org#apache#http#HttpClientConnection_E@", "the connection over which to send the request, already established"], ["@B_org#apache#http#protocol#HttpContext_E@", "the context for sending the request"]], "Throws": [["@B_org#apache#http#HttpException_E@", "in case of a protocol or processing problem"], ["@B_java#io#IOException_E@", "in case of an I/O problem"]], "SeeAlso": [], "Permissions": [], "Description": "Send a request over a connection. This method also handles the expect-continue handshake if necessary. If it does not have to handle an expect-continue handshake, it will not use the connection for reading or anything else that depends on data coming in over the connection.", "history": "Added in API level 1", "FullName": "protected HttpResponse doSendRequest (HttpRequest request, HttpClientConnection conn, HttpContext context)"}, "doReceiveResponse(org.apache.http.HttpRequest, org.apache.http.HttpClientConnection, org.apache.http.protocol.HttpContext)": {"Returns": [["", "the final response, not yet post-processed"]], "Parameters": [["@B_org#apache#http#HttpRequest_E@", "the request for which to obtain the response"], ["@B_org#apache#http#HttpClientConnection_E@", "the connection over which the request was sent"], ["@B_org#apache#http#protocol#HttpContext_E@", "the context for receiving the response"]], "Throws": [["@B_org#apache#http#HttpException_E@", "in case of a protocol or processing problem"], ["@B_java#io#IOException_E@", "in case of an I/O problem"]], "SeeAlso": [], "Permissions": [], "Description": "Wait for and receive a response. This method will automatically ignore intermediate responses with status code 1xx.", "history": "Added in API level 1", "FullName": "protected HttpResponse doReceiveResponse (HttpRequest request, HttpClientConnection conn, HttpContext context)"}, "preProcess(org.apache.http.HttpRequest, org.apache.http.protocol.HttpProcessor, org.apache.http.protocol.HttpContext)": {"Returns": [], "Parameters": [["@B_org#apache#http#HttpRequest_E@", "the request to prepare"], ["@B_org#apache#http#protocol#HttpProcessor_E@", "the processor to use"], ["@B_org#apache#http#protocol#HttpContext_E@", "the context for sending the request"]], "Throws": [["@B_org#apache#http#HttpException_E@", "in case of a protocol or processing problem"], ["@B_java#io#IOException_E@", "in case of an I/O problem"]], "SeeAlso": [], "Permissions": [], "Description": "Prepare a request for sending.", "history": "Added in API level 1", "FullName": "public void preProcess (HttpRequest request, HttpProcessor processor, HttpContext context)"}, "execute(org.apache.http.HttpRequest, org.apache.http.HttpClientConnection, org.apache.http.protocol.HttpContext)": {"Returns": [["", "the response to the request, postprocessed"]], "Parameters": [["@B_org#apache#http#HttpRequest_E@", "the request to send. It will be preprocessed."], ["@B_org#apache#http#HttpClientConnection_E@", "the open connection over which to send"]], "Throws": [["@B_org#apache#http#HttpException_E@", "in case of a protocol or processing problem"], ["@B_java#io#IOException_E@", "in case of an I/O problem"]], "SeeAlso": [], "Permissions": [], "Description": "Synchronously send a request and obtain the response.", "history": "Added in API level 1", "FullName": "public HttpResponse execute (HttpRequest request, HttpClientConnection conn, HttpContext context)"}, "HttpRequestExecutor()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new request executor.", "history": "Added in API level 1", "FullName": "public HttpRequestExecutor ()"}, "postProcess(org.apache.http.HttpResponse, org.apache.http.protocol.HttpProcessor, org.apache.http.protocol.HttpContext)": {"Returns": [], "Parameters": [["@B_org#apache#http#HttpResponse_E@", "the response object to finish"], ["@B_org#apache#http#protocol#HttpProcessor_E@", "the processor to use"], ["@B_org#apache#http#protocol#HttpContext_E@", "the context for post-processing the response"]], "Throws": [["@B_org#apache#http#HttpException_E@", "in case of a protocol or processing problem"], ["@B_java#io#IOException_E@", "in case of an I/O problem"]], "SeeAlso": [], "Permissions": [], "Description": "Finish a response. This includes post-processing of the response object. It does", "history": "Added in API level 1", "FullName": "public void postProcess (HttpResponse response, HttpProcessor processor, HttpContext context)"}, "canResponseHaveBody(org.apache.http.HttpRequest, org.apache.http.HttpResponse)": {"Returns": [], "Parameters": [["@B_org#apache#http#HttpRequest_E@", "the request, to obtain the executed method"], ["@B_org#apache#http#HttpResponse_E@", "the response, to obtain the status code"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Decide whether a response comes with an entity. The implementation in this class is based on RFC 2616. Unknown methods and response codes are supposed to indicate responses with an entity. Derived executors can override this method to handle methods and response codes not specified in RFC 2616.", "history": "Added in API level 1", "FullName": "protected boolean canResponseHaveBody (HttpRequest request, HttpResponse response)"}}, "Inheritance": [], "ClassName": "org.apache.http.protocol.HttpRequestExecutor", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Sends HTTP requests and receives the responses. Takes care of request preprocessing and response postprocessing by the respective interceptors."}