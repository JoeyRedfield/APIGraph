{"Functions": {"onLeaderboardScoresLoaded(int, com.google.android.gms.games.leaderboard.LeaderboardBuffer, com.google.android.gms.games.leaderboard.LeaderboardScoreBuffer)": {"Returns": [], "Parameters": [["int", "A status code indicating the result of the operation."], ["@B_com#google#android#gms#games#leaderboard#LeaderboardBuffer_E@", "The leaderboard that the requested scores belong to. This is guaranteed to be non-null, and to contain at most one element. The listener must close this object when finished."], ["@B_com#google#android#gms#games#leaderboard#LeaderboardScoreBuffer_E@", "The leaderboard scores that were requested. This is guaranteed to be non-null, though it may be empty. The listener must close this object when finished."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when leaderboard scores have been loaded. Possible status codes include: @B_com#google#android#gms#games#GamesClient#STATUS_OK_E@ if data was successfully loaded and is up-to-date. @B_com#google#android#gms#games#GamesClient#STATUS_NETWORK_ERROR_STALE_DATA_E@ if the device was unable to retrieve the latest data from the network. @B_com#google#android#gms#games#GamesClient#STATUS_CLIENT_RECONNECT_REQUIRED_E@ if the @B_com#google#android#gms#games#GamesClient_E@ needs to reconnect to the service to access this data. @B_com#google#android#gms#games#GamesClient#STATUS_LICENSE_CHECK_FAILED_E@ if the game is not licensed to the user. @B_com#google#android#gms#games#GamesClient#STATUS_INTERNAL_ERROR_E@ if an unexpected error occurred in the service.", "history": "", "FullName": "public abstract void onLeaderboardScoresLoaded (int statusCode, LeaderboardBuffer leaderboard, LeaderboardScoreBuffer scores)"}}, "Inheritance": [], "ClassName": "com.google.android.gms.games.leaderboard.OnLeaderboardScoresLoadedListener", "ClassDesc": "Listener for receiving callbacks when leaderboard scores have been loaded."}