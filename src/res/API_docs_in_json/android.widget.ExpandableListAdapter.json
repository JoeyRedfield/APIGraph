{"Functions": {"isChildSelectable(int,int)": {"Returns": [["boolean", "whether the child is selectable."]], "Parameters": [["int", "int: the position of the group that contains the child"], ["int", "int: the position of the child within the group"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Whether the child at the specified position is selectable.", "history": "Added in API level 1", "FullName": "public abstract boolean isChildSelectable (int groupPosition, int childPosition)"}, "onGroupExpanded(int)": {"Returns": [], "Parameters": [["int", "int: The group being expanded."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a group is expanded.", "history": "Added in API level 1", "FullName": "public abstract void onGroupExpanded (int groupPosition)"}, "isChildSelectable(int, int)": {"Returns": [["boolean", "whether the child is selectable."]], "Parameters": [["int", "int: the position of the group that contains the child"], ["int", "int: the position of the child within the group"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Whether the child at the specified position is selectable.", "history": "added in API level 1", "FullName": "public abstract boolean isChildSelectable (int groupPosition, int childPosition)"}, "getChild(int, int)": {"Returns": [["@B_java#lang#Object_E@", "the data of the child"]], "Parameters": [["int", "int: the position of the group that the child resides in"], ["int", "int: the position of the child with respect to other children in the group"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the data associated with the given child within the given group.", "history": "added in API level 1", "FullName": "public abstract Object getChild (int groupPosition, int childPosition)"}, "getGroupId(int)": {"Returns": [["long", "the ID associated with the group"]], "Parameters": [["int", "int: the position of the group for which the ID is wanted"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the ID for the group at the given position. This group ID must be unique across groups. The combined ID (see @B_android#widget#ExpandableListAdapter#getCombinedGroupId_E@) must be unique across ALL items (groups and all children).", "history": "Added in API level 1", "FullName": "public abstract long getGroupId (int groupPosition)"}, "getCombinedChildId(long, long)": {"Returns": [["long", "The unique (and possibly stable) ID of the child across all groups and children in this list."]], "Parameters": [["long", "long: The ID of the group that contains this child."], ["long", "long: The ID of the child."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets an ID for a child that is unique across any item (either group or child) that is in this list. Expandable lists require each item (group or child) to have a unique ID among all children and groups in the list. This method is responsible for returning that unique ID given a child's ID and its group's ID. Furthermore, if @B_android#widget#ExpandableListAdapter#hasStableIds_E@ is true, the returned ID must be stable as well.", "history": "added in API level 1", "FullName": "public abstract long getCombinedChildId (long groupId, long childId)"}, "getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)": {"Returns": [["@B_android#view#View_E@", "the View corresponding to the child at the specified position"]], "Parameters": [["int", "int: the position of the group that contains the child"], ["int", "int: the position of the child (for which the View is returned) within the group"], ["boolean", "boolean: Whether the child is the last child within the group"], ["@B_android#view#View_E@", "View: the old view to reuse, if possible. You should check that this view is non-null and of an appropriate type before using. If it is not possible to convert this view to display the correct data, this method can create a new view. It is not guaranteed that the convertView will have been previously created by @B_android#widget#ExpandableListAdapter#getChildView_E@."], ["@B_android#view#ViewGroup_E@", "ViewGroup: the parent that this view will eventually be attached to"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets a View that displays the data for the given child within the given group.", "history": "Added in API level 1", "FullName": "public abstract View getChildView (int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent)"}, "getChild(int,int)": {"Returns": [["@B_java#lang#Object_E@", "the data of the child"]], "Parameters": [["int", "int: the position of the group that the child resides in"], ["int", "int: the position of the child with respect to other children in the group"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the data associated with the given child within the given group.", "history": "Added in API level 1", "FullName": "public abstract Object getChild (int groupPosition, int childPosition)"}, "unregisterDataSetObserver(android.database.DataSetObserver)": {"Returns": [], "Parameters": [["@B_android#database#DataSetObserver_E@", "DataSetObserver no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#widget#Adapter#unregisterDataSetObserver_E@"], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public abstract void unregisterDataSetObserver (DataSetObserver observer)"}, "getGroup(int)": {"Returns": [["@B_java#lang#Object_E@", "the data child for the specified group"]], "Parameters": [["int", "int: the position of the group"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the data associated with the given group.", "history": "Added in API level 1", "FullName": "public abstract Object getGroup (int groupPosition)"}, "getChildrenCount(int)": {"Returns": [["int", "the children count in the specified group"]], "Parameters": [["int", "int: the position of the group for which the children count should be returned"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the number of children in a specified group.", "history": "Added in API level 1", "FullName": "public abstract int getChildrenCount (int groupPosition)"}, "onGroupCollapsed(int)": {"Returns": [], "Parameters": [["int", "int: The group being collapsed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a group is collapsed.", "history": "Added in API level 1", "FullName": "public abstract void onGroupCollapsed (int groupPosition)"}, "areAllItemsEnabled()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#widget#ListAdapter#areAllItemsEnabled_E@"], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public abstract boolean areAllItemsEnabled ()"}, "isEmpty()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#widget#Adapter#isEmpty_E@"], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public abstract boolean isEmpty ()"}, "getGroupCount()": {"Returns": [["int", "the number of groups"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the number of groups.", "history": "Added in API level 1", "FullName": "public abstract int getGroupCount ()"}, "getGroupView(int,boolean,android.view.View,android.view.ViewGroup)": {"Returns": [["@B_android#view#View_E@", "the View corresponding to the group at the specified position"]], "Parameters": [["int", "int: the position of the group for which the View is returned"], ["boolean", "boolean: whether the group is expanded or collapsed"], ["@B_android#view#View_E@", "View: the old view to reuse, if possible. You should check that this view is non-null and of an appropriate type before using. If it is not possible to convert this view to display the correct data, this method can create a new view. It is not guaranteed that the convertView will have been previously created by @B_android#widget#ExpandableListAdapter#getGroupView_E@."], ["@B_android#view#ViewGroup_E@", "ViewGroup: the parent that this view will eventually be attached to"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets a View that displays the given group. This View is only for the group--the Views for the group's children will be fetched using @B_android#widget#ExpandableListAdapter#getChildView_E@.", "history": "Added in API level 1", "FullName": "public abstract View getGroupView (int groupPosition, boolean isExpanded, View convertView, ViewGroup parent)"}, "getCombinedGroupId(long)": {"Returns": [["long", "The unique (and possibly stable) ID of the group across all groups and children in this list."]], "Parameters": [["long", "long: The ID of the group"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets an ID for a group that is unique across any item (either group or child) that is in this list. Expandable lists require each item (group or child) to have a unique ID among all children and groups in the list. This method is responsible for returning that unique ID given a group's ID. Furthermore, if @B_android#widget#ExpandableListAdapter#hasStableIds_E@ is true, the returned ID must be stable as well.", "history": "Added in API level 1", "FullName": "public abstract long getCombinedGroupId (long groupId)"}, "getChildId(int,int)": {"Returns": [["long", "the ID associated with the child"]], "Parameters": [["int", "int: the position of the group that contains the child"], ["int", "int: the position of the child within the group for which the ID is wanted"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the ID for the given child within the given group. This ID must be unique across all children within the group. The combined ID (see @B_android#widget#ExpandableListAdapter#getCombinedChildId_E@) must be unique across ALL items (groups and all children).", "history": "Added in API level 1", "FullName": "public abstract long getChildId (int groupPosition, int childPosition)"}, "registerDataSetObserver(android.database.DataSetObserver)": {"Returns": [], "Parameters": [["@B_android#database#DataSetObserver_E@", "DataSetObserver no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#widget#Adapter#registerDataSetObserver_E@"], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public abstract void registerDataSetObserver (DataSetObserver observer)"}, "getChildId(int, int)": {"Returns": [["long", "the ID associated with the child"]], "Parameters": [["int", "int: the position of the group that contains the child"], ["int", "int: the position of the child within the group for which the ID is wanted"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the ID for the given child within the given group. This ID must be unique across all children within the group. The combined ID (see @B_android#widget#ExpandableListAdapter#getCombinedChildId_E@) must be unique across ALL items (groups and all children).", "history": "added in API level 1", "FullName": "public abstract long getChildId (int groupPosition, int childPosition)"}, "hasStableIds()": {"Returns": [["boolean", "whether or not the same ID always refers to the same object"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#widget#Adapter#hasStableIds_E@"], "Permissions": [], "Description": "Indicates whether the child and group IDs are stable across changes to the underlying data.", "history": "Added in API level 1", "FullName": "public abstract boolean hasStableIds ()"}, "getCombinedChildId(long,long)": {"Returns": [["long", "The unique (and possibly stable) ID of the child across all groups and children in this list."]], "Parameters": [["long", "long: The ID of the group that contains this child."], ["long", "long: The ID of the child."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets an ID for a child that is unique across any item (either group or child) that is in this list. Expandable lists require each item (group or child) to have a unique ID among all children and groups in the list. This method is responsible for returning that unique ID given a child's ID and its group's ID. Furthermore, if @B_android#widget#ExpandableListAdapter#hasStableIds_E@ is true, the returned ID must be stable as well.", "history": "Added in API level 1", "FullName": "public abstract long getCombinedChildId (long groupId, long childId)"}}, "Inheritance": [], "ClassName": "android.widget.ExpandableListAdapter", "ClassDesc": "An adapter that links a @B_android#widget#ExpandableListView_E@ with the underlying data. The implementation of this interface will provide access to the data of the children (categorized by groups), and also instantiate @B_android#view#View_E@s for children and groups."}