{"Functions": {"onGetInputPortReceivers()": {"Returns": [["@B_android#media#midi#MidiReceiver_E@", "array of MidiReceivers"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an array of @B_android#media#midi#MidiReceiver_E@ for the device's input ports. Subclasses must override this to provide the receivers which will receive data sent to the device's input ports. An empty array should be returned if the device has no input ports.", "history": "Added in API level 23", "FullName": "public abstract MidiReceiver[] onGetInputPortReceivers ()"}, "MidiDeviceService()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 23", "FullName": "public MidiDeviceService ()"}, "onClose()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called to notify when our device has been closed by all its clients", "history": "Added in API level 23", "FullName": "public void onClose ()"}, "onCreate()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called by the system when the service is first created. Do not call this method directly.", "history": "Added in API level 23", "FullName": "public void onCreate ()"}, "getDeviceInfo()": {"Returns": [["@B_android#media#midi#MidiDeviceInfo_E@", "our MidiDeviceInfo"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "returns the @B_android#media#midi#MidiDeviceInfo_E@ instance for this service", "history": "Added in API level 23", "FullName": "public final MidiDeviceInfo getDeviceInfo ()"}, "getOutputPortReceivers()": {"Returns": [["@B_android#media#midi#MidiReceiver_E@", "array of MidiReceivers"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an array of @B_android#media#midi#MidiReceiver_E@ for the device's output ports. These can be used to send data out the device's output ports.", "history": "Added in API level 23", "FullName": "public final MidiReceiver[] getOutputPortReceivers ()"}, "onBind(android.content.Intent)": {"Returns": [["@B_android#os#IBinder_E@", "Return an IBinder through which clients can call on to the service."]], "Parameters": [["@B_android#content#Intent_E@", "Intent: The Intent that was used to bind to this service, as given to @B_android#content#Context#bindService_E@. Note that any extras that were included with the Intent at that point will not be seen here."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the communication channel to the service. May return null if clients can not bind to the service. The returned @B_android#os#IBinder_E@ is usually for a complex interface that has been Note that unlike other application components, calls on to the IBinder interface returned here may not happen on the main thread of the process. More information about the main thread can be found in", "history": "Added in API level 23", "FullName": "public IBinder onBind (Intent intent)"}, "onDeviceStatusChanged(android.media.midi.MidiDeviceStatus)": {"Returns": [], "Parameters": [["@B_android#media#midi#MidiDeviceStatus_E@", "MidiDeviceStatus: the number of the port that was opened"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called to notify when an our @B_android#media#midi#MidiDeviceStatus_E@ has changed", "history": "Added in API level 23", "FullName": "public void onDeviceStatusChanged (MidiDeviceStatus status)"}}, "Inheritance": ["@B_android#content#Context_E@", "@B_android#content#ContextWrapper_E@", "@B_android#app#Service_E@"], "ClassName": "android.media.midi.MidiDeviceService", "ClassDesc": "A service that implements a virtual MIDI device. Subclasses must implement the @B_android#media#midi#MidiDeviceService#onGetInputPortReceivers_E@ method to provide a list of @B_android#media#midi#MidiReceiver_E@s to receive data sent to the device's input ports. Similarly, subclasses can call @B_android#media#midi#MidiDeviceService#getOutputPortReceivers_E@ to fetch a list of @B_android#media#midi#MidiReceiver_E@s for sending data out the output ports. To extend this class, you must declare the service in your manifest file with an intent filter with the @B_android#media#midi#MidiDeviceService#SERVICE_INTERFACE_E@ action and meta-data to describe the virtual device. For example:"}