{"Functions": {"areSnapshotsEnabled()": {"Returns": [["", "Whether or not this game supports snapshots."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether or not this game supports snapshots.", "history": "", "FullName": "public boolean areSnapshotsEnabled ()"}, "getAchievementTotalCount()": {"Returns": [["", "The number of achievements registered for this game."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the number of achievements registered for this game.", "history": "", "FullName": "public int getAchievementTotalCount ()"}, "describeContents()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int describeContents ()"}, "getThemeColor()": {"Returns": [["", "The color to use as an RGB hex triplet, e.g. \"E0E0E0\""]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the theme color for this game. The theme color is used to configure the appearance of Play Games UIs.", "history": "", "FullName": "public String getThemeColor ()"}, "isRealTimeMultiplayerEnabled()": {"Returns": [["", "Whether or not this game supports real-time mulitplayer."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether or not this game supports real-time multiplayer.", "history": "", "FullName": "public boolean isRealTimeMultiplayerEnabled ()"}, "getPrimaryCategory()": {"Returns": [["", "The primary category of the game."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the primary category of the game - this is may be null.", "history": "", "FullName": "public String getPrimaryCategory ()"}, "getHiResImageUri()": {"Returns": [["", "A URI that can be used to load the game's hi-res image, or null if the game has no hi-res image."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves an image URI that can be used to load the game's hi-res image. Returns null if game has no hi-res image. To retrieve the Image from the @B_android#net#Uri_E@, use @B_com#google#android#gms#common#images#ImageManager_E@.", "history": "", "FullName": "public Uri getHiResImageUri ()"}, "getFeaturedImageUri()": {"Returns": [["", "A URI that can be used to load the game's featured image, or null if the game has no featured image."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves an image URI that can be used to load the game's featured (banner) image from Google Play. Returns null if game has no featured image. To retrieve the Image from the @B_android#net#Uri_E@, use @B_com#google#android#gms#common#images#ImageManager_E@.", "history": "", "FullName": "public Uri getFeaturedImageUri ()"}, "getIconImageUri()": {"Returns": [["", "A URI that can be used to load the game's icon, or null if the game has no icon."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves an image URI that can be used to load the game's icon. Returns null if game has no icon. To retrieve the Image from the @B_android#net#Uri_E@, use @B_com#google#android#gms#common#images#ImageManager_E@.", "history": "", "FullName": "public Uri getIconImageUri ()"}, "isPlayEnabledGame()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public boolean isPlayEnabledGame ()"}, "getLeaderboardCount()": {"Returns": [["", "The number of leaderboards registered for this game."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the number of leaderboards registered for this game.", "history": "", "FullName": "public int getLeaderboardCount ()"}, "equals(java.lang.Object)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public boolean equals (Object obj)"}, "getApplicationId()": {"Returns": [["", "The application ID for this game."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the application ID for this game.", "history": "", "FullName": "public String getApplicationId ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "hashCode()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int hashCode ()"}, "getDescription()": {"Returns": [["", "The description of this game."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the description of this game.", "history": "", "FullName": "public String getDescription ()"}, "getDisplayName()": {"Returns": [["", "The display name for this game."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the display name for this game.", "history": "", "FullName": "public String getDisplayName ()"}, "freeze()": {"Returns": [["", "A concrete implementation of the data object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Freeze a volatile representation into an immutable representation. Objects returned from this call are safe to cache. Note that the output of freeze may not be identical to the parent object, but should be equal. In other words:", "history": "", "FullName": "public Game freeze ()"}, "isInstanceInstalled()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public boolean isInstanceInstalled ()"}, "hasGamepadSupport()": {"Returns": [["", "Whether or not this game declares gamepad support."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether or not this game is marked as supporting gamepads.", "history": "", "FullName": "public boolean hasGamepadSupport ()"}, "getGameplayAclStatus()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int getGameplayAclStatus ()"}, "getDisplayName(android.database.CharArrayBuffer)": {"Returns": [], "Parameters": [["CharArrayBuffer", "The buffer to load the data into."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Loads the display name string into the given @B_android#database#CharArrayBuffer_E@.", "history": "", "FullName": "public void getDisplayName (CharArrayBuffer dataOut)"}, "toString()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public String toString ()"}, "getSecondaryCategory()": {"Returns": [["", "The secondary category of the game, or null if not provided."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the secondary category of the game - this may be null.", "history": "", "FullName": "public String getSecondaryCategory ()"}, "getDescription(android.database.CharArrayBuffer)": {"Returns": [], "Parameters": [["CharArrayBuffer", "The buffer to load the data into."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Loads the description string into the given @B_android#database#CharArrayBuffer_E@.", "history": "", "FullName": "public void getDescription (CharArrayBuffer dataOut)"}, "getDeveloperName(android.database.CharArrayBuffer)": {"Returns": [], "Parameters": [["CharArrayBuffer", "The buffer to load the data into."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Loads the developer name into the given @B_android#database#CharArrayBuffer_E@.", "history": "", "FullName": "public void getDeveloperName (CharArrayBuffer dataOut)"}, "isDataValid()": {"Returns": [["", "whether or not the object is valid for use."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Check to see if this object is valid for use. If the object is still volatile, this method will indicate whether or not the object can be safely used. The output of a call to @B_com#google#android#gms#common#data#Freezable#freeze_E@ will always be valid.", "history": "", "FullName": "public boolean isDataValid ()"}, "getDeveloperName()": {"Returns": [["", "The name of the developer of this game."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves the name of the developer of this game.", "history": "", "FullName": "public String getDeveloperName ()"}, "isTurnBasedMultiplayerEnabled()": {"Returns": [["", "Whether or not this game supports turn-based mulitplayer."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether or not this game supports turn-based multiplayer.", "history": "", "FullName": "public boolean isTurnBasedMultiplayerEnabled ()"}, "getInstancePackageName()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public String getInstancePackageName ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.games.GameEntity", "ClassDesc": "Data object representing a set of Game data. This is immutable, and therefore safe to cache or store. Note, however, that the data it represents may grow stale. This class exists solely to support parceling these objects and should not be used directly."}