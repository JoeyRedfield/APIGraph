{"Functions": {"releaseManagedConnection()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", "in case of an IO problem. The connection attribute will be nullified anyway."]], "SeeAlso": [], "Permissions": [], "Description": "Releases the connection gracefully. The connection attribute will be nullified. Subsequent invocations are no-ops.", "history": "Added in API level 1", "FullName": "protected void releaseManagedConnection ()"}, "getContent()": {"Returns": [["", "a new input stream that returns the entity data."]], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Creates a new InputStream object of the entity. It is a programming error to return the same InputStream object more than once. Entities that are not @B_org#apache#http#HttpEntity#isRepeatable_E@ will throw an exception if this method is called multiple times.", "history": "Added in API level 1", "FullName": "public InputStream getContent ()"}, "eofDetected(java.io.InputStream)": {"Returns": [["", "true if wrapped should be closed, false if it should be left alone"]], "Parameters": [["@B_java#io#InputStream_E@", "the underlying stream which has reached EOF"]], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Indicates that EOF is detected.", "history": "Added in API level 1", "FullName": "public boolean eofDetected (InputStream wrapped)"}, "writeTo(java.io.OutputStream)": {"Returns": [], "Parameters": [["@B_java#io#OutputStream_E@", "the output stream to write entity content to"]], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Writes the entity content to the output stream.", "history": "Added in API level 1", "FullName": "public void writeTo (OutputStream outstream)"}, "consumeContent()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "TODO: The name of this method is misnomer. It will be renamed to #finish() in the next major release. This method is called to indicate that the content of this entity is no longer required. All entity implementations are expected to release all allocated resources as a result of this method invocation. Content streaming entities are also expected to dispose of the remaining content, if any. Wrapping entities should delegate this call to the wrapped entity. This method is of particular importance for entities being received from a @B_org#apache#http#HttpConnection_E@. The entity needs to be consumed completely in order to re-use the connection with keep-alive.", "history": "Added in API level 1", "FullName": "public void consumeContent ()"}, "streamClosed(java.io.InputStream)": {"Returns": [["", "true if wrapped should be closed, false if it should be left alone"]], "Parameters": [["@B_java#io#InputStream_E@", "the underlying stream which has not reached EOF"]], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Indicates that the @B_org#apache#http#conn#EofSensorInputStream_E@ is closed. This method will be called only if EOF was @B_org#apache#http#conn#EofSensorWatcher#eofDetected_E@ is called.", "history": "Added in API level 1", "FullName": "public boolean streamClosed (InputStream wrapped)"}, "abortConnection()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Releases the connection without the option of keep-alive. This is a \"hard\" release that implies a shutdown of the connection. Use @B_org#apache#http#conn#ConnectionReleaseTrigger#releaseConnection_E@ for a graceful release.", "history": "Added in API level 1", "FullName": "public void abortConnection ()"}, "isRepeatable()": {"Returns": [["", "true if the entity is repeatable, false otherwise."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tells if the entity is capable to produce its data more than once. A repeatable entity's getContent() and writeTo(OutputStream) methods can be called more than once whereas a non-repeatable entity's can not.", "history": "Added in API level 1", "FullName": "public boolean isRepeatable ()"}, "streamAbort(java.io.InputStream)": {"Returns": [["", "true if wrapped should be closed, false if it should be left alone"]], "Parameters": [["@B_java#io#InputStream_E@", "the underlying stream which has not reached EOF"]], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Indicates that the @B_org#apache#http#conn#EofSensorInputStream_E@ is aborted. This method will be called only if EOF was @B_org#apache#http#conn#EofSensorWatcher#eofDetected_E@ is called. This method will also be invoked when an input operation causes an IOException to be thrown to make sure the input stream gets shut down.", "history": "Added in API level 1", "FullName": "public boolean streamAbort (InputStream wrapped)"}, "releaseConnection()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Releases the connection with the option of keep-alive. This is a \"graceful\" release and may cause IO operations for consuming the remainder of a response entity. Use @B_org#apache#http#conn#ConnectionReleaseTrigger#abortConnection_E@ for a hard release. The connection may be reused as specified by the duration.", "history": "Added in API level 1", "FullName": "public void releaseConnection ()"}, "BasicManagedEntity(org.apache.http.HttpEntity, org.apache.http.conn.ManagedClientConnection, boolean)": {"Returns": [], "Parameters": [["@B_org#apache#http#HttpEntity_E@", "the entity of which to wrap the content. Note that the argument entity can no longer be used afterwards, since the content will be taken by this managed entity."], ["@B_org#apache#http#conn#ManagedClientConnection_E@", "the connection to release"], ["boolean", "whether the connection should be re-used"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new managed entity that can release a connection.", "history": "Added in API level 1", "FullName": "public BasicManagedEntity (HttpEntity entity, ManagedClientConnection conn, boolean reuse)"}}, "Inheritance": ["@B_org#apache#http#entity#HttpEntityWrapper_E@"], "ClassName": "org.apache.http.conn.BasicManagedEntity", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit An entity that releases a @B_org#apache#http#conn#ManagedClientConnection_E@. A @B_org#apache#http#conn#ManagedClientConnection_E@ will typically"}