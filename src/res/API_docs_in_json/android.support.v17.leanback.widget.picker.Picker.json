{"Functions": {"setPickerItemTextViewId(int)": {"Returns": [], "Parameters": [["int", "int: View id of TextView inside a Picker item, or 0 if the Picker item is a TextView."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the @B_android#support#v17#leanback#widget#picker#Picker_E@'s item's @B_android#widget#TextView_E@'s id from within the layout provided by @B_android#support#v17#leanback#widget#picker#Picker#getPickerItemLayoutId_E@ or 0 if the layout provided by @B_android#support#v17#leanback#widget#picker#Picker#getPickerItemLayoutId_E@ is a {link TextView}.", "history": "added in version 23.2.0", "FullName": "void setPickerItemTextViewId (int textViewId)"}, "getActivatedVisibleItemCount()": {"Returns": [["float", "Number of visible items showing in a column when it's activated."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns number of visible items showing in a column when it's activated. The default value is 3.", "history": "added in version 23.2.0", "FullName": "float getActivatedVisibleItemCount ()"}, "setActivatedVisibleItemCount(float)": {"Returns": [], "Parameters": [["float", "float: Number of visible items showing in a column when it's activated."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Changes number of visible items showing in a column when it's activated. The default value is 3.", "history": "added in version 23.2.0", "FullName": "void setActivatedVisibleItemCount (float visiblePickerItems)"}, "getPickerItemTextViewId()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#support#v17#leanback#widget#picker#Picker_E@'s item's @B_android#widget#TextView_E@'s id from within the layout provided by @B_android#support#v17#leanback#widget#picker#Picker#getPickerItemLayoutId_E@ or 0 if the layout provided by @B_android#support#v17#leanback#widget#picker#Picker#getPickerItemLayoutId_E@ is a {link TextView}.", "history": "added in version 23.2.0", "FullName": "int getPickerItemTextViewId ()"}, "getPickerItemHeightPixels()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Classes extending @B_android#support#v17#leanback#widget#picker#Picker_E@ can choose to override this method to supply the @B_android#support#v17#leanback#widget#picker#Picker_E@'s column's single item height in pixels.", "history": "added in version 23.2.0", "FullName": "int getPickerItemHeightPixels ()"}, "getPickerItemLayoutId()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Classes extending @B_android#support#v17#leanback#widget#picker#Picker_E@ can choose to override this method to supply the @B_android#support#v17#leanback#widget#picker#Picker_E@'s item's layout id", "history": "added in version 23.2.0", "FullName": "int getPickerItemLayoutId ()"}, "setColumnValue(int, int, boolean)": {"Returns": [], "Parameters": [["int", "int: Index of column to update."], ["int", "int: New value of the column."], ["boolean", "boolean: True to scroll to the value or false otherwise."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Manually set current value of a column. The function will update UI and notify listeners.", "history": "added in version 23.2.0", "FullName": "void setColumnValue (int columnIndex, int value, boolean runAnimation)"}, "dispatchKeyEvent(android.view.KeyEvent)": {"Returns": [["boolean", "True if the event was handled, false otherwise."]], "Parameters": [["@B_android#view#KeyEvent_E@", "KeyEvent: The key event to be dispatched."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Dispatch a key event to the next view on the focus path. This path runs from the top of the view tree down to the currently focused view. If this view has focus, it will dispatch to itself. Otherwise it will dispatch the next node down the focus path. This method also fires any key listeners.", "history": "", "FullName": "boolean dispatchKeyEvent (KeyEvent event)"}, "setVisibleItemCount(float)": {"Returns": [], "Parameters": [["float", "float: Number of visible items showing in a column when it's not activated."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Changes number of visible items showing in a column when it's not activated. The default value is 1.", "history": "added in version 23.2.0", "FullName": "void setVisibleItemCount (float pickerItems)"}, "onColumnValueChanged(int, int)": {"Returns": [], "Parameters": [["int", "int: index of which column was changed."], ["int", "int: A new value desired to be set on the column."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Classes extending @B_android#support#v17#leanback#widget#picker#Picker_E@ can override this function to supply the behavior when a list has been scrolled. Subclass may call @B_android#support#v17#leanback#widget#picker#Picker#setColumnValue_E@ and or @B_android#support#v17#leanback#widget#picker#Picker#setColumnAt_E@. Subclass should not directly call @B_android#support#v17#leanback#widget#picker#PickerColumn#setCurrentValue_E@ which does not update internal state or notify listeners.", "history": "added in version 23.2.0", "FullName": "void onColumnValueChanged (int columnIndex, int newValue)"}, "getSeparator()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets separator string between columns.", "history": "added in version 23.2.0", "FullName": "CharSequence getSeparator ()"}, "getSelectedColumn()": {"Returns": [["int", "Current activated column index."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get current activated column index.", "history": "added in version 23.2.0", "FullName": "int getSelectedColumn ()"}, "getColumnAt(int)": {"Returns": [["@B_android#support#v17#leanback#widget#picker#PickerColumn_E@", "PickerColumn at colIndex or null if @B_android#support#v17#leanback#widget#picker#Picker#setColumns_E@ is not called yet."]], "Parameters": [["int", "int: Index of PickerColumn."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get nth PickerColumn.", "history": "added in version 23.2.0", "FullName": "PickerColumn getColumnAt (int colIndex)"}, "setSelectedColumn(int)": {"Returns": [], "Parameters": [["int", "int: Index of column to activate."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Change current selected column. Picker shows multiple items on selected column if Picker has focus. Picker shows multiple items on all column if Picker has no focus (e.g. a Touchscreen screen).", "history": "added in version 23.2.0", "FullName": "void setSelectedColumn (int columnIndex)"}, "setActivated(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: true if the view must be activated, false otherwise"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Changes the activated state of this view. A view can be activated or not. Note that activation is not the same as selection. Selection is a transient property, representing the view (hierarchy) the user is currently interacting with. Activation is a longer-term state that the user can move views in and out of. For example, in a list view with single or multiple selection enabled, the views in the current selection set are activated. (Um, yeah, we are deeply sorry about the terminology here.) The activated state is propagated down to children of the view it is set on.", "history": "", "FullName": "void setActivated (boolean activated)"}, "getColumnsCount()": {"Returns": [["int", "Number of PickerColumns or 0 if @B_android#support#v17#leanback#widget#picker#Picker#setColumns_E@ is not called yet."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get number of PickerColumns.", "history": "added in version 23.2.0", "FullName": "int getColumnsCount ()"}, "getVisibleItemCount()": {"Returns": [["float", "Number of visible items showing in a column when it's not activated."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns number of visible items showing in a column when it's not activated. The default value is 1.", "history": "added in version 23.2.0", "FullName": "float getVisibleItemCount ()"}, "setSeparator(java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: Separator String between Picker columns."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets separator String between Picker columns.", "history": "added in version 23.2.0", "FullName": "void setSeparator (CharSequence separator)"}}, "Inheritance": ["java.lang.Object", "https:##developer#android#com@B_android#view#View_E@", "https:##developer#android#com@B_android#view#ViewGroup_E@", "https:##developer#android#com@B_android#widget#FrameLayout_E@"], "ClassName": "android.support.v17.leanback.widget.picker.Picker", "ClassDesc": "Picker is a widget showing multiple customized @B_android#support#v17#leanback#widget#picker#PickerColumn_E@s. The PickerColumns are initialized in @B_android#support#v17#leanback#widget#picker#Picker#setColumns_E@. Call @B_android#support#v17#leanback#widget#picker#Picker#setColumnAt_E@ if the column value range or labels change. Call @B_android#support#v17#leanback#widget#picker#Picker#setColumnValue_E@ to update the current value of PickerColumn. Picker has two states and will change height: https:##developer#android#com@B_android#view#View#isActivated_E@ is true: Picker shows typically three items vertically (see @B_android#support#v17#leanback#widget#picker#Picker#getActivatedVisibleItemCount_E@}. Columns other than @B_android#support#v17#leanback#widget#picker#Picker#getSelectedColumn_E@ still shows one item if the Picker is focused. On a touch screen device, the Picker will not get focus so it always show three items on all columns. On a non-touch device (a TV), the Picker will show three items only on currently activated column. If the Picker has focus, it will intercept DPAD directions and select activated column. https:##developer#android#com@B_android#view#View#isActivated_E@ is false: Picker shows one item vertically (see @B_android#support#v17#leanback#widget#picker#Picker#getVisibleItemCount_E@) on all columns. The size of Picker shrinks."}