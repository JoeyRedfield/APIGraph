{"Functions": {"reset()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Reset the ViewSwitcher to hide all of the existing views and to make it think that the first time animation has not yet played.", "history": "Added in API level 1", "FullName": "public void reset ()"}, "getNextView()": {"Returns": [["@B_android#view#View_E@", "the view that will be displayed after the next views flip."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the next view to be displayed.", "history": "Added in API level 1", "FullName": "public View getNextView ()"}, "ViewSwitcher(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: the application's environment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new empty ViewSwitcher.", "history": "Added in API level 1", "FullName": "public ViewSwitcher (Context context)"}, "setFactory(android.widget.ViewSwitcher.ViewFactory)": {"Returns": [], "Parameters": [["@B_android#widget#ViewSwitcher#ViewFactory_E@", "ViewSwitcher.ViewFactory: the view factory used to generate the switcher's content"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the factory used to create the two views between which the ViewSwitcher will flip. Instead of using a factory, you can call @B_android#widget#ViewSwitcher#addView_E@ twice.", "history": "Added in API level 1", "FullName": "public void setFactory (ViewSwitcher.ViewFactory factory)"}, "getAccessibilityClassName()": {"Returns": [["@B_java#lang#CharSequence_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the class name of this object to be used for accessibility purposes. Subclasses should only override this if they are implementing something that should be seen as a completely new class of view when used by accessibility, unrelated to the class it is deriving from. This is used to fill in @B_android#view#accessibility#AccessibilityNodeInfo#setClassName_E@.", "history": "Added in API level 23", "FullName": "public CharSequence getAccessibilityClassName ()"}, "addView(android.view.View,int,android.view.ViewGroup.LayoutParams)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: the child view to add"], ["int", "int: the position at which to add the child or -1 to add last"], ["@B_android#view#ViewGroup#LayoutParams_E@", "ViewGroup.LayoutParams: the layout parameters to set on the child"]], "Throws": [["@B_java#lang#IllegalStateException_E@", "if this switcher already contains two children"]], "SeeAlso": [], "Permissions": [], "Description": "Adds a child view with the specified layout parameters. @B_android#view#View#draw_E@, @B_android#view#View#onDraw_E@, @B_android#view#ViewGroup#dispatchDraw_E@ or any related method.", "history": "Added in API level 1", "FullName": "public void addView (View child, int index, ViewGroup.LayoutParams params)"}, "ViewSwitcher(android.content.Context,android.util.AttributeSet)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: the application environment"], ["@B_android#util#AttributeSet_E@", "AttributeSet: a collection of attributes"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new empty ViewSwitcher for the given context and with the specified set attributes.", "history": "Added in API level 1", "FullName": "public ViewSwitcher (Context context, AttributeSet attrs)"}}, "Inheritance": ["@B_android#view#View_E@", "@B_android#view#ViewGroup_E@", "@B_android#widget#FrameLayout_E@", "@B_android#widget#ViewAnimator_E@"], "ClassName": "android.widget.ViewSwitcher", "ClassDesc": "@B_android#widget#ViewAnimator_E@ that switches between two views, and has a factory from which these views are created. You can either use the factory to create the views, or add them yourself. A ViewSwitcher can only have two child views, of which only one is shown at a time."}