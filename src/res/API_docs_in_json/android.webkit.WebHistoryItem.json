{"Functions": {"getTitle()": {"Returns": [["@B_java#lang#String_E@", "The document title of this history item."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the document title of this history item.", "history": "Added in API level 1", "FullName": "public abstract String getTitle ()"}, "WebHistoryItem()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 22", "FullName": "public WebHistoryItem ()"}, "getFavicon()": {"Returns": [["@B_android#graphics#Bitmap_E@", "A Bitmap containing the favicon for this history item or null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the favicon of this history item or null if no favicon was found.", "history": "Added in API level 1", "FullName": "public abstract Bitmap getFavicon ()"}, "getId()": {"Returns": [["", "The id for this item."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return an identifier for this history item. If an item is a copy of another item, the identifiers will be the same even if they are not the same object.", "history": "Since: API Level 1", "FullName": "public int getId ()"}, "finalize()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#lang#Throwable_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Invoked when the garbage collector has detected that this instance is no longer reachable. The default implementation does nothing, but this method can be overridden to free resources. Note that objects that override finalize are significantly more expensive than objects that don't. Finalizers may be run a long time after the object is no longer reachable, depending on memory pressure, so it's a bad idea to rely on them for cleanup. Note also that finalizers are run on a single VM-wide finalizer thread, so doing blocking work in a finalizer is a bad idea. A finalizer is usually only necessary for a class that has a native peer and needs to call a native method to destroy that peer. Even then, it's better to provide an explicit close method (and implement @B_java#io#Closeable_E@), and insist that callers manually dispose of instances. This works well for something like files, but less well for something like a BigInteger where typical calling code would have to deal with lots of temporaries. Unfortunately, code that creates lots of temporaries is the worst kind of code from the point of view of the single finalizer thread. If you @B_java#lang#ref#ReferenceQueue_E@ and having your own thread process that queue. Unlike constructors, finalizers are not automatically chained. You are responsible for calling super.finalize() yourself. Uncaught exceptions thrown by finalizers are ignored and do not terminate the finalizer thread. See", "history": "Since: API Level 1", "FullName": "protected void finalize ()"}, "getOriginalUrl()": {"Returns": [["@B_java#lang#String_E@", "The original url of this history item."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the original url of this history item. This was the requested url, the final url may be different as there might have been redirects while loading the site.", "history": "Added in API level 3", "FullName": "public abstract String getOriginalUrl ()"}, "getUrl()": {"Returns": [["@B_java#lang#String_E@", "The base url of this history item."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the url of this history item. The url is the base url of this history item. See getTargetUrl() for the url that is the actual target of this history item.", "history": "Added in API level 1", "FullName": "public abstract String getUrl ()"}, "clone()": {"Returns": [["@B_android#webkit#WebHistoryItem_E@", "a clone of this instance."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Clone the history item for use by clients of WebView. On Android 4.4 and later there is no need to use this, as the object is already a read-only copy of the internal state.", "history": "Added in API level 1", "FullName": "protected abstract WebHistoryItem clone ()"}}, "Inheritance": [], "ClassName": "android.webkit.WebHistoryItem", "ClassDesc": "A convenience class for accessing fields in an entry in the back/forward list of a WebView. Each WebHistoryItem is a snapshot of the requested history item."}