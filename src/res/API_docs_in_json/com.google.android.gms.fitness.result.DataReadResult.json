{"Functions": {"getStatus()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the status of this result. Use @B_com#google#android#gms#common#api#Status#isSuccess_E@ to determine whether the call was successful, and @B_com#google#android#gms#common#api#Status#getStatusCode_E@ to determine what the error cause was. Certain errors are due to failures that can be resolved by launching a particular intent. The resolution intent is available via @B_com#google#android#gms#common#api#Status#getResolution_E@.", "history": "", "FullName": "public Status getStatus ()"}, "getDataSet(com.google.android.gms.fitness.data.DataType)": {"Returns": [["", "a data set for the given data type, empty if no data was found."]], "Parameters": [], "Throws": [["IllegalArgumentException", "if the given data type was not part of the read request"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the resulting data set for the given dataType. If more than one data source for the given data type was requested, this method will return the data for an arbitrary one. Use @B_com#google#android#gms#fitness#result#DataReadResult#getDataSet_E@ to read each specific data source. This method returns only non-aggregated data sets that were queried via @B_com#google#android#gms#fitness#request#DataReadRequest#Builder#read_E@ or @B_com#google#android#gms#fitness#request#DataReadRequest#Builder#read_E@. Aggregated data can be queried via @B_com#google#android#gms#fitness#result#DataReadResult#getBuckets_E@.", "history": "", "FullName": "public DataSet getDataSet (DataType dataType)"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public void writeToParcel (Parcel dest, int flags)"}, "getDataSet(com.google.android.gms.fitness.data.DataSource)": {"Returns": [["", "a data set for the given data source, empty if no data was found."]], "Parameters": [], "Throws": [["IllegalArgumentException", "if the given data source was not part of the read request"]], "SeeAlso": [], "Permissions": [], "Description": "Returns the resulting data set for the given dataSource. This method returns only non-aggregated data sets that were queried via @B_com#google#android#gms#fitness#request#DataReadRequest#Builder#read_E@. Aggregated data can be queried via @B_com#google#android#gms#fitness#result#DataReadResult#getBuckets_E@.", "history": "", "FullName": "public DataSet getDataSet (DataSource dataSource)"}, "equals(java.lang.Object)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public boolean equals (Object that)"}, "describeContents()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int describeContents ()"}, "getBuckets()": {"Returns": [["", "an empty list if the read request failed."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns all of the @B_com#google#android#gms#fitness#data#Bucket_E@ with aggregated data. In each bucket, there will be exactly one data set for each aggregated data source requested in the @B_com#google#android#gms#fitness#request#DataReadRequest_E@. Buckets only contain aggregated data requested via @B_com#google#android#gms#fitness#request#DataReadRequest#Builder#aggregate_E@. Non-aggregated data can be accessed via @B_com#google#android#gms#fitness#result#DataReadResult#getDataSet_E@.", "history": "", "FullName": "public List<Bucket> getBuckets ()"}, "toString()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public String toString ()"}, "getDataSets()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns all of the data sets in the result. There will be exactly one data set for each data source requested in the @B_com#google#android#gms#fitness#request#DataReadRequest_E@. This method returns only non-aggregated data sets that were queried via @B_com#google#android#gms#fitness#request#DataReadRequest#Builder#read_E@ or @B_com#google#android#gms#fitness#request#DataReadRequest#Builder#read_E@. Aggregated data can be queried via @B_com#google#android#gms#fitness#result#DataReadResult#getBuckets_E@.", "history": "", "FullName": "public List<DataSet> getDataSets ()"}, "hashCode()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int hashCode ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.fitness.result.DataReadResult", "ClassDesc": "Result of @B_com#google#android#gms#fitness#HistoryApi#readData_E@. Contains exactly one data set for each detailed data source requested in the @B_com#google#android#gms#fitness#request#DataReadRequest_E@. The methods @B_com#google#android#gms#fitness#result#DataReadResult#getDataSet_E@ and @B_com#google#android#gms#fitness#result#DataReadResult#getDataSet_E@ can be used to fetch the resulting detailed data for a specific data source. If aggregate data was requested, then the result will return buckets created as per the bucketing strategy specified in the request. Each bucket will have one data set per aggregate data requested. The method @B_com#google#android#gms#fitness#result#DataReadResult#getBuckets_E@ can be used to retrieve the buckets. The method @B_com#google#android#gms#fitness#result#DataReadResult#getStatus_E@ can be be used to confirm if the request was successful. In case the calling app is missing the required permissions, the returned status has status code set to @B_com#google#android#gms#fitness#FitnessStatusCodes#NEEDS_OAUTH_PERMISSIONS_E@. In this case the caller should use @B_com#google#android#gms#common#api#Status#startResolutionForResult_E@ to start an intent to get the necessary consent from the user before retrying the request. In case the app attempts to read custom data created by another app, the returned status has status code set to @B_com#google#android#gms#fitness#FitnessStatusCodes#INCONSISTENT_DATA_TYPE_E@."}