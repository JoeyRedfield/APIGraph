{"Functions": {"getNamedItemNS(java.lang.String, java.lang.String)": {"Returns": [["@B_org#w3c#dom#Node_E@", "A Node (of any type) with the specified local name and namespace URI, or null if they do not identify any node in this map."]], "Parameters": [["@B_java#lang#String_E@", "String: The namespace URI of the node to retrieve."], ["@B_java#lang#String_E@", "String: The local name of the node to retrieve."]], "Throws": [["@B_org#w3c#dom#DOMException_E@", "NOT_SUPPORTED_ERR: May be raised if the implementation does not support the feature \"XML\" and the language exposed through the Document does not support XML Namespaces (such as [HTML 4.01])."]], "SeeAlso": [], "Permissions": [], "Description": "Retrieves a node specified by local name and namespace URI. Per [", "history": "added in API level 1", "FullName": "public abstract Node getNamedItemNS (String namespaceURI, String localName)"}, "getNamedItemNS(java.lang.String,java.lang.String)": {"Returns": [["@B_org#w3c#dom#Node_E@", "A Node (of any type) with the specified local name and namespace URI, or null if they do not identify any node in this map."]], "Parameters": [["@B_java#lang#String_E@", "String: The namespace URI of the node to retrieve."], ["@B_java#lang#String_E@", "String: The local name of the node to retrieve."]], "Throws": [["@B_org#w3c#dom#DOMException_E@", "NOT_SUPPORTED_ERR: May be raised if the implementation does not support the feature \"XML\" and the language exposed through the Document does not support XML Namespaces (such as [HTML 4.01])."]], "SeeAlso": [], "Permissions": [], "Description": "Retrieves a node specified by local name and namespace URI. Per [", "history": "Added in API level 1", "FullName": "public abstract Node getNamedItemNS (String namespaceURI, String localName)"}, "getLength()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "The number of nodes in this map. The range of valid child node indices is 0 to length-1 inclusive.", "history": "Added in API level 1", "FullName": "public abstract int getLength ()"}, "removeNamedItem(java.lang.String)": {"Returns": [["@B_org#w3c#dom#Node_E@", "The node removed from this map if a node with such a name exists."]], "Parameters": [["@B_java#lang#String_E@", "String: The nodeName of the node to remove."]], "Throws": [["@B_org#w3c#dom#DOMException_E@", "NOT_FOUND_ERR: Raised if there is no node named name in this map. NO_MODIFICATION_ALLOWED_ERR: Raised if this map is readonly."]], "SeeAlso": [], "Permissions": [], "Description": "Removes a node specified by name. When this map contains the attributes attached to an element, if the removed attribute is known to have a default value, an attribute immediately appears containing the default value as well as the corresponding namespace URI, local name, and prefix when applicable.", "history": "Added in API level 1", "FullName": "public abstract Node removeNamedItem (String name)"}, "item(int)": {"Returns": [["@B_org#w3c#dom#Node_E@", "The node at the indexth position in the map, or null if that is not a valid index."]], "Parameters": [["int", "int: Index into this map."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the indexth item in the map. If index is greater than or equal to the number of nodes in this map, this returns null.", "history": "Added in API level 1", "FullName": "public abstract Node item (int index)"}, "setNamedItem(org.w3c.dom.Node)": {"Returns": [["@B_org#w3c#dom#Node_E@", "If the new Node replaces an existing node the replaced Node is returned, otherwise null is returned."]], "Parameters": [["@B_org#w3c#dom#Node_E@", "Node: A node to store in this map. The node will later be accessible using the value of its nodeName attribute."]], "Throws": [["@B_org#w3c#dom#DOMException_E@", "WRONG_DOCUMENT_ERR: Raised if arg was created from a different document than the one that created this map. NO_MODIFICATION_ALLOWED_ERR: Raised if this map is readonly. INUSE_ATTRIBUTE_ERR: Raised if arg is an Attr that is already an attribute of another Element object. The DOM user must explicitly clone Attr nodes to re-use them in other elements. HIERARCHY_REQUEST_ERR: Raised if an attempt is made to add a node doesn't belong in this NamedNodeMap. Examples would include trying to insert something other than an Attr node into an Element's map of attributes, or a non-Entity node into the DocumentType's map of Entities."]], "SeeAlso": [], "Permissions": [], "Description": "Adds a node using its nodeName attribute. If a node with that name is already present in this map, it is replaced by the new one. Replacing a node by itself has no effect. As the nodeName attribute is used to derive the name which the node must be stored under, multiple nodes of certain types (those that have a \"special\" string value) cannot be stored as the names would clash. This is seen as preferable to allowing nodes to be aliased.", "history": "Added in API level 1", "FullName": "public abstract Node setNamedItem (Node arg)"}, "getNamedItem(java.lang.String)": {"Returns": [["@B_org#w3c#dom#Node_E@", "A Node (of any type) with the specified nodeName, or null if it does not identify any node in this map."]], "Parameters": [["@B_java#lang#String_E@", "String: The nodeName of a node to retrieve."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieves a node specified by name.", "history": "Added in API level 1", "FullName": "public abstract Node getNamedItem (String name)"}, "setNamedItemNS(org.w3c.dom.Node)": {"Returns": [["@B_org#w3c#dom#Node_E@", "If the new Node replaces an existing node the replaced Node is returned, otherwise null is returned."]], "Parameters": [["@B_org#w3c#dom#Node_E@", "Node: A node to store in this map. The node will later be accessible using the value of its namespaceURI and localName attributes."]], "Throws": [["@B_org#w3c#dom#DOMException_E@", "WRONG_DOCUMENT_ERR: Raised if arg was created from a different document than the one that created this map. NO_MODIFICATION_ALLOWED_ERR: Raised if this map is readonly. INUSE_ATTRIBUTE_ERR: Raised if arg is an Attr that is already an attribute of another Element object. The DOM user must explicitly clone Attr nodes to re-use them in other elements. HIERARCHY_REQUEST_ERR: Raised if an attempt is made to add a node doesn't belong in this NamedNodeMap. Examples would include trying to insert something other than an Attr node into an Element's map of attributes, or a non-Entity node into the DocumentType's map of Entities. NOT_SUPPORTED_ERR: May be raised if the implementation does not support the feature \"XML\" and the language exposed through the Document does not support XML Namespaces (such as [HTML 4.01])."]], "SeeAlso": [], "Permissions": [], "Description": "Adds a node using its namespaceURI and localName. If a node with that namespace URI and that local name is already present in this map, it is replaced by the new one. Replacing a node by itself has no effect. Per [", "history": "Added in API level 1", "FullName": "public abstract Node setNamedItemNS (Node arg)"}, "removeNamedItemNS(java.lang.String,java.lang.String)": {"Returns": [["@B_org#w3c#dom#Node_E@", "The node removed from this map if a node with such a local name and namespace URI exists."]], "Parameters": [["@B_java#lang#String_E@", "String: The namespace URI of the node to remove."], ["@B_java#lang#String_E@", "String: The local name of the node to remove."]], "Throws": [["@B_org#w3c#dom#DOMException_E@", "NOT_FOUND_ERR: Raised if there is no node with the specified namespaceURI and localName in this map. NO_MODIFICATION_ALLOWED_ERR: Raised if this map is readonly. NOT_SUPPORTED_ERR: May be raised if the implementation does not support the feature \"XML\" and the language exposed through the Document does not support XML Namespaces (such as [HTML 4.01])."]], "SeeAlso": [], "Permissions": [], "Description": "Removes a node specified by local name and namespace URI. A removed attribute may be known to have a default value when this map contains the attributes attached to an element, as returned by the attributes attribute of the Node interface. If so, an attribute immediately appears containing the default value as well as the corresponding namespace URI, local name, and prefix when applicable. Per [", "history": "Added in API level 1", "FullName": "public abstract Node removeNamedItemNS (String namespaceURI, String localName)"}}, "Inheritance": [], "ClassName": "org.w3c.dom.NamedNodeMap", "ClassDesc": "Objects implementing the NamedNodeMap interface are used to represent collections of nodes that can be accessed by name. Note that NamedNodeMap does not inherit from NodeList; NamedNodeMaps are not maintained in any particular order. Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index, but this is simply to allow convenient enumeration of the contents of a NamedNodeMap, and does not imply that the DOM specifies an order to these Nodes. NamedNodeMap objects in the DOM are live. See also the"}