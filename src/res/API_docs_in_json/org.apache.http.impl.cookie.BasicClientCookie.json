{"Functions": {"BasicClientCookie(java.lang.String, java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "The name."], ["@B_java#lang#String_E@", "The value."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Default Constructor taking a name and a value. The value may be null.", "history": "Added in API level 1", "FullName": "public BasicClientCookie (String name, String value)"}, "getPorts()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns null. Cookies prior to RFC2965 do not set this attribute", "history": "Added in API level 1", "FullName": "public int[] getPorts ()"}, "getPath()": {"Returns": [["", "The value of the path attribute."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_org#apache#http#impl#cookie#BasicClientCookie#setPath_E@"], "Permissions": [], "Description": "Returns the path attribute of the cookie", "history": "Added in API level 1", "FullName": "public String getPath ()"}, "setValue(java.lang.String)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the value", "history": "Added in API level 1", "FullName": "public void setValue (String value)"}, "setPath(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "The value of the path attribute"]], "Throws": [], "SeeAlso": ["@B_org#apache#http#impl#cookie#BasicClientCookie#getPath_E@"], "Permissions": [], "Description": "Sets the path attribute.", "history": "Added in API level 1", "FullName": "public void setPath (String path)"}, "isExpired(java.util.Date)": {"Returns": [["", "true if the cookie has expired."]], "Parameters": [["@B_java#util#Date_E@", "Current time"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this cookie has expired.", "history": "Added in API level 1", "FullName": "public boolean isExpired (Date date)"}, "getValue()": {"Returns": [["", "String value The current value."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the value.", "history": "Added in API level 1", "FullName": "public String getValue ()"}, "setVersion(int)": {"Returns": [], "Parameters": [["int", "the version of the cookie."]], "Throws": [], "SeeAlso": ["@B_org#apache#http#impl#cookie#BasicClientCookie#getVersion_E@"], "Permissions": [], "Description": "Sets the version of the cookie specification to which this cookie conforms.", "history": "Added in API level 1", "FullName": "public void setVersion (int version)"}, "setDomain(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "The value of the domain attribute"]], "Throws": [], "SeeAlso": ["@B_org#apache#http#impl#cookie#BasicClientCookie#getDomain_E@"], "Permissions": [], "Description": "Sets the domain attribute.", "history": "Added in API level 1", "FullName": "public void setDomain (String domain)"}, "clone()": {"Returns": [["", "a copy of this object."]], "Parameters": [], "Throws": [["@B_java#lang#CloneNotSupportedException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Creates and returns a copy of this Object. The default implementation returns a so-called \"shallow\" copy: It creates a new instance of the same class and then copies the field values (including object references) from this instance to the new instance. A \"deep\" copy, in contrast, would also recursively clone nested objects. A subclass that needs to implement this kind of cloning should call super.clone() to create the new instance and then create deep copies of the nested, mutable objects.", "history": "Added in API level 1", "FullName": "public Object clone ()"}, "getCommentURL()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns null. Cookies prior to RFC2965 do not set this attribute", "history": "Added in API level 1", "FullName": "public String getCommentURL ()"}, "getComment()": {"Returns": [["", "comment"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_org#apache#http#impl#cookie#BasicClientCookie#setComment_E@"], "Permissions": [], "Description": "Returns the comment describing the purpose of this cookie, or", "history": "Added in API level 1", "FullName": "public String getComment ()"}, "getExpiryDate()": {"Returns": [["", "Expiration @B_java#util#Date_E@, or null."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_org#apache#http#impl#cookie#BasicClientCookie#setExpiryDate_E@"], "Permissions": [], "Description": "Returns the expiration @B_java#util#Date_E@ of the cookie, or", "history": "Added in API level 1", "FullName": "public Date getExpiryDate ()"}, "getDomain()": {"Returns": [["", "the value of the domain attribute"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_org#apache#http#impl#cookie#BasicClientCookie#setDomain_E@"], "Permissions": [], "Description": "Returns domain attribute of the cookie.", "history": "Added in API level 1", "FullName": "public String getDomain ()"}, "setExpiryDate(java.util.Date)": {"Returns": [], "Parameters": [["@B_java#util#Date_E@", "the @B_java#util#Date_E@ after which this cookie is no longer valid."]], "Throws": [], "SeeAlso": ["@B_org#apache#http#impl#cookie#BasicClientCookie#getExpiryDate_E@"], "Permissions": [], "Description": "Sets expiration date.", "history": "Added in API level 1", "FullName": "public void setExpiryDate (Date expiryDate)"}, "isPersistent()": {"Returns": [["", "false if the cookie should be discarded at the end of the \"session\"; true otherwise"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns", "history": "Added in API level 1", "FullName": "public boolean isPersistent ()"}, "setSecure(boolean)": {"Returns": [], "Parameters": [["boolean", "The value of the secure attribute"]], "Throws": [], "SeeAlso": ["@B_org#apache#http#impl#cookie#BasicClientCookie#isSecure_E@"], "Permissions": [], "Description": "Sets the secure attribute of the cookie. When", "history": "Added in API level 1", "FullName": "public void setSecure (boolean secure)"}, "getVersion()": {"Returns": [["", "the version of the cookie."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_org#apache#http#impl#cookie#BasicClientCookie#setVersion_E@"], "Permissions": [], "Description": "Returns the version of the cookie specification to which this cookie conforms.", "history": "Added in API level 1", "FullName": "public int getVersion ()"}, "getName()": {"Returns": [["", "String name The name"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the name.", "history": "Added in API level 1", "FullName": "public String getName ()"}, "getAttribute(java.lang.String)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public String getAttribute (String name)"}, "toString()": {"Returns": [["", "a printable representation of this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string containing a concise, human-readable description of this object. Subclasses are encouraged to override this method and provide an implementation that takes into account the object's type and data. The default implementation is equivalent to the following expression: See toString method.", "history": "Added in API level 1", "FullName": "public String toString ()"}, "setAttribute(java.lang.String, java.lang.String)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public void setAttribute (String name, String value)"}, "setComment(java.lang.String)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_org#apache#http#impl#cookie#BasicClientCookie#getComment_E@"], "Permissions": [], "Description": "If a user agent (web browser) presents this cookie to a user, the cookie's purpose will be described using this comment.", "history": "Added in API level 1", "FullName": "public void setComment (String comment)"}, "isSecure()": {"Returns": [["", "true if this cookie should only be sent over secure connections."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_org#apache#http#impl#cookie#BasicClientCookie#setSecure_E@"], "Permissions": [], "Description": "Indicates whether this cookie requires a secure connection.", "history": "Added in API level 1", "FullName": "public boolean isSecure ()"}, "containsAttribute(java.lang.String)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public boolean containsAttribute (String name)"}}, "Inheritance": [], "ClassName": "org.apache.http.impl.cookie.BasicClientCookie", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit HTTP \"magic-cookie\" represents a piece of state information that the HTTP agent and the target server can exchange to maintain a session."}