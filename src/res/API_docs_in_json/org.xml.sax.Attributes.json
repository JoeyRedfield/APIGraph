{"Functions": {"getValue(java.lang.String, java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "The attribute value as a string, or null if the attribute is not in the list."]], "Parameters": [["@B_java#lang#String_E@", "String: The Namespace URI, or the empty String if the name has no Namespace URI."], ["@B_java#lang#String_E@", "String: The local name of the attribute."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Look up an attribute's value by Namespace name. See @B_org#xml#sax#Attributes#getValue_E@ for a description of the possible values.", "history": "added in API level 1", "FullName": "public abstract String getValue (String uri, String localName)"}, "getIndex(java.lang.String,java.lang.String)": {"Returns": [["int", "The index of the attribute, or -1 if it does not appear in the list."]], "Parameters": [["@B_java#lang#String_E@", "String: The Namespace URI, or the empty string if the name has no Namespace URI."], ["@B_java#lang#String_E@", "String: The attribute's local name."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Look up the index of an attribute by Namespace name.", "history": "Added in API level 1", "FullName": "public abstract int getIndex (String uri, String localName)"}, "getURI(int)": {"Returns": [["@B_java#lang#String_E@", "The Namespace URI, or the empty string if none is available, or null if the index is out of range."]], "Parameters": [["int", "int: The attribute index (zero-based)."]], "Throws": [], "SeeAlso": ["@B_org#xml#sax#Attributes#getLength_E@"], "Permissions": [], "Description": "Look up an attribute's Namespace URI by index.", "history": "Added in API level 1", "FullName": "public abstract String getURI (int index)"}, "getValue(java.lang.String,java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "The attribute value as a string, or null if the attribute is not in the list."]], "Parameters": [["@B_java#lang#String_E@", "String: The Namespace URI, or the empty String if the name has no Namespace URI."], ["@B_java#lang#String_E@", "String: The local name of the attribute."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Look up an attribute's value by Namespace name. See @B_org#xml#sax#Attributes#getValue_E@ for a description of the possible values.", "history": "Added in API level 1", "FullName": "public abstract String getValue (String uri, String localName)"}, "getIndex(java.lang.String, java.lang.String)": {"Returns": [["int", "The index of the attribute, or -1 if it does not appear in the list."]], "Parameters": [["@B_java#lang#String_E@", "String: The Namespace URI, or the empty string if the name has no Namespace URI."], ["@B_java#lang#String_E@", "String: The attribute's local name."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Look up the index of an attribute by Namespace name.", "history": "added in API level 1", "FullName": "public abstract int getIndex (String uri, String localName)"}, "getValue(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "The attribute value as a string, or null if the attribute is not in the list or if qualified names are not available."]], "Parameters": [["@B_java#lang#String_E@", "String: The XML qualified name."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Look up an attribute's value by XML qualified (prefixed) name. See @B_org#xml#sax#Attributes#getValue_E@ for a description of the possible values.", "history": "Added in API level 1", "FullName": "public abstract String getValue (String qName)"}, "getIndex(java.lang.String)": {"Returns": [["int", "The index of the attribute, or -1 if it does not appear in the list."]], "Parameters": [["@B_java#lang#String_E@", "String: The qualified (prefixed) name."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Look up the index of an attribute by XML qualified (prefixed) name.", "history": "Added in API level 1", "FullName": "public abstract int getIndex (String qName)"}, "getLength()": {"Returns": [["int", "The number of attributes in the list."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_org#xml#sax#Attributes#getURI_E@", "@B_org#xml#sax#Attributes#getLocalName_E@", "@B_org#xml#sax#Attributes#getQName_E@", "@B_org#xml#sax#Attributes#getType_E@", "@B_org#xml#sax#Attributes#getValue_E@"], "Permissions": [], "Description": "Return the number of attributes in the list. Once you know the number of attributes, you can iterate through the list.", "history": "Added in API level 1", "FullName": "public abstract int getLength ()"}, "getType(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "The attribute type as a string, or null if the attribute is not in the list or if qualified names are not available."]], "Parameters": [["@B_java#lang#String_E@", "String: The XML qualified name."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Look up an attribute's type by XML qualified (prefixed) name. See @B_org#xml#sax#Attributes#getType_E@ for a description of the possible types.", "history": "Added in API level 1", "FullName": "public abstract String getType (String qName)"}, "getLocalName(int)": {"Returns": [["@B_java#lang#String_E@", "The local name, or the empty string if Namespace processing is not being performed, or null if the index is out of range."]], "Parameters": [["int", "int: The attribute index (zero-based)."]], "Throws": [], "SeeAlso": ["@B_org#xml#sax#Attributes#getLength_E@"], "Permissions": [], "Description": "Look up an attribute's local name by index.", "history": "Added in API level 1", "FullName": "public abstract String getLocalName (int index)"}, "getType(java.lang.String, java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "The attribute type as a string, or null if the attribute is not in the list or if Namespace processing is not being performed."]], "Parameters": [["@B_java#lang#String_E@", "String: The Namespace URI, or the empty String if the name has no Namespace URI."], ["@B_java#lang#String_E@", "String: The local name of the attribute."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Look up an attribute's type by Namespace name. See @B_org#xml#sax#Attributes#getType_E@ for a description of the possible types.", "history": "added in API level 1", "FullName": "public abstract String getType (String uri, String localName)"}, "getQName(int)": {"Returns": [["@B_java#lang#String_E@", "The XML qualified name, or the empty string if none is available, or null if the index is out of range."]], "Parameters": [["int", "int: The attribute index (zero-based)."]], "Throws": [], "SeeAlso": ["@B_org#xml#sax#Attributes#getLength_E@"], "Permissions": [], "Description": "Look up an attribute's XML qualified (prefixed) name by index.", "history": "Added in API level 1", "FullName": "public abstract String getQName (int index)"}, "getType(int)": {"Returns": [["@B_java#lang#String_E@", "The attribute's type as a string, or null if the index is out of range."]], "Parameters": [["int", "int: The attribute index (zero-based)."]], "Throws": [], "SeeAlso": ["@B_org#xml#sax#Attributes#getLength_E@"], "Permissions": [], "Description": "Look up an attribute's type by index. The attribute type is one of the strings \"CDATA\", \"ID\", \"IDREF\", \"IDREFS\", \"NMTOKEN\", \"NMTOKENS\", \"ENTITY\", \"ENTITIES\", or \"NOTATION\" (always in upper case). If the parser has not read a declaration for the attribute, or if the parser does not report attribute types, then it must return the value \"CDATA\" as stated in the XML 1.0 Recommendation (clause 3.3.3, \"Attribute-Value Normalization\"). For an enumerated attribute that is not a notation, the parser will report the type as \"NMTOKEN\".", "history": "Added in API level 1", "FullName": "public abstract String getType (int index)"}, "getType(java.lang.String,java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "The attribute type as a string, or null if the attribute is not in the list or if Namespace processing is not being performed."]], "Parameters": [["@B_java#lang#String_E@", "String: The Namespace URI, or the empty String if the name has no Namespace URI."], ["@B_java#lang#String_E@", "String: The local name of the attribute."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Look up an attribute's type by Namespace name. See @B_org#xml#sax#Attributes#getType_E@ for a description of the possible types.", "history": "Added in API level 1", "FullName": "public abstract String getType (String uri, String localName)"}, "getValue(int)": {"Returns": [["@B_java#lang#String_E@", "The attribute's value as a string, or null if the index is out of range."]], "Parameters": [["int", "int: The attribute index (zero-based)."]], "Throws": [], "SeeAlso": ["@B_org#xml#sax#Attributes#getLength_E@"], "Permissions": [], "Description": "Look up an attribute's value by index. If the attribute value is a list of tokens (IDREFS, ENTITIES, or NMTOKENS), the tokens will be concatenated into a single string with each token separated by a single space.", "history": "Added in API level 1", "FullName": "public abstract String getValue (int index)"}}, "Inheritance": [], "ClassName": "org.xml.sax.Attributes", "ClassDesc": "Interface for a list of XML attributes. This interface allows access to a list of attributes in three different ways: The list will not contain attributes that were declared #IMPLIED but not specified in the start tag. It will also not contain attributes used as Namespace declarations (xmlns*) unless the http://xml.org/sax/features/namespace-prefixes feature is set to Some SAX2 parsers may support using an optional feature flag (http://xml.org/sax/features/xmlns-uris) to request that those attributes be given URIs, conforming to a later backwards-incompatible revision of that recommendation. (The attribute's \"local name\" will be the prefix, or \"xmlns\" when defining a default element namespace.) For portability, handler code should always resolve that conflict, rather than requiring parsers that can change the setting of that feature flag. If the namespace-prefixes feature (see above) is http://xml.org/sax/features/namespaces feature is This interface replaces the now-deprecated SAX1 @B_org#xml#sax#AttributeList_E@ interface, which does not contain Namespace support. In addition to Namespace support, it adds the The order of attributes in the list is unspecified, and will vary from implementation to implementation."}