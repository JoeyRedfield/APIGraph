{"Functions": {"getBounds()": {"Returns": [["@B_android#graphics#Rect_E@", "the rectangle region to render the characters in the timed text. If no bounds information is available (a null is returned), render the timed text at the center bottom of the display."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the rectangle area or region for rendering the timed text as specified by a Rect object.", "history": "Added in API level 16", "FullName": "public Rect getBounds ()"}, "getText()": {"Returns": [["@B_java#lang#String_E@", "the characters as a String object in the TimedText. Applications should stop rendering previous timed text at the current rendering region if a null is returned, until the next non-null timed text is received."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the characters in the timed text.", "history": "Added in API level 16", "FullName": "public String getText ()"}}, "Inheritance": [], "ClassName": "android.media.TimedText", "ClassDesc": "Class to hold the timed text's metadata, including: The characters for rendering The rendering position for the timed text To render the timed text, applications need to do the following: Implement the @B_android#media#MediaPlayer#OnTimedTextListener_E@ interface Register the @B_android#media#MediaPlayer#OnTimedTextListener_E@ callback on a MediaPlayer object that is used for playback When a onTimedText callback is received, do the following: call @B_android#media#TimedText#getText_E@ to get the characters for rendering call @B_android#media#TimedText#getBounds_E@ to get the text rendering area/region"}