{"Functions": {"getTimeZone(int,boolean,long,java.lang.String)": {"Returns": [["@B_java#util#TimeZone_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["boolean", "boolean no parameter comment"], ["long", "long no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tries to return a time zone that would have had the specified offset and DST value at the specified moment in the specified country. Returns null if no suitable zone could be found.", "history": "Added in API level 1", "FullName": "public static TimeZone getTimeZone (int offset, boolean dst, long when, String country)"}, "getTimeZoneDatabaseVersion()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a String indicating the version of the time zone database currently in use. The format of the string is dependent on the underlying time zone database implementation, but will typically contain the year in which the database was updated plus a letter from a to z indicating changes made within that year. Time zone database updates should be expected to occur periodically due to political and legal changes that cannot be anticipated in advance. Therefore, when computing the UTC time for a future event, applications should be aware that the results may differ following a time zone database update. This method allows applications to detect that a database change has occurred, and to recalculate any cached times accordingly. The time zone database may be assumed to change only when the device runtime is restarted. Therefore, it is not necessary to re-query the database version during the lifetime of an activity.", "history": "Added in API level 3", "FullName": "public static String getTimeZoneDatabaseVersion ()"}, "getTimeZoneIdsForCountryCode(java.lang.String)": {"Returns": [["@B_java#util#List_E@", "IDs that can be passed to @B_java#util#TimeZone#getTimeZone_E@ or similar methods, or null if the countryCode is unrecognized"]], "Parameters": [["@B_java#lang#String_E@", "String: the ISO 3166-1 alpha-2 code for the country as can be obtained using @B_java#util#Locale#getCountry_E@ This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns time zone IDs for time zones known to be associated with a country. The list returned may be different from other on-device sources like @B_android#icu#util#TimeZone#getRegion_E@ as it can be curated to avoid contentious mappings.", "history": "Added in API level 29", "FullName": "public static List<String> getTimeZoneIdsForCountryCode (String countryCode)"}, "getTimeZone(int, boolean, long, java.lang.String)": {"Returns": [["@B_java#util#TimeZone_E@", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["boolean", "boolean no parameter comment"], ["long", "long no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tries to return a time zone that would have had the specified offset and DST value at the specified moment in the specified country. Returns null if no suitable zone could be found.", "history": "added in API level 1", "FullName": "public static TimeZone getTimeZone (int offset, boolean dst, long when, String country)"}}, "Inheritance": [], "ClassName": "android.util.TimeUtils", "ClassDesc": "A class containing utility methods related to time zones."}