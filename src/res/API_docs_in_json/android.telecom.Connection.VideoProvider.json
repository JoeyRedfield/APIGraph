{"Functions": {"onSetCamera(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The id of the camera (use ids as reported by @B_android#hardware#camera2#CameraManager#getCameraIdList_E@)."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the camera to be used for the outgoing video. The @B_android#telecom#Connection#VideoProvider_E@ should respond by communicating the capabilities of the chosen camera via @B_android#telecom#Connection#VideoProvider#changeCameraCapabilities_E@. Sent from the @B_android#telecom#InCallService_E@ via @B_android#telecom#InCallService#VideoCall#setCamera_E@.", "history": "Added in API level 23", "FullName": "public abstract void onSetCamera (String cameraId)"}, "onSendSessionModifyResponse(android.telecom.VideoProfile)": {"Returns": [], "Parameters": [["@B_android#telecom#VideoProfile_E@", "VideoProfile: The response video profile."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Provides a response to a request to change the current video session properties. For example, if the peer requests and upgrade from an audio-only call to a bi-directional video call, could decline the request and keep the call as audio-only. In such a scenario, the responseProfile would have a video state of @B_android#telecom#VideoProfile#STATE_AUDIO_ONLY_E@. If the user had decided to accept the request, the video state would be @B_android#telecom#VideoProfile#STATE_BIDIRECTIONAL_E@. Sent from the @B_android#telecom#InCallService_E@ via @B_android#telecom#InCallService#VideoCall#sendSessionModifyResponse_E@ in response to a @B_android#telecom#InCallService#VideoCall#Callback#onSessionModifyRequestReceived_E@ callback.", "history": "Added in API level 23", "FullName": "public abstract void onSendSessionModifyResponse (VideoProfile responseProfile)"}, "Connection.VideoProvider()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public Connection.VideoProvider ()"}, "onSetDisplaySurface(android.view.Surface)": {"Returns": [], "Parameters": [["@B_android#view#Surface_E@", "Surface: The @B_android#view#Surface_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the surface to be used for displaying the video received from the remote device. Sent from the @B_android#telecom#InCallService_E@ via @B_android#telecom#InCallService#VideoCall#setDisplaySurface_E@.", "history": "Added in API level 23", "FullName": "public abstract void onSetDisplaySurface (Surface surface)"}, "onSendSessionModifyRequest(android.telecom.VideoProfile,android.telecom.VideoProfile)": {"Returns": [], "Parameters": [["@B_android#telecom#VideoProfile_E@", "VideoProfile: The video profile prior to the request."], ["@B_android#telecom#VideoProfile_E@", "VideoProfile: The video profile with the requested changes made."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Issues a request to modify the properties of the current video session. Example scenarios include: requesting an audio-only call to be upgraded to a bi-directional video call, turning on or off the user's camera, sending a pause signal when the @B_android#telecom#InCallService_E@ is no longer the foreground application. If the @B_android#telecom#Connection#VideoProvider_E@ determines a request to be invalid, it should call @B_android#telecom#Connection#VideoProvider#receiveSessionModifyResponse_E@ to report the invalid request back to the @B_android#telecom#InCallService_E@. Where a request requires confirmation from the user of the peer device, the @B_android#telecom#Connection#VideoProvider_E@ must communicate the request to the peer device and handle the user's response. @B_android#telecom#Connection#VideoProvider#receiveSessionModifyResponse_E@ is used to inform the @B_android#telecom#InCallService_E@ of the result of the request. Sent from the @B_android#telecom#InCallService_E@ via @B_android#telecom#InCallService#VideoCall#sendSessionModifyRequest_E@.", "history": "Added in API level 23", "FullName": "public abstract void onSendSessionModifyRequest (VideoProfile fromProfile, VideoProfile toProfile)"}, "setCallDataUsage(long)": {"Returns": [], "Parameters": [["long", "long: The updated data usage (in bytes). Reported as the cumulative bytes used since the start of the call."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Used to inform listening @B_android#telecom#InCallService_E@ implementations when the data usage of the video associated with the current @B_android#telecom#Connection_E@ has changed. This could be in response to a preview request via @B_android#telecom#Connection#VideoProvider#onRequestConnectionDataUsage_E@, or as a periodic update by the @B_android#telecom#Connection#VideoProvider_E@. Where periodic updates of data usage are provided, they should be provided at most for every 1 MB of data transferred and no more than once every 10 sec. Received by the @B_android#telecom#InCallService_E@ via @B_android#telecom#InCallService#VideoCall#Callback#onCallDataUsageChanged_E@.", "history": "Added in API level 23", "FullName": "public void setCallDataUsage (long dataUsage)"}, "onSetZoom(float)": {"Returns": [], "Parameters": [["float", "float: The camera zoom ratio."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets camera zoom ratio. Sent from the @B_android#telecom#InCallService_E@ via @B_android#telecom#InCallService#VideoCall#setZoom_E@.", "history": "Added in API level 23", "FullName": "public abstract void onSetZoom (float value)"}, "onRequestConnectionDataUsage()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Issues a request to the @B_android#telecom#Connection#VideoProvider_E@ to retrieve the current data usage for the video component of the current @B_android#telecom#Connection_E@. The @B_android#telecom#Connection#VideoProvider_E@ should respond by communicating current data usage, in bytes, via @B_android#telecom#Connection#VideoProvider#setCallDataUsage_E@. Sent from the @B_android#telecom#InCallService_E@ via @B_android#telecom#InCallService#VideoCall#requestCallDataUsage_E@.", "history": "Added in API level 23", "FullName": "public abstract void onRequestConnectionDataUsage ()"}, "handleCallSessionEvent(int)": {"Returns": [], "Parameters": [["int", "int: The event. Valid values are: @B_android#telecom#Connection#VideoProvider#SESSION_EVENT_RX_PAUSE_E@, @B_android#telecom#Connection#VideoProvider#SESSION_EVENT_RX_RESUME_E@, @B_android#telecom#Connection#VideoProvider#SESSION_EVENT_TX_START_E@, @B_android#telecom#Connection#VideoProvider#SESSION_EVENT_TX_STOP_E@, @B_android#telecom#Connection#VideoProvider#SESSION_EVENT_CAMERA_FAILURE_E@, @B_android#telecom#Connection#VideoProvider#SESSION_EVENT_CAMERA_READY_E@, @B_android#telecom#Connection#VideoProvider#SESSION_EVENT_CAMERA_FAILURE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Used to inform listening @B_android#telecom#InCallService_E@ implementations when the @B_android#telecom#Connection#VideoProvider_E@ reports a call session event. Received by the @B_android#telecom#InCallService_E@ via @B_android#telecom#InCallService#VideoCall#Callback#onCallSessionEvent_E@.", "history": "Added in API level 23", "FullName": "public void handleCallSessionEvent (int event)"}, "receiveSessionModifyResponse(int,android.telecom.VideoProfile,android.telecom.VideoProfile)": {"Returns": [], "Parameters": [["int", "int: Status of the session modify request. Valid values are @B_android#telecom#Connection#VideoProvider#SESSION_MODIFY_REQUEST_SUCCESS_E@, @B_android#telecom#Connection#VideoProvider#SESSION_MODIFY_REQUEST_FAIL_E@, @B_android#telecom#Connection#VideoProvider#SESSION_MODIFY_REQUEST_INVALID_E@, @B_android#telecom#Connection#VideoProvider#SESSION_MODIFY_REQUEST_TIMED_OUT_E@, @B_android#telecom#Connection#VideoProvider#SESSION_MODIFY_REQUEST_REJECTED_BY_REMOTE_E@"], ["@B_android#telecom#VideoProfile_E@", "VideoProfile: The original request which was sent to the peer device."], ["@B_android#telecom#VideoProfile_E@", "VideoProfile: The actual profile changes agreed to by the peer device."]], "Throws": [], "SeeAlso": ["@B_android#telecom#Connection#VideoProvider#onSendSessionModifyRequest_E@"], "Permissions": [], "Description": "Used to inform listening @B_android#telecom#InCallService_E@ implementations when the @B_android#telecom#Connection#VideoProvider_E@ receives a response to a session modification request. Received by the @B_android#telecom#InCallService_E@ via @B_android#telecom#InCallService#VideoCall#Callback#onSessionModifyResponseReceived_E@.", "history": "Added in API level 23", "FullName": "public void receiveSessionModifyResponse (int status, VideoProfile requestedProfile, VideoProfile responseProfile)"}, "changePeerDimensions(int, int)": {"Returns": [], "Parameters": [["int", "int: The updated peer video width."], ["int", "int: The updated peer video height."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Used to inform listening @B_android#telecom#InCallService_E@ implementations when the dimensions of the peer's video have changed. This could occur if, for example, the peer rotates their device, changing the aspect ratio of the video, or if the user switches between the back and front cameras. Received by the @B_android#telecom#InCallService_E@ via @B_android#telecom#InCallService#VideoCall#Callback#onPeerDimensionsChanged_E@.", "history": "added in API level 23", "FullName": "public void changePeerDimensions (int width, int height)"}, "onSetPauseImage(android.net.Uri)": {"Returns": [], "Parameters": [["@B_android#net#Uri_E@", "Uri: URI of image to display."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Provides the @B_android#telecom#Connection#VideoProvider_E@ with the @B_android#net#Uri_E@ of an image to be displayed to the peer device when the video signal is paused. Sent from the @B_android#telecom#InCallService_E@ via @B_android#telecom#InCallService#VideoCall#setPauseImage_E@.", "history": "Added in API level 23", "FullName": "public abstract void onSetPauseImage (Uri uri)"}, "onSetPreviewSurface(android.view.Surface)": {"Returns": [], "Parameters": [["@B_android#view#Surface_E@", "Surface: The @B_android#view#Surface_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the surface to be used for displaying a preview of what the user's camera is currently capturing. When video transmission is enabled, this is the video signal which is sent to the remote device. Sent from the @B_android#telecom#InCallService_E@ via @B_android#telecom#InCallService#VideoCall#setPreviewSurface_E@.", "history": "Added in API level 23", "FullName": "public abstract void onSetPreviewSurface (Surface surface)"}, "changeCameraCapabilities(android.telecom.VideoProfile.CameraCapabilities)": {"Returns": [], "Parameters": [["@B_android#telecom#VideoProfile#CameraCapabilities_E@", "VideoProfile.CameraCapabilities: The new camera capabilities."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Used to inform listening @B_android#telecom#InCallService_E@ implementations when the capabilities of the current camera have changed. The @B_android#telecom#Connection#VideoProvider_E@ should call this in response to @B_android#telecom#Connection#VideoProvider#onRequestCameraCapabilities_E@, or when the current camera is changed via @B_android#telecom#Connection#VideoProvider#onSetCamera_E@. Received by the @B_android#telecom#InCallService_E@ via @B_android#telecom#InCallService#VideoCall#Callback#onCameraCapabilitiesChanged_E@.", "history": "Added in API level 23", "FullName": "public void changeCameraCapabilities (VideoProfile.CameraCapabilities cameraCapabilities)"}, "changeVideoQuality(int)": {"Returns": [], "Parameters": [["int", "int: The updated video quality. Valid values: @B_android#telecom#VideoProfile#QUALITY_HIGH_E@, @B_android#telecom#VideoProfile#QUALITY_MEDIUM_E@, @B_android#telecom#VideoProfile#QUALITY_LOW_E@, @B_android#telecom#VideoProfile#QUALITY_DEFAULT_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Used to inform listening @B_android#telecom#InCallService_E@ implementations when the video quality of the call has changed. Received by the @B_android#telecom#InCallService_E@ via @B_android#telecom#InCallService#VideoCall#Callback#onVideoQualityChanged_E@.", "history": "Added in API level 23", "FullName": "public void changeVideoQuality (int videoQuality)"}, "receiveSessionModifyRequest(android.telecom.VideoProfile)": {"Returns": [], "Parameters": [["@B_android#telecom#VideoProfile_E@", "VideoProfile: The requested video profile."]], "Throws": [], "SeeAlso": ["@B_android#telecom#Connection#VideoProvider#onSendSessionModifyRequest_E@"], "Permissions": [], "Description": "Used to inform listening @B_android#telecom#InCallService_E@ implementations when the @B_android#telecom#Connection#VideoProvider_E@ receives a session modification request. Received by the @B_android#telecom#InCallService_E@ via @B_android#telecom#InCallService#VideoCall#Callback#onSessionModifyRequestReceived_E@,", "history": "Added in API level 23", "FullName": "public void receiveSessionModifyRequest (VideoProfile videoProfile)"}, "changePeerDimensions(int,int)": {"Returns": [], "Parameters": [["int", "int: The updated peer video width."], ["int", "int: The updated peer video height."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Used to inform listening @B_android#telecom#InCallService_E@ implementations when the dimensions of the peer's video have changed. This could occur if, for example, the peer rotates their device, changing the aspect ratio of the video, or if the user switches between the back and front cameras. Received by the @B_android#telecom#InCallService_E@ via @B_android#telecom#InCallService#VideoCall#Callback#onPeerDimensionsChanged_E@.", "history": "Added in API level 23", "FullName": "public void changePeerDimensions (int width, int height)"}, "onSetDeviceOrientation(int)": {"Returns": [], "Parameters": [["int", "int: The device orientation, in degrees."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the device orientation, in degrees. Assumes that a standard portrait orientation of the device is 0 degrees. Sent from the @B_android#telecom#InCallService_E@ via @B_android#telecom#InCallService#VideoCall#setDeviceOrientation_E@.", "history": "Added in API level 23", "FullName": "public abstract void onSetDeviceOrientation (int rotation)"}, "onRequestCameraCapabilities()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Issues a request to the @B_android#telecom#Connection#VideoProvider_E@ to retrieve the camera capabilities. The @B_android#telecom#Connection#VideoProvider_E@ should respond by communicating the capabilities of the chosen camera via @B_android#telecom#Connection#VideoProvider#changeCameraCapabilities_E@. Sent from the @B_android#telecom#InCallService_E@ via @B_android#telecom#InCallService#VideoCall#requestCameraCapabilities_E@.", "history": "Added in API level 23", "FullName": "public abstract void onRequestCameraCapabilities ()"}}, "Inheritance": [], "ClassName": "android.telecom.Connection.VideoProvider", "ClassDesc": "Provides a means of controlling the video session associated with a @B_android#telecom#Connection_E@. Implementations create a custom subclass of @B_android#telecom#Connection#VideoProvider_E@ and the @B_android#telecom#ConnectionService_E@ creates an instance sets it on the @B_android#telecom#Connection_E@ using @B_android#telecom#Connection#setVideoProvider_E@. Any connection which supports video should set the @B_android#telecom#Connection#VideoProvider_E@. The @B_android#telecom#Connection#VideoProvider_E@ serves two primary purposes: it provides a means for Telecom and @B_android#telecom#InCallService_E@ implementations to issue requests related to the video session; it provides a means for the @B_android#telecom#ConnectionService_E@ to report events and information related to the video session to Telecom and the @B_android#telecom#InCallService_E@ implementations. @B_android#telecom#InCallService_E@ implementations interact with the @B_android#telecom#Connection#VideoProvider_E@ via @B_android#telecom#InCallService#VideoCall_E@."}