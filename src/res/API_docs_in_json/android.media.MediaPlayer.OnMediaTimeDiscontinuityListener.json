{"Functions": {"onMediaTimeDiscontinuity(android.media.MediaPlayer,android.media.MediaTimestamp)": {"Returns": [], "Parameters": [["@B_android#media#MediaPlayer_E@", "MediaPlayer: the MediaPlayer for which the discontinuity has occured. This value must never be null."], ["@B_android#media#MediaTimestamp_E@", "MediaTimestamp: the timestamp that correlates media time, system time and clock rate, or @B_android#media#MediaTimestamp#TIMESTAMP_UNKNOWN_E@ in an error case. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called to indicate a time discontinuity has occured.", "history": "Added in API level 28", "FullName": "public abstract void onMediaTimeDiscontinuity (MediaPlayer mp, MediaTimestamp mts)"}}, "Inheritance": [], "ClassName": "android.media.MediaPlayer.OnMediaTimeDiscontinuityListener", "ClassDesc": "Interface definition of a callback to be invoked when discontinuity in the normal progression of the media time is detected. The \"normal progression\" of media time is defined as the expected increase of the playback position when playing media, relative to the playback speed (for instance every second, media time increases by two seconds when playing at 2x). Discontinuities are encountered in the following cases: when the player is starved for data and cannot play anymore when the player encounters a playback error when the a seek operation starts, and when it's completed when the playback speed changes when the playback state changes when the player is reset See the @B_android#media#MediaPlayer#setOnMediaTimeDiscontinuityListener_E@ method to set a listener for these events."}