{"Functions": {"Region(android.graphics.Rect)": {"Returns": [], "Parameters": [["@B_android#graphics#Rect_E@", "Rect: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a region set to the specified rectangle", "history": "Added in API level 1", "FullName": "public Region (Rect r)"}, "quickReject(android.graphics.Rect)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#graphics#Rect_E@", "Rect: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the region is empty, or if the specified rectangle does not intersect the region. Returning false is not a guarantee that they intersect, but returning true is a guarantee that they do not.", "history": "Added in API level 1", "FullName": "public boolean quickReject (Rect r)"}, "quickContains(int, int, int, int)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the region is a single rectangle (not complex) and it contains the specified rectangle. Returning false is not a guarantee that the rectangle is not contained by this region, but return true is a guarantee that the rectangle is contained by this region.", "history": "added in API level 1", "FullName": "public boolean quickContains (int left, int top, int right, int bottom)"}, "set(android.graphics.Rect)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#graphics#Rect_E@", "Rect: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the region to the specified rectangle", "history": "Added in API level 1", "FullName": "public boolean set (Rect r)"}, "translate(int, int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Translate the region by [dx, dy]. If the region is empty, do nothing.", "history": "added in API level 1", "FullName": "public void translate (int dx, int dy)"}, "Region()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create an empty region", "history": "Added in API level 1", "FullName": "public Region ()"}, "contains(int, int)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the region contains the specified point", "history": "added in API level 1", "FullName": "public boolean contains (int x, int y)"}, "translate(int,int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Translate the region by [dx, dy]. If the region is empty, do nothing.", "history": "Added in API level 1", "FullName": "public void translate (int dx, int dy)"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if this object is the same as the obj argument; false otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the reference object with which to compare."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates whether some other object is \"equal to\" this one. The equals method implements an equivalence relation on non-null object references: It is x, x.equals(x) should return true. It is x and y, x.equals(y) should return true if and only if y.equals(x) returns true. It is x, y, and z, if x.equals(y) returns true and y.equals(z) returns true, then x.equals(z) should return true. It is x and y, multiple invocations of x.equals(y) consistently return true or consistently return false, provided no information used in equals comparisons on the objects is modified. For any non-null reference value x, x.equals(null) should return false. The equals method for class Object implements the most discriminating possible equivalence relation on objects; that is, for any non-null reference values x and y, this method returns true if and only if x and y refer to the same object (x == y has the value true). Note that it is generally necessary to override the hashCode method whenever this method is overridden, so as to maintain the general contract for the hashCode method, which states that equal objects must have equal hash codes.", "history": "Added in API level 1", "FullName": "public boolean equals (Object obj)"}, "getBoundaryPath()": {"Returns": [["@B_android#graphics#Path_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the boundary of the region as a new Path. If the region is empty, the path will also be empty.", "history": "Added in API level 1", "FullName": "public Path getBoundaryPath ()"}, "union(android.graphics.Rect)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#graphics#Rect_E@", "Rect: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public final boolean union (Rect r)"}, "Region(int, int, int, int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a region set to the specified rectangle", "history": "added in API level 1", "FullName": "public Region (int left, int top, int right, int bottom)"}, "set(int,int,int,int)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the region to the specified rectangle", "history": "Added in API level 1", "FullName": "public boolean set (int left, int top, int right, int bottom)"}, "isRect()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the region contains a single rectangle", "history": "Added in API level 1", "FullName": "public boolean isRect ()"}, "contains(int,int)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the region contains the specified point", "history": "Added in API level 1", "FullName": "public boolean contains (int x, int y)"}, "set(int, int, int, int)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the region to the specified rectangle", "history": "added in API level 1", "FullName": "public boolean set (int left, int top, int right, int bottom)"}, "toString()": {"Returns": [["@B_java#lang#String_E@", "a string representation of the object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a string representation of the object. In general, the toString method returns a string that \"textually represents\" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character `@', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:", "history": "Added in API level 1", "FullName": "public String toString ()"}, "op(int,int,int,int,android.graphics.Region.Op)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["@B_android#graphics#Region#Op_E@", "Region.Op: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Perform the specified Op on this region and the specified rect. Return true if the result of the op is not empty.", "history": "Added in API level 1", "FullName": "public boolean op (int left, int top, int right, int bottom, Region.Op op)"}, "quickReject(android.graphics.Region)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#graphics#Region_E@", "Region no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the region is empty, or if the specified region does not intersect the region. Returning false is not a guarantee that they intersect, but returning true is a guarantee that they do not.", "history": "Added in API level 1", "FullName": "public boolean quickReject (Region rgn)"}, "getBounds()": {"Returns": [["@B_android#graphics#Rect_E@", "This value will never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a new Rect set to the bounds of the region. If the region is empty, the Rect will be set to [0, 0, 0, 0]", "history": "Added in API level 1", "FullName": "public Rect getBounds ()"}, "op(int, int, int, int, android.graphics.Region.Op)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["@B_android#graphics#Region#Op_E@", "Region.Op no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Perform the specified Op on this region and the specified rect. Return true if the result of the op is not empty.", "history": "added in API level 1", "FullName": "public boolean op (int left, int top, int right, int bottom, Region.Op op)"}, "op(android.graphics.Region,android.graphics.Region.Op)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#graphics#Region_E@", "Region: This value must never be null."], ["@B_android#graphics#Region#Op_E@", "Region.Op: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Perform the specified Op on this region and the specified region. Return true if the result of the op is not empty.", "history": "Added in API level 1", "FullName": "public boolean op (Region region, Region.Op op)"}, "writeToParcel(android.os.Parcel,int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: Parcel object to write the region data into"], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@. Value is either 0 or a combination of @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@, and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Write the region and its pixels to the parcel. The region can be rebuilt from the parcel by calling CREATOR.createFromParcel().", "history": "Added in API level 1", "FullName": "public void writeToParcel (Parcel p, int flags)"}, "set(android.graphics.Region)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#graphics#Region_E@", "Region: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the region to the specified region.", "history": "Added in API level 1", "FullName": "public boolean set (Region region)"}, "quickReject(int,int,int,int)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the region is empty, or if the specified rectangle does not intersect the region. Returning false is not a guarantee that they intersect, but returning true is a guarantee that they do not.", "history": "Added in API level 1", "FullName": "public boolean quickReject (int left, int top, int right, int bottom)"}, "finalize()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#lang#Throwable_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Called by the garbage collector on an object when garbage collection determines that there are no more references to the object. A subclass overrides the finalize method to dispose of system resources or to perform other cleanup. The general contract of finalize is that it is invoked if and when the Java\u2122 virtual machine has determined that there is no longer any means by which this object can be accessed by any thread that has not yet died, except as a result of an action taken by the finalization of some other object or class which is ready to be finalized. The finalize method may take any action, including making this object available again to other threads; the usual purpose of finalize, however, is to perform cleanup actions before the object is irrevocably discarded. For example, the finalize method for an object that represents an input/output connection might perform explicit I/O transactions to break the connection before the object is permanently discarded. The finalize method of class Object performs no special action; it simply returns normally. Subclasses of Object may override this definition. The Java programming language does not guarantee which thread will invoke the finalize method for any given object. It is guaranteed, however, that the thread that invokes finalize will not be holding any user-visible synchronization locks when finalize is invoked. If an uncaught exception is thrown by the finalize method, the exception is ignored and finalization of that object terminates. After the finalize method has been invoked for an object, no further action is taken until the Java virtual machine has again determined that there is no longer any means by which this object can be accessed by any thread that has not yet died, including possible actions by other objects or classes which are ready to be finalized, at which point the object may be discarded. The finalize method is never invoked more than once by a Java virtual machine for any given object. Any exception thrown by the finalize method causes the finalization of this object to be halted, but is otherwise ignored.", "history": "Added in API level 1", "FullName": "protected void finalize ()"}, "Region(android.graphics.Region)": {"Returns": [], "Parameters": [["@B_android#graphics#Region_E@", "Region: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a copy of the specified region", "history": "Added in API level 1", "FullName": "public Region (Region region)"}, "describeContents()": {"Returns": [["int", "a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either 0 or @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of @B_android#os#Parcelable#writeToParcel_E@, the return value of this method must include the @B_android#os#Parcelable#CONTENTS_FILE_DESCRIPTOR_E@ bit.", "history": "Added in API level 1", "FullName": "public int describeContents ()"}, "setPath(android.graphics.Path,android.graphics.Region)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#graphics#Path_E@", "Path: This value must never be null."], ["@B_android#graphics#Region_E@", "Region: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the region to the area described by the path and clip. Return true if the resulting region is non-empty. This produces a region that is identical to the pixels that would be drawn by the path (with no antialiasing).", "history": "Added in API level 1", "FullName": "public boolean setPath (Path path, Region clip)"}, "translate(int, int, android.graphics.Region)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["@B_android#graphics#Region_E@", "Region no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the dst region to the result of translating this region by [dx, dy]. If this region is empty, then dst will be set to empty.", "history": "added in API level 1", "FullName": "public void translate (int dx, int dy, Region dst)"}, "setEmpty()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the region to the empty region", "history": "Added in API level 1", "FullName": "public void setEmpty ()"}, "quickContains(android.graphics.Rect)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#graphics#Rect_E@", "Rect: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the region is a single rectangle (not complex) and it contains the specified rectangle. Returning false is not a guarantee that the rectangle is not contained by this region, but return true is a guarantee that the rectangle is contained by this region.", "history": "Added in API level 1", "FullName": "public boolean quickContains (Rect r)"}, "translate(int,int,android.graphics.Region)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["@B_android#graphics#Region_E@", "Region no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the dst region to the result of translating this region by [dx, dy]. If this region is empty, then dst will be set to empty.", "history": "Added in API level 1", "FullName": "public void translate (int dx, int dy, Region dst)"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [["@B_android#os#Parcel_E@", "Parcel: Parcel object to write the region data into"], ["int", "int: Additional flags about how the object should be written. May be 0 or @B_android#os#Parcelable#PARCELABLE_WRITE_RETURN_VALUE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Write the region and its pixels to the parcel. The region can be rebuilt from the parcel by calling CREATOR.createFromParcel().", "history": "added in API level 1", "FullName": "public void writeToParcel (Parcel p, int flags)"}, "getBounds(android.graphics.Rect)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#graphics#Rect_E@", "Rect: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the Rect to the bounds of the region. If the region is empty, the Rect will be set to [0, 0, 0, 0]", "history": "Added in API level 1", "FullName": "public boolean getBounds (Rect r)"}, "isEmpty()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if this region is empty", "history": "Added in API level 1", "FullName": "public boolean isEmpty ()"}, "quickContains(int,int,int,int)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the region is a single rectangle (not complex) and it contains the specified rectangle. Returning false is not a guarantee that the rectangle is not contained by this region, but return true is a guarantee that the rectangle is contained by this region.", "history": "Added in API level 1", "FullName": "public boolean quickContains (int left, int top, int right, int bottom)"}, "getBoundaryPath(android.graphics.Path)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#graphics#Path_E@", "Path: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the path to the boundary of the region. If the region is empty, the path will also be empty.", "history": "Added in API level 1", "FullName": "public boolean getBoundaryPath (Path path)"}, "op(android.graphics.Region,android.graphics.Region,android.graphics.Region.Op)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#graphics#Region_E@", "Region: This value must never be null."], ["@B_android#graphics#Region_E@", "Region: This value must never be null."], ["@B_android#graphics#Region#Op_E@", "Region.Op: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set this region to the result of performing the Op on the specified regions. Return true if the result is not empty.", "history": "Added in API level 1", "FullName": "public boolean op (Region region1, Region region2, Region.Op op)"}, "op(android.graphics.Rect,android.graphics.Region.Op)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#graphics#Rect_E@", "Rect: This value must never be null."], ["@B_android#graphics#Region#Op_E@", "Region.Op: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Perform the specified Op on this region and the specified rect. Return true if the result of the op is not empty.", "history": "Added in API level 1", "FullName": "public boolean op (Rect r, Region.Op op)"}, "isComplex()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the region contains more than one rectangle", "history": "Added in API level 1", "FullName": "public boolean isComplex ()"}, "op(android.graphics.Rect,android.graphics.Region,android.graphics.Region.Op)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_android#graphics#Rect_E@", "Rect: This value must never be null."], ["@B_android#graphics#Region_E@", "Region: This value must never be null."], ["@B_android#graphics#Region#Op_E@", "Region.Op: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set this region to the result of performing the Op on the specified rect and region. Return true if the result is not empty.", "history": "Added in API level 1", "FullName": "public boolean op (Rect rect, Region region, Region.Op op)"}, "Region(int,int,int,int)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a region set to the specified rectangle", "history": "Added in API level 1", "FullName": "public Region (int left, int top, int right, int bottom)"}, "quickReject(int, int, int, int)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return true if the region is empty, or if the specified rectangle does not intersect the region. Returning false is not a guarantee that they intersect, but returning true is a guarantee that they do not.", "history": "added in API level 1", "FullName": "public boolean quickReject (int left, int top, int right, int bottom)"}}, "Inheritance": [], "ClassName": "android.graphics.Region", "ClassDesc": ""}