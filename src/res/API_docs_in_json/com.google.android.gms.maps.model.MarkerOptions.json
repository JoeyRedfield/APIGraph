{"Functions": {"getTitle()": {"Returns": [["", "A string containing the marker's title."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the title set for this MarkerOptions object.", "history": "", "FullName": "public String getTitle ()"}, "draggable(boolean)": {"Returns": [["", "the object for which the method was called, with the new draggable state set."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the draggability for the marker.", "history": "", "FullName": "public MarkerOptions draggable (boolean draggable)"}, "isFlat()": {"Returns": [["", "true if the marker is flat against the map; false if the marker should face the camera."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the flat setting for this MarkerOptions object.", "history": "", "FullName": "public boolean isFlat ()"}, "describeContents()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public int describeContents ()"}, "visible(boolean)": {"Returns": [["", "the object for which the method was called, with the new visibility state set."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the visibility for the marker.", "history": "", "FullName": "public MarkerOptions visible (boolean visible)"}, "isVisible()": {"Returns": [["", "true if the marker is visible; otherwise, returns false."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the visibility setting for this MarkerOptions object.", "history": "", "FullName": "public boolean isVisible ()"}, "getAnchorV()": {"Returns": [["", "the v value of the anchor."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Vertical distance, normalized to [0, 1], of the anchor from the top edge.", "history": "", "FullName": "public float getAnchorV ()"}, "getAnchorU()": {"Returns": [["", "the u value of the anchor."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Horizontal distance, normalized to [0, 1], of the anchor from the left edge.", "history": "", "FullName": "public float getAnchorU ()"}, "writeToParcel(android.os.Parcel, int)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "", "FullName": "public void writeToParcel (Parcel out, int flags)"}, "getInfoWindowAnchorV()": {"Returns": [["", "the v value of the info window anchor."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Vertical distance, normalized to [0, 1], of the info window anchor from the top edge.", "history": "", "FullName": "public float getInfoWindowAnchorV ()"}, "flat(boolean)": {"Returns": [["", "the object for which the method was called, with the new flat state set."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether this marker should be flat against the map true or a billboard facing the camera false. If the marker is flat against the map, it will remain stuck to the map as the camera rotates and tilts but will still remain the same size as the camera zooms, unlike a @B_com#google#android#gms#maps#model#GroundOverlay_E@. If the marker is a billboard, it will always be drawn facing the camera and will rotate and tilt with the camera. The default value is false.", "history": "", "FullName": "public MarkerOptions flat (boolean flat)"}, "position(com.google.android.gms.maps.model.LatLng)": {"Returns": [["", "the object for which the method was called, with the new position set."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the location for the marker.", "history": "", "FullName": "public MarkerOptions position (LatLng position)"}, "anchor(float, float)": {"Returns": [["", "the object for which the method was called, with the new anchor set."]], "Parameters": [["float", "u-coordinate of the anchor, as a ratio of the image width (in the range [0, 1])"], ["float", "v-coordinate of the anchor, as a ratio of the image height (in the range [0, 1])"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Specifies the anchor to be at a particular point in the marker image. The anchor specifies the point in the icon image that is anchored to the marker's position on the Earth's surface. The anchor point is specified in the continuous space [0.0, 1.0] x [0.0, 1.0], where (0, 0) is the top-left corner of the image, and (1, 1) is the bottom-right corner. The anchoring point in a W x H image is the nearest discrete grid point in a (W + 1) x (H + 1) grid, obtained by scaling the then rounding. For example, in a 4 x 2 image, the anchor point (0.7, 0.6) resolves to the grid point at (3, 1).", "history": "", "FullName": "public MarkerOptions anchor (float u, float v)"}, "MarkerOptions()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a new set of marker options.", "history": "", "FullName": "public MarkerOptions ()"}, "getRotation()": {"Returns": [["", "the rotation of the marker in degrees clockwise from the default position."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the rotation set for this MarkerOptions object.", "history": "", "FullName": "public float getRotation ()"}, "alpha(float)": {"Returns": [["", "the object for which the method was called, with the new alpha set."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the alpha (opacity) of the marker. This is a value from 0 to 1, where 0 means the marker is completely transparent and 1 means the marker is completely opaque.", "history": "", "FullName": "public MarkerOptions alpha (float alpha)"}, "getPosition()": {"Returns": [["", "A @B_com#google#android#gms#maps#model#LatLng_E@ object specifying the marker's current position."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the position set for this MarkerOptions object.", "history": "", "FullName": "public LatLng getPosition ()"}, "getIcon()": {"Returns": [["", "An @B_com#google#android#gms#maps#model#BitmapDescriptor_E@ representing the custom icon, or null if no custom icon is set."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the custom icon set for this MarkerOptions object.", "history": "", "FullName": "public BitmapDescriptor getIcon ()"}, "snippet(java.lang.String)": {"Returns": [["", "the object for which the method was called, with the new snippet set."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the snippet for the marker.", "history": "", "FullName": "public MarkerOptions snippet (String snippet)"}, "isDraggable()": {"Returns": [["", "true if the marker is draggable; otherwise, returns false."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the draggability setting for this MarkerOptions object.", "history": "", "FullName": "public boolean isDraggable ()"}, "title(java.lang.String)": {"Returns": [["", "the object for which the method was called, with the new title set."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the title for the marker.", "history": "", "FullName": "public MarkerOptions title (String title)"}, "getInfoWindowAnchorU()": {"Returns": [["", "the u value of the info window anchor."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Horizontal distance, normalized to [0, 1], of the info window anchor from the left edge.", "history": "", "FullName": "public float getInfoWindowAnchorU ()"}, "getSnippet()": {"Returns": [["", "A string containing the marker's snippet."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the snippet set for this MarkerOptions object.", "history": "", "FullName": "public String getSnippet ()"}, "icon(com.google.android.gms.maps.model.BitmapDescriptor)": {"Returns": [["", "the object for which the method was called, with the new icon set."]], "Parameters": [["@B_com#google#android#gms#maps#model#BitmapDescriptor_E@", "if null, the default marker is used."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the icon for the marker.", "history": "", "FullName": "public MarkerOptions icon (BitmapDescriptor icon)"}, "rotation(float)": {"Returns": [["", "the object for which the method was called, with the new rotation set."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the rotation of the marker in degrees clockwise about the marker's anchor point. The axis of rotation is perpendicular to the marker. A rotation of 0 corresponds to the default position of the marker. When the marker is flat on the map, the default position is North aligned and the rotation is such that the marker always remains flat on the map. When the marker is a billboard, the default position is pointing up and the rotation is such that the marker is always facing the camera. The default value is 0.", "history": "", "FullName": "public MarkerOptions rotation (float rotation)"}, "infoWindowAnchor(float, float)": {"Returns": [["", "the object for which the method was called, with the new info window anchor set."]], "Parameters": [["float", "u-coordinate of the info window anchor, as a ratio of the image width (in the range [0, 1])"], ["float", "v-coordinate of the info window anchor, as a ratio of the image height (in the range [0, 1])"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Specifies the anchor point of the info window on the marker image. This is specified in the same coordinate system as the anchor. See @B_com#google#android#gms#maps#model#MarkerOptions#anchor_E@ for more details. The default is the top middle of the image.", "history": "", "FullName": "public MarkerOptions infoWindowAnchor (float u, float v)"}, "getAlpha()": {"Returns": [["", "the alpha of the marker in the range [0, 1]."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the alpha set for this MarkerOptions object.", "history": "", "FullName": "public float getAlpha ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "com.google.android.gms.maps.model.MarkerOptions", "ClassDesc": "Defines MarkerOptions for a marker. For more information, read the"}