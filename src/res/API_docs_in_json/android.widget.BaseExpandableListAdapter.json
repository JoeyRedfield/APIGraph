{"Functions": {"notifyDataSetInvalidated()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#database#DataSetObservable#notifyInvalidated_E@"], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public void notifyDataSetInvalidated ()"}, "onGroupExpanded(int)": {"Returns": [], "Parameters": [["int", "int: The group being expanded."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a group is expanded.", "history": "Added in API level 1", "FullName": "public void onGroupExpanded (int groupPosition)"}, "onGroupCollapsed(int)": {"Returns": [], "Parameters": [["int", "int: The group being collapsed."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when a group is collapsed.", "history": "Added in API level 1", "FullName": "public void onGroupCollapsed (int groupPosition)"}, "BaseExpandableListAdapter()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in API level 1", "FullName": "public BaseExpandableListAdapter ()"}, "areAllItemsEnabled()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public boolean areAllItemsEnabled ()"}, "notifyDataSetChanged()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#database#DataSetObservable#notifyChanged_E@"], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public void notifyDataSetChanged ()"}, "isEmpty()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public boolean isEmpty ()"}, "getCombinedGroupId(long)": {"Returns": [["long", "The unique (and possibly stable) ID of the group across all groups and children in this list."]], "Parameters": [["long", "long: The ID of the group"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override this method if you foresee a clash in IDs based on this scheme: Base implementation returns a long: bit 0: Whether this ID points to a child (unset) or group (set), so for this method this bit will be 0. bit 1-31: Lower 31 bits of the groupId bit 32-63: Lower 32 bits of the childId. Gets an ID for a group that is unique across any item (either group or child) that is in this list. Expandable lists require each item (group or child) to have a unique ID among all children and groups in the list. This method is responsible for returning that unique ID given a group's ID. Furthermore, if @B_android#widget#ExpandableListAdapter#hasStableIds_E@ is true, the returned ID must be stable as well.", "history": "Added in API level 1", "FullName": "public long getCombinedGroupId (long groupId)"}, "getCombinedChildId(long, long)": {"Returns": [["long", "The unique (and possibly stable) ID of the child across all groups and children in this list."]], "Parameters": [["long", "long: The ID of the group that contains this child."], ["long", "long: The ID of the child."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override this method if you foresee a clash in IDs based on this scheme: Base implementation returns a long: bit 0: Whether this ID points to a child (unset) or group (set), so for this method this bit will be 1. bit 1-31: Lower 31 bits of the groupId bit 32-63: Lower 32 bits of the childId. Gets an ID for a child that is unique across any item (either group or child) that is in this list. Expandable lists require each item (group or child) to have a unique ID among all children and groups in the list. This method is responsible for returning that unique ID given a child's ID and its group's ID. Furthermore, if @B_android#widget#ExpandableListAdapter#hasStableIds_E@ is true, the returned ID must be stable as well.", "history": "added in API level 1", "FullName": "public long getCombinedChildId (long groupId, long childId)"}, "getCombinedChildId(long,long)": {"Returns": [["long", "The unique (and possibly stable) ID of the child across all groups and children in this list."]], "Parameters": [["long", "long: The ID of the group that contains this child."], ["long", "long: The ID of the child."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Override this method if you foresee a clash in IDs based on this scheme: Base implementation returns a long: bit 0: Whether this ID points to a child (unset) or group (set), so for this method this bit will be 1. bit 1-31: Lower 31 bits of the groupId bit 32-63: Lower 32 bits of the childId. Gets an ID for a child that is unique across any item (either group or child) that is in this list. Expandable lists require each item (group or child) to have a unique ID among all children and groups in the list. This method is responsible for returning that unique ID given a child's ID and its group's ID. Furthermore, if @B_android#widget#ExpandableListAdapter#hasStableIds_E@ is true, the returned ID must be stable as well.", "history": "Added in API level 1", "FullName": "public long getCombinedChildId (long groupId, long childId)"}, "getGroupType(int)": {"Returns": [["int", "0 for any groupPosition, since only one group type count is declared."]], "Parameters": [["int", "int: the position of the group for which the type should be returned."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the type of group View that will be created by @B_android#widget#ExpandableListAdapter#getGroupView_E@ . for the specified group item.", "history": "Added in API level 8", "FullName": "public int getGroupType (int groupPosition)"}, "getChildType(int, int)": {"Returns": [["int", "0 for any group or child position, since only one child type count is declared."]], "Parameters": [["int", "int: the position of the group that the child resides in"], ["int", "int: the position of the child with respect to other children in the group"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the type of child View that will be created by @B_android#widget#ExpandableListAdapter#getChildView_E@ for the specified child item.", "history": "added in API level 8", "FullName": "public int getChildType (int groupPosition, int childPosition)"}, "unregisterDataSetObserver(android.database.DataSetObserver)": {"Returns": [], "Parameters": [["@B_android#database#DataSetObserver_E@", "DataSetObserver no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public void unregisterDataSetObserver (DataSetObserver observer)"}, "registerDataSetObserver(android.database.DataSetObserver)": {"Returns": [], "Parameters": [["@B_android#database#DataSetObserver_E@", "DataSetObserver no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public void registerDataSetObserver (DataSetObserver observer)"}, "getChildType(int,int)": {"Returns": [["int", "0 for any group or child position, since only one child type count is declared."]], "Parameters": [["int", "int: the position of the group that the child resides in"], ["int", "int: the position of the child with respect to other children in the group"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the type of child View that will be created by @B_android#widget#ExpandableListAdapter#getChildView_E@ for the specified child item.", "history": "Added in API level 8", "FullName": "public int getChildType (int groupPosition, int childPosition)"}, "getGroupTypeCount()": {"Returns": [["int", "1 as a default value in BaseExpandableListAdapter."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of types of group Views that will be created by @B_android#widget#ExpandableListAdapter#getGroupView_E@ . Each type represents a set of views that can be converted in @B_android#widget#ExpandableListAdapter#getGroupView_E@ . If the adapter always returns the same type of View for all group items, this method should return 1. This method will only be called when the adapter is set on the @B_android#widget#AdapterView_E@.", "history": "Added in API level 8", "FullName": "public int getGroupTypeCount ()"}, "getChildTypeCount()": {"Returns": [["int", "1 as a default value in BaseExpandableListAdapter."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the number of types of child Views that will be created by @B_android#widget#ExpandableListAdapter#getChildView_E@ . Each type represents a set of views that can be converted in @B_android#widget#ExpandableListAdapter#getChildView_E@ , for any group. If the adapter always returns the same type of View for all child items, this method should return 1. This method will only be called when the adapter is set on the @B_android#widget#AdapterView_E@.", "history": "Added in API level 8", "FullName": "public int getChildTypeCount ()"}}, "Inheritance": [], "ClassName": "android.widget.BaseExpandableListAdapter", "ClassDesc": "Base class for a @B_android#widget#ExpandableListAdapter_E@ used to provide data and Views from some data to an expandable list view. Adapters inheriting this class should verify that the base implementations of @B_android#widget#BaseExpandableListAdapter#getCombinedChildId_E@ and @B_android#widget#BaseExpandableListAdapter#getCombinedGroupId_E@ are correct in generating unique IDs from the group/children IDs."}