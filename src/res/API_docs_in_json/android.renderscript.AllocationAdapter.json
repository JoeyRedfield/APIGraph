{"Functions": {"setFace(android.renderscript.Type.CubemapFace)": {"Returns": [], "Parameters": [["@B_android#renderscript#Type#CubemapFace_E@", "Type.CubemapFace: The face to make active."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the active Face. The base allocation must be of a type that includes faces.", "history": "Added in API level 11", "FullName": "public void setFace (Type.CubemapFace cf)"}, "createTyped(android.renderscript.RenderScript,android.renderscript.Allocation,android.renderscript.Type)": {"Returns": [["@B_android#renderscript#AllocationAdapter_E@", "no returns description in source"]], "Parameters": [["@B_android#renderscript#RenderScript_E@", "RenderScript no parameter comment"], ["@B_android#renderscript#Allocation_E@", "Allocation no parameter comment"], ["@B_android#renderscript#Type_E@", "Type no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create an arbitrary window into the base allocation. The type describes the shape of the window. Any dimensions present in the type must be equal or smaller to the dimensions in the source allocation. A dimension present in the allocation that is not present in the type will be constrained away with the selectors. If a dimension is present in both the type and allocation, one of two things will happen. If the type is smaller than the allocation, a window will be created, the selected value in the adapter for that dimension will act as the base address, and the type will describe the size of the view starting at that point. If the type and allocation dimension are of the same size, then setting the selector for the dimension will be an error.", "history": "Added in API level 23", "FullName": "public static AllocationAdapter createTyped (RenderScript rs, Allocation a, Type t)"}, "setY(int)": {"Returns": [], "Parameters": [["int", "int: The y to make active."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the active Y. The y value must be within the range for the allocation being adapted. The base allocation must contain the Y dimension.", "history": "Added in API level 11", "FullName": "public void setY (int y)"}, "create1D(android.renderscript.RenderScript,android.renderscript.Allocation)": {"Returns": [["@B_android#renderscript#AllocationAdapter_E@", "no returns description in source"]], "Parameters": [["@B_android#renderscript#RenderScript_E@", "RenderScript no parameter comment"], ["@B_android#renderscript#Allocation_E@", "Allocation no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 14", "FullName": "public static AllocationAdapter create1D (RenderScript rs, Allocation a)"}, "resize(int)": {"Returns": [], "Parameters": [["int", "int: ignored."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "RenderScript objects should be immutable once created. The replacement is to create a new allocation and copy the contents. This function will throw an exception if API 21 or higher is used. Override the Allocation resize. Resizing adapters is not allowed and will throw a RSInvalidStateException.", "history": "Added in API level 11", "FullName": "public void resize (int dimX)"}, "setLOD(int)": {"Returns": [], "Parameters": [["int", "int: The LOD to make active."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the active LOD. The LOD must be within the range for the type being adapted. The base allocation must have mipmaps. Because this changes the dimensions of the adapter the current Y and Z will be reset.", "history": "Added in API level 11", "FullName": "public void setLOD (int lod)"}, "setX(int)": {"Returns": [], "Parameters": [["int", "int: The x to make active."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the active X. The x value must be within the range for the allocation being adapted.", "history": "Added in API level 23", "FullName": "public void setX (int x)"}, "setZ(int)": {"Returns": [], "Parameters": [["int", "int: The z to make active."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the active Z. The z value must be within the range for the allocation being adapted. The base allocation must contain the Z dimension.", "history": "Added in API level 11", "FullName": "public void setZ (int z)"}, "create2D(android.renderscript.RenderScript,android.renderscript.Allocation)": {"Returns": [["@B_android#renderscript#AllocationAdapter_E@", "no returns description in source"]], "Parameters": [["@B_android#renderscript#RenderScript_E@", "RenderScript no parameter comment"], ["@B_android#renderscript#Allocation_E@", "Allocation no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 11", "FullName": "public static AllocationAdapter create2D (RenderScript rs, Allocation a)"}}, "Inheritance": ["@B_android#renderscript#BaseObj_E@", "@B_android#renderscript#Allocation_E@"], "ClassName": "android.renderscript.AllocationAdapter", "ClassDesc": "Only intended for use by generated reflected code. * @apiSince 11"}