{"Functions": {"CoordinatorLayout.Behavior()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Default constructor for instantiating Behaviors.", "history": "added in version 22.2.0", "FullName": "CoordinatorLayout.Behavior ()"}, "setTag(android.view.View, java.lang.Object)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: child view to set tag with"], ["@B_java#lang#Object_E@", "Object: tag object to set"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Associate a Behavior-specific tag object with the given child view. This object will be stored with the child view's LayoutParams.", "history": "added in version 22.2.0", "FullName": "void setTag (View child, Object tag)"}, "getTag(android.view.View)": {"Returns": [["@B_java#lang#Object_E@", "the previously stored tag object"]], "Parameters": [["@B_android#view#View_E@", "View: child view to get tag with"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Get the behavior-specific tag object with the given child view. This object is stored with the child view's LayoutParams.", "history": "added in version 22.2.0", "FullName": "Object getTag (View child)"}, "onDetachedFromLayoutParams()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the Behavior has been detached from its holding LayoutParams instance. This will only be called if the Behavior has been explicitly removed from the LayoutParams instance via @B_android#support#design#widget#CoordinatorLayout#LayoutParams#setBehavior_E@. It will not be called if the associated view is removed from the CoordinatorLayout or similar.", "history": "added in version 24.2.0", "FullName": "void onDetachedFromLayoutParams ()"}}, "Inheritance": ["java.lang.Object"], "ClassName": "https:##developer#android#com@B_android#view#View_E@", "ClassDesc": "Interaction behavior plugin for child views of @B_android#support#design#widget#CoordinatorLayout_E@. A Behavior implements one or more interactions that a user can take on a child view. These interactions may include drags, swipes, flings, or any other gestures."}