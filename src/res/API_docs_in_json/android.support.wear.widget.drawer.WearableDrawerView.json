{"Functions": {"isOpened()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the drawer is fully open.", "history": "added in version 26.0.0-beta2", "FullName": "boolean isOpened ()"}, "onDrawerClosed()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the drawer has settled in a completely closed state. This is analogous to @B_android#support#wear#widget#drawer#WearableDrawerLayout#DrawerStateCallback#onDrawerClosed_E@.", "history": "added in version 26.0.0-beta2", "FullName": "void onDrawerClosed ()"}, "setPeekOnScrollDownEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether or not this drawer should peek while scrolling down. This is currently only supported for bottom drawers. Defaults to false.", "history": "added in version 26.0.0-beta2", "FullName": "void setPeekOnScrollDownEnabled (boolean peekOnScrollDown)"}, "setDrawerContent(android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: The view to show when the drawer is open, or null if it should not open."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the drawer content view.", "history": "added in version 26.0.0-beta2", "FullName": "void setDrawerContent (View content)"}, "setIsLocked(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#support#wear#widget#drawer#WearableDrawerView#isLocked_E@"], "Permissions": [], "Description": "Sets whether or not the position of the drawer can be modified by user interaction.", "history": "added in version 26.0.0-beta2", "FullName": "void setIsLocked (boolean locked)"}, "onDrawerStateChanged(int)": {"Returns": [], "Parameters": [["int", "int: one of @B_android#support#wear#widget#drawer#WearableDrawerView#STATE_DRAGGING_E@, @B_android#support#wear#widget#drawer#WearableDrawerView#STATE_SETTLING_E@, or @B_android#support#wear#widget#drawer#WearableDrawerView#STATE_IDLE_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the drawer state changes. This is analogous to @B_android#support#wear#widget#drawer#WearableDrawerLayout#DrawerStateCallback#onDrawerStateChanged_E@.", "history": "added in version 26.0.0-beta2", "FullName": "void onDrawerStateChanged (int state)"}, "onFinishInflate()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Finalize inflating a view from XML. This is called as the last phase of inflation, after all child views have been added. Even if the subclass overrides onFinishInflate, they should always be sure to call the super method, so that we get called.", "history": "", "FullName": "void onFinishInflate ()"}, "setIsAutoPeekEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets whether or not the drawer can automatically adjust its peek state. Note that locked drawers will never auto-peek, but their isAutoPeekEnabled state will be maintained through a lock/unlock cycle.", "history": "added in version 26.0.0-beta2", "FullName": "void setIsAutoPeekEnabled (boolean canAutoPeek)"}, "isLockedWhenClosed()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#wear#widget#drawer#WearableDrawerView#isLocked_E@"], "Permissions": [], "Description": "Returns true if this drawer should be locked when the user cannot see it.", "history": "added in version 26.0.0-beta2", "FullName": "boolean isLockedWhenClosed ()"}, "isPeekOnScrollDownEnabled()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets whether or not this drawer should peek while scrolling down. This is currently only supported for bottom drawers. Defaults to false.", "history": "added in version 26.0.0-beta2", "FullName": "boolean isPeekOnScrollDownEnabled ()"}, "isOpenOnlyAtTopEnabled()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether this drawer may only be opened by the user when at the top of the scrolling content. If there is no scrolling content, then this has no effect. Defaults to false.", "history": "added in version 26.0.0-beta2", "FullName": "boolean isOpenOnlyAtTopEnabled ()"}, "isClosed()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the drawer is fully closed.", "history": "added in version 26.0.0-beta2", "FullName": "boolean isClosed ()"}, "getDrawerState()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the current drawer state, which will be one of @B_android#support#wear#widget#drawer#WearableDrawerView#STATE_DRAGGING_E@, @B_android#support#wear#widget#drawer#WearableDrawerView#STATE_SETTLING_E@, or @B_android#support#wear#widget#drawer#WearableDrawerView#STATE_IDLE_E@", "history": "added in version 26.0.0-beta2", "FullName": "int getDrawerState ()"}, "isPeeking()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns whether the drawer is either peeking or the peek view is animating open.", "history": "added in version 26.0.0-beta2", "FullName": "boolean isPeeking ()"}, "setLockedWhenClosed(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#support#wear#widget#drawer#WearableDrawerView#isLocked_E@"], "Permissions": [], "Description": "Sets whether this drawer should be locked when the user cannot see it.", "history": "added in version 26.0.0-beta2", "FullName": "void setLockedWhenClosed (boolean locked)"}, "onAttachedToWindow()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This is called when the view is attached to a window. At this point it has a Surface and will start drawing. Note that this function is guaranteed to be called before @B_android#view#View#onDraw_E@, however it may be called any time before the first onDraw -- including before or after @B_android#view#View#onMeasure_E@.", "history": "", "FullName": "void onAttachedToWindow ()"}, "getController()": {"Returns": [["@B_android#support#wear#widget#drawer#WearableDrawerController_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the @B_android#support#wear#widget#drawer#WearableDrawerController_E@ associated with this @B_android#support#wear#widget#drawer#WearableDrawerView_E@. This will only be valid after this View has been added to its parent.", "history": "added in version 26.0.0-beta2", "FullName": "WearableDrawerController getController ()"}, "getDrawerContent()": {"Returns": [["@B_android#view#View_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the drawer content view.", "history": "added in version 26.0.0-beta2", "FullName": "View getDrawerContent ()"}, "setOpenOnlyAtTopEnabled(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Only allow the user to open this drawer when at the top of the scrolling content. If there is no scrolling content, then this has no effect. Defaults to false.", "history": "added in version 26.0.0-beta2", "FullName": "void setOpenOnlyAtTopEnabled (boolean openOnlyAtTop)"}, "setPeekContent(android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: The view to show when the drawer peeks."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the peek content view.", "history": "added in version 26.0.0-beta2", "FullName": "void setPeekContent (View content)"}, "onDrawerOpened()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when the drawer has settled in a completely open state. The drawer is interactive at this point. This is analogous to @B_android#support#wear#widget#drawer#WearableDrawerLayout#DrawerStateCallback#onDrawerOpened_E@.", "history": "added in version 26.0.0-beta2", "FullName": "void onDrawerOpened ()"}, "onPeekContainerClicked(android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when anything within the peek container is clicked. However, if a custom peek view is supplied and it handles the click, then this may not be called. The default behavior is to open the drawer.", "history": "added in version 26.0.0-beta2", "FullName": "void onPeekContainerClicked (View v)"}, "isAutoPeekEnabled()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if this drawer has auto-peeking enabled. This will always return false for a locked drawer.", "history": "added in version 26.0.0-beta2", "FullName": "boolean isAutoPeekEnabled ()"}, "isLocked()": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns true if the position of the drawer cannot be modified by user interaction. Specifically, a drawer cannot be opened, closed, or automatically peeked by @B_android#support#wear#widget#drawer#WearableDrawerLayout_E@. However, it can be explicitly opened, closed, and peeked by the developer. A drawer may be considered locked if the drawer is locked open, locked closed, or is closed and @B_android#support#wear#widget#drawer#WearableDrawerView#isLockedWhenClosed_E@ returns true.", "history": "added in version 26.0.0-beta2", "FullName": "boolean isLocked ()"}, "WearableDrawerView(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 26.0.0-beta2", "FullName": "WearableDrawerView (Context context)"}}, "Inheritance": ["java.lang.Object", "https:##developer#android#com@B_android#view#View_E@", "https:##developer#android#com@B_android#view#ViewGroup_E@", "https:##developer#android#com@B_android#widget#FrameLayout_E@"], "ClassName": "android.support.wear.widget.drawer.WearableDrawerView", "ClassDesc": "View that contains drawer content and a peeking view for use with @B_android#support#wear#widget#drawer#WearableDrawerLayout_E@. This view provides the ability to set its main content as well as a view shown while peeking. Specifying the peek view is entirely optional; a default is used if none are set. However, the content must be provided. There are two ways to specify the content and peek views: by invoking setter methods on the WearableDrawerView, or by specifying the app:drawerContent and app:peekView attributes. Examples:"}