{"Functions": {"getEffectiveKeyBits()": {"Returns": [["int", "the effective key size in bits."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the effective key size in bits.", "history": "Added in API level 1", "FullName": "public int getEffectiveKeyBits ()"}, "RC2ParameterSpec(int, byte[])": {"Returns": [], "Parameters": [["int", "int: the effective key size in bits."], ["byte[]", "byte: the buffer with the 8-byte IV. The first 8 bytes of the buffer are copied to protect against subsequent modification."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if iv is null."]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a parameter set for RC2 from the given effective key size (in bits) and an 8-byte IV. The bytes that constitute the IV are those between iv[0] and iv[7] inclusive.", "history": "added in API level 1", "FullName": "public RC2ParameterSpec (int effectiveKeyBits, byte[] iv)"}, "getIV()": {"Returns": [["byte[]", "the IV or null if this parameter set does not contain an IV. Returns a new array each time this method is called."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the IV or null if this parameter set does not contain an IV.", "history": "Added in API level 1", "FullName": "public byte[] getIV ()"}, "RC2ParameterSpec(int,byte[])": {"Returns": [], "Parameters": [["int", "int: the effective key size in bits."], ["byte[]", "byte: the buffer with the 8-byte IV. The first 8 bytes of the buffer are copied to protect against subsequent modification."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if iv is null."]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a parameter set for RC2 from the given effective key size (in bits) and an 8-byte IV. The bytes that constitute the IV are those between iv[0] and iv[7] inclusive.", "history": "Added in API level 1", "FullName": "public RC2ParameterSpec (int effectiveKeyBits, byte[] iv)"}, "equals(java.lang.Object)": {"Returns": [["boolean", "true if the objects are considered equal, false if obj is null or otherwise."]], "Parameters": [["@B_java#lang#Object_E@", "Object: the object to test for equality with this object."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Tests for equality between the specified object and this object. Two RC2ParameterSpec objects are considered equal if their effective key sizes and IVs are equal. (Two IV references are considered equal if both are", "history": "Added in API level 1", "FullName": "public boolean equals (Object obj)"}, "RC2ParameterSpec(int,byte[],int)": {"Returns": [], "Parameters": [["int", "int: the effective key size in bits."], ["byte[]", "byte: the buffer with the IV. The first 8 bytes of the buffer beginning at offset inclusive are copied to protect against subsequent modification."], ["int", "int: the offset in iv where the 8-byte IV starts."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if iv is null."]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a parameter set for RC2 from the given effective key size (in bits) and IV. The IV is taken from iv, starting at offset inclusive. The bytes that constitute the IV are those between iv[offset] and iv[offset+7] inclusive.", "history": "Added in API level 1", "FullName": "public RC2ParameterSpec (int effectiveKeyBits, byte[] iv, int offset)"}, "RC2ParameterSpec(int, byte[], int)": {"Returns": [], "Parameters": [["int", "int: the effective key size in bits."], ["byte[]", "byte: the buffer with the IV. The first 8 bytes of the buffer beginning at offset inclusive are copied to protect against subsequent modification."], ["int", "int: the offset in iv where the 8-byte IV starts."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if iv is null."]], "SeeAlso": [], "Permissions": [], "Description": "Constructs a parameter set for RC2 from the given effective key size (in bits) and IV. The IV is taken from iv, starting at offset inclusive. The bytes that constitute the IV are those between iv[offset] and iv[offset+7] inclusive.", "history": "added in API level 1", "FullName": "public RC2ParameterSpec (int effectiveKeyBits, byte[] iv, int offset)"}, "RC2ParameterSpec(int)": {"Returns": [], "Parameters": [["int", "int: the effective key size in bits."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a parameter set for RC2 from the given effective key size (in bits).", "history": "Added in API level 1", "FullName": "public RC2ParameterSpec (int effectiveKeyBits)"}, "hashCode()": {"Returns": [["int", "a hash code value for this object."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Calculates a hash code value for the object. Objects that are equal will also have the same hashcode.", "history": "Added in API level 1", "FullName": "public int hashCode ()"}}, "Inheritance": [], "ClassName": "javax.crypto.spec.RC2ParameterSpec", "ClassDesc": "This class specifies the parameters used with the The parameters consist of an effective key size and optionally an 8-byte initialization vector (IV) (only in feedback mode). This class can be used to initialize a Cipher object that implements the"}