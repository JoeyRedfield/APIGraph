{"Functions": {"createRouteCategory(int,boolean)": {"Returns": [["@B_android#media#MediaRouter#RouteCategory_E@", "the new RouteCategory"]], "Parameters": [["int", "int: Resource ID of the name of the new category"], ["boolean", "boolean: true if routes in this category may be grouped with one another"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new route category. Each route must belong to a category.", "history": "Added in API level 16", "FullName": "public MediaRouter.RouteCategory createRouteCategory (int nameResId, boolean isGroupable)"}, "getSelectedRoute(int)": {"Returns": [["@B_android#media#MediaRouter#RouteInfo_E@", "the selected route"]], "Parameters": [["int", "int: route types"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the currently selected route for any of the given types", "history": "Added in API level 16", "FullName": "public MediaRouter.RouteInfo getSelectedRoute (int type)"}, "createRouteCategory(int, boolean)": {"Returns": [["@B_android#media#MediaRouter#RouteCategory_E@", "the new RouteCategory"]], "Parameters": [["int", "int: Resource ID of the name of the new category"], ["boolean", "boolean: true if routes in this category may be grouped with one another"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new route category. Each route must belong to a category.", "history": "added in API level 16", "FullName": "public MediaRouter.RouteCategory createRouteCategory (int nameResId, boolean isGroupable)"}, "clearUserRoutes()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#media#MediaRouter#removeUserRoute_E@"], "Permissions": [], "Description": "Remove all app-specified routes from the MediaRouter.", "history": "Added in API level 16", "FullName": "public void clearUserRoutes ()"}, "addUserRoute(android.media.MediaRouter.UserRouteInfo)": {"Returns": [], "Parameters": [["@B_android#media#MediaRouter#UserRouteInfo_E@", "MediaRouter.UserRouteInfo: Definition of the route to add"]], "Throws": [], "SeeAlso": ["@B_android#media#MediaRouter#createUserRoute_E@", "@B_android#media#MediaRouter#removeUserRoute_E@"], "Permissions": [], "Description": "Add an app-specified route for media to the MediaRouter. App-specified route definitions are created using @B_android#media#MediaRouter#createUserRoute_E@", "history": "Added in API level 16", "FullName": "public void addUserRoute (MediaRouter.UserRouteInfo info)"}, "getCategoryCount()": {"Returns": [["int", "the number of unique categories represented by this MediaRouter's known routes"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the number of @B_android#media#MediaRouter#RouteCategory_E@ currently represented by routes known to this MediaRouter.", "history": "Added in API level 16", "FullName": "public int getCategoryCount ()"}, "getCategoryAt(int)": {"Returns": [["@B_android#media#MediaRouter#RouteCategory_E@", "the category at index"]], "Parameters": [["int", "int: which category to return"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the @B_android#media#MediaRouter#RouteCategory_E@ at the given index. Valid indices are in the range [0-getCategoryCount).", "history": "Added in API level 16", "FullName": "public MediaRouter.RouteCategory getCategoryAt (int index)"}, "addCallback(int,android.media.MediaRouter.Callback)": {"Returns": [], "Parameters": [["int", "int: Types of routes this callback is interested in"], ["@B_android#media#MediaRouter#Callback_E@", "MediaRouter.Callback: Callback to add"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Add a callback to listen to events about specific kinds of media routes. If the specified callback is already registered, its registration will be updated for any additional route types specified. This is a convenience method that has the same effect as calling @B_android#media#MediaRouter#addCallback_E@ without flags.", "history": "Added in API level 16", "FullName": "public void addCallback (int types, MediaRouter.Callback cb)"}, "addCallback(int,android.media.MediaRouter.Callback,int)": {"Returns": [], "Parameters": [["int", "int: Types of routes this callback is interested in"], ["@B_android#media#MediaRouter#Callback_E@", "MediaRouter.Callback: Callback to add"], ["int", "int: Flags to control the behavior of the callback. May be zero or a combination of @B_android#media#MediaRouter#CALLBACK_FLAG_PERFORM_ACTIVE_SCAN_E@ and @B_android#media#MediaRouter#CALLBACK_FLAG_UNFILTERED_EVENTS_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Add a callback to listen to events about specific kinds of media routes. If the specified callback is already registered, its registration will be updated for any additional route types specified. By default, the callback will only be invoked for events that affect routes that match the specified selector. The filtering may be disabled by specifying the @B_android#media#MediaRouter#CALLBACK_FLAG_UNFILTERED_EVENTS_E@ flag.", "history": "Added in API level 18", "FullName": "public void addCallback (int types, MediaRouter.Callback cb, int flags)"}, "getRouteCount()": {"Returns": [["int", "the number of routes tracked by this router"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the number of @B_android#media#MediaRouter#RouteInfo_E@ currently known to this MediaRouter.", "history": "Added in API level 16", "FullName": "public int getRouteCount ()"}, "createRouteCategory(java.lang.CharSequence,boolean)": {"Returns": [["@B_android#media#MediaRouter#RouteCategory_E@", "the new RouteCategory"]], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: Name of the new category"], ["boolean", "boolean: true if routes in this category may be grouped with one another"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Create a new route category. Each route must belong to a category.", "history": "Added in API level 16", "FullName": "public MediaRouter.RouteCategory createRouteCategory (CharSequence name, boolean isGroupable)"}, "getDefaultRoute()": {"Returns": [["@B_android#media#MediaRouter#RouteInfo_E@", "The default route, which is guaranteed to never be null."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the default route for playing media content on the system. The system always provides a default route.", "history": "Added in API level 18", "FullName": "public MediaRouter.RouteInfo getDefaultRoute ()"}, "removeCallback(android.media.MediaRouter.Callback)": {"Returns": [], "Parameters": [["@B_android#media#MediaRouter#Callback_E@", "MediaRouter.Callback: Callback to remove"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Remove the specified callback. It will no longer receive events about media routing.", "history": "Added in API level 16", "FullName": "public void removeCallback (MediaRouter.Callback cb)"}, "removeUserRoute(android.media.MediaRouter.UserRouteInfo)": {"Returns": [], "Parameters": [["@B_android#media#MediaRouter#UserRouteInfo_E@", "MediaRouter.UserRouteInfo: Definition of the route to remove"]], "Throws": [], "SeeAlso": ["@B_android#media#MediaRouter#addUserRoute_E@"], "Permissions": [], "Description": "Remove an app-specified route for media from the MediaRouter.", "history": "Added in API level 16", "FullName": "public void removeUserRoute (MediaRouter.UserRouteInfo info)"}, "getRouteAt(int)": {"Returns": [["@B_android#media#MediaRouter#RouteInfo_E@", "the route at index"]], "Parameters": [["int", "int: index of the route to return"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the route at the specified index.", "history": "Added in API level 16", "FullName": "public MediaRouter.RouteInfo getRouteAt (int index)"}, "createUserRoute(android.media.MediaRouter.RouteCategory)": {"Returns": [["@B_android#media#MediaRouter#UserRouteInfo_E@", "A new UserRouteInfo for use by the application"]], "Parameters": [["@B_android#media#MediaRouter#RouteCategory_E@", "MediaRouter.RouteCategory: The category the new route will belong to"]], "Throws": [], "SeeAlso": ["@B_android#media#MediaRouter#addUserRoute_E@", "@B_android#media#MediaRouter#removeUserRoute_E@", "@B_android#media#MediaRouter#createRouteCategory_E@"], "Permissions": [], "Description": "Create a new user route that may be modified and registered for use by the application.", "history": "Added in API level 16", "FullName": "public MediaRouter.UserRouteInfo createUserRoute (MediaRouter.RouteCategory category)"}, "selectRoute(int,android.media.MediaRouter.RouteInfo)": {"Returns": [], "Parameters": [["int", "int: type flags indicating which types this route should be used for. The route must support at least a subset."], ["@B_android#media#MediaRouter#RouteInfo_E@", "MediaRouter.RouteInfo: Route to select This value must never be null."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the given route is null"]], "SeeAlso": [], "Permissions": [], "Description": "Select the specified route to use for output of the given media types. As API version 18, this function may be used to select any route. In prior versions, this function could only be used to select user routes and would ignore any attempt to select a system route.", "history": "Added in API level 16", "FullName": "public void selectRoute (int types, MediaRouter.RouteInfo route)"}}, "Inheritance": [], "ClassName": "android.media.MediaRouter", "ClassDesc": "MediaRouter allows applications to control the routing of media channels and streams from the current device to external speakers and destination devices. A MediaRouter is retrieved through @B_android#content#Context#getSystemService_E@ of a @B_android#content#Context#MEDIA_ROUTER_SERVICE_E@. The media router API is not thread-safe; all interactions with it must be done from the main thread of the process."}