{"Functions": {"from(android.content.Context)": {"Returns": [["@B_android#support#v4#app#TaskStackBuilder_E@", "A new TaskStackBuilder"]], "Parameters": [["@B_android#content#Context_E@", "Context: The context that will launch the new task stack or generate a PendingIntent"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "use @B_android#support#v4#app#TaskStackBuilder#create_E@ instead Return a new TaskStackBuilder for launching a fresh task stack consisting of a series of activities.", "history": "added in version 22.0.0", "FullName": "TaskStackBuilder from (Context context)"}, "addParentStack(android.app.Activity)": {"Returns": [["@B_android#support#v4#app#TaskStackBuilder_E@", "This TaskStackBuilder for method chaining"]], "Parameters": [["@B_android#app#Activity_E@", "Activity: All parents of this activity will be added"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Add the activity parent chain as specified by manifest <meta-data> elements to the task stack builder.", "history": "added in version 22.0.0", "FullName": "TaskStackBuilder addParentStack (Activity sourceActivity)"}, "getPendingIntent(int, int)": {"Returns": [["@B_android#app#PendingIntent_E@", "The obtained PendingIntent"]], "Parameters": [["int", "int: Private request code for the sender"], ["int", "int: May be @B_android#app#PendingIntent#FLAG_ONE_SHOT_E@, @B_android#app#PendingIntent#FLAG_NO_CREATE_E@, @B_android#app#PendingIntent#FLAG_CANCEL_CURRENT_E@, @B_android#app#PendingIntent#FLAG_UPDATE_CURRENT_E@, or any of the flags supported by @B_android#content#Intent#fillIn_E@ to control which unspecified parts of the intent that can be supplied when the actual send happens."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtain a @B_android#app#PendingIntent_E@ for launching the task constructed by this builder so far.", "history": "added in version 22.0.0", "FullName": "PendingIntent getPendingIntent (int requestCode, int flags)"}, "addParentStack(android.content.ComponentName)": {"Returns": [["@B_android#support#v4#app#TaskStackBuilder_E@", "This TaskStackBuilder for method chaining"]], "Parameters": [["@B_android#content#ComponentName_E@", "ComponentName: Must specify an Activity component. All parents of this activity will be added"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Add the activity parent chain as specified by manifest <meta-data> elements to the task stack builder.", "history": "added in version 22.0.0", "FullName": "TaskStackBuilder addParentStack (ComponentName sourceActivityName)"}, "startActivities()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Start the task stack constructed by this builder. The Context used to obtain this builder must be an Activity. On devices that do not support API level 11 or higher the topmost activity will be started as a new task. On devices that do support API level 11 or higher the new task stack will be created in its entirety.", "history": "added in version 22.0.0", "FullName": "void startActivities ()"}, "create(android.content.Context)": {"Returns": [["@B_android#support#v4#app#TaskStackBuilder_E@", "A new TaskStackBuilder"]], "Parameters": [["@B_android#content#Context_E@", "Context: The context that will launch the new task stack or generate a PendingIntent"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return a new TaskStackBuilder for launching a fresh task stack consisting of a series of activities.", "history": "added in version 22.0.0", "FullName": "TaskStackBuilder create (Context context)"}, "getIntent(int)": {"Returns": [["@B_android#content#Intent_E@", "the intent at position index"]], "Parameters": [["int", "int: Index from 0-getIntentCount()"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Renamed to editIntentAt to better reflect intended usage Get the intent at the specified index. Useful if you need to modify the flags or extras of an intent that was previously added, for example with @B_android#support#v4#app#TaskStackBuilder#addParentStack_E@.", "history": "added in version 22.0.0", "FullName": "Intent getIntent (int index)"}, "getPendingIntent(int, int, android.os.Bundle)": {"Returns": [["@B_android#app#PendingIntent_E@", "The obtained PendingIntent"]], "Parameters": [["int", "int: Private request code for the sender"], ["int", "int: May be @B_android#app#PendingIntent#FLAG_ONE_SHOT_E@, @B_android#app#PendingIntent#FLAG_NO_CREATE_E@, @B_android#app#PendingIntent#FLAG_CANCEL_CURRENT_E@, @B_android#app#PendingIntent#FLAG_UPDATE_CURRENT_E@, or any of the flags supported by @B_android#content#Intent#fillIn_E@ to control which unspecified parts of the intent that can be supplied when the actual send happens."], ["@B_android#os#Bundle_E@", "Bundle: Additional options for how the Activity should be started. See @B_android#content#Context#startActivity_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Obtain a @B_android#app#PendingIntent_E@ for launching the task constructed by this builder so far.", "history": "added in version 22.0.0", "FullName": "PendingIntent getPendingIntent (int requestCode, int flags, Bundle options)"}, "addNextIntent(android.content.Intent)": {"Returns": [["@B_android#support#v4#app#TaskStackBuilder_E@", "This TaskStackBuilder for method chaining"]], "Parameters": [["@B_android#content#Intent_E@", "Intent: Intent for the next Activity in the synthesized task stack"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Add a new Intent to the task stack. The most recently added Intent will invoke the Activity at the top of the final task stack.", "history": "added in version 22.0.0", "FullName": "TaskStackBuilder addNextIntent (Intent nextIntent)"}, "getIntents()": {"Returns": [["@B_android#content#Intent_E@", "An array containing the intents added to this builder."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return an array containing the intents added to this builder. The intent at the root of the task stack will appear as the first item in the array and the intent at the top of the stack will appear as the last item.", "history": "added in version 22.0.0", "FullName": "Intent[] getIntents ()"}, "editIntentAt(int)": {"Returns": [["@B_android#content#Intent_E@", "the intent at position index"]], "Parameters": [["int", "int: Index from 0-getIntentCount()"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the intent at the specified index for modification. Useful if you need to modify the flags or extras of an intent that was previously added, for example with @B_android#support#v4#app#TaskStackBuilder#addParentStack_E@.", "history": "added in version 22.0.0", "FullName": "Intent editIntentAt (int index)"}, "startActivities(android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: Additional options for how the Activity should be started. See @B_android#content#Context#startActivity_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Start the task stack constructed by this builder. The Context used to obtain this builder must be an Activity. On devices that do not support API level 11 or higher the topmost activity will be started as a new task. On devices that do support API level 11 or higher the new task stack will be created in its entirety.", "history": "added in version 22.0.0", "FullName": "void startActivities (Bundle options)"}, "iterator()": {"Returns": [["@B_java#util#Iterator_E@", "an Iterator."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use editIntentAt instead Returns an iterator over elements of type T.", "history": "added in version 22.0.0", "FullName": "Iterator<Intent> iterator ()"}, "getIntentCount()": {"Returns": [["int", "the number of intents added so far."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 22.0.0", "FullName": "int getIntentCount ()"}, "addParentStack(java.lang.Class<?>)": {"Returns": [["@B_android#support#v4#app#TaskStackBuilder_E@", "This TaskStackBuilder for method chaining"]], "Parameters": [["@B_java#lang#Class_E@", "Class: All parents of this activity will be added"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Add the activity parent chain as specified by manifest <meta-data> elements to the task stack builder.", "history": "added in version 22.0.0", "FullName": "TaskStackBuilder addParentStack (Class<?> sourceActivityClass)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v4.app.TaskStackBuilder", "ClassDesc": "Utility class for constructing synthetic back stacks for cross-task navigation on Android 3.0 and newer. In API level 11 (Android 3.0/Honeycomb) the recommended conventions for app navigation using the back key changed. The back key's behavior is local to the current task and does not capture navigation across different tasks. Navigating across tasks and easily reaching the previous task is accomplished through the \"recents\" UI, accessible through the software-provided Recents key on the navigation or system bar. On devices with the older hardware button configuration the recents UI can be accessed with a long press on the Home key. When crossing from one task stack to another post-Android 3.0, the application should synthesize a back stack/history for the new task so that the user may navigate out of the new task and back to the Launcher by repeated presses of the back key. Back key presses should not navigate across task stacks. TaskStackBuilder provides a backward-compatible way to obey the correct conventions around cross-task navigation on the device's version of the platform. On devices running Android 3.0 or newer, calls to the @B_android#support#v4#app#TaskStackBuilder#startActivities_E@ method or sending the https:##developer#android#com@B_android#app#PendingIntent_E@ generated by @B_android#support#v4#app#TaskStackBuilder#getPendingIntent_E@ will construct the synthetic back stack as prescribed. On devices running older versions of the platform, these same calls will invoke the topmost activity in the supplied stack, ignoring the rest of the synthetic stack and allowing the back key to navigate back to the previous task."}