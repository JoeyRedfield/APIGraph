{"Functions": {"getSnapshotFromBundle(android.os.Bundle)": {"Returns": [["", "A @B_com#google#android#gms#games#snapshot#SnapshotMetadata_E@ object that was provided for action."]], "Parameters": [["Bundle", "The @B_android#os#Bundle_E@ to parse for a @B_com#google#android#gms#games#snapshot#Snapshot_E@ object."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "This method takes a @B_android#os#Bundle_E@ object and extracts the @B_com#google#android#gms#games#snapshot#Snapshot_E@ provided. If the @B_android#os#Bundle_E@ is invalid or does not contain the correct data, this method returns null.", "history": "", "FullName": "public abstract SnapshotMetadata getSnapshotFromBundle (Bundle extras)"}, "resolveConflict(com.google.android.gms.common.api.GoogleApiClient, java.lang.String, java.lang.String, com.google.android.gms.games.snapshot.SnapshotMetadataChange, com.google.android.gms.games.snapshot.SnapshotContents)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "The ID of the conflict to resolve. Must come from @B_com#google#android#gms#games#snapshot#Snapshots#OpenSnapshotResult#getConflictId_E@."], ["String", "The ID of the snapshot to resolve the conflict for."], ["@B_com#google#android#gms#games#snapshot#SnapshotMetadataChange_E@", "The set of changes to apply to the metadata for the snapshot."], ["@B_com#google#android#gms#games#snapshot#SnapshotContents_E@", "The @B_com#google#android#gms#games#snapshot#SnapshotContents_E@ to replace the snapshot data with."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Resolve a conflict using the provided data. This will replace the data on the server with the specified metadata changes and contents. Note that it is possible for this operation to result in a conflict itself, in which case resolution should be repeated. Values which are not included in the metadata change will be resolved to the version currently on the server. Note that the total size of contents may not exceed the size provided by @B_com#google#android#gms#games#snapshot#Snapshots#getMaxDataSize_E@. Calling this method with a snapshot that has already been committed or that was not opened via @B_com#google#android#gms#games#snapshot#Snapshots#open_E@ will throw an exception. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@ and @B_com#google#android#gms#drive#Drive#SCOPE_APPFOLDER_E@.", "history": "", "FullName": "public abstract PendingResult<Snapshots.OpenSnapshotResult> resolveConflict (GoogleApiClient apiClient, String conflictId, String snapshotId, SnapshotMetadataChange metadataChange, SnapshotContents snapshotContents)"}, "open(com.google.android.gms.common.api.GoogleApiClient, java.lang.String, boolean)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "The name of the snapshot file to open. Must be between 1 and 100 non-URL-reserved characters (a-z, A-Z, 0-9, or the symbols \"-\", \".\", \"_\", or \"~\")."], ["boolean", "If true, the snapshot will be created if one cannot be found."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Open a snapshot with the given name. If createIfNotFound is set to true, the specified snapshot will be created if it does not already exist. This will open the snapshot using @B_com#google#android#gms#games#snapshot#Snapshots#RESOLUTION_POLICY_MANUAL_E@ as a conflict policy. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@ and @B_com#google#android#gms#drive#Drive#SCOPE_APPFOLDER_E@.", "history": "", "FullName": "public abstract PendingResult<Snapshots.OpenSnapshotResult> open (GoogleApiClient apiClient, String fileName, boolean createIfNotFound)"}, "load(com.google.android.gms.common.api.GoogleApiClient, boolean)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["boolean", "If true, this call will clear any locally cached data and attempt to fetch the latest data from the server. This would commonly be used for something like a user-initiated refresh. Normally, this should be set to false to gain advantages of data caching."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Asynchronously load the snapshot data for the currently signed-in player. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@ and @B_com#google#android#gms#drive#Drive#SCOPE_APPFOLDER_E@.", "history": "", "FullName": "public abstract PendingResult<Snapshots.LoadSnapshotsResult> load (GoogleApiClient apiClient, boolean forceReload)"}, "open(com.google.android.gms.common.api.GoogleApiClient, java.lang.String, boolean, int)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "The name of the snapshot file to open. Must be between 1 and 100 non-URL-reserved characters (a-z, A-Z, 0-9, or the symbols \"-\", \".\", \"_\", or \"~\")."], ["boolean", "If true, the snapshot will be created if one cannot be found."], ["int", "The conflict resolution policy to use for this snapshot."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Open a snapshot with the given name. If createIfNotFound is set to true, the specified snapshot will be created if it does not already exist. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@ and @B_com#google#android#gms#drive#Drive#SCOPE_APPFOLDER_E@.", "history": "", "FullName": "public abstract PendingResult<Snapshots.OpenSnapshotResult> open (GoogleApiClient apiClient, String fileName, boolean createIfNotFound, int conflictPolicy)"}, "commitAndClose(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.games.snapshot.Snapshot, com.google.android.gms.games.snapshot.SnapshotMetadataChange)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["@B_com#google#android#gms#games#snapshot#Snapshot_E@", "The snapshot to commit the data for."], ["@B_com#google#android#gms#games#snapshot#SnapshotMetadataChange_E@", "The set of changes to apply to the metadata for the snapshot. Use @B_com#google#android#gms#games#snapshot#SnapshotMetadataChange#EMPTY_CHANGE_E@ to preserve the existing metadata."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Commit any modifications made to the snapshot. This will cause the changes to be synced to the server in the background. Calling this method with a snapshot that has already been committed or that was not opened via @B_com#google#android#gms#games#snapshot#Snapshots#open_E@ will throw an exception. Note that the total size of the contents of snapshot may not exceed the size provided by @B_com#google#android#gms#games#snapshot#Snapshots#getMaxDataSize_E@. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@ and @B_com#google#android#gms#drive#Drive#SCOPE_APPFOLDER_E@.", "history": "", "FullName": "public abstract PendingResult<Snapshots.CommitSnapshotResult> commitAndClose (GoogleApiClient apiClient, Snapshot snapshot, SnapshotMetadataChange metadataChange)"}, "delete(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.games.snapshot.SnapshotMetadata)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to check the status of the operation."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["@B_com#google#android#gms#games#snapshot#SnapshotMetadata_E@", "The metadata of the snapshot to delete."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Delete the specified snapshot. This will delete the data of the snapshot locally and on the server. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@ and @B_com#google#android#gms#drive#Drive#SCOPE_APPFOLDER_E@.", "history": "", "FullName": "public abstract PendingResult<Snapshots.DeleteSnapshotResult> delete (GoogleApiClient apiClient, SnapshotMetadata metadata)"}, "getMaxDataSize(com.google.android.gms.common.api.GoogleApiClient)": {"Returns": [["", "The maximum data size per snapshot in bytes."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the maximum data size per snapshot in bytes. Guaranteed to be at least 3 MB. May increase in the future. If the service cannot be reached for some reason, this will return -1. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@ and @B_com#google#android#gms#drive#Drive#SCOPE_APPFOLDER_E@.", "history": "", "FullName": "public abstract int getMaxDataSize (GoogleApiClient apiClient)"}, "resolveConflict(com.google.android.gms.common.api.GoogleApiClient, java.lang.String, com.google.android.gms.games.snapshot.Snapshot)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "The ID of the conflict to resolve. Must come from @B_com#google#android#gms#games#snapshot#Snapshots#OpenSnapshotResult#getConflictId_E@."], ["@B_com#google#android#gms#games#snapshot#Snapshot_E@", "The snapshot to use to resolve the conflict."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Resolve a conflict using the data from the provided snapshot. This will replace the data on the server with the specified snapshot. Note that it is possible for this operation to result in a conflict itself, in which case resolution should be repeated. Note that the total size of the contents of snapshot may not exceed the size provided by @B_com#google#android#gms#games#snapshot#Snapshots#getMaxDataSize_E@. Calling this method with a snapshot that has already been committed or that was not opened via @B_com#google#android#gms#games#snapshot#Snapshots#open_E@ will throw an exception. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@ and @B_com#google#android#gms#drive#Drive#SCOPE_APPFOLDER_E@.", "history": "", "FullName": "public abstract PendingResult<Snapshots.OpenSnapshotResult> resolveConflict (GoogleApiClient apiClient, String conflictId, Snapshot snapshot)"}, "discardAndClose(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.games.snapshot.Snapshot)": {"Returns": [], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["@B_com#google#android#gms#games#snapshot#Snapshot_E@", "The snapshot to discard the data for."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Discard the contents of the snapshot and close the contents. This will discard all changes made to the file, and close the snapshot to future changes until it is re-opened. The file will not be modified on the server. Calling this method with a snapshot that has already been committed or that was not opened via @B_com#google#android#gms#games#snapshot#Snapshots#open_E@ will throw an exception. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@ and @B_com#google#android#gms#drive#Drive#SCOPE_APPFOLDER_E@.", "history": "", "FullName": "public abstract void discardAndClose (GoogleApiClient apiClient, Snapshot snapshot)"}, "open(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.games.snapshot.SnapshotMetadata, int)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["@B_com#google#android#gms#games#snapshot#SnapshotMetadata_E@", "The metadata of the existing snapshot to load."], ["int", "The conflict resolution policy to use for this snapshot."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Open a snapshot with the given metadata (usually returned from @B_com#google#android#gms#games#snapshot#Snapshots#load_E@. To succeed, the snapshot must exist; i.e. this call will fail if the snapshot was deleted between the load and open calls. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@ and @B_com#google#android#gms#drive#Drive#SCOPE_APPFOLDER_E@.", "history": "", "FullName": "public abstract PendingResult<Snapshots.OpenSnapshotResult> open (GoogleApiClient apiClient, SnapshotMetadata metadata, int conflictPolicy)"}, "open(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.games.snapshot.SnapshotMetadata)": {"Returns": [["", "@B_com#google#android#gms#common#api#PendingResult_E@ to access the data when available."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["@B_com#google#android#gms#games#snapshot#SnapshotMetadata_E@", "The metadata of the existing snapshot to load."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Open a snapshot with the given metadata (usually returned from @B_com#google#android#gms#games#snapshot#Snapshots#load_E@. To succeed, the snapshot must exist; i.e. this call will fail if the snapshot was deleted between the load and open calls. This will open the snapshot using @B_com#google#android#gms#games#snapshot#Snapshots#RESOLUTION_POLICY_MANUAL_E@ as a conflict policy. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@ and @B_com#google#android#gms#drive#Drive#SCOPE_APPFOLDER_E@.", "history": "", "FullName": "public abstract PendingResult<Snapshots.OpenSnapshotResult> open (GoogleApiClient apiClient, SnapshotMetadata metadata)"}, "getSelectSnapshotIntent(com.google.android.gms.common.api.GoogleApiClient, java.lang.String, boolean, boolean, int)": {"Returns": [["", "An @B_android#content#Intent_E@ that can be started to view the select snapshot UI."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."], ["String", "The title to display in the action bar of the returned Activity."], ["boolean", "Whether or not to display a \"create new snapshot\" option in the selection UI."], ["boolean", "Whether or not to provide a delete overflow menu option for each snapshot in the selection UI."], ["int", "The maximum number of snapshots to display in the UI. Use @B_com#google#android#gms#games#snapshot#Snapshots#DISPLAY_LIMIT_NONE_E@ to display all snapshots."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns an intent that will let the user select a snapshot. Note that this must be invoked using @B_android#app#Activity#startActivityForResult_E@ so that the identity of the calling package can be established. If the user canceled without selecting a snapshot, the result will be @B_android#app#Activity#RESULT_CANCELED_E@. If the user selected a snapshot from the list, the result will be @B_android#app#Activity#RESULT_OK_E@ and the data intent will contain the selected Snapshot as a parcelable object in @B_com#google#android#gms#games#snapshot#Snapshots#EXTRA_SNAPSHOT_METADATA_E@. If the user pressed the add button, the result will be @B_android#app#Activity#RESULT_OK_E@ and the data intent will contain a true boolean value in @B_com#google#android#gms#games#snapshot#Snapshots#EXTRA_SNAPSHOT_NEW_E@. Note that if you have modified an open snapshot, the changes will not appear in this UI until you call @B_com#google#android#gms#games#snapshot#Snapshots#commitAndClose_E@ on the snapshot. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@ and @B_com#google#android#gms#drive#Drive#SCOPE_APPFOLDER_E@.", "history": "", "FullName": "public abstract Intent getSelectSnapshotIntent (GoogleApiClient apiClient, String title, boolean allowAddButton, boolean allowDelete, int maxSnapshots)"}, "getMaxCoverImageSize(com.google.android.gms.common.api.GoogleApiClient)": {"Returns": [["", "The maximum data size per snapshot cover image in bytes."]], "Parameters": [["@B_com#google#android#gms#common#api#GoogleApiClient_E@", "The @B_com#google#android#gms#common#api#GoogleApiClient_E@ to service the call."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the maximum data size per snapshot cover image in bytes. Guaranteed to be at least 800 KB. May increase in the future. If the service cannot be reached for some reason, this will return -1. Required API: @B_com#google#android#gms#games#Games#API_E@ Required Scopes: @B_com#google#android#gms#games#Games#SCOPE_GAMES_E@ and @B_com#google#android#gms#drive#Drive#SCOPE_APPFOLDER_E@.", "history": "", "FullName": "public abstract int getMaxCoverImageSize (GoogleApiClient apiClient)"}}, "Inheritance": [], "ClassName": "com.google.android.gms.games.snapshot.Snapshots", "ClassDesc": "The Snapshots API allows you to store data representing the player's game progress on Google's servers. Your app can use this data to restore saved state from a previous gaming session and provide a visual indicator of progression to the player. For more details, see the"}