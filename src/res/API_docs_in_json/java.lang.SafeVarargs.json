{"Functions": {}, "Inheritance": [], "ClassName": "java.lang.SafeVarargs", "ClassDesc": "A programmer assertion that the body of the annotated method or constructor does not perform potentially unsafe operations on its varargs parameter. Applying this annotation to a method or constructor suppresses unchecked warnings about a In addition to the usage restrictions imposed by its @B_java#lang#annotation#Target_E@ meta-annotation, compilers are required to implement additional usage restrictions on this annotation type; it is a compile-time error if a method or constructor declaration is annotated with a @SafeVarargs annotation, and either: the declaration is a fixed arity method or constructor the declaration is a variable arity method that is neither static nor final. Compilers are encouraged to issue warnings when this annotation type is applied to a method or constructor declaration where: The variable arity parameter has a reifiable element type, which includes primitive types, Object, and String. (The unchecked warnings this annotation type suppresses already do not occur for a reifiable element type.) The body of the method or constructor declaration performs potentially unsafe operations, such as an assignment to an element of the variable arity parameter's array that generates an unchecked warning. Some unsafe operations do not trigger an unchecked warning. For example, the aliasing in ClassCastException at runtime. Future versions of the platform may mandate compiler errors for such unsafe operations."}