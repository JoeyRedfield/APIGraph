{"Functions": {"isForwardCheckingSupported()": {"Returns": [["boolean", "true if forward checking is supported, false otherwise"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Indicates if forward checking is supported. Forward checking refers to the ability of the CertPathChecker to perform its checks when certificates are presented to the check method in the forward direction (from target to trust anchor).", "history": "Added in API level 24", "FullName": "public abstract boolean isForwardCheckingSupported ()"}, "init(boolean)": {"Returns": [], "Parameters": [["boolean", "boolean: the order that certificates are presented to the check method. If true, certificates are presented from target to trust anchor (forward); if false, from trust anchor to target (reverse)."]], "Throws": [["@B_java#security#cert#CertPathValidatorException_E@", "if this CertPathChecker is unable to check certificates in the specified order"]], "SeeAlso": [], "Permissions": [], "Description": "Initializes the internal state of this CertPathChecker. The forward flag specifies the order that certificates will be passed to the @B_java#security#cert#CertPathChecker#check_E@ method (forward or reverse).", "history": "Added in API level 24", "FullName": "public abstract void init (boolean forward)"}, "check(java.security.cert.Certificate)": {"Returns": [], "Parameters": [["@B_java#security#cert#Certificate_E@", "Certificate: the Certificate to be checked"]], "Throws": [["@B_java#security#cert#CertPathValidatorException_E@", "if the specified certificate does not pass the check"]], "SeeAlso": [], "Permissions": [], "Description": "Performs the check(s) on the specified certificate using its internal state. The certificates are presented in the order specified by the init method.", "history": "Added in API level 24", "FullName": "public abstract void check (Certificate cert)"}}, "Inheritance": [], "ClassName": "java.security.cert.CertPathChecker", "ClassDesc": "Performs one or more checks on each Certificate of a CertPath. A CertPathChecker implementation is typically created to extend a certification path validation algorithm. For example, an implementation may check for and process a critical private extension of each certificate in a certification path."}