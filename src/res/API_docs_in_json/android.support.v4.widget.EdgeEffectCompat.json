{"Functions": {"finish()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#widget#EdgeEffect#finish_E@ directly. Immediately finish the current animation. After this call @B_android#support#v4#widget#EdgeEffectCompat#isFinished_E@ will return true.", "history": "added in version 22.0.0", "FullName": "void finish ()"}, "onPull(float)": {"Returns": [["boolean", "true if the host view should call invalidate, false if it should not."]], "Parameters": [["float", "float: Change in distance since the last call. Values may be 0 (no change) to 1.f (full length of the view) or negative values to express change back toward the edge reached to initiate the effect."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#support#v4#widget#EdgeEffectCompat#onPull_E@. A view should call this when content is pulled away from an edge by the user. This will update the state of the current visual effect and its associated animation. The host view should always @B_android#view#View#invalidate_E@ if this method returns true and draw the results accordingly.", "history": "added in version 22.0.0", "FullName": "boolean onPull (float deltaDistance)"}, "draw(android.graphics.Canvas)": {"Returns": [["boolean", "true if drawing should continue beyond this frame to continue the animation"]], "Parameters": [["@B_android#graphics#Canvas_E@", "Canvas: Canvas to draw into"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#widget#EdgeEffect#draw_E@ directly. Draw into the provided canvas. Assumes that the canvas has been rotated accordingly and the size has been set. The effect will be drawn the full width of X=0 to X=width, beginning from Y=0 and extending to some factor < 1.f of height.", "history": "added in version 22.0.0", "FullName": "boolean draw (Canvas canvas)"}, "onPull(android.widget.EdgeEffect, float, float)": {"Returns": [], "Parameters": [["@B_android#widget#EdgeEffect_E@", "EdgeEffect: The EdgeEffect that is attached to the view that is getting pulled away from an edge by the user."], ["float", "float: Change in distance since the last call. Values may be 0 (no change) to 1.f (full length of the view) or negative values to express change back toward the edge reached to initiate the effect."], ["float", "float: The displacement from the starting side of the effect of the point initiating the pull. In the case of touch this is the finger position. Values may be from 0-1."]], "Throws": [], "SeeAlso": ["_E@"], "Permissions": [], "Description": "A view should call this when content is pulled away from an edge by the user. This will update the state of the current visual effect and its associated animation. The host view should always @B_android#view#View#invalidate_E@ after call this method and draw the results accordingly.", "history": "added in version 26.0.0-beta1", "FullName": "void onPull (EdgeEffect edgeEffect, float deltaDistance, float displacement)"}, "isFinished()": {"Returns": [["boolean", "true if animation is finished, false if drawing should continue on the next frame."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#widget#EdgeEffect#isFinished_E@ directly. Reports if this EdgeEffectCompat's animation is finished. If this method returns false after a call to @B_android#support#v4#widget#EdgeEffectCompat#draw_E@ the host widget should schedule another drawing pass to continue the animation.", "history": "added in version 22.0.0", "FullName": "boolean isFinished ()"}, "onRelease()": {"Returns": [["boolean", "true if the host view should invalidate, false if it should not."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#widget#EdgeEffect#onRelease_E@ directly. Call when the object is released after being pulled. This will begin the \"decay\" phase of the effect. After calling this method the host view should @B_android#view#View#invalidate_E@ if this method returns true and thereby draw the results accordingly.", "history": "added in version 22.0.0", "FullName": "boolean onRelease ()"}, "onPull(float, float)": {"Returns": [["boolean", "true if the host view should call invalidate, false if it should not."]], "Parameters": [["float", "float: Change in distance since the last call. Values may be 0 (no change) to 1.f (full length of the view) or negative values to express change back toward the edge reached to initiate the effect."], ["float", "float: The displacement from the starting side of the effect of the point initiating the pull. In the case of touch this is the finger position. Values may be from 0-1."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#widget#EdgeEffect#onPull_E@ directly. A view should call this when content is pulled away from an edge by the user. This will update the state of the current visual effect and its associated animation. The host view should always @B_android#view#View#invalidate_E@ if this method returns true and draw the results accordingly. Views using @B_android#widget#EdgeEffect_E@ should favor @B_android#widget#EdgeEffect#onPull_E@ when the displacement of the pull point is known.", "history": "added in version 22.1.0", "FullName": "boolean onPull (float deltaDistance, float displacement)"}, "EdgeEffectCompat(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context: Context to use for theming the effect"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#widget#EdgeEffect_E@ constructor directly. Construct a new EdgeEffect themed using the given context. Note: On platform versions that do not support EdgeEffect, all operations on the newly constructed object will be mocked/no-ops.", "history": "added in version 22.0.0", "FullName": "EdgeEffectCompat (Context context)"}, "onAbsorb(int)": {"Returns": [["boolean", "true if the host view should invalidate, false if it should not."]], "Parameters": [["int", "int: Velocity at impact in pixels per second."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#widget#EdgeEffect#onAbsorb_E@ directly. Call when the effect absorbs an impact at the given velocity. Used when a fling reaches the scroll boundary. When using a @B_android#widget#Scroller_E@ or @B_android#widget#OverScroller_E@, the method getCurrVelocity will provide a reasonable approximation to use here.", "history": "added in version 22.0.0", "FullName": "boolean onAbsorb (int velocity)"}, "setSize(int, int)": {"Returns": [], "Parameters": [["int", "int: Effect width in pixels"], ["int", "int: Effect height in pixels"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Use @B_android#widget#EdgeEffect#setSize_E@ directly. Set the size of this edge effect in pixels.", "history": "added in version 22.0.0", "FullName": "void setSize (int width, int height)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.v4.widget.EdgeEffectCompat", "ClassDesc": "Helper for accessing https:##developer#android#com@B_android#widget#EdgeEffect_E@. This class is used to access https:##developer#android#com@B_android#widget#EdgeEffect_E@ on platform versions that support it. When running on older platforms it will result in no-ops. It should be used by views that wish to use the standard Android visual effects at the edges of scrolling containers."}