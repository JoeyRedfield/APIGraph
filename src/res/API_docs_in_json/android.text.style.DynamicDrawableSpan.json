{"Functions": {"DynamicDrawableSpan(int)": {"Returns": [], "Parameters": [["int", "int: one of @B_android#text#style#DynamicDrawableSpan#ALIGN_BOTTOM_E@, @B_android#text#style#DynamicDrawableSpan#ALIGN_BASELINE_E@ or @B_android#text#style#DynamicDrawableSpan#ALIGN_CENTER_E@ Value is @B_android#text#style#DynamicDrawableSpan#ALIGN_BOTTOM_E@, @B_android#text#style#DynamicDrawableSpan#ALIGN_BASELINE_E@, or @B_android#text#style#DynamicDrawableSpan#ALIGN_CENTER_E@"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a @B_android#text#style#DynamicDrawableSpan_E@ based on a vertical alignment.\\ *", "history": "Added in API level 3", "FullName": "protected DynamicDrawableSpan (int verticalAlignment)"}, "DynamicDrawableSpan()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a @B_android#text#style#DynamicDrawableSpan_E@. The default vertical alignment is @B_android#text#style#DynamicDrawableSpan#ALIGN_BOTTOM_E@", "history": "Added in API level 1", "FullName": "public DynamicDrawableSpan ()"}, "getDrawable()": {"Returns": [["@B_android#graphics#drawable#Drawable_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Your subclass must implement this method to provide the bitmap to be drawn. The dimensions of the bitmap must be the same from each call to the next.", "history": "Added in API level 1", "FullName": "public abstract Drawable getDrawable ()"}, "getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint.FontMetricsInt)": {"Returns": [["int", "Width of the span."]], "Parameters": [["@B_android#graphics#Paint_E@", "Paint: This value must never be null."], ["@B_java#lang#CharSequence_E@", "CharSequence: Current text."], ["int", "int: Value is 0 or greater"], ["int", "int: Value is 0 or greater"], ["@B_android#graphics#Paint#FontMetricsInt_E@", "Paint.FontMetricsInt: This value may be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the width of the span. Extending classes can set the height of the span by updating attributes of @B_android#graphics#Paint#FontMetricsInt_E@. If the span covers the whole text, and the height is not set, @B_android#text#style#ReplacementSpan#draw_E@ will not be called for the span.", "history": "Added in API level 1", "FullName": "public int getSize (Paint paint, CharSequence text, int start, int end, Paint.FontMetricsInt fm)"}, "draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)": {"Returns": [], "Parameters": [["@B_android#graphics#Canvas_E@", "Canvas: This value must never be null."], ["@B_java#lang#CharSequence_E@", "CharSequence: Current text."], ["int", "int: Value is 0 or greater"], ["int", "int: Value is 0 or greater"], ["float", "float: Edge of the replacement closest to the leading margin."], ["int", "int: Top of the line."], ["int", "int: Baseline."], ["int", "int: Bottom of the line."], ["@B_android#graphics#Paint_E@", "Paint: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Draws the span into the canvas.", "history": "Added in API level 1", "FullName": "public void draw (Canvas canvas, CharSequence text, int start, int end, float x, int top, int y, int bottom, Paint paint)"}, "getVerticalAlignment()": {"Returns": [["int", "Value is @B_android#text#style#DynamicDrawableSpan#ALIGN_BOTTOM_E@, @B_android#text#style#DynamicDrawableSpan#ALIGN_BASELINE_E@, or @B_android#text#style#DynamicDrawableSpan#ALIGN_CENTER_E@"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the vertical alignment of this span, one of @B_android#text#style#DynamicDrawableSpan#ALIGN_BOTTOM_E@, @B_android#text#style#DynamicDrawableSpan#ALIGN_BASELINE_E@ or @B_android#text#style#DynamicDrawableSpan#ALIGN_CENTER_E@.", "history": "Added in API level 3", "FullName": "public int getVerticalAlignment ()"}}, "Inheritance": ["@B_android#text#style#CharacterStyle_E@", "@B_android#text#style#MetricAffectingSpan_E@", "@B_android#text#style#ReplacementSpan_E@"], "ClassName": "android.text.style.DynamicDrawableSpan", "ClassDesc": "Span that replaces the text it's attached to with a @B_android#graphics#drawable#Drawable_E@ that can be aligned with the bottom or with the baseline of the surrounding text. For an implementation that constructs the drawable from various sources (Bitmap, Drawable, resource id or Uri) use @B_android#text#style#ImageSpan_E@. A simple implementation of DynamicDrawableSpan that uses drawables from resources looks like this:"}