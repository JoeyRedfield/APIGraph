{"Functions": {"getAttribHandlers()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "protected Collection<CookieAttributeHandler> getAttribHandlers ()"}, "findAttribHandler(java.lang.String)": {"Returns": [["", "an attribute handler or null"]], "Parameters": [["@B_java#lang#String_E@", "attribute name. e.g. Domain, Path, etc."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Finds an attribute handler @B_org#apache#http#cookie#CookieAttributeHandler_E@ for the given attribute. Returns", "history": "Added in API level 1", "FullName": "protected CookieAttributeHandler findAttribHandler (String name)"}, "getAttribHandler(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "attribute name. e.g. Domain, Path, etc."]], "Throws": [["@B_java#lang#IllegalStateException_E@", "if handler not found for the specified attribute."]], "SeeAlso": [], "Permissions": [], "Description": "Gets attribute handler @B_org#apache#http#cookie#CookieAttributeHandler_E@ for the given attribute.", "history": "Added in API level 1", "FullName": "protected CookieAttributeHandler getAttribHandler (String name)"}, "registerAttribHandler(java.lang.String, org.apache.http.cookie.CookieAttributeHandler)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public void registerAttribHandler (String name, CookieAttributeHandler handler)"}, "AbstractCookieSpec()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Default constructor", "history": "Added in API level 1", "FullName": "public AbstractCookieSpec ()"}}, "Inheritance": [], "ClassName": "org.apache.http.impl.cookie.AbstractCookieSpec", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Abstract cookie specification which can delegate the job of parsing, validation or matching cookie attributes to a number of arbitrary @B_org#apache#http#cookie#CookieAttributeHandler_E@s."}