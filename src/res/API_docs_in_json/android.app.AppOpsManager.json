{"Functions": {"unsafeCheckOp(java.lang.String,int,java.lang.String)": {"Returns": [["int", "Returns @B_android#app#AppOpsManager#MODE_ALLOWED_E@ if the operation is allowed, or @B_android#app#AppOpsManager#MODE_IGNORED_E@ if it is not allowed and should be silently ignored (without causing the app to crash)."]], "Parameters": [["@B_java#lang#String_E@", "String: The operation to check. One of the OPSTR_* constants. This value must never be null."], ["int", "int: The user id of the application attempting to perform the operation."], ["@B_java#lang#String_E@", "String: The name of the application attempting to perform the operation. This value must never be null."]], "Throws": [["@B_java#lang#SecurityException_E@", "If the app has been configured to crash on this op."]], "SeeAlso": [], "Permissions": [], "Description": "Do a quick check for whether an application might be able to perform an operation. This is not a security check; you must use @B_android#app#AppOpsManager#noteOp_E@ or @B_android#app#AppOpsManager#startOp_E@ for your actual security checks, which also ensure that the given uid and package name are consistent. This function can just be used for a quick check to see if an operation has been disabled for the application, as an early reject of some work. This does not modify the time stamp or other data about the operation. Important things this will not do (which you need to ultimate use @B_android#app#AppOpsManager#noteOp_E@ or @B_android#app#AppOpsManager#startOp_E@ to cover): Verifying the uid and package are consistent, so callers can't spoof their identity. Taking into account the current foreground/background state of the app; apps whose mode varies by this state will always be reported as @B_android#app#AppOpsManager#MODE_ALLOWED_E@.", "history": "Added in API level 29", "FullName": "public int unsafeCheckOp (String op, int uid, String packageName)"}, "startOpNoThrow(java.lang.String,int,java.lang.String)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."], ["int", "int no parameter comment"], ["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Like @B_android#app#AppOpsManager#startOp_E@ but instead of throwing a @B_java#lang#SecurityException_E@ it returns @B_android#app#AppOpsManager#MODE_ERRORED_E@.", "history": "Added in API level 19", "FullName": "public int startOpNoThrow (String op, int uid, String packageName)"}, "finishOp(java.lang.String, int, java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["int", "int no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Report that an application is no longer performing an operation that had previously been started with @B_android#app#AppOpsManager#startOp_E@. There is no validation of input or result; the parameters supplied here must be the exact same ones previously passed in when starting the operation.", "history": "added in API level 19", "FullName": "public void finishOp (String op, int uid, String packageName)"}, "unsafeCheckOpRaw(java.lang.String,int,java.lang.String)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."], ["int", "int no parameter comment"], ["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Like @B_android#app#AppOpsManager#checkOp_E@ but returns the raw mode associated with the op. Does not throw a security exception, does not translate @B_android#app#AppOpsManager#MODE_FOREGROUND_E@.", "history": "Added in API level 29", "FullName": "public int unsafeCheckOpRaw (String op, int uid, String packageName)"}, "startOp(java.lang.String, int, java.lang.String)": {"Returns": [["int", "Returns @B_android#app#AppOpsManager#MODE_ALLOWED_E@ if the operation is allowed, or @B_android#app#AppOpsManager#MODE_IGNORED_E@ if it is not allowed and should be silently ignored (without causing the app to crash)."]], "Parameters": [["@B_java#lang#String_E@", "String: The operation to start. One of the OPSTR_* constants."], ["int", "int: The user id of the application attempting to perform the operation."], ["@B_java#lang#String_E@", "String: The name of the application attempting to perform the operation."]], "Throws": [["@B_java#lang#SecurityException_E@", "If the app has been configured to crash on this op."]], "SeeAlso": [], "Permissions": [], "Description": "Report that an application has started executing a long-running operation. Note that you must pass in both the uid and name of the application to be checked; this function will verify that these two match, and if not, return @B_android#app#AppOpsManager#MODE_IGNORED_E@. If this call succeeds, the last execution time of the operation for this app will be updated to the current time and the operation will be marked as \"running\". In this case you must later call @B_android#app#AppOpsManager#finishOp_E@ to report when the application is no longer performing the operation.", "history": "added in API level 19", "FullName": "public int startOp (String op, int uid, String packageName)"}, "checkPackage(int, java.lang.String)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [["@B_java#lang#SecurityException_E@", "if the package name doesn't belong to the given UID, or if ownership cannot be verified."]], "SeeAlso": [], "Permissions": [], "Description": "Do a quick check to validate if a package name belongs to a UID.", "history": "added in API level 19", "FullName": "public void checkPackage (int uid, String packageName)"}, "permissionToOp(java.lang.String)": {"Returns": [["@B_java#lang#String_E@", "The app op associated with the permission or null."]], "Parameters": [["@B_java#lang#String_E@", "String: The permission."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the app op name associated with a given permission. The app op name is one of the public constants defined in this class such as @B_android#app#AppOpsManager#OPSTR_COARSE_LOCATION_E@. This API is intended to be used for mapping runtime permissions to the corresponding app op.", "history": "Added in API level 23", "FullName": "public static String permissionToOp (String permission)"}, "noteOp(java.lang.String,int,java.lang.String)": {"Returns": [["int", "Returns @B_android#app#AppOpsManager#MODE_ALLOWED_E@ if the operation is allowed, or @B_android#app#AppOpsManager#MODE_IGNORED_E@ if it is not allowed and should be silently ignored (without causing the app to crash)."]], "Parameters": [["@B_java#lang#String_E@", "String: The operation to note. One of the OPSTR_* constants. This value must never be null."], ["int", "int: The user id of the application attempting to perform the operation."], ["@B_java#lang#String_E@", "String: The name of the application attempting to perform the operation. This value must never be null."]], "Throws": [["@B_java#lang#SecurityException_E@", "If the app has been configured to crash on this op."]], "SeeAlso": [], "Permissions": [], "Description": "Make note of an application performing an operation. Note that you must pass in both the uid and name of the application to be checked; this function will verify that these two match, and if not, return @B_android#app#AppOpsManager#MODE_IGNORED_E@. If this call succeeds, the last execution time of the operation for this app will be updated to the current time.", "history": "Added in API level 19", "FullName": "public int noteOp (String op, int uid, String packageName)"}, "noteOpNoThrow(java.lang.String,int,java.lang.String)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."], ["int", "int no parameter comment"], ["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Like @B_android#app#AppOpsManager#noteOp_E@ but instead of throwing a @B_java#lang#SecurityException_E@ it returns @B_android#app#AppOpsManager#MODE_ERRORED_E@.", "history": "Added in API level 19", "FullName": "public int noteOpNoThrow (String op, int uid, String packageName)"}, "noteProxyOp(java.lang.String,java.lang.String)": {"Returns": [["int", "Returns @B_android#app#AppOpsManager#MODE_ALLOWED_E@ if the operation is allowed, or @B_android#app#AppOpsManager#MODE_IGNORED_E@ if it is not allowed and should be silently ignored (without causing the app to crash)."]], "Parameters": [["@B_java#lang#String_E@", "String: The operation to note. One of the OPSTR_* constants. This value must never be null."], ["@B_java#lang#String_E@", "String: The name of the application calling into the proxy application. This value must never be null."]], "Throws": [["@B_java#lang#SecurityException_E@", "If the app has been configured to crash on this op."]], "SeeAlso": [], "Permissions": [], "Description": "Make note of an application performing an operation on behalf of another application when handling an IPC. Note that you must pass the package name of the application that is being proxied while its UID will be inferred from the IPC state; this function will verify that the calling uid and proxied package name match, and if not, return @B_android#app#AppOpsManager#MODE_IGNORED_E@. If this call succeeds, the last execution time of the operation for the proxied app and your app will be updated to the current time.", "history": "Added in API level 23", "FullName": "public int noteProxyOp (String op, String proxiedPackageName)"}, "startOp(java.lang.String,int,java.lang.String)": {"Returns": [["int", "Returns @B_android#app#AppOpsManager#MODE_ALLOWED_E@ if the operation is allowed, or @B_android#app#AppOpsManager#MODE_IGNORED_E@ if it is not allowed and should be silently ignored (without causing the app to crash)."]], "Parameters": [["@B_java#lang#String_E@", "String: The operation to start. One of the OPSTR_* constants. This value must never be null."], ["int", "int: The user id of the application attempting to perform the operation."], ["@B_java#lang#String_E@", "String: The name of the application attempting to perform the operation. This value must never be null."]], "Throws": [["@B_java#lang#SecurityException_E@", "If the app has been configured to crash on this op."]], "SeeAlso": [], "Permissions": [], "Description": "Report that an application has started executing a long-running operation. Note that you must pass in both the uid and name of the application to be checked; this function will verify that these two match, and if not, return @B_android#app#AppOpsManager#MODE_IGNORED_E@. If this call succeeds, the last execution time of the operation for this app will be updated to the current time and the operation will be marked as \"running\". In this case you must later call @B_android#app#AppOpsManager#finishOp_E@ to report when the application is no longer performing the operation.", "history": "Added in API level 19", "FullName": "public int startOp (String op, int uid, String packageName)"}, "finishOp(java.lang.String,int,java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."], ["int", "int no parameter comment"], ["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Report that an application is no longer performing an operation that had previously been started with @B_android#app#AppOpsManager#startOp_E@. There is no validation of input or result; the parameters supplied here must be the exact same ones previously passed in when starting the operation.", "history": "Added in API level 19", "FullName": "public void finishOp (String op, int uid, String packageName)"}, "noteProxyOp(java.lang.String, java.lang.String)": {"Returns": [["int", "Returns @B_android#app#AppOpsManager#MODE_ALLOWED_E@ if the operation is allowed, or @B_android#app#AppOpsManager#MODE_IGNORED_E@ if it is not allowed and should be silently ignored (without causing the app to crash)."]], "Parameters": [["@B_java#lang#String_E@", "String: The operation to note. One of the OPSTR_* constants."], ["@B_java#lang#String_E@", "String: The name of the application calling into the proxy application."]], "Throws": [["@B_java#lang#SecurityException_E@", "If the app has been configured to crash on this op."]], "SeeAlso": [], "Permissions": [], "Description": "Make note of an application performing an operation on behalf of another application when handling an IPC. Note that you must pass the package name of the application that is being proxied while its UID will be inferred from the IPC state; this function will verify that the calling uid and proxied package name match, and if not, return @B_android#app#AppOpsManager#MODE_IGNORED_E@. If this call succeeds, the last execution time of the operation for the proxied app and your app will be updated to the current time.", "history": "added in API level 23", "FullName": "public int noteProxyOp (String op, String proxiedPackageName)"}, "startWatchingMode(java.lang.String,java.lang.String,int,android.app.AppOpsManager.OnOpChangedListener)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The operation to monitor, one of OPSTR_*. This value must never be null."], ["@B_java#lang#String_E@", "String: The name of the application to monitor. This value may be null."], ["int", "int: Option flags: any combination of @B_android#app#AppOpsManager#WATCH_FOREGROUND_CHANGES_E@ or 0."], ["@B_android#app#AppOpsManager#OnOpChangedListener_E@", "AppOpsManager.OnOpChangedListener: Where to report changes. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Monitor for changes to the operating mode for the given op in the given app package. You can watch op changes only for your UID.", "history": "Added in API level 29", "FullName": "public void startWatchingMode (String op, String packageName, int flags, AppOpsManager.OnOpChangedListener callback)"}, "noteOp(java.lang.String, int, java.lang.String)": {"Returns": [["int", "Returns @B_android#app#AppOpsManager#MODE_ALLOWED_E@ if the operation is allowed, or @B_android#app#AppOpsManager#MODE_IGNORED_E@ if it is not allowed and should be silently ignored (without causing the app to crash)."]], "Parameters": [["@B_java#lang#String_E@", "String: The operation to note. One of the OPSTR_* constants."], ["int", "int: The user id of the application attempting to perform the operation."], ["@B_java#lang#String_E@", "String: The name of the application attempting to perform the operation."]], "Throws": [["@B_java#lang#SecurityException_E@", "If the app has been configured to crash on this op."]], "SeeAlso": [], "Permissions": [], "Description": "Make note of an application performing an operation. Note that you must pass in both the uid and name of the application to be checked; this function will verify that these two match, and if not, return @B_android#app#AppOpsManager#MODE_IGNORED_E@. If this call succeeds, the last execution time of the operation for this app will be updated to the current time.", "history": "added in API level 19", "FullName": "public int noteOp (String op, int uid, String packageName)"}, "unsafeCheckOpRawNoThrow(java.lang.String,int,java.lang.String)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."], ["int", "int no parameter comment"], ["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Like @B_android#app#AppOpsManager#unsafeCheckOpNoThrow_E@ but returns the raw mode associated with the op. Does not throw a security exception, does not translate @B_android#app#AppOpsManager#MODE_FOREGROUND_E@.", "history": "Added in API level 29", "FullName": "public int unsafeCheckOpRawNoThrow (String op, int uid, String packageName)"}, "checkPackage(int,java.lang.String)": {"Returns": [], "Parameters": [["int", "int no parameter comment"], ["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [["@B_java#lang#SecurityException_E@", "if the package name doesn't belong to the given UID, or if ownership cannot be verified."]], "SeeAlso": [], "Permissions": [], "Description": "Do a quick check to validate if a package name belongs to a UID.", "history": "Added in API level 19", "FullName": "public void checkPackage (int uid, String packageName)"}, "stopWatchingMode(android.app.AppOpsManager.OnOpChangedListener)": {"Returns": [], "Parameters": [["@B_android#app#AppOpsManager#OnOpChangedListener_E@", "AppOpsManager.OnOpChangedListener: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Stop monitoring that was previously started with @B_android#app#AppOpsManager#startWatchingMode_E@. All monitoring associated with this callback will be removed.", "history": "Added in API level 19", "FullName": "public void stopWatchingMode (AppOpsManager.OnOpChangedListener callback)"}, "checkOp(java.lang.String, int, java.lang.String)": {"Returns": [["int", "Returns @B_android#app#AppOpsManager#MODE_ALLOWED_E@ if the operation is allowed, or @B_android#app#AppOpsManager#MODE_IGNORED_E@ if it is not allowed and should be silently ignored (without causing the app to crash)."]], "Parameters": [["@B_java#lang#String_E@", "String: The operation to check. One of the OPSTR_* constants."], ["int", "int: The user id of the application attempting to perform the operation."], ["@B_java#lang#String_E@", "String: The name of the application attempting to perform the operation."]], "Throws": [["@B_java#lang#SecurityException_E@", "If the app has been configured to crash on this op."]], "SeeAlso": [], "Permissions": [], "Description": "Do a quick check for whether an application might be able to perform an operation. This is not a security check; you must use @B_android#app#AppOpsManager#noteOp_E@ or @B_android#app#AppOpsManager#startOp_E@ for your actual security checks, which also ensure that the given uid and package name are consistent. This function can just be used for a quick check to see if an operation has been disabled for the application, as an early reject of some work. This does not modify the time stamp or other data about the operation. Important things this will not do (which you need to ultimate use @B_android#app#AppOpsManager#noteOp_E@ or @B_android#app#AppOpsManager#startOp_E@ to cover): Verifying the uid and package are consistent, so callers can't spoof their identity. Taking into account the current foreground/background state of the app; apps whose mode varies by this state will always be reported as @B_android#app#AppOpsManager#MODE_ALLOWED_E@.", "history": "added in API level 19", "FullName": "public int checkOp (String op, int uid, String packageName)"}, "unsafeCheckOpNoThrow(java.lang.String,int,java.lang.String)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."], ["int", "int no parameter comment"], ["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Like @B_android#app#AppOpsManager#checkOp_E@ but instead of throwing a @B_java#lang#SecurityException_E@ it returns @B_android#app#AppOpsManager#MODE_ERRORED_E@.", "history": "Added in API level 29", "FullName": "public int unsafeCheckOpNoThrow (String op, int uid, String packageName)"}, "checkOp(java.lang.String,int,java.lang.String)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."], ["int", "int no parameter comment"], ["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Renamed to @B_android#app#AppOpsManager#unsafeCheckOp_E@.", "history": "Added in API level 19 Deprecated in API level 29", "FullName": "public int checkOp (String op, int uid, String packageName)"}, "checkOpNoThrow(java.lang.String,int,java.lang.String)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."], ["int", "int no parameter comment"], ["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Renamed to @B_android#app#AppOpsManager#unsafeCheckOpNoThrow_E@.", "history": "Added in API level 19 Deprecated in API level 29", "FullName": "public int checkOpNoThrow (String op, int uid, String packageName)"}, "noteProxyOpNoThrow(java.lang.String,java.lang.String)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: This value must never be null."], ["@B_java#lang#String_E@", "String: This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Like @B_android#app#AppOpsManager#noteProxyOp_E@ but instead of throwing a @B_java#lang#SecurityException_E@ it returns @B_android#app#AppOpsManager#MODE_ERRORED_E@. This API requires the package with the proxiedPackageName to belongs to @B_android#os#Binder#getCallingUid_E@.", "history": "Added in API level 23", "FullName": "public int noteProxyOpNoThrow (String op, String proxiedPackageName)"}, "startWatchingMode(java.lang.String,java.lang.String,android.app.AppOpsManager.OnOpChangedListener)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String: The operation to monitor, one of OPSTR_*. This value must never be null."], ["@B_java#lang#String_E@", "String: The name of the application to monitor. This value may be null."], ["@B_android#app#AppOpsManager#OnOpChangedListener_E@", "AppOpsManager.OnOpChangedListener: Where to report changes. This value must never be null."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Monitor for changes to the operating mode for the given op in the given app package. You can watch op changes only for your UID.", "history": "Added in API level 19", "FullName": "public void startWatchingMode (String op, String packageName, AppOpsManager.OnOpChangedListener callback)"}, "noteProxyOpNoThrow(java.lang.String,java.lang.String,int)": {"Returns": [["int", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String: The op to note This value must never be null."], ["@B_java#lang#String_E@", "String: The package to note the op for or null if the op should be noted for the \"android\" package This value may be null."], ["int", "int: The uid the package belongs to"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Like @B_android#app#AppOpsManager#noteProxyOpNoThrow_E@ but allows to specify the proxied uid. This API requires package with the proxiedPackageName to belong to proxiedUid.", "history": "Added in API level 29", "FullName": "public int noteProxyOpNoThrow (String op, String proxiedPackageName, int proxiedUid)"}}, "Inheritance": [], "ClassName": "android.app.AppOpsManager", "ClassDesc": "API for interacting with \"application operation\" tracking. This API is not generally intended for third party application developers; most features are only available to system applications."}