{"Functions": {"SQLiteDatabaseLockedException(java.lang.String)": {"Returns": [], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 11", "FullName": "public SQLiteDatabaseLockedException (String error)"}, "SQLiteDatabaseLockedException()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 11", "FullName": "public SQLiteDatabaseLockedException ()"}}, "Inheritance": ["@B_java#lang#Throwable_E@", "@B_java#lang#Exception_E@", "@B_java#lang#RuntimeException_E@", "@B_android#database#SQLException_E@", "@B_android#database#sqlite#SQLiteException_E@"], "ClassName": "android.database.sqlite.SQLiteDatabaseLockedException", "ClassDesc": "Thrown if the database engine was unable to acquire the database locks it needs to do its job. If the statement is a [COMMIT] or occurs outside of an explicit transaction, then you can retry the statement. If the statement is not a [COMMIT] and occurs within a explicit transaction then you should rollback the transaction before continuing."}