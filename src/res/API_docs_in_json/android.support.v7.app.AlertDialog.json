{"Functions": {"getListView()": {"Returns": [["@B_android#widget#ListView_E@", "The @B_android#widget#ListView_E@ from the dialog."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the list view used in the dialog.", "history": "added in version 23.0.0", "FullName": "ListView getListView ()"}, "setIconAttribute(int)": {"Returns": [], "Parameters": [["int", "int: ID of a theme attribute that points to a drawable resource."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets an icon as supplied by a theme attribute. e.g. android.R.attr.alertDialogIcon", "history": "added in version 23.0.0", "FullName": "void setIconAttribute (int attrId)"}, "onKeyUp(int, android.view.KeyEvent)": {"Returns": [["boolean", "If you handled the event, return true. If you want to allow the event to be handled by the next receiver, return false."]], "Parameters": [["int", "int: The value in event.getKeyCode()."], ["@B_android#view#KeyEvent_E@", "KeyEvent: Description of the key event."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "A key was released. The default implementation handles KEYCODE_BACK to close the dialog.", "history": "", "FullName": "boolean onKeyUp (int keyCode, KeyEvent event)"}, "onKeyDown(int, android.view.KeyEvent)": {"Returns": [["boolean", "If you handled the event, return true. If you want to allow the event to be handled by the next receiver, return false."]], "Parameters": [["int", "int: The value in event.getKeyCode()."], ["@B_android#view#KeyEvent_E@", "KeyEvent: Description of the key event."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "A key was pressed down. If the focused view didn't want this event, this method is called. The default implementation consumed the KEYCODE_BACK to later handle it in @B_android#app#Dialog#onKeyUp_E@.", "history": "", "FullName": "boolean onKeyDown (int keyCode, KeyEvent event)"}, "setView(android.view.View, int, int, int, int)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View: The view to show in the content area of the dialog"], ["int", "int: Extra space to appear to the left of view"], ["int", "int: Extra space to appear above view"], ["int", "int: Extra space to appear to the right of view"], ["int", "int: Extra space to appear below view"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the view to display in the dialog, specifying the spacing to appear around that view. This method has no effect if called after @B_android#app#Dialog#show_E@.", "history": "added in version 23.0.0", "FullName": "void setView (View view, int viewSpacingLeft, int viewSpacingTop, int viewSpacingRight, int viewSpacingBottom)"}, "setIcon(android.graphics.drawable.Drawable)": {"Returns": [], "Parameters": [["@B_android#graphics#drawable#Drawable_E@", "Drawable: Drawable to use as the icon or null if you don't want an icon."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the @B_android#graphics#drawable#Drawable_E@ to be used in the title.", "history": "added in version 23.0.0", "FullName": "void setIcon (Drawable icon)"}, "getButton(int)": {"Returns": [["@B_android#widget#Button_E@", "The button from the dialog, or null if a button does not exist."]], "Parameters": [["int", "int: The identifier of the button that should be returned. For example, this can be @B_android#content#DialogInterface#BUTTON_POSITIVE_E@."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets one of the buttons used in the dialog. Returns null if the specified button does not exist or the dialog has not yet been fully created (for example, via @B_android#app#Dialog#show_E@ or @B_android#app#Dialog#create_E@).", "history": "added in version 23.0.0", "FullName": "Button getButton (int whichButton)"}, "setCustomTitle(android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View no parameter comment"]], "Throws": [], "SeeAlso": ["@B_android#support#v7#app#AlertDialog#Builder#setCustomTitle_E@"], "Permissions": [], "Description": "This method has no effect if called after @B_android#app#Dialog#show_E@.", "history": "added in version 23.0.0", "FullName": "void setCustomTitle (View customTitleView)"}, "onCreate(android.os.Bundle)": {"Returns": [], "Parameters": [["@B_android#os#Bundle_E@", "Bundle: If this dialog is being reinitialized after a the hosting activity was previously shut down, holds the result from the most recent call to @B_android#app#Dialog#onSaveInstanceState_E@, or null if this is the first time."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Similar to @B_android#app#Activity#onCreate_E@, you should initialize your dialog in this method, including calling @B_android#app#Dialog#setContentView_E@.", "history": "", "FullName": "void onCreate (Bundle savedInstanceState)"}, "setView(android.view.View)": {"Returns": [], "Parameters": [["@B_android#view#View_E@", "View no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the view to display in the dialog. This method has no effect if called after @B_android#app#Dialog#show_E@.", "history": "added in version 23.0.0", "FullName": "void setView (View view)"}, "setTitle(java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: The new text to display in the title."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set the title text for this dialog's window.", "history": "", "FullName": "void setTitle (CharSequence title)"}, "AlertDialog(android.content.Context, int)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Construct an AlertDialog that uses an explicit theme. The actual style that an AlertDialog uses is a private implementation, however you can here supply either the name of an attribute in the theme from which to get the dialog's style (such as @B_android#support#v7#appcompat#R#attr#alertDialogTheme_E@.", "history": "added in version 23.0.0", "FullName": "AlertDialog (Context context, int themeResId)"}, "setMessage(java.lang.CharSequence)": {"Returns": [], "Parameters": [["@B_java#lang#CharSequence_E@", "CharSequence: The message to display in the dialog."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the message to display.", "history": "added in version 23.0.0", "FullName": "void setMessage (CharSequence message)"}, "AlertDialog(android.content.Context)": {"Returns": [], "Parameters": [["@B_android#content#Context_E@", "Context no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "added in version 23.0.0", "FullName": "AlertDialog (Context context)"}, "setIcon(int)": {"Returns": [], "Parameters": [["int", "int: the resourceId of the drawable to use as the icon or 0 if you don't want an icon."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Set resId to 0 if you don't want an icon.", "history": "added in version 23.0.0", "FullName": "void setIcon (int resId)"}}, "Inheritance": ["java.lang.Object", "https:##developer#android#com@B_android#app#Dialog_E@", "@B_android#support#v7#app#AppCompatDialog_E@"], "ClassName": "android.support.v7.app.AlertDialog", "ClassDesc": "A subclass of Dialog that can display one, two or three buttons. If you only want to display a String in this dialog box, use the setMessage() method. If you want to display a more complex view, look up the FrameLayout called \"custom\" and add your view to it: The AlertDialog class takes care of automatically setting https:##developer#android#com@B_android#view#WindowManager#LayoutParams#FLAG_ALT_FOCUSABLE_IM_E@ for you based on whether any views in the dialog return true from https:##developer#android#com@B_android#view#View#onCheckIsTextEditor_E@. Generally you want this set for a Dialog without text editors, so that it will be placed on top of the current input method UI. You can modify this behavior by forcing the flag to your desired mode after calling @B_android#support#v7#app#AlertDialog#onCreate_E@."}