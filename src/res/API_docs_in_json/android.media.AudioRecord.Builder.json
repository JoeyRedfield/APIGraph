{"Functions": {"AudioRecord.Builder()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Constructs a new Builder with the default values as described above.", "history": "Added in API level 23", "FullName": "public AudioRecord.Builder ()"}, "setAudioPlaybackCaptureConfig(android.media.AudioPlaybackCaptureConfiguration)": {"Returns": [["@B_android#media#AudioRecord#Builder_E@", "no returns description in source"]], "Parameters": [["@B_android#media#AudioPlaybackCaptureConfiguration_E@", "AudioPlaybackCaptureConfiguration: Defines what apps to record audio from (i.e., via either their uid or the type of audio). This value must never be null."]], "Throws": [["@B_java#lang#IllegalStateException_E@", "if called in conjunction with @B_android#media#AudioRecord#Builder#setAudioSource_E@."], ["@B_java#lang#NullPointerException_E@", "if config is null."]], "SeeAlso": [], "Permissions": [], "Description": "Sets the @B_android#media#AudioRecord_E@ to record audio played by other apps.", "history": "Added in API level 29", "FullName": "public AudioRecord.Builder setAudioPlaybackCaptureConfig (AudioPlaybackCaptureConfiguration config)"}, "setAudioSource(int)": {"Returns": [["@B_android#media#AudioRecord#Builder_E@", "the same Builder instance."]], "Parameters": [["int", "int: the audio source. See @B_android#media#MediaRecorder#AudioSource_E@ for the supported audio source definitions. Value is @B_android#media#MediaRecorder#AudioSource#DEFAULT_E@, @B_android#media#MediaRecorder#AudioSource#MIC_E@, @B_android#media#MediaRecorder#AudioSource#VOICE_UPLINK_E@, @B_android#media#MediaRecorder#AudioSource#VOICE_DOWNLINK_E@, @B_android#media#MediaRecorder#AudioSource#VOICE_CALL_E@, @B_android#media#MediaRecorder#AudioSource#CAMCORDER_E@, @B_android#media#MediaRecorder#AudioSource#VOICE_RECOGNITION_E@, @B_android#media#MediaRecorder#AudioSource#VOICE_COMMUNICATION_E@, @B_android#media#MediaRecorder#AudioSource#UNPROCESSED_E@, or @B_android#media#MediaRecorder#AudioSource#VOICE_PERFORMANCE_E@"]], "Throws": [["", "java.lang.IllegalArgumentException"], ["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public AudioRecord.Builder setAudioSource (int source)"}, "setAudioFormat(android.media.AudioFormat)": {"Returns": [["@B_android#media#AudioRecord#Builder_E@", "the same Builder instance."]], "Parameters": [["@B_android#media#AudioFormat_E@", "AudioFormat: a non-null @B_android#media#AudioFormat_E@ instance This value must never be null."]], "Throws": [["", "java.lang.IllegalArgumentException"], ["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Sets the format of the audio data to be captured.", "history": "Added in API level 23", "FullName": "public AudioRecord.Builder setAudioFormat (AudioFormat format)"}, "setBufferSizeInBytes(int)": {"Returns": [["@B_android#media#AudioRecord#Builder_E@", "the same Builder instance."]], "Parameters": [["int", "int: a value strictly greater than 0"]], "Throws": [["", "java.lang.IllegalArgumentException"], ["@B_java#lang#IllegalArgumentException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Sets the total size (in bytes) of the buffer where audio data is written during the recording. New audio data can be read from this buffer in smaller chunks than this size. See @B_android#media#AudioRecord#getMinBufferSize_E@ to determine the minimum required buffer size for the successful creation of an AudioRecord instance. Since bufferSizeInBytes may be internally increased to accommodate the source requirements, use @B_android#media#AudioRecord#getBufferSizeInFrames_E@ to determine the actual buffer size in frames.", "history": "Added in API level 23", "FullName": "public AudioRecord.Builder setBufferSizeInBytes (int bufferSizeInBytes)"}, "build()": {"Returns": [["@B_android#media#AudioRecord_E@", "a new @B_android#media#AudioRecord_E@ instance successfully initialized with all the parameters set on this Builder."]], "Parameters": [], "Throws": [["@B_java#lang#UnsupportedOperationException_E@", "if the parameters set on the Builder were incompatible, or if they are not supported by the device, or if the device was not available."]], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 23", "FullName": "public AudioRecord build ()"}}, "Inheritance": [], "ClassName": "android.media.AudioRecord.Builder", "ClassDesc": "Builder class for @B_android#media#AudioRecord_E@ objects. Use this class to configure and create an AudioRecord instance. By setting the recording source and audio format parameters, you indicate which of those vary from the default behavior on the device. Here is an example where Builder is used to specify all @B_android#media#AudioFormat_E@ parameters, to be used by a new AudioRecord instance: If the audio source is not set with @B_android#media#AudioRecord#Builder#setAudioSource_E@, @B_android#media#MediaRecorder#AudioSource#DEFAULT_E@ is used. If the audio format is not specified or is incomplete, its channel configuration will be @B_android#media#AudioFormat#CHANNEL_IN_MONO_E@, and the encoding will be @B_android#media#AudioFormat#ENCODING_PCM_16BIT_E@. The sample rate will depend on the device actually selected for capture and can be queried with @B_android#media#AudioRecord#getSampleRate_E@ method. If the buffer size is not specified with @B_android#media#AudioRecord#Builder#setBufferSizeInBytes_E@, the minimum buffer size for the source is used."}