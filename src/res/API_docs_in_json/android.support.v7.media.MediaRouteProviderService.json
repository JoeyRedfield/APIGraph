{"Functions": {"getMediaRouteProvider()": {"Returns": [["@B_android#support#v7#media#MediaRouteProvider_E@", "The media route provider offered by this service, or null if it has not yet been created."]], "Parameters": [], "Throws": [], "SeeAlso": ["@B_android#support#v7#media#MediaRouteProviderService#onCreateMediaRouteProvider_E@"], "Permissions": [], "Description": "Gets the media route provider offered by this service.", "history": "added in version 22.0.0", "FullName": "MediaRouteProvider getMediaRouteProvider ()"}, "MediaRouteProviderService()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a media route provider service.", "history": "added in version 22.0.0", "FullName": "MediaRouteProviderService ()"}, "onBind(android.content.Intent)": {"Returns": [["@B_android#os#IBinder_E@", "Return an IBinder through which clients can call on to the service."]], "Parameters": [["@B_android#content#Intent_E@", "Intent: The Intent that was used to bind to this service, as given to @B_android#content#Context#bindService_E@. Note that any extras that were included with the Intent at that point will not be seen here."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Return the communication channel to the service. May return null if clients can not bind to the service. The returned @B_android#os#IBinder_E@ is usually for a complex interface that has been Note that unlike other application components, calls on to the IBinder interface returned here may not happen on the main thread of the process. More information about the main thread can be found in", "history": "added in version 22.0.0", "FullName": "IBinder onBind (Intent intent)"}, "onCreateMediaRouteProvider()": {"Returns": [["@B_android#support#v7#media#MediaRouteProvider_E@", "The media route provider offered by this service, or null if this service has decided not to offer a media route provider."]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called by the system when it is time to create the media route provider.", "history": "added in version 22.0.0", "FullName": "MediaRouteProvider onCreateMediaRouteProvider ()"}, "onUnbind(android.content.Intent)": {"Returns": [["boolean", "Return true if you would like to have the service's @B_android#app#Service#onRebind_E@ method later called when new clients bind to it."]], "Parameters": [["@B_android#content#Intent_E@", "Intent: The Intent that was used to bind to this service, as given to @B_android#content#Context#bindService_E@. Note that any extras that were included with the Intent at that point will not be seen here."]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Called when all clients have disconnected from a particular interface published by the service. The default implementation does nothing and returns false.", "history": "", "FullName": "boolean onUnbind (Intent intent)"}}, "Inheritance": ["java.lang.Object", "https:##developer#android#com@B_android#content#Context_E@", "https:##developer#android#com@B_android#content#ContextWrapper_E@", "https:##developer#android#com@B_android#app#Service_E@"], "ClassName": "android.support.v7.media.MediaRouteProviderService", "ClassDesc": "Base class for media route provider services. A media router will bind to media route provider services when a callback is added via @B_android#support#v7#media#MediaRouter#addCallback_E@ with a discovery flag: @B_android#support#v7#media#MediaRouter#CALLBACK_FLAG_REQUEST_DISCOVERY_E@, @B_android#support#v7#media#MediaRouter#CALLBACK_FLAG_FORCE_DISCOVERY_E@, or @B_android#support#v7#media#MediaRouter#CALLBACK_FLAG_PERFORM_ACTIVE_SCAN_E@, and will unbind when the callback is removed via @B_android#support#v7#media#MediaRouter#removeCallback_E@. To implement your own media route provider service, extend this class and override the @B_android#support#v7#media#MediaRouteProviderService#onCreateMediaRouteProvider_E@ method to return an instance of your @B_android#support#v7#media#MediaRouteProvider_E@. Declare your media route provider service in your application manifest like this:"}