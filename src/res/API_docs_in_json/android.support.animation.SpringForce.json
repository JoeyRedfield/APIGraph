{"Functions": {"getDampingRatio()": {"Returns": [["float", "damping ratio of the spring"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the damping ratio of the spring.", "history": "added in version 25.3.0", "FullName": "float getDampingRatio ()"}, "getFinalPosition()": {"Returns": [["float", "rest position of the spring"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the rest position of the spring.", "history": "added in version 25.3.0", "FullName": "float getFinalPosition ()"}, "setStiffness(float)": {"Returns": [["@B_android#support#animation#SpringForce_E@", "the spring force that the given stiffness is set on"]], "Parameters": [["float", "float: non-negative stiffness constant of a springValue is 0.0 or greater."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the given spring stiffness is not positive"]], "SeeAlso": [], "Permissions": [], "Description": "Sets the stiffness of a spring. The more stiff a spring is, the more force it applies to the object attached when the spring is not at the final position. Default stiffness is @B_android#support#animation#SpringForce#STIFFNESS_MEDIUM_E@.", "history": "added in version 25.3.0", "FullName": "SpringForce setStiffness (float stiffness)"}, "getStiffness()": {"Returns": [["float", "the stiffness of the spring"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Gets the stiffness of the spring.", "history": "added in version 25.3.0", "FullName": "float getStiffness ()"}, "setDampingRatio(float)": {"Returns": [["@B_android#support#animation#SpringForce_E@", "the spring force that the given damping ratio is set on"]], "Parameters": [["float", "float: damping ratio of the spring, it should be non-negativeValue is 0.0 or greater."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if the is negative."]], "SeeAlso": [], "Permissions": [], "Description": "Spring damping ratio describes how oscillations in a system decay after a disturbance. When damping ratio > 1 (over-damped), the object will quickly return to the rest position without overshooting. If damping ratio equals to 1 (i.e. critically damped), the object will return to equilibrium within the shortest amount of time. When damping ratio is less than 1 (i.e. under-damped), the mass tends to overshoot, and return, and overshoot again. Without any damping (i.e. damping ratio = 0), the mass will oscillate forever. Default damping ratio is @B_android#support#animation#SpringForce#DAMPING_RATIO_MEDIUM_BOUNCY_E@.", "history": "added in version 25.3.0", "FullName": "SpringForce setDampingRatio (float dampingRatio)"}, "SpringForce()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a spring force. Note that final position of the spring must be set through @B_android#support#animation#SpringForce#setFinalPosition_E@ before the spring animation starts.", "history": "added in version 25.3.0", "FullName": "SpringForce ()"}, "SpringForce(float)": {"Returns": [], "Parameters": [["float", "float: final position of the spring when it reaches equilibrium"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Creates a spring with a given final rest position.", "history": "added in version 25.3.0", "FullName": "SpringForce (float finalPosition)"}, "setFinalPosition(float)": {"Returns": [["@B_android#support#animation#SpringForce_E@", "the spring force that the given final position is set on"]], "Parameters": [["float", "float: rest position of the spring"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Sets the rest position of the spring.", "history": "added in version 25.3.0", "FullName": "SpringForce setFinalPosition (float finalPosition)"}}, "Inheritance": ["java.lang.Object"], "ClassName": "android.support.animation.SpringForce", "ClassDesc": "Spring Force defines the characteristics of the spring being used in the animation. By configuring the stiffness and damping ratio, callers can create a spring with the look and feel suits their use case. Stiffness corresponds to the spring constant. The stiffer the spring is, the harder it is to stretch it, the faster it undergoes dampening. Spring damping ratio describes how oscillations in a system decay after a disturbance. When damping ratio > 1* (i.e. over-damped), the object will quickly return to the rest position without overshooting. If damping ratio equals to 1 (i.e. critically damped), the object will return to equilibrium within the shortest amount of time. When damping ratio is less than 1 (i.e. under-damped), the mass tends to overshoot, and return, and overshoot again. Without any damping (i.e. damping ratio = 0), the mass will oscillate forever."}