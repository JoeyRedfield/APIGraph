{"Functions": {"parse()": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""], ["@B_org#apache#http#HttpException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public HttpMessage parse ()"}, "parseHead(org.apache.http.io.SessionInputBuffer)": {"Returns": [], "Parameters": [], "Throws": [["@B_java#io#IOException_E@", ""], ["@B_org#apache#http#HttpException_E@", ""], ["@B_org#apache#http#ParseException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "protected abstract HttpMessage parseHead (SessionInputBuffer sessionBuffer)"}, "parseHeaders(org.apache.http.io.SessionInputBuffer, int, int, org.apache.http.message.LineParser)": {"Returns": [["", "array of HTTP headers"]], "Parameters": [["@B_org#apache#http#io#SessionInputBuffer_E@", "Session input buffer"], ["int", "maximum number of headers allowed. If the number of headers received from the data stream exceeds maxCount value, an IOException will be thrown. Setting this parameter to a negative value or zero will disable the check."], ["int", "maximum number of characters for a header line, including the continuation lines"]], "Throws": [["", "HttpException"], ["@B_java#io#IOException_E@", ""], ["@B_org#apache#http#HttpException_E@", ""]], "SeeAlso": [], "Permissions": [], "Description": "Parses HTTP headers from the data receiver stream according to the generic format as given in Section 3.1 of RFC 822, RFC-2616 Section 4 and 19.3.", "history": "Added in API level 1", "FullName": "public static Header[] parseHeaders (SessionInputBuffer inbuffer, int maxHeaderCount, int maxLineLen, LineParser parser)"}, "AbstractMessageParser(org.apache.http.io.SessionInputBuffer, org.apache.http.message.LineParser, org.apache.http.params.HttpParams)": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 1", "FullName": "public AbstractMessageParser (SessionInputBuffer buffer, LineParser parser, HttpParams params)"}}, "Inheritance": [], "ClassName": "org.apache.http.impl.io.AbstractMessageParser", "ClassDesc": "Please use @B_java#net#URL#openConnection_E@ instead. Please visit Message parser base class."}