{"Functions": {"setRange(int, int)": {"Returns": [], "Parameters": [["int", "int: first integer in the range to iterate"], ["int", "int: one more than the last integer in the range"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "thrown when attempting to set an illegal range. E.g limit <= start"]], "SeeAlso": [], "Permissions": [], "Description": "Restricts the range of integers to iterate and resets the iteration to begin at the index argument start. If setRange(start, end) is not performed before next(element) is called, the iteration will start from the integer index Integer.MIN_VALUE and end at Integer.MAX_VALUE. If this range is set outside the meaningful range specified by the implementation, next(element) will always return false.", "history": "added in API level 24", "FullName": "public abstract void setRange (int start, int limit)"}, "next(android.icu.util.ValueIterator.Element)": {"Returns": [["boolean", "true if we are not at the end of the iteration, false otherwise."]], "Parameters": [["@B_android#icu#util#ValueIterator#Element_E@", "ValueIterator.Element: for storing the result index and value"]], "Throws": [], "SeeAlso": ["@B_android#icu#util#ValueIterator#Element_E@"], "Permissions": [], "Description": "Returns the next result for this iteration and returns true if we are not at the end of the iteration, false otherwise. If this returns a false, the contents of elements will not be updated.", "history": "Added in API level 24", "FullName": "public abstract boolean next (ValueIterator.Element element)"}, "setRange(int,int)": {"Returns": [], "Parameters": [["int", "int: first integer in the range to iterate"], ["int", "int: one more than the last integer in the range"]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "thrown when attempting to set an illegal range. E.g limit <= start"]], "SeeAlso": [], "Permissions": [], "Description": "Restricts the range of integers to iterate and resets the iteration to begin at the index argument start. If setRange(start, end) is not performed before next(element) is called, the iteration will start from the integer index Integer.MIN_VALUE and end at Integer.MAX_VALUE. If this range is set outside the meaningful range specified by the implementation, next(element) will always return false.", "history": "Added in API level 24", "FullName": "public abstract void setRange (int start, int limit)"}, "reset()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Resets the iterator to start iterating from the integer index Integer.MIN_VALUE or X if a setRange(X, Y) has been called previously.", "history": "Added in API level 24", "FullName": "public abstract void reset ()"}}, "Inheritance": [], "ClassName": "android.icu.util.ValueIterator", "ClassDesc": "Interface for enabling iteration over sets of <int, Object>, where int is the sorted integer index in ascending order, and Object its associated value. The ValueIterator allows iterations over integer indexes in the range of Integer.MIN_VALUE to Integer.MAX_VALUE inclusive. Implementations of ValueIterator should specify their own maximum subrange within the above range that is meaningful to its applications. Most implementations will be created by factory methods, such as the character name iterator in UCharacter.getNameIterator. See example below. Example of use:"}