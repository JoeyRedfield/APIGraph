{"Functions": {"createFromProfileLevel(java.lang.String, int, int)": {"Returns": [["@B_android#media#MediaCodecInfo#CodecCapabilities_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the codec capabilities for a certain mime type, profile and level. If the type, or profile-level combination is not understood by the framework, it returns null. In @B_android#os#Build#VERSION_CODES#M_E@, calling this method without calling any method of the @B_android#media#MediaCodecList_E@ class beforehand results in a @B_java#lang#NullPointerException_E@.", "history": "added in API level 21", "FullName": "public static MediaCodecInfo.CodecCapabilities createFromProfileLevel (String mime, int profile, int level)"}, "isFormatSupported(android.media.MediaFormat)": {"Returns": [["boolean", "whether the codec capabilities support the given format and feature requests."]], "Parameters": [["@B_android#media#MediaFormat_E@", "MediaFormat: media format with optional feature directives."]], "Throws": [["@B_java#lang#IllegalArgumentException_E@", "if format is not a valid media format."]], "SeeAlso": [], "Permissions": [], "Description": "Query whether codec supports a given @B_android#media#MediaFormat_E@. @B_android#os#Build#VERSION_CODES#LOLLIPOP_E@, format must not contain a format.setString(MediaFormat.KEY_FRAME_RATE, null) to clear any existing frame rate setting in the format. The following table summarizes the format keys considered by this method.", "history": "Added in API level 21", "FullName": "public boolean isFormatSupported (MediaFormat format)"}, "createFromProfileLevel(java.lang.String,int,int)": {"Returns": [["@B_android#media#MediaCodecInfo#CodecCapabilities_E@", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"], ["int", "int no parameter comment"], ["int", "int no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Retrieve the codec capabilities for a certain mime type, profile and level. If the type, or profile-level combination is not understood by the framework, it returns null. In @B_android#os#Build#VERSION_CODES#M_E@, calling this method without calling any method of the @B_android#media#MediaCodecList_E@ class beforehand results in a @B_java#lang#NullPointerException_E@.", "history": "Added in API level 21", "FullName": "public static MediaCodecInfo.CodecCapabilities createFromProfileLevel (String mime, int profile, int level)"}, "isFeatureSupported(java.lang.String)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Query codec feature capabilities. These features are supported to be used by the codec. These include optional features that can be turned on, as well as features that are always on.", "history": "Added in API level 19", "FullName": "public boolean isFeatureSupported (String name)"}, "getDefaultFormat()": {"Returns": [["@B_android#media#MediaFormat_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns a MediaFormat object with default values for configurations that have defaults.", "history": "Added in API level 21", "FullName": "public MediaFormat getDefaultFormat ()"}, "MediaCodecInfo.CodecCapabilities()": {"Returns": [], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "", "history": "Added in API level 16", "FullName": "public MediaCodecInfo.CodecCapabilities ()"}, "isFeatureRequired(java.lang.String)": {"Returns": [["boolean", "no returns description in source"]], "Parameters": [["@B_java#lang#String_E@", "String no parameter comment"]], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Query codec feature requirements. These features are required to be used by the codec, and as such, they are always turned on.", "history": "Added in API level 21", "FullName": "public boolean isFeatureRequired (String name)"}, "getAudioCapabilities()": {"Returns": [["@B_android#media#MediaCodecInfo#AudioCapabilities_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the audio capabilities or null if this is not an audio codec.", "history": "Added in API level 21", "FullName": "public MediaCodecInfo.AudioCapabilities getAudioCapabilities ()"}, "getMaxSupportedInstances()": {"Returns": [["int", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the max number of the supported concurrent codec instances. This is a hint for an upper bound. Applications should not expect to successfully operate more instances than the returned value, but the actual number of concurrently operable instances may be less as it depends on the available resources at time of use.", "history": "Added in API level 23", "FullName": "public int getMaxSupportedInstances ()"}, "getVideoCapabilities()": {"Returns": [["@B_android#media#MediaCodecInfo#VideoCapabilities_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the video capabilities or null if this is not a video codec.", "history": "Added in API level 21", "FullName": "public MediaCodecInfo.VideoCapabilities getVideoCapabilities ()"}, "getMimeType()": {"Returns": [["@B_java#lang#String_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the mime type for which this codec-capability object was created.", "history": "Added in API level 21", "FullName": "public String getMimeType ()"}, "getEncoderCapabilities()": {"Returns": [["@B_android#media#MediaCodecInfo#EncoderCapabilities_E@", "no returns description in source"]], "Parameters": [], "Throws": [], "SeeAlso": [], "Permissions": [], "Description": "Returns the encoding capabilities or null if this is not an encoder.", "history": "Added in API level 21", "FullName": "public MediaCodecInfo.EncoderCapabilities getEncoderCapabilities ()"}}, "Inheritance": [], "ClassName": "android.media.MediaCodecInfo.CodecCapabilities", "ClassDesc": "Encapsulates the capabilities of a given codec component. For example, what profile/level combinations it supports and what colorspaces it is capable of providing the decoded data in, as well as some codec-type specific capability flags. You can get an instance for a given @B_android#media#MediaCodecInfo_E@ object with @B_android#media#MediaCodecInfo#getCapabilitiesForType_E@, passing a MIME type."}